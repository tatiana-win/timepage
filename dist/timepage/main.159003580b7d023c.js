'use strict';
(self.webpackChunktimepage = self.webpackChunktimepage || []).push([
  [179],
  {
    568: (Pt, Re, D) => {
      D.r(Re), D.d(Re, { AuthModule: () => a });
      var s = D(6895),
        x = D(8252),
        L = D(4006);
      class ne {
        constructor($t, et, pt) {
          (this.name = $t), (this.description = et), (this.rules = pt);
        }
      }
      const ve = /^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/,
        ue = {
          LOGIN: [L.kI.required, L.kI.minLength(6)],
          PASS: [L.kI.required, L.kI.minLength(6)],
          EMAIL: [L.kI.pattern(ve)],
          EMAIL_REQUIRED: [L.kI.required, L.kI.pattern(ve)],
        },
        ce = ['dirty'],
        le = {
          required: new ne('required', 'Required field', [...ce]),
          email: new ne('pattern', 'Email is incorrect', [...ce]),
          repass: new ne('repass', "Passwords don't match", ['dirty']),
          minLength: ft =>
            new ne('minlength', `Minimal length is ${ft} symbols`, [...ce]),
          maxLength: ft =>
            new ne('maxlength', `Maximum length of ${ft} symbols is exceeded`, [
              ...ce,
            ]),
          pattern: ft =>
            new ne('pattern', `Field must satisfy to pattern: ${ft}`, [...ce]),
        },
        fe = {
          LOGIN: [le.required, le.minLength(6)],
          EMAIL: [le.email],
          EMAIL_REQUIRED: [le.required, le.email],
          PASS: [le.required, le.minLength(6)],
          REPASS: [
            le.required,
            le.pattern('\u0441\u0442\u0440\u043e\u043a\u0438'),
            le.repass,
          ],
        };
      function re(ft) {
        const { pass: $t, repass: et } = ft.controls;
        return (
          $t.value && et.value && $t.value !== et.value
            ? et.setErrors({ repass: !0, ...et.errors })
            : et.errors &&
              'repass' in et.errors &&
              et.setErrors(
                Object.keys(et.errors).length > 0 ? et.errors : null,
              ),
          null
        );
      }
      var Ne = D(6054),
        He = D(1831);
      const ct = ft => ft.auth,
        vt = (0, He.P1)(ct, ft => ft.loading),
        Be = (0, He.P1)(ct, ft => ft.registrationLogin),
        _t = (0, He.P1)(ct, ft => ft.isAuth),
        lt = (0, He.P1)(ct, ft => ft.error);
      var bt = D(9300),
        W = D(4650),
        se = D(7009),
        ie = D(9549),
        X = D(4144),
        Ae = D(4859);
      function Qe(ft, $t) {
        if ((1 & ft && (W.TgZ(0, 'span', 3), W._uU(1), W.qZA()), 2 & ft)) {
          const et = W.oxw().$implicit;
          W.xp6(1), W.hij(' ', et.description, ' ');
        }
      }
      function ut(ft, $t) {
        if (
          (1 & ft && (W.ynx(0), W.YNc(1, Qe, 2, 1, 'span', 2), W.BQk()), 2 & ft)
        ) {
          const et = $t.$implicit,
            pt = W.oxw();
          W.xp6(1),
            W.Q6J(
              'ngIf',
              pt.control.hasError(et.name) && pt.isRulesApplied(et),
            );
        }
      }
      let Ut = (() => {
        class ft {
          isRulesApplied(et) {
            return et.rules.every(pt => this.control[pt]);
          }
        }
        return (
          (ft.ɵfac = function (et) {
            return new (et || ft)();
          }),
          (ft.ɵcmp = W.Xpm({
            type: ft,
            selectors: [['app-input-error']],
            inputs: { form: 'form', control: 'control', errors: 'errors' },
            decls: 2,
            vars: 2,
            consts: [
              [1, 'error', 3, 'formGroup'],
              [4, 'ngFor', 'ngForOf'],
              ['class', 'error', 4, 'ngIf'],
              [1, 'error'],
            ],
            template: function (et, pt) {
              1 & et &&
                (W.ynx(0, 0), W.YNc(1, ut, 2, 1, 'ng-container', 1), W.BQk()),
                2 & et &&
                  (W.Q6J('formGroup', pt.form),
                  W.xp6(1),
                  W.Q6J('ngForOf', pt.errors));
            },
            dependencies: [s.sg, s.O5, L.JL, L.sg],
            styles: [
              '[_nghost-%COMP%]{display:block;margin-bottom:11px;margin-top:-22px;height:14px}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{font-size:11px;color:#e00052}',
            ],
          })),
          ft
        );
      })();
      const Mt = [
        {
          path: 'signup',
          component: (() => {
            class ft {
              constructor(et, pt, Wt, pn) {
                (this.fb = et),
                  (this.store = pt),
                  (this.router = Wt),
                  (this.snackBar = pn),
                  (this.loading = !1),
                  (this.regForm = this.fb.group(
                    {
                      username: ['', ue.LOGIN],
                      email: ['', ue.EMAIL_REQUIRED],
                      pass: ['', ue.PASS],
                      repass: ['', ue.PASS],
                    },
                    { validators: re, updateOn: 'change' },
                  )),
                  (this.errors = {
                    username: fe.LOGIN,
                    email: fe.EMAIL_REQUIRED,
                    pass: fe.PASS,
                    repass: fe.REPASS,
                  }),
                  (this.loadingSubscription = this.store
                    .select(vt)
                    .subscribe(Sn => (this.loading = Sn))),
                  (this.registrationSubscrption = this.store
                    .select(Be)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(() => {
                      this.snackBar.open(
                        'Account has been successfully created',
                        void 0,
                        { duration: 3e3 },
                      ),
                        this.router.navigate(['/auth/signin']);
                    })),
                  (this.errorSubscription = this.store
                    .select(lt)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(Sn => {
                      this.snackBar.open(Sn, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, Ne.E)()),
                  this.loadingSubscription.unsubscribe(),
                  this.registrationSubscrption.unsubscribe(),
                  this.errorSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.regForm.invalid;
              }
              onRegistration() {
                const {
                  username: et,
                  email: pt,
                  pass: Wt,
                } = this.regForm.value;
                et &&
                  pt &&
                  Wt &&
                  this.store.dispatch(
                    (0, Ne.y1)({ username: et, email: pt, password: Wt }),
                  );
              }
            }
            return (
              (ft.ɵfac = function (et) {
                return new (et || ft)(
                  W.Y36(L.qu),
                  W.Y36(He.yh),
                  W.Y36(x.F0),
                  W.Y36(se.ux),
                );
              }),
              (ft.ɵcmp = W.Xpm({
                type: ft,
                selectors: [['app-signup']],
                decls: 32,
                vars: 18,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'data-testid',
                    'username-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'email',
                    'data-testid',
                    'email',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'email-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'password-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'repass',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'repass-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signup',
                    1,
                    'signup-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'signup-block'],
                  [
                    'routerLink',
                    '/auth/signin',
                    'data-testid',
                    'signin',
                    1,
                    'signup-login',
                    'link',
                  ],
                ],
                template: function (et, pt) {
                  1 & et &&
                    (W.TgZ(0, 'div', 0)(1, 'header', 1),
                    W._uU(2, 'Sign Up'),
                    W.qZA(),
                    W.TgZ(3, 'form', 2),
                    W.NdJ('keydown.enter', function () {
                      return !pt.isDisabled && pt.onRegistration();
                    }),
                    W.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    W._uU(6, 'Username'),
                    W.qZA(),
                    W._UZ(7, 'input', 3),
                    W.qZA(),
                    W._UZ(8, 'app-input-error', 4),
                    W.TgZ(9, 'mat-form-field')(10, 'mat-label'),
                    W._uU(11, 'Email'),
                    W.qZA(),
                    W._UZ(12, 'input', 5),
                    W.qZA(),
                    W._UZ(13, 'app-input-error', 6),
                    W.TgZ(14, 'mat-form-field')(15, 'mat-label'),
                    W._uU(16, 'Password'),
                    W.qZA(),
                    W._UZ(17, 'input', 7),
                    W.qZA(),
                    W._UZ(18, 'app-input-error', 8),
                    W.TgZ(19, 'mat-form-field')(20, 'mat-label'),
                    W._uU(21, 'Repeat password'),
                    W.qZA(),
                    W._UZ(22, 'input', 9),
                    W.qZA(),
                    W._UZ(23, 'app-input-error', 10),
                    W.TgZ(24, 'button', 11),
                    W.NdJ('click', function () {
                      return pt.onRegistration();
                    }),
                    W._uU(25, ' Sign Up '),
                    W.qZA(),
                    W._UZ(26, 'div', 12),
                    W.TgZ(27, 'div', 13)(28, 'span'),
                    W._uU(29, 'Do you have an account?'),
                    W.qZA(),
                    W.TgZ(30, 'a', 14),
                    W._uU(31, 'Sign In'),
                    W.qZA()()()()),
                    2 & et &&
                      (W.xp6(3),
                      W.Q6J('formGroup', pt.regForm),
                      W.xp6(4),
                      W.Q6J('formControl', pt.regForm.controls.username),
                      W.xp6(1),
                      W.Q6J('form', pt.regForm)(
                        'control',
                        pt.regForm.controls.username,
                      )('errors', pt.errors.username),
                      W.xp6(4),
                      W.Q6J('formControl', pt.regForm.controls.email),
                      W.xp6(1),
                      W.Q6J('form', pt.regForm)(
                        'control',
                        pt.regForm.controls.email,
                      )('errors', pt.errors.email),
                      W.xp6(4),
                      W.Q6J('formControl', pt.regForm.controls.pass),
                      W.xp6(1),
                      W.Q6J('form', pt.regForm)(
                        'control',
                        pt.regForm.controls.pass,
                      )('errors', pt.errors.pass),
                      W.xp6(4),
                      W.Q6J('formControl', pt.regForm.controls.repass),
                      W.xp6(1),
                      W.Q6J('form', pt.regForm)(
                        'control',
                        pt.regForm.controls.repass,
                      )('errors', pt.errors.repass),
                      W.xp6(1),
                      W.Q6J('disabled', pt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ie.KE,
                  ie.hX,
                  X.Nt,
                  Ae.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                  Ut,
                ],
                styles: [
                  '.signup-button[_ngcontent-%COMP%]{display:flex}.signup-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.signup-login[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              ft
            );
          })(),
        },
        {
          path: 'signin',
          component: (() => {
            class ft {
              constructor(et, pt, Wt, pn) {
                (this.fb = et),
                  (this.store = pt),
                  (this.router = Wt),
                  (this.snackBar = pn),
                  (this.loading = !1),
                  (this.logInForm = this.fb.group({
                    username: ['', [L.kI.required]],
                    pass: ['', [L.kI.required]],
                  })),
                  (this.loadingSubscription = this.store
                    .select(vt)
                    .subscribe(Sn => (this.loading = Sn))),
                  (this.errorSubscription = this.store
                    .select(lt)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(Sn => {
                      this.snackBar.open(Sn, void 0, { duration: 5e3 });
                    })),
                  (this.isAuthSubscription = this.store
                    .select(_t)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(() => {
                      this.router.navigate(['/calendar']);
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, Ne.DH)()),
                  this.errorSubscription.unsubscribe(),
                  this.loadingSubscription.unsubscribe(),
                  this.isAuthSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.logInForm.invalid;
              }
              onLogin() {
                const { username: et, pass: pt } = this.logInForm.value;
                et &&
                  pt &&
                  this.store.dispatch(
                    (0, Ne.zB)({ username: et, password: pt }),
                  );
              }
            }
            return (
              (ft.ɵfac = function (et) {
                return new (et || ft)(
                  W.Y36(L.qu),
                  W.Y36(He.yh),
                  W.Y36(x.F0),
                  W.Y36(se.ux),
                );
              }),
              (ft.ɵcmp = W.Xpm({
                type: ft,
                selectors: [['app-signin']],
                decls: 20,
                vars: 4,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signin',
                    1,
                    'login-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'login-block'],
                  [
                    'routerLink',
                    '/auth/signup',
                    'data-testid',
                    'signup',
                    1,
                    'login-registration',
                    'link',
                  ],
                ],
                template: function (et, pt) {
                  1 & et &&
                    (W.TgZ(0, 'div', 0)(1, 'header', 1),
                    W._uU(2, 'Sign In'),
                    W.qZA(),
                    W.TgZ(3, 'form', 2),
                    W.NdJ('keydown.enter', function () {
                      return !pt.isDisabled && pt.onLogin();
                    }),
                    W.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    W._uU(6, 'Username'),
                    W.qZA(),
                    W._UZ(7, 'input', 3),
                    W.qZA(),
                    W.TgZ(8, 'mat-form-field')(9, 'mat-label'),
                    W._uU(10, 'Password'),
                    W.qZA(),
                    W._UZ(11, 'input', 4),
                    W.qZA(),
                    W.TgZ(12, 'button', 5),
                    W.NdJ('click', function () {
                      return pt.onLogin();
                    }),
                    W._uU(13, ' Sign In '),
                    W.qZA(),
                    W._UZ(14, 'div', 6),
                    W.TgZ(15, 'div', 7)(16, 'span'),
                    W._uU(17, "Don't have an account?"),
                    W.qZA(),
                    W.TgZ(18, 'a', 8),
                    W._uU(19, 'Sign Up'),
                    W.qZA()()()()),
                    2 & et &&
                      (W.xp6(3),
                      W.Q6J('formGroup', pt.logInForm),
                      W.xp6(4),
                      W.Q6J('formControl', pt.logInForm.controls.username),
                      W.xp6(4),
                      W.Q6J('formControl', pt.logInForm.controls.pass),
                      W.xp6(1),
                      W.Q6J('disabled', pt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ie.KE,
                  ie.hX,
                  X.Nt,
                  Ae.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                ],
                styles: [
                  '.login-button[_ngcontent-%COMP%]{display:flex}.login-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.login-registration[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              ft
            );
          })(),
        },
      ];
      let $e = (() => {
        class ft {}
        return (
          (ft.ɵfac = function (et) {
            return new (et || ft)();
          }),
          (ft.ɵmod = W.oAB({ type: ft })),
          (ft.ɵinj = W.cJS({ imports: [x.Bz.forChild(Mt), x.Bz] })),
          ft
        );
      })();
      var ze = D(2542),
        be = D(8776),
        Ue = D(4004),
        Ce = D(9646),
        Pe = D(6129),
        Le = D(262);
      let Ye = (() => {
        class ft {
          constructor(et, pt) {
            (this.actions$ = et),
              (this.authService = pt),
              (this.signUp$ = (0, be.GW)(() =>
                this.actions$.pipe(
                  (0, be.l4)(Ne.y1.type),
                  (0, Pe.z)(({ username: Wt, email: pn, password: Sn }) =>
                    this.authService.register(Wt, pn, Sn).pipe(
                      (0, Ue.U)(() => (0, Ne.pV)({ login: Wt })),
                      (0, Le.K)(Tn =>
                        (0, Ce.of)(
                          (0, Ne.wq)({
                            error: Tn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.login$ = (0, be.GW)(() =>
                this.actions$.pipe(
                  (0, be.l4)(Ne.zB.type),
                  (0, Pe.z)(({ username: Wt, password: pn }) =>
                    this.authService.login(Wt, pn).pipe(
                      (0, Ue.U)(() => (0, Ne.he)()),
                      (0, Le.K)(Sn =>
                        (0, Ce.of)(
                          (0, Ne.wq)({
                            error: Sn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.logout$ = (0, be.GW)(() =>
                this.actions$.pipe(
                  (0, be.l4)(Ne.kS.type),
                  (0, Pe.z)(() =>
                    this.authService.logout().pipe(
                      (0, Ue.U)(() => (0, Ne.wq)({ error: '' })),
                      (0, Le.K)(Wt =>
                        (0, Ce.of)(
                          (0, Ne.wq)({
                            error: Wt?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (ft.ɵfac = function (et) {
            return new (et || ft)(W.LFG(be.eX), W.LFG(ze.e));
          }),
          (ft.ɵprov = W.Yz7({ token: ft, factory: ft.ɵfac })),
          ft
        );
      })();
      const We = (0, He.Lq)(
        { loading: !1, registrationLogin: '', isAuth: !1 },
        (0, He.on)(Ne.y1, ft => ({ ...ft, error: void 0, loading: !0 })),
        (0, He.on)(Ne.zB, ft => ({ ...ft, error: void 0, loading: !0 })),
        (0, He.on)(Ne.wq, (ft, { error: $t }) => ({
          ...ft,
          error: $t,
          loading: !1,
        })),
        (0, He.on)(Ne.pV, (ft, { login: $t }) => ({
          ...ft,
          error: void 0,
          loading: !1,
          registrationLogin: $t,
        })),
        (0, He.on)(Ne.he, ft => ({
          ...ft,
          error: void 0,
          loading: !1,
          isAuth: !0,
        })),
        (0, He.on)(Ne.E, ft => ({
          ...ft,
          error: void 0,
          loading: !1,
          registrationLogin: '',
        })),
        (0, He.on)(Ne.DH, ft => ({
          ...ft,
          error: void 0,
          loading: !1,
          isAuth: !1,
        })),
      );
      var Gt = D(529);
      let mt = (() => {
        class ft {}
        return (
          (ft.ɵfac = function (et) {
            return new (et || ft)();
          }),
          (ft.ɵmod = W.oAB({ type: ft })),
          (ft.ɵinj = W.cJS({ imports: [s.ez, L.u5, L.UX, ie.lN, X.c] })),
          ft
        );
      })();
      var nn = D(3238);
      let a = (() => {
        class ft {}
        return (
          (ft.ɵfac = function (et) {
            return new (et || ft)();
          }),
          (ft.ɵmod = W.oAB({ type: ft })),
          (ft.ɵinj = W.cJS({
            providers: [ze.e, { provide: nn.rD, useClass: nn.hu }],
            imports: [
              s.ez,
              $e,
              ie.lN,
              X.c,
              Ae.ot,
              L.u5,
              L.UX,
              be.sQ.forFeature([Ye]),
              He.Aw.forFeature('auth', We),
              Gt.JF,
              se.ZX,
              mt,
            ],
          })),
          ft
        );
      })();
    },
    2542: (Pt, Re, D) => {
      D.d(Re, { e: () => ue });
      var s = D(529),
        x = D(4004),
        L = D(3835),
        ne = D(4650),
        te = D(8252),
        de = D(1622);
      const ve = { headers: new s.WM({ 'Content-Type': 'application/json' }) };
      let ue = (() => {
        class ce {
          constructor(fe, re, Ne) {
            (this.http = fe), (this.router = re), (this.tokenService = Ne);
          }
          register(fe, re, Ne) {
            return this.http.post(
              `${L.k.apiUrl}/auth/signup`,
              { username: fe, email: re, password: Ne },
              ve,
            );
          }
          login(fe, re) {
            return this.http
              .post(
                `${L.k.apiUrl}/auth/signin`,
                { username: fe, password: re },
                ve,
              )
              .pipe(
                (0, x.U)(
                  ({ accessToken: Ne }) => (this.tokenService.setToken(Ne), Ne),
                ),
              );
          }
          logout() {
            return this.http.post(`${L.k.apiUrl}/auth/signout`, {}).pipe(
              (0, x.U)(() => {
                this.tokenService.resetToken(),
                  this.router.navigate(['/auth/signin']);
              }),
            );
          }
        }
        return (
          (ce.ɵfac = function (fe) {
            return new (fe || ce)(ne.LFG(s.eN), ne.LFG(te.F0), ne.LFG(de.B));
          }),
          (ce.ɵprov = ne.Yz7({
            token: ce,
            factory: ce.ɵfac,
            providedIn: 'root',
          })),
          ce
        );
      })();
    },
    6054: (Pt, Re, D) => {
      D.d(Re, {
        DH: () => ue,
        E: () => ve,
        he: () => de,
        kS: () => ce,
        pV: () => te,
        wq: () => ne,
        y1: () => L,
        zB: () => x,
      });
      var s = D(1831);
      const x = (0, s.PH)('[Auth] SignIn', (0, s.Ky)()),
        L = (0, s.PH)('[Auth] SignUp', (0, s.Ky)()),
        ne = (0, s.PH)('[Auth] Error', (0, s.Ky)()),
        te = (0, s.PH)('[Auth] Register Success', (0, s.Ky)()),
        de = (0, s.PH)('[Auth] Login Success'),
        ve = (0, s.PH)('[Auth] Clear Registration Login'),
        ue = (0, s.PH)('[Auth] Clear Auth'),
        ce = (0, s.PH)('[Auth] Logout');
    },
    147: (Pt, Re, D) => {
      D.r(Re), D.d(Re, { CalendarModule: () => uu });
      var s = D(6895),
        x = D(8252),
        L = D(1831);
      const ne = (0, L.PH)('[Calendar] Load Calendar Notes', (0, L.Ky)()),
        te = (0, L.PH)('[Calendar] Load Todo Notes'),
        de = (0, L.PH)('[Calendar] Calendar Notes Loaded', (0, L.Ky)()),
        ve = (0, L.PH)('[Calendar] Todo Notes Loaded', (0, L.Ky)()),
        ue = (0, L.PH)('[Calendar] Load Notes Error', (0, L.Ky)()),
        ce = (0, L.PH)('[Calendar] Create Note', (0, L.Ky)()),
        le = (0, L.PH)('[Calendar] Update Note', (0, L.Ky)()),
        fe = (0, L.PH)('[Calendar] Delete Note', (0, L.Ky)()),
        re = (0, L.PH)('[Calendar] Delete Note For Date', (0, L.Ky)()),
        Ne = (0, L.PH)('[Calendar] Request Succeded'),
        He = (0, L.PH)('[Calendar] Reset Request Succeded'),
        ct = (0, L.PH)('[Calendar] Update Min Rows Count', (0, L.Ky)()),
        vt = (0, L.PH)('[Calendar] Complete Note', (0, L.Ky)()),
        Be = (0, L.PH)('[Calendar] Revert Note Completion', (0, L.Ky)()),
        _t = g => {
          const R = g.getDay() > 0 ? g.getDay() - 1 : 6,
            r = new Date(g);
          return r.setDate(g.getDate() - R), r;
        },
        lt = g => {
          const R = _t(g),
            r = new Date(R);
          return r.setDate(R.getDate() + 6), r;
        },
        bt = (g, R) => {
          const r = new Date(g);
          return r.setDate(g.getDate() - R), r;
        },
        W = (g, R) => {
          const r = new Date(g);
          return r.setDate(g.getDate() + R), r;
        },
        X = [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        Ae = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        Qe = g => (g < 10 ? `0${g}` : g),
        ut = g =>
          new Date(
            `${g.getFullYear()}-${Qe(g.getMonth() + 1)}-${Qe(
              g.getDate(),
            )}:00:00:00`,
          ).toISOString(),
        Ut = g =>
          new Date(
            `${g.getFullYear()}-${Qe(g.getMonth() + 1)}-${Qe(
              g.getDate(),
            )}:23:59:59`,
          ).toISOString(),
        Yt = g => `${Qe(g.getDate())}.${Qe(g.getMonth() + 1)}`,
        $e = (g, R) =>
          new Date(
            `${g.getFullYear()}-${Qe(g.getMonth() + 1)}-${Qe(g.getDate())}T${
              R ?? '00:00'
            }:10`,
          ).toISOString(),
        ze = g => `${Qe(g.getHours())}:${Qe(g.getMinutes())}`;
      var be = D(9300);
      const Ue = g => g.calendar,
        Le =
          ((0, L.P1)(Ue, g => g.loading),
          (0, L.P1)(Ue, g => g.calendarNotes),
          (0, L.P1)(Ue, g => g.todoNotes)),
        Ye = (0, L.P1)(Ue, g => g.error),
        We =
          ((0, L.P1)(Ue, g => g.loaded), (0, L.P1)(Ue, g => g.requestSuccess)),
        Gt = (0, L.P1)(Ue, (g, R) => g.calendarNotes && g.calendarNotes[R]),
        mt = (0, L.P1)(Ue, g => g.minRowsCount);
      var nn = D(6054),
        a = D(4650),
        ft = D(7009),
        $t = D(4859),
        et = D(3238),
        pt = D(1281),
        Wt = D(9646),
        pn = D(2843),
        Sn = D(4128),
        Tn = D(727),
        dn = D(8505),
        kt = D(4004),
        En = D(262),
        at = D(8746),
        Y = D(3099),
        ee = D(5698),
        Me = D(529),
        je = D(1481);
      const De = ['*'];
      let ye;
      function ke(g) {
        return (
          (function H() {
            if (void 0 === ye && ((ye = null), typeof window < 'u')) {
              const g = window;
              void 0 !== g.trustedTypes &&
                (ye = g.trustedTypes.createPolicy('angular#components', {
                  createHTML: R => R,
                }));
            }
            return ye;
          })()?.createHTML(g) || g
        );
      }
      function he(g) {
        return Error(`Unable to find icon with the name "${g}"`);
      }
      function pe(g) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${g}".`,
        );
      }
      function nt(g) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${g}".`,
        );
      }
      class wt {
        constructor(R, r, c) {
          (this.url = R), (this.svgText = r), (this.options = c);
        }
      }
      let Ot = (() => {
        class g {
          constructor(r, c, _, k) {
            (this._httpClient = r),
              (this._sanitizer = c),
              (this._errorHandler = k),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                'material-icons',
                'mat-ligature-font',
              ]),
              (this._document = _);
          }
          addSvgIcon(r, c, _) {
            return this.addSvgIconInNamespace('', r, c, _);
          }
          addSvgIconLiteral(r, c, _) {
            return this.addSvgIconLiteralInNamespace('', r, c, _);
          }
          addSvgIconInNamespace(r, c, _, k) {
            return this._addSvgIconConfig(r, c, new wt(_, null, k));
          }
          addSvgIconResolver(r) {
            return this._resolvers.push(r), this;
          }
          addSvgIconLiteralInNamespace(r, c, _, k) {
            const me = this._sanitizer.sanitize(a.q3G.HTML, _);
            if (!me) throw nt(_);
            const st = ke(me);
            return this._addSvgIconConfig(r, c, new wt('', st, k));
          }
          addSvgIconSet(r, c) {
            return this.addSvgIconSetInNamespace('', r, c);
          }
          addSvgIconSetLiteral(r, c) {
            return this.addSvgIconSetLiteralInNamespace('', r, c);
          }
          addSvgIconSetInNamespace(r, c, _) {
            return this._addSvgIconSetConfig(r, new wt(c, null, _));
          }
          addSvgIconSetLiteralInNamespace(r, c, _) {
            const k = this._sanitizer.sanitize(a.q3G.HTML, c);
            if (!k) throw nt(c);
            const me = ke(k);
            return this._addSvgIconSetConfig(r, new wt('', me, _));
          }
          registerFontClassAlias(r, c = r) {
            return this._fontCssClassesByAlias.set(r, c), this;
          }
          classNameForFontAlias(r) {
            return this._fontCssClassesByAlias.get(r) || r;
          }
          setDefaultFontSetClass(...r) {
            return (this._defaultFontSetClass = r), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(r) {
            const c = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, r);
            if (!c) throw pe(r);
            const _ = this._cachedIconsByUrl.get(c);
            return _
              ? (0, Wt.of)(yt(_))
              : this._loadSvgIconFromConfig(new wt(r, null)).pipe(
                  (0, dn.b)(k => this._cachedIconsByUrl.set(c, k)),
                  (0, kt.U)(k => yt(k)),
                );
          }
          getNamedSvgIcon(r, c = '') {
            const _ = Je(c, r);
            let k = this._svgIconConfigs.get(_);
            if (k) return this._getSvgFromConfig(k);
            if (((k = this._getIconConfigFromResolvers(c, r)), k))
              return this._svgIconConfigs.set(_, k), this._getSvgFromConfig(k);
            const me = this._iconSetConfigs.get(c);
            return me
              ? this._getSvgFromIconSetConfigs(r, me)
              : (0, pn._)(he(_));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(r) {
            return r.svgText
              ? (0, Wt.of)(yt(this._svgElementFromConfig(r)))
              : this._loadSvgIconFromConfig(r).pipe((0, kt.U)(c => yt(c)));
          }
          _getSvgFromIconSetConfigs(r, c) {
            const _ = this._extractIconWithNameFromAnySet(r, c);
            if (_) return (0, Wt.of)(_);
            const k = c
              .filter(me => !me.svgText)
              .map(me =>
                this._loadSvgIconSetFromConfig(me).pipe(
                  (0, En.K)(st => {
                    const An = `Loading icon set URL: ${this._sanitizer.sanitize(
                      a.q3G.RESOURCE_URL,
                      me.url,
                    )} failed: ${st.message}`;
                    return (
                      this._errorHandler.handleError(new Error(An)),
                      (0, Wt.of)(null)
                    );
                  }),
                ),
              );
            return (0, Sn.D)(k).pipe(
              (0, kt.U)(() => {
                const me = this._extractIconWithNameFromAnySet(r, c);
                if (!me) throw he(r);
                return me;
              }),
            );
          }
          _extractIconWithNameFromAnySet(r, c) {
            for (let _ = c.length - 1; _ >= 0; _--) {
              const k = c[_];
              if (k.svgText && k.svgText.toString().indexOf(r) > -1) {
                const me = this._svgElementFromConfig(k),
                  st = this._extractSvgIconFromSet(me, r, k.options);
                if (st) return st;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(r) {
            return this._fetchIcon(r).pipe(
              (0, dn.b)(c => (r.svgText = c)),
              (0, kt.U)(() => this._svgElementFromConfig(r)),
            );
          }
          _loadSvgIconSetFromConfig(r) {
            return r.svgText
              ? (0, Wt.of)(null)
              : this._fetchIcon(r).pipe((0, dn.b)(c => (r.svgText = c)));
          }
          _extractSvgIconFromSet(r, c, _) {
            const k = r.querySelector(`[id="${c}"]`);
            if (!k) return null;
            const me = k.cloneNode(!0);
            if ((me.removeAttribute('id'), 'svg' === me.nodeName.toLowerCase()))
              return this._setSvgAttributes(me, _);
            if ('symbol' === me.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(me), _);
            const st = this._svgElementFromString(ke('<svg></svg>'));
            return st.appendChild(me), this._setSvgAttributes(st, _);
          }
          _svgElementFromString(r) {
            const c = this._document.createElement('DIV');
            c.innerHTML = r;
            const _ = c.querySelector('svg');
            if (!_) throw Error('<svg> tag not found');
            return _;
          }
          _toSvgElement(r) {
            const c = this._svgElementFromString(ke('<svg></svg>')),
              _ = r.attributes;
            for (let k = 0; k < _.length; k++) {
              const { name: me, value: st } = _[k];
              'id' !== me && c.setAttribute(me, st);
            }
            for (let k = 0; k < r.childNodes.length; k++)
              r.childNodes[k].nodeType === this._document.ELEMENT_NODE &&
                c.appendChild(r.childNodes[k].cloneNode(!0));
            return c;
          }
          _setSvgAttributes(r, c) {
            return (
              r.setAttribute('fit', ''),
              r.setAttribute('height', '100%'),
              r.setAttribute('width', '100%'),
              r.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              r.setAttribute('focusable', 'false'),
              c && c.viewBox && r.setAttribute('viewBox', c.viewBox),
              r
            );
          }
          _fetchIcon(r) {
            const { url: c, options: _ } = r,
              k = _?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function ge() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.',
                );
              })();
            if (null == c) throw Error(`Cannot fetch icon from URL "${c}".`);
            const me = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, c);
            if (!me) throw pe(c);
            const st = this._inProgressUrlFetches.get(me);
            if (st) return st;
            const Jt = this._httpClient
              .get(me, { responseType: 'text', withCredentials: k })
              .pipe(
                (0, kt.U)(An => ke(An)),
                (0, at.x)(() => this._inProgressUrlFetches.delete(me)),
                (0, Y.B)(),
              );
            return this._inProgressUrlFetches.set(me, Jt), Jt;
          }
          _addSvgIconConfig(r, c, _) {
            return this._svgIconConfigs.set(Je(r, c), _), this;
          }
          _addSvgIconSetConfig(r, c) {
            const _ = this._iconSetConfigs.get(r);
            return _ ? _.push(c) : this._iconSetConfigs.set(r, [c]), this;
          }
          _svgElementFromConfig(r) {
            if (!r.svgElement) {
              const c = this._svgElementFromString(r.svgText);
              this._setSvgAttributes(c, r.options), (r.svgElement = c);
            }
            return r.svgElement;
          }
          _getIconConfigFromResolvers(r, c) {
            for (let _ = 0; _ < this._resolvers.length; _++) {
              const k = this._resolvers[_](c, r);
              if (k)
                return At(k) ? new wt(k.url, null, k.options) : new wt(k, null);
            }
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.LFG(Me.eN, 8),
              a.LFG(je.H7),
              a.LFG(s.K0, 8),
              a.LFG(a.qLn),
            );
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      function yt(g) {
        return g.cloneNode(!0);
      }
      function Je(g, R) {
        return g + ':' + R;
      }
      function At(g) {
        return !(!g.url || !g.options);
      }
      const Te = (0, et.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        ),
        F = new a.OlP('MAT_ICON_DEFAULT_OPTIONS'),
        b = new a.OlP('mat-icon-location', {
          providedIn: 'root',
          factory: function M() {
            const g = (0, a.f3M)(s.K0),
              R = g ? g.location : null;
            return { getPathname: () => (R ? R.pathname + R.search : '') };
          },
        }),
        G = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        Q = G.map(g => `[${g}]`).join(', '),
        Xe = /^url\(['"]?#(.*?)['"]?\)$/;
      let St = (() => {
          class g extends Te {
            get inline() {
              return this._inline;
            }
            set inline(r) {
              this._inline = (0, pt.Ig)(r);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(r) {
              r !== this._svgIcon &&
                (r
                  ? this._updateSvgIcon(r)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = r));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontSet &&
                ((this._fontSet = c), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontIcon &&
                ((this._fontIcon = c), this._updateFontIconClasses());
            }
            constructor(r, c, _, k, me, st) {
              super(r),
                (this._iconRegistry = c),
                (this._location = k),
                (this._errorHandler = me),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = Tn.w0.EMPTY),
                st &&
                  (st.color && (this.color = this.defaultColor = st.color),
                  st.fontSet && (this.fontSet = st.fontSet)),
                _ || r.nativeElement.setAttribute('aria-hidden', 'true');
            }
            _splitIconName(r) {
              if (!r) return ['', ''];
              const c = r.split(':');
              switch (c.length) {
                case 1:
                  return ['', c[0]];
                case 2:
                  return c;
                default:
                  throw Error(`Invalid icon name: "${r}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const r = this._elementsWithExternalReferences;
              if (r && r.size) {
                const c = this._location.getPathname();
                c !== this._previousPath &&
                  ((this._previousPath = c), this._prependPathToReferences(c));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(r) {
              this._clearSvgElement();
              const c = this._location.getPathname();
              (this._previousPath = c),
                this._cacheChildrenWithExternalReferences(r),
                this._prependPathToReferences(c),
                this._elementRef.nativeElement.appendChild(r);
            }
            _clearSvgElement() {
              const r = this._elementRef.nativeElement;
              let c = r.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                c--;

              ) {
                const _ = r.childNodes[c];
                (1 !== _.nodeType || 'svg' === _.nodeName.toLowerCase()) &&
                  _.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const r = this._elementRef.nativeElement,
                c = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter(_ => _.length > 0);
              this._previousFontSetClass.forEach(_ => r.classList.remove(_)),
                c.forEach(_ => r.classList.add(_)),
                (this._previousFontSetClass = c),
                this.fontIcon !== this._previousFontIconClass &&
                  !c.includes('mat-ligature-font') &&
                  (this._previousFontIconClass &&
                    r.classList.remove(this._previousFontIconClass),
                  this.fontIcon && r.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(r) {
              return 'string' == typeof r ? r.trim().split(' ')[0] : r;
            }
            _prependPathToReferences(r) {
              const c = this._elementsWithExternalReferences;
              c &&
                c.forEach((_, k) => {
                  _.forEach(me => {
                    k.setAttribute(me.name, `url('${r}#${me.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(r) {
              const c = r.querySelectorAll(Q),
                _ = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let k = 0; k < c.length; k++)
                G.forEach(me => {
                  const st = c[k],
                    Jt = st.getAttribute(me),
                    An = Jt ? Jt.match(Xe) : null;
                  if (An) {
                    let Gn = _.get(st);
                    Gn || ((Gn = []), _.set(st, Gn)),
                      Gn.push({ name: me, value: An[1] });
                  }
                });
            }
            _updateSvgIcon(r) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                r)
              ) {
                const [c, _] = this._splitIconName(r);
                c && (this._svgNamespace = c),
                  _ && (this._svgName = _),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(_, c)
                    .pipe((0, ee.q)(1))
                    .subscribe(
                      k => this._setSvgElement(k),
                      k => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${c}:${_}! ${k.message}`,
                          ),
                        );
                      },
                    ));
              }
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(Ot),
                a.$8M('aria-hidden'),
                a.Y36(b),
                a.Y36(a.qLn),
                a.Y36(F, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 8,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.uIk(
                    'data-mat-icon-type',
                    c._usingFontIcon() ? 'font' : 'svg',
                  )('data-mat-icon-name', c._svgName || c.fontIcon)(
                    'data-mat-icon-namespace',
                    c._svgNamespace || c.fontSet,
                  )('fontIcon', c._usingFontIcon() ? c.fontIcon : null),
                  a.ekj('mat-icon-inline', c.inline)(
                    'mat-icon-no-color',
                    'primary' !== c.color &&
                      'accent' !== c.color &&
                      'warn' !== c.color,
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [a.qOj],
              ngContentSelectors: De,
              decls: 1,
              vars: 0,
              template: function (r, c) {
                1 & r && (a.F$t(), a.Hsn(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        rn = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({ imports: [et.BQ, et.BQ] })),
            g
          );
        })();
      var Rt = D(2687),
        tt = D(9521),
        Kt = D(7579),
        Ie = D(6451),
        xe = D(3101),
        Z = D(8675),
        we = D(3900),
        rt = D(2722),
        Bt = D(4986),
        qt = D(7272),
        Cn = D(8502),
        Zn = D(9718),
        ki = D(5577),
        yi = D(8421);
      function ir(g, R) {
        return R
          ? r => (0, qt.z)(R.pipe((0, ee.q)(1), (0, Cn.l)()), r.pipe(ir(g)))
          : (0, ki.z)((r, c) =>
              (0, yi.Xf)(g(r, c)).pipe((0, ee.q)(1), (0, Zn.h)(r)),
            );
      }
      var Vr = D(5963);
      function Qn(g, R = Bt.z) {
        const r = (0, Vr.H)(g, R);
        return ir(() => r);
      }
      var $n = D(4080),
        jt = D(7340),
        vn = D(445),
        gn = D(8184),
        Kn = D(3353),
        ei = D(44);
      const Di = ['mat-menu-item', ''];
      function qr(g, R) {
        1 & g && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'polygon', 4), a.qZA());
      }
      const Vi = [[['mat-icon'], ['', 'matMenuItemIcon', '']], '*'],
        ur = ['mat-icon, [matMenuItemIcon]', '*'];
      function di(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'div', 0),
            a.NdJ('keydown', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._handleKeydown(_));
            })('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.closed.emit('click'));
            })('@transformMenu.start', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._onAnimationStart(_));
            })('@transformMenu.done', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._onAnimationDone(_));
            }),
            a.TgZ(1, 'div', 1),
            a.Hsn(2),
            a.qZA()();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('id', r.panelId)('ngClass', r._classList)(
            '@transformMenu',
            r._panelAnimationState,
          ),
            a.uIk('aria-label', r.ariaLabel || null)(
              'aria-labelledby',
              r.ariaLabelledby || null,
            )('aria-describedby', r.ariaDescribedby || null);
        }
      }
      const zt = ['*'],
        un = new a.OlP('MAT_MENU_PANEL'),
        Un = (0, et.Kr)((0, et.Id)(class {}));
      let ti = (() => {
        class g extends Un {
          constructor(r, c, _, k, me) {
            super(),
              (this._elementRef = r),
              (this._document = c),
              (this._focusMonitor = _),
              (this._parentMenu = k),
              (this._changeDetectorRef = me),
              (this.role = 'menuitem'),
              (this._hovered = new Kt.x()),
              (this._focused = new Kt.x()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              k?.addItem?.(this);
          }
          focus(r, c) {
            this._focusMonitor && r
              ? this._focusMonitor.focusVia(this._getHostElement(), r, c)
              : this._getHostElement().focus(c),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(r) {
            this.disabled && (r.preventDefault(), r.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const r = this._elementRef.nativeElement.cloneNode(!0),
              c = r.querySelectorAll('mat-icon, .material-icons');
            for (let _ = 0; _ < c.length; _++) c[_].remove();
            return r.textContent?.trim() || '';
          }
          _setHighlighted(r) {
            (this._highlighted = r), this._changeDetectorRef?.markForCheck();
          }
          _setTriggersSubmenu(r) {
            (this._triggersSubmenu = r),
              this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(s.K0),
              a.Y36(Rt.tE),
              a.Y36(un, 8),
              a.Y36(a.sBO),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [
              1,
              'mat-mdc-menu-item',
              'mat-mdc-focus-indicator',
              'mdc-list-item',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              1 & r &&
                a.NdJ('click', function (k) {
                  return c._checkDisabled(k);
                })('mouseenter', function () {
                  return c._handleMouseEnter();
                }),
                2 & r &&
                  (a.uIk('role', c.role)('tabindex', c._getTabIndex())(
                    'aria-disabled',
                    c.disabled,
                  )('disabled', c.disabled || null),
                  a.ekj('mat-mdc-menu-item-highlighted', c._highlighted)(
                    'mat-mdc-menu-item-submenu-trigger',
                    c._triggersSubmenu,
                  ));
            },
            inputs: {
              disabled: 'disabled',
              disableRipple: 'disableRipple',
              role: 'role',
            },
            exportAs: ['matMenuItem'],
            features: [a.qOj],
            attrs: Di,
            ngContentSelectors: ur,
            decls: 5,
            vars: 3,
            consts: [
              [1, 'mdc-list-item__primary-text'],
              [
                'matRipple',
                '',
                1,
                'mat-mdc-menu-ripple',
                3,
                'matRippleDisabled',
                'matRippleTrigger',
              ],
              [
                'class',
                'mat-mdc-menu-submenu-icon',
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                4,
                'ngIf',
              ],
              [
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                1,
                'mat-mdc-menu-submenu-icon',
              ],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.F$t(Vi),
                a.Hsn(0),
                a.TgZ(1, 'span', 0),
                a.Hsn(2, 1),
                a.qZA(),
                a._UZ(3, 'div', 1),
                a.YNc(4, qr, 2, 0, 'svg', 2)),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('matRippleDisabled', c.disableRipple || c.disabled)(
                    'matRippleTrigger',
                    c._getHostElement(),
                  ),
                  a.xp6(1),
                  a.Q6J('ngIf', c._triggersSubmenu));
            },
            dependencies: [s.O5, et.wG],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const wn = new a.OlP('MatMenuContent'),
        fn = {
          transformMenu: (0, jt.X$)('transformMenu', [
            (0, jt.SB)(
              'void',
              (0, jt.oB)({ opacity: 0, transform: 'scale(0.8)' }),
            ),
            (0, jt.eR)(
              'void => enter',
              (0, jt.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, jt.oB)({ opacity: 1, transform: 'scale(1)' }),
              ),
            ),
            (0, jt.eR)(
              '* => void',
              (0, jt.jt)('100ms 25ms linear', (0, jt.oB)({ opacity: 0 })),
            ),
          ]),
          fadeInItems: (0, jt.X$)('fadeInItems', [
            (0, jt.SB)('showing', (0, jt.oB)({ opacity: 1 })),
            (0, jt.eR)('void => *', [
              (0, jt.oB)({ opacity: 0 }),
              (0, jt.jt)('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        };
      let yr = 0;
      const xi = new a.OlP('mat-menu-default-options', {
        providedIn: 'root',
        factory: function ri() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let Pi = (() => {
          class g {
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(r) {
              (this._xPosition = r), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(r) {
              (this._yPosition = r), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(r) {
              this._overlapTrigger = (0, pt.Ig)(r);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(r) {
              this._hasBackdrop = (0, pt.Ig)(r);
            }
            set panelClass(r) {
              const c = this._previousPanelClass;
              c &&
                c.length &&
                c.split(' ').forEach(_ => {
                  this._classList[_] = !1;
                }),
                (this._previousPanelClass = r),
                r &&
                  r.length &&
                  (r.split(' ').forEach(_ => {
                    this._classList[_] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(r) {
              this.panelClass = r;
            }
            constructor(r, c, _, k) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._defaultOptions = _),
                (this._changeDetectorRef = k),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new a.n_E()),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new Kt.x()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new a.vpe()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + yr++);
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new Rt.Em(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit('tab'),
                ),
                this._directDescendantItems.changes
                  .pipe(
                    (0, Z.O)(this._directDescendantItems),
                    (0, we.w)(r => (0, Ie.T)(...r.map(c => c._focused))),
                  )
                  .subscribe(r => this._keyManager.updateActiveItem(r)),
                this._directDescendantItems.changes.subscribe(r => {
                  const c = this._keyManager;
                  if (
                    'enter' === this._panelAnimationState &&
                    c.activeItem?._hasFocus()
                  ) {
                    const _ = r.toArray(),
                      k = Math.max(
                        0,
                        Math.min(_.length - 1, c.activeItemIndex || 0),
                      );
                    _[k] && !_[k].disabled
                      ? c.setActiveItem(k)
                      : c.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._directDescendantItems.destroy(),
                this.closed.complete(),
                this._firstItemFocusSubscription?.unsubscribe();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                (0, Z.O)(this._directDescendantItems),
                (0, we.w)(c => (0, Ie.T)(...c.map(_ => _._hovered))),
              );
            }
            addItem(r) {}
            removeItem(r) {}
            _handleKeydown(r) {
              const c = r.keyCode,
                _ = this._keyManager;
              switch (c) {
                case tt.hY:
                  (0, tt.Vb)(r) ||
                    (r.preventDefault(), this.closed.emit('keydown'));
                  break;
                case tt.oh:
                  this.parentMenu &&
                    'ltr' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                case tt.SV:
                  this.parentMenu &&
                    'rtl' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                default:
                  return (
                    (c === tt.LH || c === tt.JH) &&
                      _.setFocusOrigin('keyboard'),
                    void _.onKeydown(r)
                  );
              }
              r.stopPropagation();
            }
            focusFirstItem(r = 'program') {
              this._firstItemFocusSubscription?.unsubscribe(),
                (this._firstItemFocusSubscription = this._ngZone.onStable
                  .pipe((0, ee.q)(1))
                  .subscribe(() => {
                    let c = null;
                    if (
                      (this._directDescendantItems.length &&
                        (c = this._directDescendantItems.first
                          ._getHostElement()
                          .closest('[role="menu"]')),
                      !c || !c.contains(document.activeElement))
                    ) {
                      const _ = this._keyManager;
                      _.setFocusOrigin(r).setFirstItemActive(),
                        !_.activeItem && c && c.focus();
                    }
                  }));
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(r) {
              const c = Math.min(this._baseElevation + r, 24),
                _ = `${this._elevationPrefix}${c}`,
                k = Object.keys(this._classList).find(me =>
                  me.startsWith(this._elevationPrefix),
                );
              (!k || k === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[_] = !0),
                (this._previousElevation = _));
            }
            setPositionClasses(r = this.xPosition, c = this.yPosition) {
              const _ = this._classList;
              (_['mat-menu-before'] = 'before' === r),
                (_['mat-menu-after'] = 'after' === r),
                (_['mat-menu-above'] = 'above' === c),
                (_['mat-menu-below'] = 'below' === c),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(r) {
              this._animationDone.next(r), (this._isAnimating = !1);
            }
            _onAnimationStart(r) {
              (this._isAnimating = !0),
                'enter' === r.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (r.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes
                .pipe((0, Z.O)(this._allItems))
                .subscribe(r => {
                  this._directDescendantItems.reset(
                    r.filter(c => c._parentMenu === this),
                  ),
                    this._directDescendantItems.notifyOnChanges();
                });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(xi),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              contentQueries: function (r, c, _) {
                if (
                  (1 & r && (a.Suo(_, wn, 5), a.Suo(_, ti, 5), a.Suo(_, ti, 4)),
                  2 & r)
                ) {
                  let k;
                  a.iGM((k = a.CRH())) && (c.lazyContent = k.first),
                    a.iGM((k = a.CRH())) && (c._allItems = k),
                    a.iGM((k = a.CRH())) && (c.items = k);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(a.Rgc, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.templateRef = _.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            g
          );
        })(),
        Ni = (() => {
          class g extends Pi {
            constructor(r, c, _, k) {
              super(r, c, _, k),
                (this._elevationPrefix = 'mat-elevation-z'),
                (this._baseElevation = 8);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(xi),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (r, c) {
                2 & r &&
                  a.uIk('aria-label', null)('aria-labelledby', null)(
                    'aria-describedby',
                    null,
                  );
              },
              exportAs: ['matMenu'],
              features: [a._Bn([{ provide: un, useExisting: g }]), a.qOj],
              ngContentSelectors: zt,
              decls: 1,
              vars: 0,
              consts: [
                [
                  'tabindex',
                  '-1',
                  'role',
                  'menu',
                  1,
                  'mat-mdc-menu-panel',
                  'mdc-menu-surface',
                  'mdc-menu-surface--open',
                  'mat-mdc-elevation-specific',
                  3,
                  'id',
                  'ngClass',
                  'keydown',
                  'click',
                ],
                [1, 'mat-mdc-menu-content', 'mdc-list'],
              ],
              template: function (r, c) {
                1 & r && (a.F$t(), a.YNc(0, di, 3, 6, 'ng-template'));
              },
              dependencies: [s.mk],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;position:relative}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item.mdc-list-item{align-items:center}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item .mdc-list-item__primary-text{white-space:normal}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [fn.transformMenu, fn.fadeInItems] },
              changeDetection: 0,
            })),
            g
          );
        })();
      const Li = new a.OlP('mat-menu-scroll-strategy'),
        fr = {
          provide: Li,
          deps: [gn.aV],
          useFactory: function hr(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        Hn = (0, Kn.i$)({ passive: !0 });
      let Zi = (() => {
          class g {
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(r) {
              this.menu = r;
            }
            get menu() {
              return this._menu;
            }
            set menu(r) {
              r !== this._menu &&
                ((this._menu = r),
                this._menuCloseSubscription.unsubscribe(),
                r &&
                  (this._menuCloseSubscription = r.close.subscribe(c => {
                    this._destroyMenu(c),
                      ('click' === c || 'tab' === c) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(c);
                  })),
                this._menuItemInstance?._setTriggersSubmenu(
                  this.triggersSubmenu(),
                ));
            }
            constructor(r, c, _, k, me, st, Jt, An, Gn) {
              (this._overlay = r),
                (this._element = c),
                (this._viewContainerRef = _),
                (this._menuItemInstance = st),
                (this._dir = Jt),
                (this._focusMonitor = An),
                (this._ngZone = Gn),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Tn.w0.EMPTY),
                (this._hoverSubscription = Tn.w0.EMPTY),
                (this._menuCloseSubscription = Tn.w0.EMPTY),
                (this._changeDetectorRef = (0, a.f3M)(a.sBO)),
                (this._handleTouchStart = Ii => {
                  (0, Rt.yG)(Ii) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new a.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new a.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = k),
                (this._parentMaterialMenu = me instanceof Pi ? me : void 0),
                c.nativeElement.addEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Hn,
                );
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Hn,
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !!(
                this._menuItemInstance &&
                this._parentMaterialMenu &&
                this.menu
              );
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const r = this.menu;
              if (this._menuOpen || !r) return;
              const c = this._createOverlay(r),
                _ = c.getConfig(),
                k = _.positionStrategy;
              this._setPosition(r, k),
                (_.hasBackdrop =
                  null == r.hasBackdrop
                    ? !this.triggersSubmenu()
                    : r.hasBackdrop),
                c.attach(this._getPortal(r)),
                r.lazyContent && r.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(r),
                r instanceof Pi &&
                  (r._startAnimation(),
                  r._directDescendantItems.changes
                    .pipe((0, rt.R)(r.close))
                    .subscribe(() => {
                      k.withLockedPosition(!1).reapplyLastPosition(),
                        k.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(r, c) {
              this._focusMonitor && r
                ? this._focusMonitor.focusVia(this._element, r, c)
                : this._element.nativeElement.focus(c);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(r) {
              if (!this._overlayRef || !this.menuOpen) return;
              const c = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === r ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                c instanceof Pi
                  ? (c._resetAnimation(),
                    c.lazyContent
                      ? c._animationDone
                          .pipe(
                            (0, be.h)(_ => 'void' === _.toState),
                            (0, ee.q)(1),
                            (0, rt.R)(c.lazyContent._attached),
                          )
                          .subscribe({
                            next: () => c.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), c?.lazyContent?.detach());
            }
            _initMenu(r) {
              (r.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (r.direction = this.dir),
                this._setMenuElevation(r),
                r.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(r) {
              if (r.setElevation) {
                let c = 0,
                  _ = r.parentMenu;
                for (; _; ) c++, (_ = _.parentMenu);
                r.setElevation(c);
              }
            }
            _setIsMenuOpen(r) {
              r !== this._menuOpen &&
                ((this._menuOpen = r),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(r),
                this._changeDetectorRef.markForCheck());
            }
            _createOverlay(r) {
              if (!this._overlayRef) {
                const c = this._getOverlayConfig(r);
                this._subscribeToPositions(r, c.positionStrategy),
                  (this._overlayRef = this._overlay.create(c)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(r) {
              return new gn.X_({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    '.mat-menu-panel, .mat-mdc-menu-panel',
                  ),
                backdropClass:
                  r.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: r.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(r, c) {
              r.setPositionClasses &&
                c.positionChanges.subscribe(_ => {
                  const k =
                      'start' === _.connectionPair.overlayX
                        ? 'after'
                        : 'before',
                    me =
                      'top' === _.connectionPair.overlayY ? 'below' : 'above';
                  this._ngZone
                    ? this._ngZone.run(() => r.setPositionClasses(k, me))
                    : r.setPositionClasses(k, me);
                });
            }
            _setPosition(r, c) {
              let [_, k] =
                  'before' === r.xPosition
                    ? ['end', 'start']
                    : ['start', 'end'],
                [me, st] =
                  'above' === r.yPosition
                    ? ['bottom', 'top']
                    : ['top', 'bottom'],
                [Jt, An] = [me, st],
                [Gn, Ii] = [_, k],
                bo = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((Ii = _ = 'before' === r.xPosition ? 'start' : 'end'),
                  (k = Gn = 'end' === _ ? 'start' : 'end'),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const vs = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = vs
                      ? vs._getHostElement().offsetTop
                      : 0;
                  }
                  bo =
                    'bottom' === me
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                r.overlapTrigger ||
                  ((Jt = 'top' === me ? 'bottom' : 'top'),
                  (An = 'top' === st ? 'bottom' : 'top'));
              c.withPositions([
                {
                  originX: _,
                  originY: Jt,
                  overlayX: Gn,
                  overlayY: me,
                  offsetY: bo,
                },
                {
                  originX: k,
                  originY: Jt,
                  overlayX: Ii,
                  overlayY: me,
                  offsetY: bo,
                },
                {
                  originX: _,
                  originY: An,
                  overlayX: Gn,
                  overlayY: st,
                  offsetY: -bo,
                },
                {
                  originX: k,
                  originY: An,
                  overlayX: Ii,
                  overlayY: st,
                  offsetY: -bo,
                },
              ]);
            }
            _menuClosingActions() {
              const r = this._overlayRef.backdropClick(),
                c = this._overlayRef.detachments(),
                _ = this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : (0, Wt.of)(),
                k = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      (0, be.h)(me => me !== this._menuItemInstance),
                      (0, be.h)(() => this._menuOpen),
                    )
                  : (0, Wt.of)();
              return (0, Ie.T)(r, _, k, c);
            }
            _handleMousedown(r) {
              (0, Rt.X6)(r) ||
                ((this._openedBy = 0 === r.button ? 'mouse' : void 0),
                this.triggersSubmenu() && r.preventDefault());
            }
            _handleKeydown(r) {
              const c = r.keyCode;
              (c === tt.K5 || c === tt.L_) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((c === tt.SV && 'ltr' === this.dir) ||
                    (c === tt.oh && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(r) {
              this.triggersSubmenu()
                ? (r.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    (0, be.h)(r => r === this._menuItemInstance && !r.disabled),
                    Qn(0, xe.E),
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof Pi && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              (0, ee.q)(1),
                              Qn(0, xe.E),
                              (0, rt.R)(this._parentMaterialMenu._hovered()),
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(r) {
              return (
                (!this._portal || this._portal.templateRef !== r.templateRef) &&
                  (this._portal = new $n.UE(
                    r.templateRef,
                    this._viewContainerRef,
                  )),
                this._portal
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(gn.aV),
                a.Y36(a.SBq),
                a.Y36(a.s_b),
                a.Y36(Li),
                a.Y36(un, 8),
                a.Y36(ti, 10),
                a.Y36(vn.Is, 8),
                a.Y36(Rt.tE),
                a.Y36(a.R0b),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (k) {
                    return c._handleClick(k);
                  })('mousedown', function (k) {
                    return c._handleMousedown(k);
                  })('keydown', function (k) {
                    return c._handleKeydown(k);
                  }),
                  2 & r &&
                    a.uIk('aria-haspopup', c.menu ? 'menu' : null)(
                      'aria-expanded',
                      c.menuOpen,
                    )('aria-controls', c.menuOpen ? c.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  'mat-menu-trigger-for',
                  '_deprecatedMatMenuTriggerFor',
                ],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            g
          );
        })(),
        Dr = (() => {
          class g extends Zi {}
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-mdc-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [a.qOj],
            })),
            g
          );
        })(),
        rr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [fr],
              imports: [s.ez, et.si, et.BQ, gn.U8, ei.ZD, et.BQ],
            })),
            g
          );
        })();
      var gi = (() => {
          return (
            ((g = gi || (gi = {})).week = 'week'),
            (g.month = 'month'),
            (g.year = 'year'),
            gi
          );
          var g;
        })(),
        Fn = D(4006),
        J = D(9770);
      function Ge(g, R) {}
      class Se {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let Tt = (() => {
        class g extends $n.en {
          constructor(r, c, _, k, me, st, Jt, An) {
            super(),
              (this._elementRef = r),
              (this._focusTrapFactory = c),
              (this._config = k),
              (this._interactivityChecker = me),
              (this._ngZone = st),
              (this._overlayRef = Jt),
              (this._focusMonitor = An),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = Gn => {
                this._portalOutlet.hasAttached();
                const Ii = this._portalOutlet.attachDomPortal(Gn);
                return this._contentAttached(), Ii;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = _);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachComponentPortal(r);
            return this._contentAttached(), c;
          }
          attachTemplatePortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachTemplatePortal(r);
            return this._contentAttached(), c;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(r, c) {
            this._interactivityChecker.isFocusable(r) ||
              ((r.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const _ = () => {
                  r.removeEventListener('blur', _),
                    r.removeEventListener('mousedown', _),
                    r.removeAttribute('tabindex');
                };
                r.addEventListener('blur', _),
                  r.addEventListener('mousedown', _);
              })),
              r.focus(c);
          }
          _focusByCssSelector(r, c) {
            let _ = this._elementRef.nativeElement.querySelector(r);
            _ && this._forceFocus(_, c);
          }
          _trapFocus() {
            const r = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case 'dialog':
                this._containsFocus() || r.focus();
                break;
              case !0:
              case 'first-tabbable':
                this._focusTrap.focusInitialElementWhenReady().then(c => {
                  c || this._focusDialogContainer();
                });
                break;
              case 'first-heading':
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]',
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const r = this._config.restoreFocus;
            let c = null;
            if (
              ('string' == typeof r
                ? (c = this._document.querySelector(r))
                : 'boolean' == typeof r
                ? (c = r ? this._elementFocusedBeforeDialogWasOpened : null)
                : r && (c = r),
              this._config.restoreFocus && c && 'function' == typeof c.focus)
            ) {
              const _ = (0, Kn.ht)(),
                k = this._elementRef.nativeElement;
              (!_ || _ === this._document.body || _ === k || k.contains(_)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(c, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : c.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const r = this._elementRef.nativeElement,
              c = (0, Kn.ht)();
            return r === c || r.contains(c);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = (0, Kn.ht)());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(Rt.qV),
              a.Y36(s.K0, 8),
              a.Y36(Se),
              a.Y36(Rt.ic),
              a.Y36(a.R0b),
              a.Y36(gn.Iu),
              a.Y36(Rt.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['cdk-dialog-container']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf($n.Pl, 7), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._portalOutlet = _.first);
              }
            },
            hostAttrs: ['tabindex', '-1', 1, 'cdk-dialog-container'],
            hostVars: 6,
            hostBindings: function (r, c) {
              2 & r &&
                a.uIk('id', c._config.id || null)('role', c._config.role)(
                  'aria-modal',
                  c._config.ariaModal,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                );
            },
            features: [a.qOj],
            decls: 1,
            vars: 0,
            consts: [['cdkPortalOutlet', '']],
            template: function (r, c) {
              1 & r && a.YNc(0, Ge, 0, 0, 'ng-template', 0);
            },
            dependencies: [$n.Pl],
            styles: [
              '.cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class It {
        constructor(R, r) {
          (this.overlayRef = R),
            (this.config = r),
            (this.closed = new Kt.x()),
            (this.disableClose = r.disableClose),
            (this.backdropClick = R.backdropClick()),
            (this.keydownEvents = R.keydownEvents()),
            (this.outsidePointerEvents = R.outsidePointerEvents()),
            (this.id = r.id),
            this.keydownEvents.subscribe(c => {
              c.keyCode === tt.hY &&
                !this.disableClose &&
                !(0, tt.Vb)(c) &&
                (c.preventDefault(),
                this.close(void 0, { focusOrigin: 'keyboard' }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: 'mouse' });
            }),
            (this._detachSubscription = R.detachments().subscribe(() => {
              !1 !== r.closeOnOverlayDetachments && this.close();
            }));
        }
        close(R, r) {
          if (this.containerInstance) {
            const c = this.closed;
            (this.containerInstance._closeInteractionType =
              r?.focusOrigin || 'program'),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              c.next(R),
              c.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(R = '', r = '') {
          return this.overlayRef.updateSize({ width: R, height: r }), this;
        }
        addPanelClass(R) {
          return this.overlayRef.addPanelClass(R), this;
        }
        removePanelClass(R) {
          return this.overlayRef.removePanelClass(R), this;
        }
      }
      const hn = new a.OlP('DialogScrollStrategy'),
        bn = new a.OlP('DialogData'),
        Pn = new a.OlP('DefaultDialogConfig'),
        Nn = {
          provide: hn,
          deps: [gn.aV],
          useFactory: function Jn(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let Ei = 0,
        Ur = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(r, c, _, k, me, st) {
              (this._overlay = r),
                (this._injector = c),
                (this._defaultOptions = _),
                (this._parentDialog = k),
                (this._overlayContainer = me),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Kt.x()),
                (this._afterOpenedAtThisLevel = new Kt.x()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = (0, J.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Z.O)(void 0)),
                )),
                (this._scrollStrategy = st);
            }
            open(r, c) {
              ((c = { ...(this._defaultOptions || new Se()), ...c }).id =
                c.id || 'cdk-dialog-' + Ei++),
                c.id && this.getDialogById(c.id);
              const k = this._getOverlayConfig(c),
                me = this._overlay.create(k),
                st = new It(me, c),
                Jt = this._attachContainer(me, st, c);
              return (
                (st.containerInstance = Jt),
                this._attachDialogContent(r, st, Jt, c),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(st),
                st.closed.subscribe(() => this._removeOpenDialog(st, !0)),
                this.afterOpened.next(st),
                st
              );
            }
            closeAll() {
              or(this.openDialogs, r => r.close());
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              or(this._openDialogsAtThisLevel, r => {
                !1 === r.config.closeOnDestroy && this._removeOpenDialog(r, !1);
              }),
                or(this._openDialogsAtThisLevel, r => r.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(r) {
              const c = new gn.X_({
                positionStrategy:
                  r.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: r.scrollStrategy || this._scrollStrategy(),
                panelClass: r.panelClass,
                hasBackdrop: r.hasBackdrop,
                direction: r.direction,
                minWidth: r.minWidth,
                minHeight: r.minHeight,
                maxWidth: r.maxWidth,
                maxHeight: r.maxHeight,
                width: r.width,
                height: r.height,
                disposeOnNavigation: r.closeOnNavigation,
              });
              return r.backdropClass && (c.backdropClass = r.backdropClass), c;
            }
            _attachContainer(r, c, _) {
              const k = _.injector || _.viewContainerRef?.injector,
                me = [
                  { provide: Se, useValue: _ },
                  { provide: It, useValue: c },
                  { provide: gn.Iu, useValue: r },
                ];
              let st;
              _.container
                ? 'function' == typeof _.container
                  ? (st = _.container)
                  : ((st = _.container.type),
                    me.push(..._.container.providers(_)))
                : (st = Tt);
              const Jt = new $n.C5(
                st,
                _.viewContainerRef,
                a.zs3.create({ parent: k || this._injector, providers: me }),
                _.componentFactoryResolver,
              );
              return r.attach(Jt).instance;
            }
            _attachDialogContent(r, c, _, k) {
              if (r instanceof a.Rgc) {
                const me = this._createInjector(k, c, _, void 0);
                let st = { $implicit: k.data, dialogRef: c };
                k.templateContext &&
                  (st = {
                    ...st,
                    ...('function' == typeof k.templateContext
                      ? k.templateContext()
                      : k.templateContext),
                  }),
                  _.attachTemplatePortal(new $n.UE(r, null, st, me));
              } else {
                const me = this._createInjector(k, c, _, this._injector),
                  st = _.attachComponentPortal(
                    new $n.C5(
                      r,
                      k.viewContainerRef,
                      me,
                      k.componentFactoryResolver,
                    ),
                  );
                c.componentInstance = st.instance;
              }
            }
            _createInjector(r, c, _, k) {
              const me = r.injector || r.viewContainerRef?.injector,
                st = [
                  { provide: bn, useValue: r.data },
                  { provide: It, useValue: c },
                ];
              return (
                r.providers &&
                  ('function' == typeof r.providers
                    ? st.push(...r.providers(c, r, _))
                    : st.push(...r.providers)),
                r.direction &&
                  (!me || !me.get(vn.Is, null, { optional: !0 })) &&
                  st.push({
                    provide: vn.Is,
                    useValue: { value: r.direction, change: (0, Wt.of)() },
                  }),
                a.zs3.create({ parent: me || k, providers: st })
              );
            }
            _removeOpenDialog(r, c) {
              const _ = this.openDialogs.indexOf(r);
              _ > -1 &&
                (this.openDialogs.splice(_, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((k, me) => {
                    k
                      ? me.setAttribute('aria-hidden', k)
                      : me.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  c && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const r = this._overlayContainer.getContainerElement();
              if (r.parentElement) {
                const c = r.parentElement.children;
                for (let _ = c.length - 1; _ > -1; _--) {
                  const k = c[_];
                  k !== r &&
                    'SCRIPT' !== k.nodeName &&
                    'STYLE' !== k.nodeName &&
                    !k.hasAttribute('aria-live') &&
                    (this._ariaHiddenElements.set(
                      k,
                      k.getAttribute('aria-hidden'),
                    ),
                    k.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.LFG(gn.aV),
                a.LFG(a.zs3),
                a.LFG(Pn, 8),
                a.LFG(g, 12),
                a.LFG(gn.Xj),
                a.LFG(hn),
              );
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      function or(g, R) {
        let r = g.length;
        for (; r--; ) R(g[r]);
      }
      let Cr = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({
            providers: [Ur, Nn],
            imports: [gn.U8, $n.eL, Rt.rt, $n.eL],
          })),
          g
        );
      })();
      function lo(g, R) {}
      class Fr {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const Hr = 'mdc-dialog--open',
        sr = 'mdc-dialog--opening',
        Qr = 'mdc-dialog--closing';
      let Po = (() => {
        class g extends Tt {
          constructor(r, c, _, k, me, st, Jt, An) {
            super(r, c, _, k, me, st, Jt, An),
              (this._animationStateChanged = new a.vpe());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(r) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: 'opened',
                totalTime: r,
              });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(Rt.qV),
              a.Y36(s.K0, 8),
              a.Y36(Fr),
              a.Y36(Rt.ic),
              a.Y36(a.R0b),
              a.Y36(gn.Iu),
              a.Y36(Rt.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['ng-component']],
            features: [a.qOj],
            decls: 0,
            vars: 0,
            template: function (r, c) {},
            encapsulation: 2,
          })),
          g
        );
      })();
      const Pr = '--mat-dialog-transition-duration';
      function xr(g) {
        return null == g
          ? null
          : 'number' == typeof g
          ? g
          : g.endsWith('ms')
          ? (0, pt.su)(g.substring(0, g.length - 2))
          : g.endsWith('s')
          ? 1e3 * (0, pt.su)(g.substring(0, g.length - 1))
          : '0' === g
          ? 0
          : null;
      }
      let Jr = (() => {
        class g extends Po {
          constructor(r, c, _, k, me, st, Jt, An, Gn) {
            super(r, c, _, k, me, st, Jt, Gn),
              (this._animationMode = An),
              (this._animationsEnabled =
                'NoopAnimations' !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._openAnimationDuration = this._animationsEnabled
                ? xr(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._closeAnimationDuration = this._animationsEnabled
                ? xr(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._openAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: 'closed',
                    totalTime: this._closeAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: 'opening',
              totalTime: this._openAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Pr,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(sr),
                  this._hostElement.classList.add(Hr),
                  this._waitForAnimationToComplete(
                    this._openAnimationDuration,
                    this._finishDialogOpen,
                  ))
                : (this._hostElement.classList.add(Hr),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: 'closing',
              totalTime: this._closeAnimationDuration,
            }),
              this._hostElement.classList.remove(Hr),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Pr,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(Qr),
                  this._waitForAnimationToComplete(
                    this._closeAnimationDuration,
                    this._finishDialogClose,
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(sr),
              this._hostElement.classList.remove(Qr);
          }
          _waitForAnimationToComplete(r, c) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(c, r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(Rt.qV),
              a.Y36(s.K0, 8),
              a.Y36(Fr),
              a.Y36(Rt.ic),
              a.Y36(a.R0b),
              a.Y36(gn.Iu),
              a.Y36(a.QbO, 8),
              a.Y36(Rt.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-dialog-container']],
            hostAttrs: [
              'tabindex',
              '-1',
              1,
              'mat-mdc-dialog-container',
              'mdc-dialog',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              2 & r &&
                (a.Ikx('id', c._config.id),
                a.uIk('aria-modal', c._config.ariaModal)(
                  'role',
                  c._config.role,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                ),
                a.ekj('_mat-animation-noopable', !c._animationsEnabled));
            },
            features: [a.qOj],
            decls: 3,
            vars: 0,
            consts: [
              [1, 'mdc-dialog__container'],
              [1, 'mat-mdc-dialog-surface', 'mdc-dialog__surface'],
              ['cdkPortalOutlet', ''],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1),
                a.YNc(2, lo, 0, 0, 'ng-template', 2),
                a.qZA()());
            },
            dependencies: [$n.Pl],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class jr {
        constructor(R, r, c) {
          (this._ref = R),
            (this._containerInstance = c),
            (this._afterOpened = new Kt.x()),
            (this._beforeClosed = new Kt.x()),
            (this._state = 0),
            (this.disableClose = r.disableClose),
            (this.id = R.id),
            c._animationStateChanged
              .pipe(
                (0, be.h)(_ => 'opened' === _.state),
                (0, ee.q)(1),
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            c._animationStateChanged
              .pipe(
                (0, be.h)(_ => 'closed' === _.state),
                (0, ee.q)(1),
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            R.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            (0, Ie.T)(
              this.backdropClick(),
              this.keydownEvents().pipe(
                (0, be.h)(
                  _ =>
                    _.keyCode === tt.hY && !this.disableClose && !(0, tt.Vb)(_),
                ),
              ),
            ).subscribe(_ => {
              this.disableClose ||
                (_.preventDefault(),
                (function co(g, R, r) {
                  (g._closeInteractionType = R), g.close(r);
                })(this, 'keydown' === _.type ? 'keyboard' : 'mouse'));
            });
        }
        close(R) {
          (this._result = R),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, be.h)(r => 'closing' === r.state),
                (0, ee.q)(1),
              )
              .subscribe(r => {
                this._beforeClosed.next(R),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    r.totalTime + 100,
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(R) {
          let r = this._ref.config.positionStrategy;
          return (
            R && (R.left || R.right)
              ? R.left
                ? r.left(R.left)
                : r.right(R.right)
              : r.centerHorizontally(),
            R && (R.top || R.bottom)
              ? R.top
                ? r.top(R.top)
                : r.bottom(R.bottom)
              : r.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(R = '', r = '') {
          return this._ref.updateSize(R, r), this;
        }
        addPanelClass(R) {
          return this._ref.addPanelClass(R), this;
        }
        removePanelClass(R) {
          return this._ref.removePanelClass(R), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const ar = new a.OlP('MatMdcDialogData'),
        qi = new a.OlP('mat-mdc-dialog-default-options'),
        _i = new a.OlP('mat-mdc-dialog-scroll-strategy'),
        pr = {
          provide: _i,
          deps: [gn.aV],
          useFactory: function Er(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let zr = 0,
        wr = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(r, c, _, k, me, st, Jt, An, Gn, Ii) {
              (this._overlay = r),
                (this._defaultOptions = _),
                (this._parentDialog = k),
                (this._dialogRefConstructor = Jt),
                (this._dialogContainerType = An),
                (this._dialogDataToken = Gn),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Kt.x()),
                (this._afterOpenedAtThisLevel = new Kt.x()),
                (this._idPrefix = 'mat-dialog-'),
                (this.dialogConfigClass = Fr),
                (this.afterAllClosed = (0, J.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Z.O)(void 0)),
                )),
                (this._scrollStrategy = st),
                (this._dialog = c.get(Ur));
            }
            open(r, c) {
              let _;
              ((c = { ...(this._defaultOptions || new Fr()), ...c }).id =
                c.id || `${this._idPrefix}${zr++}`),
                (c.scrollStrategy = c.scrollStrategy || this._scrollStrategy());
              const k = this._dialog.open(r, {
                ...c,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: c },
                    { provide: Se, useValue: c },
                  ],
                },
                templateContext: () => ({ dialogRef: _ }),
                providers: (me, st, Jt) => (
                  (_ = new this._dialogRefConstructor(me, c, Jt)),
                  _.updatePosition(c?.position),
                  [
                    { provide: this._dialogContainerType, useValue: Jt },
                    { provide: this._dialogDataToken, useValue: st.data },
                    { provide: this._dialogRefConstructor, useValue: _ },
                  ]
                ),
              });
              return (
                (_.componentInstance = k.componentInstance),
                this.openDialogs.push(_),
                this.afterOpened.next(_),
                _.afterClosed().subscribe(() => {
                  const me = this.openDialogs.indexOf(_);
                  me > -1 &&
                    (this.openDialogs.splice(me, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                _
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(r) {
              let c = r.length;
              for (; c--; ) r[c].close();
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        mr = (() => {
          class g extends wr {
            constructor(r, c, _, k, me, st, Jt, An) {
              super(r, c, k, st, Jt, me, jr, Jr, ar, An),
                (this._idPrefix = 'mat-mdc-dialog-');
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.LFG(gn.aV),
                a.LFG(a.zs3),
                a.LFG(s.Ye, 8),
                a.LFG(qi, 8),
                a.LFG(_i),
                a.LFG(g, 12),
                a.LFG(gn.Xj),
                a.LFG(a.QbO, 8),
              );
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        wi = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [
                ['', 'mat-dialog-content', ''],
                ['mat-dialog-content'],
                ['', 'matDialogContent', ''],
              ],
              hostAttrs: [1, 'mat-mdc-dialog-content', 'mdc-dialog__content'],
            })),
            g
          );
        })(),
        ai = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [mr, pr],
              imports: [Cr, gn.U8, $n.eL, et.BQ, et.BQ],
            })),
            g
          );
        })();
      function vi(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'button', 7),
            a.NdJ('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.cancel());
            }),
            a._uU(1, 'Cancel'),
            a.qZA();
        }
      }
      function Yr(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'button', 8),
            a.NdJ('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.deleteEvent());
            }),
            a._uU(1, 'Delete'),
            a.qZA();
        }
      }
      function Gr(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'button', 7),
            a.NdJ('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.deleteEvent());
            }),
            a._uU(1, 'Delete this event'),
            a.qZA();
        }
      }
      function Mr(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'button', 8),
            a.NdJ('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.deleteAllEvents());
            }),
            a._uU(1, 'Delete all events'),
            a.qZA();
        }
      }
      var ni = (() => {
        return (
          ((g = ni || (ni = {}))[(g.one = 0)] = 'one'),
          (g[(g.all = 1)] = 'all'),
          ni
        );
        var g;
      })();
      let Ar = (() => {
        class g {
          constructor(r, c) {
            (this.dialogRef = r),
              (this.data = c),
              (this.note = c.note),
              (this.text = this.note.repeatable
                ? 'Do you want to delete only this event or all repeats?'
                : 'Are you sure you want to delete this event?');
          }
          cancel() {
            this.dialogRef.close();
          }
          deleteEvent() {
            this.dialogRef.close(ni.one);
          }
          deleteAllEvents() {
            this.dialogRef.close(ni.all);
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(jr), a.Y36(ar));
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-delete-event-dialog']],
            decls: 11,
            vars: 5,
            consts: [
              ['mat-dialog-content', '', 1, 'delete'],
              [1, 'dialog-close-container'],
              [1, 'dialog-close', 3, 'click'],
              [1, 'delete-text'],
              [1, 'delete-buttons'],
              ['mat-raised-button', '', 3, 'click', 4, 'ngIf'],
              [
                'mat-raised-button',
                '',
                'color',
                'primary',
                3,
                'click',
                4,
                'ngIf',
              ],
              ['mat-raised-button', '', 3, 'click'],
              ['mat-raised-button', '', 'color', 'primary', 3, 'click'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'mat-icon', 2),
                a.NdJ('click', function () {
                  return c.cancel();
                }),
                a._uU(3, 'close'),
                a.qZA()(),
                a.TgZ(4, 'p', 3),
                a._uU(5),
                a.qZA(),
                a.TgZ(6, 'div', 4),
                a.YNc(7, vi, 2, 0, 'button', 5),
                a.YNc(8, Yr, 2, 0, 'button', 6),
                a.YNc(9, Gr, 2, 0, 'button', 5),
                a.YNc(10, Mr, 2, 0, 'button', 6),
                a.qZA()()),
                2 & r &&
                  (a.xp6(5),
                  a.hij(' ', c.text, ' '),
                  a.xp6(2),
                  a.Q6J('ngIf', !c.note.repeatable),
                  a.xp6(1),
                  a.Q6J('ngIf', !c.note.repeatable),
                  a.xp6(1),
                  a.Q6J('ngIf', c.note.repeatable),
                  a.xp6(1),
                  a.Q6J('ngIf', c.note.repeatable));
            },
            dependencies: [s.O5, $t.lW, St, wi],
            styles: [
              '.delete[_ngcontent-%COMP%]{display:flex;flex-direction:column}.delete-text[_ngcontent-%COMP%]{font-size:16px}.delete-buttons[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:space-between}',
            ],
          })),
          g
        );
      })();
      var Hi = D(9549),
        to = D(4144);
      const Bi = ['mat-calendar-body', ''];
      function Nr(g, R) {
        if (
          (1 & g && (a.TgZ(0, 'tr', 3)(1, 'td', 4), a._uU(2), a.qZA()()), 2 & g)
        ) {
          const r = a.oxw();
          a.xp6(1),
            a.Udp('padding-top', r._cellPadding)(
              'padding-bottom',
              r._cellPadding,
            ),
            a.uIk('colspan', r.numCols),
            a.xp6(1),
            a.hij(' ', r.label, ' ');
        }
      }
      function no(g, R) {
        if ((1 & g && (a.TgZ(0, 'td', 4), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw(2);
          a.Udp('padding-top', r._cellPadding)(
            'padding-bottom',
            r._cellPadding,
          ),
            a.uIk('colspan', r._firstRowOffset),
            a.xp6(1),
            a.hij(
              ' ',
              r._firstRowOffset >= r.labelMinRequiredCells ? r.label : '',
              ' ',
            );
        }
      }
      function _n(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'td', 8)(1, 'button', 9),
            a.NdJ('click', function (_) {
              const me = a.CHM(r).$implicit,
                st = a.oxw(2);
              return a.KtG(st._cellClicked(me, _));
            })('focus', function (_) {
              const me = a.CHM(r).$implicit,
                st = a.oxw(2);
              return a.KtG(st._emitActiveDateChange(me, _));
            }),
            a.TgZ(2, 'span', 10),
            a._uU(3),
            a.qZA(),
            a._UZ(4, 'span', 11),
            a.qZA()();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = a.oxw().index,
            k = a.oxw();
          a.Udp('width', k._cellWidth)('padding-top', k._cellPadding)(
            'padding-bottom',
            k._cellPadding,
          ),
            a.uIk('data-mat-row', _)('data-mat-col', c),
            a.xp6(1),
            a.ekj('mat-calendar-body-disabled', !r.enabled)(
              'mat-calendar-body-active',
              k._isActiveCell(_, c),
            )('mat-calendar-body-range-start', k._isRangeStart(r.compareValue))(
              'mat-calendar-body-range-end',
              k._isRangeEnd(r.compareValue),
            )('mat-calendar-body-in-range', k._isInRange(r.compareValue))(
              'mat-calendar-body-comparison-bridge-start',
              k._isComparisonBridgeStart(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-bridge-end',
              k._isComparisonBridgeEnd(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-start',
              k._isComparisonStart(r.compareValue),
            )(
              'mat-calendar-body-comparison-end',
              k._isComparisonEnd(r.compareValue),
            )(
              'mat-calendar-body-in-comparison-range',
              k._isInComparisonRange(r.compareValue),
            )(
              'mat-calendar-body-preview-start',
              k._isPreviewStart(r.compareValue),
            )('mat-calendar-body-preview-end', k._isPreviewEnd(r.compareValue))(
              'mat-calendar-body-in-preview',
              k._isInPreview(r.compareValue),
            ),
            a.Q6J('ngClass', r.cssClasses)(
              'tabindex',
              k._isActiveCell(_, c) ? 0 : -1,
            ),
            a.uIk('aria-label', r.ariaLabel)(
              'aria-disabled',
              !r.enabled || null,
            )('aria-pressed', k._isSelected(r.compareValue))(
              'aria-current',
              k.todayValue === r.compareValue ? 'date' : null,
            )('aria-describedby', k._getDescribedby(r.compareValue)),
            a.xp6(1),
            a.ekj('mat-calendar-body-selected', k._isSelected(r.compareValue))(
              'mat-calendar-body-comparison-identical',
              k._isComparisonIdentical(r.compareValue),
            )('mat-calendar-body-today', k.todayValue === r.compareValue),
            a.xp6(1),
            a.hij(' ', r.displayValue, ' ');
        }
      }
      function gr(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'tr', 5),
            a.YNc(1, no, 2, 6, 'td', 6),
            a.YNc(2, _n, 5, 48, 'td', 7),
            a.qZA()),
          2 & g)
        ) {
          const r = R.$implicit,
            c = R.index,
            _ = a.oxw();
          a.xp6(1),
            a.Q6J('ngIf', 0 === c && _._firstRowOffset),
            a.xp6(1),
            a.Q6J('ngForOf', r);
        }
      }
      function T(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'th', 5)(1, 'span', 6),
            a._uU(2),
            a.qZA(),
            a.TgZ(3, 'span', 7),
            a._uU(4),
            a.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          a.xp6(2), a.Oqu(r.long), a.xp6(2), a.Oqu(r.narrow);
        }
      }
      const I = ['*'];
      function w(g, R) {}
      function $(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-month-view', 5),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG((k.activeDate = _));
            })('_userSelection', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._dateSelected(_));
            })('dragStarted', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._dragStarted(_));
            })('dragEnded', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._dragEnded(_));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          )('comparisonStart', r.comparisonStart)(
            'comparisonEnd',
            r.comparisonEnd,
          )('startDateAccessibleName', r.startDateAccessibleName)(
            'endDateAccessibleName',
            r.endDateAccessibleName,
          )('activeDrag', r._activeDrag);
        }
      }
      function it(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-year-view', 6),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG((k.activeDate = _));
            })('monthSelected', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._monthSelectedInYearView(_));
            })('selectedChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._goToDateInView(_, 'month'));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function an(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-multi-year-view', 7),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG((k.activeDate = _));
            })('yearSelected', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._yearSelectedInMultiYearView(_));
            })('selectedChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._goToDateInView(_, 'year'));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function si(g, R) {}
      const ht = ['button'];
      function kn(g, R) {
        1 & g && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'path', 4), a.qZA());
      }
      const Lr = [[['', 'matDatepickerToggleIcon', '']]],
        fo = ['[matDatepickerToggleIcon]'];
      let Sr = (() => {
        class g {
          constructor() {
            (this.changes = new Kt.x()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.closeCalendarLabel = 'Close calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 24 years'),
              (this.nextMultiYearLabel = 'Next 24 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year'),
              (this.startDateLabel = 'Start date'),
              (this.endDateLabel = 'End date');
          }
          formatYearRange(r, c) {
            return `${r} \u2013 ${c}`;
          }
          formatYearRangeLabel(r, c) {
            return `${r} to ${c}`;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      class io {
        constructor(R, r, c, _, k = {}, me = R, st) {
          (this.value = R),
            (this.displayValue = r),
            (this.ariaLabel = c),
            (this.enabled = _),
            (this.cssClasses = k),
            (this.compareValue = me),
            (this.rawValue = st);
        }
      }
      let ls = 1,
        ro = (() => {
          class g {
            ngAfterViewChecked() {
              this._focusActiveCellAfterViewChecked &&
                (this._focusActiveCell(),
                (this._focusActiveCellAfterViewChecked = !1));
            }
            constructor(r, c) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._platform = (0, a.f3M)(Kn.t4)),
                (this._focusActiveCellAfterViewChecked = !1),
                (this.numCols = 7),
                (this.activeCell = 0),
                (this.isRange = !1),
                (this.cellAspectRatio = 1),
                (this.previewStart = null),
                (this.previewEnd = null),
                (this.selectedValueChange = new a.vpe()),
                (this.previewChange = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this.dragStarted = new a.vpe()),
                (this.dragEnded = new a.vpe()),
                (this._didDragSinceMouseDown = !1),
                (this._enterHandler = _ => {
                  if (this._skipNextFocus && 'focus' === _.type)
                    this._skipNextFocus = !1;
                  else if (_.target && this.isRange) {
                    const k = this._getCellFromElement(_.target);
                    k &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({
                          value: k.enabled ? k : null,
                          event: _,
                        }),
                      );
                  }
                }),
                (this._touchmoveHandler = _ => {
                  if (!this.isRange) return;
                  const k = cr(_),
                    me = k ? this._getCellFromElement(k) : null;
                  k !== _.target && (this._didDragSinceMouseDown = !0),
                    Oi(_.target) && _.preventDefault(),
                    this._ngZone.run(() =>
                      this.previewChange.emit({
                        value: me?.enabled ? me : null,
                        event: _,
                      }),
                    );
                }),
                (this._leaveHandler = _ => {
                  null !== this.previewEnd &&
                    this.isRange &&
                    ('blur' !== _.type && (this._didDragSinceMouseDown = !0),
                    _.target &&
                      this._getCellFromElement(_.target) &&
                      (!_.relatedTarget ||
                        !this._getCellFromElement(_.relatedTarget)) &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({ value: null, event: _ }),
                      ));
                }),
                (this._mousedownHandler = _ => {
                  if (!this.isRange) return;
                  this._didDragSinceMouseDown = !1;
                  const k = _.target && this._getCellFromElement(_.target);
                  !k ||
                    !this._isInRange(k.rawValue) ||
                    this._ngZone.run(() => {
                      this.dragStarted.emit({ value: k.rawValue, event: _ });
                    });
                }),
                (this._mouseupHandler = _ => {
                  if (!this.isRange) return;
                  const k = Oi(_.target);
                  k
                    ? k.closest('.mat-calendar-body') ===
                        this._elementRef.nativeElement &&
                      this._ngZone.run(() => {
                        const me = this._getCellFromElement(k);
                        this.dragEnded.emit({
                          value: me?.rawValue ?? null,
                          event: _,
                        });
                      })
                    : this._ngZone.run(() => {
                        this.dragEnded.emit({ value: null, event: _ });
                      });
                }),
                (this._touchendHandler = _ => {
                  const k = cr(_);
                  k && this._mouseupHandler({ target: k });
                }),
                (this._id = 'mat-calendar-body-' + ls++),
                (this._startDateLabelId = `${this._id}-start-date`),
                (this._endDateLabelId = `${this._id}-end-date`),
                c.runOutsideAngular(() => {
                  const _ = r.nativeElement;
                  _.addEventListener('mouseenter', this._enterHandler, !0),
                    _.addEventListener('touchmove', this._touchmoveHandler, !0),
                    _.addEventListener('focus', this._enterHandler, !0),
                    _.addEventListener('mouseleave', this._leaveHandler, !0),
                    _.addEventListener('blur', this._leaveHandler, !0),
                    _.addEventListener('mousedown', this._mousedownHandler),
                    _.addEventListener('touchstart', this._mousedownHandler),
                    this._platform.isBrowser &&
                      (window.addEventListener('mouseup', this._mouseupHandler),
                      window.addEventListener(
                        'touchend',
                        this._touchendHandler,
                      ));
                });
            }
            _cellClicked(r, c) {
              this._didDragSinceMouseDown ||
                (r.enabled &&
                  this.selectedValueChange.emit({ value: r.value, event: c }));
            }
            _emitActiveDateChange(r, c) {
              r.enabled &&
                this.activeDateChange.emit({ value: r.value, event: c });
            }
            _isSelected(r) {
              return this.startValue === r || this.endValue === r;
            }
            ngOnChanges(r) {
              const c = r.numCols,
                { rows: _, numCols: k } = this;
              (r.rows || c) &&
                (this._firstRowOffset =
                  _ && _.length && _[0].length ? k - _[0].length : 0),
                (r.cellAspectRatio || c || !this._cellPadding) &&
                  (this._cellPadding = (50 * this.cellAspectRatio) / k + '%'),
                (c || !this._cellWidth) && (this._cellWidth = 100 / k + '%');
            }
            ngOnDestroy() {
              const r = this._elementRef.nativeElement;
              r.removeEventListener('mouseenter', this._enterHandler, !0),
                r.removeEventListener('touchmove', this._touchmoveHandler, !0),
                r.removeEventListener('focus', this._enterHandler, !0),
                r.removeEventListener('mouseleave', this._leaveHandler, !0),
                r.removeEventListener('blur', this._leaveHandler, !0),
                r.removeEventListener('mousedown', this._mousedownHandler),
                r.removeEventListener('touchstart', this._mousedownHandler),
                this._platform.isBrowser &&
                  (window.removeEventListener('mouseup', this._mouseupHandler),
                  window.removeEventListener(
                    'touchend',
                    this._touchendHandler,
                  ));
            }
            _isActiveCell(r, c) {
              let _ = r * this.numCols + c;
              return r && (_ -= this._firstRowOffset), _ == this.activeCell;
            }
            _focusActiveCell(r = !0) {
              this._ngZone.runOutsideAngular(() => {
                this._ngZone.onStable.pipe((0, ee.q)(1)).subscribe(() => {
                  setTimeout(() => {
                    const c = this._elementRef.nativeElement.querySelector(
                      '.mat-calendar-body-active',
                    );
                    c && (r || (this._skipNextFocus = !0), c.focus());
                  });
                });
              });
            }
            _scheduleFocusActiveCellAfterViewChecked() {
              this._focusActiveCellAfterViewChecked = !0;
            }
            _isRangeStart(r) {
              return ji(r, this.startValue, this.endValue);
            }
            _isRangeEnd(r) {
              return Ir(r, this.startValue, this.endValue);
            }
            _isInRange(r) {
              return _r(r, this.startValue, this.endValue, this.isRange);
            }
            _isComparisonStart(r) {
              return ji(r, this.comparisonStart, this.comparisonEnd);
            }
            _isComparisonBridgeStart(r, c, _) {
              if (
                !this._isComparisonStart(r) ||
                this._isRangeStart(r) ||
                !this._isInRange(r)
              )
                return !1;
              let k = this.rows[c][_ - 1];
              if (!k) {
                const me = this.rows[c - 1];
                k = me && me[me.length - 1];
              }
              return k && !this._isRangeEnd(k.compareValue);
            }
            _isComparisonBridgeEnd(r, c, _) {
              if (
                !this._isComparisonEnd(r) ||
                this._isRangeEnd(r) ||
                !this._isInRange(r)
              )
                return !1;
              let k = this.rows[c][_ + 1];
              if (!k) {
                const me = this.rows[c + 1];
                k = me && me[0];
              }
              return k && !this._isRangeStart(k.compareValue);
            }
            _isComparisonEnd(r) {
              return Ir(r, this.comparisonStart, this.comparisonEnd);
            }
            _isInComparisonRange(r) {
              return _r(
                r,
                this.comparisonStart,
                this.comparisonEnd,
                this.isRange,
              );
            }
            _isComparisonIdentical(r) {
              return (
                this.comparisonStart === this.comparisonEnd &&
                r === this.comparisonStart
              );
            }
            _isPreviewStart(r) {
              return ji(r, this.previewStart, this.previewEnd);
            }
            _isPreviewEnd(r) {
              return Ir(r, this.previewStart, this.previewEnd);
            }
            _isInPreview(r) {
              return _r(r, this.previewStart, this.previewEnd, this.isRange);
            }
            _getDescribedby(r) {
              return this.isRange
                ? this.startValue === r && this.endValue === r
                  ? `${this._startDateLabelId} ${this._endDateLabelId}`
                  : this.startValue === r
                  ? this._startDateLabelId
                  : this.endValue === r
                  ? this._endDateLabelId
                  : null
                : null;
            }
            _getCellFromElement(r) {
              const c = Oi(r);
              if (c) {
                const _ = c.getAttribute('data-mat-row'),
                  k = c.getAttribute('data-mat-col');
                if (_ && k) return this.rows[parseInt(_)][parseInt(k)];
              }
              return null;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36(a.SBq), a.Y36(a.R0b));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['', 'mat-calendar-body', '']],
              hostAttrs: [1, 'mat-calendar-body'],
              inputs: {
                label: 'label',
                rows: 'rows',
                todayValue: 'todayValue',
                startValue: 'startValue',
                endValue: 'endValue',
                labelMinRequiredCells: 'labelMinRequiredCells',
                numCols: 'numCols',
                activeCell: 'activeCell',
                isRange: 'isRange',
                cellAspectRatio: 'cellAspectRatio',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                previewStart: 'previewStart',
                previewEnd: 'previewEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedValueChange: 'selectedValueChange',
                previewChange: 'previewChange',
                activeDateChange: 'activeDateChange',
                dragStarted: 'dragStarted',
                dragEnded: 'dragEnded',
              },
              exportAs: ['matCalendarBody'],
              features: [a.TTD],
              attrs: Bi,
              decls: 6,
              vars: 6,
              consts: [
                ['aria-hidden', 'true', 4, 'ngIf'],
                ['role', 'row', 4, 'ngFor', 'ngForOf'],
                [1, 'mat-calendar-body-hidden-label', 3, 'id'],
                ['aria-hidden', 'true'],
                [1, 'mat-calendar-body-label'],
                ['role', 'row'],
                [
                  'class',
                  'mat-calendar-body-label',
                  3,
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngIf',
                ],
                [
                  'role',
                  'gridcell',
                  'class',
                  'mat-calendar-body-cell-container',
                  3,
                  'width',
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                ['role', 'gridcell', 1, 'mat-calendar-body-cell-container'],
                [
                  'type',
                  'button',
                  1,
                  'mat-calendar-body-cell',
                  3,
                  'ngClass',
                  'tabindex',
                  'click',
                  'focus',
                ],
                [1, 'mat-calendar-body-cell-content', 'mat-focus-indicator'],
                ['aria-hidden', 'true', 1, 'mat-calendar-body-cell-preview'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, Nr, 3, 6, 'tr', 0),
                  a.YNc(1, gr, 3, 2, 'tr', 1),
                  a.TgZ(2, 'label', 2),
                  a._uU(3),
                  a.qZA(),
                  a.TgZ(4, 'label', 2),
                  a._uU(5),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngIf', c._firstRowOffset < c.labelMinRequiredCells),
                    a.xp6(1),
                    a.Q6J('ngForOf', c.rows),
                    a.xp6(1),
                    a.Q6J('id', c._startDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.startDateAccessibleName, '\n'),
                    a.xp6(1),
                    a.Q6J('id', c._endDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.endDateAccessibleName, '\n'));
              },
              dependencies: [s.mk, s.sg, s.O5],
              styles: [
                '.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      function Mo(g) {
        return 'TD' === g?.nodeName;
      }
      function Oi(g) {
        let R;
        return (
          Mo(g)
            ? (R = g)
            : Mo(g.parentNode)
            ? (R = g.parentNode)
            : Mo(g.parentNode?.parentNode) && (R = g.parentNode.parentNode),
          null != R?.getAttribute('data-mat-row') ? R : null
        );
      }
      function ji(g, R, r) {
        return null !== r && R !== r && g < r && g === R;
      }
      function Ir(g, R, r) {
        return null !== R && R !== r && g >= R && g === r;
      }
      function _r(g, R, r, c) {
        return c && null !== R && null !== r && R !== r && g >= R && g <= r;
      }
      function cr(g) {
        const R = g.changedTouches[0];
        return document.elementFromPoint(R.clientX, R.clientY);
      }
      class bi {
        constructor(R, r) {
          (this.start = R), (this.end = r);
        }
      }
      let Yi = (() => {
          class g {
            constructor(r, c) {
              (this.selection = r),
                (this._adapter = c),
                (this._selectionChanged = new Kt.x()),
                (this.selectionChanged = this._selectionChanged),
                (this.selection = r);
            }
            updateSelection(r, c) {
              const _ = this.selection;
              (this.selection = r),
                this._selectionChanged.next({
                  selection: r,
                  source: c,
                  oldValue: _,
                });
            }
            ngOnDestroy() {
              this._selectionChanged.complete();
            }
            _isValidDateInstance(r) {
              return (
                this._adapter.isDateInstance(r) && this._adapter.isValid(r)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        cs = (() => {
          class g extends Yi {
            constructor(r) {
              super(null, r);
            }
            add(r) {
              super.updateSelection(r, this);
            }
            isValid() {
              return (
                null != this.selection &&
                this._isValidDateInstance(this.selection)
              );
            }
            isComplete() {
              return null != this.selection;
            }
            clone() {
              const r = new g(this._adapter);
              return r.updateSelection(this.selection, this), r;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.LFG(et._A));
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      const oo = {
          provide: Yi,
          deps: [[new a.FiY(), new a.tp0(), Yi], et._A],
          useFactory: function po(g, R) {
            return g || new cs(R);
          },
        },
        B = new a.OlP('MAT_DATE_RANGE_SELECTION_STRATEGY');
      let q = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            const c = this._activeDate,
              _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              this._hasSameMonthAndYear(c, this._activeDate) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setRanges(this._selected);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _, k, me) {
            (this._changeDetectorRef = r),
              (this._dateFormats = c),
              (this._dateAdapter = _),
              (this._dir = k),
              (this._rangeStrategy = me),
              (this._rerenderSubscription = Tn.w0.EMPTY),
              (this.activeDrag = null),
              (this.selectedChange = new a.vpe()),
              (this._userSelection = new a.vpe()),
              (this.dragStarted = new a.vpe()),
              (this.dragEnded = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Z.O)(null))
              .subscribe(() => this._init());
          }
          ngOnChanges(r) {
            const c = r.comparisonStart || r.comparisonEnd;
            c && !c.firstChange && this._setRanges(this.selected),
              r.activeDrag && !this.activeDrag && this._clearPreview();
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _dateSelected(r) {
            const c = r.value,
              _ = this._getDateFromDayOfMonth(c);
            let k, me;
            this._selected instanceof bi
              ? ((k = this._getDateInCurrentMonth(this._selected.start)),
                (me = this._getDateInCurrentMonth(this._selected.end)))
              : (k = me = this._getDateInCurrentMonth(this._selected)),
              (k !== c || me !== c) && this.selectedChange.emit(_),
              this._userSelection.emit({ value: _, event: r.event }),
              this._clearPreview(),
              this._changeDetectorRef.markForCheck();
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromDayOfMonth(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this._activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case tt.oh:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case tt.SV:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case tt.LH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  -7,
                );
                break;
              case tt.JH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  7,
                );
                break;
              case tt.Sd:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  1 - this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case tt.uR:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                    this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case tt.Ku:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                break;
              case tt.VM:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                break;
              case tt.K5:
              case tt.L_:
                return (
                  (this._selectionKeyPressed = !0),
                  void (this._canSelect(this._activeDate) && r.preventDefault())
                );
              case tt.hY:
                return void (
                  null != this._previewEnd &&
                  !(0, tt.Vb)(r) &&
                  (this._clearPreview(),
                  this.activeDrag
                    ? this.dragEnded.emit({ value: null, event: r })
                    : (this.selectedChange.emit(null),
                      this._userSelection.emit({ value: null, event: r })),
                  r.preventDefault(),
                  r.stopPropagation())
                );
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              (this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked()),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === tt.L_ || r.keyCode === tt.K5) &&
              (this._selectionKeyPressed &&
                this._canSelect(this._activeDate) &&
                this._dateSelected({
                  value: this._dateAdapter.getDate(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _init() {
            this._setRanges(this.selected),
              (this._todayDate = this._getCellCompareValue(
                this._dateAdapter.today(),
              )),
              (this._monthLabel = this._dateFormats.display.monthLabel
                ? this._dateAdapter.format(
                    this.activeDate,
                    this._dateFormats.display.monthLabel,
                  )
                : this._dateAdapter
                    .getMonthNames('short')
                    [
                      this._dateAdapter.getMonth(this.activeDate)
                    ].toLocaleUpperCase());
            let r = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              1,
            );
            (this._firstWeekOffset =
              (7 +
                this._dateAdapter.getDayOfWeek(r) -
                this._dateAdapter.getFirstDayOfWeek()) %
              7),
              this._initWeekdays(),
              this._createWeekCells(),
              this._changeDetectorRef.markForCheck();
          }
          _focusActiveCell(r) {
            this._matCalendarBody._focusActiveCell(r);
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _previewChanged({ event: r, value: c }) {
            if (this._rangeStrategy) {
              const _ = c ? c.rawValue : null,
                k = this._rangeStrategy.createPreview(_, this.selected, r);
              if (
                ((this._previewStart = this._getCellCompareValue(k.start)),
                (this._previewEnd = this._getCellCompareValue(k.end)),
                this.activeDrag && _)
              ) {
                const me = this._rangeStrategy.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  _,
                  r,
                );
                me &&
                  ((this._previewStart = this._getCellCompareValue(me.start)),
                  (this._previewEnd = this._getCellCompareValue(me.end)));
              }
              this._changeDetectorRef.detectChanges();
            }
          }
          _dragEnded(r) {
            if (this.activeDrag)
              if (r.value) {
                const c = this._rangeStrategy?.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  r.value,
                  r.event,
                );
                this.dragEnded.emit({ value: c ?? null, event: r.event });
              } else this.dragEnded.emit({ value: null, event: r.event });
          }
          _getDateFromDayOfMonth(r) {
            return this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r,
            );
          }
          _initWeekdays() {
            const r = this._dateAdapter.getFirstDayOfWeek(),
              c = this._dateAdapter.getDayOfWeekNames('narrow');
            let k = this._dateAdapter
              .getDayOfWeekNames('long')
              .map((me, st) => ({ long: me, narrow: c[st] }));
            this._weekdays = k.slice(r).concat(k.slice(0, r));
          }
          _createWeekCells() {
            const r = this._dateAdapter.getNumDaysInMonth(this.activeDate),
              c = this._dateAdapter.getDateNames();
            this._weeks = [[]];
            for (let _ = 0, k = this._firstWeekOffset; _ < r; _++, k++) {
              7 == k && (this._weeks.push([]), (k = 0));
              const me = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  this._dateAdapter.getMonth(this.activeDate),
                  _ + 1,
                ),
                st = this._shouldEnableDate(me),
                Jt = this._dateAdapter.format(
                  me,
                  this._dateFormats.display.dateA11yLabel,
                ),
                An = this.dateClass ? this.dateClass(me, 'month') : void 0;
              this._weeks[this._weeks.length - 1].push(
                new io(
                  _ + 1,
                  c[_],
                  Jt,
                  st,
                  An,
                  this._getCellCompareValue(me),
                  me,
                ),
              );
            }
          }
          _shouldEnableDate(r) {
            return (
              !!r &&
              (!this.minDate ||
                this._dateAdapter.compareDate(r, this.minDate) >= 0) &&
              (!this.maxDate ||
                this._dateAdapter.compareDate(r, this.maxDate) <= 0) &&
              (!this.dateFilter || this.dateFilter(r))
            );
          }
          _getDateInCurrentMonth(r) {
            return r && this._hasSameMonthAndYear(r, this.activeDate)
              ? this._dateAdapter.getDate(r)
              : null;
          }
          _hasSameMonthAndYear(r, c) {
            return !(
              !r ||
              !c ||
              this._dateAdapter.getMonth(r) != this._dateAdapter.getMonth(c) ||
              this._dateAdapter.getYear(r) != this._dateAdapter.getYear(c)
            );
          }
          _getCellCompareValue(r) {
            if (r) {
              const c = this._dateAdapter.getYear(r),
                _ = this._dateAdapter.getMonth(r),
                k = this._dateAdapter.getDate(r);
              return new Date(c, _, k).getTime();
            }
            return null;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setRanges(r) {
            r instanceof bi
              ? ((this._rangeStart = this._getCellCompareValue(r.start)),
                (this._rangeEnd = this._getCellCompareValue(r.end)),
                (this._isRange = !0))
              : ((this._rangeStart = this._rangeEnd =
                  this._getCellCompareValue(r)),
                (this._isRange = !1)),
              (this._comparisonRangeStart = this._getCellCompareValue(
                this.comparisonStart,
              )),
              (this._comparisonRangeEnd = this._getCellCompareValue(
                this.comparisonEnd,
              ));
          }
          _canSelect(r) {
            return !this.dateFilter || this.dateFilter(r);
          }
          _clearPreview() {
            this._previewStart = this._previewEnd = null;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.sBO),
              a.Y36(et.sG, 8),
              a.Y36(et._A, 8),
              a.Y36(vn.Is, 8),
              a.Y36(B, 8),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-month-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(ro, 5), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
              comparisonStart: 'comparisonStart',
              comparisonEnd: 'comparisonEnd',
              startDateAccessibleName: 'startDateAccessibleName',
              endDateAccessibleName: 'endDateAccessibleName',
              activeDrag: 'activeDrag',
            },
            outputs: {
              selectedChange: 'selectedChange',
              _userSelection: '_userSelection',
              dragStarted: 'dragStarted',
              dragEnded: 'dragEnded',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMonthView'],
            features: [a.TTD],
            decls: 7,
            vars: 15,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              [1, 'mat-calendar-table-header'],
              ['scope', 'col', 4, 'ngFor', 'ngForOf'],
              [
                'aria-hidden',
                'true',
                'colspan',
                '7',
                1,
                'mat-calendar-table-header-divider',
              ],
              [
                'mat-calendar-body',
                '',
                3,
                'label',
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'comparisonStart',
                'comparisonEnd',
                'previewStart',
                'previewEnd',
                'isRange',
                'labelMinRequiredCells',
                'activeCell',
                'startDateAccessibleName',
                'endDateAccessibleName',
                'selectedValueChange',
                'activeDateChange',
                'previewChange',
                'dragStarted',
                'dragEnded',
                'keyup',
                'keydown',
              ],
              ['scope', 'col'],
              [1, 'cdk-visually-hidden'],
              ['aria-hidden', 'true'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a.YNc(3, T, 5, 2, 'th', 2),
                a.qZA(),
                a.TgZ(4, 'tr'),
                a._UZ(5, 'th', 3),
                a.qZA()(),
                a.TgZ(6, 'tbody', 4),
                a.NdJ('selectedValueChange', function (k) {
                  return c._dateSelected(k);
                })('activeDateChange', function (k) {
                  return c._updateActiveDate(k);
                })('previewChange', function (k) {
                  return c._previewChanged(k);
                })('dragStarted', function (k) {
                  return c.dragStarted.emit(k);
                })('dragEnded', function (k) {
                  return c._dragEnded(k);
                })('keyup', function (k) {
                  return c._handleCalendarBodyKeyup(k);
                })('keydown', function (k) {
                  return c._handleCalendarBodyKeydown(k);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('ngForOf', c._weekdays),
                  a.xp6(3),
                  a.Q6J('label', c._monthLabel)('rows', c._weeks)(
                    'todayValue',
                    c._todayDate,
                  )('startValue', c._rangeStart)('endValue', c._rangeEnd)(
                    'comparisonStart',
                    c._comparisonRangeStart,
                  )('comparisonEnd', c._comparisonRangeEnd)(
                    'previewStart',
                    c._previewStart,
                  )('previewEnd', c._previewEnd)('isRange', c._isRange)(
                    'labelMinRequiredCells',
                    3,
                  )('activeCell', c._dateAdapter.getDate(c.activeDate) - 1)(
                    'startDateAccessibleName',
                    c.startDateAccessibleName,
                  )('endDateAccessibleName', c.endDateAccessibleName));
            },
            dependencies: [s.sg, ro],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const _e = 24;
      let qe = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            let c = this._activeDate;
            const _ =
              this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              gt(
                this._dateAdapter,
                c,
                this._activeDate,
                this.minDate,
                this.maxDate,
              ) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setSelectedYear(r);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _) {
            (this._changeDetectorRef = r),
              (this._dateAdapter = c),
              (this._dir = _),
              (this._rerenderSubscription = Tn.w0.EMPTY),
              (this.selectedChange = new a.vpe()),
              (this.yearSelected = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Z.O)(null))
              .subscribe(() => this._init());
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _init() {
            this._todayYear = this._dateAdapter.getYear(
              this._dateAdapter.today(),
            );
            const c =
              this._dateAdapter.getYear(this._activeDate) -
              Nt(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate,
              );
            this._years = [];
            for (let _ = 0, k = []; _ < _e; _++)
              k.push(c + _),
                4 == k.length &&
                  (this._years.push(k.map(me => this._createCellForYear(me))),
                  (k = []));
            this._changeDetectorRef.markForCheck();
          }
          _yearSelected(r) {
            const c = r.value,
              _ = this._dateAdapter.createDate(c, 0, 1),
              k = this._getDateFromYear(c);
            this.yearSelected.emit(_), this.selectedChange.emit(k);
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromYear(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this.activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case tt.oh:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case tt.SV:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case tt.LH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -4,
                );
                break;
              case tt.JH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  4,
                );
                break;
              case tt.Sd:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -Nt(
                    this._dateAdapter,
                    this.activeDate,
                    this.minDate,
                    this.maxDate,
                  ),
                );
                break;
              case tt.uR:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _e -
                    Nt(
                      this._dateAdapter,
                      this.activeDate,
                      this.minDate,
                      this.maxDate,
                    ) -
                    1,
                );
                break;
              case tt.Ku:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * -_e : -_e,
                );
                break;
              case tt.VM:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * _e : _e,
                );
                break;
              case tt.K5:
              case tt.L_:
                this._selectionKeyPressed = !0;
                break;
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked(),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === tt.L_ || r.keyCode === tt.K5) &&
              (this._selectionKeyPressed &&
                this._yearSelected({
                  value: this._dateAdapter.getYear(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _getActiveCell() {
            return Nt(
              this._dateAdapter,
              this.activeDate,
              this.minDate,
              this.maxDate,
            );
          }
          _focusActiveCell() {
            this._matCalendarBody._focusActiveCell();
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _getDateFromYear(r) {
            const c = this._dateAdapter.getMonth(this.activeDate),
              _ = this._dateAdapter.getNumDaysInMonth(
                this._dateAdapter.createDate(r, c, 1),
              );
            return this._dateAdapter.createDate(
              r,
              c,
              Math.min(this._dateAdapter.getDate(this.activeDate), _),
            );
          }
          _createCellForYear(r) {
            const c = this._dateAdapter.createDate(r, 0, 1),
              _ = this._dateAdapter.getYearName(c),
              k = this.dateClass ? this.dateClass(c, 'multi-year') : void 0;
            return new io(r, _, _, this._shouldEnableYear(r), k);
          }
          _shouldEnableYear(r) {
            if (
              null == r ||
              (this.maxDate && r > this._dateAdapter.getYear(this.maxDate)) ||
              (this.minDate && r < this._dateAdapter.getYear(this.minDate))
            )
              return !1;
            if (!this.dateFilter) return !0;
            for (
              let _ = this._dateAdapter.createDate(r, 0, 1);
              this._dateAdapter.getYear(_) == r;
              _ = this._dateAdapter.addCalendarDays(_, 1)
            )
              if (this.dateFilter(_)) return !0;
            return !1;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setSelectedYear(r) {
            if (((this._selectedYear = null), r instanceof bi)) {
              const c = r.start || r.end;
              c && (this._selectedYear = this._dateAdapter.getYear(c));
            } else r && (this._selectedYear = this._dateAdapter.getYear(r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(a.sBO), a.Y36(et._A, 8), a.Y36(vn.Is, 8));
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-multi-year-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(ro, 5), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
            },
            outputs: {
              selectedChange: 'selectedChange',
              yearSelected: 'yearSelected',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMultiYearView'],
            decls: 5,
            vars: 7,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
              ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
              [
                'mat-calendar-body',
                '',
                3,
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'numCols',
                'cellAspectRatio',
                'activeCell',
                'selectedValueChange',
                'activeDateChange',
                'keyup',
                'keydown',
              ],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a._UZ(3, 'th', 2),
                a.qZA()(),
                a.TgZ(4, 'tbody', 3),
                a.NdJ('selectedValueChange', function (k) {
                  return c._yearSelected(k);
                })('activeDateChange', function (k) {
                  return c._updateActiveDate(k);
                })('keyup', function (k) {
                  return c._handleCalendarBodyKeyup(k);
                })('keydown', function (k) {
                  return c._handleCalendarBodyKeydown(k);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(4),
                  a.Q6J('rows', c._years)('todayValue', c._todayYear)(
                    'startValue',
                    c._selectedYear,
                  )('endValue', c._selectedYear)('numCols', 4)(
                    'cellAspectRatio',
                    4 / 7,
                  )('activeCell', c._getActiveCell()));
            },
            dependencies: [ro],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      function gt(g, R, r, c, _) {
        const k = g.getYear(R),
          me = g.getYear(r),
          st = Zt(g, c, _);
        return Math.floor((k - st) / _e) === Math.floor((me - st) / _e);
      }
      function Nt(g, R, r, c) {
        return (function ln(g, R) {
          return ((g % R) + R) % R;
        })(g.getYear(R) - Zt(g, r, c), _e);
      }
      function Zt(g, R, r) {
        let c = 0;
        return r ? (c = g.getYear(r) - _e + 1) : R && (c = g.getYear(R)), c;
      }
      let In = (() => {
          class g {
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(r) {
              let c = this._activeDate;
              const _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(
                _,
                this.minDate,
                this.maxDate,
              )),
                this._dateAdapter.getYear(c) !==
                  this._dateAdapter.getYear(this._activeDate) && this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              (this._selected =
                r instanceof bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    )),
                this._setSelectedMonth(r);
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            constructor(r, c, _, k) {
              (this._changeDetectorRef = r),
                (this._dateFormats = c),
                (this._dateAdapter = _),
                (this._dir = k),
                (this._rerenderSubscription = Tn.w0.EMPTY),
                (this.selectedChange = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this._activeDate = this._dateAdapter.today());
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe((0, Z.O)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _monthSelected(r) {
              const c = r.value,
                _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  c,
                  1,
                );
              this.monthSelected.emit(_);
              const k = this._getDateFromMonth(c);
              this.selectedChange.emit(k);
            }
            _updateActiveDate(r) {
              const _ = this._activeDate;
              (this.activeDate = this._getDateFromMonth(r.value)),
                this._dateAdapter.compareDate(_, this.activeDate) &&
                  this.activeDateChange.emit(this.activeDate);
            }
            _handleCalendarBodyKeydown(r) {
              const c = this._activeDate,
                _ = this._isRtl();
              switch (r.keyCode) {
                case tt.oh:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? 1 : -1,
                  );
                  break;
                case tt.SV:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? -1 : 1,
                  );
                  break;
                case tt.LH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -4,
                  );
                  break;
                case tt.JH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    4,
                  );
                  break;
                case tt.Sd:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case tt.uR:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    11 - this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case tt.Ku:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? -10 : -1,
                  );
                  break;
                case tt.VM:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? 10 : 1,
                  );
                  break;
                case tt.K5:
                case tt.L_:
                  this._selectionKeyPressed = !0;
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(c, this.activeDate) &&
                (this.activeDateChange.emit(this.activeDate),
                this._focusActiveCellAfterViewChecked()),
                r.preventDefault();
            }
            _handleCalendarBodyKeyup(r) {
              (r.keyCode === tt.L_ || r.keyCode === tt.K5) &&
                (this._selectionKeyPressed &&
                  this._monthSelected({
                    value: this._dateAdapter.getMonth(this._activeDate),
                    event: r,
                  }),
                (this._selectionKeyPressed = !1));
            }
            _init() {
              this._setSelectedMonth(this.selected),
                (this._todayMonth = this._getMonthInCurrentYear(
                  this._dateAdapter.today(),
                )),
                (this._yearLabel = this._dateAdapter.getYearName(
                  this.activeDate,
                ));
              let r = this._dateAdapter.getMonthNames('short');
              (this._months = [
                [0, 1, 2, 3],
                [4, 5, 6, 7],
                [8, 9, 10, 11],
              ].map(c => c.map(_ => this._createCellForMonth(_, r[_])))),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _focusActiveCellAfterViewChecked() {
              this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
            }
            _getMonthInCurrentYear(r) {
              return r &&
                this._dateAdapter.getYear(r) ==
                  this._dateAdapter.getYear(this.activeDate)
                ? this._dateAdapter.getMonth(r)
                : null;
            }
            _getDateFromMonth(r) {
              const c = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                _ = this._dateAdapter.getNumDaysInMonth(c);
              return this._dateAdapter.createDate(
                this._dateAdapter.getYear(this.activeDate),
                r,
                Math.min(this._dateAdapter.getDate(this.activeDate), _),
              );
            }
            _createCellForMonth(r, c) {
              const _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                k = this._dateAdapter.format(
                  _,
                  this._dateFormats.display.monthYearA11yLabel,
                ),
                me = this.dateClass ? this.dateClass(_, 'year') : void 0;
              return new io(
                r,
                c.toLocaleUpperCase(),
                k,
                this._shouldEnableMonth(r),
                me,
              );
            }
            _shouldEnableMonth(r) {
              const c = this._dateAdapter.getYear(this.activeDate);
              if (
                null == r ||
                this._isYearAndMonthAfterMaxDate(c, r) ||
                this._isYearAndMonthBeforeMinDate(c, r)
              )
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let k = this._dateAdapter.createDate(c, r, 1);
                this._dateAdapter.getMonth(k) == r;
                k = this._dateAdapter.addCalendarDays(k, 1)
              )
                if (this.dateFilter(k)) return !0;
              return !1;
            }
            _isYearAndMonthAfterMaxDate(r, c) {
              if (this.maxDate) {
                const _ = this._dateAdapter.getYear(this.maxDate),
                  k = this._dateAdapter.getMonth(this.maxDate);
                return r > _ || (r === _ && c > k);
              }
              return !1;
            }
            _isYearAndMonthBeforeMinDate(r, c) {
              if (this.minDate) {
                const _ = this._dateAdapter.getYear(this.minDate),
                  k = this._dateAdapter.getMonth(this.minDate);
                return r < _ || (r === _ && c < k);
              }
              return !1;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
            _setSelectedMonth(r) {
              this._selectedMonth =
                r instanceof bi
                  ? this._getMonthInCurrentYear(r.start) ||
                    this._getMonthInCurrentYear(r.end)
                  : this._getMonthInCurrentYear(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.sBO),
                a.Y36(et.sG, 8),
                a.Y36(et._A, 8),
                a.Y36(vn.Is, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-year-view']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(ro, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
                }
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                monthSelected: 'monthSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matYearView'],
              decls: 5,
              vars: 9,
              consts: [
                ['role', 'grid', 1, 'mat-calendar-table'],
                ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'startValue',
                  'endValue',
                  'labelMinRequiredCells',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'activeDateChange',
                  'keyup',
                  'keydown',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                  a._UZ(3, 'th', 2),
                  a.qZA()(),
                  a.TgZ(4, 'tbody', 3),
                  a.NdJ('selectedValueChange', function (k) {
                    return c._monthSelected(k);
                  })('activeDateChange', function (k) {
                    return c._updateActiveDate(k);
                  })('keyup', function (k) {
                    return c._handleCalendarBodyKeyup(k);
                  })('keydown', function (k) {
                    return c._handleCalendarBodyKeydown(k);
                  }),
                  a.qZA()()),
                  2 & r &&
                    (a.xp6(4),
                    a.Q6J('label', c._yearLabel)('rows', c._months)(
                      'todayValue',
                      c._todayMonth,
                    )('startValue', c._selectedMonth)(
                      'endValue',
                      c._selectedMonth,
                    )('labelMinRequiredCells', 2)('numCols', 4)(
                      'cellAspectRatio',
                      4 / 7,
                    )('activeCell', c._dateAdapter.getMonth(c.activeDate)));
              },
              dependencies: [ro],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        mn = 1,
        yn = (() => {
          class g {
            constructor(r, c, _, k, me) {
              (this._intl = r),
                (this.calendar = c),
                (this._dateAdapter = _),
                (this._dateFormats = k),
                (this._id = 'mat-calendar-header-' + mn++),
                (this._periodButtonLabelId = `${this._id}-period-label`),
                this.calendar.stateChanges.subscribe(() => me.markForCheck());
            }
            get periodButtonText() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRange(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonDescription() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRangeLabel(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonLabel() {
              return 'month' == this.calendar.currentView
                ? this._intl.switchToMultiYearViewLabel
                : this._intl.switchToMonthViewLabel;
            }
            get prevButtonLabel() {
              return {
                month: this._intl.prevMonthLabel,
                year: this._intl.prevYearLabel,
                'multi-year': this._intl.prevMultiYearLabel,
              }[this.calendar.currentView];
            }
            get nextButtonLabel() {
              return {
                month: this._intl.nextMonthLabel,
                year: this._intl.nextYearLabel,
                'multi-year': this._intl.nextMultiYearLabel,
              }[this.calendar.currentView];
            }
            currentPeriodClicked() {
              this.calendar.currentView =
                'month' == this.calendar.currentView ? 'multi-year' : 'month';
            }
            previousClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      -1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? -1 : -_e,
                    );
            }
            nextClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? 1 : _e,
                    );
            }
            previousEnabled() {
              return (
                !this.calendar.minDate ||
                !this.calendar.minDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.minDate,
                )
              );
            }
            nextEnabled() {
              return (
                !this.calendar.maxDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.maxDate,
                )
              );
            }
            _isSameView(r, c) {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) ==
                    this._dateAdapter.getYear(c) &&
                    this._dateAdapter.getMonth(r) ==
                      this._dateAdapter.getMonth(c)
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) == this._dateAdapter.getYear(c)
                : gt(
                    this._dateAdapter,
                    r,
                    c,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  );
            }
            _formatMinAndMaxYearLabels() {
              const c =
                  this._dateAdapter.getYear(this.calendar.activeDate) -
                  Nt(
                    this._dateAdapter,
                    this.calendar.activeDate,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  ),
                _ = c + _e - 1;
              return [
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(c, 0, 1),
                ),
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(_, 0, 1),
                ),
              ];
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(Sr),
                a.Y36((0, a.Gpc)(() => jn)),
                a.Y36(et._A, 8),
                a.Y36(et.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-calendar-header']],
              exportAs: ['matCalendarHeader'],
              ngContentSelectors: I,
              decls: 13,
              vars: 11,
              consts: [
                [1, 'mat-calendar-header'],
                [1, 'mat-calendar-controls'],
                [
                  'mat-button',
                  '',
                  'type',
                  'button',
                  'aria-live',
                  'polite',
                  1,
                  'mat-calendar-period-button',
                  3,
                  'click',
                ],
                ['aria-hidden', 'true'],
                [
                  'viewBox',
                  '0 0 10 5',
                  'focusable',
                  'false',
                  'aria-hidden',
                  'true',
                  1,
                  'mat-calendar-arrow',
                ],
                ['points', '0,0 5,5 10,0'],
                [1, 'mat-calendar-spacer'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-previous-button',
                  3,
                  'disabled',
                  'click',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-next-button',
                  3,
                  'disabled',
                  'click',
                ],
                [1, 'mat-calendar-hidden-label', 3, 'id'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(),
                  a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'button', 2),
                  a.NdJ('click', function () {
                    return c.currentPeriodClicked();
                  }),
                  a.TgZ(3, 'span', 3),
                  a._uU(4),
                  a.qZA(),
                  a.O4$(),
                  a.TgZ(5, 'svg', 4),
                  a._UZ(6, 'polygon', 5),
                  a.qZA()(),
                  a.kcU(),
                  a._UZ(7, 'div', 6),
                  a.Hsn(8),
                  a.TgZ(9, 'button', 7),
                  a.NdJ('click', function () {
                    return c.previousClicked();
                  }),
                  a.qZA(),
                  a.TgZ(10, 'button', 8),
                  a.NdJ('click', function () {
                    return c.nextClicked();
                  }),
                  a.qZA()()(),
                  a.TgZ(11, 'label', 9),
                  a._uU(12),
                  a.qZA()),
                  2 & r &&
                    (a.xp6(2),
                    a.uIk('aria-label', c.periodButtonLabel)(
                      'aria-describedby',
                      c._periodButtonLabelId,
                    ),
                    a.xp6(2),
                    a.Oqu(c.periodButtonText),
                    a.xp6(1),
                    a.ekj(
                      'mat-calendar-invert',
                      'month' !== c.calendar.currentView,
                    ),
                    a.xp6(4),
                    a.Q6J('disabled', !c.previousEnabled()),
                    a.uIk('aria-label', c.prevButtonLabel),
                    a.xp6(1),
                    a.Q6J('disabled', !c.nextEnabled()),
                    a.uIk('aria-label', c.nextButtonLabel),
                    a.xp6(1),
                    a.Q6J('id', c._periodButtonLabelId),
                    a.xp6(1),
                    a.Oqu(c.periodButtonDescription));
              },
              dependencies: [$t.lW, $t.RK],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        jn = (() => {
          class g {
            get startAt() {
              return this._startAt;
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              this._selected =
                r instanceof bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    );
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get activeDate() {
              return this._clampedActiveDate;
            }
            set activeDate(r) {
              (this._clampedActiveDate = this._dateAdapter.clampDate(
                r,
                this.minDate,
                this.maxDate,
              )),
                this.stateChanges.next(),
                this._changeDetectorRef.markForCheck();
            }
            get currentView() {
              return this._currentView;
            }
            set currentView(r) {
              const c = this._currentView !== r ? r : null;
              (this._currentView = r),
                (this._moveFocusOnNextTick = !0),
                this._changeDetectorRef.markForCheck(),
                c && this.viewChanged.emit(c);
            }
            constructor(r, c, _, k) {
              (this._dateAdapter = c),
                (this._dateFormats = _),
                (this._changeDetectorRef = k),
                (this._moveFocusOnNextTick = !1),
                (this.startView = 'month'),
                (this.selectedChange = new a.vpe()),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this._userSelection = new a.vpe()),
                (this._userDragDrop = new a.vpe()),
                (this._activeDrag = null),
                (this.stateChanges = new Kt.x()),
                (this._intlChanges = r.changes.subscribe(() => {
                  k.markForCheck(), this.stateChanges.next();
                }));
            }
            ngAfterContentInit() {
              (this._calendarHeaderPortal = new $n.C5(
                this.headerComponent || yn,
              )),
                (this.activeDate = this.startAt || this._dateAdapter.today()),
                (this._currentView = this.startView);
            }
            ngAfterViewChecked() {
              this._moveFocusOnNextTick &&
                ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe(), this.stateChanges.complete();
            }
            ngOnChanges(r) {
              const c =
                  r.minDate &&
                  !this._dateAdapter.sameDate(
                    r.minDate.previousValue,
                    r.minDate.currentValue,
                  )
                    ? r.minDate
                    : void 0,
                _ =
                  r.maxDate &&
                  !this._dateAdapter.sameDate(
                    r.maxDate.previousValue,
                    r.maxDate.currentValue,
                  )
                    ? r.maxDate
                    : void 0,
                k = c || _ || r.dateFilter;
              if (k && !k.firstChange) {
                const me = this._getCurrentViewComponent();
                me && (this._changeDetectorRef.detectChanges(), me._init());
              }
              this.stateChanges.next();
            }
            focusActiveCell() {
              this._getCurrentViewComponent()._focusActiveCell(!1);
            }
            updateTodaysDate() {
              this._getCurrentViewComponent()._init();
            }
            _dateSelected(r) {
              const c = r.value;
              (this.selected instanceof bi ||
                (c && !this._dateAdapter.sameDate(c, this.selected))) &&
                this.selectedChange.emit(c),
                this._userSelection.emit(r);
            }
            _yearSelectedInMultiYearView(r) {
              this.yearSelected.emit(r);
            }
            _monthSelectedInYearView(r) {
              this.monthSelected.emit(r);
            }
            _goToDateInView(r, c) {
              (this.activeDate = r), (this.currentView = c);
            }
            _dragStarted(r) {
              this._activeDrag = r;
            }
            _dragEnded(r) {
              this._activeDrag &&
                (r.value && this._userDragDrop.emit(r),
                (this._activeDrag = null));
            }
            _getCurrentViewComponent() {
              return this.monthView || this.yearView || this.multiYearView;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(Sr),
                a.Y36(et._A, 8),
                a.Y36(et.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-calendar']],
              viewQuery: function (r, c) {
                if ((1 & r && (a.Gf(q, 5), a.Gf(In, 5), a.Gf(qe, 5)), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.monthView = _.first),
                    a.iGM((_ = a.CRH())) && (c.yearView = _.first),
                    a.iGM((_ = a.CRH())) && (c.multiYearView = _.first);
                }
              },
              hostAttrs: [1, 'mat-calendar'],
              inputs: {
                headerComponent: 'headerComponent',
                startAt: 'startAt',
                startView: 'startView',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                _userSelection: '_userSelection',
                _userDragDrop: '_userDragDrop',
              },
              exportAs: ['matCalendar'],
              features: [a._Bn([oo]), a.TTD],
              decls: 5,
              vars: 5,
              consts: [
                [3, 'cdkPortalOutlet'],
                [
                  'cdkMonitorSubtreeFocus',
                  '',
                  'tabindex',
                  '-1',
                  1,
                  'mat-calendar-content',
                  3,
                  'ngSwitch',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, w, 0, 0, 'ng-template', 0),
                  a.TgZ(1, 'div', 1),
                  a.YNc(2, $, 1, 11, 'mat-month-view', 2),
                  a.YNc(3, it, 1, 6, 'mat-year-view', 3),
                  a.YNc(4, an, 1, 6, 'mat-multi-year-view', 4),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('cdkPortalOutlet', c._calendarHeaderPortal),
                    a.xp6(1),
                    a.Q6J('ngSwitch', c.currentView),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'month'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'year'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'multi-year'));
              },
              dependencies: [s.RF, s.n9, Rt.kH, $n.Pl, q, In, qe],
              styles: [
                '.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}.mat-calendar-hidden-label{display:none}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      const qn = {
        transformPanel: (0, jt.X$)('transformPanel', [
          (0, jt.eR)(
            'void => enter-dropdown',
            (0, jt.jt)(
              '120ms cubic-bezier(0, 0, 0.2, 1)',
              (0, jt.F4)([
                (0, jt.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
                (0, jt.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ]),
            ),
          ),
          (0, jt.eR)(
            'void => enter-dialog',
            (0, jt.jt)(
              '150ms cubic-bezier(0, 0, 0.2, 1)',
              (0, jt.F4)([
                (0, jt.oB)({ opacity: 0, transform: 'scale(0.7)' }),
                (0, jt.oB)({ transform: 'none', opacity: 1 }),
              ]),
            ),
          ),
          (0, jt.eR)(
            '* => void',
            (0, jt.jt)('100ms linear', (0, jt.oB)({ opacity: 0 })),
          ),
        ]),
        fadeInCalendar: (0, jt.X$)('fadeInCalendar', [
          (0, jt.SB)('void', (0, jt.oB)({ opacity: 0 })),
          (0, jt.SB)('enter', (0, jt.oB)({ opacity: 1 })),
          (0, jt.eR)(
            'void => *',
            (0, jt.jt)('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ),
        ]),
      };
      let Mi = 0;
      const fi = new a.OlP('mat-datepicker-scroll-strategy'),
        vr = {
          provide: fi,
          deps: [gn.aV],
          useFactory: function pi(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        y = (0, et.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        );
      let P = (() => {
          class g extends y {
            constructor(r, c, _, k, me, st) {
              super(r),
                (this._changeDetectorRef = c),
                (this._globalModel = _),
                (this._dateAdapter = k),
                (this._rangeSelectionStrategy = me),
                (this._subscriptions = new Tn.w0()),
                (this._animationDone = new Kt.x()),
                (this._isAnimating = !1),
                (this._actionsPortal = null),
                (this._closeButtonText = st.closeCalendarLabel);
            }
            ngOnInit() {
              this._animationState = this.datepicker.touchUi
                ? 'enter-dialog'
                : 'enter-dropdown';
            }
            ngAfterViewInit() {
              this._subscriptions.add(
                this.datepicker.stateChanges.subscribe(() => {
                  this._changeDetectorRef.markForCheck();
                }),
              ),
                this._calendar.focusActiveCell();
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(), this._animationDone.complete();
            }
            _handleUserSelection(r) {
              const c = this._model.selection,
                _ = r.value,
                k = c instanceof bi;
              if (k && this._rangeSelectionStrategy) {
                const me = this._rangeSelectionStrategy.selectionFinished(
                  _,
                  c,
                  r.event,
                );
                this._model.updateSelection(me, this);
              } else
                _ &&
                  (k || !this._dateAdapter.sameDate(_, c)) &&
                  this._model.add(_);
              (!this._model || this._model.isComplete()) &&
                !this._actionsPortal &&
                this.datepicker.close();
            }
            _handleUserDragDrop(r) {
              this._model.updateSelection(r.value, this);
            }
            _startExitAnimation() {
              (this._animationState = 'void'),
                this._changeDetectorRef.markForCheck();
            }
            _handleAnimationEvent(r) {
              (this._isAnimating = 'start' === r.phaseName),
                this._isAnimating || this._animationDone.next();
            }
            _getSelected() {
              return this._model.selection;
            }
            _applyPendingSelection() {
              this._model !== this._globalModel &&
                this._globalModel.updateSelection(this._model.selection, this);
            }
            _assignActions(r, c) {
              (this._model = r ? this._globalModel.clone() : this._globalModel),
                (this._actionsPortal = r),
                c && this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(Yi),
                a.Y36(et._A),
                a.Y36(B, 8),
                a.Y36(Sr),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker-content']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(jn, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._calendar = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-content'],
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.WFA('@transformPanel.start', function (k) {
                    return c._handleAnimationEvent(k);
                  })('@transformPanel.done', function (k) {
                    return c._handleAnimationEvent(k);
                  }),
                  2 & r &&
                    (a.d8E('@transformPanel', c._animationState),
                    a.ekj(
                      'mat-datepicker-content-touch',
                      c.datepicker.touchUi,
                    ));
              },
              inputs: { color: 'color' },
              exportAs: ['matDatepickerContent'],
              features: [a.qOj],
              decls: 5,
              vars: 26,
              consts: [
                [
                  'cdkTrapFocus',
                  '',
                  'role',
                  'dialog',
                  1,
                  'mat-datepicker-content-container',
                ],
                [
                  3,
                  'id',
                  'ngClass',
                  'startAt',
                  'startView',
                  'minDate',
                  'maxDate',
                  'dateFilter',
                  'headerComponent',
                  'selected',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'yearSelected',
                  'monthSelected',
                  'viewChanged',
                  '_userSelection',
                  '_userDragDrop',
                ],
                [3, 'cdkPortalOutlet'],
                [
                  'type',
                  'button',
                  'mat-raised-button',
                  '',
                  1,
                  'mat-datepicker-close-button',
                  3,
                  'color',
                  'focus',
                  'blur',
                  'click',
                ],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.TgZ(0, 'div', 0)(1, 'mat-calendar', 1),
                    a.NdJ('yearSelected', function (k) {
                      return c.datepicker._selectYear(k);
                    })('monthSelected', function (k) {
                      return c.datepicker._selectMonth(k);
                    })('viewChanged', function (k) {
                      return c.datepicker._viewChanged(k);
                    })('_userSelection', function (k) {
                      return c._handleUserSelection(k);
                    })('_userDragDrop', function (k) {
                      return c._handleUserDragDrop(k);
                    }),
                    a.qZA(),
                    a.YNc(2, si, 0, 0, 'ng-template', 2),
                    a.TgZ(3, 'button', 3),
                    a.NdJ('focus', function () {
                      return (c._closeButtonFocused = !0);
                    })('blur', function () {
                      return (c._closeButtonFocused = !1);
                    })('click', function () {
                      return c.datepicker.close();
                    }),
                    a._uU(4),
                    a.qZA()()),
                  2 & r)
                ) {
                  let _;
                  a.ekj(
                    'mat-datepicker-content-container-with-custom-header',
                    c.datepicker.calendarHeaderComponent,
                  )(
                    'mat-datepicker-content-container-with-actions',
                    c._actionsPortal,
                  ),
                    a.uIk('aria-modal', !0)(
                      'aria-labelledby',
                      null !== (_ = c._dialogLabelId) && void 0 !== _
                        ? _
                        : void 0,
                    ),
                    a.xp6(1),
                    a.Q6J('id', c.datepicker.id)(
                      'ngClass',
                      c.datepicker.panelClass,
                    )('startAt', c.datepicker.startAt)(
                      'startView',
                      c.datepicker.startView,
                    )('minDate', c.datepicker._getMinDate())(
                      'maxDate',
                      c.datepicker._getMaxDate(),
                    )('dateFilter', c.datepicker._getDateFilter())(
                      'headerComponent',
                      c.datepicker.calendarHeaderComponent,
                    )('selected', c._getSelected())(
                      'dateClass',
                      c.datepicker.dateClass,
                    )('comparisonStart', c.comparisonStart)(
                      'comparisonEnd',
                      c.comparisonEnd,
                    )('@fadeInCalendar', 'enter')(
                      'startDateAccessibleName',
                      c.startDateAccessibleName,
                    )('endDateAccessibleName', c.endDateAccessibleName),
                    a.xp6(1),
                    a.Q6J('cdkPortalOutlet', c._actionsPortal),
                    a.xp6(1),
                    a.ekj('cdk-visually-hidden', !c._closeButtonFocused),
                    a.Q6J('color', c.color || 'primary'),
                    a.xp6(1),
                    a.Oqu(c._closeButtonText);
                }
              },
              dependencies: [s.mk, $t.lW, Rt.mK, $n.Pl, jn],
              styles: [
                '.mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}',
              ],
              encapsulation: 2,
              data: { animation: [qn.transformPanel, qn.fadeInCalendar] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        A = (() => {
          class g {
            get startAt() {
              return (
                this._startAt ||
                (this.datepickerInput
                  ? this.datepickerInput.getStartValue()
                  : null)
              );
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get color() {
              return (
                this._color ||
                (this.datepickerInput
                  ? this.datepickerInput.getThemePalette()
                  : void 0)
              );
            }
            set color(r) {
              this._color = r;
            }
            get touchUi() {
              return this._touchUi;
            }
            set touchUi(r) {
              this._touchUi = (0, pt.Ig)(r);
            }
            get disabled() {
              return void 0 === this._disabled && this.datepickerInput
                ? this.datepickerInput.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              const c = (0, pt.Ig)(r);
              c !== this._disabled &&
                ((this._disabled = c), this.stateChanges.next(void 0));
            }
            get restoreFocus() {
              return this._restoreFocus;
            }
            set restoreFocus(r) {
              this._restoreFocus = (0, pt.Ig)(r);
            }
            get panelClass() {
              return this._panelClass;
            }
            set panelClass(r) {
              this._panelClass = (0, pt.du)(r);
            }
            get opened() {
              return this._opened;
            }
            set opened(r) {
              (0, pt.Ig)(r) ? this.open() : this.close();
            }
            _getMinDate() {
              return this.datepickerInput && this.datepickerInput.min;
            }
            _getMaxDate() {
              return this.datepickerInput && this.datepickerInput.max;
            }
            _getDateFilter() {
              return this.datepickerInput && this.datepickerInput.dateFilter;
            }
            constructor(r, c, _, k, me, st, Jt) {
              (this._overlay = r),
                (this._ngZone = c),
                (this._viewContainerRef = _),
                (this._dateAdapter = me),
                (this._dir = st),
                (this._model = Jt),
                (this._inputStateChanges = Tn.w0.EMPTY),
                (this._document = (0, a.f3M)(s.K0)),
                (this.startView = 'month'),
                (this._touchUi = !1),
                (this.xPosition = 'start'),
                (this.yPosition = 'below'),
                (this._restoreFocus = !0),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this.openedStream = new a.vpe()),
                (this.closedStream = new a.vpe()),
                (this._opened = !1),
                (this.id = 'mat-datepicker-' + Mi++),
                (this._focusedElementBeforeOpen = null),
                (this._backdropHarnessClass = `${this.id}-backdrop`),
                (this.stateChanges = new Kt.x()),
                (this._scrollStrategy = k);
            }
            ngOnChanges(r) {
              const c = r.xPosition || r.yPosition;
              if (c && !c.firstChange && this._overlayRef) {
                const _ = this._overlayRef.getConfig().positionStrategy;
                _ instanceof gn._G &&
                  (this._setConnectedPositions(_),
                  this.opened && this._overlayRef.updatePosition());
              }
              this.stateChanges.next(void 0);
            }
            ngOnDestroy() {
              this._destroyOverlay(),
                this.close(),
                this._inputStateChanges.unsubscribe(),
                this.stateChanges.complete();
            }
            select(r) {
              this._model.add(r);
            }
            _selectYear(r) {
              this.yearSelected.emit(r);
            }
            _selectMonth(r) {
              this.monthSelected.emit(r);
            }
            _viewChanged(r) {
              this.viewChanged.emit(r);
            }
            registerInput(r) {
              return (
                this._inputStateChanges.unsubscribe(),
                (this.datepickerInput = r),
                (this._inputStateChanges = r.stateChanges.subscribe(() =>
                  this.stateChanges.next(void 0),
                )),
                this._model
              );
            }
            registerActions(r) {
              (this._actionsPortal = r),
                this._componentRef?.instance._assignActions(r, !0);
            }
            removeActions(r) {
              r === this._actionsPortal &&
                ((this._actionsPortal = null),
                this._componentRef?.instance._assignActions(null, !0));
            }
            open() {
              this._opened ||
                this.disabled ||
                this._componentRef?.instance._isAnimating ||
                ((this._focusedElementBeforeOpen = (0, Kn.ht)()),
                this._openOverlay(),
                (this._opened = !0),
                this.openedStream.emit());
            }
            close() {
              if (!this._opened || this._componentRef?.instance._isAnimating)
                return;
              const r =
                  this._restoreFocus &&
                  this._focusedElementBeforeOpen &&
                  'function' == typeof this._focusedElementBeforeOpen.focus,
                c = () => {
                  this._opened &&
                    ((this._opened = !1), this.closedStream.emit());
                };
              if (this._componentRef) {
                const { instance: _, location: k } = this._componentRef;
                _._startExitAnimation(),
                  _._animationDone.pipe((0, ee.q)(1)).subscribe(() => {
                    const me = this._document.activeElement;
                    r &&
                      (!me ||
                        me === this._document.activeElement ||
                        k.nativeElement.contains(me)) &&
                      this._focusedElementBeforeOpen.focus(),
                      (this._focusedElementBeforeOpen = null),
                      this._destroyOverlay();
                  });
              }
              r ? setTimeout(c) : c();
            }
            _applyPendingSelection() {
              this._componentRef?.instance?._applyPendingSelection();
            }
            _forwardContentValues(r) {
              (r.datepicker = this),
                (r.color = this.color),
                (r._dialogLabelId = this.datepickerInput.getOverlayLabelId()),
                r._assignActions(this._actionsPortal, !1);
            }
            _openOverlay() {
              this._destroyOverlay();
              const r = this.touchUi,
                c = new $n.C5(P, this._viewContainerRef),
                _ = (this._overlayRef = this._overlay.create(
                  new gn.X_({
                    positionStrategy: r
                      ? this._getDialogStrategy()
                      : this._getDropdownStrategy(),
                    hasBackdrop: !0,
                    backdropClass: [
                      r
                        ? 'cdk-overlay-dark-backdrop'
                        : 'mat-overlay-transparent-backdrop',
                      this._backdropHarnessClass,
                    ],
                    direction: this._dir,
                    scrollStrategy: r
                      ? this._overlay.scrollStrategies.block()
                      : this._scrollStrategy(),
                    panelClass: 'mat-datepicker-' + (r ? 'dialog' : 'popup'),
                  }),
                ));
              this._getCloseStream(_).subscribe(k => {
                k && k.preventDefault(), this.close();
              }),
                _.keydownEvents().subscribe(k => {
                  const me = k.keyCode;
                  (me === tt.LH ||
                    me === tt.JH ||
                    me === tt.oh ||
                    me === tt.SV ||
                    me === tt.Ku ||
                    me === tt.VM) &&
                    k.preventDefault();
                }),
                (this._componentRef = _.attach(c)),
                this._forwardContentValues(this._componentRef.instance),
                r ||
                  this._ngZone.onStable
                    .pipe((0, ee.q)(1))
                    .subscribe(() => _.updatePosition());
            }
            _destroyOverlay() {
              this._overlayRef &&
                (this._overlayRef.dispose(),
                (this._overlayRef = this._componentRef = null));
            }
            _getDialogStrategy() {
              return this._overlay
                .position()
                .global()
                .centerHorizontally()
                .centerVertically();
            }
            _getDropdownStrategy() {
              const r = this._overlay
                .position()
                .flexibleConnectedTo(
                  this.datepickerInput.getConnectedOverlayOrigin(),
                )
                .withTransformOriginOn('.mat-datepicker-content')
                .withFlexibleDimensions(!1)
                .withViewportMargin(8)
                .withLockedPosition();
              return this._setConnectedPositions(r);
            }
            _setConnectedPositions(r) {
              const c = 'end' === this.xPosition ? 'end' : 'start',
                _ = 'start' === c ? 'end' : 'start',
                k = 'above' === this.yPosition ? 'bottom' : 'top',
                me = 'top' === k ? 'bottom' : 'top';
              return r.withPositions([
                { originX: c, originY: me, overlayX: c, overlayY: k },
                { originX: c, originY: k, overlayX: c, overlayY: me },
                { originX: _, originY: me, overlayX: _, overlayY: k },
                { originX: _, originY: k, overlayX: _, overlayY: me },
              ]);
            }
            _getCloseStream(r) {
              const c = ['ctrlKey', 'shiftKey', 'metaKey'];
              return (0, Ie.T)(
                r.backdropClick(),
                r.detachments(),
                r
                  .keydownEvents()
                  .pipe(
                    (0, be.h)(
                      _ =>
                        (_.keyCode === tt.hY && !(0, tt.Vb)(_)) ||
                        (this.datepickerInput &&
                          (0, tt.Vb)(_, 'altKey') &&
                          _.keyCode === tt.LH &&
                          c.every(k => !(0, tt.Vb)(_, k))),
                    ),
                  ),
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(gn.aV),
                a.Y36(a.R0b),
                a.Y36(a.s_b),
                a.Y36(fi),
                a.Y36(et._A, 8),
                a.Y36(vn.Is, 8),
                a.Y36(Yi),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              inputs: {
                calendarHeaderComponent: 'calendarHeaderComponent',
                startAt: 'startAt',
                startView: 'startView',
                color: 'color',
                touchUi: 'touchUi',
                disabled: 'disabled',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                restoreFocus: 'restoreFocus',
                dateClass: 'dateClass',
                panelClass: 'panelClass',
                opened: 'opened',
              },
              outputs: {
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                openedStream: 'opened',
                closedStream: 'closed',
              },
              features: [a.TTD],
            })),
            g
          );
        })(),
        j = (() => {
          class g extends A {}
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker']],
              exportAs: ['matDatepicker'],
              features: [a._Bn([oo, { provide: A, useExisting: g }]), a.qOj],
              decls: 0,
              vars: 0,
              template: function (r, c) {},
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      class ae {
        constructor(R, r) {
          (this.target = R),
            (this.targetElement = r),
            (this.value = this.target.value);
        }
      }
      let ot = (() => {
        class g {
          get value() {
            return this._model
              ? this._getValueFromModel(this._model.selection)
              : this._pendingValue;
          }
          set value(r) {
            this._assignValueProgrammatically(r);
          }
          get disabled() {
            return !!this._disabled || this._parentDisabled();
          }
          set disabled(r) {
            const c = (0, pt.Ig)(r),
              _ = this._elementRef.nativeElement;
            this._disabled !== c &&
              ((this._disabled = c), this.stateChanges.next(void 0)),
              c && this._isInitialized && _.blur && _.blur();
          }
          _getValidators() {
            return [
              this._parseValidator,
              this._minValidator,
              this._maxValidator,
              this._filterValidator,
            ];
          }
          _registerModel(r) {
            (this._model = r),
              this._valueChangesSubscription.unsubscribe(),
              this._pendingValue && this._assignValue(this._pendingValue),
              (this._valueChangesSubscription =
                this._model.selectionChanged.subscribe(c => {
                  if (this._shouldHandleChangeEvent(c)) {
                    const _ = this._getValueFromModel(c.selection);
                    (this._lastValueValid = this._isValidValue(_)),
                      this._cvaOnChange(_),
                      this._onTouched(),
                      this._formatValue(_),
                      this.dateInput.emit(
                        new ae(this, this._elementRef.nativeElement),
                      ),
                      this.dateChange.emit(
                        new ae(this, this._elementRef.nativeElement),
                      );
                  }
                }));
          }
          constructor(r, c, _) {
            (this._elementRef = r),
              (this._dateAdapter = c),
              (this._dateFormats = _),
              (this.dateChange = new a.vpe()),
              (this.dateInput = new a.vpe()),
              (this.stateChanges = new Kt.x()),
              (this._onTouched = () => {}),
              (this._validatorOnChange = () => {}),
              (this._cvaOnChange = () => {}),
              (this._valueChangesSubscription = Tn.w0.EMPTY),
              (this._localeSubscription = Tn.w0.EMPTY),
              (this._parseValidator = () =>
                this._lastValueValid
                  ? null
                  : {
                      matDatepickerParse: {
                        text: this._elementRef.nativeElement.value,
                      },
                    }),
              (this._filterValidator = k => {
                const me = this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(k.value),
                );
                return !me || this._matchesFilter(me)
                  ? null
                  : { matDatepickerFilter: !0 };
              }),
              (this._minValidator = k => {
                const me = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(k.value),
                  ),
                  st = this._getMinDate();
                return !st || !me || this._dateAdapter.compareDate(st, me) <= 0
                  ? null
                  : { matDatepickerMin: { min: st, actual: me } };
              }),
              (this._maxValidator = k => {
                const me = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(k.value),
                  ),
                  st = this._getMaxDate();
                return !st || !me || this._dateAdapter.compareDate(st, me) >= 0
                  ? null
                  : { matDatepickerMax: { max: st, actual: me } };
              }),
              (this._lastValueValid = !1),
              (this._localeSubscription = c.localeChanges.subscribe(() => {
                this._assignValueProgrammatically(this.value);
              }));
          }
          ngAfterViewInit() {
            this._isInitialized = !0;
          }
          ngOnChanges(r) {
            (function Dt(g, R) {
              const r = Object.keys(g);
              for (let c of r) {
                const { previousValue: _, currentValue: k } = g[c];
                if (!R.isDateInstance(_) || !R.isDateInstance(k)) return !0;
                if (!R.sameDate(_, k)) return !0;
              }
              return !1;
            })(r, this._dateAdapter) && this.stateChanges.next(void 0);
          }
          ngOnDestroy() {
            this._valueChangesSubscription.unsubscribe(),
              this._localeSubscription.unsubscribe(),
              this.stateChanges.complete();
          }
          registerOnValidatorChange(r) {
            this._validatorOnChange = r;
          }
          validate(r) {
            return this._validator ? this._validator(r) : null;
          }
          writeValue(r) {
            this._assignValueProgrammatically(r);
          }
          registerOnChange(r) {
            this._cvaOnChange = r;
          }
          registerOnTouched(r) {
            this._onTouched = r;
          }
          setDisabledState(r) {
            this.disabled = r;
          }
          _onKeydown(r) {
            (0, tt.Vb)(r, 'altKey') &&
              r.keyCode === tt.JH &&
              ['ctrlKey', 'shiftKey', 'metaKey'].every(
                k => !(0, tt.Vb)(r, k),
              ) &&
              !this._elementRef.nativeElement.readOnly &&
              (this._openPopup(), r.preventDefault());
          }
          _onInput(r) {
            const c = this._lastValueValid;
            let _ = this._dateAdapter.parse(
              r,
              this._dateFormats.parse.dateInput,
            );
            (this._lastValueValid = this._isValidValue(_)),
              (_ = this._dateAdapter.getValidDateOrNull(_));
            const k = !this._dateAdapter.sameDate(_, this.value);
            !_ || k
              ? this._cvaOnChange(_)
              : (r && !this.value && this._cvaOnChange(_),
                c !== this._lastValueValid && this._validatorOnChange()),
              k &&
                (this._assignValue(_),
                this.dateInput.emit(
                  new ae(this, this._elementRef.nativeElement),
                ));
          }
          _onChange() {
            this.dateChange.emit(new ae(this, this._elementRef.nativeElement));
          }
          _onBlur() {
            this.value && this._formatValue(this.value), this._onTouched();
          }
          _formatValue(r) {
            this._elementRef.nativeElement.value =
              null != r
                ? this._dateAdapter.format(
                    r,
                    this._dateFormats.display.dateInput,
                  )
                : '';
          }
          _assignValue(r) {
            this._model
              ? (this._assignValueToModel(r), (this._pendingValue = null))
              : (this._pendingValue = r);
          }
          _isValidValue(r) {
            return !r || this._dateAdapter.isValid(r);
          }
          _parentDisabled() {
            return !1;
          }
          _assignValueProgrammatically(r) {
            (r = this._dateAdapter.deserialize(r)),
              (this._lastValueValid = this._isValidValue(r)),
              (r = this._dateAdapter.getValidDateOrNull(r)),
              this._assignValue(r),
              this._formatValue(r);
          }
          _matchesFilter(r) {
            const c = this._getDateFilter();
            return !c || c(r);
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(a.SBq), a.Y36(et._A, 8), a.Y36(et.sG, 8));
          }),
          (g.ɵdir = a.lG2({
            type: g,
            inputs: { value: 'value', disabled: 'disabled' },
            outputs: { dateChange: 'dateChange', dateInput: 'dateInput' },
            features: [a.TTD],
          })),
          g
        );
      })();
      const Qt = {
          provide: Fn.JU,
          useExisting: (0, a.Gpc)(() => Bn),
          multi: !0,
        },
        zn = { provide: Fn.Cf, useExisting: (0, a.Gpc)(() => Bn), multi: !0 };
      let Bn = (() => {
          class g extends ot {
            set matDatepicker(r) {
              r &&
                ((this._datepicker = r),
                (this._closedSubscription = r.closedStream.subscribe(() =>
                  this._onTouched(),
                )),
                this._registerModel(r.registerInput(this)));
            }
            get min() {
              return this._min;
            }
            set min(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._min) ||
                ((this._min = c), this._validatorOnChange());
            }
            get max() {
              return this._max;
            }
            set max(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._max) ||
                ((this._max = c), this._validatorOnChange());
            }
            get dateFilter() {
              return this._dateFilter;
            }
            set dateFilter(r) {
              const c = this._matchesFilter(this.value);
              (this._dateFilter = r),
                this._matchesFilter(this.value) !== c &&
                  this._validatorOnChange();
            }
            constructor(r, c, _, k) {
              super(r, c, _),
                (this._formField = k),
                (this._closedSubscription = Tn.w0.EMPTY),
                (this._validator = Fn.kI.compose(super._getValidators()));
            }
            getConnectedOverlayOrigin() {
              return this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._elementRef;
            }
            getOverlayLabelId() {
              return this._formField
                ? this._formField.getLabelId()
                : this._elementRef.nativeElement.getAttribute(
                    'aria-labelledby',
                  );
            }
            getThemePalette() {
              return this._formField ? this._formField.color : void 0;
            }
            getStartValue() {
              return this.value;
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this._closedSubscription.unsubscribe();
            }
            _openPopup() {
              this._datepicker && this._datepicker.open();
            }
            _getValueFromModel(r) {
              return r;
            }
            _assignValueToModel(r) {
              this._model && this._model.updateSelection(r, this);
            }
            _getMinDate() {
              return this._min;
            }
            _getMaxDate() {
              return this._max;
            }
            _getDateFilter() {
              return this._dateFilter;
            }
            _shouldHandleChangeEvent(r) {
              return r.source !== this;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(et._A, 8),
                a.Y36(et.sG, 8),
                a.Y36(Hi.G_, 8),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [['input', 'matDatepicker', '']],
              hostAttrs: [1, 'mat-datepicker-input'],
              hostVars: 6,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('input', function (k) {
                    return c._onInput(k.target.value);
                  })('change', function () {
                    return c._onChange();
                  })('blur', function () {
                    return c._onBlur();
                  })('keydown', function (k) {
                    return c._onKeydown(k);
                  }),
                  2 & r &&
                    (a.Ikx('disabled', c.disabled),
                    a.uIk('aria-haspopup', c._datepicker ? 'dialog' : null)(
                      'aria-owns',
                      ((null == c._datepicker ? null : c._datepicker.opened) &&
                        c._datepicker.id) ||
                        null,
                    )('min', c.min ? c._dateAdapter.toIso8601(c.min) : null)(
                      'max',
                      c.max ? c._dateAdapter.toIso8601(c.max) : null,
                    )(
                      'data-mat-calendar',
                      c._datepicker ? c._datepicker.id : null,
                    ));
              },
              inputs: {
                matDatepicker: 'matDatepicker',
                min: 'min',
                max: 'max',
                dateFilter: ['matDatepickerFilter', 'dateFilter'],
              },
              exportAs: ['matDatepickerInput'],
              features: [
                a._Bn([Qt, zn, { provide: to.Jk, useExisting: g }]),
                a.qOj,
              ],
            })),
            g
          );
        })(),
        Lt = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [['', 'matDatepickerToggleIcon', '']],
            })),
            g
          );
        })(),
        Vt = (() => {
          class g {
            get disabled() {
              return void 0 === this._disabled && this.datepicker
                ? this.datepicker.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              this._disabled = (0, pt.Ig)(r);
            }
            constructor(r, c, _) {
              (this._intl = r),
                (this._changeDetectorRef = c),
                (this._stateChanges = Tn.w0.EMPTY);
              const k = Number(_);
              this.tabIndex = k || 0 === k ? k : null;
            }
            ngOnChanges(r) {
              r.datepicker && this._watchStateChanges();
            }
            ngOnDestroy() {
              this._stateChanges.unsubscribe();
            }
            ngAfterContentInit() {
              this._watchStateChanges();
            }
            _open(r) {
              this.datepicker &&
                !this.disabled &&
                (this.datepicker.open(), r.stopPropagation());
            }
            _watchStateChanges() {
              const r = this.datepicker
                  ? this.datepicker.stateChanges
                  : (0, Wt.of)(),
                c =
                  this.datepicker && this.datepicker.datepickerInput
                    ? this.datepicker.datepickerInput.stateChanges
                    : (0, Wt.of)(),
                _ = this.datepicker
                  ? (0, Ie.T)(
                      this.datepicker.openedStream,
                      this.datepicker.closedStream,
                    )
                  : (0, Wt.of)();
              this._stateChanges.unsubscribe(),
                (this._stateChanges = (0, Ie.T)(
                  this._intl.changes,
                  r,
                  c,
                  _,
                ).subscribe(() => this._changeDetectorRef.markForCheck()));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36(Sr), a.Y36(a.sBO), a.$8M('tabindex'));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker-toggle']],
              contentQueries: function (r, c, _) {
                if ((1 & r && a.Suo(_, Lt, 5), 2 & r)) {
                  let k;
                  a.iGM((k = a.CRH())) && (c._customIcon = k.first);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(ht, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._button = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-toggle'],
              hostVars: 8,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (k) {
                    return c._open(k);
                  }),
                  2 & r &&
                    (a.uIk('tabindex', null)(
                      'data-mat-calendar',
                      c.datepicker ? c.datepicker.id : null,
                    ),
                    a.ekj(
                      'mat-datepicker-toggle-active',
                      c.datepicker && c.datepicker.opened,
                    )(
                      'mat-accent',
                      c.datepicker && 'accent' === c.datepicker.color,
                    )(
                      'mat-warn',
                      c.datepicker && 'warn' === c.datepicker.color,
                    ));
              },
              inputs: {
                datepicker: ['for', 'datepicker'],
                tabIndex: 'tabIndex',
                ariaLabel: ['aria-label', 'ariaLabel'],
                disabled: 'disabled',
                disableRipple: 'disableRipple',
              },
              exportAs: ['matDatepickerToggle'],
              features: [a.TTD],
              ngContentSelectors: fo,
              decls: 4,
              vars: 6,
              consts: [
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  3,
                  'disabled',
                  'disableRipple',
                ],
                ['button', ''],
                [
                  'class',
                  'mat-datepicker-toggle-default-icon',
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  4,
                  'ngIf',
                ],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  1,
                  'mat-datepicker-toggle-default-icon',
                ],
                [
                  'd',
                  'M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(Lr),
                  a.TgZ(0, 'button', 0, 1),
                  a.YNc(2, kn, 2, 0, 'svg', 2),
                  a.Hsn(3),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('disabled', c.disabled)(
                      'disableRipple',
                      c.disableRipple,
                    ),
                    a.uIk('aria-haspopup', c.datepicker ? 'dialog' : null)(
                      'aria-label',
                      c.ariaLabel || c._intl.openCalendarLabel,
                    )('tabindex', c.disabled ? -1 : c.tabIndex),
                    a.xp6(2),
                    a.Q6J('ngIf', !c._customIcon));
              },
              dependencies: [s.O5, $t.RK],
              styles: [
                '.mat-datepicker-toggle{pointer-events:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Kr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [Sr, vr],
              imports: [s.ez, $t.ot, gn.U8, Rt.rt, $n.eL, et.BQ, ei.ZD],
            })),
            g
          );
        })();
      class Xi {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(R = !1, r, c = !0, _) {
          (this._multiple = R),
            (this._emitChanges = c),
            (this.compareWith = _),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new Kt.x()),
            r &&
              r.length &&
              (R
                ? r.forEach(k => this._markSelected(k))
                : this._markSelected(r[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...R) {
          this._verifyValueAssignment(R), R.forEach(c => this._markSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        deselect(...R) {
          this._verifyValueAssignment(R),
            R.forEach(c => this._unmarkSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        setSelection(...R) {
          this._verifyValueAssignment(R);
          const r = this.selected,
            c = new Set(R);
          R.forEach(k => this._markSelected(k)),
            r.filter(k => !c.has(k)).forEach(k => this._unmarkSelected(k));
          const _ = this._hasQueuedChanges();
          return this._emitChangeEvent(), _;
        }
        toggle(R) {
          return this.isSelected(R) ? this.deselect(R) : this.select(R);
        }
        clear(R = !0) {
          this._unmarkAll();
          const r = this._hasQueuedChanges();
          return R && this._emitChangeEvent(), r;
        }
        isSelected(R) {
          return this._selection.has(this._getConcreteValue(R));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(R) {
          this._multiple && this.selected && this._selected.sort(R);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(R) {
          (R = this._getConcreteValue(R)),
            this.isSelected(R) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(R) || this._selection.add(R),
              this._emitChanges && this._selectedToEmit.push(R));
        }
        _unmarkSelected(R) {
          (R = this._getConcreteValue(R)),
            this.isSelected(R) &&
              (this._selection.delete(R),
              this._emitChanges && this._deselectedToEmit.push(R));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach(R => this._unmarkSelected(R));
        }
        _verifyValueAssignment(R) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(R) {
          if (this.compareWith) {
            for (let r of this._selection) if (this.compareWith(R, r)) return r;
            return R;
          }
          return R;
        }
      }
      var qs = D(1884);
      const Cs = ['trigger'],
        rl = ['panel'];
      function xs(g, R) {
        if ((1 & g && (a.TgZ(0, 'span', 10), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw();
          a.xp6(1), a.Oqu(r.placeholder);
        }
      }
      function So(g, R) {
        if ((1 & g && (a.TgZ(0, 'span', 14), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw(2);
          a.xp6(1), a.Oqu(r.triggerValue);
        }
      }
      function Es(g, R) {
        1 & g && a.Hsn(0, 0, ['*ngSwitchCase', 'true']);
      }
      function ws(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'span', 11),
            a.YNc(1, So, 2, 1, 'span', 12),
            a.YNc(2, Es, 1, 0, 'ng-content', 13),
            a.qZA()),
          2 & g)
        ) {
          const r = a.oxw();
          a.Q6J('ngSwitch', !!r.customTrigger),
            a.xp6(2),
            a.Q6J('ngSwitchCase', !0);
        }
      }
      function dr(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.O4$(),
            a.kcU(),
            a.TgZ(0, 'div', 15, 16),
            a.NdJ('@transformPanel.done', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._panelDoneAnimatingStream.next(_.toState));
            })('keydown', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k._handleKeydown(_));
            }),
            a.Hsn(2, 1),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Gre(
            'mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ',
            r._getPanelTheme(),
            '',
          ),
            a.Q6J('ngClass', r.panelClass)('@transformPanel', 'showing'),
            a.uIk('id', r.id + '-panel')('aria-multiselectable', r.multiple)(
              'aria-label',
              r.ariaLabel || null,
            )('aria-labelledby', r._getPanelAriaLabelledby());
        }
      }
      const Lo = [[['mat-select-trigger']], '*'],
        Bo = ['mat-select-trigger', '*'],
        Ma = {
          transformPanelWrap: (0, jt.X$)('transformPanelWrap', [
            (0, jt.eR)(
              '* => void',
              (0, jt.IO)('@transformPanel', [(0, jt.pV)()], { optional: !0 }),
            ),
          ]),
          transformPanel: (0, jt.X$)('transformPanel', [
            (0, jt.SB)(
              'void',
              (0, jt.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
            ),
            (0, jt.eR)(
              'void => showing',
              (0, jt.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, jt.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ),
            ),
            (0, jt.eR)(
              '* => void',
              (0, jt.jt)('100ms linear', (0, jt.oB)({ opacity: 0 })),
            ),
          ]),
        };
      let ps = 0;
      const Vo = new a.OlP('mat-select-scroll-strategy'),
        ko = new a.OlP('MAT_SELECT_CONFIG'),
        Ss = {
          provide: Vo,
          deps: [gn.aV],
          useFactory: function qo(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        Qo = new a.OlP('MatSelectTrigger');
      class Uo {
        constructor(R, r) {
          (this.source = R), (this.value = r);
        }
      }
      const ol = (0, et.Kr)(
        (0, et.sb)(
          (0, et.Id)(
            (0, et.FD)(
              class {
                constructor(g, R, r, c, _) {
                  (this._elementRef = g),
                    (this._defaultErrorStateMatcher = R),
                    (this._parentForm = r),
                    (this._parentFormGroup = c),
                    (this.ngControl = _),
                    (this.stateChanges = new Kt.x());
                }
              },
            ),
          ),
        ),
      );
      let Aa = (() => {
          class g extends ol {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(r) {
              (this._placeholder = r), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(Fn.kI.required) ??
                !1
              );
            }
            set required(r) {
              (this._required = (0, pt.Ig)(r)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(r) {
              this._multiple = (0, pt.Ig)(r);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(r) {
              this._disableOptionCentering = (0, pt.Ig)(r);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(r) {
              (this._compareWith = r),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(r) {
              this._assignValue(r) && this._onChange(r);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(r) {
              this._typeaheadDebounceInterval = (0, pt.su)(r);
            }
            get id() {
              return this._id;
            }
            set id(r) {
              (this._id = r || this._uid), this.stateChanges.next();
            }
            constructor(r, c, _, k, me, st, Jt, An, Gn, Ii, bo, vs, uc, Ra) {
              super(me, k, Jt, An, Ii),
                (this._viewportRuler = r),
                (this._changeDetectorRef = c),
                (this._ngZone = _),
                (this._dir = st),
                (this._parentFormField = Gn),
                (this._liveAnnouncer = uc),
                (this._defaultOptions = Ra),
                (this._panelOpen = !1),
                (this._compareWith = (yo, Js) => yo === Js),
                (this._uid = 'mat-select-' + ps++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new Kt.x()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + ps++),
                (this._panelDoneAnimatingStream = new Kt.x()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = (0, J.P)(() => {
                  const yo = this.options;
                  return yo
                    ? yo.changes.pipe(
                        (0, Z.O)(yo),
                        (0, we.w)(() =>
                          (0, Ie.T)(...yo.map(Js => Js.onSelectionChange)),
                        ),
                      )
                    : this._ngZone.onStable.pipe(
                        (0, ee.q)(1),
                        (0, we.w)(() => this.optionSelectionChanges),
                      );
                })),
                (this.openedChange = new a.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  (0, be.h)(yo => yo),
                  (0, kt.U)(() => {}),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, be.h)(yo => !yo),
                  (0, kt.U)(() => {}),
                )),
                (this.selectionChange = new a.vpe()),
                (this.valueChange = new a.vpe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != Ra?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    Ra.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = vs),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(bo) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new Xi(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe((0, qs.x)(), (0, rt.R)(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe((0, rt.R)(this._destroy))
                  .subscribe(r => {
                    r.added.forEach(c => c.select()),
                      r.removed.forEach(c => c.deselect());
                  }),
                this.options.changes
                  .pipe((0, Z.O)(null), (0, rt.R)(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const r = this._getTriggerAriaLabelledby(),
                c = this.ngControl;
              if (r !== this._triggerAriaLabelledBy) {
                const _ = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = r),
                  r
                    ? _.setAttribute('aria-labelledby', r)
                    : _.removeAttribute('aria-labelledby');
              }
              c &&
                (this._previousControl !== c.control &&
                  (void 0 !== this._previousControl &&
                    null !== c.disabled &&
                    c.disabled !== this.disabled &&
                    (this.disabled = c.disabled),
                  (this._previousControl = c.control)),
                this.updateErrorState());
            }
            ngOnChanges(r) {
              (r.disabled || r.userAriaDescribedBy) && this.stateChanges.next(),
                r.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval,
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? 'rtl' : 'ltr',
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(r) {
              this._assignValue(r);
            }
            registerOnChange(r) {
              this._onChange = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              (this.disabled = r),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const r = this._selectionModel.selected.map(c => c.viewValue);
                return this._isRtl() && r.reverse(), r.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(r) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(r)
                  : this._handleClosedKeydown(r));
            }
            _handleClosedKeydown(r) {
              const c = r.keyCode,
                _ = c === tt.JH || c === tt.LH || c === tt.oh || c === tt.SV,
                k = c === tt.K5 || c === tt.L_,
                me = this._keyManager;
              if (
                (!me.isTyping() && k && !(0, tt.Vb)(r)) ||
                ((this.multiple || r.altKey) && _)
              )
                r.preventDefault(), this.open();
              else if (!this.multiple) {
                const st = this.selected;
                me.onKeydown(r);
                const Jt = this.selected;
                Jt &&
                  st !== Jt &&
                  this._liveAnnouncer.announce(Jt.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(r) {
              const c = this._keyManager,
                _ = r.keyCode,
                k = _ === tt.JH || _ === tt.LH,
                me = c.isTyping();
              if (k && r.altKey) r.preventDefault(), this.close();
              else if (
                me ||
                (_ !== tt.K5 && _ !== tt.L_) ||
                !c.activeItem ||
                (0, tt.Vb)(r)
              )
                if (!me && this._multiple && _ === tt.A && r.ctrlKey) {
                  r.preventDefault();
                  const st = this.options.some(
                    Jt => !Jt.disabled && !Jt.selected,
                  );
                  this.options.forEach(Jt => {
                    Jt.disabled || (st ? Jt.select() : Jt.deselect());
                  });
                } else {
                  const st = c.activeItemIndex;
                  c.onKeydown(r),
                    this._multiple &&
                      k &&
                      r.shiftKey &&
                      c.activeItem &&
                      c.activeItemIndex !== st &&
                      c.activeItem._selectViaInteraction();
                }
              else r.preventDefault(), c.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange
                .pipe((0, ee.q)(1))
                .subscribe(() => {
                  this._changeDetectorRef.detectChanges(),
                    this._positioningSettled();
                });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(r) {
              if (
                (this.options.forEach(c => c.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && r)
              )
                Array.isArray(r),
                  r.forEach(c => this._selectOptionByValue(c)),
                  this._sortValues();
              else {
                const c = this._selectOptionByValue(r);
                c
                  ? this._keyManager.updateActiveItem(c)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(r) {
              const c = this.options.find(_ => {
                if (this._selectionModel.isSelected(_)) return !1;
                try {
                  return null != _.value && this._compareWith(_.value, r);
                } catch {
                  return !1;
                }
              });
              return c && this._selectionModel.select(c), c;
            }
            _assignValue(r) {
              return (
                !!(r !== this._value || (this._multiple && Array.isArray(r))) &&
                (this.options && this._setSelectionByValue(r),
                (this._value = r),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new Rt.s1(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0,
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const r = (0, Ie.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe((0, rt.R)(r)).subscribe(c => {
                this._onSelect(c.source, c.isUserInput),
                  c.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                (0, Ie.T)(...this.options.map(c => c._stateChanges))
                  .pipe((0, rt.R)(r))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(r, c) {
              const _ = this._selectionModel.isSelected(r);
              null != r.value || this._multiple
                ? (_ !== r.selected &&
                    (r.selected
                      ? this._selectionModel.select(r)
                      : this._selectionModel.deselect(r)),
                  c && this._keyManager.setActiveItem(r),
                  this.multiple && (this._sortValues(), c && this.focus()))
                : (r.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(r.value)),
                _ !== this._selectionModel.isSelected(r) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const r = this.options.toArray();
                this._selectionModel.sort((c, _) =>
                  this.sortComparator
                    ? this.sortComparator(c, _, r)
                    : r.indexOf(c) - r.indexOf(_),
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(r) {
              let c = null;
              (c = this.multiple
                ? this.selected.map(_ => _.value)
                : this.selected
                ? this.selected.value
                : r),
                (this._value = c),
                this.valueChange.emit(c),
                this._onChange(c),
                this.selectionChange.emit(this._getChangeEvent(c)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0],
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(r) {
              this._elementRef.nativeElement.focus(r);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (r ? r + ' ' : '') + this.ariaLabelledby
                : r;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              let c = (r ? r + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (c += ' ' + this.ariaLabelledby), c;
            }
            _panelDoneAnimating(r) {
              this.openedChange.emit(r);
            }
            setDescribedByIds(r) {
              r.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    r.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(ei.rL),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.Y36(et.rD),
                a.Y36(a.SBq),
                a.Y36(vn.Is, 8),
                a.Y36(Fn.F, 8),
                a.Y36(Fn.sg, 8),
                a.Y36(Hi.G_, 8),
                a.Y36(Fn.a5, 10),
                a.$8M('tabindex'),
                a.Y36(Vo),
                a.Y36(Rt.Kd),
                a.Y36(ko, 8),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(Cs, 5), a.Gf(rl, 5), a.Gf(gn.pI, 5)), 2 & r)
                ) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.trigger = _.first),
                    a.iGM((_ = a.CRH())) && (c.panel = _.first),
                    a.iGM((_ = a.CRH())) && (c._overlayDir = _.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                panelClass: 'panelClass',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                sortComparator: 'sortComparator',
                id: 'id',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [a.qOj, a.TTD],
            })),
            g
          );
        })(),
        sl = (() => {
          class g extends Aa {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'top',
                  },
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-mdc-select-panel-above',
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe((0, rt.R)(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(r) {
              const c = this.options.toArray()[r];
              if (c) {
                const _ = this.panel.nativeElement,
                  k = (0, et.CB)(r, this.options, this.optionGroups),
                  me = c._getHostElement();
                _.scrollTop =
                  0 === r && 1 === k
                    ? 0
                    : (0, et.jH)(
                        me.offsetTop,
                        me.offsetHeight,
                        _.scrollTop,
                        _.offsetHeight,
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(r) {
              return new Uo(this, r);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof gn.xu
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(r) {
              (this._hideSingleSelectionIndicator = (0, pt.Ig)(r)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const r of this.options)
                  r._changeDetectorRef.markForCheck();
            }
          }
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-select']],
              contentQueries: function (r, c, _) {
                if (
                  (1 & r &&
                    (a.Suo(_, Qo, 5), a.Suo(_, et.ey, 5), a.Suo(_, et.K7, 5)),
                  2 & r)
                ) {
                  let k;
                  a.iGM((k = a.CRH())) && (c.customTrigger = k.first),
                    a.iGM((k = a.CRH())) && (c.options = k),
                    a.iGM((k = a.CRH())) && (c.optionGroups = k);
                }
              },
              hostAttrs: [
                'role',
                'combobox',
                'aria-autocomplete',
                'none',
                'aria-haspopup',
                'listbox',
                1,
                'mat-mdc-select',
              ],
              hostVars: 19,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('keydown', function (k) {
                    return c._handleKeydown(k);
                  })('focus', function () {
                    return c._onFocus();
                  })('blur', function () {
                    return c._onBlur();
                  }),
                  2 & r &&
                    (a.uIk('id', c.id)('tabindex', c.tabIndex)(
                      'aria-controls',
                      c.panelOpen ? c.id + '-panel' : null,
                    )('aria-expanded', c.panelOpen)(
                      'aria-label',
                      c.ariaLabel || null,
                    )('aria-required', c.required.toString())(
                      'aria-disabled',
                      c.disabled.toString(),
                    )('aria-invalid', c.errorState)(
                      'aria-activedescendant',
                      c._getAriaActiveDescendant(),
                    ),
                    a.ekj('mat-mdc-select-disabled', c.disabled)(
                      'mat-mdc-select-invalid',
                      c.errorState,
                    )('mat-mdc-select-required', c.required)(
                      'mat-mdc-select-empty',
                      c.empty,
                    )('mat-mdc-select-multiple', c.multiple));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
                hideSingleSelectionIndicator: 'hideSingleSelectionIndicator',
              },
              exportAs: ['matSelect'],
              features: [
                a._Bn([
                  { provide: Hi.Eo, useExisting: g },
                  { provide: et.HF, useExisting: g },
                ]),
                a.qOj,
              ],
              ngContentSelectors: Bo,
              decls: 11,
              vars: 11,
              consts: [
                [
                  'cdk-overlay-origin',
                  '',
                  1,
                  'mat-mdc-select-trigger',
                  3,
                  'click',
                ],
                ['fallbackOverlayOrigin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-mdc-select-value', 3, 'ngSwitch'],
                [
                  'class',
                  'mat-mdc-select-placeholder mat-mdc-select-min-line',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'class',
                  'mat-mdc-select-value-text',
                  3,
                  'ngSwitch',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'mat-mdc-select-arrow-wrapper'],
                [1, 'mat-mdc-select-arrow'],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'focusable',
                  'false',
                ],
                ['d', 'M7 10l5 5 5-5z'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayWidth',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-mdc-select-placeholder', 'mat-mdc-select-min-line'],
                [1, 'mat-mdc-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-mdc-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-mdc-select-min-line'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(Lo),
                    a.TgZ(0, 'div', 0, 1),
                    a.NdJ('click', function () {
                      return c.toggle();
                    }),
                    a.TgZ(3, 'div', 2),
                    a.YNc(4, xs, 2, 1, 'span', 3),
                    a.YNc(5, ws, 3, 2, 'span', 4),
                    a.qZA(),
                    a.TgZ(6, 'div', 5)(7, 'div', 6),
                    a.O4$(),
                    a.TgZ(8, 'svg', 7),
                    a._UZ(9, 'path', 8),
                    a.qZA()()()(),
                    a.YNc(10, dr, 3, 9, 'ng-template', 9),
                    a.NdJ('backdropClick', function () {
                      return c.close();
                    })('attach', function () {
                      return c._onAttached();
                    })('detach', function () {
                      return c.close();
                    })),
                  2 & r)
                ) {
                  const _ = a.MAs(1);
                  a.uIk('aria-owns', c.panelOpen ? c.id + '-panel' : null),
                    a.xp6(3),
                    a.Q6J('ngSwitch', c.empty),
                    a.uIk('id', c._valueId),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !0),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !1),
                    a.xp6(5),
                    a.Q6J(
                      'cdkConnectedOverlayPanelClass',
                      c._overlayPanelClass,
                    )('cdkConnectedOverlayScrollStrategy', c._scrollStrategy)(
                      'cdkConnectedOverlayOrigin',
                      c._preferredOverlayOrigin || _,
                    )('cdkConnectedOverlayOpen', c.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      c._positions,
                    )('cdkConnectedOverlayWidth', c._overlayWidth);
                }
              },
              dependencies: [s.mk, s.RF, s.n9, s.ED, gn.pI, gn.xu],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [Ma.transformPanel] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        tc = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [Ss],
              imports: [s.ez, gn.U8, et.Ng, et.BQ, ei.ZD, Hi.lN, et.Ng, et.BQ],
            })),
            g
          );
        })();
      const nc = ['input'],
        ic = ['label'],
        ms = ['*'],
        rc = new a.OlP('mat-checkbox-default-options', {
          providedIn: 'root',
          factory: Qs,
        });
      function Qs() {
        return { color: 'accent', clickAction: 'check-indeterminate' };
      }
      const Xo = {
        provide: Fn.JU,
        useExisting: (0, a.Gpc)(() => ks),
        multi: !0,
      };
      class al {}
      let ll = 0;
      const Ri = Qs(),
        Is = (0, et.sb)(
          (0, et.pj)(
            (0, et.Kr)(
              (0, et.Id)(
                class {
                  constructor(g) {
                    this._elementRef = g;
                  }
                },
              ),
            ),
          ),
        );
      let Jo = (() => {
          class g extends Is {
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            get required() {
              return this._required;
            }
            set required(r) {
              this._required = (0, pt.Ig)(r);
            }
            constructor(r, c, _, k, me, st, Jt) {
              super(c),
                (this._changeDetectorRef = _),
                (this._ngZone = k),
                (this._animationMode = st),
                (this._options = Jt),
                (this.ariaLabel = ''),
                (this.ariaLabelledby = null),
                (this.labelPosition = 'after'),
                (this.name = null),
                (this.change = new a.vpe()),
                (this.indeterminateChange = new a.vpe()),
                (this._onTouched = () => {}),
                (this._currentAnimationClass = ''),
                (this._currentCheckState = 0),
                (this._controlValueAccessorChangeFn = () => {}),
                (this._checked = !1),
                (this._disabled = !1),
                (this._indeterminate = !1),
                (this._options = this._options || Ri),
                (this.color = this.defaultColor =
                  this._options.color || Ri.color),
                (this.tabIndex = parseInt(me) || 0),
                (this.id = this._uniqueId = `${r}${++ll}`);
            }
            ngAfterViewInit() {
              this._syncIndeterminate(this._indeterminate);
            }
            get checked() {
              return this._checked;
            }
            set checked(r) {
              const c = (0, pt.Ig)(r);
              c != this.checked &&
                ((this._checked = c), this._changeDetectorRef.markForCheck());
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(r) {
              const c = (0, pt.Ig)(r);
              c !== this.disabled &&
                ((this._disabled = c), this._changeDetectorRef.markForCheck());
            }
            get indeterminate() {
              return this._indeterminate;
            }
            set indeterminate(r) {
              const c = r != this._indeterminate;
              (this._indeterminate = (0, pt.Ig)(r)),
                c &&
                  (this._transitionCheckState(
                    this._indeterminate ? 3 : this.checked ? 1 : 2,
                  ),
                  this.indeterminateChange.emit(this._indeterminate)),
                this._syncIndeterminate(this._indeterminate);
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
            writeValue(r) {
              this.checked = !!r;
            }
            registerOnChange(r) {
              this._controlValueAccessorChangeFn = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              this.disabled = r;
            }
            _transitionCheckState(r) {
              let c = this._currentCheckState,
                _ = this._getAnimationTargetElement();
              if (
                c !== r &&
                _ &&
                (this._currentAnimationClass &&
                  _.classList.remove(this._currentAnimationClass),
                (this._currentAnimationClass =
                  this._getAnimationClassForCheckStateTransition(c, r)),
                (this._currentCheckState = r),
                this._currentAnimationClass.length > 0)
              ) {
                _.classList.add(this._currentAnimationClass);
                const k = this._currentAnimationClass;
                this._ngZone.runOutsideAngular(() => {
                  setTimeout(() => {
                    _.classList.remove(k);
                  }, 1e3);
                });
              }
            }
            _emitChangeEvent() {
              this._controlValueAccessorChangeFn(this.checked),
                this.change.emit(this._createChangeEvent(this.checked)),
                this._inputElement &&
                  (this._inputElement.nativeElement.checked = this.checked);
            }
            toggle() {
              (this.checked = !this.checked),
                this._controlValueAccessorChangeFn(this.checked);
            }
            _handleInputClick() {
              const r = this._options?.clickAction;
              this.disabled || 'noop' === r
                ? !this.disabled &&
                  'noop' === r &&
                  ((this._inputElement.nativeElement.checked = this.checked),
                  (this._inputElement.nativeElement.indeterminate =
                    this.indeterminate))
                : (this.indeterminate &&
                    'check' !== r &&
                    Promise.resolve().then(() => {
                      (this._indeterminate = !1),
                        this.indeterminateChange.emit(this._indeterminate);
                    }),
                  (this._checked = !this._checked),
                  this._transitionCheckState(this._checked ? 1 : 2),
                  this._emitChangeEvent());
            }
            _onInteractionEvent(r) {
              r.stopPropagation();
            }
            _onBlur() {
              Promise.resolve().then(() => {
                this._onTouched(), this._changeDetectorRef.markForCheck();
              });
            }
            _getAnimationClassForCheckStateTransition(r, c) {
              if ('NoopAnimations' === this._animationMode) return '';
              switch (r) {
                case 0:
                  if (1 === c) return this._animationClasses.uncheckedToChecked;
                  if (3 == c)
                    return this._checked
                      ? this._animationClasses.checkedToIndeterminate
                      : this._animationClasses.uncheckedToIndeterminate;
                  break;
                case 2:
                  return 1 === c
                    ? this._animationClasses.uncheckedToChecked
                    : this._animationClasses.uncheckedToIndeterminate;
                case 1:
                  return 2 === c
                    ? this._animationClasses.checkedToUnchecked
                    : this._animationClasses.checkedToIndeterminate;
                case 3:
                  return 1 === c
                    ? this._animationClasses.indeterminateToChecked
                    : this._animationClasses.indeterminateToUnchecked;
              }
              return '';
            }
            _syncIndeterminate(r) {
              const c = this._inputElement;
              c && (c.nativeElement.indeterminate = r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(nc, 5), a.Gf(ic, 5), a.Gf(et.wG, 5)), 2 & r)
                ) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._inputElement = _.first),
                    a.iGM((_ = a.CRH())) && (c._labelElement = _.first),
                    a.iGM((_ = a.CRH())) && (c.ripple = _.first);
                }
              },
              inputs: {
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                id: 'id',
                required: 'required',
                labelPosition: 'labelPosition',
                name: 'name',
                value: 'value',
                checked: 'checked',
                disabled: 'disabled',
                indeterminate: 'indeterminate',
              },
              outputs: {
                change: 'change',
                indeterminateChange: 'indeterminateChange',
              },
              features: [a.qOj],
            })),
            g
          );
        })(),
        ks = (() => {
          class g extends Jo {
            constructor(r, c, _, k, me, st) {
              super('mat-mdc-checkbox-', r, c, _, k, me, st),
                (this._animationClasses = {
                  uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',
                  uncheckedToIndeterminate:
                    'mdc-checkbox--anim-unchecked-indeterminate',
                  checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',
                  checkedToIndeterminate:
                    'mdc-checkbox--anim-checked-indeterminate',
                  indeterminateToChecked:
                    'mdc-checkbox--anim-indeterminate-checked',
                  indeterminateToUnchecked:
                    'mdc-checkbox--anim-indeterminate-unchecked',
                });
            }
            focus() {
              this._inputElement.nativeElement.focus();
            }
            _createChangeEvent(r) {
              const c = new al();
              return (c.source = this), (c.checked = r), c;
            }
            _getAnimationTargetElement() {
              return this._inputElement?.nativeElement;
            }
            _onInputClick() {
              super._handleInputClick();
            }
            _onTouchTargetClick() {
              super._handleInputClick(),
                this.disabled || this._inputElement.nativeElement.focus();
            }
            _preventBubblingFromLabel(r) {
              r.target &&
                this._labelElement.nativeElement.contains(r.target) &&
                r.stopPropagation();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.$8M('tabindex'),
                a.Y36(a.QbO, 8),
                a.Y36(rc, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-checkbox']],
              hostAttrs: [1, 'mat-mdc-checkbox'],
              hostVars: 12,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.Ikx('id', c.id),
                  a.uIk('tabindex', null)('aria-label', null)(
                    'aria-labelledby',
                    null,
                  ),
                  a.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === c._animationMode,
                  )('mdc-checkbox--disabled', c.disabled)(
                    'mat-mdc-checkbox-disabled',
                    c.disabled,
                  )('mat-mdc-checkbox-checked', c.checked));
              },
              inputs: {
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
              },
              exportAs: ['matCheckbox'],
              features: [a._Bn([Xo]), a.qOj],
              ngContentSelectors: ms,
              decls: 15,
              vars: 19,
              consts: [
                [1, 'mdc-form-field', 3, 'click'],
                [1, 'mdc-checkbox'],
                ['checkbox', ''],
                [1, 'mat-mdc-checkbox-touch-target', 3, 'click'],
                [
                  'type',
                  'checkbox',
                  1,
                  'mdc-checkbox__native-control',
                  3,
                  'checked',
                  'indeterminate',
                  'disabled',
                  'id',
                  'required',
                  'tabIndex',
                  'blur',
                  'click',
                  'change',
                ],
                ['input', ''],
                [1, 'mdc-checkbox__ripple'],
                [1, 'mdc-checkbox__background'],
                [
                  'focusable',
                  'false',
                  'viewBox',
                  '0 0 24 24',
                  'aria-hidden',
                  'true',
                  1,
                  'mdc-checkbox__checkmark',
                ],
                [
                  'fill',
                  'none',
                  'd',
                  'M1.73,12.91 8.1,19.28 22.79,4.59',
                  1,
                  'mdc-checkbox__checkmark-path',
                ],
                [1, 'mdc-checkbox__mixedmark'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-checkbox-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                ],
                [3, 'for'],
                ['label', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(),
                    a.TgZ(0, 'div', 0),
                    a.NdJ('click', function (k) {
                      return c._preventBubblingFromLabel(k);
                    }),
                    a.TgZ(1, 'div', 1, 2)(3, 'div', 3),
                    a.NdJ('click', function () {
                      return c._onTouchTargetClick();
                    }),
                    a.qZA(),
                    a.TgZ(4, 'input', 4, 5),
                    a.NdJ('blur', function () {
                      return c._onBlur();
                    })('click', function () {
                      return c._onInputClick();
                    })('change', function (k) {
                      return c._onInteractionEvent(k);
                    }),
                    a.qZA(),
                    a._UZ(6, 'div', 6),
                    a.TgZ(7, 'div', 7),
                    a.O4$(),
                    a.TgZ(8, 'svg', 8),
                    a._UZ(9, 'path', 9),
                    a.qZA(),
                    a.kcU(),
                    a._UZ(10, 'div', 10),
                    a.qZA(),
                    a._UZ(11, 'div', 11),
                    a.qZA(),
                    a.TgZ(12, 'label', 12, 13),
                    a.Hsn(14),
                    a.qZA()()),
                  2 & r)
                ) {
                  const _ = a.MAs(2);
                  a.ekj(
                    'mdc-form-field--align-end',
                    'before' == c.labelPosition,
                  ),
                    a.xp6(4),
                    a.ekj('mdc-checkbox--selected', c.checked),
                    a.Q6J('checked', c.checked)(
                      'indeterminate',
                      c.indeterminate,
                    )('disabled', c.disabled)('id', c.inputId)(
                      'required',
                      c.required,
                    )('tabIndex', c.tabIndex),
                    a.uIk('aria-label', c.ariaLabel || null)(
                      'aria-labelledby',
                      c.ariaLabelledby,
                    )('aria-describedby', c.ariaDescribedby)('name', c.name)(
                      'value',
                      c.value,
                    ),
                    a.xp6(7),
                    a.Q6J('matRippleTrigger', _)(
                      'matRippleDisabled',
                      c.disableRipple || c.disabled,
                    )('matRippleCentered', !0),
                    a.xp6(1),
                    a.Q6J('for', c.inputId);
                }
              },
              dependencies: [et.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:not([disabled])~.mdc-checkbox__ripple{opacity:.04;transform:scale(1);transition:opacity 80ms 0 cubic-bezier(0, 0, 0.2, 1),transform 80ms 0 cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:not([disabled]):focus~.mdc-checkbox__ripple{opacity:.16}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__native-control:focus:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, black)}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Ts = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({})),
            g
          );
        })(),
        Os = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({ imports: [et.BQ, et.si, Ts, et.BQ, Ts] })),
            g
          );
        })(),
        f = (() => {
          class g {
            transform(r) {
              switch (r) {
                case gi.week:
                  return 'Every week';
                case gi.month:
                  return 'Every month';
                case gi.year:
                  return 'Every year';
                default:
                  return 'Every week';
              }
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'periodName', type: g, pure: !0 })),
            g
          );
        })();
      function m(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'mat-form-field', 19)(1, 'mat-label'),
            a._uU(2, 'Choose a date'),
            a.qZA(),
            a._UZ(3, 'input', 20)(4, 'mat-datepicker-toggle', 21)(
              5,
              'mat-datepicker',
              null,
              22,
            ),
            a.qZA()),
          2 & g)
        ) {
          const r = a.MAs(6),
            c = a.oxw(2);
          a.xp6(3),
            a.Q6J('formControl', c.noteForm.controls.date)('matDatepicker', r),
            a.xp6(1),
            a.Q6J('for', r);
        }
      }
      const d = function (g) {
        return ['select-text', g];
      };
      function C(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'mat-option', 23)(1, 'div', 24), a._uU(2), a.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          a.Q6J('value', r),
            a.xp6(1),
            a.Q6J('ngClass', a.VKq(3, d, r)),
            a.xp6(1),
            a.Oqu(r);
        }
      }
      function O(g, R) {
        if (
          (1 & g &&
            (a.TgZ(0, 'mat-option', 23)(1, 'div'),
            a._uU(2),
            a.ALo(3, 'periodName'),
            a.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          a.Q6J('value', r), a.xp6(2), a.Oqu(a.lcZ(3, 2, r));
        }
      }
      function U(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'div', 9),
            a.YNc(2, m, 7, 3, 'mat-form-field', 10),
            a.TgZ(3, 'mat-form-field', 11)(4, 'mat-label'),
            a._uU(5, 'Style'),
            a.qZA(),
            a.TgZ(6, 'mat-select', 12),
            a.YNc(7, C, 3, 5, 'mat-option', 13),
            a.qZA()()(),
            a.TgZ(8, 'div', 14)(9, 'mat-checkbox', 15),
            a.NdJ('change', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.triggerTime());
            }),
            a._uU(10, ' Time '),
            a.qZA(),
            a.TgZ(11, 'mat-form-field'),
            a._UZ(12, 'input', 16),
            a.qZA()(),
            a.TgZ(13, 'div', 14)(14, 'mat-checkbox', 15),
            a.NdJ('change', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.triggerPeriod());
            }),
            a._uU(15, ' Repeat '),
            a.qZA(),
            a.TgZ(16, 'mat-form-field', 17)(17, 'mat-label'),
            a._uU(18, 'Period'),
            a.qZA(),
            a.TgZ(19, 'mat-select', 18),
            a.YNc(20, O, 4, 4, 'mat-option', 13),
            a.qZA()()(),
            a.BQk();
        }
        if (2 & g) {
          const r = a.oxw();
          a.xp6(2),
            a.Q6J('ngIf', r.withDate),
            a.xp6(4),
            a.Q6J('formControl', r.noteForm.controls.color),
            a.xp6(1),
            a.Q6J('ngForOf', r.styles),
            a.xp6(2),
            a.Q6J('formControl', r.noteForm.controls.hasTime),
            a.xp6(3),
            a.Q6J('formControl', r.noteForm.controls.time),
            a.xp6(2),
            a.Q6J('formControl', r.noteForm.controls.repeatable),
            a.xp6(5),
            a.Q6J('formControl', r.noteForm.controls.period),
            a.xp6(1),
            a.Q6J('ngForOf', r.periods);
        }
      }
      const K = 'default',
        Ve = [K, 'red', 'green', 'blue', 'yellow'],
        xt = gi.week;
      let Xt = (() => {
        class g {
          constructor(r, c, _, k, me) {
            (this.fb = r),
              (this.dialogRef = c),
              (this.store = _),
              (this.data = k),
              (this.dialog = me),
              (this.styles = Ve),
              (this.periods = Object.values(gi)),
              (this.noteForm = this.fb.group({
                title: ['', [Fn.kI.required]],
                date: [new Date(), [Fn.kI.required]],
                color: [K],
                hasTime: [!1],
                time: ['00:00'],
                repeatable: [!1],
                period: [xt],
              })),
              this.noteForm.setValue({
                title: k.note?.title || '',
                date: k.note?.date
                  ? new Date(k.note.date)
                  : k.date || new Date(),
                color: k.note?.color || K,
                time:
                  k.note?.hasTime && k.note?.date
                    ? ze(new Date(k.note.date))
                    : '00:00',
                hasTime: !!k.note?.hasTime,
                repeatable: !!k.note?.repeatable,
                period:
                  k.note?.repeatable && k.note.period ? k.note.period : xt,
              }),
              (this.note = k.note),
              (this.date = k.date),
              (this.withDate = k.withDate),
              k.note?.hasTime
                ? this.noteForm.controls.time.enable()
                : this.noteForm.controls.time.disable(),
              k.note?.repeatable
                ? this.noteForm.controls.period.enable()
                : this.noteForm.controls.period.disable();
          }
          ngOnInit() {
            this.successSubscription = this.store
              .select(We)
              .pipe((0, be.h)(Boolean))
              .subscribe(() => {
                if (
                  (this.dialogRef.close(),
                  this.store.dispatch(He()),
                  this.withDate && this.date)
                ) {
                  const r = _t(this.date),
                    c = lt(this.date);
                  this.store.dispatch(ne({ startDate: ut(r), endDate: Ut(c) }));
                } else this.store.dispatch(te());
              });
          }
          ngOnDestroy() {
            this.successSubscription?.unsubscribe();
          }
          save() {
            const {
              title: r,
              date: c,
              color: _,
              hasTime: k,
              time: me,
              repeatable: st,
              period: Jt,
            } = this.noteForm.value;
            if (!r || !c) return;
            const An = this.note
              ? {
                  ...this.note,
                  title: r,
                  date: this.withDate ? $e(c, k ? me : void 0) : void 0,
                  color: _,
                  hasTime: k,
                  repeatable: st,
                  period: st ? Jt : void 0,
                }
              : {
                  title: r,
                  date: this.withDate ? $e(c, k ? me : void 0) : void 0,
                  color: _,
                  completed: !1,
                  hasTime: k,
                  repeatable: st,
                  period: st ? Jt : void 0,
                };
            this.store.dispatch(this.note?.id ? le(An) : ce(An));
          }
          delete() {
            this.note &&
              this.dialog
                .open(Ar, { data: { note: this.note } })
                .afterClosed()
                .subscribe(c => {
                  if (this.note && null != c)
                    return this.store.dispatch(
                      this.note.repeatable && c === ni.one
                        ? re(this.note)
                        : fe(this.note),
                    );
                });
          }
          triggerTime() {
            this.noteForm.controls.hasTime.value
              ? this.noteForm.controls.time.enable()
              : this.noteForm.controls.time.disable();
          }
          triggerPeriod() {
            this.noteForm.controls.repeatable.value
              ? this.noteForm.controls.period.enable()
              : this.noteForm.controls.period.disable();
          }
          cancel() {
            this.dialogRef.close();
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(Fn.qu),
              a.Y36(jr),
              a.Y36(L.yh),
              a.Y36(ar),
              a.Y36(mr),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-note-dialog']],
            decls: 13,
            vars: 5,
            consts: [
              [
                'mat-dialog-content',
                '',
                'data-testid',
                'note-dialog',
                1,
                'dialog',
              ],
              [1, 'dialog-close-container'],
              [1, 'dialog-close', 3, 'click'],
              ['novalidate', '', 1, 'form', 3, 'formGroup', 'keydown.enter'],
              [
                'matInput',
                '',
                'data-testid',
                'title',
                'autofocus',
                '',
                3,
                'formControl',
              ],
              [4, 'ngIf'],
              [1, 'dialog-footer'],
              [
                'color',
                'secondary',
                'mat-raised-button',
                '',
                'data-testid',
                'delete',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [
                'color',
                'primary',
                'mat-raised-button',
                '',
                'data-testid',
                'save',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [1, 'dialog-row'],
              [
                'class',
                'dialog-calendar full',
                'appearance',
                'fill',
                4,
                'ngIf',
              ],
              [1, 'dialog-select', 'full'],
              ['required', '', 3, 'formControl'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              [1, 'dialog-checkbox-container'],
              [1, 'dialog-checkbox', 3, 'formControl', 'change'],
              [
                'matInput',
                '',
                'data-testid',
                'time',
                'type',
                'time',
                3,
                'formControl',
              ],
              [1, 'dialog-select'],
              [3, 'formControl'],
              ['appearance', 'fill', 1, 'dialog-calendar', 'full'],
              [
                'matInput',
                '',
                'data-testid',
                'date',
                3,
                'formControl',
                'matDatepicker',
              ],
              ['matIconSuffix', '', 3, 'for'],
              ['picker', ''],
              [3, 'value'],
              [3, 'ngClass'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'mat-icon', 2),
                a.NdJ('click', function () {
                  return c.cancel();
                }),
                a._uU(3, 'close'),
                a.qZA()(),
                a.TgZ(4, 'form', 3),
                a.NdJ('keydown.enter', function () {
                  return !c.noteForm.invalid && c.save();
                }),
                a.TgZ(5, 'mat-form-field'),
                a._UZ(6, 'input', 4),
                a.qZA(),
                a.YNc(7, U, 21, 8, 'ng-container', 5),
                a.qZA()(),
                a.TgZ(8, 'div', 6)(9, 'button', 7),
                a.NdJ('click', function () {
                  return c.delete();
                }),
                a._uU(10, ' Delete '),
                a.qZA(),
                a.TgZ(11, 'button', 8),
                a.NdJ('click', function () {
                  return c.save();
                }),
                a._uU(12, ' Save '),
                a.qZA()()),
                2 & r &&
                  (a.xp6(4),
                  a.Q6J('formGroup', c.noteForm),
                  a.xp6(2),
                  a.Q6J('formControl', c.noteForm.controls.title),
                  a.xp6(1),
                  a.Q6J('ngIf', !(null != c.note && c.note.completed)),
                  a.xp6(2),
                  a.Q6J('disabled', !(null != c.note && c.note.id)),
                  a.xp6(2),
                  a.Q6J('disabled', c.noteForm.invalid));
            },
            dependencies: [
              s.mk,
              s.sg,
              s.O5,
              $t.lW,
              St,
              Hi.KE,
              Hi.hX,
              Hi.R9,
              Fn._Y,
              Fn.Fj,
              Fn.JJ,
              Fn.JL,
              Fn.Q7,
              Fn.oH,
              Fn.sg,
              to.Nt,
              j,
              Bn,
              Vt,
              wi,
              sl,
              et.ey,
              ks,
              f,
            ],
            styles: [
              '.dialog-row[_ngcontent-%COMP%], .dialog-checkbox-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;align-items:center}.dialog-checkbox-container[_ngcontent-%COMP%]{flex-direction:row}.dialog-color[_ngcontent-%COMP%]{margin-left:20px;display:flex;cursor:pointer}.dialog-color[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer}.dialog-calendar[_ngcontent-%COMP%]{display:flex}.dialog-select[_ngcontent-%COMP%]{display:flex;margin-left:12px}.dialog-button[_ngcontent-%COMP%]{width:100px}.dialog-button[_ngcontent-%COMP%]:not(:first-child){margin-left:12px}.dialog-footer[_ngcontent-%COMP%]{padding:0 20px 20px;display:flex;justify-content:space-between}.select-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:70px;text-align:center}.dialog-checkbox[_ngcontent-%COMP%]{margin-bottom:22px}@media only screen and (min-width: 1020px){.dialog[_ngcontent-%COMP%]{width:400px}.dialog-row[_ngcontent-%COMP%]{flex-direction:row}.dialog-select[_ngcontent-%COMP%]{width:200px}.dialog-calendar[_ngcontent-%COMP%]{margin-right:20px}}',
            ],
          })),
          g
        );
      })();
      const en = (g, R) => {
        const r = g.map(c => ({
          id: c.id,
          text: c.title,
          color: c.color,
          completed: c.completed,
          time: c.hasTime && c.date ? ze(new Date(c.date)) : '',
        }));
        if (g.length < R) {
          const c = R - g.length;
          for (let _ = 0; _ < c; _++) r.push({});
        }
        return r;
      };
      function Wn(g, R) {
        if ((1 & g && (a.TgZ(0, 'span', 4), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw();
          a.xp6(1), a.hij(' ', r.row.time, ' ');
        }
      }
      function zi(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-checkbox', 5),
            a.NdJ('ngModelChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG((k.row.completed = _));
            })('change', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k.onChange(_));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('ngModel', r.row.completed);
        }
      }
      const _o = function (g) {
          return { row__interactive: g };
        },
        so = function (g, R) {
          return ['row-text', g, R];
        };
      let vo = (() => {
          class g {
            constructor() {
              (this.rowClick = new a.vpe()), (this.rowChange = new a.vpe());
            }
            get isInteractive() {
              return !!this.row.text || this.interactive;
            }
            onClick(r) {
              'checkbox' !== r.target?.getAttribute('type') &&
                (r.stopPropagation(),
                r.preventDefault(),
                this.rowClick.emit(this.row));
            }
            onChange({ checked: r }) {
              this.rowChange.emit({ ...this.row, completed: r });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['app-row']],
              inputs: { row: 'row', interactive: 'interactive' },
              outputs: { rowClick: 'rowClick', rowChange: 'rowChange' },
              decls: 5,
              vars: 10,
              consts: [
                [1, 'row', 3, 'ngClass', 'click'],
                [3, 'ngClass'],
                ['class', 'time', 4, 'ngIf'],
                [
                  'class',
                  'row-checkbox',
                  3,
                  'ngModel',
                  'ngModelChange',
                  'change',
                  4,
                  'ngIf',
                ],
                [1, 'time'],
                [1, 'row-checkbox', 3, 'ngModel', 'ngModelChange', 'change'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div', 0),
                  a.NdJ('click', function (k) {
                    return c.isInteractive ? c.onClick(k) : void 0;
                  }),
                  a.TgZ(1, 'span', 1),
                  a.YNc(2, Wn, 2, 1, 'span', 2),
                  a._uU(3),
                  a.qZA(),
                  a.YNc(4, zi, 1, 1, 'mat-checkbox', 3),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngClass', a.VKq(5, _o, c.isInteractive)),
                    a.xp6(1),
                    a.Q6J(
                      'ngClass',
                      a.WLB(
                        7,
                        so,
                        c.row.color || '',
                        c.row.completed ? 'row-text__completed' : '',
                      ),
                    ),
                    a.xp6(1),
                    a.Q6J('ngIf', c.row.time),
                    a.xp6(1),
                    a.hij(' ', c.row.text, ' '),
                    a.xp6(1),
                    a.Q6J('ngIf', !!c.row.text));
              },
              dependencies: [s.mk, s.O5, Fn.JJ, ks, Fn.On],
              styles: [
                '.row[_ngcontent-%COMP%]{height:23px;padding:8px 4px;font-size:13px;border-bottom:solid 1px #ddd;display:flex;align-items:center;justify-content:space-between}.row__interactive[_ngcontent-%COMP%]{cursor:pointer}.row__interactive[_ngcontent-%COMP%]:hover{border-bottom:solid 1px #3f51b5}.row-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.row-text__completed[_ngcontent-%COMP%]{text-decoration:line-through;opacity:.3}@media only screen and (min-width: 1020px){.row-checkbox[_ngcontent-%COMP%]{display:none}.row[_ngcontent-%COMP%]:hover   .row-checkbox[_ngcontent-%COMP%]{display:block}}',
              ],
              changeDetection: 0,
            })),
            g
          );
        })(),
        br = (() => {
          class g {
            transform(r) {
              return Yt(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'dateWithMonth', type: g, pure: !0 })),
            g
          );
        })(),
        Rs = (() => {
          class g {
            transform(r) {
              return (g => Ae[g.getDay()])(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'dayOfWeek', type: g, pure: !0 })),
            g
          );
        })();
      function Ho(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k.openDialog(_.id));
            })('rowChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k.updateCompleted(_));
            }),
            a.ALo(2, 'dateWithMonth'),
            a.qZA(),
            a.BQk();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = a.oxw();
          a.xp6(1),
            a.Q6J('row', r)('interactive', c === _.notes.length),
            a.uIk('data-testid', a.lcZ(2, 3, _.date) + ' ' + c);
        }
      }
      const es = function (g) {
          return { 'day-date__active': g };
        },
        cl = function (g) {
          return { 'day-name__active': g };
        };
      let Fs = (() => {
        class g {
          constructor(r, c) {
            (this.dialog = r),
              (this.store = c),
              (this.notes = []),
              (this.rows = []);
          }
          ngOnInit() {
            (this.notesSubscription = this.store
              .select(Gt, Yt(this.date))
              .subscribe(r => {
                this.notes = r ?? [];
                const c =
                  this.minRowCount > this.notes.length
                    ? this.minRowCount
                    : this.notes.length + 1;
                c > this.minRowCount &&
                  ((this.minRowCount = c),
                  this.store.dispatch(ct({ count: c }))),
                  (this.rows = en(this.notes, c));
              })),
              (this.rowsCountSubscrption = this.store
                .select(mt, this.date.toISOString().split('T')[0])
                .subscribe(r => {
                  (this.minRowCount = r), (this.rows = en(this.notes, r));
                })),
              (this.rows = en(this.notes, this.minRowCount));
          }
          ngOnChanges(r) {
            r.minRowsCount &&
              (this.rows = en(this.notes, r.minRowsCount.currentValue));
          }
          ngOnDestroy() {
            this.rowsCountSubscrption?.unsubscribe(),
              this.notesSubscription?.unsubscribe();
          }
          get isActive() {
            return (g => {
              const R = new Date();
              return (
                R.getFullYear() === g.getFullYear() &&
                R.getMonth() === g.getMonth() &&
                R.getDate() === g.getDate()
              );
            })(this.date);
          }
          openDialog(r) {
            const c = this.notes.find(_ => _.id === r);
            this.dialog.open(Xt, {
              data: { date: this.date, note: c, withDate: !0 },
            });
          }
          updateCompleted(r) {
            const c = this.notes.find(_ => _.id === r.id);
            c && this.store.dispatch(c.completed ? Be(c) : vt(c));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(mr), a.Y36(L.yh));
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-day']],
            inputs: { date: 'date' },
            features: [a.TTD],
            decls: 9,
            vars: 13,
            consts: [
              [1, 'day'],
              [1, 'day-header'],
              [1, 'day-date', 3, 'ngClass'],
              [1, 'day-name', 3, 'ngClass'],
              [4, 'ngFor', 'ngForOf'],
              [3, 'row', 'interactive', 'rowClick', 'rowChange'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                a._uU(3),
                a.ALo(4, 'dateWithMonth'),
                a.qZA(),
                a.TgZ(5, 'span', 3),
                a._uU(6),
                a.ALo(7, 'dayOfWeek'),
                a.qZA()(),
                a.YNc(8, Ho, 3, 5, 'ng-container', 4),
                a.qZA()),
                2 & r &&
                  (a.xp6(2),
                  a.Q6J('ngClass', a.VKq(9, es, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(4, 5, c.date)),
                  a.xp6(2),
                  a.Q6J('ngClass', a.VKq(11, cl, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(7, 7, c.date)),
                  a.xp6(2),
                  a.Q6J('ngForOf', c.rows));
            },
            dependencies: [s.mk, s.sg, vo, br, Rs],
            styles: [
              '.day-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:2px solid #000;padding-bottom:12px;font-size:18px;line-height:28px}.day-date[_ngcontent-%COMP%]{font-weight:700}.day-date__active[_ngcontent-%COMP%]{color:#3f51b5}.day-name[_ngcontent-%COMP%]{color:#999}.day-name__active[_ngcontent-%COMP%]{color:#3f51b580}@media only screen and (min-width: 1020px){.day-header[_ngcontent-%COMP%]{font-size:21px}}',
            ],
          })),
          g
        );
      })();
      function oc(g, R) {
        if (
          (1 & g && (a.TgZ(0, 'div', 2), a._UZ(1, 'app-day', 3), a.qZA()),
          2 & g)
        ) {
          const r = R.$implicit;
          a.xp6(1), a.Q6J('date', r);
        }
      }
      let dl = (() => {
        class g {
          ngOnInit() {
            this.fillDates(this.startDate);
          }
          ngOnChanges(r) {
            r.startDate && this.fillDates(r.startDate.currentValue);
          }
          fillDates(r) {
            this.dates = [];
            for (let c = 0; c < 7; c++) this.dates.push(W(r, c));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-week']],
            inputs: { startDate: 'startDate' },
            features: [a.TTD],
            decls: 2,
            vars: 1,
            consts: [
              ['data-testid', 'calendar', 1, 'week'],
              ['class', 'week-day', 4, 'ngFor', 'ngForOf'],
              [1, 'week-day'],
              [3, 'date'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0), a.YNc(1, oc, 2, 1, 'div', 1), a.qZA()),
                2 & r && (a.xp6(1), a.Q6J('ngForOf', c.dates));
            },
            dependencies: [s.sg, Fs],
            styles: [
              '[_nghost-%COMP%]{display:flex}.week[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px;flex:1}.week-day[_ngcontent-%COMP%]{margin-top:20px}@media only screen and (min-width: 1020px){.week[_ngcontent-%COMP%]{flex-direction:row}.week-day[_ngcontent-%COMP%]{width:calc((100% - 120px) / 7)}.week-day[_ngcontent-%COMP%]:not(:first-child){margin-left:20px}}',
            ],
          })),
          g
        );
      })();
      function Ps(g, R) {
        if (1 & g) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k.openDialog(_.id));
            })('rowChange', function (_) {
              a.CHM(r);
              const k = a.oxw();
              return a.KtG(k.updateCompleted(_));
            }),
            a.qZA(),
            a.BQk();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = a.oxw();
          a.xp6(1),
            a.Q6J('row', r)('interactive', c === _.notes.length),
            a.uIk('data-testid', 'row ' + (c + 1));
        }
      }
      let ul = (() => {
          class g {
            constructor(r, c) {
              (this.dialog = r),
                (this.store = c),
                (this.notes = []),
                (this.rows = []),
                (this.minRowsCount = 12),
                (this.notesSubscription = this.store.select(Le).subscribe(_ => {
                  this.notes = _ ?? [];
                  const k =
                    this.minRowsCount > this.notes.length
                      ? this.minRowsCount
                      : this.notes.length + 3 - (this.notes.length % 3);
                  k > this.minRowsCount && (this.minRowsCount = k),
                    (this.rows = en(this.notes, k));
                })),
                (this.rows = en(this.notes, 12));
            }
            ngOnDestroy() {
              this.notesSubscription.unsubscribe();
            }
            openDialog(r) {
              const c = this.notes.find(_ => _.id === r);
              this.dialog.open(Xt, { data: { note: c, withDate: !1 } });
            }
            updateCompleted(r) {
              const c = this.notes.find(_ => _.id === r.id);
              c && this.store.dispatch(le({ ...c, completed: !!r.completed }));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36(mr), a.Y36(L.yh));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['app-todo-list']],
              decls: 9,
              vars: 1,
              consts: [
                [1, 'todo-header'],
                [1, 'todo-title'],
                [
                  'mat-icon-button',
                  '',
                  'data-testid',
                  'add-todo',
                  1,
                  'todo-add',
                  3,
                  'click',
                ],
                ['data-testid', 'todo-list', 1, 'todo-list'],
                [4, 'ngFor', 'ngForOf'],
                [3, 'row', 'interactive', 'rowClick', 'rowChange'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div')(1, 'div', 0)(2, 'span', 1),
                  a._uU(3, 'Someday'),
                  a.qZA(),
                  a.TgZ(4, 'button', 2),
                  a.NdJ('click', function () {
                    return c.openDialog();
                  }),
                  a.TgZ(5, 'mat-icon'),
                  a._uU(6, 'add'),
                  a.qZA()()(),
                  a.TgZ(7, 'div', 3),
                  a.YNc(8, Ps, 2, 3, 'ng-container', 4),
                  a.qZA()()),
                  2 & r && (a.xp6(8), a.Q6J('ngForOf', c.rows));
              },
              dependencies: [s.sg, $t.RK, St, vo],
              styles: [
                '.todo-header[_ngcontent-%COMP%]{display:flex;align-items:center;padding-bottom:12px;margin-top:40px}.todo-title[_ngcontent-%COMP%]{font-size:18px;line-height:28px;font-weight:700;color:#555}.todo-add[_ngcontent-%COMP%]{margin-left:20px;color:#555}@media only screen and (min-width: 1020px){.todo-header[_ngcontent-%COMP%]{font-size:21px;max-width:32%}.todo-list[_ngcontent-%COMP%]{display:grid;grid-template-columns:32% 31% 31%;grid-template-rows:40px 40px 40px 40px;column-gap:2%}}',
              ],
            })),
            g
          );
        })(),
        sc = (() => {
          class g {
            transform(r) {
              return (g => `${X[g.getMonth()]} ${g.getFullYear()}`)(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'headerDate', type: g, pure: !0 })),
            g
          );
        })();
      const gs = [
        {
          path: '',
          component: (() => {
            class g {
              constructor(r, c, _) {
                (this.store = r),
                  (this.snackBar = c),
                  (this.activatedRoute = _);
                const k = this.activatedRoute.snapshot.queryParams.startDate;
                k &&
                (g => {
                  const R = Date.parse(g);
                  return !isNaN(R);
                })(k)
                  ? ((this.startDate = _t(new Date(k))),
                    (this.endDate = lt(new Date(k))))
                  : ((this.startDate = _t(new Date())),
                    (this.endDate = lt(new Date())));
              }
              ngOnInit() {
                this.getNotes(),
                  this.store.dispatch(te()),
                  (this.errorSubscription = this.store
                    .select(Ye)
                    .pipe((0, be.h)(Boolean))
                    .subscribe(r => {
                      this.snackBar.open(r, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.errorSubscription?.unsubscribe();
              }
              onBackClick() {
                (this.startDate = bt(this.startDate, 7)),
                  (this.endDate = bt(this.endDate, 7)),
                  this.getNotes();
              }
              onForwardClick() {
                (this.startDate = W(this.startDate, 7)),
                  (this.endDate = W(this.endDate, 7)),
                  this.getNotes();
              }
              getNotes() {
                this.store.dispatch(
                  ne({
                    startDate: ut(this.startDate),
                    endDate: Ut(this.endDate),
                  }),
                );
              }
              logout() {
                this.store.dispatch((0, nn.kS)());
              }
            }
            return (
              (g.ɵfac = function (r) {
                return new (r || g)(a.Y36(L.yh), a.Y36(ft.ux), a.Y36(x.gz));
              }),
              (g.ɵcmp = a.Xpm({
                type: g,
                selectors: [['app-calendar']],
                decls: 33,
                vars: 6,
                consts: [
                  [1, 'calendar'],
                  [1, 'calendar-header'],
                  [1, 'calendar-month'],
                  [1, 'calendar-buttons'],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__mini',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__large',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  ['menu', 'matMenu'],
                  ['mat-menu-item', '', 3, 'click'],
                  [3, 'startDate'],
                ],
                template: function (r, c) {
                  if (
                    (1 & r &&
                      (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                      a._uU(3),
                      a.ALo(4, 'headerDate'),
                      a.qZA(),
                      a.TgZ(5, 'div', 3)(6, 'button', 4),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(7, 'mat-icon'),
                      a._uU(8, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(9, 'button', 5),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(10, 'mat-icon'),
                      a._uU(11, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(12, 'button', 6),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(13, 'mat-icon'),
                      a._uU(14, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(15, 'button', 7),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(16, 'mat-icon'),
                      a._uU(17, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(18, 'button', 8)(19, 'mat-icon'),
                      a._uU(20, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(21, 'button', 9)(22, 'mat-icon'),
                      a._uU(23, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(24, 'mat-menu', null, 10)(26, 'button', 11),
                      a.NdJ('click', function () {
                        return c.logout();
                      }),
                      a.TgZ(27, 'mat-icon'),
                      a._uU(28, 'logout'),
                      a.qZA(),
                      a.TgZ(29, 'span'),
                      a._uU(30, 'Logout'),
                      a.qZA()()()()(),
                      a._UZ(31, 'app-week', 12)(32, 'app-todo-list'),
                      a.qZA()),
                    2 & r)
                  ) {
                    const _ = a.MAs(25);
                    a.xp6(3),
                      a.Oqu(a.lcZ(4, 4, c.startDate)),
                      a.xp6(15),
                      a.Q6J('matMenuTriggerFor', _),
                      a.xp6(3),
                      a.Q6J('matMenuTriggerFor', _),
                      a.xp6(10),
                      a.Q6J('startDate', c.startDate);
                  }
                },
                dependencies: [$t.nh, $t.cs, St, Ni, ti, Dr, dl, ul, sc],
                styles: [
                  '.calendar[_ngcontent-%COMP%]{padding:12px}.calendar-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.calendar-month[_ngcontent-%COMP%]{font-size:21px;line-height:36px;font-weight:700}.calendar-buttons[_ngcontent-%COMP%]{display:flex}.calendar-button__large[_ngcontent-%COMP%]{display:none}.calendar-button[_ngcontent-%COMP%]:not(:first-child){margin-left:8px}.calendar-menu[_ngcontent-%COMP%]{margin-left:20px}@media only screen and (min-width: 1020px){.calendar-button__large[_ngcontent-%COMP%]{display:block}.calendar-button__mini[_ngcontent-%COMP%]{display:none}.calendar-month[_ngcontent-%COMP%]{font-size:36px;line-height:42px}}',
                ],
              })),
              g
            );
          })(),
        },
      ];
      let Ls = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({ imports: [x.Bz.forChild(gs), x.Bz] })),
          g
        );
      })();
      var ts = D(3835);
      const Sa = {
        randomUUID:
          typeof crypto < 'u' &&
          crypto.randomUUID &&
          crypto.randomUUID.bind(crypto),
      };
      let Xs;
      const au = new Uint8Array(16);
      function ac() {
        if (
          !Xs &&
          ((Xs =
            typeof crypto < 'u' &&
            crypto.getRandomValues &&
            crypto.getRandomValues.bind(crypto)),
          !Xs)
        )
          throw new Error(
            'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
          );
        return Xs(au);
      }
      const er = [];
      for (let g = 0; g < 256; ++g) er.push((g + 256).toString(16).slice(1));
      const fl = function cc(g, R, r) {
          if (Sa.randomUUID && !R && !g) return Sa.randomUUID();
          const c = (g = g || {}).random || (g.rng || ac)();
          if (((c[6] = (15 & c[6]) | 64), (c[8] = (63 & c[8]) | 128), R)) {
            r = r || 0;
            for (let _ = 0; _ < 16; ++_) R[r + _] = c[_];
            return R;
          }
          return (function hl(g, R = 0) {
            return (
              er[g[R + 0]] +
              er[g[R + 1]] +
              er[g[R + 2]] +
              er[g[R + 3]] +
              '-' +
              er[g[R + 4]] +
              er[g[R + 5]] +
              '-' +
              er[g[R + 6]] +
              er[g[R + 7]] +
              '-' +
              er[g[R + 8]] +
              er[g[R + 9]] +
              '-' +
              er[g[R + 10]] +
              er[g[R + 11]] +
              er[g[R + 12]] +
              er[g[R + 13]] +
              er[g[R + 14]] +
              er[g[R + 15]]
            ).toLowerCase();
          })(c);
        },
        _s = { headers: new Me.WM({ 'Content-Type': 'application/json' }) };
      let ka = (() => {
        class g {
          constructor(r) {
            this.http = r;
          }
          getNotes(r, c) {
            return this.http.get(`${ts.k.apiUrl}/notes`, {
              params: r && c ? { from: r, to: c } : {},
              ..._s,
            });
          }
          createNote(r) {
            const c = { ...r, id: fl() };
            return this.http.post(`${ts.k.apiUrl}/notes`, c, _s);
          }
          updateNote(r) {
            return this.http.patch(`${ts.k.apiUrl}/notes/${r.id}`, r, _s);
          }
          deleteNote(r) {
            return this.http.delete(`${ts.k.apiUrl}/notes/${r.id}`, _s);
          }
          deleteNoteForDate(r) {
            return this.http.delete(`${ts.k.apiUrl}/notes/${r.id}`, {
              ..._s,
              body: { date: r.date },
            });
          }
          completeNote(r) {
            return this.http.post(
              `${ts.k.apiUrl}/notes/${r.id}/complete`,
              { date: r.date },
              _s,
            );
          }
          revertNoteCompletion(r) {
            return this.http.delete(`${ts.k.apiUrl}/notes/${r.id}/complete`, {
              ..._s,
              body: { date: r.date },
            });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.LFG(Me.eN));
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      var tr = D(8776),
        jo = D(6129);
      const Ta = (g, R) =>
        (!g.hasTime && R.hasTime) ||
        (g.hasTime && R.hasTime && g.date && R.date && g.date > R.date)
          ? 1
          : (!R.hasTime && g.hasTime) ||
            (g.hasTime && R.hasTime && g.date && R.date && R.date > g.date)
          ? -1
          : 0;
      let lu = (() => {
        class g {
          constructor(r, c) {
            (this.actions$ = r),
              (this.notesService = c),
              (this.loadCalendarNotes$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(ne.type),
                  (0, jo.z)(({ startDate: _, endDate: k }) =>
                    this.notesService.getNotes(_, k).pipe(
                      (0, kt.U)(me =>
                        _ && k
                          ? (g => {
                              const R = g.reduce((r, c) => {
                                const _ = new Date(c.date ?? ''),
                                  k = Yt(_);
                                return r[k] ? r[k].push(c) : (r[k] = [c]), r;
                              }, {});
                              for (const r in R) R[r] = R[r].sort(Ta);
                              return R;
                            })(me)
                          : me,
                      ),
                      (0, kt.U)(me => de({ calendarNotes: me })),
                      (0, En.K)(me =>
                        (0, Wt.of)(
                          ue({ error: me?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.loadTodoNotes$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(te.type),
                  (0, jo.z)(() =>
                    this.notesService.getNotes().pipe(
                      (0, kt.U)(_ => ve({ todoNotes: _ })),
                      (0, En.K)(_ =>
                        (0, Wt.of)(
                          ue({ error: _?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.createNote$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(ce.type),
                  (0, jo.z)(_ =>
                    this.notesService.createNote(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.updateNote$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(le.type),
                  (0, jo.z)(_ =>
                    this.notesService.updateNote(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.deleteNote$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(fe.type),
                  (0, jo.z)(_ =>
                    this.notesService.deleteNote(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.deleteNoteForDate$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(re.type),
                  (0, jo.z)(_ =>
                    this.notesService.deleteNoteForDate(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.completeNote$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(vt.type),
                  (0, jo.z)(_ =>
                    this.notesService.completeNote(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.revertNoteCompletion$ = (0, tr.GW)(() =>
                this.actions$.pipe(
                  (0, tr.l4)(Be.type),
                  (0, jo.z)(_ =>
                    this.notesService.revertNoteCompletion(_).pipe(
                      (0, kt.U)(() => Ne()),
                      (0, En.K)(k =>
                        (0, Wt.of)(
                          ue({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.LFG(tr.eX), a.LFG(ka));
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
          g
        );
      })();
      const cu = (0, L.Lq)(
        {
          loading: !1,
          todoNotes: [],
          loaded: !1,
          requestSuccess: !1,
          minRowsCount: 6,
        },
        (0, L.on)(ne, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(te, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(de, (g, { calendarNotes: R }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          calendarNotes: R,
        })),
        (0, L.on)(ve, (g, { todoNotes: R }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          todoNotes: R,
        })),
        (0, L.on)(ue, (g, { error: R }) => ({ ...g, error: R, loading: !1 })),
        (0, L.on)(ce, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(le, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(fe, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(Ne, g => ({
          ...g,
          error: void 0,
          requestSuccess: !0,
          loading: !1,
        })),
        (0, L.on)(He, g => ({ ...g, requestSuccess: !1 })),
        (0, L.on)(ct, (g, { count: R }) => ({ ...g, minRowsCount: R })),
      );
      var du = D(2542);
      let uu = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({
            providers: [ka, du.e, { provide: et.Ad, useValue: 'ru-RU' }],
            imports: [
              s.ez,
              Ls,
              tr.sQ.forFeature([lu]),
              L.Aw.forFeature('calendar', cu),
              $t.ot,
              rn,
              Hi.lN,
              Fn.UX,
              to.c,
              Kr,
              ai,
              et.XK,
              ft.ZX,
              tc,
              rr,
              Os,
              Fn.u5,
            ],
          })),
          g
        );
      })();
    },
    1622: (Pt, Re, D) => {
      D.d(Re, { B: () => L });
      var s = D(4650);
      const x = 'token';
      let L = (() => {
        class ne {
          setToken(de) {
            localStorage.setItem(x, de);
          }
          getToken() {
            return localStorage.getItem(x);
          }
          resetToken() {
            localStorage.removeItem(x);
          }
        }
        return (
          (ne.ɵfac = function (de) {
            return new (de || ne)();
          }),
          (ne.ɵprov = s.Yz7({
            token: ne,
            factory: ne.ɵfac,
            providedIn: 'root',
          })),
          ne
        );
      })();
    },
    3835: (Pt, Re, D) => {
      D.d(Re, { k: () => s });
      const s = { apiUrl: '/api', baseUrl: 'http://localhost:4200' };
    },
    4044: (Pt, Re, D) => {
      var s = D(1481),
        x = D(4650),
        L = D(8252);
      let ne = (() => {
        class B {
          constructor() {
            this.title = 'timepage';
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵcmp = x.Xpm({
            type: B,
            selectors: [['app-root']],
            decls: 2,
            vars: 0,
            consts: [['role', 'main', 1, 'content']],
            template: function (p, S) {
              1 & p && (x.TgZ(0, 'div', 0), x._UZ(1, 'router-outlet'), x.qZA());
            },
            dependencies: [L.lC],
          })),
          B
        );
      })();
      var te = D(7340);
      function ve(B) {
        return new x.vHH(3e3, !1);
      }
      function nn() {
        return typeof window < 'u' && typeof window.document < 'u';
      }
      function a() {
        return (
          typeof process < 'u' &&
          '[object process]' === {}.toString.call(process)
        );
      }
      function ft(B) {
        switch (B.length) {
          case 0:
            return new te.ZN();
          case 1:
            return B[0];
          default:
            return new te.ZE(B);
        }
      }
      function $t(B, h, p, S, V = new Map(), q = new Map()) {
        const _e = [],
          Ee = [];
        let qe = -1,
          gt = null;
        if (
          (S.forEach(Nt => {
            const Zt = Nt.get('offset'),
              ln = Zt == qe,
              In = (ln && gt) || new Map();
            Nt.forEach((mn, yn) => {
              let jn = yn,
                qn = mn;
              if ('offset' !== yn)
                switch (((jn = h.normalizePropertyName(jn, _e)), qn)) {
                  case te.k1:
                    qn = V.get(yn);
                    break;
                  case te.l3:
                    qn = q.get(yn);
                    break;
                  default:
                    qn = h.normalizeStyleValue(yn, jn, qn, _e);
                }
              In.set(jn, qn);
            }),
              ln || Ee.push(In),
              (gt = In),
              (qe = Zt);
          }),
          _e.length)
        )
          throw (function Mt(B) {
            return new x.vHH(3502, !1);
          })();
        return Ee;
      }
      function et(B, h, p, S) {
        switch (h) {
          case 'start':
            B.onStart(() => S(p && pt(p, 'start', B)));
            break;
          case 'done':
            B.onDone(() => S(p && pt(p, 'done', B)));
            break;
          case 'destroy':
            B.onDestroy(() => S(p && pt(p, 'destroy', B)));
        }
      }
      function pt(B, h, p) {
        const q = Wt(
            B.element,
            B.triggerName,
            B.fromState,
            B.toState,
            h || B.phaseName,
            p.totalTime ?? B.totalTime,
            !!p.disabled,
          ),
          _e = B._data;
        return null != _e && (q._data = _e), q;
      }
      function Wt(B, h, p, S, V = '', q = 0, _e) {
        return {
          element: B,
          triggerName: h,
          fromState: p,
          toState: S,
          phaseName: V,
          totalTime: q,
          disabled: !!_e,
        };
      }
      function pn(B, h, p) {
        let S = B.get(h);
        return S || B.set(h, (S = p)), S;
      }
      function Sn(B) {
        const h = B.indexOf(':');
        return [B.substring(1, h), B.slice(h + 1)];
      }
      let Tn = (B, h) => !1,
        dn = (B, h, p) => [],
        kt = null;
      function En(B) {
        const h = B.parentNode || B.host;
        return h === kt ? null : h;
      }
      (a() || typeof Element < 'u') &&
        (nn()
          ? ((kt = (() => document.documentElement)()),
            (Tn = (B, h) => {
              for (; h; ) {
                if (h === B) return !0;
                h = En(h);
              }
              return !1;
            }))
          : (Tn = (B, h) => B.contains(h)),
        (dn = (B, h, p) => {
          if (p) return Array.from(B.querySelectorAll(h));
          const S = B.querySelector(h);
          return S ? [S] : [];
        }));
      let ee = null,
        Me = !1;
      const H = Tn,
        ke = dn;
      let ge = (() => {
          class B {
            validateStyleProperty(p) {
              return (function je(B) {
                ee ||
                  ((ee =
                    (function ye() {
                      return typeof document < 'u' ? document.body : null;
                    })() || {}),
                  (Me = !!ee.style && 'WebkitAppearance' in ee.style));
                let h = !0;
                return (
                  ee.style &&
                    !(function Y(B) {
                      return 'ebkit' == B.substring(1, 6);
                    })(B) &&
                    ((h = B in ee.style),
                    !h &&
                      Me &&
                      (h =
                        'Webkit' + B.charAt(0).toUpperCase() + B.slice(1) in
                        ee.style)),
                  h
                );
              })(p);
            }
            matchesElement(p, S) {
              return !1;
            }
            containsElement(p, S) {
              return H(p, S);
            }
            getParentElement(p) {
              return En(p);
            }
            query(p, S, V) {
              return ke(p, S, V);
            }
            computeStyle(p, S, V) {
              return V || '';
            }
            animate(p, S, V, q, _e, Ee = [], qe) {
              return new te.ZN(V, q);
            }
          }
          return (
            (B.ɵfac = function (p) {
              return new (p || B)();
            }),
            (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
            B
          );
        })(),
        pe = (() => {
          class B {}
          return (B.NOOP = new ge()), B;
        })();
      const nt = 1e3,
        Dn = 'ng-enter',
        Oe = 'ng-leave',
        yt = 'ng-trigger',
        Je = '.ng-trigger',
        At = 'ng-animating',
        Te = '.ng-animating';
      function F(B) {
        if ('number' == typeof B) return B;
        const h = B.match(/^(-?[\.\d]+)(m?s)/);
        return !h || h.length < 2 ? 0 : b(parseFloat(h[1]), h[2]);
      }
      function b(B, h) {
        return 's' === h ? B * nt : B;
      }
      function M(B, h, p) {
        return B.hasOwnProperty('duration')
          ? B
          : (function G(B, h, p) {
              let V,
                q = 0,
                _e = '';
              if ('string' == typeof B) {
                const Ee = B.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i,
                );
                if (null === Ee)
                  return h.push(ve()), { duration: 0, delay: 0, easing: '' };
                V = b(parseFloat(Ee[1]), Ee[2]);
                const qe = Ee[3];
                null != qe && (q = b(parseFloat(qe), Ee[4]));
                const gt = Ee[5];
                gt && (_e = gt);
              } else V = B;
              if (!p) {
                let Ee = !1,
                  qe = h.length;
                V < 0 &&
                  (h.push(
                    (function ue() {
                      return new x.vHH(3100, !1);
                    })(),
                  ),
                  (Ee = !0)),
                  q < 0 &&
                    (h.push(
                      (function ce() {
                        return new x.vHH(3101, !1);
                      })(),
                    ),
                    (Ee = !0)),
                  Ee && h.splice(qe, 0, ve());
              }
              return { duration: V, delay: q, easing: _e };
            })(B, h, p);
      }
      function Q(B, h = {}) {
        return (
          Object.keys(B).forEach(p => {
            h[p] = B[p];
          }),
          h
        );
      }
      function Xe(B) {
        const h = new Map();
        return (
          Object.keys(B).forEach(p => {
            h.set(p, B[p]);
          }),
          h
        );
      }
      function Rt(B, h = new Map(), p) {
        if (p) for (let [S, V] of p) h.set(S, V);
        for (let [S, V] of B) h.set(S, V);
        return h;
      }
      function tt(B, h, p) {
        return p ? h + ':' + p + ';' : '';
      }
      function Kt(B) {
        let h = '';
        for (let p = 0; p < B.style.length; p++) {
          const S = B.style.item(p);
          h += tt(0, S, B.style.getPropertyValue(S));
        }
        for (const p in B.style)
          B.style.hasOwnProperty(p) &&
            !p.startsWith('_') &&
            (h += tt(0, yi(p), B.style[p]));
        B.setAttribute('style', h);
      }
      function Ie(B, h, p) {
        B.style &&
          (h.forEach((S, V) => {
            const q = ki(V);
            p && !p.has(V) && p.set(V, B.style[q]), (B.style[q] = S);
          }),
          a() && Kt(B));
      }
      function xe(B, h) {
        B.style &&
          (h.forEach((p, S) => {
            const V = ki(S);
            B.style[V] = '';
          }),
          a() && Kt(B));
      }
      function Z(B) {
        return Array.isArray(B) ? (1 == B.length ? B[0] : (0, te.vP)(B)) : B;
      }
      const rt = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function Bt(B) {
        let h = [];
        if ('string' == typeof B) {
          let p;
          for (; (p = rt.exec(B)); ) h.push(p[1]);
          rt.lastIndex = 0;
        }
        return h;
      }
      function qt(B, h, p) {
        const S = B.toString(),
          V = S.replace(rt, (q, _e) => {
            let Ee = h[_e];
            return (
              null == Ee &&
                (p.push(
                  (function fe(B) {
                    return new x.vHH(3003, !1);
                  })(),
                ),
                (Ee = '')),
              Ee.toString()
            );
          });
        return V == S ? B : V;
      }
      function Cn(B) {
        const h = [];
        let p = B.next();
        for (; !p.done; ) h.push(p.value), (p = B.next());
        return h;
      }
      const Zn = /-+([a-z0-9])/g;
      function ki(B) {
        return B.replace(Zn, (...h) => h[1].toUpperCase());
      }
      function yi(B) {
        return B.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function Qn(B, h, p) {
        switch (h.type) {
          case 7:
            return B.visitTrigger(h, p);
          case 0:
            return B.visitState(h, p);
          case 1:
            return B.visitTransition(h, p);
          case 2:
            return B.visitSequence(h, p);
          case 3:
            return B.visitGroup(h, p);
          case 4:
            return B.visitAnimate(h, p);
          case 5:
            return B.visitKeyframes(h, p);
          case 6:
            return B.visitStyle(h, p);
          case 8:
            return B.visitReference(h, p);
          case 9:
            return B.visitAnimateChild(h, p);
          case 10:
            return B.visitAnimateRef(h, p);
          case 11:
            return B.visitQuery(h, p);
          case 12:
            return B.visitStagger(h, p);
          default:
            throw (function re(B) {
              return new x.vHH(3004, !1);
            })();
        }
      }
      function $n(B, h) {
        return window.getComputedStyle(B)[h];
      }
      const Vi = '*';
      function ur(B, h) {
        const p = [];
        return (
          'string' == typeof B
            ? B.split(/\s*,\s*/).forEach(S =>
                (function di(B, h, p) {
                  if (':' == B[0]) {
                    const qe = (function zt(B, h) {
                      switch (B) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (p, S) => parseFloat(S) > parseFloat(p);
                        case ':decrement':
                          return (p, S) => parseFloat(S) < parseFloat(p);
                        default:
                          return (
                            h.push(
                              (function ut(B) {
                                return new x.vHH(3016, !1);
                              })(),
                            ),
                            '* => *'
                          );
                      }
                    })(B, p);
                    if ('function' == typeof qe) return void h.push(qe);
                    B = qe;
                  }
                  const S = B.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == S || S.length < 4)
                    return (
                      p.push(
                        (function Qe(B) {
                          return new x.vHH(3015, !1);
                        })(),
                      ),
                      h
                    );
                  const V = S[1],
                    q = S[2],
                    _e = S[3];
                  h.push(ti(V, _e));
                  '<' == q[0] && !(V == Vi && _e == Vi) && h.push(ti(_e, V));
                })(S, p, h),
              )
            : p.push(B),
          p
        );
      }
      const un = new Set(['true', '1']),
        Un = new Set(['false', '0']);
      function ti(B, h) {
        const p = un.has(B) || Un.has(B),
          S = un.has(h) || Un.has(h);
        return (V, q) => {
          let _e = B == Vi || B == V,
            Ee = h == Vi || h == q;
          return (
            !_e &&
              p &&
              'boolean' == typeof V &&
              (_e = V ? un.has(B) : Un.has(B)),
            !Ee &&
              S &&
              'boolean' == typeof q &&
              (Ee = q ? un.has(h) : Un.has(h)),
            _e && Ee
          );
        };
      }
      const Xn = new RegExp('s*:selfs*,?', 'g');
      function hi(B, h, p, S) {
        return new Ti(B).build(h, p, S);
      }
      class Ti {
        constructor(h) {
          this._driver = h;
        }
        build(h, p, S) {
          const V = new Ji(p);
          return this._resetContextStyleTimingState(V), Qn(this, Z(h), V);
        }
        _resetContextStyleTimingState(h) {
          (h.currentQuerySelector = ''),
            (h.collectedStyles = new Map()),
            h.collectedStyles.set('', new Map()),
            (h.currentTime = 0);
        }
        visitTrigger(h, p) {
          let S = (p.queryCount = 0),
            V = (p.depCount = 0);
          const q = [],
            _e = [];
          return (
            '@' == h.name.charAt(0) &&
              p.errors.push(
                (function He() {
                  return new x.vHH(3006, !1);
                })(),
              ),
            h.definitions.forEach(Ee => {
              if ((this._resetContextStyleTimingState(p), 0 == Ee.type)) {
                const qe = Ee,
                  gt = qe.name;
                gt
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach(Nt => {
                    (qe.name = Nt), q.push(this.visitState(qe, p));
                  }),
                  (qe.name = gt);
              } else if (1 == Ee.type) {
                const qe = this.visitTransition(Ee, p);
                (S += qe.queryCount), (V += qe.depCount), _e.push(qe);
              } else
                p.errors.push(
                  (function ct() {
                    return new x.vHH(3007, !1);
                  })(),
                );
            }),
            {
              type: 7,
              name: h.name,
              states: q,
              transitions: _e,
              queryCount: S,
              depCount: V,
              options: null,
            }
          );
        }
        visitState(h, p) {
          const S = this.visitStyle(h.styles, p),
            V = (h.options && h.options.params) || null;
          if (S.containsDynamicStyles) {
            const q = new Set(),
              _e = V || {};
            S.styles.forEach(Ee => {
              Ee instanceof Map &&
                Ee.forEach(qe => {
                  Bt(qe).forEach(gt => {
                    _e.hasOwnProperty(gt) || q.add(gt);
                  });
                });
            }),
              q.size &&
                (Cn(q.values()),
                p.errors.push(
                  (function vt(B, h) {
                    return new x.vHH(3008, !1);
                  })(),
                ));
          }
          return {
            type: 0,
            name: h.name,
            style: S,
            options: V ? { params: V } : null,
          };
        }
        visitTransition(h, p) {
          (p.queryCount = 0), (p.depCount = 0);
          const S = Qn(this, Z(h.animation), p);
          return {
            type: 1,
            matchers: ur(h.expr, p.errors),
            animation: S,
            queryCount: p.queryCount,
            depCount: p.depCount,
            options: xi(h.options),
          };
        }
        visitSequence(h, p) {
          return {
            type: 2,
            steps: h.steps.map(S => Qn(this, S, p)),
            options: xi(h.options),
          };
        }
        visitGroup(h, p) {
          const S = p.currentTime;
          let V = 0;
          const q = h.steps.map(_e => {
            p.currentTime = S;
            const Ee = Qn(this, _e, p);
            return (V = Math.max(V, p.currentTime)), Ee;
          });
          return (
            (p.currentTime = V), { type: 3, steps: q, options: xi(h.options) }
          );
        }
        visitAnimate(h, p) {
          const S = (function yr(B, h) {
            if (B.hasOwnProperty('duration')) return B;
            if ('number' == typeof B) return ri(M(B, h).duration, 0, '');
            const p = B;
            if (
              p.split(/\s+/).some(q => '{' == q.charAt(0) && '{' == q.charAt(1))
            ) {
              const q = ri(0, 0, '');
              return (q.dynamic = !0), (q.strValue = p), q;
            }
            const V = M(p, h);
            return ri(V.duration, V.delay, V.easing);
          })(h.timings, p.errors);
          p.currentAnimateTimings = S;
          let V,
            q = h.styles ? h.styles : (0, te.oB)({});
          if (5 == q.type) V = this.visitKeyframes(q, p);
          else {
            let _e = h.styles,
              Ee = !1;
            if (!_e) {
              Ee = !0;
              const gt = {};
              S.easing && (gt.easing = S.easing), (_e = (0, te.oB)(gt));
            }
            p.currentTime += S.duration + S.delay;
            const qe = this.visitStyle(_e, p);
            (qe.isEmptyStep = Ee), (V = qe);
          }
          return (
            (p.currentAnimateTimings = null),
            { type: 4, timings: S, style: V, options: null }
          );
        }
        visitStyle(h, p) {
          const S = this._makeStyleAst(h, p);
          return this._validateStyleAst(S, p), S;
        }
        _makeStyleAst(h, p) {
          const S = [],
            V = Array.isArray(h.styles) ? h.styles : [h.styles];
          for (let Ee of V)
            'string' == typeof Ee
              ? Ee === te.l3
                ? S.push(Ee)
                : p.errors.push(new x.vHH(3002, !1))
              : S.push(Xe(Ee));
          let q = !1,
            _e = null;
          return (
            S.forEach(Ee => {
              if (
                Ee instanceof Map &&
                (Ee.has('easing') &&
                  ((_e = Ee.get('easing')), Ee.delete('easing')),
                !q)
              )
                for (let qe of Ee.values())
                  if (qe.toString().indexOf('{{') >= 0) {
                    q = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: S,
              easing: _e,
              offset: h.offset,
              containsDynamicStyles: q,
              options: null,
            }
          );
        }
        _validateStyleAst(h, p) {
          const S = p.currentAnimateTimings;
          let V = p.currentTime,
            q = p.currentTime;
          S && q > 0 && (q -= S.duration + S.delay),
            h.styles.forEach(_e => {
              'string' != typeof _e &&
                _e.forEach((Ee, qe) => {
                  const gt = p.collectedStyles.get(p.currentQuerySelector),
                    Nt = gt.get(qe);
                  let Zt = !0;
                  Nt &&
                    (q != V &&
                      q >= Nt.startTime &&
                      V <= Nt.endTime &&
                      (p.errors.push(
                        (function lt(B, h, p, S, V) {
                          return new x.vHH(3010, !1);
                        })(),
                      ),
                      (Zt = !1)),
                    (q = Nt.startTime)),
                    Zt && gt.set(qe, { startTime: q, endTime: V }),
                    p.options &&
                      (function we(B, h, p) {
                        const S = h.params || {},
                          V = Bt(B);
                        V.length &&
                          V.forEach(q => {
                            S.hasOwnProperty(q) ||
                              p.push(
                                (function le(B) {
                                  return new x.vHH(3001, !1);
                                })(),
                              );
                          });
                      })(Ee, p.options, p.errors);
                });
            });
        }
        visitKeyframes(h, p) {
          const S = { type: 5, styles: [], options: null };
          if (!p.currentAnimateTimings)
            return (
              p.errors.push(
                (function bt() {
                  return new x.vHH(3011, !1);
                })(),
              ),
              S
            );
          let q = 0;
          const _e = [];
          let Ee = !1,
            qe = !1,
            gt = 0;
          const Nt = h.steps.map(qn => {
            const Mi = this._makeStyleAst(qn, p);
            let fi =
                null != Mi.offset
                  ? Mi.offset
                  : (function Ki(B) {
                      if ('string' == typeof B) return null;
                      let h = null;
                      if (Array.isArray(B))
                        B.forEach(p => {
                          if (p instanceof Map && p.has('offset')) {
                            const S = p;
                            (h = parseFloat(S.get('offset'))),
                              S.delete('offset');
                          }
                        });
                      else if (B instanceof Map && B.has('offset')) {
                        const p = B;
                        (h = parseFloat(p.get('offset'))), p.delete('offset');
                      }
                      return h;
                    })(Mi.styles),
              pi = 0;
            return (
              null != fi && (q++, (pi = Mi.offset = fi)),
              (qe = qe || pi < 0 || pi > 1),
              (Ee = Ee || pi < gt),
              (gt = pi),
              _e.push(pi),
              Mi
            );
          });
          qe &&
            p.errors.push(
              (function W() {
                return new x.vHH(3012, !1);
              })(),
            ),
            Ee &&
              p.errors.push(
                (function se() {
                  return new x.vHH(3200, !1);
                })(),
              );
          const Zt = h.steps.length;
          let ln = 0;
          q > 0 && q < Zt
            ? p.errors.push(
                (function ie() {
                  return new x.vHH(3202, !1);
                })(),
              )
            : 0 == q && (ln = 1 / (Zt - 1));
          const In = Zt - 1,
            mn = p.currentTime,
            yn = p.currentAnimateTimings,
            jn = yn.duration;
          return (
            Nt.forEach((qn, Mi) => {
              const fi = ln > 0 ? (Mi == In ? 1 : ln * Mi) : _e[Mi],
                pi = fi * jn;
              (p.currentTime = mn + yn.delay + pi),
                (yn.duration = pi),
                this._validateStyleAst(qn, p),
                (qn.offset = fi),
                S.styles.push(qn);
            }),
            S
          );
        }
        visitReference(h, p) {
          return {
            type: 8,
            animation: Qn(this, Z(h.animation), p),
            options: xi(h.options),
          };
        }
        visitAnimateChild(h, p) {
          return p.depCount++, { type: 9, options: xi(h.options) };
        }
        visitAnimateRef(h, p) {
          return {
            type: 10,
            animation: this.visitReference(h.animation, p),
            options: xi(h.options),
          };
        }
        visitQuery(h, p) {
          const S = p.currentQuerySelector,
            V = h.options || {};
          p.queryCount++, (p.currentQuery = h);
          const [q, _e] = (function Ci(B) {
            const h = !!B.split(/\s*,\s*/).find(p => ':self' == p);
            return (
              h && (B = B.replace(Xn, '')),
              (B = B.replace(/@\*/g, Je)
                .replace(/@\w+/g, p => Je + '-' + p.slice(1))
                .replace(/:animating/g, Te)),
              [B, h]
            );
          })(h.selector);
          (p.currentQuerySelector = S.length ? S + ' ' + q : q),
            pn(p.collectedStyles, p.currentQuerySelector, new Map());
          const Ee = Qn(this, Z(h.animation), p);
          return (
            (p.currentQuery = null),
            (p.currentQuerySelector = S),
            {
              type: 11,
              selector: q,
              limit: V.limit || 0,
              optional: !!V.optional,
              includeSelf: _e,
              animation: Ee,
              originalSelector: h.selector,
              options: xi(h.options),
            }
          );
        }
        visitStagger(h, p) {
          p.currentQuery ||
            p.errors.push(
              (function X() {
                return new x.vHH(3013, !1);
              })(),
            );
          const S =
            'full' === h.timings
              ? { duration: 0, delay: 0, easing: 'full' }
              : M(h.timings, p.errors, !0);
          return {
            type: 12,
            animation: Qn(this, Z(h.animation), p),
            timings: S,
            options: null,
          };
        }
      }
      class Ji {
        constructor(h) {
          (this.errors = h),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function xi(B) {
        return (
          B
            ? (B = Q(B)).params &&
              (B.params = (function fn(B) {
                return B ? Q(B) : null;
              })(B.params))
            : (B = {}),
          B
        );
      }
      function ri(B, h, p) {
        return { duration: B, delay: h, easing: p };
      }
      function Pi(B, h, p, S, V, q, _e = null, Ee = !1) {
        return {
          type: 1,
          element: B,
          keyframes: h,
          preStyleProps: p,
          postStyleProps: S,
          duration: V,
          delay: q,
          totalTime: V + q,
          easing: _e,
          subTimeline: Ee,
        };
      }
      class Ni {
        constructor() {
          this._map = new Map();
        }
        get(h) {
          return this._map.get(h) || [];
        }
        append(h, p) {
          let S = this._map.get(h);
          S || this._map.set(h, (S = [])), S.push(...p);
        }
        has(h) {
          return this._map.has(h);
        }
        clear() {
          this._map.clear();
        }
      }
      const fr = new RegExp(':enter', 'g'),
        Ui = new RegExp(':leave', 'g');
      function Zi(
        B,
        h,
        p,
        S,
        V,
        q = new Map(),
        _e = new Map(),
        Ee,
        qe,
        gt = [],
      ) {
        return new Dr().buildKeyframes(B, h, p, S, V, q, _e, Ee, qe, gt);
      }
      class Dr {
        buildKeyframes(h, p, S, V, q, _e, Ee, qe, gt, Nt = []) {
          gt = gt || new Ni();
          const Zt = new gi(h, p, gt, V, q, Nt, []);
          Zt.options = qe;
          const ln = qe.delay ? F(qe.delay) : 0;
          Zt.currentTimeline.delayNextStep(ln),
            Zt.currentTimeline.setStyles([_e], null, Zt.errors, qe),
            Qn(this, S, Zt);
          const In = Zt.timelines.filter(mn => mn.containsAnimation());
          if (In.length && Ee.size) {
            let mn;
            for (let yn = In.length - 1; yn >= 0; yn--) {
              const jn = In[yn];
              if (jn.element === p) {
                mn = jn;
                break;
              }
            }
            mn &&
              !mn.allowOnlyTimelineStyles() &&
              mn.setStyles([Ee], null, Zt.errors, qe);
          }
          return In.length
            ? In.map(mn => mn.buildKeyframes())
            : [Pi(p, [], [], [], 0, ln, '', !1)];
        }
        visitTrigger(h, p) {}
        visitState(h, p) {}
        visitTransition(h, p) {}
        visitAnimateChild(h, p) {
          const S = p.subInstructions.get(p.element);
          if (S) {
            const V = p.createSubContext(h.options),
              q = p.currentTimeline.currentTime,
              _e = this._visitSubInstructions(S, V, V.options);
            q != _e && p.transformIntoNewTimeline(_e);
          }
          p.previousNode = h;
        }
        visitAnimateRef(h, p) {
          const S = p.createSubContext(h.options);
          S.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [h.options, h.animation.options],
              p,
              S,
            ),
            this.visitReference(h.animation, S),
            p.transformIntoNewTimeline(S.currentTimeline.currentTime),
            (p.previousNode = h);
        }
        _applyAnimationRefDelays(h, p, S) {
          for (const V of h) {
            const q = V?.delay;
            if (q) {
              const _e =
                'number' == typeof q ? q : F(qt(q, V?.params ?? {}, p.errors));
              S.delayNextStep(_e);
            }
          }
        }
        _visitSubInstructions(h, p, S) {
          let q = p.currentTimeline.currentTime;
          const _e = null != S.duration ? F(S.duration) : null,
            Ee = null != S.delay ? F(S.delay) : null;
          return (
            0 !== _e &&
              h.forEach(qe => {
                const gt = p.appendInstructionToTimeline(qe, _e, Ee);
                q = Math.max(q, gt.duration + gt.delay);
              }),
            q
          );
        }
        visitReference(h, p) {
          p.updateOptions(h.options, !0),
            Qn(this, h.animation, p),
            (p.previousNode = h);
        }
        visitSequence(h, p) {
          const S = p.subContextCount;
          let V = p;
          const q = h.options;
          if (
            q &&
            (q.params || q.delay) &&
            ((V = p.createSubContext(q)),
            V.transformIntoNewTimeline(),
            null != q.delay)
          ) {
            6 == V.previousNode.type &&
              (V.currentTimeline.snapshotCurrentStyles(),
              (V.previousNode = rr));
            const _e = F(q.delay);
            V.delayNextStep(_e);
          }
          h.steps.length &&
            (h.steps.forEach(_e => Qn(this, _e, V)),
            V.currentTimeline.applyStylesToKeyframe(),
            V.subContextCount > S && V.transformIntoNewTimeline()),
            (p.previousNode = h);
        }
        visitGroup(h, p) {
          const S = [];
          let V = p.currentTimeline.currentTime;
          const q = h.options && h.options.delay ? F(h.options.delay) : 0;
          h.steps.forEach(_e => {
            const Ee = p.createSubContext(h.options);
            q && Ee.delayNextStep(q),
              Qn(this, _e, Ee),
              (V = Math.max(V, Ee.currentTimeline.currentTime)),
              S.push(Ee.currentTimeline);
          }),
            S.forEach(_e => p.currentTimeline.mergeTimelineCollectedStyles(_e)),
            p.transformIntoNewTimeline(V),
            (p.previousNode = h);
        }
        _visitTiming(h, p) {
          if (h.dynamic) {
            const S = h.strValue;
            return M(p.params ? qt(S, p.params, p.errors) : S, p.errors);
          }
          return { duration: h.duration, delay: h.delay, easing: h.easing };
        }
        visitAnimate(h, p) {
          const S = (p.currentAnimateTimings = this._visitTiming(h.timings, p)),
            V = p.currentTimeline;
          S.delay && (p.incrementTime(S.delay), V.snapshotCurrentStyles());
          const q = h.style;
          5 == q.type
            ? this.visitKeyframes(q, p)
            : (p.incrementTime(S.duration),
              this.visitStyle(q, p),
              V.applyStylesToKeyframe()),
            (p.currentAnimateTimings = null),
            (p.previousNode = h);
        }
        visitStyle(h, p) {
          const S = p.currentTimeline,
            V = p.currentAnimateTimings;
          !V && S.hasCurrentStyleProperties() && S.forwardFrame();
          const q = (V && V.easing) || h.easing;
          h.isEmptyStep
            ? S.applyEmptyStep(q)
            : S.setStyles(h.styles, q, p.errors, p.options),
            (p.previousNode = h);
        }
        visitKeyframes(h, p) {
          const S = p.currentAnimateTimings,
            V = p.currentTimeline.duration,
            q = S.duration,
            Ee = p.createSubContext().currentTimeline;
          (Ee.easing = S.easing),
            h.styles.forEach(qe => {
              Ee.forwardTime((qe.offset || 0) * q),
                Ee.setStyles(qe.styles, qe.easing, p.errors, p.options),
                Ee.applyStylesToKeyframe();
            }),
            p.currentTimeline.mergeTimelineCollectedStyles(Ee),
            p.transformIntoNewTimeline(V + q),
            (p.previousNode = h);
        }
        visitQuery(h, p) {
          const S = p.currentTimeline.currentTime,
            V = h.options || {},
            q = V.delay ? F(V.delay) : 0;
          q &&
            (6 === p.previousNode.type ||
              (0 == S && p.currentTimeline.hasCurrentStyleProperties())) &&
            (p.currentTimeline.snapshotCurrentStyles(), (p.previousNode = rr));
          let _e = S;
          const Ee = p.invokeQuery(
            h.selector,
            h.originalSelector,
            h.limit,
            h.includeSelf,
            !!V.optional,
            p.errors,
          );
          p.currentQueryTotal = Ee.length;
          let qe = null;
          Ee.forEach((gt, Nt) => {
            p.currentQueryIndex = Nt;
            const Zt = p.createSubContext(h.options, gt);
            q && Zt.delayNextStep(q),
              gt === p.element && (qe = Zt.currentTimeline),
              Qn(this, h.animation, Zt),
              Zt.currentTimeline.applyStylesToKeyframe(),
              (_e = Math.max(_e, Zt.currentTimeline.currentTime));
          }),
            (p.currentQueryIndex = 0),
            (p.currentQueryTotal = 0),
            p.transformIntoNewTimeline(_e),
            qe &&
              (p.currentTimeline.mergeTimelineCollectedStyles(qe),
              p.currentTimeline.snapshotCurrentStyles()),
            (p.previousNode = h);
        }
        visitStagger(h, p) {
          const S = p.parentContext,
            V = p.currentTimeline,
            q = h.timings,
            _e = Math.abs(q.duration),
            Ee = _e * (p.currentQueryTotal - 1);
          let qe = _e * p.currentQueryIndex;
          switch (q.duration < 0 ? 'reverse' : q.easing) {
            case 'reverse':
              qe = Ee - qe;
              break;
            case 'full':
              qe = S.currentStaggerTime;
          }
          const Nt = p.currentTimeline;
          qe && Nt.delayNextStep(qe);
          const Zt = Nt.currentTime;
          Qn(this, h.animation, p),
            (p.previousNode = h),
            (S.currentStaggerTime =
              V.currentTime - Zt + (V.startTime - S.currentTimeline.startTime));
        }
      }
      const rr = {};
      class gi {
        constructor(h, p, S, V, q, _e, Ee, qe) {
          (this._driver = h),
            (this.element = p),
            (this.subInstructions = S),
            (this._enterClassName = V),
            (this._leaveClassName = q),
            (this.errors = _e),
            (this.timelines = Ee),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = rr),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = qe || new Fn(this._driver, p, 0)),
            Ee.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(h, p) {
          if (!h) return;
          const S = h;
          let V = this.options;
          null != S.duration && (V.duration = F(S.duration)),
            null != S.delay && (V.delay = F(S.delay));
          const q = S.params;
          if (q) {
            let _e = V.params;
            _e || (_e = this.options.params = {}),
              Object.keys(q).forEach(Ee => {
                (!p || !_e.hasOwnProperty(Ee)) &&
                  (_e[Ee] = qt(q[Ee], _e, this.errors));
              });
          }
        }
        _copyOptions() {
          const h = {};
          if (this.options) {
            const p = this.options.params;
            if (p) {
              const S = (h.params = {});
              Object.keys(p).forEach(V => {
                S[V] = p[V];
              });
            }
          }
          return h;
        }
        createSubContext(h = null, p, S) {
          const V = p || this.element,
            q = new gi(
              this._driver,
              V,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(V, S || 0),
            );
          return (
            (q.previousNode = this.previousNode),
            (q.currentAnimateTimings = this.currentAnimateTimings),
            (q.options = this._copyOptions()),
            q.updateOptions(h),
            (q.currentQueryIndex = this.currentQueryIndex),
            (q.currentQueryTotal = this.currentQueryTotal),
            (q.parentContext = this),
            this.subContextCount++,
            q
          );
        }
        transformIntoNewTimeline(h) {
          return (
            (this.previousNode = rr),
            (this.currentTimeline = this.currentTimeline.fork(this.element, h)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(h, p, S) {
          const V = {
              duration: p ?? h.duration,
              delay: this.currentTimeline.currentTime + (S ?? 0) + h.delay,
              easing: '',
            },
            q = new J(
              this._driver,
              h.element,
              h.keyframes,
              h.preStyleProps,
              h.postStyleProps,
              V,
              h.stretchStartingKeyframe,
            );
          return this.timelines.push(q), V;
        }
        incrementTime(h) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + h);
        }
        delayNextStep(h) {
          h > 0 && this.currentTimeline.delayNextStep(h);
        }
        invokeQuery(h, p, S, V, q, _e) {
          let Ee = [];
          if ((V && Ee.push(this.element), h.length > 0)) {
            h = (h = h.replace(fr, '.' + this._enterClassName)).replace(
              Ui,
              '.' + this._leaveClassName,
            );
            let gt = this._driver.query(this.element, h, 1 != S);
            0 !== S &&
              (gt =
                S < 0 ? gt.slice(gt.length + S, gt.length) : gt.slice(0, S)),
              Ee.push(...gt);
          }
          return (
            !q &&
              0 == Ee.length &&
              _e.push(
                (function Ae(B) {
                  return new x.vHH(3014, !1);
                })(),
              ),
            Ee
          );
        }
      }
      class Fn {
        constructor(h, p, S, V) {
          (this._driver = h),
            (this.element = p),
            (this.startTime = S),
            (this._elementTimelineStylesLookup = V),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(p)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                p,
                this._localTimelineStyles,
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(h) {
          const p = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || p
            ? (this.forwardTime(this.currentTime + h),
              p && this.snapshotCurrentStyles())
            : (this.startTime += h);
        }
        fork(h, p) {
          return (
            this.applyStylesToKeyframe(),
            new Fn(
              this._driver,
              h,
              p || this.currentTime,
              this._elementTimelineStylesLookup,
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(h) {
          this.applyStylesToKeyframe(),
            (this.duration = h),
            this._loadKeyframe();
        }
        _updateStyle(h, p) {
          this._localTimelineStyles.set(h, p),
            this._globalTimelineStyles.set(h, p),
            this._styleSummary.set(h, { time: this.currentTime, value: p });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(h) {
          h && this._previousKeyframe.set('easing', h);
          for (let [p, S] of this._globalTimelineStyles)
            this._backFill.set(p, S || te.l3),
              this._currentKeyframe.set(p, te.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(h, p, S, V) {
          p && this._previousKeyframe.set('easing', p);
          const q = (V && V.params) || {},
            _e = (function Se(B, h) {
              const p = new Map();
              let S;
              return (
                B.forEach(V => {
                  if ('*' === V) {
                    S = S || h.keys();
                    for (let q of S) p.set(q, te.l3);
                  } else Rt(V, p);
                }),
                p
              );
            })(h, this._globalTimelineStyles);
          for (let [Ee, qe] of _e) {
            const gt = qt(qe, q, S);
            this._pendingStyles.set(Ee, gt),
              this._localTimelineStyles.has(Ee) ||
                this._backFill.set(
                  Ee,
                  this._globalTimelineStyles.get(Ee) ?? te.l3,
                ),
              this._updateStyle(Ee, gt);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((h, p) => {
              this._currentKeyframe.set(p, h);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((h, p) => {
              this._currentKeyframe.has(p) || this._currentKeyframe.set(p, h);
            }));
        }
        snapshotCurrentStyles() {
          for (let [h, p] of this._localTimelineStyles)
            this._pendingStyles.set(h, p), this._updateStyle(h, p);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const h = [];
          for (let p in this._currentKeyframe) h.push(p);
          return h;
        }
        mergeTimelineCollectedStyles(h) {
          h._styleSummary.forEach((p, S) => {
            const V = this._styleSummary.get(S);
            (!V || p.time > V.time) && this._updateStyle(S, p.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const h = new Set(),
            p = new Set(),
            S = 1 === this._keyframes.size && 0 === this.duration;
          let V = [];
          this._keyframes.forEach((Ee, qe) => {
            const gt = Rt(Ee, new Map(), this._backFill);
            gt.forEach((Nt, Zt) => {
              Nt === te.k1 ? h.add(Zt) : Nt === te.l3 && p.add(Zt);
            }),
              S || gt.set('offset', qe / this.duration),
              V.push(gt);
          });
          const q = h.size ? Cn(h.values()) : [],
            _e = p.size ? Cn(p.values()) : [];
          if (S) {
            const Ee = V[0],
              qe = new Map(Ee);
            Ee.set('offset', 0), qe.set('offset', 1), (V = [Ee, qe]);
          }
          return Pi(
            this.element,
            V,
            q,
            _e,
            this.duration,
            this.startTime,
            this.easing,
            !1,
          );
        }
      }
      class J extends Fn {
        constructor(h, p, S, V, q, _e, Ee = !1) {
          super(h, p, _e.delay),
            (this.keyframes = S),
            (this.preStyleProps = V),
            (this.postStyleProps = q),
            (this._stretchStartingKeyframe = Ee),
            (this.timings = {
              duration: _e.duration,
              delay: _e.delay,
              easing: _e.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let h = this.keyframes,
            { delay: p, duration: S, easing: V } = this.timings;
          if (this._stretchStartingKeyframe && p) {
            const q = [],
              _e = S + p,
              Ee = p / _e,
              qe = Rt(h[0]);
            qe.set('offset', 0), q.push(qe);
            const gt = Rt(h[0]);
            gt.set('offset', Ge(Ee)), q.push(gt);
            const Nt = h.length - 1;
            for (let Zt = 1; Zt <= Nt; Zt++) {
              let ln = Rt(h[Zt]);
              const In = ln.get('offset');
              ln.set('offset', Ge((p + In * S) / _e)), q.push(ln);
            }
            (S = _e), (p = 0), (V = ''), (h = q);
          }
          return Pi(
            this.element,
            h,
            this.preStyleProps,
            this.postStyleProps,
            S,
            p,
            V,
            !0,
          );
        }
      }
      function Ge(B, h = 3) {
        const p = Math.pow(10, h - 1);
        return Math.round(B * p) / p;
      }
      class Tt {}
      const hn = new Set([
        'width',
        'height',
        'minWidth',
        'minHeight',
        'maxWidth',
        'maxHeight',
        'left',
        'top',
        'bottom',
        'right',
        'fontSize',
        'outlineWidth',
        'outlineOffset',
        'paddingTop',
        'paddingLeft',
        'paddingBottom',
        'paddingRight',
        'marginTop',
        'marginLeft',
        'marginBottom',
        'marginRight',
        'borderRadius',
        'borderWidth',
        'borderTopWidth',
        'borderLeftWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'textIndent',
        'perspective',
      ]);
      class bn extends Tt {
        normalizePropertyName(h, p) {
          return ki(h);
        }
        normalizeStyleValue(h, p, S, V) {
          let q = '';
          const _e = S.toString().trim();
          if (hn.has(p) && 0 !== S && '0' !== S)
            if ('number' == typeof S) q = 'px';
            else {
              const Ee = S.match(/^[+-]?[\d\.]+([a-z]*)$/);
              Ee &&
                0 == Ee[1].length &&
                V.push(
                  (function Ne(B, h) {
                    return new x.vHH(3005, !1);
                  })(),
                );
            }
          return _e + q;
        }
      }
      function Pn(B, h, p, S, V, q, _e, Ee, qe, gt, Nt, Zt, ln) {
        return {
          type: 0,
          element: B,
          triggerName: h,
          isRemovalTransition: V,
          fromState: p,
          fromStyles: q,
          toState: S,
          toStyles: _e,
          timelines: Ee,
          queriedElements: qe,
          preStyleProps: gt,
          postStyleProps: Nt,
          totalTime: Zt,
          errors: ln,
        };
      }
      const Jn = {};
      class Nn {
        constructor(h, p, S) {
          (this._triggerName = h), (this.ast = p), (this._stateStyles = S);
        }
        match(h, p, S, V) {
          return (function Ur(B, h, p, S, V) {
            return B.some(q => q(h, p, S, V));
          })(this.ast.matchers, h, p, S, V);
        }
        buildStyles(h, p, S) {
          let V = this._stateStyles.get('*');
          return (
            void 0 !== h && (V = this._stateStyles.get(h?.toString()) || V),
            V ? V.buildStyles(p, S) : new Map()
          );
        }
        build(h, p, S, V, q, _e, Ee, qe, gt, Nt) {
          const Zt = [],
            ln = (this.ast.options && this.ast.options.params) || Jn,
            mn = this.buildStyles(S, (Ee && Ee.params) || Jn, Zt),
            yn = (qe && qe.params) || Jn,
            jn = this.buildStyles(V, yn, Zt),
            qn = new Set(),
            Mi = new Map(),
            fi = new Map(),
            pi = 'void' === V,
            vr = { params: or(yn, ln), delay: this.ast.options?.delay },
            y = Nt
              ? []
              : Zi(h, p, this.ast.animation, q, _e, mn, jn, vr, gt, Zt);
          let P = 0;
          if (
            (y.forEach(j => {
              P = Math.max(j.duration + j.delay, P);
            }),
            Zt.length)
          )
            return Pn(
              p,
              this._triggerName,
              S,
              V,
              pi,
              mn,
              jn,
              [],
              [],
              Mi,
              fi,
              P,
              Zt,
            );
          y.forEach(j => {
            const ae = j.element,
              ot = pn(Mi, ae, new Set());
            j.preStyleProps.forEach(Qt => ot.add(Qt));
            const Dt = pn(fi, ae, new Set());
            j.postStyleProps.forEach(Qt => Dt.add(Qt)), ae !== p && qn.add(ae);
          });
          const A = Cn(qn.values());
          return Pn(p, this._triggerName, S, V, pi, mn, jn, y, A, Mi, fi, P);
        }
      }
      function or(B, h) {
        const p = Q(h);
        for (const S in B) B.hasOwnProperty(S) && null != B[S] && (p[S] = B[S]);
        return p;
      }
      class Cr {
        constructor(h, p, S) {
          (this.styles = h), (this.defaultParams = p), (this.normalizer = S);
        }
        buildStyles(h, p) {
          const S = new Map(),
            V = Q(this.defaultParams);
          return (
            Object.keys(h).forEach(q => {
              const _e = h[q];
              null !== _e && (V[q] = _e);
            }),
            this.styles.styles.forEach(q => {
              'string' != typeof q &&
                q.forEach((_e, Ee) => {
                  _e && (_e = qt(_e, V, p));
                  const qe = this.normalizer.normalizePropertyName(Ee, p);
                  (_e = this.normalizer.normalizeStyleValue(Ee, qe, _e, p)),
                    S.set(Ee, _e);
                });
            }),
            S
          );
        }
      }
      class Fr {
        constructor(h, p, S) {
          (this.name = h),
            (this.ast = p),
            (this._normalizer = S),
            (this.transitionFactories = []),
            (this.states = new Map()),
            p.states.forEach(V => {
              this.states.set(
                V.name,
                new Cr(V.style, (V.options && V.options.params) || {}, S),
              );
            }),
            sr(this.states, 'true', '1'),
            sr(this.states, 'false', '0'),
            p.transitions.forEach(V => {
              this.transitionFactories.push(new Nn(h, V, this.states));
            }),
            (this.fallbackTransition = (function Hr(B, h, p) {
              return new Nn(
                B,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(_e, Ee) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                h,
              );
            })(h, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(h, p, S, V) {
          return (
            this.transitionFactories.find(_e => _e.match(h, p, S, V)) || null
          );
        }
        matchStyles(h, p, S) {
          return this.fallbackTransition.buildStyles(h, p, S);
        }
      }
      function sr(B, h, p) {
        B.has(h)
          ? B.has(p) || B.set(p, B.get(h))
          : B.has(p) && B.set(h, B.get(p));
      }
      const Qr = new Ni();
      class Xr {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(h, p) {
          const S = [],
            V = [],
            q = hi(this._driver, p, S, V);
          if (S.length)
            throw (function $e(B) {
              return new x.vHH(3503, !1);
            })();
          this._animations.set(h, q);
        }
        _buildPlayer(h, p, S) {
          const V = h.element,
            q = $t(0, this._normalizer, 0, h.keyframes, p, S);
          return this._driver.animate(
            V,
            q,
            h.duration,
            h.delay,
            h.easing,
            [],
            !0,
          );
        }
        create(h, p, S = {}) {
          const V = [],
            q = this._animations.get(h);
          let _e;
          const Ee = new Map();
          if (
            (q
              ? ((_e = Zi(
                  this._driver,
                  p,
                  q,
                  Dn,
                  Oe,
                  new Map(),
                  new Map(),
                  S,
                  Qr,
                  V,
                )),
                _e.forEach(Nt => {
                  const Zt = pn(Ee, Nt.element, new Map());
                  Nt.postStyleProps.forEach(ln => Zt.set(ln, null));
                }))
              : (V.push(
                  (function ze() {
                    return new x.vHH(3300, !1);
                  })(),
                ),
                (_e = [])),
            V.length)
          )
            throw (function be(B) {
              return new x.vHH(3504, !1);
            })();
          Ee.forEach((Nt, Zt) => {
            Nt.forEach((ln, In) => {
              Nt.set(In, this._driver.computeStyle(Zt, In, te.l3));
            });
          });
          const gt = ft(
            _e.map(Nt => {
              const Zt = Ee.get(Nt.element);
              return this._buildPlayer(Nt, new Map(), Zt);
            }),
          );
          return (
            this._playersById.set(h, gt),
            gt.onDestroy(() => this.destroy(h)),
            this.players.push(gt),
            gt
          );
        }
        destroy(h) {
          const p = this._getPlayer(h);
          p.destroy(), this._playersById.delete(h);
          const S = this.players.indexOf(p);
          S >= 0 && this.players.splice(S, 1);
        }
        _getPlayer(h) {
          const p = this._playersById.get(h);
          if (!p)
            throw (function Ue(B) {
              return new x.vHH(3301, !1);
            })();
          return p;
        }
        listen(h, p, S, V) {
          const q = Wt(p, '', '', '');
          return et(this._getPlayer(h), S, q, V), () => {};
        }
        command(h, p, S, V) {
          if ('register' == S) return void this.register(h, V[0]);
          if ('create' == S) return void this.create(h, p, V[0] || {});
          const q = this._getPlayer(h);
          switch (S) {
            case 'play':
              q.play();
              break;
            case 'pause':
              q.pause();
              break;
            case 'reset':
              q.reset();
              break;
            case 'restart':
              q.restart();
              break;
            case 'finish':
              q.finish();
              break;
            case 'init':
              q.init();
              break;
            case 'setPosition':
              q.setPosition(parseFloat(V[0]));
              break;
            case 'destroy':
              this.destroy(h);
          }
        }
      }
      const xo = 'ng-animate-queued',
        Pr = 'ng-animate-disabled',
        co = [],
        ar = {
          namespaceId: '',
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        qi = {
          namespaceId: '',
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        _i = '__ng_removed';
      class Er {
        get params() {
          return this.options.params;
        }
        constructor(h, p = '') {
          this.namespaceId = p;
          const S = h && h.hasOwnProperty('value');
          if (
            ((this.value = (function Eo(B) {
              return B ?? null;
            })(S ? h.value : h)),
            S)
          ) {
            const q = Q(h);
            delete q.value, (this.options = q);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(h) {
          const p = h.params;
          if (p) {
            const S = this.options.params;
            Object.keys(p).forEach(V => {
              null == S[V] && (S[V] = p[V]);
            });
          }
        }
      }
      const pr = 'void',
        uo = new Er(pr);
      class zr {
        constructor(h, p, S) {
          (this.id = h),
            (this.hostElement = p),
            (this._engine = S),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + h),
            oi(p, this._hostClassName);
        }
        listen(h, p, S, V) {
          if (!this._triggers.has(p))
            throw (function Ce(B, h) {
              return new x.vHH(3302, !1);
            })();
          if (null == S || 0 == S.length)
            throw (function Pe(B) {
              return new x.vHH(3303, !1);
            })();
          if (
            !(function wi(B) {
              return 'start' == B || 'done' == B;
            })(S)
          )
            throw (function Le(B, h) {
              return new x.vHH(3400, !1);
            })();
          const q = pn(this._elementListeners, h, []),
            _e = { name: p, phase: S, callback: V };
          q.push(_e);
          const Ee = pn(this._engine.statesByElement, h, new Map());
          return (
            Ee.has(p) || (oi(h, yt), oi(h, yt + '-' + p), Ee.set(p, uo)),
            () => {
              this._engine.afterFlush(() => {
                const qe = q.indexOf(_e);
                qe >= 0 && q.splice(qe, 1),
                  this._triggers.has(p) || Ee.delete(p);
              });
            }
          );
        }
        register(h, p) {
          return !this._triggers.has(h) && (this._triggers.set(h, p), !0);
        }
        _getTrigger(h) {
          const p = this._triggers.get(h);
          if (!p)
            throw (function Ye(B) {
              return new x.vHH(3401, !1);
            })();
          return p;
        }
        trigger(h, p, S, V = !0) {
          const q = this._getTrigger(p),
            _e = new mr(this.id, p, h);
          let Ee = this._engine.statesByElement.get(h);
          Ee ||
            (oi(h, yt),
            oi(h, yt + '-' + p),
            this._engine.statesByElement.set(h, (Ee = new Map())));
          let qe = Ee.get(p);
          const gt = new Er(S, this.id);
          if (
            (!(S && S.hasOwnProperty('value')) &&
              qe &&
              gt.absorbOptions(qe.options),
            Ee.set(p, gt),
            qe || (qe = uo),
            gt.value !== pr && qe.value === gt.value)
          ) {
            if (
              !(function Mr(B, h) {
                const p = Object.keys(B),
                  S = Object.keys(h);
                if (p.length != S.length) return !1;
                for (let V = 0; V < p.length; V++) {
                  const q = p[V];
                  if (!h.hasOwnProperty(q) || B[q] !== h[q]) return !1;
                }
                return !0;
              })(qe.params, gt.params)
            ) {
              const yn = [],
                jn = q.matchStyles(qe.value, qe.params, yn),
                qn = q.matchStyles(gt.value, gt.params, yn);
              yn.length
                ? this._engine.reportError(yn)
                : this._engine.afterFlush(() => {
                    xe(h, jn), Ie(h, qn);
                  });
            }
            return;
          }
          const ln = pn(this._engine.playersByElement, h, []);
          ln.forEach(yn => {
            yn.namespaceId == this.id &&
              yn.triggerName == p &&
              yn.queued &&
              yn.destroy();
          });
          let In = q.matchTransition(qe.value, gt.value, h, gt.params),
            mn = !1;
          if (!In) {
            if (!V) return;
            (In = q.fallbackTransition), (mn = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: h,
              triggerName: p,
              transition: In,
              fromState: qe,
              toState: gt,
              player: _e,
              isFallbackTransition: mn,
            }),
            mn ||
              (oi(h, xo),
              _e.onStart(() => {
                li(h, xo);
              })),
            _e.onDone(() => {
              let yn = this.players.indexOf(_e);
              yn >= 0 && this.players.splice(yn, 1);
              const jn = this._engine.playersByElement.get(h);
              if (jn) {
                let qn = jn.indexOf(_e);
                qn >= 0 && jn.splice(qn, 1);
              }
            }),
            this.players.push(_e),
            ln.push(_e),
            _e
          );
        }
        deregister(h) {
          this._triggers.delete(h),
            this._engine.statesByElement.forEach(p => p.delete(h)),
            this._elementListeners.forEach((p, S) => {
              this._elementListeners.set(
                S,
                p.filter(V => V.name != h),
              );
            });
        }
        clearElementCache(h) {
          this._engine.statesByElement.delete(h),
            this._elementListeners.delete(h);
          const p = this._engine.playersByElement.get(h);
          p &&
            (p.forEach(S => S.destroy()),
            this._engine.playersByElement.delete(h));
        }
        _signalRemovalForInnerTriggers(h, p) {
          const S = this._engine.driver.query(h, Je, !0);
          S.forEach(V => {
            if (V[_i]) return;
            const q = this._engine.fetchNamespacesByElement(V);
            q.size
              ? q.forEach(_e => _e.triggerLeaveAnimation(V, p, !1, !0))
              : this.clearElementCache(V);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              S.forEach(V => this.clearElementCache(V)),
            );
        }
        triggerLeaveAnimation(h, p, S, V) {
          const q = this._engine.statesByElement.get(h),
            _e = new Map();
          if (q) {
            const Ee = [];
            if (
              (q.forEach((qe, gt) => {
                if ((_e.set(gt, qe.value), this._triggers.has(gt))) {
                  const Nt = this.trigger(h, gt, pr, V);
                  Nt && Ee.push(Nt);
                }
              }),
              Ee.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, h, !0, p, _e),
                S && ft(Ee).onDone(() => this._engine.processLeaveNode(h)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(h) {
          const p = this._elementListeners.get(h),
            S = this._engine.statesByElement.get(h);
          if (p && S) {
            const V = new Set();
            p.forEach(q => {
              const _e = q.name;
              if (V.has(_e)) return;
              V.add(_e);
              const qe = this._triggers.get(_e).fallbackTransition,
                gt = S.get(_e) || uo,
                Nt = new Er(pr),
                Zt = new mr(this.id, _e, h);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: h,
                  triggerName: _e,
                  transition: qe,
                  fromState: gt,
                  toState: Nt,
                  player: Zt,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(h, p) {
          const S = this._engine;
          if (
            (h.childElementCount && this._signalRemovalForInnerTriggers(h, p),
            this.triggerLeaveAnimation(h, p, !0))
          )
            return;
          let V = !1;
          if (S.totalAnimations) {
            const q = S.players.length ? S.playersByQueriedElement.get(h) : [];
            if (q && q.length) V = !0;
            else {
              let _e = h;
              for (; (_e = _e.parentNode); )
                if (S.statesByElement.get(_e)) {
                  V = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(h), V))
            S.markElementAsRemoved(this.id, h, !1, p);
          else {
            const q = h[_i];
            (!q || q === ar) &&
              (S.afterFlush(() => this.clearElementCache(h)),
              S.destroyInnerAnimations(h),
              S._onRemovalComplete(h, p));
          }
        }
        insertNode(h, p) {
          oi(h, this._hostClassName);
        }
        drainQueuedTransitions(h) {
          const p = [];
          return (
            this._queue.forEach(S => {
              const V = S.player;
              if (V.destroyed) return;
              const q = S.element,
                _e = this._elementListeners.get(q);
              _e &&
                _e.forEach(Ee => {
                  if (Ee.name == S.triggerName) {
                    const qe = Wt(
                      q,
                      S.triggerName,
                      S.fromState.value,
                      S.toState.value,
                    );
                    (qe._data = h), et(S.player, Ee.phase, qe, Ee.callback);
                  }
                }),
                V.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      V.destroy();
                    })
                  : p.push(S);
            }),
            (this._queue = []),
            p.sort((S, V) => {
              const q = S.transition.ast.depCount,
                _e = V.transition.ast.depCount;
              return 0 == q || 0 == _e
                ? q - _e
                : this._engine.driver.containsElement(S.element, V.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(h) {
          this.players.forEach(p => p.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, h);
        }
        elementContainsData(h) {
          let p = !1;
          return (
            this._elementListeners.has(h) && (p = !0),
            (p = !!this._queue.find(S => S.element === h) || p),
            p
          );
        }
      }
      class wr {
        _onRemovalComplete(h, p) {
          this.onRemovalComplete(h, p);
        }
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this.driver = p),
            (this._normalizer = S),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (V, q) => {});
        }
        get queuedPlayers() {
          const h = [];
          return (
            this._namespaceList.forEach(p => {
              p.players.forEach(S => {
                S.queued && h.push(S);
              });
            }),
            h
          );
        }
        createNamespace(h, p) {
          const S = new zr(h, p, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, p)
              ? this._balanceNamespaceList(S, p)
              : (this.newHostElements.set(p, S), this.collectEnterElement(p)),
            (this._namespaceLookup[h] = S)
          );
        }
        _balanceNamespaceList(h, p) {
          const S = this._namespaceList,
            V = this.namespacesByHostElement;
          if (S.length - 1 >= 0) {
            let _e = !1,
              Ee = this.driver.getParentElement(p);
            for (; Ee; ) {
              const qe = V.get(Ee);
              if (qe) {
                const gt = S.indexOf(qe);
                S.splice(gt + 1, 0, h), (_e = !0);
                break;
              }
              Ee = this.driver.getParentElement(Ee);
            }
            _e || S.unshift(h);
          } else S.push(h);
          return V.set(p, h), h;
        }
        register(h, p) {
          let S = this._namespaceLookup[h];
          return S || (S = this.createNamespace(h, p)), S;
        }
        registerTrigger(h, p, S) {
          let V = this._namespaceLookup[h];
          V && V.register(p, S) && this.totalAnimations++;
        }
        destroy(h, p) {
          if (!h) return;
          const S = this._fetchNamespace(h);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(S.hostElement),
              delete this._namespaceLookup[h];
            const V = this._namespaceList.indexOf(S);
            V >= 0 && this._namespaceList.splice(V, 1);
          }),
            this.afterFlushAnimationsDone(() => S.destroy(p));
        }
        _fetchNamespace(h) {
          return this._namespaceLookup[h];
        }
        fetchNamespacesByElement(h) {
          const p = new Set(),
            S = this.statesByElement.get(h);
          if (S)
            for (let V of S.values())
              if (V.namespaceId) {
                const q = this._fetchNamespace(V.namespaceId);
                q && p.add(q);
              }
          return p;
        }
        trigger(h, p, S, V) {
          if ($r(p)) {
            const q = this._fetchNamespace(h);
            if (q) return q.trigger(p, S, V), !0;
          }
          return !1;
        }
        insertNode(h, p, S, V) {
          if (!$r(p)) return;
          const q = p[_i];
          if (q && q.setForRemoval) {
            (q.setForRemoval = !1), (q.setForMove = !0);
            const _e = this.collectedLeaveElements.indexOf(p);
            _e >= 0 && this.collectedLeaveElements.splice(_e, 1);
          }
          if (h) {
            const _e = this._fetchNamespace(h);
            _e && _e.insertNode(p, S);
          }
          V && this.collectEnterElement(p);
        }
        collectEnterElement(h) {
          this.collectedEnterElements.push(h);
        }
        markElementAsDisabled(h, p) {
          p
            ? this.disabledNodes.has(h) ||
              (this.disabledNodes.add(h), oi(h, Pr))
            : this.disabledNodes.has(h) &&
              (this.disabledNodes.delete(h), li(h, Pr));
        }
        removeNode(h, p, S, V) {
          if ($r(p)) {
            const q = h ? this._fetchNamespace(h) : null;
            if (
              (q ? q.removeNode(p, V) : this.markElementAsRemoved(h, p, !1, V),
              S)
            ) {
              const _e = this.namespacesByHostElement.get(p);
              _e && _e.id !== h && _e.removeNode(p, V);
            }
          } else this._onRemovalComplete(p, V);
        }
        markElementAsRemoved(h, p, S, V, q) {
          this.collectedLeaveElements.push(p),
            (p[_i] = {
              namespaceId: h,
              setForRemoval: V,
              hasAnimation: S,
              removedBeforeQueried: !1,
              previousTriggersValues: q,
            });
        }
        listen(h, p, S, V, q) {
          return $r(p) ? this._fetchNamespace(h).listen(p, S, V, q) : () => {};
        }
        _buildInstruction(h, p, S, V, q) {
          return h.transition.build(
            this.driver,
            h.element,
            h.fromState.value,
            h.toState.value,
            S,
            V,
            h.fromState.options,
            h.toState.options,
            p,
            q,
          );
        }
        destroyInnerAnimations(h) {
          let p = this.driver.query(h, Je, !0);
          p.forEach(S => this.destroyActiveAnimationsForElement(S)),
            0 != this.playersByQueriedElement.size &&
              ((p = this.driver.query(h, Te, !0)),
              p.forEach(S => this.finishActiveQueriedAnimationOnElement(S)));
        }
        destroyActiveAnimationsForElement(h) {
          const p = this.playersByElement.get(h);
          p &&
            p.forEach(S => {
              S.queued ? (S.markedForDestroy = !0) : S.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(h) {
          const p = this.playersByQueriedElement.get(h);
          p && p.forEach(S => S.finish());
        }
        whenRenderingDone() {
          return new Promise(h => {
            if (this.players.length) return ft(this.players).onDone(() => h());
            h();
          });
        }
        processLeaveNode(h) {
          const p = h[_i];
          if (p && p.setForRemoval) {
            if (((h[_i] = ar), p.namespaceId)) {
              this.destroyInnerAnimations(h);
              const S = this._fetchNamespace(p.namespaceId);
              S && S.clearElementCache(h);
            }
            this._onRemovalComplete(h, p.setForRemoval);
          }
          h.classList?.contains(Pr) && this.markElementAsDisabled(h, !1),
            this.driver.query(h, '.ng-animate-disabled', !0).forEach(S => {
              this.markElementAsDisabled(S, !1);
            });
        }
        flush(h = -1) {
          let p = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((S, V) =>
                this._balanceNamespaceList(S, V),
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let S = 0; S < this.collectedEnterElements.length; S++)
              oi(this.collectedEnterElements[S], 'ng-star-inserted');
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const S = [];
            try {
              p = this._flushAnimations(S, h);
            } finally {
              for (let V = 0; V < S.length; V++) S[V]();
            }
          } else
            for (let S = 0; S < this.collectedLeaveElements.length; S++)
              this.processLeaveNode(this.collectedLeaveElements[S]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach(S => S()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const S = this._whenQuietFns;
            (this._whenQuietFns = []),
              p.length
                ? ft(p).onDone(() => {
                    S.forEach(V => V());
                  })
                : S.forEach(V => V());
          }
        }
        reportError(h) {
          throw (function dt(B) {
            return new x.vHH(3402, !1);
          })();
        }
        _flushAnimations(h, p) {
          const S = new Ni(),
            V = [],
            q = new Map(),
            _e = [],
            Ee = new Map(),
            qe = new Map(),
            gt = new Map(),
            Nt = new Set();
          this.disabledNodes.forEach(Lt => {
            Nt.add(Lt);
            const Vt = this.driver.query(Lt, '.ng-animate-queued', !0);
            for (let on = 0; on < Vt.length; on++) Nt.add(Vt[on]);
          });
          const Zt = this.bodyNode,
            ln = Array.from(this.statesByElement.keys()),
            In = ai(ln, this.collectedEnterElements),
            mn = new Map();
          let yn = 0;
          In.forEach((Lt, Vt) => {
            const on = Dn + yn++;
            mn.set(Vt, on), Lt.forEach(sn => oi(sn, on));
          });
          const jn = [],
            qn = new Set(),
            Mi = new Set();
          for (let Lt = 0; Lt < this.collectedLeaveElements.length; Lt++) {
            const Vt = this.collectedLeaveElements[Lt],
              on = Vt[_i];
            on &&
              on.setForRemoval &&
              (jn.push(Vt),
              qn.add(Vt),
              on.hasAnimation
                ? this.driver
                    .query(Vt, '.ng-star-inserted', !0)
                    .forEach(sn => qn.add(sn))
                : Mi.add(Vt));
          }
          const fi = new Map(),
            pi = ai(ln, Array.from(qn));
          pi.forEach((Lt, Vt) => {
            const on = Oe + yn++;
            fi.set(Vt, on), Lt.forEach(sn => oi(sn, on));
          }),
            h.push(() => {
              In.forEach((Lt, Vt) => {
                const on = mn.get(Vt);
                Lt.forEach(sn => li(sn, on));
              }),
                pi.forEach((Lt, Vt) => {
                  const on = fi.get(Vt);
                  Lt.forEach(sn => li(sn, on));
                }),
                jn.forEach(Lt => {
                  this.processLeaveNode(Lt);
                });
            });
          const vr = [],
            y = [];
          for (let Lt = this._namespaceList.length - 1; Lt >= 0; Lt--)
            this._namespaceList[Lt].drainQueuedTransitions(p).forEach(on => {
              const sn = on.player,
                On = on.element;
              if ((vr.push(sn), this.collectedEnterElements.length)) {
                const mi = On[_i];
                if (mi && mi.setForMove) {
                  if (
                    mi.previousTriggersValues &&
                    mi.previousTriggersValues.has(on.triggerName)
                  ) {
                    const Wr = mi.previousTriggersValues.get(on.triggerName),
                      Qi = this.statesByElement.get(on.element);
                    if (Qi && Qi.has(on.triggerName)) {
                      const us = Qi.get(on.triggerName);
                      (us.value = Wr), Qi.set(on.triggerName, us);
                    }
                  }
                  return void sn.destroy();
                }
              }
              const Ai = !Zt || !this.driver.containsElement(Zt, On),
                Yn = fi.get(On),
                Si = mn.get(On),
                Vn = this._buildInstruction(on, S, Si, Yn, Ai);
              if (Vn.errors && Vn.errors.length) return void y.push(Vn);
              if (Ai)
                return (
                  sn.onStart(() => xe(On, Vn.fromStyles)),
                  sn.onDestroy(() => Ie(On, Vn.toStyles)),
                  void V.push(sn)
                );
              if (on.isFallbackTransition)
                return (
                  sn.onStart(() => xe(On, Vn.fromStyles)),
                  sn.onDestroy(() => Ie(On, Vn.toStyles)),
                  void V.push(sn)
                );
              const kr = [];
              Vn.timelines.forEach(mi => {
                (mi.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(mi.element) || kr.push(mi);
              }),
                (Vn.timelines = kr),
                S.append(On, Vn.timelines),
                _e.push({ instruction: Vn, player: sn, element: On }),
                Vn.queriedElements.forEach(mi => pn(Ee, mi, []).push(sn)),
                Vn.preStyleProps.forEach((mi, Wr) => {
                  if (mi.size) {
                    let Qi = qe.get(Wr);
                    Qi || qe.set(Wr, (Qi = new Set())),
                      mi.forEach((us, Zo) => Qi.add(Zo));
                  }
                }),
                Vn.postStyleProps.forEach((mi, Wr) => {
                  let Qi = gt.get(Wr);
                  Qi || gt.set(Wr, (Qi = new Set())),
                    mi.forEach((us, Zo) => Qi.add(Zo));
                });
            });
          if (y.length) {
            const Lt = [];
            y.forEach(Vt => {
              Lt.push(
                (function Gt(B, h) {
                  return new x.vHH(3505, !1);
                })(),
              );
            }),
              vr.forEach(Vt => Vt.destroy()),
              this.reportError(Lt);
          }
          const P = new Map(),
            A = new Map();
          _e.forEach(Lt => {
            const Vt = Lt.element;
            S.has(Vt) &&
              (A.set(Vt, Vt),
              this._beforeAnimationBuild(
                Lt.player.namespaceId,
                Lt.instruction,
                P,
              ));
          }),
            V.forEach(Lt => {
              const Vt = Lt.element;
              this._getPreviousPlayers(
                Vt,
                !1,
                Lt.namespaceId,
                Lt.triggerName,
                null,
              ).forEach(sn => {
                pn(P, Vt, []).push(sn), sn.destroy();
              });
            });
          const j = jn.filter(Lt => ni(Lt, qe, gt)),
            ae = new Map();
          eo(ae, this.driver, Mi, gt, te.l3).forEach(Lt => {
            ni(Lt, qe, gt) && j.push(Lt);
          });
          const Dt = new Map();
          In.forEach((Lt, Vt) => {
            eo(Dt, this.driver, new Set(Lt), qe, te.k1);
          }),
            j.forEach(Lt => {
              const Vt = ae.get(Lt),
                on = Dt.get(Lt);
              ae.set(
                Lt,
                new Map([
                  ...Array.from(Vt?.entries() ?? []),
                  ...Array.from(on?.entries() ?? []),
                ]),
              );
            });
          const Qt = [],
            zn = [],
            Bn = {};
          _e.forEach(Lt => {
            const { element: Vt, player: on, instruction: sn } = Lt;
            if (S.has(Vt)) {
              if (Nt.has(Vt))
                return (
                  on.onDestroy(() => Ie(Vt, sn.toStyles)),
                  (on.disabled = !0),
                  on.overrideTotalTime(sn.totalTime),
                  void V.push(on)
                );
              let On = Bn;
              if (A.size > 1) {
                let Yn = Vt;
                const Si = [];
                for (; (Yn = Yn.parentNode); ) {
                  const Vn = A.get(Yn);
                  if (Vn) {
                    On = Vn;
                    break;
                  }
                  Si.push(Yn);
                }
                Si.forEach(Vn => A.set(Vn, On));
              }
              const Ai = this._buildAnimation(on.namespaceId, sn, P, q, Dt, ae);
              if ((on.setRealPlayer(Ai), On === Bn)) Qt.push(on);
              else {
                const Yn = this.playersByElement.get(On);
                Yn && Yn.length && (on.parentPlayer = ft(Yn)), V.push(on);
              }
            } else
              xe(Vt, sn.fromStyles),
                on.onDestroy(() => Ie(Vt, sn.toStyles)),
                zn.push(on),
                Nt.has(Vt) && V.push(on);
          }),
            zn.forEach(Lt => {
              const Vt = q.get(Lt.element);
              if (Vt && Vt.length) {
                const on = ft(Vt);
                Lt.setRealPlayer(on);
              }
            }),
            V.forEach(Lt => {
              Lt.parentPlayer
                ? Lt.syncPlayerEvents(Lt.parentPlayer)
                : Lt.destroy();
            });
          for (let Lt = 0; Lt < jn.length; Lt++) {
            const Vt = jn[Lt],
              on = Vt[_i];
            if ((li(Vt, Oe), on && on.hasAnimation)) continue;
            let sn = [];
            if (Ee.size) {
              let Ai = Ee.get(Vt);
              Ai && Ai.length && sn.push(...Ai);
              let Yn = this.driver.query(Vt, Te, !0);
              for (let Si = 0; Si < Yn.length; Si++) {
                let Vn = Ee.get(Yn[Si]);
                Vn && Vn.length && sn.push(...Vn);
              }
            }
            const On = sn.filter(Ai => !Ai.destroyed);
            On.length ? vi(this, Vt, On) : this.processLeaveNode(Vt);
          }
          return (
            (jn.length = 0),
            Qt.forEach(Lt => {
              this.players.push(Lt),
                Lt.onDone(() => {
                  Lt.destroy();
                  const Vt = this.players.indexOf(Lt);
                  this.players.splice(Vt, 1);
                }),
                Lt.play();
            }),
            Qt
          );
        }
        elementContainsData(h, p) {
          let S = !1;
          const V = p[_i];
          return (
            V && V.setForRemoval && (S = !0),
            this.playersByElement.has(p) && (S = !0),
            this.playersByQueriedElement.has(p) && (S = !0),
            this.statesByElement.has(p) && (S = !0),
            this._fetchNamespace(h).elementContainsData(p) || S
          );
        }
        afterFlush(h) {
          this._flushFns.push(h);
        }
        afterFlushAnimationsDone(h) {
          this._whenQuietFns.push(h);
        }
        _getPreviousPlayers(h, p, S, V, q) {
          let _e = [];
          if (p) {
            const Ee = this.playersByQueriedElement.get(h);
            Ee && (_e = Ee);
          } else {
            const Ee = this.playersByElement.get(h);
            if (Ee) {
              const qe = !q || q == pr;
              Ee.forEach(gt => {
                gt.queued || (!qe && gt.triggerName != V) || _e.push(gt);
              });
            }
          }
          return (
            (S || V) &&
              (_e = _e.filter(
                Ee =>
                  !((S && S != Ee.namespaceId) || (V && V != Ee.triggerName)),
              )),
            _e
          );
        }
        _beforeAnimationBuild(h, p, S) {
          const q = p.element,
            _e = p.isRemovalTransition ? void 0 : h,
            Ee = p.isRemovalTransition ? void 0 : p.triggerName;
          for (const qe of p.timelines) {
            const gt = qe.element,
              Nt = gt !== q,
              Zt = pn(S, gt, []);
            this._getPreviousPlayers(gt, Nt, _e, Ee, p.toState).forEach(In => {
              const mn = In.getRealPlayer();
              mn.beforeDestroy && mn.beforeDestroy(), In.destroy(), Zt.push(In);
            });
          }
          xe(q, p.fromStyles);
        }
        _buildAnimation(h, p, S, V, q, _e) {
          const Ee = p.triggerName,
            qe = p.element,
            gt = [],
            Nt = new Set(),
            Zt = new Set(),
            ln = p.timelines.map(mn => {
              const yn = mn.element;
              Nt.add(yn);
              const jn = yn[_i];
              if (jn && jn.removedBeforeQueried)
                return new te.ZN(mn.duration, mn.delay);
              const qn = yn !== qe,
                Mi = (function Yr(B) {
                  const h = [];
                  return Gr(B, h), h;
                })((S.get(yn) || co).map(P => P.getRealPlayer())).filter(
                  P => !!P.element && P.element === yn,
                ),
                fi = q.get(yn),
                pi = _e.get(yn),
                vr = $t(0, this._normalizer, 0, mn.keyframes, fi, pi),
                y = this._buildPlayer(mn, vr, Mi);
              if ((mn.subTimeline && V && Zt.add(yn), qn)) {
                const P = new mr(h, Ee, yn);
                P.setRealPlayer(y), gt.push(P);
              }
              return y;
            });
          gt.forEach(mn => {
            pn(this.playersByQueriedElement, mn.element, []).push(mn),
              mn.onDone(() =>
                (function Ko(B, h, p) {
                  let S = B.get(h);
                  if (S) {
                    if (S.length) {
                      const V = S.indexOf(p);
                      S.splice(V, 1);
                    }
                    0 == S.length && B.delete(h);
                  }
                  return S;
                })(this.playersByQueriedElement, mn.element, mn),
              );
          }),
            Nt.forEach(mn => oi(mn, At));
          const In = ft(ln);
          return (
            In.onDestroy(() => {
              Nt.forEach(mn => li(mn, At)), Ie(qe, p.toStyles);
            }),
            Zt.forEach(mn => {
              pn(V, mn, []).push(In);
            }),
            In
          );
        }
        _buildPlayer(h, p, S) {
          return p.length > 0
            ? this.driver.animate(
                h.element,
                p,
                h.duration,
                h.delay,
                h.easing,
                S,
              )
            : new te.ZN(h.duration, h.delay);
        }
      }
      class mr {
        constructor(h, p, S) {
          (this.namespaceId = h),
            (this.triggerName = p),
            (this.element = S),
            (this._player = new te.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(h) {
          this._containsRealPlayer ||
            ((this._player = h),
            this._queuedCallbacks.forEach((p, S) => {
              p.forEach(V => et(h, S, void 0, V));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(h.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(h) {
          this.totalTime = h;
        }
        syncPlayerEvents(h) {
          const p = this._player;
          p.triggerCallback && h.onStart(() => p.triggerCallback('start')),
            h.onDone(() => this.finish()),
            h.onDestroy(() => this.destroy());
        }
        _queueEvent(h, p) {
          pn(this._queuedCallbacks, h, []).push(p);
        }
        onDone(h) {
          this.queued && this._queueEvent('done', h), this._player.onDone(h);
        }
        onStart(h) {
          this.queued && this._queueEvent('start', h), this._player.onStart(h);
        }
        onDestroy(h) {
          this.queued && this._queueEvent('destroy', h),
            this._player.onDestroy(h);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(h) {
          this.queued || this._player.setPosition(h);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(h) {
          const p = this._player;
          p.triggerCallback && p.triggerCallback(h);
        }
      }
      function $r(B) {
        return B && 1 === B.nodeType;
      }
      function ho(B, h) {
        const p = B.style.display;
        return (B.style.display = h ?? 'none'), p;
      }
      function eo(B, h, p, S, V) {
        const q = [];
        p.forEach(qe => q.push(ho(qe)));
        const _e = [];
        S.forEach((qe, gt) => {
          const Nt = new Map();
          qe.forEach(Zt => {
            const ln = h.computeStyle(gt, Zt, V);
            Nt.set(Zt, ln),
              (!ln || 0 == ln.length) && ((gt[_i] = qi), _e.push(gt));
          }),
            B.set(gt, Nt);
        });
        let Ee = 0;
        return p.forEach(qe => ho(qe, q[Ee++])), _e;
      }
      function ai(B, h) {
        const p = new Map();
        if ((B.forEach(Ee => p.set(Ee, [])), 0 == h.length)) return p;
        const S = 1,
          V = new Set(h),
          q = new Map();
        function _e(Ee) {
          if (!Ee) return S;
          let qe = q.get(Ee);
          if (qe) return qe;
          const gt = Ee.parentNode;
          return (
            (qe = p.has(gt) ? gt : V.has(gt) ? S : _e(gt)), q.set(Ee, qe), qe
          );
        }
        return (
          h.forEach(Ee => {
            const qe = _e(Ee);
            qe !== S && p.get(qe).push(Ee);
          }),
          p
        );
      }
      function oi(B, h) {
        B.classList?.add(h);
      }
      function li(B, h) {
        B.classList?.remove(h);
      }
      function vi(B, h, p) {
        ft(p).onDone(() => B.processLeaveNode(h));
      }
      function Gr(B, h) {
        for (let p = 0; p < B.length; p++) {
          const S = B[p];
          S instanceof te.ZE ? Gr(S.players, h) : h.push(S);
        }
      }
      function ni(B, h, p) {
        const S = p.get(B);
        if (!S) return !1;
        let V = h.get(B);
        return V ? S.forEach(q => V.add(q)) : h.set(B, S), p.delete(B), !0;
      }
      class Ar {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (V, q) => {}),
            (this._transitionEngine = new wr(h, p, S)),
            (this._timelineEngine = new Xr(h, p, S)),
            (this._transitionEngine.onRemovalComplete = (V, q) =>
              this.onRemovalComplete(V, q));
        }
        registerTrigger(h, p, S, V, q) {
          const _e = h + '-' + V;
          let Ee = this._triggerCache[_e];
          if (!Ee) {
            const qe = [],
              gt = [],
              Nt = hi(this._driver, q, qe, gt);
            if (qe.length)
              throw (function Yt(B, h) {
                return new x.vHH(3404, !1);
              })();
            (Ee = (function lo(B, h, p) {
              return new Fr(B, h, p);
            })(V, Nt, this._normalizer)),
              (this._triggerCache[_e] = Ee);
          }
          this._transitionEngine.registerTrigger(p, V, Ee);
        }
        register(h, p) {
          this._transitionEngine.register(h, p);
        }
        destroy(h, p) {
          this._transitionEngine.destroy(h, p);
        }
        onInsert(h, p, S, V) {
          this._transitionEngine.insertNode(h, p, S, V);
        }
        onRemove(h, p, S, V) {
          this._transitionEngine.removeNode(h, p, V || !1, S);
        }
        disableAnimations(h, p) {
          this._transitionEngine.markElementAsDisabled(h, p);
        }
        process(h, p, S, V) {
          if ('@' == S.charAt(0)) {
            const [q, _e] = Sn(S);
            this._timelineEngine.command(q, p, _e, V);
          } else this._transitionEngine.trigger(h, p, S, V);
        }
        listen(h, p, S, V, q) {
          if ('@' == S.charAt(0)) {
            const [_e, Ee] = Sn(S);
            return this._timelineEngine.listen(_e, p, Ee, q);
          }
          return this._transitionEngine.listen(h, p, S, V, q);
        }
        flush(h = -1) {
          this._transitionEngine.flush(h);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players,
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let to = (() => {
        class B {
          constructor(p, S, V) {
            (this._element = p),
              (this._startStyles = S),
              (this._endStyles = V),
              (this._state = 0);
            let q = B.initialStylesByElement.get(p);
            q || B.initialStylesByElement.set(p, (q = new Map())),
              (this._initialStyles = q);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Ie(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Ie(this._element, this._initialStyles),
                this._endStyles &&
                  (Ie(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (B.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (xe(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (xe(this._element, this._endStyles),
                  (this._endStyles = null)),
                Ie(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (B.initialStylesByElement = new WeakMap()), B;
      })();
      function Bi(B) {
        let h = null;
        return (
          B.forEach((p, S) => {
            (function Nr(B) {
              return 'display' === B || 'position' === B;
            })(S) && ((h = h || new Map()), h.set(S, p));
          }),
          h
        );
      }
      class no {
        constructor(h, p, S, V) {
          (this.element = h),
            (this.keyframes = p),
            (this.options = S),
            (this._specialStyles = V),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = S.duration),
            (this._delay = S.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(h => h()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const h = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            h,
            this.options,
          )),
            (this._finalKeyframe = h.length ? h[h.length - 1] : new Map()),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(h) {
          const p = [];
          return (
            h.forEach(S => {
              p.push(Object.fromEntries(S));
            }),
            p
          );
        }
        _triggerWebAnimation(h, p, S) {
          return h.animate(this._convertKeyframesToObject(p), S);
        }
        onStart(h) {
          this._originalOnStartFns.push(h), this._onStartFns.push(h);
        }
        onDone(h) {
          this._originalOnDoneFns.push(h), this._onDoneFns.push(h);
        }
        onDestroy(h) {
          this._onDestroyFns.push(h);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach(h => h()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach(h => h()),
            (this._onDestroyFns = []));
        }
        setPosition(h) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = h * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const h = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((S, V) => {
              'offset' !== V &&
                h.set(V, this._finished ? S : $n(this.element, V));
            }),
            (this.currentSnapshot = h);
        }
        triggerCallback(h) {
          const p = 'start' === h ? this._onStartFns : this._onDoneFns;
          p.forEach(S => S()), (p.length = 0);
        }
      }
      class _n {
        validateStyleProperty(h) {
          return !0;
        }
        validateAnimatableStyleProperty(h) {
          return !0;
        }
        matchesElement(h, p) {
          return !1;
        }
        containsElement(h, p) {
          return H(h, p);
        }
        getParentElement(h) {
          return En(h);
        }
        query(h, p, S) {
          return ke(h, p, S);
        }
        computeStyle(h, p, S) {
          return window.getComputedStyle(h)[p];
        }
        animate(h, p, S, V, q, _e = []) {
          const qe = {
            duration: S,
            delay: V,
            fill: 0 == V ? 'both' : 'forwards',
          };
          q && (qe.easing = q);
          const gt = new Map(),
            Nt = _e.filter(In => In instanceof no);
          (function ir(B, h) {
            return 0 === B || 0 === h;
          })(S, V) &&
            Nt.forEach(In => {
              In.currentSnapshot.forEach((mn, yn) => gt.set(yn, mn));
            });
          let Zt = (function St(B) {
            return B.length
              ? B[0] instanceof Map
                ? B
                : B.map(h => Xe(h))
              : [];
          })(p).map(In => Rt(In));
          Zt = (function Vr(B, h, p) {
            if (p.size && h.length) {
              let S = h[0],
                V = [];
              if (
                (p.forEach((q, _e) => {
                  S.has(_e) || V.push(_e), S.set(_e, q);
                }),
                V.length)
              )
                for (let q = 1; q < h.length; q++) {
                  let _e = h[q];
                  V.forEach(Ee => _e.set(Ee, $n(B, Ee)));
                }
            }
            return h;
          })(h, Zt, gt);
          const ln = (function Hi(B, h) {
            let p = null,
              S = null;
            return (
              Array.isArray(h) && h.length
                ? ((p = Bi(h[0])), h.length > 1 && (S = Bi(h[h.length - 1])))
                : h instanceof Map && (p = Bi(h)),
              p || S ? new to(B, p, S) : null
            );
          })(h, Zt);
          return new no(h, Zt, qe, ln);
        }
      }
      var gr = D(6895);
      let T = (() => {
        class B extends te._j {
          constructor(p, S) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = p.createRenderer(S.body, {
                id: '0',
                encapsulation: x.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(p) {
            const S = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const V = Array.isArray(p) ? (0, te.vP)(p) : p;
            return (
              $(this._renderer, null, S, 'register', [V]),
              new I(S, this._renderer)
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(gr.K0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class I extends te.LC {
        constructor(h, p) {
          super(), (this._id = h), (this._renderer = p);
        }
        create(h, p) {
          return new w(this._id, h, p || {}, this._renderer);
        }
      }
      class w {
        constructor(h, p, S, V) {
          (this.id = h),
            (this.element = p),
            (this._renderer = V),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', S);
        }
        _listen(h, p) {
          return this._renderer.listen(this.element, `@@${this.id}:${h}`, p);
        }
        _command(h, ...p) {
          return $(this._renderer, this.element, this.id, h, p);
        }
        onDone(h) {
          this._listen('done', h);
        }
        onStart(h) {
          this._listen('start', h);
        }
        onDestroy(h) {
          this._listen('destroy', h);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(h) {
          this._command('setPosition', h);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function $(B, h, p, S, V) {
        return B.setProperty(h, `@@${p}:${S}`, V);
      }
      const an = '@.disabled';
      let si = (() => {
        class B {
          constructor(p, S, V) {
            (this.delegate = p),
              (this.engine = S),
              (this._zone = V),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (S.onRemovalComplete = (q, _e) => {
                const Ee = _e?.parentNode(q);
                Ee && _e.removeChild(Ee, q);
              });
          }
          createRenderer(p, S) {
            const q = this.delegate.createRenderer(p, S);
            if (!(p && S && S.data && S.data.animation)) {
              let Nt = this._rendererCache.get(q);
              return (
                Nt ||
                  ((Nt = new ht('', q, this.engine, () =>
                    this._rendererCache.delete(q),
                  )),
                  this._rendererCache.set(q, Nt)),
                Nt
              );
            }
            const _e = S.id,
              Ee = S.id + '-' + this._currentId;
            this._currentId++, this.engine.register(Ee, p);
            const qe = Nt => {
              Array.isArray(Nt)
                ? Nt.forEach(qe)
                : this.engine.registerTrigger(_e, Ee, p, Nt.name, Nt);
            };
            return (
              S.data.animation.forEach(qe), new kn(this, Ee, q, this.engine)
            );
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(p, S, V) {
            p >= 0 && p < this._microtaskId
              ? this._zone.run(() => S(V))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach(q => {
                        const [_e, Ee] = q;
                        _e(Ee);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([S, V]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(Ar), x.LFG(x.R0b));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class ht {
        constructor(h, p, S, V) {
          (this.namespaceId = h),
            (this.delegate = p),
            (this.engine = S),
            (this._onDestroy = V),
            (this.destroyNode = this.delegate.destroyNode
              ? q => p.destroyNode(q)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(h, p) {
          return this.delegate.createElement(h, p);
        }
        createComment(h) {
          return this.delegate.createComment(h);
        }
        createText(h) {
          return this.delegate.createText(h);
        }
        appendChild(h, p) {
          this.delegate.appendChild(h, p),
            this.engine.onInsert(this.namespaceId, p, h, !1);
        }
        insertBefore(h, p, S, V = !0) {
          this.delegate.insertBefore(h, p, S),
            this.engine.onInsert(this.namespaceId, p, h, V);
        }
        removeChild(h, p, S) {
          this.engine.onRemove(this.namespaceId, p, this.delegate, S);
        }
        selectRootElement(h, p) {
          return this.delegate.selectRootElement(h, p);
        }
        parentNode(h) {
          return this.delegate.parentNode(h);
        }
        nextSibling(h) {
          return this.delegate.nextSibling(h);
        }
        setAttribute(h, p, S, V) {
          this.delegate.setAttribute(h, p, S, V);
        }
        removeAttribute(h, p, S) {
          this.delegate.removeAttribute(h, p, S);
        }
        addClass(h, p) {
          this.delegate.addClass(h, p);
        }
        removeClass(h, p) {
          this.delegate.removeClass(h, p);
        }
        setStyle(h, p, S, V) {
          this.delegate.setStyle(h, p, S, V);
        }
        removeStyle(h, p, S) {
          this.delegate.removeStyle(h, p, S);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0) && p == an
            ? this.disableAnimations(h, !!S)
            : this.delegate.setProperty(h, p, S);
        }
        setValue(h, p) {
          this.delegate.setValue(h, p);
        }
        listen(h, p, S) {
          return this.delegate.listen(h, p, S);
        }
        disableAnimations(h, p) {
          this.engine.disableAnimations(h, p);
        }
      }
      class kn extends ht {
        constructor(h, p, S, V, q) {
          super(p, S, V, q), (this.factory = h), (this.namespaceId = p);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0)
            ? '.' == p.charAt(1) && p == an
              ? this.disableAnimations(h, (S = void 0 === S || !!S))
              : this.engine.process(this.namespaceId, h, p.slice(1), S)
            : this.delegate.setProperty(h, p, S);
        }
        listen(h, p, S) {
          if ('@' == p.charAt(0)) {
            const V = (function Lr(B) {
              switch (B) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return B;
              }
            })(h);
            let q = p.slice(1),
              _e = '';
            return (
              '@' != q.charAt(0) &&
                ([q, _e] = (function fo(B) {
                  const h = B.indexOf('.');
                  return [B.substring(0, h), B.slice(h + 1)];
                })(q)),
              this.engine.listen(this.namespaceId, V, q, _e, Ee => {
                this.factory.scheduleListenerCallback(Ee._data || -1, S, Ee);
              })
            );
          }
          return this.delegate.listen(h, p, S);
        }
      }
      const lr = [
          { provide: te._j, useClass: T },
          {
            provide: Tt,
            useFactory: function as() {
              return new bn();
            },
          },
          {
            provide: Ar,
            useClass: (() => {
              class B extends Ar {
                constructor(p, S, V, q) {
                  super(p.body, S, V);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (B.ɵfac = function (p) {
                  return new (p || B)(
                    x.LFG(gr.K0),
                    x.LFG(pe),
                    x.LFG(Tt),
                    x.LFG(x.z2F),
                  );
                }),
                (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
                B
              );
            })(),
          },
          {
            provide: x.FYo,
            useFactory: function wo(B, h, p) {
              return new si(B, h, p);
            },
            deps: [s.se, Ar, x.R0b],
          },
        ],
        Sr = [
          { provide: pe, useFactory: () => new _n() },
          { provide: x.QbO, useValue: 'BrowserAnimations' },
          ...lr,
        ],
        io = [
          { provide: pe, useClass: ge },
          { provide: x.QbO, useValue: 'NoopAnimations' },
          ...lr,
        ];
      let ls = (() => {
        class B {
          static withConfig(p) {
            return { ngModule: B, providers: p.disableAnimations ? io : Sr };
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ providers: Sr, imports: [s.b2] })),
          B
        );
      })();
      var ji = D(8776),
        Ir = D(1831),
        _r = D(568),
        cr = D(147),
        bi = D(9549);
      const Yi = [
        {
          path: 'auth',
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 568))
              .then(B => B.AuthModule),
        },
        {
          path: 'calendar',
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 147))
              .then(B => B.CalendarModule),
        },
        { path: '', redirectTo: '/calendar', pathMatch: 'full' },
      ];
      let cs = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ imports: [L.Bz.forRoot(Yi), L.Bz] })),
          B
        );
      })();
      var ds = D(262),
        po = D(1622);
      let oo = (() => {
        class B {
          constructor(p, S) {
            (this.router = p), (this.tokenService = S);
          }
          intercept(p, S) {
            return S.handle(
              p.clone({
                headers: p.headers.set(
                  'x-access-token',
                  this.tokenService.getToken() || '',
                ),
              }),
            ).pipe(
              (0, ds.K)(q => {
                throw (
                  (401 === q.status && this.router.navigate(['/auth/signin']),
                  q)
                );
              }),
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(L.F0), x.LFG(po.B));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac, providedIn: 'root' })),
          B
        );
      })();
      var mo = D(529);
      let No = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B, bootstrap: [ne] })),
          (B.ɵinj = x.cJS({
            providers: [
              po.B,
              { provide: bi.o2, useValue: { appearance: 'outline' } },
              { provide: mo.TP, useClass: oo, multi: !0 },
            ],
            imports: [
              s.b2,
              ls,
              ji.sQ.forRoot([]),
              Ir.Aw.forRoot({}, {}),
              _r.AuthModule,
              cr.CalendarModule,
              cs,
            ],
          })),
          B
        );
      })();
      s.q6()
        .bootstrapModule(No)
        .catch(B => console.error(B));
    },
    1135: (Pt, Re, D) => {
      D.d(Re, { X: () => x });
      var s = D(7579);
      class x extends s.x {
        constructor(ne) {
          super(), (this._value = ne);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(ne) {
          const te = super._subscribe(ne);
          return !te.closed && ne.next(this._value), te;
        }
        getValue() {
          const { hasError: ne, thrownError: te, _value: de } = this;
          if (ne) throw te;
          return this._throwIfClosed(), de;
        }
        next(ne) {
          super.next((this._value = ne));
        }
      }
    },
    9751: (Pt, Re, D) => {
      D.d(Re, { y: () => ue });
      var s = D(930),
        x = D(727),
        L = D(8822),
        ne = D(9635),
        te = D(2416),
        de = D(576),
        ve = D(2806);
      let ue = (() => {
        class re {
          constructor(He) {
            He && (this._subscribe = He);
          }
          lift(He) {
            const ct = new re();
            return (ct.source = this), (ct.operator = He), ct;
          }
          subscribe(He, ct, vt) {
            const Be = (function fe(re) {
              return (
                (re && re instanceof s.Lv) ||
                ((function le(re) {
                  return (
                    re &&
                    (0, de.m)(re.next) &&
                    (0, de.m)(re.error) &&
                    (0, de.m)(re.complete)
                  );
                })(re) &&
                  (0, x.Nn)(re))
              );
            })(He)
              ? He
              : new s.Hp(He, ct, vt);
            return (
              (0, ve.x)(() => {
                const { operator: _t, source: lt } = this;
                Be.add(
                  _t
                    ? _t.call(Be, lt)
                    : lt
                    ? this._subscribe(Be)
                    : this._trySubscribe(Be),
                );
              }),
              Be
            );
          }
          _trySubscribe(He) {
            try {
              return this._subscribe(He);
            } catch (ct) {
              He.error(ct);
            }
          }
          forEach(He, ct) {
            return new (ct = ce(ct))((vt, Be) => {
              const _t = new s.Hp({
                next: lt => {
                  try {
                    He(lt);
                  } catch (bt) {
                    Be(bt), _t.unsubscribe();
                  }
                },
                error: Be,
                complete: vt,
              });
              this.subscribe(_t);
            });
          }
          _subscribe(He) {
            var ct;
            return null === (ct = this.source) || void 0 === ct
              ? void 0
              : ct.subscribe(He);
          }
          [L.L]() {
            return this;
          }
          pipe(...He) {
            return (0, ne.U)(He)(this);
          }
          toPromise(He) {
            return new (He = ce(He))((ct, vt) => {
              let Be;
              this.subscribe(
                _t => (Be = _t),
                _t => vt(_t),
                () => ct(Be),
              );
            });
          }
        }
        return (re.create = Ne => new re(Ne)), re;
      })();
      function ce(re) {
        var Ne;
        return null !== (Ne = re ?? te.v.Promise) && void 0 !== Ne
          ? Ne
          : Promise;
      }
    },
    7579: (Pt, Re, D) => {
      D.d(Re, { x: () => ve });
      var s = D(9751),
        x = D(727);
      const ne = (0, D(3888).d)(
        ce =>
          function () {
            ce(this),
              (this.name = 'ObjectUnsubscribedError'),
              (this.message = 'object unsubscribed');
          },
      );
      var te = D(8737),
        de = D(2806);
      let ve = (() => {
        class ce extends s.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(fe) {
            const re = new ue(this, this);
            return (re.operator = fe), re;
          }
          _throwIfClosed() {
            if (this.closed) throw new ne();
          }
          next(fe) {
            (0, de.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const re of this.currentObservers) re.next(fe);
              }
            });
          }
          error(fe) {
            (0, de.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = fe);
                const { observers: re } = this;
                for (; re.length; ) re.shift().error(fe);
              }
            });
          }
          complete() {
            (0, de.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: fe } = this;
                for (; fe.length; ) fe.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var fe;
            return (
              (null === (fe = this.observers) || void 0 === fe
                ? void 0
                : fe.length) > 0
            );
          }
          _trySubscribe(fe) {
            return this._throwIfClosed(), super._trySubscribe(fe);
          }
          _subscribe(fe) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(fe),
              this._innerSubscribe(fe)
            );
          }
          _innerSubscribe(fe) {
            const { hasError: re, isStopped: Ne, observers: He } = this;
            return re || Ne
              ? x.Lc
              : ((this.currentObservers = null),
                He.push(fe),
                new x.w0(() => {
                  (this.currentObservers = null), (0, te.P)(He, fe);
                }));
          }
          _checkFinalizedStatuses(fe) {
            const { hasError: re, thrownError: Ne, isStopped: He } = this;
            re ? fe.error(Ne) : He && fe.complete();
          }
          asObservable() {
            const fe = new s.y();
            return (fe.source = this), fe;
          }
        }
        return (ce.create = (le, fe) => new ue(le, fe)), ce;
      })();
      class ue extends ve {
        constructor(le, fe) {
          super(), (this.destination = le), (this.source = fe);
        }
        next(le) {
          var fe, re;
          null ===
            (re =
              null === (fe = this.destination) || void 0 === fe
                ? void 0
                : fe.next) ||
            void 0 === re ||
            re.call(fe, le);
        }
        error(le) {
          var fe, re;
          null ===
            (re =
              null === (fe = this.destination) || void 0 === fe
                ? void 0
                : fe.error) ||
            void 0 === re ||
            re.call(fe, le);
        }
        complete() {
          var le, fe;
          null ===
            (fe =
              null === (le = this.destination) || void 0 === le
                ? void 0
                : le.complete) ||
            void 0 === fe ||
            fe.call(le);
        }
        _subscribe(le) {
          var fe, re;
          return null !==
            (re =
              null === (fe = this.source) || void 0 === fe
                ? void 0
                : fe.subscribe(le)) && void 0 !== re
            ? re
            : x.Lc;
        }
      }
    },
    930: (Pt, Re, D) => {
      D.d(Re, { Hp: () => vt, Lv: () => re });
      var s = D(576),
        x = D(727),
        L = D(2416),
        ne = D(7849),
        te = D(5032);
      const de = ce('C', void 0, void 0);
      function ce(W, se, ie) {
        return { kind: W, value: se, error: ie };
      }
      var le = D(3410),
        fe = D(2806);
      class re extends x.w0 {
        constructor(se) {
          super(),
            (this.isStopped = !1),
            se
              ? ((this.destination = se), (0, x.Nn)(se) && se.add(this))
              : (this.destination = bt);
        }
        static create(se, ie, X) {
          return new vt(se, ie, X);
        }
        next(se) {
          this.isStopped
            ? lt(
                (function ue(W) {
                  return ce('N', W, void 0);
                })(se),
                this,
              )
            : this._next(se);
        }
        error(se) {
          this.isStopped
            ? lt(
                (function ve(W) {
                  return ce('E', void 0, W);
                })(se),
                this,
              )
            : ((this.isStopped = !0), this._error(se));
        }
        complete() {
          this.isStopped
            ? lt(de, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(se) {
          this.destination.next(se);
        }
        _error(se) {
          try {
            this.destination.error(se);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const Ne = Function.prototype.bind;
      function He(W, se) {
        return Ne.call(W, se);
      }
      class ct {
        constructor(se) {
          this.partialObserver = se;
        }
        next(se) {
          const { partialObserver: ie } = this;
          if (ie.next)
            try {
              ie.next(se);
            } catch (X) {
              Be(X);
            }
        }
        error(se) {
          const { partialObserver: ie } = this;
          if (ie.error)
            try {
              ie.error(se);
            } catch (X) {
              Be(X);
            }
          else Be(se);
        }
        complete() {
          const { partialObserver: se } = this;
          if (se.complete)
            try {
              se.complete();
            } catch (ie) {
              Be(ie);
            }
        }
      }
      class vt extends re {
        constructor(se, ie, X) {
          let Ae;
          if ((super(), (0, s.m)(se) || !se))
            Ae = {
              next: se ?? void 0,
              error: ie ?? void 0,
              complete: X ?? void 0,
            };
          else {
            let Qe;
            this && L.v.useDeprecatedNextContext
              ? ((Qe = Object.create(se)),
                (Qe.unsubscribe = () => this.unsubscribe()),
                (Ae = {
                  next: se.next && He(se.next, Qe),
                  error: se.error && He(se.error, Qe),
                  complete: se.complete && He(se.complete, Qe),
                }))
              : (Ae = se);
          }
          this.destination = new ct(Ae);
        }
      }
      function Be(W) {
        L.v.useDeprecatedSynchronousErrorHandling ? (0, fe.O)(W) : (0, ne.h)(W);
      }
      function lt(W, se) {
        const { onStoppedNotification: ie } = L.v;
        ie && le.z.setTimeout(() => ie(W, se));
      }
      const bt = {
        closed: !0,
        next: te.Z,
        error: function _t(W) {
          throw W;
        },
        complete: te.Z,
      };
    },
    727: (Pt, Re, D) => {
      D.d(Re, { Lc: () => de, w0: () => te, Nn: () => ve });
      var s = D(576);
      const L = (0, D(3888).d)(
        ce =>
          function (fe) {
            ce(this),
              (this.message = fe
                ? `${fe.length} errors occurred during unsubscription:\n${fe
                    .map((re, Ne) => `${Ne + 1}) ${re.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = fe);
          },
      );
      var ne = D(8737);
      class te {
        constructor(le) {
          (this.initialTeardown = le),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let le;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: fe } = this;
            if (fe)
              if (((this._parentage = null), Array.isArray(fe)))
                for (const He of fe) He.remove(this);
              else fe.remove(this);
            const { initialTeardown: re } = this;
            if ((0, s.m)(re))
              try {
                re();
              } catch (He) {
                le = He instanceof L ? He.errors : [He];
              }
            const { _finalizers: Ne } = this;
            if (Ne) {
              this._finalizers = null;
              for (const He of Ne)
                try {
                  ue(He);
                } catch (ct) {
                  (le = le ?? []),
                    ct instanceof L
                      ? (le = [...le, ...ct.errors])
                      : le.push(ct);
                }
            }
            if (le) throw new L(le);
          }
        }
        add(le) {
          var fe;
          if (le && le !== this)
            if (this.closed) ue(le);
            else {
              if (le instanceof te) {
                if (le.closed || le._hasParent(this)) return;
                le._addParent(this);
              }
              (this._finalizers =
                null !== (fe = this._finalizers) && void 0 !== fe
                  ? fe
                  : []).push(le);
            }
        }
        _hasParent(le) {
          const { _parentage: fe } = this;
          return fe === le || (Array.isArray(fe) && fe.includes(le));
        }
        _addParent(le) {
          const { _parentage: fe } = this;
          this._parentage = Array.isArray(fe)
            ? (fe.push(le), fe)
            : fe
            ? [fe, le]
            : le;
        }
        _removeParent(le) {
          const { _parentage: fe } = this;
          fe === le
            ? (this._parentage = null)
            : Array.isArray(fe) && (0, ne.P)(fe, le);
        }
        remove(le) {
          const { _finalizers: fe } = this;
          fe && (0, ne.P)(fe, le), le instanceof te && le._removeParent(this);
        }
      }
      te.EMPTY = (() => {
        const ce = new te();
        return (ce.closed = !0), ce;
      })();
      const de = te.EMPTY;
      function ve(ce) {
        return (
          ce instanceof te ||
          (ce &&
            'closed' in ce &&
            (0, s.m)(ce.remove) &&
            (0, s.m)(ce.add) &&
            (0, s.m)(ce.unsubscribe))
        );
      }
      function ue(ce) {
        (0, s.m)(ce) ? ce() : ce.unsubscribe();
      }
    },
    2416: (Pt, Re, D) => {
      D.d(Re, { v: () => s });
      const s = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    9841: (Pt, Re, D) => {
      D.d(Re, { a: () => le });
      var s = D(9751),
        x = D(4742),
        L = D(457),
        ne = D(4671),
        te = D(3268),
        de = D(3269),
        ve = D(1810),
        ue = D(5403),
        ce = D(9672);
      function le(...Ne) {
        const He = (0, de.yG)(Ne),
          ct = (0, de.jO)(Ne),
          { args: vt, keys: Be } = (0, x.D)(Ne);
        if (0 === vt.length) return (0, L.D)([], He);
        const _t = new s.y(
          (function fe(Ne, He, ct = ne.y) {
            return vt => {
              re(
                He,
                () => {
                  const { length: Be } = Ne,
                    _t = new Array(Be);
                  let lt = Be,
                    bt = Be;
                  for (let W = 0; W < Be; W++)
                    re(
                      He,
                      () => {
                        const se = (0, L.D)(Ne[W], He);
                        let ie = !1;
                        se.subscribe(
                          (0, ue.x)(
                            vt,
                            X => {
                              (_t[W] = X),
                                ie || ((ie = !0), bt--),
                                bt || vt.next(ct(_t.slice()));
                            },
                            () => {
                              --lt || vt.complete();
                            },
                          ),
                        );
                      },
                      vt,
                    );
                },
                vt,
              );
            };
          })(vt, He, Be ? lt => (0, ve.n)(Be, lt) : ne.y),
        );
        return ct ? _t.pipe((0, te.Z)(ct)) : _t;
      }
      function re(Ne, He, ct) {
        Ne ? (0, ce.f)(ct, Ne, He) : He();
      }
    },
    7272: (Pt, Re, D) => {
      D.d(Re, { z: () => te });
      var s = D(8189),
        L = D(3269),
        ne = D(457);
      function te(...de) {
        return (function x() {
          return (0, s.J)(1);
        })()((0, ne.D)(de, (0, L.yG)(de)));
      }
    },
    9770: (Pt, Re, D) => {
      D.d(Re, { P: () => L });
      var s = D(9751),
        x = D(8421);
      function L(ne) {
        return new s.y(te => {
          (0, x.Xf)(ne()).subscribe(te);
        });
      }
    },
    515: (Pt, Re, D) => {
      D.d(Re, { E: () => x });
      const x = new (D(9751).y)(te => te.complete());
    },
    4128: (Pt, Re, D) => {
      D.d(Re, { D: () => ue });
      var s = D(9751),
        x = D(4742),
        L = D(8421),
        ne = D(3269),
        te = D(5403),
        de = D(3268),
        ve = D(1810);
      function ue(...ce) {
        const le = (0, ne.jO)(ce),
          { args: fe, keys: re } = (0, x.D)(ce),
          Ne = new s.y(He => {
            const { length: ct } = fe;
            if (!ct) return void He.complete();
            const vt = new Array(ct);
            let Be = ct,
              _t = ct;
            for (let lt = 0; lt < ct; lt++) {
              let bt = !1;
              (0, L.Xf)(fe[lt]).subscribe(
                (0, te.x)(
                  He,
                  W => {
                    bt || ((bt = !0), _t--), (vt[lt] = W);
                  },
                  () => Be--,
                  void 0,
                  () => {
                    (!Be || !bt) &&
                      (_t || He.next(re ? (0, ve.n)(re, vt) : vt),
                      He.complete());
                  },
                ),
              );
            }
          });
        return le ? Ne.pipe((0, de.Z)(le)) : Ne;
      }
    },
    457: (Pt, Re, D) => {
      D.d(Re, { D: () => ie });
      var s = D(8421),
        x = D(5363),
        L = D(4482);
      function ne(X, Ae = 0) {
        return (0, L.e)((Qe, ut) => {
          ut.add(X.schedule(() => Qe.subscribe(ut), Ae));
        });
      }
      var ve = D(9751),
        ce = D(2202),
        le = D(576),
        fe = D(9672);
      function Ne(X, Ae) {
        if (!X) throw new Error('Iterable cannot be null');
        return new ve.y(Qe => {
          (0, fe.f)(Qe, Ae, () => {
            const ut = X[Symbol.asyncIterator]();
            (0, fe.f)(
              Qe,
              Ae,
              () => {
                ut.next().then(Ut => {
                  Ut.done ? Qe.complete() : Qe.next(Ut.value);
                });
              },
              0,
              !0,
            );
          });
        });
      }
      var He = D(3670),
        ct = D(8239),
        vt = D(1144),
        Be = D(6495),
        _t = D(2206),
        lt = D(4532),
        bt = D(3260);
      function ie(X, Ae) {
        return Ae
          ? (function se(X, Ae) {
              if (null != X) {
                if ((0, He.c)(X))
                  return (function te(X, Ae) {
                    return (0, s.Xf)(X).pipe(ne(Ae), (0, x.Q)(Ae));
                  })(X, Ae);
                if ((0, vt.z)(X))
                  return (function ue(X, Ae) {
                    return new ve.y(Qe => {
                      let ut = 0;
                      return Ae.schedule(function () {
                        ut === X.length
                          ? Qe.complete()
                          : (Qe.next(X[ut++]), Qe.closed || this.schedule());
                      });
                    });
                  })(X, Ae);
                if ((0, ct.t)(X))
                  return (function de(X, Ae) {
                    return (0, s.Xf)(X).pipe(ne(Ae), (0, x.Q)(Ae));
                  })(X, Ae);
                if ((0, _t.D)(X)) return Ne(X, Ae);
                if ((0, Be.T)(X))
                  return (function re(X, Ae) {
                    return new ve.y(Qe => {
                      let ut;
                      return (
                        (0, fe.f)(Qe, Ae, () => {
                          (ut = X[ce.h]()),
                            (0, fe.f)(
                              Qe,
                              Ae,
                              () => {
                                let Ut, Et;
                                try {
                                  ({ value: Ut, done: Et } = ut.next());
                                } catch (Yt) {
                                  return void Qe.error(Yt);
                                }
                                Et ? Qe.complete() : Qe.next(Ut);
                              },
                              0,
                              !0,
                            );
                        }),
                        () => (0, le.m)(ut?.return) && ut.return()
                      );
                    });
                  })(X, Ae);
                if ((0, bt.L)(X))
                  return (function W(X, Ae) {
                    return Ne((0, bt.Q)(X), Ae);
                  })(X, Ae);
              }
              throw (0, lt.z)(X);
            })(X, Ae)
          : (0, s.Xf)(X);
      }
    },
    8421: (Pt, Re, D) => {
      D.d(Re, { Xf: () => Ne });
      var s = D(655),
        x = D(1144),
        L = D(8239),
        ne = D(9751),
        te = D(3670),
        de = D(2206),
        ve = D(4532),
        ue = D(6495),
        ce = D(3260),
        le = D(576),
        fe = D(7849),
        re = D(8822);
      function Ne(W) {
        if (W instanceof ne.y) return W;
        if (null != W) {
          if ((0, te.c)(W))
            return (function He(W) {
              return new ne.y(se => {
                const ie = W[re.L]();
                if ((0, le.m)(ie.subscribe)) return ie.subscribe(se);
                throw new TypeError(
                  'Provided object does not correctly implement Symbol.observable',
                );
              });
            })(W);
          if ((0, x.z)(W))
            return (function ct(W) {
              return new ne.y(se => {
                for (let ie = 0; ie < W.length && !se.closed; ie++)
                  se.next(W[ie]);
                se.complete();
              });
            })(W);
          if ((0, L.t)(W))
            return (function vt(W) {
              return new ne.y(se => {
                W.then(
                  ie => {
                    se.closed || (se.next(ie), se.complete());
                  },
                  ie => se.error(ie),
                ).then(null, fe.h);
              });
            })(W);
          if ((0, de.D)(W)) return _t(W);
          if ((0, ue.T)(W))
            return (function Be(W) {
              return new ne.y(se => {
                for (const ie of W) if ((se.next(ie), se.closed)) return;
                se.complete();
              });
            })(W);
          if ((0, ce.L)(W))
            return (function lt(W) {
              return _t((0, ce.Q)(W));
            })(W);
        }
        throw (0, ve.z)(W);
      }
      function _t(W) {
        return new ne.y(se => {
          (function bt(W, se) {
            var ie, X, Ae, Qe;
            return (0, s.mG)(this, void 0, void 0, function* () {
              try {
                for (ie = (0, s.KL)(W); !(X = yield ie.next()).done; )
                  if ((se.next(X.value), se.closed)) return;
              } catch (ut) {
                Ae = { error: ut };
              } finally {
                try {
                  X && !X.done && (Qe = ie.return) && (yield Qe.call(ie));
                } finally {
                  if (Ae) throw Ae.error;
                }
              }
              se.complete();
            });
          })(W, se).catch(ie => se.error(ie));
        });
      }
    },
    6451: (Pt, Re, D) => {
      D.d(Re, { T: () => de });
      var s = D(8189),
        x = D(8421),
        L = D(515),
        ne = D(3269),
        te = D(457);
      function de(...ve) {
        const ue = (0, ne.yG)(ve),
          ce = (0, ne._6)(ve, 1 / 0),
          le = ve;
        return le.length
          ? 1 === le.length
            ? (0, x.Xf)(le[0])
            : (0, s.J)(ce)((0, te.D)(le, ue))
          : L.E;
      }
    },
    9646: (Pt, Re, D) => {
      D.d(Re, { of: () => L });
      var s = D(3269),
        x = D(457);
      function L(...ne) {
        const te = (0, s.yG)(ne);
        return (0, x.D)(ne, te);
      }
    },
    2843: (Pt, Re, D) => {
      D.d(Re, { _: () => L });
      var s = D(9751),
        x = D(576);
      function L(ne, te) {
        const de = (0, x.m)(ne) ? ne : () => ne,
          ve = ue => ue.error(de());
        return new s.y(te ? ue => te.schedule(ve, 0, ue) : ve);
      }
    },
    5963: (Pt, Re, D) => {
      D.d(Re, { H: () => te });
      var s = D(9751),
        x = D(4986),
        L = D(3532);
      function te(de = 0, ve, ue = x.P) {
        let ce = -1;
        return (
          null != ve && ((0, L.K)(ve) ? (ue = ve) : (ce = ve)),
          new s.y(le => {
            let fe = (function ne(de) {
              return de instanceof Date && !isNaN(de);
            })(de)
              ? +de - ue.now()
              : de;
            fe < 0 && (fe = 0);
            let re = 0;
            return ue.schedule(function () {
              le.closed ||
                (le.next(re++),
                0 <= ce ? this.schedule(void 0, ce) : le.complete());
            }, fe);
          })
        );
      }
    },
    5403: (Pt, Re, D) => {
      D.d(Re, { Q: () => L, x: () => x });
      var s = D(930);
      function x(ne, te, de, ve, ue) {
        return new L(ne, te, de, ve, ue);
      }
      class L extends s.Lv {
        constructor(te, de, ve, ue, ce, le) {
          super(te),
            (this.onFinalize = ce),
            (this.shouldUnsubscribe = le),
            (this._next = de
              ? function (fe) {
                  try {
                    de(fe);
                  } catch (re) {
                    te.error(re);
                  }
                }
              : super._next),
            (this._error = ue
              ? function (fe) {
                  try {
                    ue(fe);
                  } catch (re) {
                    te.error(re);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = ve
              ? function () {
                  try {
                    ve();
                  } catch (fe) {
                    te.error(fe);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var te;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: de } = this;
            super.unsubscribe(),
              !de &&
                (null === (te = this.onFinalize) ||
                  void 0 === te ||
                  te.call(this));
          }
        }
      }
    },
    262: (Pt, Re, D) => {
      D.d(Re, { K: () => ne });
      var s = D(8421),
        x = D(5403),
        L = D(4482);
      function ne(te) {
        return (0, L.e)((de, ve) => {
          let le,
            ue = null,
            ce = !1;
          (ue = de.subscribe(
            (0, x.x)(ve, void 0, void 0, fe => {
              (le = (0, s.Xf)(te(fe, ne(te)(de)))),
                ue
                  ? (ue.unsubscribe(), (ue = null), le.subscribe(ve))
                  : (ce = !0);
            }),
          )),
            ce && (ue.unsubscribe(), (ue = null), le.subscribe(ve));
        });
      }
    },
    4351: (Pt, Re, D) => {
      D.d(Re, { b: () => L });
      var s = D(5577),
        x = D(576);
      function L(ne, te) {
        return (0, x.m)(te) ? (0, s.z)(ne, te, 1) : (0, s.z)(ne, 1);
      }
    },
    8372: (Pt, Re, D) => {
      D.d(Re, { b: () => ne });
      var s = D(4986),
        x = D(4482),
        L = D(5403);
      function ne(te, de = s.z) {
        return (0, x.e)((ve, ue) => {
          let ce = null,
            le = null,
            fe = null;
          const re = () => {
            if (ce) {
              ce.unsubscribe(), (ce = null);
              const He = le;
              (le = null), ue.next(He);
            }
          };
          function Ne() {
            const He = fe + te,
              ct = de.now();
            if (ct < He)
              return (ce = this.schedule(void 0, He - ct)), void ue.add(ce);
            re();
          }
          ve.subscribe(
            (0, L.x)(
              ue,
              He => {
                (le = He),
                  (fe = de.now()),
                  ce || ((ce = de.schedule(Ne, te)), ue.add(ce));
              },
              () => {
                re(), ue.complete();
              },
              void 0,
              () => {
                le = ce = null;
              },
            ),
          );
        });
      }
    },
    1884: (Pt, Re, D) => {
      D.d(Re, { x: () => ne });
      var s = D(4671),
        x = D(4482),
        L = D(5403);
      function ne(de, ve = s.y) {
        return (
          (de = de ?? te),
          (0, x.e)((ue, ce) => {
            let le,
              fe = !0;
            ue.subscribe(
              (0, L.x)(ce, re => {
                const Ne = ve(re);
                (fe || !de(le, Ne)) && ((fe = !1), (le = Ne), ce.next(re));
              }),
            );
          })
        );
      }
      function te(de, ve) {
        return de === ve;
      }
    },
    6129: (Pt, Re, D) => {
      D.d(Re, { z: () => te });
      var s = D(4004),
        x = D(8421),
        L = D(4482),
        ne = D(5403);
      function te(de, ve) {
        return ve
          ? ue =>
              ue.pipe(
                te((ce, le) =>
                  (0, x.Xf)(de(ce, le)).pipe(
                    (0, s.U)((fe, re) => ve(ce, fe, le, re)),
                  ),
                ),
              )
          : (0, L.e)((ue, ce) => {
              let le = 0,
                fe = null,
                re = !1;
              ue.subscribe(
                (0, ne.x)(
                  ce,
                  Ne => {
                    fe ||
                      ((fe = (0, ne.x)(ce, void 0, () => {
                        (fe = null), re && ce.complete();
                      })),
                      (0, x.Xf)(de(Ne, le++)).subscribe(fe));
                  },
                  () => {
                    (re = !0), !fe && ce.complete();
                  },
                ),
              );
            });
      }
    },
    9300: (Pt, Re, D) => {
      D.d(Re, { h: () => L });
      var s = D(4482),
        x = D(5403);
      function L(ne, te) {
        return (0, s.e)((de, ve) => {
          let ue = 0;
          de.subscribe(
            (0, x.x)(ve, ce => ne.call(te, ce, ue++) && ve.next(ce)),
          );
        });
      }
    },
    8746: (Pt, Re, D) => {
      D.d(Re, { x: () => x });
      var s = D(4482);
      function x(L) {
        return (0, s.e)((ne, te) => {
          try {
            ne.subscribe(te);
          } finally {
            te.add(L);
          }
        });
      }
    },
    8502: (Pt, Re, D) => {
      D.d(Re, { l: () => ne });
      var s = D(4482),
        x = D(5403),
        L = D(5032);
      function ne() {
        return (0, s.e)((te, de) => {
          te.subscribe((0, x.x)(de, L.Z));
        });
      }
    },
    4004: (Pt, Re, D) => {
      D.d(Re, { U: () => L });
      var s = D(4482),
        x = D(5403);
      function L(ne, te) {
        return (0, s.e)((de, ve) => {
          let ue = 0;
          de.subscribe(
            (0, x.x)(ve, ce => {
              ve.next(ne.call(te, ce, ue++));
            }),
          );
        });
      }
    },
    9718: (Pt, Re, D) => {
      D.d(Re, { h: () => x });
      var s = D(4004);
      function x(L) {
        return (0, s.U)(() => L);
      }
    },
    8189: (Pt, Re, D) => {
      D.d(Re, { J: () => L });
      var s = D(5577),
        x = D(4671);
      function L(ne = 1 / 0) {
        return (0, s.z)(x.y, ne);
      }
    },
    5577: (Pt, Re, D) => {
      D.d(Re, { z: () => ue });
      var s = D(4004),
        x = D(8421),
        L = D(4482),
        ne = D(9672),
        te = D(5403),
        ve = D(576);
      function ue(ce, le, fe = 1 / 0) {
        return (0, ve.m)(le)
          ? ue(
              (re, Ne) =>
                (0, s.U)((He, ct) => le(re, He, Ne, ct))((0, x.Xf)(ce(re, Ne))),
              fe,
            )
          : ('number' == typeof le && (fe = le),
            (0, L.e)((re, Ne) =>
              (function de(ce, le, fe, re, Ne, He, ct, vt) {
                const Be = [];
                let _t = 0,
                  lt = 0,
                  bt = !1;
                const W = () => {
                    bt && !Be.length && !_t && le.complete();
                  },
                  se = X => (_t < re ? ie(X) : Be.push(X)),
                  ie = X => {
                    He && le.next(X), _t++;
                    let Ae = !1;
                    (0, x.Xf)(fe(X, lt++)).subscribe(
                      (0, te.x)(
                        le,
                        Qe => {
                          Ne?.(Qe), He ? se(Qe) : le.next(Qe);
                        },
                        () => {
                          Ae = !0;
                        },
                        void 0,
                        () => {
                          if (Ae)
                            try {
                              for (_t--; Be.length && _t < re; ) {
                                const Qe = Be.shift();
                                ct ? (0, ne.f)(le, ct, () => ie(Qe)) : ie(Qe);
                              }
                              W();
                            } catch (Qe) {
                              le.error(Qe);
                            }
                        },
                      ),
                    );
                  };
                return (
                  ce.subscribe(
                    (0, te.x)(le, se, () => {
                      (bt = !0), W();
                    }),
                  ),
                  () => {
                    vt?.();
                  }
                );
              })(re, Ne, ce, fe),
            ));
      }
    },
    5363: (Pt, Re, D) => {
      D.d(Re, { Q: () => ne });
      var s = D(9672),
        x = D(4482),
        L = D(5403);
      function ne(te, de = 0) {
        return (0, x.e)((ve, ue) => {
          ve.subscribe(
            (0, L.x)(
              ue,
              ce => (0, s.f)(ue, te, () => ue.next(ce), de),
              () => (0, s.f)(ue, te, () => ue.complete(), de),
              ce => (0, s.f)(ue, te, () => ue.error(ce), de),
            ),
          );
        });
      }
    },
    5026: (Pt, Re, D) => {
      D.d(Re, { R: () => ne });
      var s = D(4482),
        x = D(5403);
      function ne(te, de) {
        return (0, s.e)(
          (function L(te, de, ve, ue, ce) {
            return (le, fe) => {
              let re = ve,
                Ne = de,
                He = 0;
              le.subscribe(
                (0, x.x)(
                  fe,
                  ct => {
                    const vt = He++;
                    (Ne = re ? te(Ne, ct, vt) : ((re = !0), ct)),
                      ue && fe.next(Ne);
                  },
                  ce &&
                    (() => {
                      re && fe.next(Ne), fe.complete();
                    }),
                ),
              );
            };
          })(te, de, arguments.length >= 2, !0),
        );
      }
    },
    3099: (Pt, Re, D) => {
      D.d(Re, { B: () => te });
      var s = D(8421),
        x = D(7579),
        L = D(930),
        ne = D(4482);
      function te(ve = {}) {
        const {
          connector: ue = () => new x.x(),
          resetOnError: ce = !0,
          resetOnComplete: le = !0,
          resetOnRefCountZero: fe = !0,
        } = ve;
        return re => {
          let Ne,
            He,
            ct,
            vt = 0,
            Be = !1,
            _t = !1;
          const lt = () => {
              He?.unsubscribe(), (He = void 0);
            },
            bt = () => {
              lt(), (Ne = ct = void 0), (Be = _t = !1);
            },
            W = () => {
              const se = Ne;
              bt(), se?.unsubscribe();
            };
          return (0, ne.e)((se, ie) => {
            vt++, !_t && !Be && lt();
            const X = (ct = ct ?? ue());
            ie.add(() => {
              vt--, 0 === vt && !_t && !Be && (He = de(W, fe));
            }),
              X.subscribe(ie),
              !Ne &&
                vt > 0 &&
                ((Ne = new L.Hp({
                  next: Ae => X.next(Ae),
                  error: Ae => {
                    (_t = !0), lt(), (He = de(bt, ce, Ae)), X.error(Ae);
                  },
                  complete: () => {
                    (Be = !0), lt(), (He = de(bt, le)), X.complete();
                  },
                })),
                (0, s.Xf)(se).subscribe(Ne));
          })(re);
        };
      }
      function de(ve, ue, ...ce) {
        if (!0 === ue) return void ve();
        if (!1 === ue) return;
        const le = new L.Hp({
          next: () => {
            le.unsubscribe(), ve();
          },
        });
        return (0, s.Xf)(ue(...ce)).subscribe(le);
      }
    },
    5684: (Pt, Re, D) => {
      D.d(Re, { T: () => x });
      var s = D(9300);
      function x(L) {
        return (0, s.h)((ne, te) => L <= te);
      }
    },
    8675: (Pt, Re, D) => {
      D.d(Re, { O: () => ne });
      var s = D(7272),
        x = D(3269),
        L = D(4482);
      function ne(...te) {
        const de = (0, x.yG)(te);
        return (0, L.e)((ve, ue) => {
          (de ? (0, s.z)(te, ve, de) : (0, s.z)(te, ve)).subscribe(ue);
        });
      }
    },
    3900: (Pt, Re, D) => {
      D.d(Re, { w: () => ne });
      var s = D(8421),
        x = D(4482),
        L = D(5403);
      function ne(te, de) {
        return (0, x.e)((ve, ue) => {
          let ce = null,
            le = 0,
            fe = !1;
          const re = () => fe && !ce && ue.complete();
          ve.subscribe(
            (0, L.x)(
              ue,
              Ne => {
                ce?.unsubscribe();
                let He = 0;
                const ct = le++;
                (0, s.Xf)(te(Ne, ct)).subscribe(
                  (ce = (0, L.x)(
                    ue,
                    vt => ue.next(de ? de(Ne, vt, ct, He++) : vt),
                    () => {
                      (ce = null), re();
                    },
                  )),
                );
              },
              () => {
                (fe = !0), re();
              },
            ),
          );
        });
      }
    },
    5698: (Pt, Re, D) => {
      D.d(Re, { q: () => ne });
      var s = D(515),
        x = D(4482),
        L = D(5403);
      function ne(te) {
        return te <= 0
          ? () => s.E
          : (0, x.e)((de, ve) => {
              let ue = 0;
              de.subscribe(
                (0, L.x)(ve, ce => {
                  ++ue <= te && (ve.next(ce), te <= ue && ve.complete());
                }),
              );
            });
      }
    },
    2722: (Pt, Re, D) => {
      D.d(Re, { R: () => te });
      var s = D(4482),
        x = D(5403),
        L = D(8421),
        ne = D(5032);
      function te(de) {
        return (0, s.e)((ve, ue) => {
          (0, L.Xf)(de).subscribe((0, x.x)(ue, () => ue.complete(), ne.Z)),
            !ue.closed && ve.subscribe(ue);
        });
      }
    },
    2529: (Pt, Re, D) => {
      D.d(Re, { o: () => L });
      var s = D(4482),
        x = D(5403);
      function L(ne, te = !1) {
        return (0, s.e)((de, ve) => {
          let ue = 0;
          de.subscribe(
            (0, x.x)(ve, ce => {
              const le = ne(ce, ue++);
              (le || te) && ve.next(ce), !le && ve.complete();
            }),
          );
        });
      }
    },
    8505: (Pt, Re, D) => {
      D.d(Re, { b: () => te });
      var s = D(576),
        x = D(4482),
        L = D(5403),
        ne = D(4671);
      function te(de, ve, ue) {
        const ce =
          (0, s.m)(de) || ve || ue ? { next: de, error: ve, complete: ue } : de;
        return ce
          ? (0, x.e)((le, fe) => {
              var re;
              null === (re = ce.subscribe) || void 0 === re || re.call(ce);
              let Ne = !0;
              le.subscribe(
                (0, L.x)(
                  fe,
                  He => {
                    var ct;
                    null === (ct = ce.next) || void 0 === ct || ct.call(ce, He),
                      fe.next(He);
                  },
                  () => {
                    var He;
                    (Ne = !1),
                      null === (He = ce.complete) ||
                        void 0 === He ||
                        He.call(ce),
                      fe.complete();
                  },
                  He => {
                    var ct;
                    (Ne = !1),
                      null === (ct = ce.error) ||
                        void 0 === ct ||
                        ct.call(ce, He),
                      fe.error(He);
                  },
                  () => {
                    var He, ct;
                    Ne &&
                      (null === (He = ce.unsubscribe) ||
                        void 0 === He ||
                        He.call(ce)),
                      null === (ct = ce.finalize) ||
                        void 0 === ct ||
                        ct.call(ce);
                  },
                ),
              );
            })
          : ne.y;
      }
    },
    4408: (Pt, Re, D) => {
      D.d(Re, { o: () => te });
      var s = D(727);
      class x extends s.w0 {
        constructor(ve, ue) {
          super();
        }
        schedule(ve, ue = 0) {
          return this;
        }
      }
      const L = {
        setInterval(de, ve, ...ue) {
          const { delegate: ce } = L;
          return ce?.setInterval
            ? ce.setInterval(de, ve, ...ue)
            : setInterval(de, ve, ...ue);
        },
        clearInterval(de) {
          const { delegate: ve } = L;
          return (ve?.clearInterval || clearInterval)(de);
        },
        delegate: void 0,
      };
      var ne = D(8737);
      class te extends x {
        constructor(ve, ue) {
          super(ve, ue),
            (this.scheduler = ve),
            (this.work = ue),
            (this.pending = !1);
        }
        schedule(ve, ue = 0) {
          var ce;
          if (this.closed) return this;
          this.state = ve;
          const le = this.id,
            fe = this.scheduler;
          return (
            null != le && (this.id = this.recycleAsyncId(fe, le, ue)),
            (this.pending = !0),
            (this.delay = ue),
            (this.id =
              null !== (ce = this.id) && void 0 !== ce
                ? ce
                : this.requestAsyncId(fe, this.id, ue)),
            this
          );
        }
        requestAsyncId(ve, ue, ce = 0) {
          return L.setInterval(ve.flush.bind(ve, this), ce);
        }
        recycleAsyncId(ve, ue, ce = 0) {
          if (null != ce && this.delay === ce && !1 === this.pending) return ue;
          null != ue && L.clearInterval(ue);
        }
        execute(ve, ue) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const ce = this._execute(ve, ue);
          if (ce) return ce;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(ve, ue) {
          let le,
            ce = !1;
          try {
            this.work(ve);
          } catch (fe) {
            (ce = !0),
              (le = fe || new Error('Scheduled action threw falsy error'));
          }
          if (ce) return this.unsubscribe(), le;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: ve, scheduler: ue } = this,
              { actions: ce } = ue;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, ne.P)(ce, this),
              null != ve && (this.id = this.recycleAsyncId(ue, ve, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    640: (Pt, Re, D) => {
      D.d(Re, { v: () => L });
      const s = { now: () => (s.delegate || Date).now(), delegate: void 0 };
      class x {
        constructor(te, de = x.now) {
          (this.schedulerActionCtor = te), (this.now = de);
        }
        schedule(te, de = 0, ve) {
          return new this.schedulerActionCtor(this, te).schedule(ve, de);
        }
      }
      x.now = s.now;
      class L extends x {
        constructor(te, de = x.now) {
          super(te, de), (this.actions = []), (this._active = !1);
        }
        flush(te) {
          const { actions: de } = this;
          if (this._active) return void de.push(te);
          let ve;
          this._active = !0;
          do {
            if ((ve = te.execute(te.state, te.delay))) break;
          } while ((te = de.shift()));
          if (((this._active = !1), ve)) {
            for (; (te = de.shift()); ) te.unsubscribe();
            throw ve;
          }
        }
      }
    },
    3101: (Pt, Re, D) => {
      D.d(Re, { E: () => He });
      var s = D(4408);
      let L,
        x = 1;
      const ne = {};
      function te(vt) {
        return vt in ne && (delete ne[vt], !0);
      }
      const de = {
          setImmediate(vt) {
            const Be = x++;
            return (
              (ne[Be] = !0),
              L || (L = Promise.resolve()),
              L.then(() => te(Be) && vt()),
              Be
            );
          },
          clearImmediate(vt) {
            te(vt);
          },
        },
        { setImmediate: ue, clearImmediate: ce } = de,
        le = {
          setImmediate(...vt) {
            const { delegate: Be } = le;
            return (Be?.setImmediate || ue)(...vt);
          },
          clearImmediate(vt) {
            const { delegate: Be } = le;
            return (Be?.clearImmediate || ce)(vt);
          },
          delegate: void 0,
        };
      var re = D(640);
      const He = new (class Ne extends re.v {
        flush(Be) {
          this._active = !0;
          const _t = this._scheduled;
          this._scheduled = void 0;
          const { actions: lt } = this;
          let bt;
          Be = Be || lt.shift();
          do {
            if ((bt = Be.execute(Be.state, Be.delay))) break;
          } while ((Be = lt[0]) && Be.id === _t && lt.shift());
          if (((this._active = !1), bt)) {
            for (; (Be = lt[0]) && Be.id === _t && lt.shift(); )
              Be.unsubscribe();
            throw bt;
          }
        }
      })(
        class fe extends s.o {
          constructor(Be, _t) {
            super(Be, _t), (this.scheduler = Be), (this.work = _t);
          }
          requestAsyncId(Be, _t, lt = 0) {
            return null !== lt && lt > 0
              ? super.requestAsyncId(Be, _t, lt)
              : (Be.actions.push(this),
                Be._scheduled ||
                  (Be._scheduled = le.setImmediate(Be.flush.bind(Be, void 0))));
          }
          recycleAsyncId(Be, _t, lt = 0) {
            var bt;
            if (null != lt ? lt > 0 : this.delay > 0)
              return super.recycleAsyncId(Be, _t, lt);
            const { actions: W } = Be;
            null != _t &&
              (null === (bt = W[W.length - 1]) || void 0 === bt
                ? void 0
                : bt.id) !== _t &&
              (le.clearImmediate(_t),
              Be._scheduled === _t && (Be._scheduled = void 0));
          }
        },
      );
    },
    4986: (Pt, Re, D) => {
      D.d(Re, { P: () => ne, z: () => L });
      var s = D(4408);
      const L = new (D(640).v)(s.o),
        ne = L;
    },
    3410: (Pt, Re, D) => {
      D.d(Re, { z: () => s });
      const s = {
        setTimeout(x, L, ...ne) {
          const { delegate: te } = s;
          return te?.setTimeout
            ? te.setTimeout(x, L, ...ne)
            : setTimeout(x, L, ...ne);
        },
        clearTimeout(x) {
          const { delegate: L } = s;
          return (L?.clearTimeout || clearTimeout)(x);
        },
        delegate: void 0,
      };
    },
    2202: (Pt, Re, D) => {
      D.d(Re, { h: () => x });
      const x = (function s() {
        return 'function' == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : '@@iterator';
      })();
    },
    8822: (Pt, Re, D) => {
      D.d(Re, { L: () => s });
      const s =
        ('function' == typeof Symbol && Symbol.observable) || '@@observable';
    },
    3269: (Pt, Re, D) => {
      D.d(Re, { _6: () => de, jO: () => ne, yG: () => te });
      var s = D(576),
        x = D(3532);
      function L(ve) {
        return ve[ve.length - 1];
      }
      function ne(ve) {
        return (0, s.m)(L(ve)) ? ve.pop() : void 0;
      }
      function te(ve) {
        return (0, x.K)(L(ve)) ? ve.pop() : void 0;
      }
      function de(ve, ue) {
        return 'number' == typeof L(ve) ? ve.pop() : ue;
      }
    },
    4742: (Pt, Re, D) => {
      D.d(Re, { D: () => te });
      const { isArray: s } = Array,
        { getPrototypeOf: x, prototype: L, keys: ne } = Object;
      function te(ve) {
        if (1 === ve.length) {
          const ue = ve[0];
          if (s(ue)) return { args: ue, keys: null };
          if (
            (function de(ve) {
              return ve && 'object' == typeof ve && x(ve) === L;
            })(ue)
          ) {
            const ce = ne(ue);
            return { args: ce.map(le => ue[le]), keys: ce };
          }
        }
        return { args: ve, keys: null };
      }
    },
    8737: (Pt, Re, D) => {
      function s(x, L) {
        if (x) {
          const ne = x.indexOf(L);
          0 <= ne && x.splice(ne, 1);
        }
      }
      D.d(Re, { P: () => s });
    },
    3888: (Pt, Re, D) => {
      function s(x) {
        const ne = x(te => {
          Error.call(te), (te.stack = new Error().stack);
        });
        return (
          (ne.prototype = Object.create(Error.prototype)),
          (ne.prototype.constructor = ne),
          ne
        );
      }
      D.d(Re, { d: () => s });
    },
    1810: (Pt, Re, D) => {
      function s(x, L) {
        return x.reduce((ne, te, de) => ((ne[te] = L[de]), ne), {});
      }
      D.d(Re, { n: () => s });
    },
    2806: (Pt, Re, D) => {
      D.d(Re, { O: () => ne, x: () => L });
      var s = D(2416);
      let x = null;
      function L(te) {
        if (s.v.useDeprecatedSynchronousErrorHandling) {
          const de = !x;
          if ((de && (x = { errorThrown: !1, error: null }), te(), de)) {
            const { errorThrown: ve, error: ue } = x;
            if (((x = null), ve)) throw ue;
          }
        } else te();
      }
      function ne(te) {
        s.v.useDeprecatedSynchronousErrorHandling &&
          x &&
          ((x.errorThrown = !0), (x.error = te));
      }
    },
    9672: (Pt, Re, D) => {
      function s(x, L, ne, te = 0, de = !1) {
        const ve = L.schedule(function () {
          ne(), de ? x.add(this.schedule(null, te)) : this.unsubscribe();
        }, te);
        if ((x.add(ve), !de)) return ve;
      }
      D.d(Re, { f: () => s });
    },
    4671: (Pt, Re, D) => {
      function s(x) {
        return x;
      }
      D.d(Re, { y: () => s });
    },
    1144: (Pt, Re, D) => {
      D.d(Re, { z: () => s });
      const s = x => x && 'number' == typeof x.length && 'function' != typeof x;
    },
    2206: (Pt, Re, D) => {
      D.d(Re, { D: () => x });
      var s = D(576);
      function x(L) {
        return Symbol.asyncIterator && (0, s.m)(L?.[Symbol.asyncIterator]);
      }
    },
    576: (Pt, Re, D) => {
      function s(x) {
        return 'function' == typeof x;
      }
      D.d(Re, { m: () => s });
    },
    3670: (Pt, Re, D) => {
      D.d(Re, { c: () => L });
      var s = D(8822),
        x = D(576);
      function L(ne) {
        return (0, x.m)(ne[s.L]);
      }
    },
    6495: (Pt, Re, D) => {
      D.d(Re, { T: () => L });
      var s = D(2202),
        x = D(576);
      function L(ne) {
        return (0, x.m)(ne?.[s.h]);
      }
    },
    8239: (Pt, Re, D) => {
      D.d(Re, { t: () => x });
      var s = D(576);
      function x(L) {
        return (0, s.m)(L?.then);
      }
    },
    3260: (Pt, Re, D) => {
      D.d(Re, { L: () => ne, Q: () => L });
      var s = D(655),
        x = D(576);
      function L(te) {
        return (0, s.FC)(this, arguments, function* () {
          const ve = te.getReader();
          try {
            for (;;) {
              const { value: ue, done: ce } = yield (0, s.qq)(ve.read());
              if (ce) return yield (0, s.qq)(void 0);
              yield yield (0, s.qq)(ue);
            }
          } finally {
            ve.releaseLock();
          }
        });
      }
      function ne(te) {
        return (0, x.m)(te?.getReader);
      }
    },
    3532: (Pt, Re, D) => {
      D.d(Re, { K: () => x });
      var s = D(576);
      function x(L) {
        return L && (0, s.m)(L.schedule);
      }
    },
    4482: (Pt, Re, D) => {
      D.d(Re, { A: () => x, e: () => L });
      var s = D(576);
      function x(ne) {
        return (0, s.m)(ne?.lift);
      }
      function L(ne) {
        return te => {
          if (x(te))
            return te.lift(function (de) {
              try {
                return ne(de, this);
              } catch (ve) {
                this.error(ve);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
    },
    3268: (Pt, Re, D) => {
      D.d(Re, { Z: () => ne });
      var s = D(4004);
      const { isArray: x } = Array;
      function ne(te) {
        return (0, s.U)(de =>
          (function L(te, de) {
            return x(de) ? te(...de) : te(de);
          })(te, de),
        );
      }
    },
    5032: (Pt, Re, D) => {
      function s() {}
      D.d(Re, { Z: () => s });
    },
    9635: (Pt, Re, D) => {
      D.d(Re, { U: () => L, z: () => x });
      var s = D(4671);
      function x(...ne) {
        return L(ne);
      }
      function L(ne) {
        return 0 === ne.length
          ? s.y
          : 1 === ne.length
          ? ne[0]
          : function (de) {
              return ne.reduce((ve, ue) => ue(ve), de);
            };
      }
    },
    7849: (Pt, Re, D) => {
      D.d(Re, { h: () => L });
      var s = D(2416),
        x = D(3410);
      function L(ne) {
        x.z.setTimeout(() => {
          const { onUnhandledError: te } = s.v;
          if (!te) throw ne;
          te(ne);
        });
      }
    },
    4532: (Pt, Re, D) => {
      function s(x) {
        return new TypeError(
          `You provided ${
            null !== x && 'object' == typeof x ? 'an invalid object' : `'${x}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`,
        );
      }
      D.d(Re, { z: () => s });
    },
    655: (Pt, Re, D) => {
      function re($e, ze, be, Ue) {
        return new (be || (be = Promise))(function (Pe, Le) {
          function Ye(Gt) {
            try {
              We(Ue.next(Gt));
            } catch (mt) {
              Le(mt);
            }
          }
          function dt(Gt) {
            try {
              We(Ue.throw(Gt));
            } catch (mt) {
              Le(mt);
            }
          }
          function We(Gt) {
            Gt.done
              ? Pe(Gt.value)
              : (function Ce(Pe) {
                  return Pe instanceof be
                    ? Pe
                    : new be(function (Le) {
                        Le(Pe);
                      });
                })(Gt.value).then(Ye, dt);
          }
          We((Ue = Ue.apply($e, ze || [])).next());
        });
      }
      function W($e) {
        return this instanceof W ? ((this.v = $e), this) : new W($e);
      }
      function se($e, ze, be) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var Ce,
          Ue = be.apply($e, ze || []),
          Pe = [];
        return (
          (Ce = {}),
          Le('next'),
          Le('throw'),
          Le('return'),
          (Ce[Symbol.asyncIterator] = function () {
            return this;
          }),
          Ce
        );
        function Le(nn) {
          Ue[nn] &&
            (Ce[nn] = function (a) {
              return new Promise(function (ft, $t) {
                Pe.push([nn, a, ft, $t]) > 1 || Ye(nn, a);
              });
            });
        }
        function Ye(nn, a) {
          try {
            !(function dt(nn) {
              nn.value instanceof W
                ? Promise.resolve(nn.value.v).then(We, Gt)
                : mt(Pe[0][2], nn);
            })(Ue[nn](a));
          } catch (ft) {
            mt(Pe[0][3], ft);
          }
        }
        function We(nn) {
          Ye('next', nn);
        }
        function Gt(nn) {
          Ye('throw', nn);
        }
        function mt(nn, a) {
          nn(a), Pe.shift(), Pe.length && Ye(Pe[0][0], Pe[0][1]);
        }
      }
      function X($e) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var be,
          ze = $e[Symbol.asyncIterator];
        return ze
          ? ze.call($e)
          : (($e = (function vt($e) {
              var ze = 'function' == typeof Symbol && Symbol.iterator,
                be = ze && $e[ze],
                Ue = 0;
              if (be) return be.call($e);
              if ($e && 'number' == typeof $e.length)
                return {
                  next: function () {
                    return (
                      $e && Ue >= $e.length && ($e = void 0),
                      { value: $e && $e[Ue++], done: !$e }
                    );
                  },
                };
              throw new TypeError(
                ze
                  ? 'Object is not iterable.'
                  : 'Symbol.iterator is not defined.',
              );
            })($e)),
            (be = {}),
            Ue('next'),
            Ue('throw'),
            Ue('return'),
            (be[Symbol.asyncIterator] = function () {
              return this;
            }),
            be);
        function Ue(Pe) {
          be[Pe] =
            $e[Pe] &&
            function (Le) {
              return new Promise(function (Ye, dt) {
                !(function Ce(Pe, Le, Ye, dt) {
                  Promise.resolve(dt).then(function (We) {
                    Pe({ value: We, done: Ye });
                  }, Le);
                })(Ye, dt, (Le = $e[Pe](Le)).done, Le.value);
              });
            };
        }
      }
      D.d(Re, { FC: () => se, KL: () => X, mG: () => re, qq: () => W });
    },
    7340: (Pt, Re, D) => {
      D.d(Re, {
        F4: () => le,
        IO: () => ct,
        LC: () => x,
        SB: () => ce,
        X$: () => ne,
        ZE: () => lt,
        ZN: () => _t,
        _j: () => s,
        eR: () => fe,
        jt: () => te,
        k1: () => bt,
        l3: () => L,
        oB: () => ue,
        pV: () => Ne,
        ru: () => de,
        vP: () => ve,
      });
      class s {}
      class x {}
      const L = '*';
      function ne(W, se) {
        return { type: 7, name: W, definitions: se, options: {} };
      }
      function te(W, se = null) {
        return { type: 4, styles: se, timings: W };
      }
      function de(W, se = null) {
        return { type: 3, steps: W, options: se };
      }
      function ve(W, se = null) {
        return { type: 2, steps: W, options: se };
      }
      function ue(W) {
        return { type: 6, styles: W, offset: null };
      }
      function ce(W, se, ie) {
        return { type: 0, name: W, styles: se, options: ie };
      }
      function le(W) {
        return { type: 5, steps: W };
      }
      function fe(W, se, ie = null) {
        return { type: 1, expr: W, animation: se, options: ie };
      }
      function Ne(W = null) {
        return { type: 9, options: W };
      }
      function ct(W, se, ie = null) {
        return { type: 11, selector: W, animation: se, options: ie };
      }
      function Be(W) {
        Promise.resolve().then(W);
      }
      class _t {
        constructor(se = 0, ie = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = se + ie);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(se => se()),
            (this._onDoneFns = []));
        }
        onStart(se) {
          this._originalOnStartFns.push(se), this._onStartFns.push(se);
        }
        onDone(se) {
          this._originalOnDoneFns.push(se), this._onDoneFns.push(se);
        }
        onDestroy(se) {
          this._onDestroyFns.push(se);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Be(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach(se => se()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach(se => se()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(se) {
          this._position = this.totalTime ? se * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(se) {
          const ie = 'start' == se ? this._onStartFns : this._onDoneFns;
          ie.forEach(X => X()), (ie.length = 0);
        }
      }
      class lt {
        constructor(se) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = se);
          let ie = 0,
            X = 0,
            Ae = 0;
          const Qe = this.players.length;
          0 == Qe
            ? Be(() => this._onFinish())
            : this.players.forEach(ut => {
                ut.onDone(() => {
                  ++ie == Qe && this._onFinish();
                }),
                  ut.onDestroy(() => {
                    ++X == Qe && this._onDestroy();
                  }),
                  ut.onStart(() => {
                    ++Ae == Qe && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (ut, Ut) => Math.max(ut, Ut.totalTime),
              0,
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(se => se()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach(se => se.init());
        }
        onStart(se) {
          this._onStartFns.push(se);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach(se => se()),
            (this._onStartFns = []));
        }
        onDone(se) {
          this._onDoneFns.push(se);
        }
        onDestroy(se) {
          this._onDestroyFns.push(se);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach(se => se.play());
        }
        pause() {
          this.players.forEach(se => se.pause());
        }
        restart() {
          this.players.forEach(se => se.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach(se => se.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach(se => se.destroy()),
            this._onDestroyFns.forEach(se => se()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach(se => se.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(se) {
          const ie = se * this.totalTime;
          this.players.forEach(X => {
            const Ae = X.totalTime ? Math.min(1, ie / X.totalTime) : 1;
            X.setPosition(Ae);
          });
        }
        getPosition() {
          const se = this.players.reduce(
            (ie, X) => (null === ie || X.totalTime > ie.totalTime ? X : ie),
            null,
          );
          return null != se ? se.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach(se => {
            se.beforeDestroy && se.beforeDestroy();
          });
        }
        triggerCallback(se) {
          const ie = 'start' == se ? this._onStartFns : this._onDoneFns;
          ie.forEach(X => X()), (ie.length = 0);
        }
      }
      const bt = '!';
    },
    2687: (Pt, Re, D) => {
      D.d(Re, {
        Em: () => ze,
        Kd: () => ge,
        X6: () => En,
        ic: () => Ue,
        kH: () => Dn,
        mK: () => Wt,
        qV: () => pt,
        qm: () => At,
        rt: () => Te,
        s1: () => $e,
        tE: () => Ot,
        yG: () => at,
      });
      var s = D(6895),
        x = D(4650),
        L = D(3353),
        ne = D(7579),
        te = D(727),
        de = D(1135),
        ve = D(9646),
        ue = D(9521),
        ce = D(8505),
        le = D(8372),
        fe = D(9300),
        re = D(4004),
        Ne = D(5698),
        He = D(5684),
        ct = D(1884),
        vt = D(2722),
        Be = D(1281),
        _t = D(9643),
        lt = D(2289);
      class Mt {
        constructor(b) {
          (this._items = b),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new ne.x()),
            (this._typeaheadSubscription = te.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = M => M.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new ne.x()),
            (this.change = new ne.x()),
            b instanceof x.n_E &&
              (this._itemChangesSubscription = b.changes.subscribe(M => {
                if (this._activeItem) {
                  const Q = M.toArray().indexOf(this._activeItem);
                  Q > -1 &&
                    Q !== this._activeItemIndex &&
                    (this._activeItemIndex = Q);
                }
              }));
        }
        skipPredicate(b) {
          return (this._skipPredicateFn = b), this;
        }
        withWrap(b = !0) {
          return (this._wrap = b), this;
        }
        withVerticalOrientation(b = !0) {
          return (this._vertical = b), this;
        }
        withHorizontalOrientation(b) {
          return (this._horizontal = b), this;
        }
        withAllowedModifierKeys(b) {
          return (this._allowedModifierKeys = b), this;
        }
        withTypeAhead(b = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, ce.b)(M => this._pressedLetters.push(M)),
                (0, le.b)(b),
                (0, fe.h)(() => this._pressedLetters.length > 0),
                (0, re.U)(() => this._pressedLetters.join('')),
              )
              .subscribe(M => {
                const G = this._getItemsArray();
                for (let Q = 1; Q < G.length + 1; Q++) {
                  const Xe = (this._activeItemIndex + Q) % G.length,
                    St = G[Xe];
                  if (
                    !this._skipPredicateFn(St) &&
                    0 === St.getLabel().toUpperCase().trim().indexOf(M)
                  ) {
                    this.setActiveItem(Xe);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(b = !0) {
          return (this._homeAndEnd = b), this;
        }
        withPageUpDown(b = !0, M = 10) {
          return (this._pageUpAndDown = { enabled: b, delta: M }), this;
        }
        setActiveItem(b) {
          const M = this._activeItem;
          this.updateActiveItem(b),
            this._activeItem !== M && this.change.next(this._activeItemIndex);
        }
        onKeydown(b) {
          const M = b.keyCode,
            Q = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              Xe => !b[Xe] || this._allowedModifierKeys.indexOf(Xe) > -1,
            );
          switch (M) {
            case ue.Mf:
              return void this.tabOut.next();
            case ue.JH:
              if (this._vertical && Q) {
                this.setNextItemActive();
                break;
              }
              return;
            case ue.LH:
              if (this._vertical && Q) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case ue.SV:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case ue.oh:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case ue.Sd:
              if (this._homeAndEnd && Q) {
                this.setFirstItemActive();
                break;
              }
              return;
            case ue.uR:
              if (this._homeAndEnd && Q) {
                this.setLastItemActive();
                break;
              }
              return;
            case ue.Ku:
              if (this._pageUpAndDown.enabled && Q) {
                const Xe = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(Xe > 0 ? Xe : 0, 1);
                break;
              }
              return;
            case ue.VM:
              if (this._pageUpAndDown.enabled && Q) {
                const Xe = this._activeItemIndex + this._pageUpAndDown.delta,
                  St = this._getItemsArray().length;
                this._setActiveItemByIndex(Xe < St ? Xe : St - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (Q || (0, ue.Vb)(b, 'shiftKey')) &&
                (b.key && 1 === b.key.length
                  ? this._letterKeyStream.next(b.key.toLocaleUpperCase())
                  : ((M >= ue.A && M <= ue.Z) || (M >= ue.xE && M <= ue.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(M)))
              );
          }
          (this._pressedLetters = []), b.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(b) {
          const M = this._getItemsArray(),
            G = 'number' == typeof b ? b : M.indexOf(b);
          (this._activeItem = M[G] ?? null), (this._activeItemIndex = G);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(b) {
          this._wrap
            ? this._setActiveInWrapMode(b)
            : this._setActiveInDefaultMode(b);
        }
        _setActiveInWrapMode(b) {
          const M = this._getItemsArray();
          for (let G = 1; G <= M.length; G++) {
            const Q = (this._activeItemIndex + b * G + M.length) % M.length;
            if (!this._skipPredicateFn(M[Q])) return void this.setActiveItem(Q);
          }
        }
        _setActiveInDefaultMode(b) {
          this._setActiveItemByIndex(this._activeItemIndex + b, b);
        }
        _setActiveItemByIndex(b, M) {
          const G = this._getItemsArray();
          if (G[b]) {
            for (; this._skipPredicateFn(G[b]); ) if (!G[(b += M)]) return;
            this.setActiveItem(b);
          }
        }
        _getItemsArray() {
          return this._items instanceof x.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class $e extends Mt {
        setActiveItem(b) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(b),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class ze extends Mt {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(b) {
          return (this._origin = b), this;
        }
        setActiveItem(b) {
          super.setActiveItem(b),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let Ue = (() => {
        class F {
          constructor(M) {
            this._platform = M;
          }
          isDisabled(M) {
            return M.hasAttribute('disabled');
          }
          isVisible(M) {
            return (
              (function Pe(F) {
                return !!(
                  F.offsetWidth ||
                  F.offsetHeight ||
                  ('function' == typeof F.getClientRects &&
                    F.getClientRects().length)
                );
              })(M) && 'visible' === getComputedStyle(M).visibility
            );
          }
          isTabbable(M) {
            if (!this._platform.isBrowser) return !1;
            const G = (function Ce(F) {
              try {
                return F.frameElement;
              } catch {
                return null;
              }
            })(
              (function $t(F) {
                return (
                  (F.ownerDocument && F.ownerDocument.defaultView) || window
                );
              })(M),
            );
            if (G && (-1 === nn(G) || !this.isVisible(G))) return !1;
            let Q = M.nodeName.toLowerCase(),
              Xe = nn(M);
            return M.hasAttribute('contenteditable')
              ? -1 !== Xe
              : !(
                  'iframe' === Q ||
                  'object' === Q ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function a(F) {
                      let b = F.nodeName.toLowerCase(),
                        M = 'input' === b && F.type;
                      return (
                        'text' === M ||
                        'password' === M ||
                        'select' === b ||
                        'textarea' === b
                      );
                    })(M))
                ) &&
                  ('audio' === Q
                    ? !!M.hasAttribute('controls') && -1 !== Xe
                    : 'video' === Q
                    ? -1 !== Xe &&
                      (null !== Xe ||
                        this._platform.FIREFOX ||
                        M.hasAttribute('controls'))
                    : M.tabIndex >= 0);
          }
          isFocusable(M, G) {
            return (
              (function ft(F) {
                return (
                  !(function Ye(F) {
                    return (
                      (function We(F) {
                        return 'input' == F.nodeName.toLowerCase();
                      })(F) && 'hidden' == F.type
                    );
                  })(F) &&
                  ((function Le(F) {
                    let b = F.nodeName.toLowerCase();
                    return (
                      'input' === b ||
                      'select' === b ||
                      'button' === b ||
                      'textarea' === b
                    );
                  })(F) ||
                    (function dt(F) {
                      return (
                        (function Gt(F) {
                          return 'a' == F.nodeName.toLowerCase();
                        })(F) && F.hasAttribute('href')
                      );
                    })(F) ||
                    F.hasAttribute('contenteditable') ||
                    mt(F))
                );
              })(M) &&
              !this.isDisabled(M) &&
              (G?.ignoreVisibility || this.isVisible(M))
            );
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(L.t4));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac, providedIn: 'root' })),
          F
        );
      })();
      function mt(F) {
        if (!F.hasAttribute('tabindex') || void 0 === F.tabIndex) return !1;
        let b = F.getAttribute('tabindex');
        return !(!b || isNaN(parseInt(b, 10)));
      }
      function nn(F) {
        if (!mt(F)) return null;
        const b = parseInt(F.getAttribute('tabindex') || '', 10);
        return isNaN(b) ? -1 : b;
      }
      class et {
        get enabled() {
          return this._enabled;
        }
        set enabled(b) {
          (this._enabled = b),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(b, this._startAnchor),
              this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        constructor(b, M, G, Q, Xe = !1) {
          (this._element = b),
            (this._checker = M),
            (this._ngZone = G),
            (this._document = Q),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            Xe || this.attachAnchors();
        }
        destroy() {
          const b = this._startAnchor,
            M = this._endAnchor;
          b &&
            (b.removeEventListener('focus', this.startAnchorListener),
            b.remove()),
            M &&
              (M.removeEventListener('focus', this.endAnchorListener),
              M.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  'focus',
                  this.startAnchorListener,
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    'focus',
                    this.endAnchorListener,
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element,
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling,
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusInitialElement(b)));
          });
        }
        focusFirstTabbableElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusFirstTabbableElement(b)));
          });
        }
        focusLastTabbableElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusLastTabbableElement(b)));
          });
        }
        _getRegionBoundary(b) {
          const M = this._element.querySelectorAll(
            `[cdk-focus-region-${b}], [cdkFocusRegion${b}], [cdk-focus-${b}]`,
          );
          return 'start' == b
            ? M.length
              ? M[0]
              : this._getFirstTabbableElement(this._element)
            : M.length
            ? M[M.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(b) {
          const M = this._element.querySelector(
            '[cdk-focus-initial], [cdkFocusInitial]',
          );
          if (M) {
            if (!this._checker.isFocusable(M)) {
              const G = this._getFirstTabbableElement(M);
              return G?.focus(b), !!G;
            }
            return M.focus(b), !0;
          }
          return this.focusFirstTabbableElement(b);
        }
        focusFirstTabbableElement(b) {
          const M = this._getRegionBoundary('start');
          return M && M.focus(b), !!M;
        }
        focusLastTabbableElement(b) {
          const M = this._getRegionBoundary('end');
          return M && M.focus(b), !!M;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const M = b.children;
          for (let G = 0; G < M.length; G++) {
            const Q =
              M[G].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(M[G])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _getLastTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const M = b.children;
          for (let G = M.length - 1; G >= 0; G--) {
            const Q =
              M[G].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(M[G])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _createAnchor() {
          const b = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, b),
            b.classList.add('cdk-visually-hidden'),
            b.classList.add('cdk-focus-trap-anchor'),
            b.setAttribute('aria-hidden', 'true'),
            b
          );
        }
        _toggleAnchorTabIndex(b, M) {
          b ? M.setAttribute('tabindex', '0') : M.removeAttribute('tabindex');
        }
        toggleAnchors(b) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(b, this._startAnchor),
            this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        _executeOnStable(b) {
          this._ngZone.isStable
            ? b()
            : this._ngZone.onStable.pipe((0, Ne.q)(1)).subscribe(b);
        }
      }
      let pt = (() => {
          class F {
            constructor(M, G, Q) {
              (this._checker = M), (this._ngZone = G), (this._document = Q);
            }
            create(M, G = !1) {
              return new et(M, this._checker, this._ngZone, this._document, G);
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(Ue), x.LFG(x.R0b), x.LFG(s.K0));
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        Wt = (() => {
          class F {
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(M) {
              this.focusTrap.enabled = (0, Be.Ig)(M);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(M) {
              this._autoCapture = (0, Be.Ig)(M);
            }
            constructor(M, G, Q) {
              (this._elementRef = M),
                (this._focusTrapFactory = G),
                (this._previouslyFocusedElement = null),
                (this.focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                  !0,
                ));
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(),
                  (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture && this._captureFocus();
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
            ngOnChanges(M) {
              const G = M.autoCapture;
              G &&
                !G.firstChange &&
                this.autoCapture &&
                this.focusTrap.hasAttached() &&
                this._captureFocus();
            }
            _captureFocus() {
              (this._previouslyFocusedElement = (0, L.ht)()),
                this.focusTrap.focusInitialElementWhenReady();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.Y36(x.SBq), x.Y36(pt), x.Y36(s.K0));
            }),
            (F.ɵdir = x.lG2({
              type: F,
              selectors: [['', 'cdkTrapFocus', '']],
              inputs: {
                enabled: ['cdkTrapFocus', 'enabled'],
                autoCapture: ['cdkTrapFocusAutoCapture', 'autoCapture'],
              },
              exportAs: ['cdkTrapFocus'],
              features: [x.TTD],
            })),
            F
          );
        })();
      function En(F) {
        return 0 === F.buttons || (0 === F.offsetX && 0 === F.offsetY);
      }
      function at(F) {
        const b =
          (F.touches && F.touches[0]) ||
          (F.changedTouches && F.changedTouches[0]);
        return !(
          !b ||
          -1 !== b.identifier ||
          (null != b.radiusX && 1 !== b.radiusX) ||
          (null != b.radiusY && 1 !== b.radiusY)
        );
      }
      const Y = new x.OlP('cdk-input-modality-detector-options'),
        ee = { ignoreKeys: [ue.zL, ue.jx, ue.b2, ue.MW, ue.JU] },
        je = (0, L.i$)({ passive: !0, capture: !0 });
      let De = (() => {
        class F {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(M, G, Q, Xe) {
            (this._platform = M),
              (this._mostRecentTarget = null),
              (this._modality = new de.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = St => {
                this._options?.ignoreKeys?.some(rn => rn === St.keyCode) ||
                  (this._modality.next('keyboard'),
                  (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._onMousedown = St => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(En(St) ? 'keyboard' : 'mouse'),
                  (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._onTouchstart = St => {
                at(St)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._options = { ...ee, ...Xe }),
              (this.modalityDetected = this._modality.pipe((0, He.T)(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, ct.x)())),
              M.isBrowser &&
                G.runOutsideAngular(() => {
                  Q.addEventListener('keydown', this._onKeydown, je),
                    Q.addEventListener('mousedown', this._onMousedown, je),
                    Q.addEventListener('touchstart', this._onTouchstart, je);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, je),
                document.removeEventListener(
                  'mousedown',
                  this._onMousedown,
                  je,
                ),
                document.removeEventListener(
                  'touchstart',
                  this._onTouchstart,
                  je,
                ));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(
              x.LFG(L.t4),
              x.LFG(x.R0b),
              x.LFG(s.K0),
              x.LFG(Y, 8),
            );
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac, providedIn: 'root' })),
          F
        );
      })();
      const ye = new x.OlP('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function H() {
            return null;
          },
        }),
        ke = new x.OlP('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let he = 0,
        ge = (() => {
          class F {
            constructor(M, G, Q, Xe) {
              (this._ngZone = G),
                (this._defaultOptions = Xe),
                (this._document = Q),
                (this._liveElement = M || this._createLiveElement());
            }
            announce(M, ...G) {
              const Q = this._defaultOptions;
              let Xe, St;
              return (
                1 === G.length && 'number' == typeof G[0]
                  ? (St = G[0])
                  : ([Xe, St] = G),
                this.clear(),
                clearTimeout(this._previousTimeout),
                Xe || (Xe = Q && Q.politeness ? Q.politeness : 'polite'),
                null == St && Q && (St = Q.duration),
                this._liveElement.setAttribute('aria-live', Xe),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        rn => (this._currentResolve = rn),
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = M),
                        'number' == typeof St &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            St,
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  ),
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const M = 'cdk-live-announcer-element',
                G = this._document.getElementsByClassName(M),
                Q = this._document.createElement('div');
              for (let Xe = 0; Xe < G.length; Xe++) G[Xe].remove();
              return (
                Q.classList.add(M),
                Q.classList.add('cdk-visually-hidden'),
                Q.setAttribute('aria-atomic', 'true'),
                Q.setAttribute('aria-live', 'polite'),
                (Q.id = 'cdk-live-announcer-' + he++),
                this._document.body.appendChild(Q),
                Q
              );
            }
            _exposeAnnouncerToModals(M) {
              const G = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              for (let Q = 0; Q < G.length; Q++) {
                const Xe = G[Q],
                  St = Xe.getAttribute('aria-owns');
                St
                  ? -1 === St.indexOf(M) &&
                    Xe.setAttribute('aria-owns', St + ' ' + M)
                  : Xe.setAttribute('aria-owns', M);
              }
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(
                x.LFG(ye, 8),
                x.LFG(x.R0b),
                x.LFG(s.K0),
                x.LFG(ke, 8),
              );
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })();
      const nt = new x.OlP('cdk-focus-monitor-default-options'),
        wt = (0, L.i$)({ passive: !0, capture: !0 });
      let Ot = (() => {
          class F {
            constructor(M, G, Q, Xe, St) {
              (this._ngZone = M),
                (this._platform = G),
                (this._inputModalityDetector = Q),
                (this._origin = null),
                (this._windowFocused = !1),
                (this._originFromTouchInteraction = !1),
                (this._elementInfo = new Map()),
                (this._monitoredElementCount = 0),
                (this._rootNodeFocusListenerCount = new Map()),
                (this._windowFocusListener = () => {
                  (this._windowFocused = !0),
                    (this._windowFocusTimeoutId = window.setTimeout(
                      () => (this._windowFocused = !1),
                    ));
                }),
                (this._stopInputModalityDetector = new ne.x()),
                (this._rootNodeFocusAndBlurListener = rn => {
                  for (let tt = (0, L.sA)(rn); tt; tt = tt.parentElement)
                    'focus' === rn.type
                      ? this._onFocus(rn, tt)
                      : this._onBlur(rn, tt);
                }),
                (this._document = Xe),
                (this._detectionMode = St?.detectionMode || 0);
            }
            monitor(M, G = !1) {
              const Q = (0, Be.fI)(M);
              if (!this._platform.isBrowser || 1 !== Q.nodeType)
                return (0, ve.of)(null);
              const Xe = (0, L.kV)(Q) || this._getDocument(),
                St = this._elementInfo.get(Q);
              if (St) return G && (St.checkChildren = !0), St.subject;
              const rn = {
                checkChildren: G,
                subject: new ne.x(),
                rootNode: Xe,
              };
              return (
                this._elementInfo.set(Q, rn),
                this._registerGlobalListeners(rn),
                rn.subject
              );
            }
            stopMonitoring(M) {
              const G = (0, Be.fI)(M),
                Q = this._elementInfo.get(G);
              Q &&
                (Q.subject.complete(),
                this._setClasses(G),
                this._elementInfo.delete(G),
                this._removeGlobalListeners(Q));
            }
            focusVia(M, G, Q) {
              const Xe = (0, Be.fI)(M);
              Xe === this._getDocument().activeElement
                ? this._getClosestElementsInfo(Xe).forEach(([rn, Rt]) =>
                    this._originChanged(rn, G, Rt),
                  )
                : (this._setOrigin(G),
                  'function' == typeof Xe.focus && Xe.focus(Q));
            }
            ngOnDestroy() {
              this._elementInfo.forEach((M, G) => this.stopMonitoring(G));
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _getFocusOrigin(M) {
              return this._origin
                ? this._originFromTouchInteraction
                  ? this._shouldBeAttributedToTouch(M)
                    ? 'touch'
                    : 'program'
                  : this._origin
                : this._windowFocused && this._lastFocusOrigin
                ? this._lastFocusOrigin
                : M && this._isLastInteractionFromInputLabel(M)
                ? 'mouse'
                : 'program';
            }
            _shouldBeAttributedToTouch(M) {
              return (
                1 === this._detectionMode ||
                !!M?.contains(this._inputModalityDetector._mostRecentTarget)
              );
            }
            _setClasses(M, G) {
              M.classList.toggle('cdk-focused', !!G),
                M.classList.toggle('cdk-touch-focused', 'touch' === G),
                M.classList.toggle('cdk-keyboard-focused', 'keyboard' === G),
                M.classList.toggle('cdk-mouse-focused', 'mouse' === G),
                M.classList.toggle('cdk-program-focused', 'program' === G);
            }
            _setOrigin(M, G = !1) {
              this._ngZone.runOutsideAngular(() => {
                (this._origin = M),
                  (this._originFromTouchInteraction = 'touch' === M && G),
                  0 === this._detectionMode &&
                    (clearTimeout(this._originTimeoutId),
                    (this._originTimeoutId = setTimeout(
                      () => (this._origin = null),
                      this._originFromTouchInteraction ? 650 : 1,
                    )));
              });
            }
            _onFocus(M, G) {
              const Q = this._elementInfo.get(G),
                Xe = (0, L.sA)(M);
              !Q ||
                (!Q.checkChildren && G !== Xe) ||
                this._originChanged(G, this._getFocusOrigin(Xe), Q);
            }
            _onBlur(M, G) {
              const Q = this._elementInfo.get(G);
              !Q ||
                (Q.checkChildren &&
                  M.relatedTarget instanceof Node &&
                  G.contains(M.relatedTarget)) ||
                (this._setClasses(G), this._emitOrigin(Q, null));
            }
            _emitOrigin(M, G) {
              M.subject.observers.length &&
                this._ngZone.run(() => M.subject.next(G));
            }
            _registerGlobalListeners(M) {
              if (!this._platform.isBrowser) return;
              const G = M.rootNode,
                Q = this._rootNodeFocusListenerCount.get(G) || 0;
              Q ||
                this._ngZone.runOutsideAngular(() => {
                  G.addEventListener(
                    'focus',
                    this._rootNodeFocusAndBlurListener,
                    wt,
                  ),
                    G.addEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      wt,
                    );
                }),
                this._rootNodeFocusListenerCount.set(G, Q + 1),
                1 == ++this._monitoredElementCount &&
                  (this._ngZone.runOutsideAngular(() => {
                    this._getWindow().addEventListener(
                      'focus',
                      this._windowFocusListener,
                    );
                  }),
                  this._inputModalityDetector.modalityDetected
                    .pipe((0, vt.R)(this._stopInputModalityDetector))
                    .subscribe(Xe => {
                      this._setOrigin(Xe, !0);
                    }));
            }
            _removeGlobalListeners(M) {
              const G = M.rootNode;
              if (this._rootNodeFocusListenerCount.has(G)) {
                const Q = this._rootNodeFocusListenerCount.get(G);
                Q > 1
                  ? this._rootNodeFocusListenerCount.set(G, Q - 1)
                  : (G.removeEventListener(
                      'focus',
                      this._rootNodeFocusAndBlurListener,
                      wt,
                    ),
                    G.removeEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      wt,
                    ),
                    this._rootNodeFocusListenerCount.delete(G));
              }
              --this._monitoredElementCount ||
                (this._getWindow().removeEventListener(
                  'focus',
                  this._windowFocusListener,
                ),
                this._stopInputModalityDetector.next(),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._originTimeoutId));
            }
            _originChanged(M, G, Q) {
              this._setClasses(M, G),
                this._emitOrigin(Q, G),
                (this._lastFocusOrigin = G);
            }
            _getClosestElementsInfo(M) {
              const G = [];
              return (
                this._elementInfo.forEach((Q, Xe) => {
                  (Xe === M || (Q.checkChildren && Xe.contains(M))) &&
                    G.push([Xe, Q]);
                }),
                G
              );
            }
            _isLastInteractionFromInputLabel(M) {
              const { _mostRecentTarget: G, mostRecentModality: Q } =
                this._inputModalityDetector;
              if (
                'mouse' !== Q ||
                !G ||
                G === M ||
                ('INPUT' !== M.nodeName && 'TEXTAREA' !== M.nodeName) ||
                M.disabled
              )
                return !1;
              const Xe = M.labels;
              if (Xe)
                for (let St = 0; St < Xe.length; St++)
                  if (Xe[St].contains(G)) return !0;
              return !1;
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(
                x.LFG(x.R0b),
                x.LFG(L.t4),
                x.LFG(De),
                x.LFG(s.K0, 8),
                x.LFG(nt, 8),
              );
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        Dn = (() => {
          class F {
            constructor(M, G) {
              (this._elementRef = M),
                (this._focusMonitor = G),
                (this._focusOrigin = null),
                (this.cdkFocusChange = new x.vpe());
            }
            get focusOrigin() {
              return this._focusOrigin;
            }
            ngAfterViewInit() {
              const M = this._elementRef.nativeElement;
              this._monitorSubscription = this._focusMonitor
                .monitor(
                  M,
                  1 === M.nodeType && M.hasAttribute('cdkMonitorSubtreeFocus'),
                )
                .subscribe(G => {
                  (this._focusOrigin = G), this.cdkFocusChange.emit(G);
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._monitorSubscription &&
                  this._monitorSubscription.unsubscribe();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.Y36(x.SBq), x.Y36(Ot));
            }),
            (F.ɵdir = x.lG2({
              type: F,
              selectors: [
                ['', 'cdkMonitorElementFocus', ''],
                ['', 'cdkMonitorSubtreeFocus', ''],
              ],
              outputs: { cdkFocusChange: 'cdkFocusChange' },
              exportAs: ['cdkMonitorFocus'],
            })),
            F
          );
        })();
      const Oe = 'cdk-high-contrast-black-on-white',
        yt = 'cdk-high-contrast-white-on-black',
        Je = 'cdk-high-contrast-active';
      let At = (() => {
          class F {
            constructor(M, G) {
              (this._platform = M),
                (this._document = G),
                (this._breakpointSubscription = (0, x.f3M)(lt.Yg)
                  .observe('(forced-colors: active)')
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const M = this._document.createElement('div');
              (M.style.backgroundColor = 'rgb(1,2,3)'),
                (M.style.position = 'absolute'),
                this._document.body.appendChild(M);
              const G = this._document.defaultView || window,
                Q = G && G.getComputedStyle ? G.getComputedStyle(M) : null,
                Xe = ((Q && Q.backgroundColor) || '').replace(/ /g, '');
              switch ((M.remove(), Xe)) {
                case 'rgb(0,0,0)':
                case 'rgb(45,50,54)':
                case 'rgb(32,32,32)':
                  return 2;
                case 'rgb(255,255,255)':
                case 'rgb(255,250,239)':
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const M = this._document.body.classList;
                M.remove(Je, Oe, yt), (this._hasCheckedHighContrastMode = !0);
                const G = this.getHighContrastMode();
                1 === G ? M.add(Je, Oe) : 2 === G && M.add(Je, yt);
              }
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(L.t4), x.LFG(s.K0));
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        Te = (() => {
          class F {
            constructor(M) {
              M._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(At));
            }),
            (F.ɵmod = x.oAB({ type: F })),
            (F.ɵinj = x.cJS({ imports: [_t.Q8] })),
            F
          );
        })();
    },
    445: (Pt, Re, D) => {
      D.d(Re, { Is: () => ve, vT: () => ce });
      var s = D(4650),
        x = D(6895);
      const L = new s.OlP('cdk-dir-doc', {
          providedIn: 'root',
          factory: function ne() {
            return (0, s.f3M)(x.K0);
          },
        }),
        te =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let ve = (() => {
          class le {
            constructor(re) {
              (this.value = 'ltr'),
                (this.change = new s.vpe()),
                re &&
                  (this.value = (function de(le) {
                    const fe = le?.toLowerCase() || '';
                    return 'auto' === fe &&
                      typeof navigator < 'u' &&
                      navigator?.language
                      ? te.test(navigator.language)
                        ? 'rtl'
                        : 'ltr'
                      : 'rtl' === fe
                      ? 'rtl'
                      : 'ltr';
                  })(
                    (re.body ? re.body.dir : null) ||
                      (re.documentElement ? re.documentElement.dir : null) ||
                      'ltr',
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (le.ɵfac = function (re) {
              return new (re || le)(s.LFG(L, 8));
            }),
            (le.ɵprov = s.Yz7({
              token: le,
              factory: le.ɵfac,
              providedIn: 'root',
            })),
            le
          );
        })(),
        ce = (() => {
          class le {}
          return (
            (le.ɵfac = function (re) {
              return new (re || le)();
            }),
            (le.ɵmod = s.oAB({ type: le })),
            (le.ɵinj = s.cJS({})),
            le
          );
        })();
    },
    1281: (Pt, Re, D) => {
      D.d(Re, {
        Eq: () => te,
        HM: () => de,
        Ig: () => x,
        du: () => ue,
        fI: () => ve,
        su: () => L,
      });
      var s = D(4650);
      function x(ce) {
        return null != ce && 'false' != `${ce}`;
      }
      function L(ce, le = 0) {
        return (function ne(ce) {
          return !isNaN(parseFloat(ce)) && !isNaN(Number(ce));
        })(ce)
          ? Number(ce)
          : le;
      }
      function te(ce) {
        return Array.isArray(ce) ? ce : [ce];
      }
      function de(ce) {
        return null == ce ? '' : 'string' == typeof ce ? ce : `${ce}px`;
      }
      function ve(ce) {
        return ce instanceof s.SBq ? ce.nativeElement : ce;
      }
      function ue(ce, le = /\s+/) {
        const fe = [];
        if (null != ce) {
          const re = Array.isArray(ce) ? ce : `${ce}`.split(le);
          for (const Ne of re) {
            const He = `${Ne}`.trim();
            He && fe.push(He);
          }
        }
        return fe;
      }
    },
    9521: (Pt, Re, D) => {
      D.d(Re, {
        A: () => Ye,
        JH: () => bt,
        JU: () => de,
        K5: () => te,
        Ku: () => Ne,
        LH: () => _t,
        L_: () => re,
        MW: () => ke,
        Mf: () => L,
        SV: () => lt,
        Sd: () => vt,
        VM: () => He,
        Vb: () => hi,
        Z: () => H,
        aO: () => be,
        b2: () => Xn,
        hY: () => fe,
        jx: () => ve,
        oh: () => Be,
        uR: () => ct,
        xE: () => Ae,
        zL: () => ue,
      });
      const L = 9,
        te = 13,
        de = 16,
        ve = 17,
        ue = 18,
        fe = 27,
        re = 32,
        Ne = 33,
        He = 34,
        ct = 35,
        vt = 36,
        Be = 37,
        _t = 38,
        lt = 39,
        bt = 40,
        Ae = 48,
        be = 57,
        Ye = 65,
        H = 90,
        ke = 91,
        Xn = 224;
      function hi(wn, ...Ti) {
        return Ti.length
          ? Ti.some(Ci => wn[Ci])
          : wn.altKey || wn.shiftKey || wn.ctrlKey || wn.metaKey;
      }
    },
    2289: (Pt, Re, D) => {
      D.d(Re, { Yg: () => bt, u3: () => se });
      var s = D(4650),
        x = D(1281),
        L = D(7579),
        ne = D(9841),
        te = D(7272),
        de = D(9751),
        ve = D(5698),
        ue = D(5684),
        ce = D(8372),
        le = D(4004),
        fe = D(8675),
        re = D(2722),
        Ne = D(3353);
      const ct = new Set();
      let vt,
        Be = (() => {
          class ie {
            constructor(Ae) {
              (this._platform = Ae),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : lt);
            }
            matchMedia(Ae) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function _t(ie) {
                    if (!ct.has(ie))
                      try {
                        vt ||
                          ((vt = document.createElement('style')),
                          vt.setAttribute('type', 'text/css'),
                          document.head.appendChild(vt)),
                          vt.sheet &&
                            (vt.sheet.insertRule(`@media ${ie} {body{ }}`, 0),
                            ct.add(ie));
                      } catch (X) {
                        console.error(X);
                      }
                  })(Ae),
                this._matchMedia(Ae)
              );
            }
          }
          return (
            (ie.ɵfac = function (Ae) {
              return new (Ae || ie)(s.LFG(Ne.t4));
            }),
            (ie.ɵprov = s.Yz7({
              token: ie,
              factory: ie.ɵfac,
              providedIn: 'root',
            })),
            ie
          );
        })();
      function lt(ie) {
        return {
          matches: 'all' === ie || '' === ie,
          media: ie,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let bt = (() => {
        class ie {
          constructor(Ae, Qe) {
            (this._mediaMatcher = Ae),
              (this._zone = Qe),
              (this._queries = new Map()),
              (this._destroySubject = new L.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(Ae) {
            return W((0, x.Eq)(Ae)).some(
              ut => this._registerQuery(ut).mql.matches,
            );
          }
          observe(Ae) {
            const ut = W((0, x.Eq)(Ae)).map(
              Et => this._registerQuery(Et).observable,
            );
            let Ut = (0, ne.a)(ut);
            return (
              (Ut = (0, te.z)(
                Ut.pipe((0, ve.q)(1)),
                Ut.pipe((0, ue.T)(1), (0, ce.b)(0)),
              )),
              Ut.pipe(
                (0, le.U)(Et => {
                  const Yt = { matches: !1, breakpoints: {} };
                  return (
                    Et.forEach(({ matches: Mt, query: $e }) => {
                      (Yt.matches = Yt.matches || Mt),
                        (Yt.breakpoints[$e] = Mt);
                    }),
                    Yt
                  );
                }),
              )
            );
          }
          _registerQuery(Ae) {
            if (this._queries.has(Ae)) return this._queries.get(Ae);
            const Qe = this._mediaMatcher.matchMedia(Ae),
              Ut = {
                observable: new de.y(Et => {
                  const Yt = Mt => this._zone.run(() => Et.next(Mt));
                  return (
                    Qe.addListener(Yt),
                    () => {
                      Qe.removeListener(Yt);
                    }
                  );
                }).pipe(
                  (0, fe.O)(Qe),
                  (0, le.U)(({ matches: Et }) => ({ query: Ae, matches: Et })),
                  (0, re.R)(this._destroySubject),
                ),
                mql: Qe,
              };
            return this._queries.set(Ae, Ut), Ut;
          }
        }
        return (
          (ie.ɵfac = function (Ae) {
            return new (Ae || ie)(s.LFG(Be), s.LFG(s.R0b));
          }),
          (ie.ɵprov = s.Yz7({
            token: ie,
            factory: ie.ɵfac,
            providedIn: 'root',
          })),
          ie
        );
      })();
      function W(ie) {
        return ie
          .map(X => X.split(','))
          .reduce((X, Ae) => X.concat(Ae))
          .map(X => X.trim());
      }
      const se = {
        XSmall: '(max-width: 599.98px)',
        Small: '(min-width: 600px) and (max-width: 959.98px)',
        Medium: '(min-width: 960px) and (max-width: 1279.98px)',
        Large: '(min-width: 1280px) and (max-width: 1919.98px)',
        XLarge: '(min-width: 1920px)',
        Handset:
          '(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)',
        Tablet:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        Web: '(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)',
        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',
        TabletPortrait:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',
        WebPortrait: '(min-width: 840px) and (orientation: portrait)',
        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',
        TabletLandscape:
          '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',
      };
    },
    9643: (Pt, Re, D) => {
      D.d(Re, { Q8: () => ce, wD: () => ue });
      var s = D(1281),
        x = D(4650),
        L = D(9751),
        ne = D(7579),
        te = D(8372);
      let de = (() => {
          class le {
            create(re) {
              return typeof MutationObserver > 'u'
                ? null
                : new MutationObserver(re);
            }
          }
          return (
            (le.ɵfac = function (re) {
              return new (re || le)();
            }),
            (le.ɵprov = x.Yz7({
              token: le,
              factory: le.ɵfac,
              providedIn: 'root',
            })),
            le
          );
        })(),
        ve = (() => {
          class le {
            constructor(re) {
              (this._mutationObserverFactory = re),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((re, Ne) =>
                this._cleanupObserver(Ne),
              );
            }
            observe(re) {
              const Ne = (0, s.fI)(re);
              return new L.y(He => {
                const vt = this._observeElement(Ne).subscribe(He);
                return () => {
                  vt.unsubscribe(), this._unobserveElement(Ne);
                };
              });
            }
            _observeElement(re) {
              if (this._observedElements.has(re))
                this._observedElements.get(re).count++;
              else {
                const Ne = new ne.x(),
                  He = this._mutationObserverFactory.create(ct => Ne.next(ct));
                He &&
                  He.observe(re, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(re, {
                    observer: He,
                    stream: Ne,
                    count: 1,
                  });
              }
              return this._observedElements.get(re).stream;
            }
            _unobserveElement(re) {
              this._observedElements.has(re) &&
                (this._observedElements.get(re).count--,
                this._observedElements.get(re).count ||
                  this._cleanupObserver(re));
            }
            _cleanupObserver(re) {
              if (this._observedElements.has(re)) {
                const { observer: Ne, stream: He } =
                  this._observedElements.get(re);
                Ne && Ne.disconnect(),
                  He.complete(),
                  this._observedElements.delete(re);
              }
            }
          }
          return (
            (le.ɵfac = function (re) {
              return new (re || le)(x.LFG(de));
            }),
            (le.ɵprov = x.Yz7({
              token: le,
              factory: le.ɵfac,
              providedIn: 'root',
            })),
            le
          );
        })(),
        ue = (() => {
          class le {
            get disabled() {
              return this._disabled;
            }
            set disabled(re) {
              (this._disabled = (0, s.Ig)(re)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(re) {
              (this._debounce = (0, s.su)(re)), this._subscribe();
            }
            constructor(re, Ne, He) {
              (this._contentObserver = re),
                (this._elementRef = Ne),
                (this._ngZone = He),
                (this.event = new x.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const re = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? re.pipe((0, te.b)(this.debounce)) : re
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (le.ɵfac = function (re) {
              return new (re || le)(x.Y36(ve), x.Y36(x.SBq), x.Y36(x.R0b));
            }),
            (le.ɵdir = x.lG2({
              type: le,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: {
                disabled: ['cdkObserveContentDisabled', 'disabled'],
                debounce: 'debounce',
              },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            le
          );
        })(),
        ce = (() => {
          class le {}
          return (
            (le.ɵfac = function (re) {
              return new (re || le)();
            }),
            (le.ɵmod = x.oAB({ type: le })),
            (le.ɵinj = x.cJS({ providers: [de] })),
            le
          );
        })();
    },
    8184: (Pt, Re, D) => {
      D.d(Re, {
        Iu: () => Ue,
        U8: () => kt,
        X_: () => Ae,
        Xj: () => be,
        _G: () => Le,
        aV: () => et,
        pI: () => Sn,
        xu: () => pn,
      });
      var s = D(44),
        x = D(6895),
        L = D(4650),
        ne = D(1281),
        te = D(3353),
        de = D(9300),
        ve = D(5698),
        ue = D(2722),
        ce = D(2529),
        le = D(445),
        fe = D(4080),
        re = D(7579),
        Ne = D(727),
        He = D(6451),
        ct = D(9521);
      const vt = (0, te.Mq)();
      class Be {
        constructor(Y, ee) {
          (this._viewportRuler = Y),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = ee);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const Y = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = Y.style.left || ''),
              (this._previousHTMLStyles.top = Y.style.top || ''),
              (Y.style.left = (0, ne.HM)(-this._previousScrollPosition.left)),
              (Y.style.top = (0, ne.HM)(-this._previousScrollPosition.top)),
              Y.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const Y = this._document.documentElement,
              Me = Y.style,
              je = this._document.body.style,
              De = Me.scrollBehavior || '',
              ye = je.scrollBehavior || '';
            (this._isEnabled = !1),
              (Me.left = this._previousHTMLStyles.left),
              (Me.top = this._previousHTMLStyles.top),
              Y.classList.remove('cdk-global-scrollblock'),
              vt && (Me.scrollBehavior = je.scrollBehavior = 'auto'),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top,
              ),
              vt && ((Me.scrollBehavior = De), (je.scrollBehavior = ye));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              'cdk-global-scrollblock',
            ) ||
            this._isEnabled
          )
            return !1;
          const ee = this._document.body,
            Me = this._viewportRuler.getViewportSize();
          return ee.scrollHeight > Me.height || ee.scrollWidth > Me.width;
        }
      }
      class lt {
        constructor(Y, ee, Me, je) {
          (this._scrollDispatcher = Y),
            (this._ngZone = ee),
            (this._viewportRuler = Me),
            (this._config = je),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(Y) {
          this._overlayRef = Y;
        }
        enable() {
          if (this._scrollSubscription) return;
          const Y = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              (0, de.h)(
                ee =>
                  !ee ||
                  !this._overlayRef.overlayElement.contains(
                    ee.getElementRef().nativeElement,
                  ),
              ),
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = Y.subscribe(() => {
                const ee = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(ee - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = Y.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class bt {
        enable() {}
        disable() {}
        attach() {}
      }
      function W(at, Y) {
        return Y.some(
          ee =>
            at.bottom < ee.top ||
            at.top > ee.bottom ||
            at.right < ee.left ||
            at.left > ee.right,
        );
      }
      function se(at, Y) {
        return Y.some(
          ee =>
            at.top < ee.top ||
            at.bottom > ee.bottom ||
            at.left < ee.left ||
            at.right > ee.right,
        );
      }
      class ie {
        constructor(Y, ee, Me, je) {
          (this._scrollDispatcher = Y),
            (this._viewportRuler = ee),
            (this._ngZone = Me),
            (this._config = je),
            (this._scrollSubscription = null);
        }
        attach(Y) {
          this._overlayRef = Y;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const ee =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: Me, height: je } =
                      this._viewportRuler.getViewportSize();
                  W(ee, [
                    {
                      width: Me,
                      height: je,
                      bottom: je,
                      right: Me,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let X = (() => {
        class at {
          constructor(ee, Me, je, De) {
            (this._scrollDispatcher = ee),
              (this._viewportRuler = Me),
              (this._ngZone = je),
              (this.noop = () => new bt()),
              (this.close = ye =>
                new lt(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  ye,
                )),
              (this.block = () => new Be(this._viewportRuler, this._document)),
              (this.reposition = ye =>
                new ie(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  ye,
                )),
              (this._document = De);
          }
        }
        return (
          (at.ɵfac = function (ee) {
            return new (ee || at)(
              L.LFG(s.mF),
              L.LFG(s.rL),
              L.LFG(L.R0b),
              L.LFG(x.K0),
            );
          }),
          (at.ɵprov = L.Yz7({
            token: at,
            factory: at.ɵfac,
            providedIn: 'root',
          })),
          at
        );
      })();
      class Ae {
        constructor(Y) {
          if (
            ((this.scrollStrategy = new bt()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            Y)
          ) {
            const ee = Object.keys(Y);
            for (const Me of ee) void 0 !== Y[Me] && (this[Me] = Y[Me]);
          }
        }
      }
      class Ut {
        constructor(Y, ee) {
          (this.connectionPair = Y), (this.scrollableViewProperties = ee);
        }
      }
      let Mt = (() => {
          class at {
            constructor(ee) {
              (this._attachedOverlays = []), (this._document = ee);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(ee) {
              this.remove(ee), this._attachedOverlays.push(ee);
            }
            remove(ee) {
              const Me = this._attachedOverlays.indexOf(ee);
              Me > -1 && this._attachedOverlays.splice(Me, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(L.LFG(x.K0));
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })(),
        $e = (() => {
          class at extends Mt {
            constructor(ee, Me) {
              super(ee),
                (this._ngZone = Me),
                (this._keydownListener = je => {
                  const De = this._attachedOverlays;
                  for (let ye = De.length - 1; ye > -1; ye--)
                    if (De[ye]._keydownEvents.observers.length > 0) {
                      const H = De[ye]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => H.next(je))
                        : H.next(je);
                      break;
                    }
                });
            }
            add(ee) {
              super.add(ee),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          'keydown',
                          this._keydownListener,
                        ),
                      )
                    : this._document.body.addEventListener(
                        'keydown',
                        this._keydownListener,
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  'keydown',
                  this._keydownListener,
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(L.LFG(x.K0), L.LFG(L.R0b, 8));
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })(),
        ze = (() => {
          class at extends Mt {
            constructor(ee, Me, je) {
              super(ee),
                (this._platform = Me),
                (this._ngZone = je),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = De => {
                  this._pointerDownEventTarget = (0, te.sA)(De);
                }),
                (this._clickListener = De => {
                  const ye = (0, te.sA)(De),
                    H =
                      'click' === De.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : ye;
                  this._pointerDownEventTarget = null;
                  const ke = this._attachedOverlays.slice();
                  for (let he = ke.length - 1; he > -1; he--) {
                    const ge = ke[he];
                    if (
                      ge._outsidePointerEvents.observers.length < 1 ||
                      !ge.hasAttached()
                    )
                      continue;
                    if (
                      ge.overlayElement.contains(ye) ||
                      ge.overlayElement.contains(H)
                    )
                      break;
                    const pe = ge._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => pe.next(De))
                      : pe.next(De);
                  }
                });
            }
            add(ee) {
              if ((super.add(ee), !this._isAttached)) {
                const Me = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(Me),
                    )
                  : this._addEventListeners(Me),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = Me.style.cursor),
                    (Me.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const ee = this._document.body;
                ee.removeEventListener(
                  'pointerdown',
                  this._pointerDownListener,
                  !0,
                ),
                  ee.removeEventListener('click', this._clickListener, !0),
                  ee.removeEventListener('auxclick', this._clickListener, !0),
                  ee.removeEventListener(
                    'contextmenu',
                    this._clickListener,
                    !0,
                  ),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((ee.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(ee) {
              ee.addEventListener('pointerdown', this._pointerDownListener, !0),
                ee.addEventListener('click', this._clickListener, !0),
                ee.addEventListener('auxclick', this._clickListener, !0),
                ee.addEventListener('contextmenu', this._clickListener, !0);
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(L.LFG(x.K0), L.LFG(te.t4), L.LFG(L.R0b, 8));
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })(),
        be = (() => {
          class at {
            constructor(ee, Me) {
              (this._platform = Me), (this._document = ee);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const ee = 'cdk-overlay-container';
              if (this._platform.isBrowser || (0, te.Oy)()) {
                const je = this._document.querySelectorAll(
                  `.${ee}[platform="server"], .${ee}[platform="test"]`,
                );
                for (let De = 0; De < je.length; De++) je[De].remove();
              }
              const Me = this._document.createElement('div');
              Me.classList.add(ee),
                (0, te.Oy)()
                  ? Me.setAttribute('platform', 'test')
                  : this._platform.isBrowser ||
                    Me.setAttribute('platform', 'server'),
                this._document.body.appendChild(Me),
                (this._containerElement = Me);
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(L.LFG(x.K0), L.LFG(te.t4));
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })();
      class Ue {
        constructor(Y, ee, Me, je, De, ye, H, ke, he, ge = !1) {
          (this._portalOutlet = Y),
            (this._host = ee),
            (this._pane = Me),
            (this._config = je),
            (this._ngZone = De),
            (this._keyboardDispatcher = ye),
            (this._document = H),
            (this._location = ke),
            (this._outsideClickDispatcher = he),
            (this._animationsDisabled = ge),
            (this._backdropElement = null),
            (this._backdropClick = new re.x()),
            (this._attachments = new re.x()),
            (this._detachments = new re.x()),
            (this._locationChanges = Ne.w0.EMPTY),
            (this._backdropClickHandler = pe => this._backdropClick.next(pe)),
            (this._backdropTransitionendHandler = pe => {
              this._disposeBackdrop(pe.target);
            }),
            (this._keydownEvents = new re.x()),
            (this._outsidePointerEvents = new re.x()),
            je.scrollStrategy &&
              ((this._scrollStrategy = je.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = je.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(Y) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const ee = this._portalOutlet.attach(Y);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, ve.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose(),
              )),
            this._outsideClickDispatcher.add(this),
            'function' == typeof ee?.onDestroy &&
              ee.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach()),
                  );
              }),
            ee
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const Y = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            Y
          );
        }
        dispose() {
          const Y = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            Y && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(Y) {
          Y !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = Y),
            this.hasAttached() && (Y.attach(this), this.updatePosition()));
        }
        updateSize(Y) {
          (this._config = { ...this._config, ...Y }), this._updateElementSize();
        }
        setDirection(Y) {
          (this._config = { ...this._config, direction: Y }),
            this._updateElementDirection();
        }
        addPanelClass(Y) {
          this._pane && this._toggleClasses(this._pane, Y, !0);
        }
        removePanelClass(Y) {
          this._pane && this._toggleClasses(this._pane, Y, !1);
        }
        getDirection() {
          const Y = this._config.direction;
          return Y ? ('string' == typeof Y ? Y : Y.value) : 'ltr';
        }
        updateScrollStrategy(Y) {
          Y !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = Y),
            this.hasAttached() && (Y.attach(this), Y.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const Y = this._pane.style;
          (Y.width = (0, ne.HM)(this._config.width)),
            (Y.height = (0, ne.HM)(this._config.height)),
            (Y.minWidth = (0, ne.HM)(this._config.minWidth)),
            (Y.minHeight = (0, ne.HM)(this._config.minHeight)),
            (Y.maxWidth = (0, ne.HM)(this._config.maxWidth)),
            (Y.maxHeight = (0, ne.HM)(this._config.maxHeight));
        }
        _togglePointerEvents(Y) {
          this._pane.style.pointerEvents = Y ? '' : 'none';
        }
        _attachBackdrop() {
          const Y = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                'cdk-overlay-backdrop-noop-animation',
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0,
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host,
            ),
            this._backdropElement.addEventListener(
              'click',
              this._backdropClickHandler,
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < 'u'
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(Y);
                  });
                })
              : this._backdropElement.classList.add(Y);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const Y = this._backdropElement;
          if (Y) {
            if (this._animationsDisabled) return void this._disposeBackdrop(Y);
            Y.classList.remove('cdk-overlay-backdrop-showing'),
              this._ngZone.runOutsideAngular(() => {
                Y.addEventListener(
                  'transitionend',
                  this._backdropTransitionendHandler,
                );
              }),
              (Y.style.pointerEvents = 'none'),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(Y);
                }, 500),
              ));
          }
        }
        _toggleClasses(Y, ee, Me) {
          const je = (0, ne.Eq)(ee || []).filter(De => !!De);
          je.length &&
            (Me ? Y.classList.add(...je) : Y.classList.remove(...je));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const Y = this._ngZone.onStable
              .pipe((0, ue.R)((0, He.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1,
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  Y.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const Y = this._scrollStrategy;
          Y && (Y.disable(), Y.detach && Y.detach());
        }
        _disposeBackdrop(Y) {
          Y &&
            (Y.removeEventListener('click', this._backdropClickHandler),
            Y.removeEventListener(
              'transitionend',
              this._backdropTransitionendHandler,
            ),
            Y.remove(),
            this._backdropElement === Y && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const Ce = 'cdk-overlay-connected-position-bounding-box',
        Pe = /([A-Za-z%]+)$/;
      class Le {
        get positions() {
          return this._preferredPositions;
        }
        constructor(Y, ee, Me, je, De) {
          (this._viewportRuler = ee),
            (this._document = Me),
            (this._platform = je),
            (this._overlayContainer = De),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new re.x()),
            (this._resizeSubscription = Ne.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(Y);
        }
        attach(Y) {
          this._validatePositions(),
            Y.hostElement.classList.add(Ce),
            (this._overlayRef = Y),
            (this._boundingBox = Y.hostElement),
            (this._pane = Y.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const Y = this._originRect,
            ee = this._overlayRect,
            Me = this._viewportRect,
            je = this._containerRect,
            De = [];
          let ye;
          for (let H of this._preferredPositions) {
            let ke = this._getOriginPoint(Y, je, H),
              he = this._getOverlayPoint(ke, ee, H),
              ge = this._getOverlayFit(he, ee, Me, H);
            if (ge.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(H, ke);
            this._canFitWithFlexibleDimensions(ge, he, Me)
              ? De.push({
                  position: H,
                  origin: ke,
                  overlayRect: ee,
                  boundingBoxRect: this._calculateBoundingBoxRect(ke, H),
                })
              : (!ye || ye.overlayFit.visibleArea < ge.visibleArea) &&
                (ye = {
                  overlayFit: ge,
                  overlayPoint: he,
                  originPoint: ke,
                  position: H,
                  overlayRect: ee,
                });
          }
          if (De.length) {
            let H = null,
              ke = -1;
            for (const he of De) {
              const ge =
                he.boundingBoxRect.width *
                he.boundingBoxRect.height *
                (he.position.weight || 1);
              ge > ke && ((ke = ge), (H = he));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(H.position, H.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(ye.position, ye.originPoint)
            );
          this._applyPosition(ye.position, ye.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Ye(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(Ce),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const Y = this._lastPosition;
          if (Y) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const ee = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              Y,
            );
            this._applyPosition(Y, ee);
          } else this.apply();
        }
        withScrollableContainers(Y) {
          return (this._scrollables = Y), this;
        }
        withPositions(Y) {
          return (
            (this._preferredPositions = Y),
            -1 === Y.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(Y) {
          return (this._viewportMargin = Y), this;
        }
        withFlexibleDimensions(Y = !0) {
          return (this._hasFlexibleDimensions = Y), this;
        }
        withGrowAfterOpen(Y = !0) {
          return (this._growAfterOpen = Y), this;
        }
        withPush(Y = !0) {
          return (this._canPush = Y), this;
        }
        withLockedPosition(Y = !0) {
          return (this._positionLocked = Y), this;
        }
        setOrigin(Y) {
          return (this._origin = Y), this;
        }
        withDefaultOffsetX(Y) {
          return (this._offsetX = Y), this;
        }
        withDefaultOffsetY(Y) {
          return (this._offsetY = Y), this;
        }
        withTransformOriginOn(Y) {
          return (this._transformOriginSelector = Y), this;
        }
        _getOriginPoint(Y, ee, Me) {
          let je, De;
          if ('center' == Me.originX) je = Y.left + Y.width / 2;
          else {
            const ye = this._isRtl() ? Y.right : Y.left,
              H = this._isRtl() ? Y.left : Y.right;
            je = 'start' == Me.originX ? ye : H;
          }
          return (
            ee.left < 0 && (je -= ee.left),
            (De =
              'center' == Me.originY
                ? Y.top + Y.height / 2
                : 'top' == Me.originY
                ? Y.top
                : Y.bottom),
            ee.top < 0 && (De -= ee.top),
            { x: je, y: De }
          );
        }
        _getOverlayPoint(Y, ee, Me) {
          let je, De;
          return (
            (je =
              'center' == Me.overlayX
                ? -ee.width / 2
                : 'start' === Me.overlayX
                ? this._isRtl()
                  ? -ee.width
                  : 0
                : this._isRtl()
                ? 0
                : -ee.width),
            (De =
              'center' == Me.overlayY
                ? -ee.height / 2
                : 'top' == Me.overlayY
                ? 0
                : -ee.height),
            { x: Y.x + je, y: Y.y + De }
          );
        }
        _getOverlayFit(Y, ee, Me, je) {
          const De = We(ee);
          let { x: ye, y: H } = Y,
            ke = this._getOffset(je, 'x'),
            he = this._getOffset(je, 'y');
          ke && (ye += ke), he && (H += he);
          let nt = 0 - H,
            wt = H + De.height - Me.height,
            Ot = this._subtractOverflows(
              De.width,
              0 - ye,
              ye + De.width - Me.width,
            ),
            Dn = this._subtractOverflows(De.height, nt, wt),
            Oe = Ot * Dn;
          return {
            visibleArea: Oe,
            isCompletelyWithinViewport: De.width * De.height === Oe,
            fitsInViewportVertically: Dn === De.height,
            fitsInViewportHorizontally: Ot == De.width,
          };
        }
        _canFitWithFlexibleDimensions(Y, ee, Me) {
          if (this._hasFlexibleDimensions) {
            const je = Me.bottom - ee.y,
              De = Me.right - ee.x,
              ye = dt(this._overlayRef.getConfig().minHeight),
              H = dt(this._overlayRef.getConfig().minWidth);
            return (
              (Y.fitsInViewportVertically || (null != ye && ye <= je)) &&
              (Y.fitsInViewportHorizontally || (null != H && H <= De))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(Y, ee, Me) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: Y.x + this._previousPushAmount.x,
              y: Y.y + this._previousPushAmount.y,
            };
          const je = We(ee),
            De = this._viewportRect,
            ye = Math.max(Y.x + je.width - De.width, 0),
            H = Math.max(Y.y + je.height - De.height, 0),
            ke = Math.max(De.top - Me.top - Y.y, 0),
            he = Math.max(De.left - Me.left - Y.x, 0);
          let ge = 0,
            pe = 0;
          return (
            (ge =
              je.width <= De.width
                ? he || -ye
                : Y.x < this._viewportMargin
                ? De.left - Me.left - Y.x
                : 0),
            (pe =
              je.height <= De.height
                ? ke || -H
                : Y.y < this._viewportMargin
                ? De.top - Me.top - Y.y
                : 0),
            (this._previousPushAmount = { x: ge, y: pe }),
            { x: Y.x + ge, y: Y.y + pe }
          );
        }
        _applyPosition(Y, ee) {
          if (
            (this._setTransformOrigin(Y),
            this._setOverlayElementStyles(ee, Y),
            this._setBoundingBoxStyles(ee, Y),
            Y.panelClass && this._addPanelClasses(Y.panelClass),
            (this._lastPosition = Y),
            this._positionChanges.observers.length)
          ) {
            const Me = this._getScrollVisibility(),
              je = new Ut(Y, Me);
            this._positionChanges.next(je);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(Y) {
          if (!this._transformOriginSelector) return;
          const ee = this._boundingBox.querySelectorAll(
            this._transformOriginSelector,
          );
          let Me,
            je = Y.overlayY;
          Me =
            'center' === Y.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === Y.overlayX
                ? 'right'
                : 'left'
              : 'start' === Y.overlayX
              ? 'left'
              : 'right';
          for (let De = 0; De < ee.length; De++)
            ee[De].style.transformOrigin = `${Me} ${je}`;
        }
        _calculateBoundingBoxRect(Y, ee) {
          const Me = this._viewportRect,
            je = this._isRtl();
          let De, ye, H, ge, pe, nt;
          if ('top' === ee.overlayY)
            (ye = Y.y), (De = Me.height - ye + this._viewportMargin);
          else if ('bottom' === ee.overlayY)
            (H = Me.height - Y.y + 2 * this._viewportMargin),
              (De = Me.height - H + this._viewportMargin);
          else {
            const wt = Math.min(Me.bottom - Y.y + Me.top, Y.y),
              Ot = this._lastBoundingBoxSize.height;
            (De = 2 * wt),
              (ye = Y.y - wt),
              De > Ot &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (ye = Y.y - Ot / 2);
          }
          if (('end' === ee.overlayX && !je) || ('start' === ee.overlayX && je))
            (nt = Me.width - Y.x + this._viewportMargin),
              (ge = Y.x - this._viewportMargin);
          else if (
            ('start' === ee.overlayX && !je) ||
            ('end' === ee.overlayX && je)
          )
            (pe = Y.x), (ge = Me.right - Y.x);
          else {
            const wt = Math.min(Me.right - Y.x + Me.left, Y.x),
              Ot = this._lastBoundingBoxSize.width;
            (ge = 2 * wt),
              (pe = Y.x - wt),
              ge > Ot &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (pe = Y.x - Ot / 2);
          }
          return {
            top: ye,
            left: pe,
            bottom: H,
            right: nt,
            width: ge,
            height: De,
          };
        }
        _setBoundingBoxStyles(Y, ee) {
          const Me = this._calculateBoundingBoxRect(Y, ee);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((Me.height = Math.min(
              Me.height,
              this._lastBoundingBoxSize.height,
            )),
            (Me.width = Math.min(Me.width, this._lastBoundingBoxSize.width)));
          const je = {};
          if (this._hasExactPosition())
            (je.top = je.left = '0'),
              (je.bottom = je.right = je.maxHeight = je.maxWidth = ''),
              (je.width = je.height = '100%');
          else {
            const De = this._overlayRef.getConfig().maxHeight,
              ye = this._overlayRef.getConfig().maxWidth;
            (je.height = (0, ne.HM)(Me.height)),
              (je.top = (0, ne.HM)(Me.top)),
              (je.bottom = (0, ne.HM)(Me.bottom)),
              (je.width = (0, ne.HM)(Me.width)),
              (je.left = (0, ne.HM)(Me.left)),
              (je.right = (0, ne.HM)(Me.right)),
              (je.alignItems =
                'center' === ee.overlayX
                  ? 'center'
                  : 'end' === ee.overlayX
                  ? 'flex-end'
                  : 'flex-start'),
              (je.justifyContent =
                'center' === ee.overlayY
                  ? 'center'
                  : 'bottom' === ee.overlayY
                  ? 'flex-end'
                  : 'flex-start'),
              De && (je.maxHeight = (0, ne.HM)(De)),
              ye && (je.maxWidth = (0, ne.HM)(ye));
          }
          (this._lastBoundingBoxSize = Me), Ye(this._boundingBox.style, je);
        }
        _resetBoundingBoxStyles() {
          Ye(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          Ye(this._pane.style, {
            top: '',
            left: '',
            bottom: '',
            right: '',
            position: '',
            transform: '',
          });
        }
        _setOverlayElementStyles(Y, ee) {
          const Me = {},
            je = this._hasExactPosition(),
            De = this._hasFlexibleDimensions,
            ye = this._overlayRef.getConfig();
          if (je) {
            const ge = this._viewportRuler.getViewportScrollPosition();
            Ye(Me, this._getExactOverlayY(ee, Y, ge)),
              Ye(Me, this._getExactOverlayX(ee, Y, ge));
          } else Me.position = 'static';
          let H = '',
            ke = this._getOffset(ee, 'x'),
            he = this._getOffset(ee, 'y');
          ke && (H += `translateX(${ke}px) `),
            he && (H += `translateY(${he}px)`),
            (Me.transform = H.trim()),
            ye.maxHeight &&
              (je
                ? (Me.maxHeight = (0, ne.HM)(ye.maxHeight))
                : De && (Me.maxHeight = '')),
            ye.maxWidth &&
              (je
                ? (Me.maxWidth = (0, ne.HM)(ye.maxWidth))
                : De && (Me.maxWidth = '')),
            Ye(this._pane.style, Me);
        }
        _getExactOverlayY(Y, ee, Me) {
          let je = { top: '', bottom: '' },
            De = this._getOverlayPoint(ee, this._overlayRect, Y);
          return (
            this._isPushed &&
              (De = this._pushOverlayOnScreen(De, this._overlayRect, Me)),
            'bottom' === Y.overlayY
              ? (je.bottom =
                  this._document.documentElement.clientHeight -
                  (De.y + this._overlayRect.height) +
                  'px')
              : (je.top = (0, ne.HM)(De.y)),
            je
          );
        }
        _getExactOverlayX(Y, ee, Me) {
          let ye,
            je = { left: '', right: '' },
            De = this._getOverlayPoint(ee, this._overlayRect, Y);
          return (
            this._isPushed &&
              (De = this._pushOverlayOnScreen(De, this._overlayRect, Me)),
            (ye = this._isRtl()
              ? 'end' === Y.overlayX
                ? 'left'
                : 'right'
              : 'end' === Y.overlayX
              ? 'right'
              : 'left'),
            'right' === ye
              ? (je.right =
                  this._document.documentElement.clientWidth -
                  (De.x + this._overlayRect.width) +
                  'px')
              : (je.left = (0, ne.HM)(De.x)),
            je
          );
        }
        _getScrollVisibility() {
          const Y = this._getOriginRect(),
            ee = this._pane.getBoundingClientRect(),
            Me = this._scrollables.map(je =>
              je.getElementRef().nativeElement.getBoundingClientRect(),
            );
          return {
            isOriginClipped: se(Y, Me),
            isOriginOutsideView: W(Y, Me),
            isOverlayClipped: se(ee, Me),
            isOverlayOutsideView: W(ee, Me),
          };
        }
        _subtractOverflows(Y, ...ee) {
          return ee.reduce((Me, je) => Me - Math.max(je, 0), Y);
        }
        _getNarrowedViewportRect() {
          const Y = this._document.documentElement.clientWidth,
            ee = this._document.documentElement.clientHeight,
            Me = this._viewportRuler.getViewportScrollPosition();
          return {
            top: Me.top + this._viewportMargin,
            left: Me.left + this._viewportMargin,
            right: Me.left + Y - this._viewportMargin,
            bottom: Me.top + ee - this._viewportMargin,
            width: Y - 2 * this._viewportMargin,
            height: ee - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(Y, ee) {
          return 'x' === ee
            ? null == Y.offsetX
              ? this._offsetX
              : Y.offsetX
            : null == Y.offsetY
            ? this._offsetY
            : Y.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(Y) {
          this._pane &&
            (0, ne.Eq)(Y).forEach(ee => {
              '' !== ee &&
                -1 === this._appliedPanelClasses.indexOf(ee) &&
                (this._appliedPanelClasses.push(ee),
                this._pane.classList.add(ee));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach(Y => {
              this._pane.classList.remove(Y);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const Y = this._origin;
          if (Y instanceof L.SBq)
            return Y.nativeElement.getBoundingClientRect();
          if (Y instanceof Element) return Y.getBoundingClientRect();
          const ee = Y.width || 0,
            Me = Y.height || 0;
          return {
            top: Y.y,
            bottom: Y.y + Me,
            left: Y.x,
            right: Y.x + ee,
            height: Me,
            width: ee,
          };
        }
      }
      function Ye(at, Y) {
        for (let ee in Y) Y.hasOwnProperty(ee) && (at[ee] = Y[ee]);
        return at;
      }
      function dt(at) {
        if ('number' != typeof at && null != at) {
          const [Y, ee] = at.split(Pe);
          return ee && 'px' !== ee ? null : parseFloat(Y);
        }
        return at || null;
      }
      function We(at) {
        return {
          top: Math.floor(at.top),
          right: Math.floor(at.right),
          bottom: Math.floor(at.bottom),
          left: Math.floor(at.left),
          width: Math.floor(at.width),
          height: Math.floor(at.height),
        };
      }
      const nn = 'cdk-global-overlay-wrapper';
      class a {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._alignItems = ''),
            (this._xPosition = ''),
            (this._xOffset = ''),
            (this._width = ''),
            (this._height = ''),
            (this._isDisposed = !1);
        }
        attach(Y) {
          const ee = Y.getConfig();
          (this._overlayRef = Y),
            this._width && !ee.width && Y.updateSize({ width: this._width }),
            this._height &&
              !ee.height &&
              Y.updateSize({ height: this._height }),
            Y.hostElement.classList.add(nn),
            (this._isDisposed = !1);
        }
        top(Y = '') {
          return (
            (this._bottomOffset = ''),
            (this._topOffset = Y),
            (this._alignItems = 'flex-start'),
            this
          );
        }
        left(Y = '') {
          return (this._xOffset = Y), (this._xPosition = 'left'), this;
        }
        bottom(Y = '') {
          return (
            (this._topOffset = ''),
            (this._bottomOffset = Y),
            (this._alignItems = 'flex-end'),
            this
          );
        }
        right(Y = '') {
          return (this._xOffset = Y), (this._xPosition = 'right'), this;
        }
        start(Y = '') {
          return (this._xOffset = Y), (this._xPosition = 'start'), this;
        }
        end(Y = '') {
          return (this._xOffset = Y), (this._xPosition = 'end'), this;
        }
        width(Y = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: Y })
              : (this._width = Y),
            this
          );
        }
        height(Y = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: Y })
              : (this._height = Y),
            this
          );
        }
        centerHorizontally(Y = '') {
          return this.left(Y), (this._xPosition = 'center'), this;
        }
        centerVertically(Y = '') {
          return this.top(Y), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const Y = this._overlayRef.overlayElement.style,
            ee = this._overlayRef.hostElement.style,
            Me = this._overlayRef.getConfig(),
            { width: je, height: De, maxWidth: ye, maxHeight: H } = Me,
            ke = !(
              ('100%' !== je && '100vw' !== je) ||
              (ye && '100%' !== ye && '100vw' !== ye)
            ),
            he = !(
              ('100%' !== De && '100vh' !== De) ||
              (H && '100%' !== H && '100vh' !== H)
            ),
            ge = this._xPosition,
            pe = this._xOffset,
            nt = 'rtl' === this._overlayRef.getConfig().direction;
          let wt = '',
            Ot = '',
            Dn = '';
          ke
            ? (Dn = 'flex-start')
            : 'center' === ge
            ? ((Dn = 'center'), nt ? (Ot = pe) : (wt = pe))
            : nt
            ? 'left' === ge || 'end' === ge
              ? ((Dn = 'flex-end'), (wt = pe))
              : ('right' === ge || 'start' === ge) &&
                ((Dn = 'flex-start'), (Ot = pe))
            : 'left' === ge || 'start' === ge
            ? ((Dn = 'flex-start'), (wt = pe))
            : ('right' === ge || 'end' === ge) &&
              ((Dn = 'flex-end'), (Ot = pe)),
            (Y.position = this._cssPosition),
            (Y.marginLeft = ke ? '0' : wt),
            (Y.marginTop = he ? '0' : this._topOffset),
            (Y.marginBottom = this._bottomOffset),
            (Y.marginRight = ke ? '0' : Ot),
            (ee.justifyContent = Dn),
            (ee.alignItems = he ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const Y = this._overlayRef.overlayElement.style,
            ee = this._overlayRef.hostElement,
            Me = ee.style;
          ee.classList.remove(nn),
            (Me.justifyContent =
              Me.alignItems =
              Y.marginTop =
              Y.marginBottom =
              Y.marginLeft =
              Y.marginRight =
              Y.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let ft = (() => {
          class at {
            constructor(ee, Me, je, De) {
              (this._viewportRuler = ee),
                (this._document = Me),
                (this._platform = je),
                (this._overlayContainer = De);
            }
            global() {
              return new a();
            }
            flexibleConnectedTo(ee) {
              return new Le(
                ee,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer,
              );
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(
                L.LFG(s.rL),
                L.LFG(x.K0),
                L.LFG(te.t4),
                L.LFG(be),
              );
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })(),
        $t = 0,
        et = (() => {
          class at {
            constructor(ee, Me, je, De, ye, H, ke, he, ge, pe, nt, wt) {
              (this.scrollStrategies = ee),
                (this._overlayContainer = Me),
                (this._componentFactoryResolver = je),
                (this._positionBuilder = De),
                (this._keyboardDispatcher = ye),
                (this._injector = H),
                (this._ngZone = ke),
                (this._document = he),
                (this._directionality = ge),
                (this._location = pe),
                (this._outsideClickDispatcher = nt),
                (this._animationsModuleType = wt);
            }
            create(ee) {
              const Me = this._createHostElement(),
                je = this._createPaneElement(Me),
                De = this._createPortalOutlet(je),
                ye = new Ae(ee);
              return (
                (ye.direction = ye.direction || this._directionality.value),
                new Ue(
                  De,
                  Me,
                  je,
                  ye,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  'NoopAnimations' === this._animationsModuleType,
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(ee) {
              const Me = this._document.createElement('div');
              return (
                (Me.id = 'cdk-overlay-' + $t++),
                Me.classList.add('cdk-overlay-pane'),
                ee.appendChild(Me),
                Me
              );
            }
            _createHostElement() {
              const ee = this._document.createElement('div');
              return (
                this._overlayContainer.getContainerElement().appendChild(ee), ee
              );
            }
            _createPortalOutlet(ee) {
              return (
                this._appRef || (this._appRef = this._injector.get(L.z2F)),
                new fe.u0(
                  ee,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document,
                )
              );
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(
                L.LFG(X),
                L.LFG(be),
                L.LFG(L._Vd),
                L.LFG(ft),
                L.LFG($e),
                L.LFG(L.zs3),
                L.LFG(L.R0b),
                L.LFG(x.K0),
                L.LFG(le.Is),
                L.LFG(x.Ye),
                L.LFG(ze),
                L.LFG(L.QbO, 8),
              );
            }),
            (at.ɵprov = L.Yz7({
              token: at,
              factory: at.ɵfac,
              providedIn: 'root',
            })),
            at
          );
        })();
      const pt = [
          {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top',
          },
          {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'top',
            overlayX: 'end',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'bottom',
            overlayX: 'end',
            overlayY: 'top',
          },
        ],
        Wt = new L.OlP('cdk-connected-overlay-scroll-strategy');
      let pn = (() => {
          class at {
            constructor(ee) {
              this.elementRef = ee;
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(L.Y36(L.SBq));
            }),
            (at.ɵdir = L.lG2({
              type: at,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
              standalone: !0,
            })),
            at
          );
        })(),
        Sn = (() => {
          class at {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(ee) {
              (this._offsetX = ee),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(ee) {
              (this._offsetY = ee),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(ee) {
              this._hasBackdrop = (0, ne.Ig)(ee);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(ee) {
              this._lockPosition = (0, ne.Ig)(ee);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(ee) {
              this._flexibleDimensions = (0, ne.Ig)(ee);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(ee) {
              this._growAfterOpen = (0, ne.Ig)(ee);
            }
            get push() {
              return this._push;
            }
            set push(ee) {
              this._push = (0, ne.Ig)(ee);
            }
            constructor(ee, Me, je, De, ye) {
              (this._overlay = ee),
                (this._dir = ye),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Ne.w0.EMPTY),
                (this._attachSubscription = Ne.w0.EMPTY),
                (this._detachSubscription = Ne.w0.EMPTY),
                (this._positionSubscription = Ne.w0.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new L.vpe()),
                (this.positionChange = new L.vpe()),
                (this.attach = new L.vpe()),
                (this.detach = new L.vpe()),
                (this.overlayKeydown = new L.vpe()),
                (this.overlayOutsideClick = new L.vpe()),
                (this._templatePortal = new fe.UE(Me, je)),
                (this._scrollStrategyFactory = De),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(ee) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                ee.origin && this.open && this._position.apply()),
                ee.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = pt);
              const ee = (this._overlayRef = this._overlay.create(
                this._buildConfig(),
              ));
              (this._attachSubscription = ee
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = ee
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                ee.keydownEvents().subscribe(Me => {
                  this.overlayKeydown.next(Me),
                    Me.keyCode === ct.hY &&
                      !this.disableClose &&
                      !(0, ct.Vb)(Me) &&
                      (Me.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe(Me => {
                  this.overlayOutsideClick.next(Me);
                });
            }
            _buildConfig() {
              const ee = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                Me = new Ae({
                  direction: this._dir,
                  positionStrategy: ee,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (Me.width = this.width),
                (this.height || 0 === this.height) && (Me.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (Me.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (Me.minHeight = this.minHeight),
                this.backdropClass && (Me.backdropClass = this.backdropClass),
                this.panelClass && (Me.panelClass = this.panelClass),
                Me
              );
            }
            _updatePositionStrategy(ee) {
              const Me = this.positions.map(je => ({
                originX: je.originX,
                originY: je.originY,
                overlayX: je.overlayX,
                overlayY: je.overlayY,
                offsetX: je.offsetX || this.offsetX,
                offsetY: je.offsetY || this.offsetY,
                panelClass: je.panelClass || void 0,
              }));
              return ee
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(Me)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const ee = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin(),
                );
              return this._updatePositionStrategy(ee), ee;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof pn
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe(ee => {
                        this.backdropClick.emit(ee);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (0, ce.o)(() => this.positionChange.observers.length > 0),
                    )
                    .subscribe(ee => {
                      this.positionChange.emit(ee),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (at.ɵfac = function (ee) {
              return new (ee || at)(
                L.Y36(et),
                L.Y36(L.Rgc),
                L.Y36(L.s_b),
                L.Y36(Wt),
                L.Y36(le.Is, 8),
              );
            }),
            (at.ɵdir = L.lG2({
              type: at,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                positionStrategy: [
                  'cdkConnectedOverlayPositionStrategy',
                  'positionStrategy',
                ],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: [
                  'cdkConnectedOverlayBackdropClass',
                  'backdropClass',
                ],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                viewportMargin: [
                  'cdkConnectedOverlayViewportMargin',
                  'viewportMargin',
                ],
                scrollStrategy: [
                  'cdkConnectedOverlayScrollStrategy',
                  'scrollStrategy',
                ],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: [
                  'cdkConnectedOverlayDisableClose',
                  'disableClose',
                ],
                transformOriginSelector: [
                  'cdkConnectedOverlayTransformOriginOn',
                  'transformOriginSelector',
                ],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: [
                  'cdkConnectedOverlayLockPosition',
                  'lockPosition',
                ],
                flexibleDimensions: [
                  'cdkConnectedOverlayFlexibleDimensions',
                  'flexibleDimensions',
                ],
                growAfterOpen: [
                  'cdkConnectedOverlayGrowAfterOpen',
                  'growAfterOpen',
                ],
                push: ['cdkConnectedOverlayPush', 'push'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              standalone: !0,
              features: [L.TTD],
            })),
            at
          );
        })();
      const dn = {
        provide: Wt,
        deps: [et],
        useFactory: function Tn(at) {
          return () => at.scrollStrategies.reposition();
        },
      };
      let kt = (() => {
        class at {}
        return (
          (at.ɵfac = function (ee) {
            return new (ee || at)();
          }),
          (at.ɵmod = L.oAB({ type: at })),
          (at.ɵinj = L.cJS({
            providers: [et, dn],
            imports: [le.vT, fe.eL, s.Cl, s.Cl],
          })),
          at
        );
      })();
    },
    3353: (Pt, Re, D) => {
      D.d(Re, {
        Mq: () => He,
        Oy: () => W,
        _i: () => ct,
        ht: () => lt,
        i$: () => fe,
        kV: () => _t,
        qK: () => ue,
        sA: () => bt,
        t4: () => ne,
      });
      var s = D(4650),
        x = D(6895);
      let L;
      try {
        L = typeof Intl < 'u' && Intl.v8BreakIterator;
      } catch {
        L = !1;
      }
      let de,
        ne = (() => {
          class se {
            constructor(X) {
              (this._platformId = X),
                (this.isBrowser = this._platformId
                  ? (0, x.NF)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !L) &&
                  typeof CSS < 'u' &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !('MSStream' in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (se.ɵfac = function (X) {
              return new (X || se)(s.LFG(s.Lbi));
            }),
            (se.ɵprov = s.Yz7({
              token: se,
              factory: se.ɵfac,
              providedIn: 'root',
            })),
            se
          );
        })();
      const ve = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function ue() {
        if (de) return de;
        if ('object' != typeof document || !document)
          return (de = new Set(ve)), de;
        let se = document.createElement('input');
        return (
          (de = new Set(
            ve.filter(ie => (se.setAttribute('type', ie), se.type === ie)),
          )),
          de
        );
      }
      let ce, re, Ne, vt;
      function fe(se) {
        return (function le() {
          if (null == ce && typeof window < 'u')
            try {
              window.addEventListener(
                'test',
                null,
                Object.defineProperty({}, 'passive', { get: () => (ce = !0) }),
              );
            } finally {
              ce = ce || !1;
            }
          return ce;
        })()
          ? se
          : !!se.capture;
      }
      function He() {
        if (null == Ne) {
          if (
            'object' != typeof document ||
            !document ||
            'function' != typeof Element ||
            !Element
          )
            return (Ne = !1), Ne;
          if ('scrollBehavior' in document.documentElement.style) Ne = !0;
          else {
            const se = Element.prototype.scrollTo;
            Ne = !!se && !/\{\s*\[native code\]\s*\}/.test(se.toString());
          }
        }
        return Ne;
      }
      function ct() {
        if ('object' != typeof document || !document) return 0;
        if (null == re) {
          const se = document.createElement('div'),
            ie = se.style;
          (se.dir = 'rtl'),
            (ie.width = '1px'),
            (ie.overflow = 'auto'),
            (ie.visibility = 'hidden'),
            (ie.pointerEvents = 'none'),
            (ie.position = 'absolute');
          const X = document.createElement('div'),
            Ae = X.style;
          (Ae.width = '2px'),
            (Ae.height = '1px'),
            se.appendChild(X),
            document.body.appendChild(se),
            (re = 0),
            0 === se.scrollLeft &&
              ((se.scrollLeft = 1), (re = 0 === se.scrollLeft ? 1 : 2)),
            se.remove();
        }
        return re;
      }
      function _t(se) {
        if (
          (function Be() {
            if (null == vt) {
              const se = typeof document < 'u' ? document.head : null;
              vt = !(!se || (!se.createShadowRoot && !se.attachShadow));
            }
            return vt;
          })()
        ) {
          const ie = se.getRootNode ? se.getRootNode() : null;
          if (typeof ShadowRoot < 'u' && ShadowRoot && ie instanceof ShadowRoot)
            return ie;
        }
        return null;
      }
      function lt() {
        let se =
          typeof document < 'u' && document ? document.activeElement : null;
        for (; se && se.shadowRoot; ) {
          const ie = se.shadowRoot.activeElement;
          if (ie === se) break;
          se = ie;
        }
        return se;
      }
      function bt(se) {
        return se.composedPath ? se.composedPath()[0] : se.target;
      }
      function W() {
        return (
          (typeof __karma__ < 'u' && !!__karma__) ||
          (typeof jasmine < 'u' && !!jasmine) ||
          (typeof jest < 'u' && !!jest) ||
          (typeof Mocha < 'u' && !!Mocha)
        );
      }
    },
    4080: (Pt, Re, D) => {
      D.d(Re, {
        C5: () => le,
        Pl: () => lt,
        UE: () => fe,
        eL: () => W,
        en: () => Ne,
        u0: () => ct,
      });
      var s = D(4650),
        x = D(6895);
      class ce {
        attach(X) {
          return (this._attachedHost = X), X.attach(this);
        }
        detach() {
          let X = this._attachedHost;
          null != X && ((this._attachedHost = null), X.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(X) {
          this._attachedHost = X;
        }
      }
      class le extends ce {
        constructor(X, Ae, Qe, ut, Ut) {
          super(),
            (this.component = X),
            (this.viewContainerRef = Ae),
            (this.injector = Qe),
            (this.componentFactoryResolver = ut),
            (this.projectableNodes = Ut);
        }
      }
      class fe extends ce {
        constructor(X, Ae, Qe, ut) {
          super(),
            (this.templateRef = X),
            (this.viewContainerRef = Ae),
            (this.context = Qe),
            (this.injector = ut);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(X, Ae = this.context) {
          return (this.context = Ae), super.attach(X);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class re extends ce {
        constructor(X) {
          super(), (this.element = X instanceof s.SBq ? X.nativeElement : X);
        }
      }
      class Ne {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(X) {
          return X instanceof le
            ? ((this._attachedPortal = X), this.attachComponentPortal(X))
            : X instanceof fe
            ? ((this._attachedPortal = X), this.attachTemplatePortal(X))
            : this.attachDomPortal && X instanceof re
            ? ((this._attachedPortal = X), this.attachDomPortal(X))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(X) {
          this._disposeFn = X;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class ct extends Ne {
        constructor(X, Ae, Qe, ut, Ut) {
          super(),
            (this.outletElement = X),
            (this._componentFactoryResolver = Ae),
            (this._appRef = Qe),
            (this._defaultInjector = ut),
            (this.attachDomPortal = Et => {
              const Yt = Et.element,
                Mt = this._document.createComment('dom-portal');
              Yt.parentNode.insertBefore(Mt, Yt),
                this.outletElement.appendChild(Yt),
                (this._attachedPortal = Et),
                super.setDisposeFn(() => {
                  Mt.parentNode && Mt.parentNode.replaceChild(Yt, Mt);
                });
            }),
            (this._document = Ut);
        }
        attachComponentPortal(X) {
          const Qe = (
            X.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(X.component);
          let ut;
          return (
            X.viewContainerRef
              ? ((ut = X.viewContainerRef.createComponent(
                  Qe,
                  X.viewContainerRef.length,
                  X.injector || X.viewContainerRef.injector,
                  X.projectableNodes || void 0,
                )),
                this.setDisposeFn(() => ut.destroy()))
              : ((ut = Qe.create(
                  X.injector || this._defaultInjector || s.zs3.NULL,
                )),
                this._appRef.attachView(ut.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(ut.hostView),
                    ut.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(ut)),
            (this._attachedPortal = X),
            ut
          );
        }
        attachTemplatePortal(X) {
          let Ae = X.viewContainerRef,
            Qe = Ae.createEmbeddedView(X.templateRef, X.context, {
              injector: X.injector,
            });
          return (
            Qe.rootNodes.forEach(ut => this.outletElement.appendChild(ut)),
            Qe.detectChanges(),
            this.setDisposeFn(() => {
              let ut = Ae.indexOf(Qe);
              -1 !== ut && Ae.remove(ut);
            }),
            (this._attachedPortal = X),
            Qe
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(X) {
          return X.hostView.rootNodes[0];
        }
      }
      let lt = (() => {
          class ie extends Ne {
            constructor(Ae, Qe, ut) {
              super(),
                (this._componentFactoryResolver = Ae),
                (this._viewContainerRef = Qe),
                (this._isInitialized = !1),
                (this.attached = new s.vpe()),
                (this.attachDomPortal = Ut => {
                  const Et = Ut.element,
                    Yt = this._document.createComment('dom-portal');
                  Ut.setAttachedHost(this),
                    Et.parentNode.insertBefore(Yt, Et),
                    this._getRootNode().appendChild(Et),
                    (this._attachedPortal = Ut),
                    super.setDisposeFn(() => {
                      Yt.parentNode && Yt.parentNode.replaceChild(Et, Yt);
                    });
                }),
                (this._document = ut);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(Ae) {
              (this.hasAttached() && !Ae && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                Ae && super.attach(Ae),
                (this._attachedPortal = Ae || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(Ae) {
              Ae.setAttachedHost(this);
              const Qe =
                  null != Ae.viewContainerRef
                    ? Ae.viewContainerRef
                    : this._viewContainerRef,
                Ut = (
                  Ae.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(Ae.component),
                Et = Qe.createComponent(
                  Ut,
                  Qe.length,
                  Ae.injector || Qe.injector,
                  Ae.projectableNodes || void 0,
                );
              return (
                Qe !== this._viewContainerRef &&
                  this._getRootNode().appendChild(Et.hostView.rootNodes[0]),
                super.setDisposeFn(() => Et.destroy()),
                (this._attachedPortal = Ae),
                (this._attachedRef = Et),
                this.attached.emit(Et),
                Et
              );
            }
            attachTemplatePortal(Ae) {
              Ae.setAttachedHost(this);
              const Qe = this._viewContainerRef.createEmbeddedView(
                Ae.templateRef,
                Ae.context,
                { injector: Ae.injector },
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = Ae),
                (this._attachedRef = Qe),
                this.attached.emit(Qe),
                Qe
              );
            }
            _getRootNode() {
              const Ae = this._viewContainerRef.element.nativeElement;
              return Ae.nodeType === Ae.ELEMENT_NODE ? Ae : Ae.parentNode;
            }
          }
          return (
            (ie.ɵfac = function (Ae) {
              return new (Ae || ie)(s.Y36(s._Vd), s.Y36(s.s_b), s.Y36(x.K0));
            }),
            (ie.ɵdir = s.lG2({
              type: ie,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [s.qOj],
            })),
            ie
          );
        })(),
        W = (() => {
          class ie {}
          return (
            (ie.ɵfac = function (Ae) {
              return new (Ae || ie)();
            }),
            (ie.ɵmod = s.oAB({ type: ie })),
            (ie.ɵinj = s.cJS({})),
            ie
          );
        })();
    },
    44: (Pt, Re, D) => {
      D.d(Re, { ZD: () => Me, mF: () => $t, Cl: () => je, rL: () => Wt });
      var s = D(1281),
        x = D(4650),
        L = D(7579),
        ne = D(9646),
        te = D(9751),
        de = D(8421),
        ve = D(5577),
        ue = D(1144),
        ce = D(576),
        le = D(3268);
      const fe = ['addListener', 'removeListener'],
        re = ['addEventListener', 'removeEventListener'],
        Ne = ['on', 'off'];
      function He(De, ye, H, ke) {
        if (((0, ce.m)(H) && ((ke = H), (H = void 0)), ke))
          return He(De, ye, H).pipe((0, le.Z)(ke));
        const [he, ge] = (function _t(De) {
          return (
            (0, ce.m)(De.addEventListener) && (0, ce.m)(De.removeEventListener)
          );
        })(De)
          ? re.map(pe => nt => De[pe](ye, nt, H))
          : (function vt(De) {
              return (0, ce.m)(De.addListener) && (0, ce.m)(De.removeListener);
            })(De)
          ? fe.map(ct(De, ye))
          : (function Be(De) {
              return (0, ce.m)(De.on) && (0, ce.m)(De.off);
            })(De)
          ? Ne.map(ct(De, ye))
          : [];
        if (!he && (0, ue.z)(De))
          return (0, ve.z)(pe => He(pe, ye, H))((0, de.Xf)(De));
        if (!he) throw new TypeError('Invalid event target');
        return new te.y(pe => {
          const nt = (...wt) => pe.next(1 < wt.length ? wt : wt[0]);
          return he(nt), () => ge(nt);
        });
      }
      function ct(De, ye) {
        return H => ke => De[H](ye, ke);
      }
      var lt = D(4408),
        bt = D(727);
      const W = {
        schedule(De) {
          let ye = requestAnimationFrame,
            H = cancelAnimationFrame;
          const { delegate: ke } = W;
          ke &&
            ((ye = ke.requestAnimationFrame), (H = ke.cancelAnimationFrame));
          const he = ye(ge => {
            (H = void 0), De(ge);
          });
          return new bt.w0(() => H?.(he));
        },
        requestAnimationFrame(...De) {
          const { delegate: ye } = W;
          return (ye?.requestAnimationFrame || requestAnimationFrame)(...De);
        },
        cancelAnimationFrame(...De) {
          const { delegate: ye } = W;
          return (ye?.cancelAnimationFrame || cancelAnimationFrame)(...De);
        },
        delegate: void 0,
      };
      var ie = D(640);
      const Ae = new (class X extends ie.v {
        flush(ye) {
          this._active = !0;
          const H = this._scheduled;
          this._scheduled = void 0;
          const { actions: ke } = this;
          let he;
          ye = ye || ke.shift();
          do {
            if ((he = ye.execute(ye.state, ye.delay))) break;
          } while ((ye = ke[0]) && ye.id === H && ke.shift());
          if (((this._active = !1), he)) {
            for (; (ye = ke[0]) && ye.id === H && ke.shift(); )
              ye.unsubscribe();
            throw he;
          }
        }
      })(
        class se extends lt.o {
          constructor(ye, H) {
            super(ye, H), (this.scheduler = ye), (this.work = H);
          }
          requestAsyncId(ye, H, ke = 0) {
            return null !== ke && ke > 0
              ? super.requestAsyncId(ye, H, ke)
              : (ye.actions.push(this),
                ye._scheduled ||
                  (ye._scheduled = W.requestAnimationFrame(() =>
                    ye.flush(void 0),
                  )));
          }
          recycleAsyncId(ye, H, ke = 0) {
            var he;
            if (null != ke ? ke > 0 : this.delay > 0)
              return super.recycleAsyncId(ye, H, ke);
            const { actions: ge } = ye;
            null != H &&
              (null === (he = ge[ge.length - 1]) || void 0 === he
                ? void 0
                : he.id) !== H &&
              (W.cancelAnimationFrame(H), (ye._scheduled = void 0));
          }
        },
      );
      var ut = D(3101),
        Ut = D(4986),
        Et = D(4482),
        Yt = D(5403),
        $e = D(5963);
      function ze(De, ye = Ut.z) {
        return (function Mt(De) {
          return (0, Et.e)((ye, H) => {
            let ke = !1,
              he = null,
              ge = null,
              pe = !1;
            const nt = () => {
                if ((ge?.unsubscribe(), (ge = null), ke)) {
                  ke = !1;
                  const Ot = he;
                  (he = null), H.next(Ot);
                }
                pe && H.complete();
              },
              wt = () => {
                (ge = null), pe && H.complete();
              };
            ye.subscribe(
              (0, Yt.x)(
                H,
                Ot => {
                  (ke = !0),
                    (he = Ot),
                    ge ||
                      (0, de.Xf)(De(Ot)).subscribe((ge = (0, Yt.x)(H, nt, wt)));
                },
                () => {
                  (pe = !0), (!ke || !ge || ge.closed) && H.complete();
                },
              ),
            );
          });
        })(() => (0, $e.H)(De, ye));
      }
      var be = D(9300),
        Ue = D(2722),
        Ce = D(8675),
        Pe = D(3353),
        Le = D(6895),
        Ye = D(445);
      const dt = ['contentWrapper'],
        We = ['*'],
        Gt = new x.OlP('VIRTUAL_SCROLL_STRATEGY');
      let $t = (() => {
          class De {
            constructor(H, ke, he) {
              (this._ngZone = H),
                (this._platform = ke),
                (this._scrolled = new L.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = he);
            }
            register(H) {
              this.scrollContainers.has(H) ||
                this.scrollContainers.set(
                  H,
                  H.elementScrolled().subscribe(() => this._scrolled.next(H)),
                );
            }
            deregister(H) {
              const ke = this.scrollContainers.get(H);
              ke && (ke.unsubscribe(), this.scrollContainers.delete(H));
            }
            scrolled(H = 20) {
              return this._platform.isBrowser
                ? new te.y(ke => {
                    this._globalSubscription || this._addGlobalListener();
                    const he =
                      H > 0
                        ? this._scrolled.pipe(ze(H)).subscribe(ke)
                        : this._scrolled.subscribe(ke);
                    return (
                      this._scrolledCount++,
                      () => {
                        he.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, ne.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((H, ke) => this.deregister(ke)),
                this._scrolled.complete();
            }
            ancestorScrolled(H, ke) {
              const he = this.getAncestorScrollContainers(H);
              return this.scrolled(ke).pipe(
                (0, be.h)(ge => !ge || he.indexOf(ge) > -1),
              );
            }
            getAncestorScrollContainers(H) {
              const ke = [];
              return (
                this.scrollContainers.forEach((he, ge) => {
                  this._scrollableContainsElement(ge, H) && ke.push(ge);
                }),
                ke
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(H, ke) {
              let he = (0, s.fI)(ke),
                ge = H.getElementRef().nativeElement;
              do {
                if (he == ge) return !0;
              } while ((he = he.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                He(this._getWindow().document, 'scroll').subscribe(() =>
                  this._scrolled.next(),
                ),
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (De.ɵfac = function (H) {
              return new (H || De)(x.LFG(x.R0b), x.LFG(Pe.t4), x.LFG(Le.K0, 8));
            }),
            (De.ɵprov = x.Yz7({
              token: De,
              factory: De.ɵfac,
              providedIn: 'root',
            })),
            De
          );
        })(),
        et = (() => {
          class De {
            constructor(H, ke, he, ge) {
              (this.elementRef = H),
                (this.scrollDispatcher = ke),
                (this.ngZone = he),
                (this.dir = ge),
                (this._destroyed = new L.x()),
                (this._elementScrolled = new te.y(pe =>
                  this.ngZone.runOutsideAngular(() =>
                    He(this.elementRef.nativeElement, 'scroll')
                      .pipe((0, Ue.R)(this._destroyed))
                      .subscribe(pe),
                  ),
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(H) {
              const ke = this.elementRef.nativeElement,
                he = this.dir && 'rtl' == this.dir.value;
              null == H.left && (H.left = he ? H.end : H.start),
                null == H.right && (H.right = he ? H.start : H.end),
                null != H.bottom &&
                  (H.top = ke.scrollHeight - ke.clientHeight - H.bottom),
                he && 0 != (0, Pe._i)()
                  ? (null != H.left &&
                      (H.right = ke.scrollWidth - ke.clientWidth - H.left),
                    2 == (0, Pe._i)()
                      ? (H.left = H.right)
                      : 1 == (0, Pe._i)() &&
                        (H.left = H.right ? -H.right : H.right))
                  : null != H.right &&
                    (H.left = ke.scrollWidth - ke.clientWidth - H.right),
                this._applyScrollToOptions(H);
            }
            _applyScrollToOptions(H) {
              const ke = this.elementRef.nativeElement;
              (0, Pe.Mq)()
                ? ke.scrollTo(H)
                : (null != H.top && (ke.scrollTop = H.top),
                  null != H.left && (ke.scrollLeft = H.left));
            }
            measureScrollOffset(H) {
              const ke = 'left',
                ge = this.elementRef.nativeElement;
              if ('top' == H) return ge.scrollTop;
              if ('bottom' == H)
                return ge.scrollHeight - ge.clientHeight - ge.scrollTop;
              const pe = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == H
                  ? (H = pe ? 'right' : ke)
                  : 'end' == H && (H = pe ? ke : 'right'),
                pe && 2 == (0, Pe._i)()
                  ? H == ke
                    ? ge.scrollWidth - ge.clientWidth - ge.scrollLeft
                    : ge.scrollLeft
                  : pe && 1 == (0, Pe._i)()
                  ? H == ke
                    ? ge.scrollLeft + ge.scrollWidth - ge.clientWidth
                    : -ge.scrollLeft
                  : H == ke
                  ? ge.scrollLeft
                  : ge.scrollWidth - ge.clientWidth - ge.scrollLeft
              );
            }
          }
          return (
            (De.ɵfac = function (H) {
              return new (H || De)(
                x.Y36(x.SBq),
                x.Y36($t),
                x.Y36(x.R0b),
                x.Y36(Ye.Is, 8),
              );
            }),
            (De.ɵdir = x.lG2({
              type: De,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
              standalone: !0,
            })),
            De
          );
        })(),
        Wt = (() => {
          class De {
            constructor(H, ke, he) {
              (this._platform = H),
                (this._change = new L.x()),
                (this._changeListener = ge => {
                  this._change.next(ge);
                }),
                (this._document = he),
                ke.runOutsideAngular(() => {
                  if (H.isBrowser) {
                    const ge = this._getWindow();
                    ge.addEventListener('resize', this._changeListener),
                      ge.addEventListener(
                        'orientationchange',
                        this._changeListener,
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const H = this._getWindow();
                H.removeEventListener('resize', this._changeListener),
                  H.removeEventListener(
                    'orientationchange',
                    this._changeListener,
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const H = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), H;
            }
            getViewportRect() {
              const H = this.getViewportScrollPosition(),
                { width: ke, height: he } = this.getViewportSize();
              return {
                top: H.top,
                left: H.left,
                bottom: H.top + he,
                right: H.left + ke,
                height: he,
                width: ke,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const H = this._document,
                ke = this._getWindow(),
                he = H.documentElement,
                ge = he.getBoundingClientRect();
              return {
                top:
                  -ge.top ||
                  H.body.scrollTop ||
                  ke.scrollY ||
                  he.scrollTop ||
                  0,
                left:
                  -ge.left ||
                  H.body.scrollLeft ||
                  ke.scrollX ||
                  he.scrollLeft ||
                  0,
              };
            }
            change(H = 20) {
              return H > 0 ? this._change.pipe(ze(H)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const H = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: H.innerWidth, height: H.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (De.ɵfac = function (H) {
              return new (H || De)(x.LFG(Pe.t4), x.LFG(x.R0b), x.LFG(Le.K0, 8));
            }),
            (De.ɵprov = x.Yz7({
              token: De,
              factory: De.ɵfac,
              providedIn: 'root',
            })),
            De
          );
        })();
      const pn = new x.OlP('VIRTUAL_SCROLLABLE');
      let Sn = (() => {
        class De extends et {
          constructor(H, ke, he, ge) {
            super(H, ke, he, ge);
          }
          measureViewportSize(H) {
            const ke = this.elementRef.nativeElement;
            return 'horizontal' === H ? ke.clientWidth : ke.clientHeight;
          }
        }
        return (
          (De.ɵfac = function (H) {
            return new (H || De)(
              x.Y36(x.SBq),
              x.Y36($t),
              x.Y36(x.R0b),
              x.Y36(Ye.Is, 8),
            );
          }),
          (De.ɵdir = x.lG2({ type: De, features: [x.qOj] })),
          De
        );
      })();
      const dn = typeof requestAnimationFrame < 'u' ? Ae : ut.E;
      let kt = (() => {
          class De extends Sn {
            get orientation() {
              return this._orientation;
            }
            set orientation(H) {
              this._orientation !== H &&
                ((this._orientation = H), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(H) {
              this._appendOnly = (0, s.Ig)(H);
            }
            constructor(H, ke, he, ge, pe, nt, wt, Ot) {
              super(H, nt, he, pe),
                (this.elementRef = H),
                (this._changeDetectorRef = ke),
                (this._scrollStrategy = ge),
                (this.scrollable = Ot),
                (this._platform = (0, x.f3M)(Pe.t4)),
                (this._detachedSubject = new L.x()),
                (this._renderedRangeSubject = new L.x()),
                (this._orientation = 'vertical'),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new te.y(Dn =>
                  this._scrollStrategy.scrolledIndexChange.subscribe(Oe =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => Dn.next(Oe)),
                    ),
                  ),
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ''),
                (this._totalContentHeight = ''),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = bt.w0.EMPTY),
                (this._viewportChanges = wt.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    'cdk-virtual-scrollable',
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe((0, Ce.O)(null), ze(0, dn))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled(),
                        ),
                      this._markChangeDetectionNeeded();
                  }),
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(H) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = H),
                  this._forOf.dataStream
                    .pipe((0, Ue.R)(this._detachedSubject))
                    .subscribe(ke => {
                      const he = ke.length;
                      he !== this._dataLength &&
                        ((this._dataLength = he),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(H) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                H
              ];
            }
            setTotalContentSize(H) {
              this._totalContentSize !== H &&
                ((this._totalContentSize = H),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(H) {
              (function Tn(De, ye) {
                return De.start == ye.start && De.end == ye.end;
              })(this._renderedRange, H) ||
                (this.appendOnly &&
                  (H = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, H.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = H)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered(),
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(H, ke = 'to-start') {
              H = this.appendOnly && 'to-start' === ke ? 0 : H;
              const ge = 'horizontal' == this.orientation,
                pe = ge ? 'X' : 'Y';
              let wt = `translate${pe}(${Number(
                (ge && this.dir && 'rtl' == this.dir.value ? -1 : 1) * H,
              )}px)`;
              (this._renderedContentOffset = H),
                'to-end' === ke &&
                  ((wt += ` translate${pe}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != wt &&
                  ((this._renderedContentTransform = wt),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset,
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(H, ke = 'auto') {
              const he = { behavior: ke };
              'horizontal' === this.orientation ? (he.start = H) : (he.top = H),
                this.scrollable.scrollTo(he);
            }
            scrollToIndex(H, ke = 'auto') {
              this._scrollStrategy.scrollToIndex(H, ke);
            }
            measureScrollOffset(H) {
              let ke;
              return (
                (ke =
                  this.scrollable == this
                    ? he => super.measureScrollOffset(he)
                    : he => this.scrollable.measureScrollOffset(he)),
                Math.max(
                  0,
                  ke(
                    H ?? ('horizontal' === this.orientation ? 'start' : 'top'),
                  ) - this.measureViewportOffset(),
                )
              );
            }
            measureViewportOffset(H) {
              let ke;
              const pe = 'rtl' == this.dir?.value;
              ke =
                'start' == H
                  ? pe
                    ? 'right'
                    : 'left'
                  : 'end' == H
                  ? pe
                    ? 'left'
                    : 'right'
                  : H || ('horizontal' === this.orientation ? 'left' : 'top');
              const nt =
                this.scrollable.measureBoundingClientRectWithScrollOffset(ke);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[ke] - nt
              );
            }
            measureRenderedContentSize() {
              const H = this._contentWrapper.nativeElement;
              return 'horizontal' === this.orientation
                ? H.offsetWidth
                : H.offsetHeight;
            }
            measureRangeSize(H) {
              return this._forOf
                ? this._forOf.measureRangeSize(H, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation,
              );
            }
            _markChangeDetectionNeeded(H) {
              H && this._runAfterChangeDetection.push(H),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    }),
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const H = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const ke of H) ke();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                'horizontal' === this.orientation
                  ? ''
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  'horizontal' === this.orientation
                    ? `${this._totalContentSize}px`
                    : '');
            }
          }
          return (
            (De.ɵfac = function (H) {
              return new (H || De)(
                x.Y36(x.SBq),
                x.Y36(x.sBO),
                x.Y36(x.R0b),
                x.Y36(Gt, 8),
                x.Y36(Ye.Is, 8),
                x.Y36($t),
                x.Y36(Wt),
                x.Y36(pn, 8),
              );
            }),
            (De.ɵcmp = x.Xpm({
              type: De,
              selectors: [['cdk-virtual-scroll-viewport']],
              viewQuery: function (H, ke) {
                if ((1 & H && x.Gf(dt, 7), 2 & H)) {
                  let he;
                  x.iGM((he = x.CRH())) && (ke._contentWrapper = he.first);
                }
              },
              hostAttrs: [1, 'cdk-virtual-scroll-viewport'],
              hostVars: 4,
              hostBindings: function (H, ke) {
                2 & H &&
                  x.ekj(
                    'cdk-virtual-scroll-orientation-horizontal',
                    'horizontal' === ke.orientation,
                  )(
                    'cdk-virtual-scroll-orientation-vertical',
                    'horizontal' !== ke.orientation,
                  );
              },
              inputs: { orientation: 'orientation', appendOnly: 'appendOnly' },
              outputs: { scrolledIndexChange: 'scrolledIndexChange' },
              standalone: !0,
              features: [
                x._Bn([
                  {
                    provide: et,
                    useFactory: (ye, H) => ye || H,
                    deps: [[new x.FiY(), new x.tBr(pn)], De],
                  },
                ]),
                x.qOj,
                x.jDz,
              ],
              ngContentSelectors: We,
              decls: 4,
              vars: 4,
              consts: [
                [1, 'cdk-virtual-scroll-content-wrapper'],
                ['contentWrapper', ''],
                [1, 'cdk-virtual-scroll-spacer'],
              ],
              template: function (H, ke) {
                1 & H &&
                  (x.F$t(),
                  x.TgZ(0, 'div', 0, 1),
                  x.Hsn(2),
                  x.qZA(),
                  x._UZ(3, 'div', 2)),
                  2 & H &&
                    (x.xp6(3),
                    x.Udp('width', ke._totalContentWidth)(
                      'height',
                      ke._totalContentHeight,
                    ));
              },
              styles: [
                'cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            De
          );
        })(),
        Me = (() => {
          class De {}
          return (
            (De.ɵfac = function (H) {
              return new (H || De)();
            }),
            (De.ɵmod = x.oAB({ type: De })),
            (De.ɵinj = x.cJS({})),
            De
          );
        })(),
        je = (() => {
          class De {}
          return (
            (De.ɵfac = function (H) {
              return new (H || De)();
            }),
            (De.ɵmod = x.oAB({ type: De })),
            (De.ɵinj = x.cJS({ imports: [Ye.vT, Me, kt, Ye.vT, Me] })),
            De
          );
        })();
    },
    6895: (Pt, Re, D) => {
      D.d(Re, {
        Do: () => lt,
        ED: () => ri,
        EM: () => pr,
        HT: () => ne,
        JF: () => Ko,
        K0: () => de,
        Mx: () => ur,
        NF: () => co,
        O5: () => Ci,
        RF: () => yr,
        S$: () => vt,
        V_: () => ce,
        Ye: () => bt,
        b0: () => _t,
        bD: () => Pr,
        ez: () => Po,
        mk: () => un,
        n9: () => xi,
        q: () => L,
        sg: () => hi,
        tP: () => fr,
        w_: () => te,
      });
      var s = D(4650);
      let x = null;
      function L() {
        return x;
      }
      function ne(y) {
        x || (x = y);
      }
      class te {}
      const de = new s.OlP('DocumentToken');
      let ve = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function ue() {
                return (0, s.LFG)(le);
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      const ce = new s.OlP('Location Initialized');
      let le = (() => {
        class y extends ve {
          constructor(A) {
            super(),
              (this._doc = A),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return L().getBaseHref(this._doc);
          }
          onPopState(A) {
            const j = L().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('popstate', A, !1),
              () => j.removeEventListener('popstate', A)
            );
          }
          onHashChange(A) {
            const j = L().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('hashchange', A, !1),
              () => j.removeEventListener('hashchange', A)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(A) {
            this._location.pathname = A;
          }
          pushState(A, j, ae) {
            fe()
              ? this._history.pushState(A, j, ae)
              : (this._location.hash = ae);
          }
          replaceState(A, j, ae) {
            fe()
              ? this._history.replaceState(A, j, ae)
              : (this._location.hash = ae);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(A = 0) {
            this._history.go(A);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.LFG(de));
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function re() {
                return new le((0, s.LFG)(de));
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      function fe() {
        return !!window.history.pushState;
      }
      function Ne(y, P) {
        if (0 == y.length) return P;
        if (0 == P.length) return y;
        let A = 0;
        return (
          y.endsWith('/') && A++,
          P.startsWith('/') && A++,
          2 == A ? y + P.substring(1) : 1 == A ? y + P : y + '/' + P
        );
      }
      function He(y) {
        const P = y.match(/#|\?|$/),
          A = (P && P.index) || y.length;
        return y.slice(0, A - ('/' === y[A - 1] ? 1 : 0)) + y.slice(A);
      }
      function ct(y) {
        return y && '?' !== y[0] ? '?' + y : y;
      }
      let vt = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (0, s.f3M)(_t);
            },
            providedIn: 'root',
          })),
          y
        );
      })();
      const Be = new s.OlP('appBaseHref');
      let _t = (() => {
          class y extends vt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._removeListenerFns = []),
                (this._baseHref =
                  j ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, s.f3M)(de).location?.origin ??
                  '');
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(A) {
              return Ne(this._baseHref, A);
            }
            path(A = !1) {
              const j =
                  this._platformLocation.pathname +
                  ct(this._platformLocation.search),
                ae = this._platformLocation.hash;
              return ae && A ? `${j}${ae}` : j;
            }
            pushState(A, j, ae, ot) {
              const Dt = this.prepareExternalUrl(ae + ct(ot));
              this._platformLocation.pushState(A, j, Dt);
            }
            replaceState(A, j, ae, ot) {
              const Dt = this.prepareExternalUrl(ae + ct(ot));
              this._platformLocation.replaceState(A, j, Dt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ve), s.LFG(Be, 8));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: y.ɵfac,
              providedIn: 'root',
            })),
            y
          );
        })(),
        lt = (() => {
          class y extends vt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != j && (this._baseHref = j);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(A = !1) {
              let j = this._platformLocation.hash;
              return null == j && (j = '#'), j.length > 0 ? j.substring(1) : j;
            }
            prepareExternalUrl(A) {
              const j = Ne(this._baseHref, A);
              return j.length > 0 ? '#' + j : j;
            }
            pushState(A, j, ae, ot) {
              let Dt = this.prepareExternalUrl(ae + ct(ot));
              0 == Dt.length && (Dt = this._platformLocation.pathname),
                this._platformLocation.pushState(A, j, Dt);
            }
            replaceState(A, j, ae, ot) {
              let Dt = this.prepareExternalUrl(ae + ct(ot));
              0 == Dt.length && (Dt = this._platformLocation.pathname),
                this._platformLocation.replaceState(A, j, Dt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ve), s.LFG(Be, 8));
            }),
            (y.ɵprov = s.Yz7({ token: y, factory: y.ɵfac })),
            y
          );
        })(),
        bt = (() => {
          class y {
            constructor(A) {
              (this._subject = new s.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = A);
              const j = this._locationStrategy.getBaseHref();
              (this._basePath = (function X(y) {
                if (new RegExp('^(https?:)?//').test(y)) {
                  const [, A] = y.split(/\/\/[^\/]+/);
                  return A;
                }
                return y;
              })(He(ie(j)))),
                this._locationStrategy.onPopState(ae => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: ae.state,
                    type: ae.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(A = !1) {
              return this.normalize(this._locationStrategy.path(A));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(A, j = '') {
              return this.path() == this.normalize(A + ct(j));
            }
            normalize(A) {
              return y.stripTrailingSlash(
                (function se(y, P) {
                  if (!y || !P.startsWith(y)) return P;
                  const A = P.substring(y.length);
                  return '' === A || ['/', ';', '?', '#'].includes(A[0])
                    ? A
                    : P;
                })(this._basePath, ie(A)),
              );
            }
            prepareExternalUrl(A) {
              return (
                A && '/' !== A[0] && (A = '/' + A),
                this._locationStrategy.prepareExternalUrl(A)
              );
            }
            go(A, j = '', ae = null) {
              this._locationStrategy.pushState(ae, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + ct(j)),
                  ae,
                );
            }
            replaceState(A, j = '', ae = null) {
              this._locationStrategy.replaceState(ae, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + ct(j)),
                  ae,
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(A = 0) {
              this._locationStrategy.historyGo?.(A);
            }
            onUrlChange(A) {
              return (
                this._urlChangeListeners.push(A),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe(j => {
                    this._notifyUrlChangeListeners(j.url, j.state);
                  })),
                () => {
                  const j = this._urlChangeListeners.indexOf(A);
                  this._urlChangeListeners.splice(j, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(A = '', j) {
              this._urlChangeListeners.forEach(ae => ae(A, j));
            }
            subscribe(A, j, ae) {
              return this._subject.subscribe({
                next: A,
                error: j,
                complete: ae,
              });
            }
          }
          return (
            (y.normalizeQueryParams = ct),
            (y.joinWithSlash = Ne),
            (y.stripTrailingSlash = He),
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(vt));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: function () {
                return (function W() {
                  return new bt((0, s.LFG)(vt));
                })();
              },
              providedIn: 'root',
            })),
            y
          );
        })();
      function ie(y) {
        return y.replace(/\/index.html$/, '');
      }
      function ur(y, P) {
        P = encodeURIComponent(P);
        for (const A of y.split(';')) {
          const j = A.indexOf('='),
            [ae, ot] = -1 == j ? [A, ''] : [A.slice(0, j), A.slice(j + 1)];
          if (ae.trim() === P) return decodeURIComponent(ot);
        }
        return null;
      }
      const di = /\s+/,
        zt = [];
      let un = (() => {
        class y {
          constructor(A, j, ae, ot) {
            (this._iterableDiffers = A),
              (this._keyValueDiffers = j),
              (this._ngEl = ae),
              (this._renderer = ot),
              (this.initialClasses = zt),
              (this.stateMap = new Map());
          }
          set klass(A) {
            this.initialClasses = null != A ? A.trim().split(di) : zt;
          }
          set ngClass(A) {
            this.rawClass = 'string' == typeof A ? A.trim().split(di) : A;
          }
          ngDoCheck() {
            for (const j of this.initialClasses) this._updateState(j, !0);
            const A = this.rawClass;
            if (Array.isArray(A) || A instanceof Set)
              for (const j of A) this._updateState(j, !0);
            else if (null != A)
              for (const j of Object.keys(A))
                this._updateState(j, Boolean(A[j]));
            this._applyStateDiff();
          }
          _updateState(A, j) {
            const ae = this.stateMap.get(A);
            void 0 !== ae
              ? (ae.enabled !== j && ((ae.changed = !0), (ae.enabled = j)),
                (ae.touched = !0))
              : this.stateMap.set(A, { enabled: j, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const A of this.stateMap) {
              const j = A[0],
                ae = A[1];
              ae.changed
                ? (this._toggleClass(j, ae.enabled), (ae.changed = !1))
                : ae.touched ||
                  (ae.enabled && this._toggleClass(j, !1),
                  this.stateMap.delete(j)),
                (ae.touched = !1);
            }
          }
          _toggleClass(A, j) {
            (A = A.trim()).length > 0 &&
              A.split(di).forEach(ae => {
                j
                  ? this._renderer.addClass(this._ngEl.nativeElement, ae)
                  : this._renderer.removeClass(this._ngEl.nativeElement, ae);
              });
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(
              s.Y36(s.ZZ4),
              s.Y36(s.aQg),
              s.Y36(s.SBq),
              s.Y36(s.Qsj),
            );
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            standalone: !0,
          })),
          y
        );
      })();
      class Xn {
        constructor(P, A, j, ae) {
          (this.$implicit = P),
            (this.ngForOf = A),
            (this.index = j),
            (this.count = ae);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let hi = (() => {
        class y {
          set ngForOf(A) {
            (this._ngForOf = A), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(A) {
            this._trackByFn = A;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(A, j, ae) {
            (this._viewContainer = A),
              (this._template = j),
              (this._differs = ae),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(A) {
            A && (this._template = A);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const A = this._ngForOf;
              !this._differ &&
                A &&
                (this._differ = this._differs
                  .find(A)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const A = this._differ.diff(this._ngForOf);
              A && this._applyChanges(A);
            }
          }
          _applyChanges(A) {
            const j = this._viewContainer;
            A.forEachOperation((ae, ot, Dt) => {
              if (null == ae.previousIndex)
                j.createEmbeddedView(
                  this._template,
                  new Xn(ae.item, this._ngForOf, -1, -1),
                  null === Dt ? void 0 : Dt,
                );
              else if (null == Dt) j.remove(null === ot ? void 0 : ot);
              else if (null !== ot) {
                const Qt = j.get(ot);
                j.move(Qt, Dt), wn(Qt, ae);
              }
            });
            for (let ae = 0, ot = j.length; ae < ot; ae++) {
              const Qt = j.get(ae).context;
              (Qt.index = ae), (Qt.count = ot), (Qt.ngForOf = this._ngForOf);
            }
            A.forEachIdentityChange(ae => {
              wn(j.get(ae.currentIndex), ae);
            });
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(s.ZZ4));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: {
              ngForOf: 'ngForOf',
              ngForTrackBy: 'ngForTrackBy',
              ngForTemplate: 'ngForTemplate',
            },
            standalone: !0,
          })),
          y
        );
      })();
      function wn(y, P) {
        y.context.$implicit = P.item;
      }
      let Ci = (() => {
        class y {
          constructor(A, j) {
            (this._viewContainer = A),
              (this._context = new fn()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = j);
          }
          set ngIf(A) {
            (this._context.$implicit = this._context.ngIf = A),
              this._updateView();
          }
          set ngIfThen(A) {
            Ji('ngIfThen', A),
              (this._thenTemplateRef = A),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(A) {
            Ji('ngIfElse', A),
              (this._elseTemplateRef = A),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context,
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context,
                  )));
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngIf', '']],
            inputs: {
              ngIf: 'ngIf',
              ngIfThen: 'ngIfThen',
              ngIfElse: 'ngIfElse',
            },
            standalone: !0,
          })),
          y
        );
      })();
      class fn {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Ji(y, P) {
        if (P && !P.createEmbeddedView)
          throw new Error(
            `${y} must be a TemplateRef, but received '${(0, s.AaK)(P)}'.`,
          );
      }
      class Ki {
        constructor(P, A) {
          (this._viewContainerRef = P),
            (this._templateRef = A),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(P) {
          P && !this._created
            ? this.create()
            : !P && this._created && this.destroy();
        }
      }
      let yr = (() => {
          class y {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(A) {
              (this._ngSwitch = A),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(A) {
              this._defaultViews.push(A);
            }
            _matchCase(A) {
              const j = A == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || j),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                j
              );
            }
            _updateDefaultCases(A) {
              if (this._defaultViews.length > 0 && A !== this._defaultUsed) {
                this._defaultUsed = A;
                for (const j of this._defaultViews) j.enforceState(A);
              }
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitch', '']],
              inputs: { ngSwitch: 'ngSwitch' },
              standalone: !0,
            })),
            y
          );
        })(),
        xi = (() => {
          class y {
            constructor(A, j, ae) {
              (this.ngSwitch = ae), ae._addCase(), (this._view = new Ki(A, j));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase),
              );
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(yr, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
              standalone: !0,
            })),
            y
          );
        })(),
        ri = (() => {
          class y {
            constructor(A, j, ae) {
              ae._addDefault(new Ki(A, j));
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(yr, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchDefault', '']],
              standalone: !0,
            })),
            y
          );
        })(),
        fr = (() => {
          class y {
            constructor(A) {
              (this._viewContainerRef = A),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(A) {
              if (A.ngTemplateOutlet || A.ngTemplateOutletInjector) {
                const j = this._viewContainerRef;
                if (
                  (this._viewRef && j.remove(j.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: ae,
                    ngTemplateOutletContext: ot,
                    ngTemplateOutletInjector: Dt,
                  } = this;
                  this._viewRef = j.createEmbeddedView(
                    ae,
                    ot,
                    Dt ? { injector: Dt } : void 0,
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  A.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: {
                ngTemplateOutletContext: 'ngTemplateOutletContext',
                ngTemplateOutlet: 'ngTemplateOutlet',
                ngTemplateOutletInjector: 'ngTemplateOutletInjector',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            y
          );
        })(),
        Po = (() => {
          class y {}
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵmod = s.oAB({ type: y })),
            (y.ɵinj = s.cJS({})),
            y
          );
        })();
      const Pr = 'browser';
      function co(y) {
        return y === Pr;
      }
      let pr = (() => {
        class y {}
        return (
          (y.ɵprov = (0, s.Yz7)({
            token: y,
            providedIn: 'root',
            factory: () => new uo((0, s.LFG)(de), window),
          })),
          y
        );
      })();
      class uo {
        constructor(P, A) {
          (this.document = P), (this.window = A), (this.offset = () => [0, 0]);
        }
        setOffset(P) {
          this.offset = Array.isArray(P) ? () => P : P;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(P) {
          this.supportsScrolling() && this.window.scrollTo(P[0], P[1]);
        }
        scrollToAnchor(P) {
          if (!this.supportsScrolling()) return;
          const A = (function wr(y, P) {
            const A = y.getElementById(P) || y.getElementsByName(P)[0];
            if (A) return A;
            if (
              'function' == typeof y.createTreeWalker &&
              y.body &&
              (y.body.createShadowRoot || y.body.attachShadow)
            ) {
              const j = y.createTreeWalker(y.body, NodeFilter.SHOW_ELEMENT);
              let ae = j.currentNode;
              for (; ae; ) {
                const ot = ae.shadowRoot;
                if (ot) {
                  const Dt =
                    ot.getElementById(P) || ot.querySelector(`[name="${P}"]`);
                  if (Dt) return Dt;
                }
                ae = j.nextNode();
              }
            }
            return null;
          })(this.document, P);
          A && (this.scrollToElement(A), A.focus());
        }
        setHistoryScrollRestoration(P) {
          if (this.supportScrollRestoration()) {
            const A = this.window.history;
            A && A.scrollRestoration && (A.scrollRestoration = P);
          }
        }
        scrollToElement(P) {
          const A = P.getBoundingClientRect(),
            j = A.left + this.window.pageXOffset,
            ae = A.top + this.window.pageYOffset,
            ot = this.offset();
          this.window.scrollTo(j - ot[0], ae - ot[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const P =
              zr(this.window.history) ||
              zr(Object.getPrototypeOf(this.window.history));
            return !(!P || (!P.writable && !P.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              'pageXOffset' in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function zr(y) {
        return Object.getOwnPropertyDescriptor(y, 'scrollRestoration');
      }
      class Ko {}
    },
    529: (Pt, Re, D) => {
      D.d(Re, { JF: () => Je, TP: () => Pe, WM: () => le, eN: () => ze });
      var s = D(6895),
        x = D(4650),
        L = D(9646),
        ne = D(9751),
        te = D(4351),
        de = D(9300),
        ve = D(4004);
      class ue {}
      class ce {}
      class le {
        constructor(b) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            b
              ? (this.lazyInit =
                  'string' == typeof b
                    ? () => {
                        (this.headers = new Map()),
                          b.split('\n').forEach(M => {
                            const G = M.indexOf(':');
                            if (G > 0) {
                              const Q = M.slice(0, G),
                                Xe = Q.toLowerCase(),
                                St = M.slice(G + 1).trim();
                              this.maybeSetNormalizedName(Q, Xe),
                                this.headers.has(Xe)
                                  ? this.headers.get(Xe).push(St)
                                  : this.headers.set(Xe, [St]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.entries(b).forEach(([M, G]) => {
                            let Q;
                            if (
                              ((Q =
                                'string' == typeof G
                                  ? [G]
                                  : 'number' == typeof G
                                  ? [G.toString()]
                                  : G.map(Xe => Xe.toString())),
                              Q.length > 0)
                            ) {
                              const Xe = M.toLowerCase();
                              this.headers.set(Xe, Q),
                                this.maybeSetNormalizedName(M, Xe);
                            }
                          });
                      })
              : (this.headers = new Map());
        }
        has(b) {
          return this.init(), this.headers.has(b.toLowerCase());
        }
        get(b) {
          this.init();
          const M = this.headers.get(b.toLowerCase());
          return M && M.length > 0 ? M[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(b) {
          return this.init(), this.headers.get(b.toLowerCase()) || null;
        }
        append(b, M) {
          return this.clone({ name: b, value: M, op: 'a' });
        }
        set(b, M) {
          return this.clone({ name: b, value: M, op: 's' });
        }
        delete(b, M) {
          return this.clone({ name: b, value: M, op: 'd' });
        }
        maybeSetNormalizedName(b, M) {
          this.normalizedNames.has(M) || this.normalizedNames.set(M, b);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof le
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach(b => this.applyUpdate(b)),
              (this.lazyUpdate = null)));
        }
        copyFrom(b) {
          b.init(),
            Array.from(b.headers.keys()).forEach(M => {
              this.headers.set(M, b.headers.get(M)),
                this.normalizedNames.set(M, b.normalizedNames.get(M));
            });
        }
        clone(b) {
          const M = new le();
          return (
            (M.lazyInit =
              this.lazyInit && this.lazyInit instanceof le
                ? this.lazyInit
                : this),
            (M.lazyUpdate = (this.lazyUpdate || []).concat([b])),
            M
          );
        }
        applyUpdate(b) {
          const M = b.name.toLowerCase();
          switch (b.op) {
            case 'a':
            case 's':
              let G = b.value;
              if (('string' == typeof G && (G = [G]), 0 === G.length)) return;
              this.maybeSetNormalizedName(b.name, M);
              const Q = ('a' === b.op ? this.headers.get(M) : void 0) || [];
              Q.push(...G), this.headers.set(M, Q);
              break;
            case 'd':
              const Xe = b.value;
              if (Xe) {
                let St = this.headers.get(M);
                if (!St) return;
                (St = St.filter(rn => -1 === Xe.indexOf(rn))),
                  0 === St.length
                    ? (this.headers.delete(M), this.normalizedNames.delete(M))
                    : this.headers.set(M, St);
              } else this.headers.delete(M), this.normalizedNames.delete(M);
          }
        }
        forEach(b) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach(M =>
              b(this.normalizedNames.get(M), this.headers.get(M)),
            );
        }
      }
      class re {
        encodeKey(b) {
          return vt(b);
        }
        encodeValue(b) {
          return vt(b);
        }
        decodeKey(b) {
          return decodeURIComponent(b);
        }
        decodeValue(b) {
          return decodeURIComponent(b);
        }
      }
      const He = /%(\d[a-f0-9])/gi,
        ct = {
          40: '@',
          '3A': ':',
          24: '$',
          '2C': ',',
          '3B': ';',
          '3D': '=',
          '3F': '?',
          '2F': '/',
        };
      function vt(F) {
        return encodeURIComponent(F).replace(He, (b, M) => ct[M] ?? b);
      }
      function Be(F) {
        return `${F}`;
      }
      class _t {
        constructor(b = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = b.encoder || new re()),
            b.fromString)
          ) {
            if (b.fromObject)
              throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function Ne(F, b) {
              const M = new Map();
              return (
                F.length > 0 &&
                  F.replace(/^\?/, '')
                    .split('&')
                    .forEach(Q => {
                      const Xe = Q.indexOf('='),
                        [St, rn] =
                          -1 == Xe
                            ? [b.decodeKey(Q), '']
                            : [
                                b.decodeKey(Q.slice(0, Xe)),
                                b.decodeValue(Q.slice(Xe + 1)),
                              ],
                        Rt = M.get(St) || [];
                      Rt.push(rn), M.set(St, Rt);
                    }),
                M
              );
            })(b.fromString, this.encoder);
          } else
            b.fromObject
              ? ((this.map = new Map()),
                Object.keys(b.fromObject).forEach(M => {
                  const G = b.fromObject[M],
                    Q = Array.isArray(G) ? G.map(Be) : [Be(G)];
                  this.map.set(M, Q);
                }))
              : (this.map = null);
        }
        has(b) {
          return this.init(), this.map.has(b);
        }
        get(b) {
          this.init();
          const M = this.map.get(b);
          return M ? M[0] : null;
        }
        getAll(b) {
          return this.init(), this.map.get(b) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(b, M) {
          return this.clone({ param: b, value: M, op: 'a' });
        }
        appendAll(b) {
          const M = [];
          return (
            Object.keys(b).forEach(G => {
              const Q = b[G];
              Array.isArray(Q)
                ? Q.forEach(Xe => {
                    M.push({ param: G, value: Xe, op: 'a' });
                  })
                : M.push({ param: G, value: Q, op: 'a' });
            }),
            this.clone(M)
          );
        }
        set(b, M) {
          return this.clone({ param: b, value: M, op: 's' });
        }
        delete(b, M) {
          return this.clone({ param: b, value: M, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map(b => {
                const M = this.encoder.encodeKey(b);
                return this.map
                  .get(b)
                  .map(G => M + '=' + this.encoder.encodeValue(G))
                  .join('&');
              })
              .filter(b => '' !== b)
              .join('&')
          );
        }
        clone(b) {
          const M = new _t({ encoder: this.encoder });
          return (
            (M.cloneFrom = this.cloneFrom || this),
            (M.updates = (this.updates || []).concat(b)),
            M
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach(b => this.map.set(b, this.cloneFrom.map.get(b))),
              this.updates.forEach(b => {
                switch (b.op) {
                  case 'a':
                  case 's':
                    const M =
                      ('a' === b.op ? this.map.get(b.param) : void 0) || [];
                    M.push(Be(b.value)), this.map.set(b.param, M);
                    break;
                  case 'd':
                    if (void 0 === b.value) {
                      this.map.delete(b.param);
                      break;
                    }
                    {
                      let G = this.map.get(b.param) || [];
                      const Q = G.indexOf(Be(b.value));
                      -1 !== Q && G.splice(Q, 1),
                        G.length > 0
                          ? this.map.set(b.param, G)
                          : this.map.delete(b.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class bt {
        constructor() {
          this.map = new Map();
        }
        set(b, M) {
          return this.map.set(b, M), this;
        }
        get(b) {
          return (
            this.map.has(b) || this.map.set(b, b.defaultValue()),
            this.map.get(b)
          );
        }
        delete(b) {
          return this.map.delete(b), this;
        }
        has(b) {
          return this.map.has(b);
        }
        keys() {
          return this.map.keys();
        }
      }
      function se(F) {
        return typeof ArrayBuffer < 'u' && F instanceof ArrayBuffer;
      }
      function ie(F) {
        return typeof Blob < 'u' && F instanceof Blob;
      }
      function X(F) {
        return typeof FormData < 'u' && F instanceof FormData;
      }
      class Qe {
        constructor(b, M, G, Q) {
          let Xe;
          if (
            ((this.url = M),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = b.toUpperCase()),
            (function W(F) {
              switch (F) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || Q
              ? ((this.body = void 0 !== G ? G : null), (Xe = Q))
              : (Xe = G),
            Xe &&
              ((this.reportProgress = !!Xe.reportProgress),
              (this.withCredentials = !!Xe.withCredentials),
              Xe.responseType && (this.responseType = Xe.responseType),
              Xe.headers && (this.headers = Xe.headers),
              Xe.context && (this.context = Xe.context),
              Xe.params && (this.params = Xe.params)),
            this.headers || (this.headers = new le()),
            this.context || (this.context = new bt()),
            this.params)
          ) {
            const St = this.params.toString();
            if (0 === St.length) this.urlWithParams = M;
            else {
              const rn = M.indexOf('?');
              this.urlWithParams =
                M + (-1 === rn ? '?' : rn < M.length - 1 ? '&' : '') + St;
            }
          } else (this.params = new _t()), (this.urlWithParams = M);
        }
        serializeBody() {
          return null === this.body
            ? null
            : se(this.body) ||
              ie(this.body) ||
              X(this.body) ||
              (function Ae(F) {
                return (
                  typeof URLSearchParams < 'u' && F instanceof URLSearchParams
                );
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof _t
            ? this.body.toString()
            : 'object' == typeof this.body ||
              'boolean' == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || X(this.body)
            ? null
            : ie(this.body)
            ? this.body.type || null
            : se(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof _t
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body ||
              'number' == typeof this.body ||
              'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(b = {}) {
          const M = b.method || this.method,
            G = b.url || this.url,
            Q = b.responseType || this.responseType,
            Xe = void 0 !== b.body ? b.body : this.body,
            St =
              void 0 !== b.withCredentials
                ? b.withCredentials
                : this.withCredentials,
            rn =
              void 0 !== b.reportProgress
                ? b.reportProgress
                : this.reportProgress;
          let Rt = b.headers || this.headers,
            tt = b.params || this.params;
          const Kt = b.context ?? this.context;
          return (
            void 0 !== b.setHeaders &&
              (Rt = Object.keys(b.setHeaders).reduce(
                (Ie, xe) => Ie.set(xe, b.setHeaders[xe]),
                Rt,
              )),
            b.setParams &&
              (tt = Object.keys(b.setParams).reduce(
                (Ie, xe) => Ie.set(xe, b.setParams[xe]),
                tt,
              )),
            new Qe(M, G, Xe, {
              params: tt,
              headers: Rt,
              context: Kt,
              reportProgress: rn,
              responseType: Q,
              withCredentials: St,
            })
          );
        }
      }
      var ut = (() => (
        ((ut = ut || {})[(ut.Sent = 0)] = 'Sent'),
        (ut[(ut.UploadProgress = 1)] = 'UploadProgress'),
        (ut[(ut.ResponseHeader = 2)] = 'ResponseHeader'),
        (ut[(ut.DownloadProgress = 3)] = 'DownloadProgress'),
        (ut[(ut.Response = 4)] = 'Response'),
        (ut[(ut.User = 5)] = 'User'),
        ut
      ))();
      class Ut {
        constructor(b, M = 200, G = 'OK') {
          (this.headers = b.headers || new le()),
            (this.status = void 0 !== b.status ? b.status : M),
            (this.statusText = b.statusText || G),
            (this.url = b.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class Et extends Ut {
        constructor(b = {}) {
          super(b), (this.type = ut.ResponseHeader);
        }
        clone(b = {}) {
          return new Et({
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Yt extends Ut {
        constructor(b = {}) {
          super(b),
            (this.type = ut.Response),
            (this.body = void 0 !== b.body ? b.body : null);
        }
        clone(b = {}) {
          return new Yt({
            body: void 0 !== b.body ? b.body : this.body,
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Mt extends Ut {
        constructor(b) {
          super(b, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${b.url || '(unknown url)'}`
                : `Http failure response for ${b.url || '(unknown url)'}: ${
                    b.status
                  } ${b.statusText}`),
            (this.error = b.error || null);
        }
      }
      function $e(F, b) {
        return {
          body: b,
          headers: F.headers,
          context: F.context,
          observe: F.observe,
          params: F.params,
          reportProgress: F.reportProgress,
          responseType: F.responseType,
          withCredentials: F.withCredentials,
        };
      }
      let ze = (() => {
        class F {
          constructor(M) {
            this.handler = M;
          }
          request(M, G, Q = {}) {
            let Xe;
            if (M instanceof Qe) Xe = M;
            else {
              let Rt, tt;
              (Rt = Q.headers instanceof le ? Q.headers : new le(Q.headers)),
                Q.params &&
                  (tt =
                    Q.params instanceof _t
                      ? Q.params
                      : new _t({ fromObject: Q.params })),
                (Xe = new Qe(M, G, void 0 !== Q.body ? Q.body : null, {
                  headers: Rt,
                  context: Q.context,
                  params: tt,
                  reportProgress: Q.reportProgress,
                  responseType: Q.responseType || 'json',
                  withCredentials: Q.withCredentials,
                }));
            }
            const St = (0, L.of)(Xe).pipe(
              (0, te.b)(Rt => this.handler.handle(Rt)),
            );
            if (M instanceof Qe || 'events' === Q.observe) return St;
            const rn = St.pipe((0, de.h)(Rt => Rt instanceof Yt));
            switch (Q.observe || 'body') {
              case 'body':
                switch (Xe.responseType) {
                  case 'arraybuffer':
                    return rn.pipe(
                      (0, ve.U)(Rt => {
                        if (
                          null !== Rt.body &&
                          !(Rt.body instanceof ArrayBuffer)
                        )
                          throw new Error('Response is not an ArrayBuffer.');
                        return Rt.body;
                      }),
                    );
                  case 'blob':
                    return rn.pipe(
                      (0, ve.U)(Rt => {
                        if (null !== Rt.body && !(Rt.body instanceof Blob))
                          throw new Error('Response is not a Blob.');
                        return Rt.body;
                      }),
                    );
                  case 'text':
                    return rn.pipe(
                      (0, ve.U)(Rt => {
                        if (null !== Rt.body && 'string' != typeof Rt.body)
                          throw new Error('Response is not a string.');
                        return Rt.body;
                      }),
                    );
                  default:
                    return rn.pipe((0, ve.U)(Rt => Rt.body));
                }
              case 'response':
                return rn;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${Q.observe}}`,
                );
            }
          }
          delete(M, G = {}) {
            return this.request('DELETE', M, G);
          }
          get(M, G = {}) {
            return this.request('GET', M, G);
          }
          head(M, G = {}) {
            return this.request('HEAD', M, G);
          }
          jsonp(M, G) {
            return this.request('JSONP', M, {
              params: new _t().append(G, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(M, G = {}) {
            return this.request('OPTIONS', M, G);
          }
          patch(M, G, Q = {}) {
            return this.request('PATCH', M, $e(Q, G));
          }
          post(M, G, Q = {}) {
            return this.request('POST', M, $e(Q, G));
          }
          put(M, G, Q = {}) {
            return this.request('PUT', M, $e(Q, G));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(ue));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      function be(F, b) {
        return b(F);
      }
      function Ue(F, b) {
        return (M, G) => b.intercept(M, { handle: Q => F(Q, G) });
      }
      const Pe = new x.OlP('HTTP_INTERCEPTORS'),
        Le = new x.OlP('HTTP_INTERCEPTOR_FNS');
      function Ye() {
        let F = null;
        return (b, M) => (
          null === F &&
            (F = ((0, x.f3M)(Pe, { optional: !0 }) ?? []).reduceRight(Ue, be)),
          F(b, M)
        );
      }
      let dt = (() => {
        class F extends ue {
          constructor(M, G) {
            super(),
              (this.backend = M),
              (this.injector = G),
              (this.chain = null);
          }
          handle(M) {
            if (null === this.chain) {
              const G = Array.from(new Set(this.injector.get(Le)));
              this.chain = G.reduceRight(
                (Q, Xe) =>
                  (function Ce(F, b, M) {
                    return (G, Q) => M.runInContext(() => b(G, Xe => F(Xe, Q)));
                  })(Q, Xe, this.injector),
                be,
              );
            }
            return this.chain(M, G => this.backend.handle(G));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(ce), x.LFG(x.lqb));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      const Sn = /^\)\]\}',?\n/;
      let dn = (() => {
        class F {
          constructor(M) {
            this.xhrFactory = M;
          }
          handle(M) {
            if ('JSONP' === M.method)
              throw new Error(
                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.',
              );
            return new ne.y(G => {
              const Q = this.xhrFactory.build();
              if (
                (Q.open(M.method, M.urlWithParams),
                M.withCredentials && (Q.withCredentials = !0),
                M.headers.forEach((Z, we) =>
                  Q.setRequestHeader(Z, we.join(',')),
                ),
                M.headers.has('Accept') ||
                  Q.setRequestHeader(
                    'Accept',
                    'application/json, text/plain, */*',
                  ),
                !M.headers.has('Content-Type'))
              ) {
                const Z = M.detectContentTypeHeader();
                null !== Z && Q.setRequestHeader('Content-Type', Z);
              }
              if (M.responseType) {
                const Z = M.responseType.toLowerCase();
                Q.responseType = 'json' !== Z ? Z : 'text';
              }
              const Xe = M.serializeBody();
              let St = null;
              const rn = () => {
                  if (null !== St) return St;
                  const Z = Q.statusText || 'OK',
                    we = new le(Q.getAllResponseHeaders()),
                    rt =
                      (function Tn(F) {
                        return 'responseURL' in F && F.responseURL
                          ? F.responseURL
                          : /^X-Request-URL:/m.test(F.getAllResponseHeaders())
                          ? F.getResponseHeader('X-Request-URL')
                          : null;
                      })(Q) || M.url;
                  return (
                    (St = new Et({
                      headers: we,
                      status: Q.status,
                      statusText: Z,
                      url: rt,
                    })),
                    St
                  );
                },
                Rt = () => {
                  let {
                      headers: Z,
                      status: we,
                      statusText: rt,
                      url: Bt,
                    } = rn(),
                    qt = null;
                  204 !== we &&
                    (qt =
                      typeof Q.response > 'u' ? Q.responseText : Q.response),
                    0 === we && (we = qt ? 200 : 0);
                  let Cn = we >= 200 && we < 300;
                  if ('json' === M.responseType && 'string' == typeof qt) {
                    const Zn = qt;
                    qt = qt.replace(Sn, '');
                    try {
                      qt = '' !== qt ? JSON.parse(qt) : null;
                    } catch (ki) {
                      (qt = Zn),
                        Cn && ((Cn = !1), (qt = { error: ki, text: qt }));
                    }
                  }
                  Cn
                    ? (G.next(
                        new Yt({
                          body: qt,
                          headers: Z,
                          status: we,
                          statusText: rt,
                          url: Bt || void 0,
                        }),
                      ),
                      G.complete())
                    : G.error(
                        new Mt({
                          error: qt,
                          headers: Z,
                          status: we,
                          statusText: rt,
                          url: Bt || void 0,
                        }),
                      );
                },
                tt = Z => {
                  const { url: we } = rn(),
                    rt = new Mt({
                      error: Z,
                      status: Q.status || 0,
                      statusText: Q.statusText || 'Unknown Error',
                      url: we || void 0,
                    });
                  G.error(rt);
                };
              let Kt = !1;
              const Ie = Z => {
                  Kt || (G.next(rn()), (Kt = !0));
                  let we = { type: ut.DownloadProgress, loaded: Z.loaded };
                  Z.lengthComputable && (we.total = Z.total),
                    'text' === M.responseType &&
                      Q.responseText &&
                      (we.partialText = Q.responseText),
                    G.next(we);
                },
                xe = Z => {
                  let we = { type: ut.UploadProgress, loaded: Z.loaded };
                  Z.lengthComputable && (we.total = Z.total), G.next(we);
                };
              return (
                Q.addEventListener('load', Rt),
                Q.addEventListener('error', tt),
                Q.addEventListener('timeout', tt),
                Q.addEventListener('abort', tt),
                M.reportProgress &&
                  (Q.addEventListener('progress', Ie),
                  null !== Xe &&
                    Q.upload &&
                    Q.upload.addEventListener('progress', xe)),
                Q.send(Xe),
                G.next({ type: ut.Sent }),
                () => {
                  Q.removeEventListener('error', tt),
                    Q.removeEventListener('abort', tt),
                    Q.removeEventListener('load', Rt),
                    Q.removeEventListener('timeout', tt),
                    M.reportProgress &&
                      (Q.removeEventListener('progress', Ie),
                      null !== Xe &&
                        Q.upload &&
                        Q.upload.removeEventListener('progress', xe)),
                    Q.readyState !== Q.DONE && Q.abort();
                }
              );
            });
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(s.JF));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      const kt = new x.OlP('XSRF_ENABLED'),
        at = new x.OlP('XSRF_COOKIE_NAME', {
          providedIn: 'root',
          factory: () => 'XSRF-TOKEN',
        }),
        ee = new x.OlP('XSRF_HEADER_NAME', {
          providedIn: 'root',
          factory: () => 'X-XSRF-TOKEN',
        });
      class Me {}
      let je = (() => {
        class F {
          constructor(M, G, Q) {
            (this.doc = M),
              (this.platform = G),
              (this.cookieName = Q),
              (this.lastCookieString = ''),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ('server' === this.platform) return null;
            const M = this.doc.cookie || '';
            return (
              M !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, s.Mx)(M, this.cookieName)),
                (this.lastCookieString = M)),
              this.lastToken
            );
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(s.K0), x.LFG(x.Lbi), x.LFG(at));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      function De(F, b) {
        const M = F.url.toLowerCase();
        if (
          !(0, x.f3M)(kt) ||
          'GET' === F.method ||
          'HEAD' === F.method ||
          M.startsWith('http://') ||
          M.startsWith('https://')
        )
          return b(F);
        const G = (0, x.f3M)(Me).getToken(),
          Q = (0, x.f3M)(ee);
        return (
          null != G &&
            !F.headers.has(Q) &&
            (F = F.clone({ headers: F.headers.set(Q, G) })),
          b(F)
        );
      }
      var H = (() => (
        ((H = H || {})[(H.Interceptors = 0)] = 'Interceptors'),
        (H[(H.LegacyInterceptors = 1)] = 'LegacyInterceptors'),
        (H[(H.CustomXsrfConfiguration = 2)] = 'CustomXsrfConfiguration'),
        (H[(H.NoXsrfProtection = 3)] = 'NoXsrfProtection'),
        (H[(H.JsonpSupport = 4)] = 'JsonpSupport'),
        (H[(H.RequestsMadeViaParent = 5)] = 'RequestsMadeViaParent'),
        H
      ))();
      function ke(F, b) {
        return { ɵkind: F, ɵproviders: b };
      }
      function he(...F) {
        const b = [
          ze,
          dn,
          dt,
          { provide: ue, useExisting: dt },
          { provide: ce, useExisting: dn },
          { provide: Le, useValue: De, multi: !0 },
          { provide: kt, useValue: !0 },
          { provide: Me, useClass: je },
        ];
        for (const M of F) b.push(...M.ɵproviders);
        return (0, x.MR2)(b);
      }
      const pe = new x.OlP('LEGACY_INTERCEPTOR_FN');
      let Je = (() => {
        class F {}
        return (
          (F.ɵfac = function (M) {
            return new (M || F)();
          }),
          (F.ɵmod = x.oAB({ type: F })),
          (F.ɵinj = x.cJS({
            providers: [
              he(
                ke(H.LegacyInterceptors, [
                  { provide: pe, useFactory: Ye },
                  { provide: Le, useExisting: pe, multi: !0 },
                ]),
              ),
            ],
          })),
          F
        );
      })();
    },
    4650: (Pt, Re, D) => {
      D.d(Re, {
        $8M: () => ps,
        $WT: () => ei,
        $Z: () => Mh,
        AFp: () => Mm,
        ALo: () => Wp,
        AaK: () => ue,
        BQk: () => Nl,
        CHM: () => Lr,
        CRH: () => im,
        CZH: () => Zl,
        CqO: () => lf,
        D6c: () => jD,
        EJc: () => rD,
        EiD: () => $u,
        EpF: () => sf,
        F$t: () => ff,
        F4k: () => af,
        FYo: () => oh,
        FiY: () => es,
        Gf: () => tm,
        GfV: () => sh,
        Gpc: () => fe,
        Gre: () => Gf,
        Hsn: () => pf,
        Ikx: () => xd,
        JOm: () => Jt,
        JVY: () => Vg,
        JZr: () => vt,
        KtG: () => fo,
        L6k: () => Ug,
        LAX: () => jg,
        LFG: () => Je,
        Lbi: () => eD,
        Lck: () => Qy,
        MAs: () => nf,
        MMx: () => Rd,
        MR2: () => o_,
        NdJ: () => fd,
        O4$: () => In,
        OlP: () => ii,
        Oqu: () => Cd,
        P3R: () => Wu,
        PXZ: () => bD,
        Q6J: () => cd,
        QGY: () => hd,
        QbO: () => tD,
        Qsj: () => y_,
        R0b: () => Co,
        RDi: () => Og,
        Rgc: () => el,
        SBq: () => Ua,
        Sil: () => sD,
        Suo: () => nm,
        TTD: () => Er,
        TgZ: () => Rl,
        Udp: () => bd,
        VKq: () => Up,
        W1O: () => am,
        WFA: () => pd,
        WLB: () => Hp,
        X6Q: () => ED,
        XFs: () => kt,
        Xpm: () => Cn,
        Xts: () => Oc,
        Y36: () => aa,
        YKP: () => Tp,
        YNc: () => tf,
        Yjl: () => jt,
        Yz7: () => mt,
        Z0I: () => $t,
        ZZ4: () => ru,
        _Bn: () => kp,
        _UZ: () => ud,
        _Vd: () => Va,
        _c5: () => UD,
        _uU: () => Lf,
        aQg: () => ou,
        c2e: () => nD,
        cJS: () => a,
        cg1: () => wd,
        d8E: () => Ed,
        dDg: () => mD,
        dqk: () => je,
        eBb: () => Hg,
        eFA: () => Vm,
        eJc: () => jd,
        ekj: () => yd,
        eoX: () => Pm,
        f3M: () => Te,
        g9A: () => Sm,
        h0i: () => Da,
        hGG: () => HD,
        hij: () => Vl,
        iGM: () => em,
        ifc: () => Rt,
        ip1: () => wm,
        jDz: () => Rp,
        kL8: () => np,
        kcU: () => yn,
        lG2: () => $n,
        lcZ: () => Kp,
        lqb: () => Hs,
        lri: () => Rm,
        mCW: () => bl,
        n5z: () => Ma,
        n_E: () => $l,
        oAB: () => ir,
        oxw: () => hf,
        pB0: () => zg,
        q3G: () => Gi,
        qLn: () => Ha,
        qOj: () => od,
        qZA: () => Fl,
        qzn: () => na,
        rWj: () => Fm,
        sBO: () => wD,
        s_b: () => Gl,
        soG: () => ql,
        tBr: () => Ho,
        tb: () => Lm,
        tp0: () => Fs,
        uIk: () => ld,
        vHH: () => Be,
        vpe: () => Wo,
        wAp: () => xn,
        xp6: () => fh,
        ynx: () => Pl,
        z2F: () => Ql,
        z3N: () => ns,
        zSh: () => Nc,
        zs3: () => js,
      });
      var s = D(7579),
        x = D(727),
        L = D(9751),
        ne = D(6451),
        te = D(3099);
      function de(e) {
        for (let t in e) if (e[t] === de) return t;
        throw Error('Could not find renamed property on target object.');
      }
      function ve(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function ue(e) {
        if ('string' == typeof e) return e;
        if (Array.isArray(e)) return '[' + e.map(ue).join(', ') + ']';
        if (null == e) return '' + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const t = e.toString();
        if (null == t) return '' + t;
        const n = t.indexOf('\n');
        return -1 === n ? t : t.substring(0, n);
      }
      function ce(e, t) {
        return null == e || '' === e
          ? null === t
            ? ''
            : t
          : null == t || '' === t
          ? e
          : e + ' ' + t;
      }
      const le = de({ __forward_ref__: de });
      function fe(e) {
        return (
          (e.__forward_ref__ = fe),
          (e.toString = function () {
            return ue(this());
          }),
          e
        );
      }
      function re(e) {
        return Ne(e) ? e() : e;
      }
      function Ne(e) {
        return (
          'function' == typeof e &&
          e.hasOwnProperty(le) &&
          e.__forward_ref__ === fe
        );
      }
      function He(e) {
        return e && !!e.ɵproviders;
      }
      const vt = 'https://g.co/ng/security#xss';
      class Be extends Error {
        constructor(t, n) {
          super(_t(t, n)), (this.code = t);
        }
      }
      function _t(e, t) {
        return `NG0${Math.abs(e)}${t ? ': ' + t.trim() : ''}`;
      }
      function lt(e) {
        return 'string' == typeof e ? e : null == e ? '' : String(e);
      }
      function X(e, t) {
        throw new Be(-201, !1);
      }
      function Le(e, t) {
        null == e &&
          (function Ye(e, t, n, i) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == i ? '' : ` [Expected=> ${n} ${i} ${t} <=Actual]`),
            );
          })(t, e, null, '!=');
      }
      function mt(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function a(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function ft(e) {
        return et(e, pn) || et(e, Tn);
      }
      function $t(e) {
        return null !== ft(e);
      }
      function et(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function Wt(e) {
        return e && (e.hasOwnProperty(Sn) || e.hasOwnProperty(dn))
          ? e[Sn]
          : null;
      }
      const pn = de({ ɵprov: de }),
        Sn = de({ ɵinj: de }),
        Tn = de({ ngInjectableDef: de }),
        dn = de({ ngInjectorDef: de });
      var kt = (() => (
        ((kt = kt || {})[(kt.Default = 0)] = 'Default'),
        (kt[(kt.Host = 1)] = 'Host'),
        (kt[(kt.Self = 2)] = 'Self'),
        (kt[(kt.SkipSelf = 4)] = 'SkipSelf'),
        (kt[(kt.Optional = 8)] = 'Optional'),
        kt
      ))();
      let En;
      function Y(e) {
        const t = En;
        return (En = e), t;
      }
      function ee(e, t, n) {
        const i = ft(e);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : n & kt.Optional
          ? null
          : void 0 !== t
          ? t
          : void X(ue(e));
      }
      const je = (() =>
          (typeof globalThis < 'u' && globalThis) ||
          (typeof global < 'u' && global) ||
          (typeof window < 'u' && window) ||
          (typeof self < 'u' &&
            typeof WorkerGlobalScope < 'u' &&
            self instanceof WorkerGlobalScope &&
            self))(),
        ke = {},
        he = '__NG_DI_FLAG__',
        ge = 'ngTempTokenPath',
        pe = 'ngTokenPath',
        nt = /\n/gm,
        wt = '\u0275',
        Ot = '__source';
      let Dn;
      function Oe(e) {
        const t = Dn;
        return (Dn = e), t;
      }
      function yt(e, t = kt.Default) {
        if (void 0 === Dn) throw new Be(-203, !1);
        return null === Dn
          ? ee(e, void 0, t)
          : Dn.get(e, t & kt.Optional ? null : void 0, t);
      }
      function Je(e, t = kt.Default) {
        return (
          (function at() {
            return En;
          })() || yt
        )(re(e), t);
      }
      function Te(e, t = kt.Default) {
        return Je(e, F(t));
      }
      function F(e) {
        return typeof e > 'u' || 'number' == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function b(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const i = re(e[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Be(900, !1);
            let o,
              l = kt.Default;
            for (let u = 0; u < i.length; u++) {
              const v = i[u],
                E = G(v);
              'number' == typeof E
                ? -1 === E
                  ? (o = v.token)
                  : (l |= E)
                : (o = v);
            }
            t.push(Je(o, l));
          } else t.push(Je(i));
        }
        return t;
      }
      function M(e, t) {
        return (e[he] = t), (e.prototype[he] = t), e;
      }
      function G(e) {
        return e[he];
      }
      function St(e) {
        return { toString: e }.toString();
      }
      var rn = (() => (
          ((rn = rn || {})[(rn.OnPush = 0)] = 'OnPush'),
          (rn[(rn.Default = 1)] = 'Default'),
          rn
        ))(),
        Rt = (() => {
          return (
            ((e = Rt || (Rt = {}))[(e.Emulated = 0)] = 'Emulated'),
            (e[(e.None = 2)] = 'None'),
            (e[(e.ShadowDom = 3)] = 'ShadowDom'),
            Rt
          );
          var e;
        })();
      const tt = {},
        Kt = [],
        Ie = de({ ɵcmp: de }),
        xe = de({ ɵdir: de }),
        Z = de({ ɵpipe: de }),
        we = de({ ɵmod: de }),
        rt = de({ ɵfac: de }),
        Bt = de({ __NG_ELEMENT_ID__: de });
      let qt = 0;
      function Cn(e) {
        return St(() => {
          const t = qr(e),
            n = {
              ...t,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === rn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              data: e.data || {},
              encapsulation: e.encapsulation || Rt.Emulated,
              id: 'c' + qt++,
              styles: e.styles || Kt,
              _: null,
              schemas: e.schemas || null,
              tView: null,
            };
          Vi(n);
          const i = e.dependencies;
          return (n.directiveDefs = ur(i, !1)), (n.pipeDefs = ur(i, !0)), n;
        });
      }
      function ki(e) {
        return vn(e) || gn(e);
      }
      function yi(e) {
        return null !== e;
      }
      function ir(e) {
        return St(() => ({
          type: e.type,
          bootstrap: e.bootstrap || Kt,
          declarations: e.declarations || Kt,
          imports: e.imports || Kt,
          exports: e.exports || Kt,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function Qn(e, t) {
        if (null == e) return tt;
        const n = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let o = e[i],
              l = o;
            Array.isArray(o) && ((l = o[1]), (o = o[0])),
              (n[o] = i),
              t && (t[o] = l);
          }
        return n;
      }
      function $n(e) {
        return St(() => {
          const t = qr(e);
          return Vi(t), t;
        });
      }
      function jt(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function vn(e) {
        return e[Ie] || null;
      }
      function gn(e) {
        return e[xe] || null;
      }
      function Kn(e) {
        return e[Z] || null;
      }
      function ei(e) {
        const t = vn(e) || gn(e) || Kn(e);
        return null !== t && t.standalone;
      }
      function Di(e, t) {
        const n = e[we] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${ue(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function qr(e) {
        const t = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: t,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          selectors: e.selectors || Kt,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: Qn(e.inputs, t),
          outputs: Qn(e.outputs),
        };
      }
      function Vi(e) {
        e.features?.forEach(t => t(e));
      }
      function ur(e, t) {
        if (!e) return null;
        const n = t ? Kn : ki;
        return () =>
          ('function' == typeof e ? e() : e).map(i => n(i)).filter(yi);
      }
      const di = 0,
        zt = 1,
        un = 2,
        Un = 3,
        ti = 4,
        ui = 5,
        Xn = 6,
        hi = 7,
        wn = 8,
        Ti = 9,
        Ci = 10,
        fn = 11,
        Ji = 12,
        Ki = 13,
        yr = 14,
        xi = 15,
        ri = 16,
        Pi = 17,
        Ni = 18,
        Li = 19,
        hr = 20,
        fr = 21,
        Hn = 22,
        Zi = 1,
        Dr = 2,
        rr = 7,
        gi = 8,
        Fn = 9,
        J = 10;
      function Se(e) {
        return Array.isArray(e) && 'object' == typeof e[Zi];
      }
      function Ke(e) {
        return Array.isArray(e) && !0 === e[Zi];
      }
      function Tt(e) {
        return 0 != (4 & e.flags);
      }
      function It(e) {
        return e.componentOffset > -1;
      }
      function hn(e) {
        return 1 == (1 & e.flags);
      }
      function bn(e) {
        return !!e.template;
      }
      function Pn(e) {
        return 0 != (256 & e[un]);
      }
      function qi(e, t) {
        return e.hasOwnProperty(rt) ? e[rt] : null;
      }
      class _i {
        constructor(t, n, i) {
          (this.previousValue = t),
            (this.currentValue = n),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Er() {
        return pr;
      }
      function pr(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = zr), uo;
      }
      function uo() {
        const e = mr(this),
          t = e?.current;
        if (t) {
          const n = e.previous;
          if (n === tt) e.previous = t;
          else for (let i in t) n[i] = t[i];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function zr(e, t, n, i) {
        const o = this.declaredInputs[n],
          l =
            mr(e) ||
            (function Ko(e, t) {
              return (e[wr] = t);
            })(e, { previous: tt, current: null }),
          u = l.current || (l.current = {}),
          v = l.previous,
          E = v[o];
        (u[o] = new _i(E && E.currentValue, t, v === tt)), (e[i] = t);
      }
      Er.ngInherit = !0;
      const wr = '__ngSimpleChanges__';
      function mr(e) {
        return e[wr] || null;
      }
      const wi = function (e, t, n) {},
        ho = 'svg';
      function ai(e) {
        for (; Array.isArray(e); ) e = e[di];
        return e;
      }
      function li(e, t) {
        return ai(t[e]);
      }
      function vi(e, t) {
        return ai(t[e.index]);
      }
      function Gr(e, t) {
        return e.data[t];
      }
      function Mr(e, t) {
        return e[t];
      }
      function ni(e, t) {
        const n = t[e];
        return Se(n) ? n : n[di];
      }
      function Hi(e) {
        return 64 == (64 & e[un]);
      }
      function Bi(e, t) {
        return null == t ? null : e[t];
      }
      function Nr(e) {
        e[Ni] = 0;
      }
      function no(e, t) {
        e[ui] += t;
        let n = e,
          i = e[Un];
        for (
          ;
          null !== i && ((1 === t && 1 === n[ui]) || (-1 === t && 0 === n[ui]));

        )
          (i[ui] += t), (n = i), (i = i[Un]);
      }
      const _n = { lFrame: V(null), bindingsEnabled: !0 };
      function it() {
        return _n.bindingsEnabled;
      }
      function ht() {
        return _n.lFrame.lView;
      }
      function kn() {
        return _n.lFrame.tView;
      }
      function Lr(e) {
        return (_n.lFrame.contextLView = e), e[wn];
      }
      function fo(e) {
        return (_n.lFrame.contextLView = null), e;
      }
      function ci() {
        let e = as();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function as() {
        return _n.lFrame.currentTNode;
      }
      function lr(e, t) {
        const n = _n.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function Sr() {
        return _n.lFrame.isParent;
      }
      function io() {
        _n.lFrame.isParent = !1;
      }
      function Oi() {
        const e = _n.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function _r() {
        return _n.lFrame.bindingIndex++;
      }
      function cr(e) {
        const t = _n.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function cs(e, t) {
        const n = _n.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), po(t);
      }
      function po(e) {
        _n.lFrame.currentDirectiveIndex = e;
      }
      function oo(e) {
        const t = _n.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function mo() {
        return _n.lFrame.currentQueryIndex;
      }
      function No(e) {
        _n.lFrame.currentQueryIndex = e;
      }
      function B(e) {
        const t = e[zt];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[Xn] : null;
      }
      function h(e, t, n) {
        if (n & kt.SkipSelf) {
          let o = t,
            l = e;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              n & kt.Host ||
              ((o = B(l)), null === o || ((l = l[xi]), 10 & o.type)));

          );
          if (null === o) return !1;
          (t = o), (e = l);
        }
        const i = (_n.lFrame = S());
        return (i.currentTNode = t), (i.lView = e), !0;
      }
      function p(e) {
        const t = S(),
          n = e[zt];
        (_n.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function S() {
        const e = _n.lFrame,
          t = null === e ? null : e.child;
        return null === t ? V(e) : t;
      }
      function V(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function q() {
        const e = _n.lFrame;
        return (
          (_n.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const _e = q;
      function Ee() {
        const e = q();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function Nt() {
        return _n.lFrame.selectedIndex;
      }
      function Zt(e) {
        _n.lFrame.selectedIndex = e;
      }
      function ln() {
        const e = _n.lFrame;
        return Gr(e.tView, e.selectedIndex);
      }
      function In() {
        _n.lFrame.currentNamespace = ho;
      }
      function yn() {
        !(function jn() {
          _n.lFrame.currentNamespace = null;
        })();
      }
      function fi(e, t) {
        for (let n = t.directiveStart, i = t.directiveEnd; n < i; n++) {
          const l = e.data[n].type.prototype,
            {
              ngAfterContentInit: u,
              ngAfterContentChecked: v,
              ngAfterViewInit: E,
              ngAfterViewChecked: N,
              ngOnDestroy: z,
            } = l;
          u && (e.contentHooks ?? (e.contentHooks = [])).push(-n, u),
            v &&
              ((e.contentHooks ?? (e.contentHooks = [])).push(n, v),
              (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, v)),
            E && (e.viewHooks ?? (e.viewHooks = [])).push(-n, E),
            N &&
              ((e.viewHooks ?? (e.viewHooks = [])).push(n, N),
              (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, N)),
            null != z && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, z);
        }
      }
      function pi(e, t, n) {
        P(e, t, 3, n);
      }
      function vr(e, t, n, i) {
        (3 & e[un]) === n && P(e, t, n, i);
      }
      function y(e, t) {
        let n = e[un];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[un] = n));
      }
      function P(e, t, n, i) {
        const l = i ?? -1,
          u = t.length - 1;
        let v = 0;
        for (let E = void 0 !== i ? 65535 & e[Ni] : 0; E < u; E++)
          if ('number' == typeof t[E + 1]) {
            if (((v = t[E]), null != i && v >= i)) break;
          } else
            t[E] < 0 && (e[Ni] += 65536),
              (v < l || -1 == l) &&
                (A(e, n, t, E), (e[Ni] = (4294901760 & e[Ni]) + E + 2)),
              E++;
      }
      function A(e, t, n, i) {
        const o = n[i] < 0,
          l = n[i + 1],
          v = e[o ? -n[i] : n[i]];
        if (o) {
          if (e[un] >> 11 < e[Ni] >> 16 && (3 & e[un]) === t) {
            (e[un] += 2048), wi(4, v, l);
            try {
              l.call(v);
            } finally {
              wi(5, v, l);
            }
          }
        } else {
          wi(4, v, l);
          try {
            l.call(v);
          } finally {
            wi(5, v, l);
          }
        }
      }
      const j = -1;
      class ae {
        constructor(t, n, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = n),
            (this.injectImpl = i);
        }
      }
      function sn(e, t, n) {
        let i = 0;
        for (; i < n.length; ) {
          const o = n[i];
          if ('number' == typeof o) {
            if (0 !== o) break;
            i++;
            const l = n[i++],
              u = n[i++],
              v = n[i++];
            e.setAttribute(t, u, v, l);
          } else {
            const l = o,
              u = n[++i];
            Ai(l) ? e.setProperty(t, l, u) : e.setAttribute(t, l, u), i++;
          }
        }
        return i;
      }
      function On(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function Ai(e) {
        return 64 === e.charCodeAt(0);
      }
      function Yn(e, t) {
        if (null !== t && 0 !== t.length)
          if (null === e || 0 === e.length) e = t.slice();
          else {
            let n = -1;
            for (let i = 0; i < t.length; i++) {
              const o = t[i];
              'number' == typeof o
                ? (n = o)
                : 0 === n ||
                  Si(e, n, o, null, -1 === n || 2 === n ? t[++i] : null);
            }
          }
        return e;
      }
      function Si(e, t, n, i, o) {
        let l = 0,
          u = e.length;
        if (-1 === t) u = -1;
        else
          for (; l < e.length; ) {
            const v = e[l++];
            if ('number' == typeof v) {
              if (v === t) {
                u = -1;
                break;
              }
              if (v > t) {
                u = l - 1;
                break;
              }
            }
          }
        for (; l < e.length; ) {
          const v = e[l];
          if ('number' == typeof v) break;
          if (v === n) {
            if (null === i) return void (null !== o && (e[l + 1] = o));
            if (i === e[l + 1]) return void (e[l + 2] = o);
          }
          l++, null !== i && l++, null !== o && l++;
        }
        -1 !== u && (e.splice(u, 0, t), (l = u + 1)),
          e.splice(l++, 0, n),
          null !== i && e.splice(l++, 0, i),
          null !== o && e.splice(l++, 0, o);
      }
      function Vn(e) {
        return e !== j;
      }
      function kr(e) {
        return 32767 & e;
      }
      function mi(e, t) {
        let n = (function Ao(e) {
            return e >> 16;
          })(e),
          i = t;
        for (; n > 0; ) (i = i[xi]), n--;
        return i;
      }
      let Wr = !0;
      function Qi(e) {
        const t = Wr;
        return (Wr = e), t;
      }
      const Zo = 255,
        hs = 5;
      let nl = 0;
      const Kr = {};
      function Ds(e, t) {
        const n = Ea(e, t);
        if (-1 !== n) return n;
        const i = t[zt];
        i.firstCreatePass &&
          ((e.injectorIndex = t.length),
          Ks(i.data, e),
          Ks(t, null),
          Ks(i.blueprint, null));
        const o = Zs(e, t),
          l = e.injectorIndex;
        if (Vn(o)) {
          const u = kr(o),
            v = mi(o, t),
            E = v[zt].data;
          for (let N = 0; N < 8; N++) t[l + N] = v[u + N] | E[u + N];
        }
        return (t[l + 8] = o), l;
      }
      function Ks(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Ea(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Zs(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          i = null,
          o = t;
        for (; null !== o; ) {
          if (((i = As(o)), null === i)) return j;
          if ((n++, (o = o[xi]), -1 !== i.injectorIndex))
            return i.injectorIndex | (n << 16);
        }
        return j;
      }
      function Xi(e, t, n) {
        !(function Ws(e, t, n) {
          let i;
          'string' == typeof n
            ? (i = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(Bt) && (i = n[Bt]),
            null == i && (i = n[Bt] = nl++);
          const o = i & Zo;
          t.data[e + (o >> hs)] |= 1 << o;
        })(e, t, n);
      }
      function fs(e, t, n) {
        if (n & kt.Optional || void 0 !== e) return e;
        X();
      }
      function wa(e, t, n, i) {
        if (
          (n & kt.Optional && void 0 === i && (i = null),
          !(n & (kt.Self | kt.Host)))
        ) {
          const o = e[Ti],
            l = Y(void 0);
          try {
            return o ? o.get(t, i, n & kt.Optional) : ee(t, i, n & kt.Optional);
          } finally {
            Y(l);
          }
        }
        return fs(i, 0, n);
      }
      function qs(e, t, n, i = kt.Default, o) {
        if (null !== e) {
          if (1024 & t[un]) {
            const u = (function Io(e, t, n, i, o) {
              let l = e,
                u = t;
              for (
                ;
                null !== l && null !== u && 1024 & u[un] && !(256 & u[un]);

              ) {
                const v = Cs(l, u, n, i | kt.Self, Kr);
                if (v !== Kr) return v;
                let E = l.parent;
                if (!E) {
                  const N = u[fr];
                  if (N) {
                    const z = N.get(n, Kr, i);
                    if (z !== Kr) return z;
                  }
                  (E = As(u)), (u = u[xi]);
                }
                l = E;
              }
              return o;
            })(e, t, n, i, Kr);
            if (u !== Kr) return u;
          }
          const l = Cs(e, t, n, i, Kr);
          if (l !== Kr) return l;
        }
        return wa(t, n, i, o);
      }
      function Cs(e, t, n, i, o) {
        const l = (function Es(e) {
          if ('string' == typeof e) return e.charCodeAt(0) || 0;
          const t = e.hasOwnProperty(Bt) ? e[Bt] : void 0;
          return 'number' == typeof t ? (t >= 0 ? t & Zo : Bo) : t;
        })(n);
        if ('function' == typeof l) {
          if (!h(t, e, i)) return i & kt.Host ? fs(o, 0, i) : wa(t, n, i, o);
          try {
            const u = l(i);
            if (null != u || i & kt.Optional) return u;
            X();
          } finally {
            _e();
          }
        } else if ('number' == typeof l) {
          let u = null,
            v = Ea(e, t),
            E = j,
            N = i & kt.Host ? t[ri][Xn] : null;
          for (
            (-1 === v || i & kt.SkipSelf) &&
            ((E = -1 === v ? Zs(e, t) : t[v + 8]),
            E !== j && dr(i, !1)
              ? ((u = t[zt]), (v = kr(E)), (t = mi(E, t)))
              : (v = -1));
            -1 !== v;

          ) {
            const z = t[zt];
            if (ws(l, v, z.data)) {
              const oe = rl(v, t, n, u, i, N);
              if (oe !== Kr) return oe;
            }
            (E = t[v + 8]),
              E !== j && dr(i, t[zt].data[v + 8] === N) && ws(l, v, t)
                ? ((u = z), (v = kr(E)), (t = mi(E, t)))
                : (v = -1);
          }
        }
        return o;
      }
      function rl(e, t, n, i, o, l) {
        const u = t[zt],
          v = u.data[e + 8],
          z = xs(
            v,
            u,
            n,
            null == i ? It(v) && Wr : i != u && 0 != (3 & v.type),
            o & kt.Host && l === v,
          );
        return null !== z ? So(t, u, z, v) : Kr;
      }
      function xs(e, t, n, i, o) {
        const l = e.providerIndexes,
          u = t.data,
          v = 1048575 & l,
          E = e.directiveStart,
          z = l >> 20,
          Fe = o ? v + z : e.directiveEnd;
        for (let Ze = i ? v : v + z; Ze < Fe; Ze++) {
          const Ct = u[Ze];
          if ((Ze < E && n === Ct) || (Ze >= E && Ct.type === n)) return Ze;
        }
        if (o) {
          const Ze = u[E];
          if (Ze && bn(Ze) && Ze.type === n) return E;
        }
        return null;
      }
      function So(e, t, n, i) {
        let o = e[n];
        const l = t.data;
        if (
          (function ot(e) {
            return e instanceof ae;
          })(o)
        ) {
          const u = o;
          u.resolving &&
            (function W(e, t) {
              const n = t ? `. Dependency path: ${t.join(' > ')} > ${e}` : '';
              throw new Be(
                -200,
                `Circular dependency in DI detected for ${e}${n}`,
              );
            })(
              (function bt(e) {
                return 'function' == typeof e
                  ? e.name || e.toString()
                  : 'object' == typeof e &&
                    null != e &&
                    'function' == typeof e.type
                  ? e.type.name || e.type.toString()
                  : lt(e);
              })(l[n]),
            );
          const v = Qi(u.canSeeViewProviders);
          u.resolving = !0;
          const E = u.injectImpl ? Y(u.injectImpl) : null;
          h(e, i, kt.Default);
          try {
            (o = e[n] = u.factory(void 0, l, e, i)),
              t.firstCreatePass &&
                n >= i.directiveStart &&
                (function Mi(e, t, n) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: l,
                  } = t.type.prototype;
                  if (i) {
                    const u = pr(t);
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, u),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, u);
                  }
                  o &&
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o),
                    l &&
                      ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, l),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, l));
                })(n, l[n], t);
          } finally {
            null !== E && Y(E), Qi(v), (u.resolving = !1), _e();
          }
        }
        return o;
      }
      function ws(e, t, n) {
        return !!(n[t + (e >> hs)] & (1 << e));
      }
      function dr(e, t) {
        return !(e & kt.Self || (e & kt.Host && t));
      }
      class Lo {
        constructor(t, n) {
          (this._tNode = t), (this._lView = n);
        }
        get(t, n, i) {
          return qs(this._tNode, this._lView, t, F(i), n);
        }
      }
      function Bo() {
        return new Lo(ci(), ht());
      }
      function Ma(e) {
        return St(() => {
          const t = e.prototype.constructor,
            n = t[rt] || Ms(t),
            i = Object.prototype;
          let o = Object.getPrototypeOf(e.prototype).constructor;
          for (; o && o !== i; ) {
            const l = o[rt] || Ms(o);
            if (l && l !== n) return l;
            o = Object.getPrototypeOf(o);
          }
          return l => new l();
        });
      }
      function Ms(e) {
        return Ne(e)
          ? () => {
              const t = Ms(re(e));
              return t && t();
            }
          : qi(e);
      }
      function As(e) {
        const t = e[zt],
          n = t.type;
        return 2 === n ? t.declTNode : 1 === n ? e[Xn] : null;
      }
      function ps(e) {
        return (function il(e, t) {
          if ('class' === t) return e.classes;
          if ('style' === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const i = n.length;
            let o = 0;
            for (; o < i; ) {
              const l = n[o];
              if (On(l)) break;
              if (0 === l) o += 2;
              else if ('number' == typeof l)
                for (o++; o < i && 'string' == typeof n[o]; ) o++;
              else {
                if (l === t) return n[o + 1];
                o += 2;
              }
            }
          }
          return null;
        })(ci(), e);
      }
      const qo = '__parameters__';
      function Uo(e, t, n) {
        return St(() => {
          const i = (function Qo(e) {
            return function (...n) {
              if (e) {
                const i = e(...n);
                for (const o in i) this[o] = i[o];
              }
            };
          })(t);
          function o(...l) {
            if (this instanceof o) return i.apply(this, l), this;
            const u = new o(...l);
            return (v.annotation = u), v;
            function v(E, N, z) {
              const oe = E.hasOwnProperty(qo)
                ? E[qo]
                : Object.defineProperty(E, qo, { value: [] })[qo];
              for (; oe.length <= z; ) oe.push(null);
              return (oe[z] = oe[z] || []).push(u), E;
            }
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      class ii {
        constructor(t, n) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof n
              ? (this.__NG_ELEMENT_ID__ = n)
              : void 0 !== n &&
                (this.ɵprov = mt({
                  token: this,
                  providedIn: n.providedIn || 'root',
                  factory: n.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function go(e, t) {
        e.forEach(n => (Array.isArray(n) ? go(n, t) : t(n)));
      }
      function Ts(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function Os(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function f(e, t) {
        const n = [];
        for (let i = 0; i < e; i++) n.push(t);
        return n;
      }
      function U(e, t, n) {
        let i = Ve(e, t);
        return (
          i >= 0
            ? (e[1 | i] = n)
            : ((i = ~i),
              (function C(e, t, n, i) {
                let o = e.length;
                if (o == t) e.push(n, i);
                else if (1 === o) e.push(i, e[0]), (e[0] = n);
                else {
                  for (o--, e.push(e[o - 1], e[o]); o > t; )
                    (e[o] = e[o - 2]), o--;
                  (e[t] = n), (e[t + 1] = i);
                }
              })(e, i, t, n)),
          i
        );
      }
      function K(e, t) {
        const n = Ve(e, t);
        if (n >= 0) return e[1 | n];
      }
      function Ve(e, t) {
        return (function Xt(e, t, n) {
          let i = 0,
            o = e.length >> n;
          for (; o !== i; ) {
            const l = i + ((o - i) >> 1),
              u = e[l << n];
            if (t === u) return l << n;
            u > t ? (o = l) : (i = l + 1);
          }
          return ~(o << n);
        })(e, t, 1);
      }
      const Ho = M(
          Uo('Inject', e => ({ token: e })),
          -1,
        ),
        es = M(Uo('Optional'), 8),
        Fs = M(Uo('SkipSelf'), 4);
      var Jt = (() => (
        ((Jt = Jt || {})[(Jt.Important = 1)] = 'Important'),
        (Jt[(Jt.DashCase = 2)] = 'DashCase'),
        Jt
      ))();
      const vs = new Map();
      let uc = 0;
      const fc = '__ngContext__';
      function Or(e, t) {
        Se(t)
          ? ((e[fc] = t[hr]),
            (function yo(e) {
              vs.set(e[hr], e);
            })(t))
          : (e[fc] = t);
      }
      let pc;
      function mc(e, t) {
        return pc(e, t);
      }
      function Pa(e) {
        const t = e[Un];
        return Ke(t) ? t[Un] : t;
      }
      function gc(e) {
        return vu(e[Ki]);
      }
      function _c(e) {
        return vu(e[ti]);
      }
      function vu(e) {
        for (; null !== e && !Ke(e); ) e = e[ti];
        return e;
      }
      function ea(e, t, n, i, o) {
        if (null != i) {
          let l,
            u = !1;
          Ke(i) ? (l = i) : Se(i) && ((u = !0), (i = i[di]));
          const v = ai(i);
          0 === e && null !== n
            ? null == o
              ? Eu(t, n, v)
              : Bs(t, n, v, o || null, !0)
            : 1 === e && null !== n
            ? Bs(t, n, v, o || null, !0)
            : 2 === e
            ? (function Ec(e, t, n) {
                const i = pl(e, t);
                i &&
                  (function xg(e, t, n, i) {
                    e.removeChild(t, n, i);
                  })(e, i, t, n);
              })(t, v, u)
            : 3 === e && t.destroyNode(v),
            null != l &&
              (function Mg(e, t, n, i, o) {
                const l = n[rr];
                l !== ai(n) && ea(t, e, i, l, o);
                for (let v = J; v < n.length; v++) {
                  const E = n[v];
                  Na(E[zt], E, e, t, i, l);
                }
              })(t, e, l, n, o);
        }
      }
      function bc(e, t, n) {
        return e.createElement(t, n);
      }
      function yu(e, t) {
        const n = e[Fn],
          i = n.indexOf(t),
          o = t[Un];
        512 & t[un] && ((t[un] &= -513), no(o, -1)), n.splice(i, 1);
      }
      function yc(e, t) {
        if (e.length <= J) return;
        const n = J + t,
          i = e[n];
        if (i) {
          const o = i[Pi];
          null !== o && o !== e && yu(o, i), t > 0 && (e[n - 1][ti] = i[ti]);
          const l = Os(e, J + t);
          !(function mg(e, t) {
            Na(e, t, t[fn], 2, null, null), (t[di] = null), (t[Xn] = null);
          })(i[zt], i);
          const u = l[Li];
          null !== u && u.detachView(l[zt]),
            (i[Un] = null),
            (i[ti] = null),
            (i[un] &= -65);
        }
        return i;
      }
      function Du(e, t) {
        if (!(128 & t[un])) {
          const n = t[fn];
          n.destroyNode && Na(e, t, n, 3, null, null),
            (function vg(e) {
              let t = e[Ki];
              if (!t) return Dc(e[zt], e);
              for (; t; ) {
                let n = null;
                if (Se(t)) n = t[Ki];
                else {
                  const i = t[J];
                  i && (n = i);
                }
                if (!n) {
                  for (; t && !t[ti] && t !== e; )
                    Se(t) && Dc(t[zt], t), (t = t[Un]);
                  null === t && (t = e),
                    Se(t) && Dc(t[zt], t),
                    (n = t && t[ti]);
                }
                t = n;
              }
            })(t);
        }
      }
      function Dc(e, t) {
        if (!(128 & t[un])) {
          (t[un] &= -65),
            (t[un] |= 128),
            (function Cg(e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const o = t[n[i]];
                  if (!(o instanceof ae)) {
                    const l = n[i + 1];
                    if (Array.isArray(l))
                      for (let u = 0; u < l.length; u += 2) {
                        const v = o[l[u]],
                          E = l[u + 1];
                        wi(4, v, E);
                        try {
                          E.call(v);
                        } finally {
                          wi(5, v, E);
                        }
                      }
                    else {
                      wi(4, o, l);
                      try {
                        l.call(o);
                      } finally {
                        wi(5, o, l);
                      }
                    }
                  }
                }
            })(e, t),
            (function Dg(e, t) {
              const n = e.cleanup,
                i = t[hi];
              let o = -1;
              if (null !== n)
                for (let l = 0; l < n.length - 1; l += 2)
                  if ('string' == typeof n[l]) {
                    const u = n[l + 3];
                    u >= 0 ? i[(o = u)]() : i[(o = -u)].unsubscribe(), (l += 2);
                  } else {
                    const u = i[(o = n[l + 1])];
                    n[l].call(u);
                  }
              if (null !== i) {
                for (let l = o + 1; l < i.length; l++) (0, i[l])();
                t[hi] = null;
              }
            })(e, t),
            1 === t[zt].type && t[fn].destroy();
          const n = t[Pi];
          if (null !== n && Ke(t[Un])) {
            n !== t[Un] && yu(n, t);
            const i = t[Li];
            null !== i && i.detachView(e);
          }
          !(function rg(e) {
            vs.delete(e[hr]);
          })(t);
        }
      }
      function Cu(e, t, n) {
        return (function xu(e, t, n) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return n[di];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: l } = e.data[i.directiveStart + o];
              if (l === Rt.None || l === Rt.Emulated) return null;
            }
            return vi(i, n);
          }
        })(e, t.parent, n);
      }
      function Bs(e, t, n, i, o) {
        e.insertBefore(t, n, i, o);
      }
      function Eu(e, t, n) {
        e.appendChild(t, n);
      }
      function wu(e, t, n, i, o) {
        null !== i ? Bs(e, t, n, i, o) : Eu(e, t, n);
      }
      function pl(e, t) {
        return e.parentNode(t);
      }
      function Mu(e, t, n) {
        return Su(e, t, n);
      }
      let Cc,
        _l,
        Ac,
        vl,
        Su = function Au(e, t, n) {
          return 40 & e.type ? vi(e, n) : null;
        };
      function ml(e, t, n, i) {
        const o = Cu(e, i, t),
          l = t[fn],
          v = Mu(i.parent || t[Xn], i, t);
        if (null != o)
          if (Array.isArray(n))
            for (let E = 0; E < n.length; E++) wu(l, o, n[E], v, !1);
          else wu(l, o, n, v, !1);
        void 0 !== Cc && Cc(l, i, t, n, o);
      }
      function gl(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return vi(t, e);
          if (4 & n) return xc(-1, e[t.index]);
          if (8 & n) {
            const i = t.child;
            if (null !== i) return gl(e, i);
            {
              const o = e[t.index];
              return Ke(o) ? xc(-1, o) : ai(o);
            }
          }
          if (32 & n) return mc(t, e)() || ai(e[t.index]);
          {
            const i = ku(e, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : gl(Pa(e[ri]), i)
              : gl(e, t.next);
          }
        }
        return null;
      }
      function ku(e, t) {
        return null !== t ? e[ri][Xn].projection[t.projection] : null;
      }
      function xc(e, t) {
        const n = J + e + 1;
        if (n < t.length) {
          const i = t[n],
            o = i[zt].firstChild;
          if (null !== o) return gl(i, o);
        }
        return t[rr];
      }
      function wc(e, t, n, i, o, l, u) {
        for (; null != n; ) {
          const v = i[n.index],
            E = n.type;
          if (
            (u && 0 === t && (v && Or(ai(v), i), (n.flags |= 2)),
            32 != (32 & n.flags))
          )
            if (8 & E) wc(e, t, n.child, i, o, l, !1), ea(t, e, o, v, l);
            else if (32 & E) {
              const N = mc(n, i);
              let z;
              for (; (z = N()); ) ea(t, e, o, z, l);
              ea(t, e, o, v, l);
            } else 16 & E ? Tu(e, t, i, n, o, l) : ea(t, e, o, v, l);
          n = u ? n.projectionNext : n.next;
        }
      }
      function Na(e, t, n, i, o, l) {
        wc(n, i, e.firstChild, t, o, l, !1);
      }
      function Tu(e, t, n, i, o, l) {
        const u = n[ri],
          E = u[Xn].projection[i.projection];
        if (Array.isArray(E))
          for (let N = 0; N < E.length; N++) ea(t, e, o, E[N], l);
        else wc(e, t, E, u[Un], o, l, !0);
      }
      function Ou(e, t, n) {
        '' === n
          ? e.removeAttribute(t, 'class')
          : e.setAttribute(t, 'class', n);
      }
      function Ru(e, t, n) {
        const { mergedAttrs: i, classes: o, styles: l } = n;
        null !== i && sn(e, t, i),
          null !== o && Ou(e, t, o),
          null !== l &&
            (function Sg(e, t, n) {
              e.setAttribute(t, 'style', n);
            })(e, t, l);
      }
      function ta(e) {
        return (
          (function Mc() {
            if (void 0 === _l && ((_l = null), je.trustedTypes))
              try {
                _l = je.trustedTypes.createPolicy('angular', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return _l;
          })()?.createHTML(e) || e
        );
      }
      function Og(e) {
        Ac = e;
      }
      function Lu(e) {
        return (
          (function Sc() {
            if (void 0 === vl && ((vl = null), je.trustedTypes))
              try {
                vl = je.trustedTypes.createPolicy('angular#unsafe-bypass', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return vl;
          })()?.createScriptURL(e) || e
        );
      }
      class Vs {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${vt})`;
        }
      }
      class Rg extends Vs {
        getTypeName() {
          return 'HTML';
        }
      }
      class Fg extends Vs {
        getTypeName() {
          return 'Style';
        }
      }
      class Pg extends Vs {
        getTypeName() {
          return 'Script';
        }
      }
      class Ng extends Vs {
        getTypeName() {
          return 'URL';
        }
      }
      class Lg extends Vs {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function ns(e) {
        return e instanceof Vs ? e.changingThisBreaksApplicationSecurity : e;
      }
      function na(e, t) {
        const n = (function Bg(e) {
          return (e instanceof Vs && e.getTypeName()) || null;
        })(e);
        if (null != n && n !== t) {
          if ('ResourceURL' === n && 'URL' === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${n} (see ${vt})`);
        }
        return n === t;
      }
      function Vg(e) {
        return new Rg(e);
      }
      function Ug(e) {
        return new Fg(e);
      }
      function Hg(e) {
        return new Pg(e);
      }
      function jg(e) {
        return new Ng(e);
      }
      function zg(e) {
        return new Lg(e);
      }
      class $g {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const n = new window.DOMParser().parseFromString(
              ta(t),
              'text/html',
            ).body;
            return null === n
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (n.removeChild(n.firstChild), n);
          } catch {
            return null;
          }
        }
      }
      class Yg {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                'sanitization-inert',
              ));
        }
        getInertBodyElement(t) {
          const n = this.inertDocument.createElement('template');
          return (n.innerHTML = ta(t)), n;
        }
      }
      const Wg = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function bl(e) {
        return (e = String(e)).match(Wg) ? e : 'unsafe:' + e;
      }
      function is(e) {
        const t = {};
        for (const n of e.split(',')) t[n] = !0;
        return t;
      }
      function La(...e) {
        const t = {};
        for (const n of e)
          for (const i in n) n.hasOwnProperty(i) && (t[i] = !0);
        return t;
      }
      const Vu = is('area,br,col,hr,img,wbr'),
        Uu = is('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Hu = is('rp,rt'),
        Ic = La(
          Vu,
          La(
            Uu,
            is(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul',
            ),
          ),
          La(
            Hu,
            is(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video',
            ),
          ),
          La(Hu, Uu),
        ),
        kc = is('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        ju = La(
          kc,
          is(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width',
          ),
          is(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext',
          ),
        ),
        Kg = is('script,style,template');
      class Zg {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let n = t.firstChild,
            i = !0;
          for (; n; )
            if (
              (n.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(n))
                : n.nodeType === Node.TEXT_NODE
                ? this.chars(n.nodeValue)
                : (this.sanitizedSomething = !0),
              i && n.firstChild)
            )
              n = n.firstChild;
            else
              for (; n; ) {
                n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                let o = this.checkClobberedElement(n, n.nextSibling);
                if (o) {
                  n = o;
                  break;
                }
                n = this.checkClobberedElement(n, n.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const n = t.nodeName.toLowerCase();
          if (!Ic.hasOwnProperty(n))
            return (this.sanitizedSomething = !0), !Kg.hasOwnProperty(n);
          this.buf.push('<'), this.buf.push(n);
          const i = t.attributes;
          for (let o = 0; o < i.length; o++) {
            const l = i.item(o),
              u = l.name,
              v = u.toLowerCase();
            if (!ju.hasOwnProperty(v)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let E = l.value;
            kc[v] && (E = bl(E)), this.buf.push(' ', u, '="', zu(E), '"');
          }
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const n = t.nodeName.toLowerCase();
          Ic.hasOwnProperty(n) &&
            !Vu.hasOwnProperty(n) &&
            (this.buf.push('</'), this.buf.push(n), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(zu(t));
        }
        checkClobberedElement(t, n) {
          if (
            n &&
            (t.compareDocumentPosition(n) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`,
            );
          return n;
        }
      }
      const qg = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Qg = /([^\#-~ |!])/g;
      function zu(e) {
        return e
          .replace(/&/g, '&amp;')
          .replace(qg, function (t) {
            return (
              '&#' +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ';'
            );
          })
          .replace(Qg, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let yl;
      function $u(e, t) {
        let n = null;
        try {
          yl =
            yl ||
            (function Bu(e) {
              const t = new Yg(e);
              return (function Gg() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    ta(''),
                    'text/html',
                  );
                } catch {
                  return !1;
                }
              })()
                ? new $g(t)
                : t;
            })(e);
          let i = t ? String(t) : '';
          n = yl.getInertBodyElement(i);
          let o = 5,
            l = i;
          do {
            if (0 === o)
              throw new Error(
                'Failed to sanitize html because the input is unstable',
              );
            o--, (i = l), (l = n.innerHTML), (n = yl.getInertBodyElement(i));
          } while (i !== l);
          return ta(new Zg().sanitizeChildren(Tc(n) || n));
        } finally {
          if (n) {
            const i = Tc(n) || n;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function Tc(e) {
        return 'content' in e &&
          (function Xg(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Gi = (() => (
        ((Gi = Gi || {})[(Gi.NONE = 0)] = 'NONE'),
        (Gi[(Gi.HTML = 1)] = 'HTML'),
        (Gi[(Gi.STYLE = 2)] = 'STYLE'),
        (Gi[(Gi.SCRIPT = 3)] = 'SCRIPT'),
        (Gi[(Gi.URL = 4)] = 'URL'),
        (Gi[(Gi.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        Gi
      ))();
      function Yu(e) {
        const t = Ba();
        return t
          ? t.sanitize(Gi.URL, e) || ''
          : na(e, 'URL')
          ? ns(e)
          : bl(lt(e));
      }
      function Gu(e) {
        const t = Ba();
        if (t) return Lu(t.sanitize(Gi.RESOURCE_URL, e) || '');
        if (na(e, 'ResourceURL')) return Lu(ns(e));
        throw new Be(904, !1);
      }
      function Wu(e, t, n) {
        return (function r_(e, t) {
          return ('src' === t &&
            ('embed' === e ||
              'frame' === e ||
              'iframe' === e ||
              'media' === e ||
              'script' === e)) ||
            ('href' === t && ('base' === e || 'link' === e))
            ? Gu
            : Yu;
        })(
          t,
          n,
        )(e);
      }
      function Ba() {
        const e = ht();
        return e && e[Ji];
      }
      const Oc = new ii('ENVIRONMENT_INITIALIZER'),
        Ku = new ii('INJECTOR', -1),
        Zu = new ii('INJECTOR_DEF_TYPES');
      class qu {
        get(t, n = ke) {
          if (n === ke) {
            const i = new Error(`NullInjectorError: No provider for ${ue(t)}!`);
            throw ((i.name = 'NullInjectorError'), i);
          }
          return n;
        }
      }
      function o_(e) {
        return { ɵproviders: e };
      }
      function s_(...e) {
        return { ɵproviders: Qu(0, e), ɵfromNgModule: !0 };
      }
      function Qu(e, ...t) {
        const n = [],
          i = new Set();
        let o;
        return (
          go(t, l => {
            const u = l;
            Rc(u, n, [], i) && (o || (o = []), o.push(u));
          }),
          void 0 !== o && Xu(o, n),
          n
        );
      }
      function Xu(e, t) {
        for (let n = 0; n < e.length; n++) {
          const { providers: o } = e[n];
          Fc(o, l => {
            t.push(l);
          });
        }
      }
      function Rc(e, t, n, i) {
        if (!(e = re(e))) return !1;
        let o = null,
          l = Wt(e);
        const u = !l && vn(e);
        if (l || u) {
          if (u && !u.standalone) return !1;
          o = e;
        } else {
          const E = e.ngModule;
          if (((l = Wt(E)), !l)) return !1;
          o = E;
        }
        const v = i.has(o);
        if (u) {
          if (v) return !1;
          if ((i.add(o), u.dependencies)) {
            const E =
              'function' == typeof u.dependencies
                ? u.dependencies()
                : u.dependencies;
            for (const N of E) Rc(N, t, n, i);
          }
        } else {
          if (!l) return !1;
          {
            if (null != l.imports && !v) {
              let N;
              i.add(o);
              try {
                go(l.imports, z => {
                  Rc(z, t, n, i) && (N || (N = []), N.push(z));
                });
              } finally {
              }
              void 0 !== N && Xu(N, t);
            }
            if (!v) {
              const N = qi(o) || (() => new o());
              t.push(
                { provide: o, useFactory: N, deps: Kt },
                { provide: Zu, useValue: o, multi: !0 },
                { provide: Oc, useValue: () => Je(o), multi: !0 },
              );
            }
            const E = l.providers;
            null == E ||
              v ||
              Fc(E, z => {
                t.push(z);
              });
          }
        }
        return o !== e && void 0 !== e.providers;
      }
      function Fc(e, t) {
        for (let n of e)
          He(n) && (n = n.ɵproviders), Array.isArray(n) ? Fc(n, t) : t(n);
      }
      const a_ = de({ provide: String, useValue: de });
      function Pc(e) {
        return null !== e && 'object' == typeof e && a_ in e;
      }
      function Us(e) {
        return 'function' == typeof e;
      }
      const Nc = new ii('Set Injector scope.'),
        Dl = {},
        c_ = {};
      let Lc;
      function Cl() {
        return void 0 === Lc && (Lc = new qu()), Lc;
      }
      class Hs {}
      class th extends Hs {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, n, i, o) {
          super(),
            (this.parent = n),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Vc(t, u => this.processProvider(u)),
            this.records.set(Ku, ia(void 0, this)),
            o.has('environment') && this.records.set(Hs, ia(void 0, this));
          const l = this.records.get(Nc);
          null != l && 'string' == typeof l.value && this.scopes.add(l.value),
            (this.injectorDefTypes = new Set(this.get(Zu.multi, Kt, kt.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const n = Oe(this),
            i = Y(void 0);
          try {
            return t();
          } finally {
            Oe(n), Y(i);
          }
        }
        get(t, n = ke, i = kt.Default) {
          this.assertNotDestroyed(), (i = F(i));
          const o = Oe(this),
            l = Y(void 0);
          try {
            if (!(i & kt.SkipSelf)) {
              let v = this.records.get(t);
              if (void 0 === v) {
                const E =
                  (function p_(e) {
                    return (
                      'function' == typeof e ||
                      ('object' == typeof e && e instanceof ii)
                    );
                  })(t) && ft(t);
                (v = E && this.injectableDefInScope(E) ? ia(Bc(t), Dl) : null),
                  this.records.set(t, v);
              }
              if (null != v) return this.hydrate(t, v);
            }
            return (i & kt.Self ? Cl() : this.parent).get(
              t,
              (n = i & kt.Optional && n === ke ? null : n),
            );
          } catch (u) {
            if ('NullInjectorError' === u.name) {
              if (((u[ge] = u[ge] || []).unshift(ue(t)), o)) throw u;
              return (function Q(e, t, n, i) {
                const o = e[ge];
                throw (
                  (t[Ot] && o.unshift(t[Ot]),
                  (e.message = (function Xe(e, t, n, i = null) {
                    e =
                      e && '\n' === e.charAt(0) && e.charAt(1) == wt
                        ? e.slice(2)
                        : e;
                    let o = ue(t);
                    if (Array.isArray(t)) o = t.map(ue).join(' -> ');
                    else if ('object' == typeof t) {
                      let l = [];
                      for (let u in t)
                        if (t.hasOwnProperty(u)) {
                          let v = t[u];
                          l.push(
                            u +
                              ':' +
                              ('string' == typeof v
                                ? JSON.stringify(v)
                                : ue(v)),
                          );
                        }
                      o = `{${l.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${o}]: ${e.replace(
                      nt,
                      '\n  ',
                    )}`;
                  })('\n' + e.message, o, n, i)),
                  (e[pe] = o),
                  (e[ge] = null),
                  e)
                );
              })(u, t, 'R3InjectorError', this.source);
            }
            throw u;
          } finally {
            Y(l), Oe(o);
          }
        }
        resolveInjectorInitializers() {
          const t = Oe(this),
            n = Y(void 0);
          try {
            const i = this.get(Oc.multi, Kt, kt.Self);
            for (const o of i) o();
          } finally {
            Oe(t), Y(n);
          }
        }
        toString() {
          const t = [],
            n = this.records;
          for (const i of n.keys()) t.push(ue(i));
          return `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Be(205, !1);
        }
        processProvider(t) {
          let n = Us((t = re(t))) ? t : re(t && t.provide);
          const i = (function u_(e) {
            return Pc(e) ? ia(void 0, e.useValue) : ia(nh(e), Dl);
          })(t);
          if (Us(t) || !0 !== t.multi) this.records.get(n);
          else {
            let o = this.records.get(n);
            o ||
              ((o = ia(void 0, Dl, !0)),
              (o.factory = () => b(o.multi)),
              this.records.set(n, o)),
              (n = t),
              o.multi.push(t);
          }
          this.records.set(n, i);
        }
        hydrate(t, n) {
          return (
            n.value === Dl && ((n.value = c_), (n.value = n.factory())),
            'object' == typeof n.value &&
              n.value &&
              (function f_(e) {
                return (
                  null !== e &&
                  'object' == typeof e &&
                  'function' == typeof e.ngOnDestroy
                );
              })(n.value) &&
              this._ngOnDestroyHooks.add(n.value),
            n.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const n = re(t.providedIn);
          return 'string' == typeof n
            ? 'any' === n || this.scopes.has(n)
            : this.injectorDefTypes.has(n);
        }
      }
      function Bc(e) {
        const t = ft(e),
          n = null !== t ? t.factory : qi(e);
        if (null !== n) return n;
        if (e instanceof ii) throw new Be(204, !1);
        if (e instanceof Function)
          return (function d_(e) {
            const t = e.length;
            if (t > 0) throw (f(t, '?'), new Be(204, !1));
            const n = (function pt(e) {
              return (e && (e[pn] || e[Tn])) || null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Be(204, !1);
      }
      function nh(e, t, n) {
        let i;
        if (Us(e)) {
          const o = re(e);
          return qi(o) || Bc(o);
        }
        if (Pc(e)) i = () => re(e.useValue);
        else if (
          (function eh(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          i = () => e.useFactory(...b(e.deps || []));
        else if (
          (function Ju(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => Je(re(e.useExisting));
        else {
          const o = re(e && (e.useClass || e.provide));
          if (
            !(function h_(e) {
              return !!e.deps;
            })(e)
          )
            return qi(o) || Bc(o);
          i = () => new o(...b(e.deps));
        }
        return i;
      }
      function ia(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function Vc(e, t) {
        for (const n of e)
          Array.isArray(n) ? Vc(n, t) : n && He(n) ? Vc(n.ɵproviders, t) : t(n);
      }
      class m_ {}
      class ih {}
      class __ {
        resolveComponentFactory(t) {
          throw (function g_(e) {
            const t = Error(
              `No component factory found for ${ue(
                e,
              )}. Did you add it to @NgModule.entryComponents?`,
            );
            return (t.ngComponent = e), t;
          })(t);
        }
      }
      let Va = (() => {
        class e {}
        return (e.NULL = new __()), e;
      })();
      function v_() {
        return ra(ci(), ht());
      }
      function ra(e, t) {
        return new Ua(vi(e, t));
      }
      let Ua = (() => {
        class e {
          constructor(n) {
            this.nativeElement = n;
          }
        }
        return (e.__NG_ELEMENT_ID__ = v_), e;
      })();
      function b_(e) {
        return e instanceof Ua ? e.nativeElement : e;
      }
      class oh {}
      let y_ = (() => {
          class e {}
          return (
            (e.__NG_ELEMENT_ID__ = () =>
              (function D_() {
                const e = ht(),
                  n = ni(ci().index, e);
                return (Se(n) ? n : e)[fn];
              })()),
            e
          );
        })(),
        C_ = (() => {
          class e {}
          return (
            (e.ɵprov = mt({
              token: e,
              providedIn: 'root',
              factory: () => null,
            })),
            e
          );
        })();
      class sh {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const x_ = new sh('15.2.8'),
        Uc = {},
        Hc = 'ngOriginalError';
      function jc(e) {
        return e[Hc];
      }
      class Ha {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const n = this._findOriginalError(t);
          this._console.error('ERROR', t),
            n && this._console.error('ORIGINAL ERROR', n);
        }
        _findOriginalError(t) {
          let n = t && jc(t);
          for (; n && jc(n); ) n = jc(n);
          return n || null;
        }
      }
      function rs(e) {
        return e instanceof Function ? e() : e;
      }
      function lh(e, t, n) {
        let i = e.length;
        for (;;) {
          const o = e.indexOf(t, n);
          if (-1 === o) return o;
          if (0 === o || e.charCodeAt(o - 1) <= 32) {
            const l = t.length;
            if (o + l === i || e.charCodeAt(o + l) <= 32) return o;
          }
          n = o + 1;
        }
      }
      const ch = 'ng-template';
      function F_(e, t, n) {
        let i = 0,
          o = !0;
        for (; i < e.length; ) {
          let l = e[i++];
          if ('string' == typeof l && o) {
            const u = e[i++];
            if (n && 'class' === l && -1 !== lh(u.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === l) {
              for (; i < e.length && 'string' == typeof (l = e[i++]); )
                if (l.toLowerCase() === t) return !0;
              return !1;
            }
            'number' == typeof l && (o = !1);
          }
        }
        return !1;
      }
      function dh(e) {
        return 4 === e.type && e.value !== ch;
      }
      function P_(e, t, n) {
        return t === (4 !== e.type || n ? e.value : ch);
      }
      function N_(e, t, n) {
        let i = 4;
        const o = e.attrs || [],
          l = (function V_(e) {
            for (let t = 0; t < e.length; t++) if (On(e[t])) return t;
            return e.length;
          })(o);
        let u = !1;
        for (let v = 0; v < t.length; v++) {
          const E = t[v];
          if ('number' != typeof E) {
            if (!u)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ('' !== E && !P_(e, E, n)) || ('' === E && 1 === t.length))
                ) {
                  if (To(i)) return !1;
                  u = !0;
                }
              } else {
                const N = 8 & i ? E : t[++v];
                if (8 & i && null !== e.attrs) {
                  if (!F_(e.attrs, N, n)) {
                    if (To(i)) return !1;
                    u = !0;
                  }
                  continue;
                }
                const oe = L_(8 & i ? 'class' : E, o, dh(e), n);
                if (-1 === oe) {
                  if (To(i)) return !1;
                  u = !0;
                  continue;
                }
                if ('' !== N) {
                  let Fe;
                  Fe = oe > l ? '' : o[oe + 1].toLowerCase();
                  const Ze = 8 & i ? Fe : null;
                  if ((Ze && -1 !== lh(Ze, N, 0)) || (2 & i && N !== Fe)) {
                    if (To(i)) return !1;
                    u = !0;
                  }
                }
              }
          } else {
            if (!u && !To(i) && !To(E)) return !1;
            if (u && To(E)) continue;
            (u = !1), (i = E | (1 & i));
          }
        }
        return To(i) || u;
      }
      function To(e) {
        return 0 == (1 & e);
      }
      function L_(e, t, n, i) {
        if (null === t) return -1;
        let o = 0;
        if (i || !n) {
          let l = !1;
          for (; o < t.length; ) {
            const u = t[o];
            if (u === e) return o;
            if (3 === u || 6 === u) l = !0;
            else {
              if (1 === u || 2 === u) {
                let v = t[++o];
                for (; 'string' == typeof v; ) v = t[++o];
                continue;
              }
              if (4 === u) break;
              if (0 === u) {
                o += 4;
                continue;
              }
            }
            o += l ? 1 : 2;
          }
          return -1;
        }
        return (function U_(e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const i = e[n];
              if ('number' == typeof i) return -1;
              if (i === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function uh(e, t, n = !1) {
        for (let i = 0; i < t.length; i++) if (N_(e, t[i], n)) return !0;
        return !1;
      }
      function H_(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const i = t[n];
          if (e.length === i.length) {
            for (let o = 0; o < e.length; o++) if (e[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function hh(e, t) {
        return e ? ':not(' + t.trim() + ')' : t;
      }
      function j_(e) {
        let t = e[0],
          n = 1,
          i = 2,
          o = '',
          l = !1;
        for (; n < e.length; ) {
          let u = e[n];
          if ('string' == typeof u)
            if (2 & i) {
              const v = e[++n];
              o += '[' + u + (v.length > 0 ? '="' + v + '"' : '') + ']';
            } else 8 & i ? (o += '.' + u) : 4 & i && (o += ' ' + u);
          else
            '' !== o && !To(u) && ((t += hh(l, o)), (o = '')),
              (i = u),
              (l = l || !To(i));
          n++;
        }
        return '' !== o && (t += hh(l, o)), t;
      }
      const Ln = {};
      function fh(e) {
        ph(kn(), ht(), Nt() + e, !1);
      }
      function ph(e, t, n, i) {
        if (!i)
          if (3 == (3 & t[un])) {
            const l = e.preOrderCheckHooks;
            null !== l && pi(t, l, n);
          } else {
            const l = e.preOrderHooks;
            null !== l && vr(t, l, 0, n);
          }
        Zt(n);
      }
      function vh(e, t = null, n = null, i) {
        const o = bh(e, t, n, i);
        return o.resolveInjectorInitializers(), o;
      }
      function bh(e, t = null, n = null, i, o = new Set()) {
        const l = [n || Kt, s_(e)];
        return (
          (i = i || ('object' == typeof e ? void 0 : ue(e))),
          new th(l, t || Cl(), i || null, o)
        );
      }
      let js = (() => {
        class e {
          static create(n, i) {
            if (Array.isArray(n)) return vh({ name: '' }, i, n, '');
            {
              const o = n.name ?? '';
              return vh({ name: o }, n.parent, n.providers, o);
            }
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = ke),
          (e.NULL = new qu()),
          (e.ɵprov = mt({
            token: e,
            providedIn: 'any',
            factory: () => Je(Ku),
          })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      function aa(e, t = kt.Default) {
        const n = ht();
        return null === n ? Je(e, t) : qs(ci(), n, re(e), t);
      }
      function Mh() {
        throw new Error('invalid');
      }
      function Ah(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const l = n[i + 1];
            if (-1 !== l) {
              const u = e.data[l];
              No(n[i]), u.contentQueries(2, t[l], l);
            }
          }
      }
      function El(e, t, n, i, o, l, u, v, E, N, z) {
        const oe = t.blueprint.slice();
        return (
          (oe[di] = o),
          (oe[un] = 76 | i),
          (null !== z || (e && 1024 & e[un])) && (oe[un] |= 1024),
          Nr(oe),
          (oe[Un] = oe[xi] = e),
          (oe[wn] = n),
          (oe[Ci] = u || (e && e[Ci])),
          (oe[fn] = v || (e && e[fn])),
          (oe[Ji] = E || (e && e[Ji]) || null),
          (oe[Ti] = N || (e && e[Ti]) || null),
          (oe[Xn] = l),
          (oe[hr] = (function Ra() {
            return uc++;
          })()),
          (oe[fr] = z),
          (oe[ri] = 2 == t.type ? e[ri] : oe),
          oe
        );
      }
      function la(e, t, n, i, o) {
        let l = e.data[t];
        if (null === l)
          (l = (function Wc(e, t, n, i, o) {
            const l = as(),
              u = Sr(),
              E = (e.data[t] = (function pv(e, t, n, i, o, l) {
                return {
                  type: n,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: o,
                  attrs: l,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tView: null,
                  next: null,
                  prev: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, u ? l : l && l.parent, n, t, i, o));
            return (
              null === e.firstChild && (e.firstChild = E),
              null !== l &&
                (u
                  ? null == l.child && null !== E.parent && (l.child = E)
                  : null === l.next && ((l.next = E), (E.prev = l))),
              E
            );
          })(e, t, n, i, o)),
            (function bi() {
              return _n.lFrame.inI18n;
            })() && (l.flags |= 32);
        else if (64 & l.type) {
          (l.type = n), (l.value = i), (l.attrs = o);
          const u = (function wo() {
            const e = _n.lFrame,
              t = e.currentTNode;
            return e.isParent ? t : t.parent;
          })();
          l.injectorIndex = null === u ? -1 : u.injectorIndex;
        }
        return lr(l, !0), l;
      }
      function ja(e, t, n, i) {
        if (0 === n) return -1;
        const o = t.length;
        for (let l = 0; l < n; l++)
          t.push(i), e.blueprint.push(i), e.data.push(null);
        return o;
      }
      function Kc(e, t, n) {
        p(t);
        try {
          const i = e.viewQuery;
          null !== i && id(1, i, n);
          const o = e.template;
          null !== o && Sh(e, t, o, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && Ah(e, t),
            e.staticViewQueries && id(2, e.viewQuery, n);
          const l = e.components;
          null !== l &&
            (function uv(e, t) {
              for (let n = 0; n < t.length; n++) Fv(e, t[n]);
            })(t, l);
        } catch (i) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[un] &= -5), Ee();
        }
      }
      function wl(e, t, n, i) {
        const o = t[un];
        if (128 != (128 & o)) {
          p(t);
          try {
            Nr(t),
              (function Ir(e) {
                return (_n.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== n && Sh(e, t, n, 2, i);
            const u = 3 == (3 & o);
            if (u) {
              const N = e.preOrderCheckHooks;
              null !== N && pi(t, N, null);
            } else {
              const N = e.preOrderHooks;
              null !== N && vr(t, N, 0, null), y(t, 0);
            }
            if (
              ((function Ov(e) {
                for (let t = gc(e); null !== t; t = _c(t)) {
                  if (!t[Dr]) continue;
                  const n = t[Fn];
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    512 & o[un] || no(o[Un], 1), (o[un] |= 512);
                  }
                }
              })(t),
              (function Tv(e) {
                for (let t = gc(e); null !== t; t = _c(t))
                  for (let n = J; n < t.length; n++) {
                    const i = t[n],
                      o = i[zt];
                    Hi(i) && wl(o, i, o.template, i[wn]);
                  }
              })(t),
              null !== e.contentQueries && Ah(e, t),
              u)
            ) {
              const N = e.contentCheckHooks;
              null !== N && pi(t, N);
            } else {
              const N = e.contentHooks;
              null !== N && vr(t, N, 1), y(t, 1);
            }
            !(function cv(e, t) {
              const n = e.hostBindingOpCodes;
              if (null !== n)
                try {
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    if (o < 0) Zt(~o);
                    else {
                      const l = o,
                        u = n[++i],
                        v = n[++i];
                      cs(u, l), v(2, t[l]);
                    }
                  }
                } finally {
                  Zt(-1);
                }
            })(e, t);
            const v = e.components;
            null !== v &&
              (function dv(e, t) {
                for (let n = 0; n < t.length; n++) Rv(e, t[n]);
              })(t, v);
            const E = e.viewQuery;
            if ((null !== E && id(2, E, i), u)) {
              const N = e.viewCheckHooks;
              null !== N && pi(t, N);
            } else {
              const N = e.viewHooks;
              null !== N && vr(t, N, 2), y(t, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (t[un] &= -41),
              512 & t[un] && ((t[un] &= -513), no(t[Un], -1));
          } finally {
            Ee();
          }
        }
      }
      function Sh(e, t, n, i, o) {
        const l = Nt(),
          u = 2 & i;
        try {
          Zt(-1),
            u && t.length > Hn && ph(e, t, Hn, !1),
            wi(u ? 2 : 0, o),
            n(i, o);
        } finally {
          Zt(l), wi(u ? 3 : 1, o);
        }
      }
      function Zc(e, t, n) {
        if (Tt(t)) {
          const o = t.directiveEnd;
          for (let l = t.directiveStart; l < o; l++) {
            const u = e.data[l];
            u.contentQueries && u.contentQueries(1, n[l], l);
          }
        }
      }
      function qc(e, t, n) {
        it() &&
          ((function Dv(e, t, n, i) {
            const o = n.directiveStart,
              l = n.directiveEnd;
            It(n) &&
              (function Sv(e, t, n) {
                const i = vi(t, e),
                  o = Ih(n),
                  l = e[Ci],
                  u = Ml(
                    e,
                    El(
                      e,
                      o,
                      null,
                      n.onPush ? 32 : 16,
                      i,
                      t,
                      l,
                      l.createRenderer(i, n),
                      null,
                      null,
                      null,
                    ),
                  );
                e[t.index] = u;
              })(t, n, e.data[o + n.componentOffset]),
              e.firstCreatePass || Ds(n, t),
              Or(i, t);
            const u = n.initialInputs;
            for (let v = o; v < l; v++) {
              const E = e.data[v],
                N = So(t, e, v, n);
              Or(N, t),
                null !== u && Iv(0, v - o, N, E, 0, u),
                bn(E) && (ni(n.index, t)[wn] = So(t, e, v, n));
            }
          })(e, t, n, vi(n, t)),
          64 == (64 & n.flags) && Fh(e, t, n));
      }
      function Qc(e, t, n = vi) {
        const i = t.localNames;
        if (null !== i) {
          let o = t.index + 1;
          for (let l = 0; l < i.length; l += 2) {
            const u = i[l + 1],
              v = -1 === u ? n(t, e) : e[u];
            e[o++] = v;
          }
        }
      }
      function Ih(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = Xc(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
            ))
          : t;
      }
      function Xc(e, t, n, i, o, l, u, v, E, N) {
        const z = Hn + i,
          oe = z + o,
          Fe = (function hv(e, t) {
            const n = [];
            for (let i = 0; i < t; i++) n.push(i < e ? null : Ln);
            return n;
          })(z, oe),
          Ze = 'function' == typeof N ? N() : N;
        return (Fe[zt] = {
          type: e,
          blueprint: Fe,
          template: n,
          queries: null,
          viewQuery: v,
          declTNode: t,
          data: Fe.slice().fill(null, z),
          bindingStartIndex: z,
          expandoStartIndex: oe,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof l ? l() : l,
          pipeRegistry: 'function' == typeof u ? u() : u,
          firstChild: null,
          schemas: E,
          consts: Ze,
          incompleteFirstPass: !1,
        });
      }
      function kh(e, t, n, i) {
        const o = Nh(t);
        null === n
          ? o.push(i)
          : (o.push(n), e.firstCreatePass && Lh(e).push(i, o.length - 1));
      }
      function Th(e, t, n, i) {
        for (let o in e)
          if (e.hasOwnProperty(o)) {
            n = null === n ? {} : n;
            const l = e[o];
            null === i
              ? Oh(n, t, o, l)
              : i.hasOwnProperty(o) && Oh(n, t, i[o], l);
          }
        return n;
      }
      function Oh(e, t, n, i) {
        e.hasOwnProperty(n) ? e[n].push(t, i) : (e[n] = [t, i]);
      }
      function ao(e, t, n, i, o, l, u, v) {
        const E = vi(t, n);
        let z,
          N = t.inputs;
        !v && null != N && (z = N[i])
          ? (rd(e, n, z, i, o),
            It(t) &&
              (function _v(e, t) {
                const n = ni(t, e);
                16 & n[un] || (n[un] |= 32);
              })(n, t.index))
          : 3 & t.type &&
            ((i = (function gv(e) {
              return 'class' === e
                ? 'className'
                : 'for' === e
                ? 'htmlFor'
                : 'formaction' === e
                ? 'formAction'
                : 'innerHtml' === e
                ? 'innerHTML'
                : 'readonly' === e
                ? 'readOnly'
                : 'tabindex' === e
                ? 'tabIndex'
                : e;
            })(i)),
            (o = null != u ? u(o, t.value || '', i) : o),
            l.setProperty(E, i, o));
      }
      function Jc(e, t, n, i) {
        if (it()) {
          const o = null === i ? null : { '': -1 },
            l = (function xv(e, t) {
              const n = e.directiveRegistry;
              let i = null,
                o = null;
              if (n)
                for (let l = 0; l < n.length; l++) {
                  const u = n[l];
                  if (uh(t, u.selectors, !1))
                    if ((i || (i = []), bn(u)))
                      if (null !== u.findHostDirectiveDefs) {
                        const v = [];
                        (o = o || new Map()),
                          u.findHostDirectiveDefs(u, v, o),
                          i.unshift(...v, u),
                          ed(e, t, v.length);
                      } else i.unshift(u), ed(e, t, 0);
                    else
                      (o = o || new Map()),
                        u.findHostDirectiveDefs?.(u, i, o),
                        i.push(u);
                }
              return null === i ? null : [i, o];
            })(e, n);
          let u, v;
          null === l ? (u = v = null) : ([u, v] = l),
            null !== u && Rh(e, t, n, u, o, v),
            o &&
              (function Ev(e, t, n) {
                if (t) {
                  const i = (e.localNames = []);
                  for (let o = 0; o < t.length; o += 2) {
                    const l = n[t[o + 1]];
                    if (null == l) throw new Be(-301, !1);
                    i.push(t[o], l);
                  }
                }
              })(n, i, o);
        }
        n.mergedAttrs = Yn(n.mergedAttrs, n.attrs);
      }
      function Rh(e, t, n, i, o, l) {
        for (let N = 0; N < i.length; N++) Xi(Ds(n, t), e, i[N].type);
        !(function Mv(e, t, n) {
          (e.flags |= 1),
            (e.directiveStart = t),
            (e.directiveEnd = t + n),
            (e.providerIndexes = t);
        })(n, e.data.length, i.length);
        for (let N = 0; N < i.length; N++) {
          const z = i[N];
          z.providersResolver && z.providersResolver(z);
        }
        let u = !1,
          v = !1,
          E = ja(e, t, i.length, null);
        for (let N = 0; N < i.length; N++) {
          const z = i[N];
          (n.mergedAttrs = Yn(n.mergedAttrs, z.hostAttrs)),
            Av(e, n, t, E, z),
            wv(E, z, o),
            null !== z.contentQueries && (n.flags |= 4),
            (null !== z.hostBindings ||
              null !== z.hostAttrs ||
              0 !== z.hostVars) &&
              (n.flags |= 64);
          const oe = z.type.prototype;
          !u &&
            (oe.ngOnChanges || oe.ngOnInit || oe.ngDoCheck) &&
            ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index),
            (u = !0)),
            !v &&
              (oe.ngOnChanges || oe.ngDoCheck) &&
              ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(
                n.index,
              ),
              (v = !0)),
            E++;
        }
        !(function mv(e, t, n) {
          const o = t.directiveEnd,
            l = e.data,
            u = t.attrs,
            v = [];
          let E = null,
            N = null;
          for (let z = t.directiveStart; z < o; z++) {
            const oe = l[z],
              Fe = n ? n.get(oe) : null,
              Ct = Fe ? Fe.outputs : null;
            (E = Th(oe.inputs, z, E, Fe ? Fe.inputs : null)),
              (N = Th(oe.outputs, z, N, Ct));
            const Ht = null === E || null === u || dh(t) ? null : kv(E, z, u);
            v.push(Ht);
          }
          null !== E &&
            (E.hasOwnProperty('class') && (t.flags |= 8),
            E.hasOwnProperty('style') && (t.flags |= 16)),
            (t.initialInputs = v),
            (t.inputs = E),
            (t.outputs = N);
        })(e, n, l);
      }
      function Fh(e, t, n) {
        const i = n.directiveStart,
          o = n.directiveEnd,
          l = n.index,
          u = (function ds() {
            return _n.lFrame.currentDirectiveIndex;
          })();
        try {
          Zt(l);
          for (let v = i; v < o; v++) {
            const E = e.data[v],
              N = t[v];
            po(v),
              (null !== E.hostBindings ||
                0 !== E.hostVars ||
                null !== E.hostAttrs) &&
                Cv(E, N);
          }
        } finally {
          Zt(-1), po(u);
        }
      }
      function Cv(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function ed(e, t, n) {
        (t.componentOffset = n),
          (e.components ?? (e.components = [])).push(t.index);
      }
      function wv(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) n[t.exportAs[i]] = e;
          bn(t) && (n[''] = e);
        }
      }
      function Av(e, t, n, i, o) {
        e.data[i] = o;
        const l = o.factory || (o.factory = qi(o.type)),
          u = new ae(l, bn(o), aa);
        (e.blueprint[i] = u),
          (n[i] = u),
          (function bv(e, t, n, i, o) {
            const l = o.hostBindings;
            if (l) {
              let u = e.hostBindingOpCodes;
              null === u && (u = e.hostBindingOpCodes = []);
              const v = ~t.index;
              (function yv(e) {
                let t = e.length;
                for (; t > 0; ) {
                  const n = e[--t];
                  if ('number' == typeof n && n < 0) return n;
                }
                return 0;
              })(u) != v && u.push(v),
                u.push(n, i, l);
            }
          })(e, t, i, ja(e, n, o.hostVars, Ln), o);
      }
      function zo(e, t, n, i, o, l) {
        const u = vi(e, t);
        !(function td(e, t, n, i, o, l, u) {
          if (null == l) e.removeAttribute(t, o, n);
          else {
            const v = null == u ? lt(l) : u(l, i || '', o);
            e.setAttribute(t, o, v, n);
          }
        })(t[fn], u, l, e.value, n, i, o);
      }
      function Iv(e, t, n, i, o, l) {
        const u = l[t];
        if (null !== u) {
          const v = i.setInput;
          for (let E = 0; E < u.length; ) {
            const N = u[E++],
              z = u[E++],
              oe = u[E++];
            null !== v ? i.setInput(n, oe, N, z) : (n[z] = oe);
          }
        }
      }
      function kv(e, t, n) {
        let i = null,
          o = 0;
        for (; o < n.length; ) {
          const l = n[o];
          if (0 !== l)
            if (5 !== l) {
              if ('number' == typeof l) break;
              if (e.hasOwnProperty(l)) {
                null === i && (i = []);
                const u = e[l];
                for (let v = 0; v < u.length; v += 2)
                  if (u[v] === t) {
                    i.push(l, u[v + 1], n[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function Ph(e, t, n, i) {
        return [e, !0, !1, t, null, 0, i, n, null, null];
      }
      function Rv(e, t) {
        const n = ni(t, e);
        if (Hi(n)) {
          const i = n[zt];
          48 & n[un] ? wl(i, n, i.template, n[wn]) : n[ui] > 0 && nd(n);
        }
      }
      function nd(e) {
        for (let i = gc(e); null !== i; i = _c(i))
          for (let o = J; o < i.length; o++) {
            const l = i[o];
            if (Hi(l))
              if (512 & l[un]) {
                const u = l[zt];
                wl(u, l, u.template, l[wn]);
              } else l[ui] > 0 && nd(l);
          }
        const n = e[zt].components;
        if (null !== n)
          for (let i = 0; i < n.length; i++) {
            const o = ni(n[i], e);
            Hi(o) && o[ui] > 0 && nd(o);
          }
      }
      function Fv(e, t) {
        const n = ni(t, e),
          i = n[zt];
        (function Pv(e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(i, n),
          Kc(i, n, n[wn]);
      }
      function Ml(e, t) {
        return e[Ki] ? (e[yr][ti] = t) : (e[Ki] = t), (e[yr] = t), t;
      }
      function Al(e) {
        for (; e; ) {
          e[un] |= 32;
          const t = Pa(e);
          if (Pn(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function Sl(e, t, n, i = !0) {
        const o = t[Ci];
        o.begin && o.begin();
        try {
          wl(e, t, e.template, n);
        } catch (u) {
          throw (i && Vh(t, u), u);
        } finally {
          o.end && o.end();
        }
      }
      function id(e, t, n) {
        No(0), t(e, n);
      }
      function Nh(e) {
        return e[hi] || (e[hi] = []);
      }
      function Lh(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Bh(e, t, n) {
        return (
          (null === e || bn(e)) &&
            (n = (function oi(e) {
              for (; Array.isArray(e); ) {
                if ('object' == typeof e[Zi]) return e;
                e = e[di];
              }
              return null;
            })(n[t.index])),
          n[fn]
        );
      }
      function Vh(e, t) {
        const n = e[Ti],
          i = n ? n.get(Ha, null) : null;
        i && i.handleError(t);
      }
      function rd(e, t, n, i, o) {
        for (let l = 0; l < n.length; ) {
          const u = n[l++],
            v = n[l++],
            E = t[u],
            N = e.data[u];
          null !== N.setInput ? N.setInput(E, o, i, v) : (E[v] = o);
        }
      }
      function Il(e, t, n) {
        let i = n ? e.styles : null,
          o = n ? e.classes : null,
          l = 0;
        if (null !== t)
          for (let u = 0; u < t.length; u++) {
            const v = t[u];
            'number' == typeof v
              ? (l = v)
              : 1 == l
              ? (o = ce(o, v))
              : 2 == l && (i = ce(i, v + ': ' + t[++u] + ';'));
          }
        n ? (e.styles = i) : (e.stylesWithoutHost = i),
          n ? (e.classes = o) : (e.classesWithoutHost = o);
      }
      function kl(e, t, n, i, o = !1) {
        for (; null !== n; ) {
          const l = t[n.index];
          if ((null !== l && i.push(ai(l)), Ke(l)))
            for (let v = J; v < l.length; v++) {
              const E = l[v],
                N = E[zt].firstChild;
              null !== N && kl(E[zt], E, N, i);
            }
          const u = n.type;
          if (8 & u) kl(e, t, n.child, i);
          else if (32 & u) {
            const v = mc(n, t);
            let E;
            for (; (E = v()); ) i.push(E);
          } else if (16 & u) {
            const v = ku(t, n);
            if (Array.isArray(v)) i.push(...v);
            else {
              const E = Pa(t[ri]);
              kl(E[zt], E, v, i, !0);
            }
          }
          n = o ? n.projectionNext : n.next;
        }
        return i;
      }
      class za {
        get rootNodes() {
          const t = this._lView,
            n = t[zt];
          return kl(n, t, n.firstChild, []);
        }
        constructor(t, n) {
          (this._lView = t),
            (this._cdRefInjectingView = n),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[wn];
        }
        set context(t) {
          this._lView[wn] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[un]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Un];
            if (Ke(t)) {
              const n = t[gi],
                i = n ? n.indexOf(this) : -1;
              i > -1 && (yc(t, i), Os(n, i));
            }
            this._attachedToViewContainer = !1;
          }
          Du(this._lView[zt], this._lView);
        }
        onDestroy(t) {
          kh(this._lView[zt], this._lView, null, t);
        }
        markForCheck() {
          Al(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[un] &= -65;
        }
        reattach() {
          this._lView[un] |= 64;
        }
        detectChanges() {
          Sl(this._lView[zt], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Be(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function _g(e, t) {
              Na(e, t, t[fn], 2, null, null);
            })(this._lView[zt], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Be(902, !1);
          this._appRef = t;
        }
      }
      class Nv extends za {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          Sl(t[zt], t, t[wn], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Uh extends Va {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const n = vn(t);
          return new $a(n, this.ngModule);
        }
      }
      function Hh(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      class Bv {
        constructor(t, n) {
          (this.injector = t), (this.parentInjector = n);
        }
        get(t, n, i) {
          i = F(i);
          const o = this.injector.get(t, Uc, i);
          return o !== Uc || n === Uc ? o : this.parentInjector.get(t, n, i);
        }
      }
      class $a extends ih {
        get inputs() {
          return Hh(this.componentDef.inputs);
        }
        get outputs() {
          return Hh(this.componentDef.outputs);
        }
        constructor(t, n) {
          super(),
            (this.componentDef = t),
            (this.ngModule = n),
            (this.componentType = t.type),
            (this.selector = (function z_(e) {
              return e.map(j_).join(',');
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!n);
        }
        create(t, n, i, o) {
          let l = (o = o || this.ngModule) instanceof Hs ? o : o?.injector;
          l &&
            null !== this.componentDef.getStandaloneInjector &&
            (l = this.componentDef.getStandaloneInjector(l) || l);
          const u = l ? new Bv(t, l) : t,
            v = u.get(oh, null);
          if (null === v) throw new Be(407, !1);
          const E = u.get(C_, null),
            N = v.createRenderer(null, this.componentDef),
            z = this.componentDef.selectors[0][0] || 'div',
            oe = i
              ? (function fv(e, t, n) {
                  return e.selectRootElement(t, n === Rt.ShadowDom);
                })(N, i, this.componentDef.encapsulation)
              : bc(
                  N,
                  z,
                  (function Lv(e) {
                    const t = e.toLowerCase();
                    return 'svg' === t ? ho : 'math' === t ? 'math' : null;
                  })(z),
                ),
            Fe = this.componentDef.onPush ? 288 : 272,
            Ze = Xc(0, null, null, 1, 0, null, null, null, null, null),
            Ct = El(null, Ze, null, Fe, null, null, v, N, E, u, null);
          let Ht, tn;
          p(Ct);
          try {
            const cn = this.componentDef;
            let Mn,
              Ft = null;
            cn.findHostDirectiveDefs
              ? ((Mn = []),
                (Ft = new Map()),
                cn.findHostDirectiveDefs(cn, Mn, Ft),
                Mn.push(cn))
              : (Mn = [cn]);
            const Rn = (function Uv(e, t) {
                const n = e[zt],
                  i = Hn;
                return (e[i] = t), la(n, i, 2, '#host', null);
              })(Ct, oe),
              Fi = (function Hv(e, t, n, i, o, l, u, v) {
                const E = o[zt];
                !(function jv(e, t, n, i) {
                  for (const o of e)
                    t.mergedAttrs = Yn(t.mergedAttrs, o.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Il(t, t.mergedAttrs, !0), null !== n && Ru(i, n, t));
                })(i, e, t, u);
                const N = l.createRenderer(t, n),
                  z = El(
                    o,
                    Ih(n),
                    null,
                    n.onPush ? 32 : 16,
                    o[e.index],
                    e,
                    l,
                    N,
                    v || null,
                    null,
                    null,
                  );
                return (
                  E.firstCreatePass && ed(E, e, i.length - 1),
                  Ml(o, z),
                  (o[e.index] = z)
                );
              })(Rn, oe, cn, Mn, Ct, v, N);
            (tn = Gr(Ze, Hn)),
              oe &&
                (function $v(e, t, n, i) {
                  if (i) sn(e, n, ['ng-version', x_.full]);
                  else {
                    const { attrs: o, classes: l } = (function $_(e) {
                      const t = [],
                        n = [];
                      let i = 1,
                        o = 2;
                      for (; i < e.length; ) {
                        let l = e[i];
                        if ('string' == typeof l)
                          2 === o
                            ? '' !== l && t.push(l, e[++i])
                            : 8 === o && n.push(l);
                        else {
                          if (!To(o)) break;
                          o = l;
                        }
                        i++;
                      }
                      return { attrs: t, classes: n };
                    })(t.selectors[0]);
                    o && sn(e, n, o),
                      l && l.length > 0 && Ou(e, n, l.join(' '));
                  }
                })(N, cn, oe, i),
              void 0 !== n &&
                (function Yv(e, t, n) {
                  const i = (e.projection = []);
                  for (let o = 0; o < t.length; o++) {
                    const l = n[o];
                    i.push(null != l ? Array.from(l) : null);
                  }
                })(tn, this.ngContentSelectors, n),
              (Ht = (function zv(e, t, n, i, o, l) {
                const u = ci(),
                  v = o[zt],
                  E = vi(u, o);
                Rh(v, o, u, n, null, i);
                for (let z = 0; z < n.length; z++)
                  Or(So(o, v, u.directiveStart + z, u), o);
                Fh(v, o, u), E && Or(E, o);
                const N = So(o, v, u.directiveStart + u.componentOffset, u);
                if (((e[wn] = o[wn] = N), null !== l))
                  for (const z of l) z(N, t);
                return Zc(v, u, e), N;
              })(Fi, cn, Mn, Ft, Ct, [Gv])),
              Kc(Ze, Ct, null);
          } finally {
            Ee();
          }
          return new Vv(this.componentType, Ht, ra(tn, Ct), Ct, tn);
        }
      }
      class Vv extends m_ {
        constructor(t, n, i, o, l) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = l),
            (this.instance = n),
            (this.hostView = this.changeDetectorRef = new Nv(o)),
            (this.componentType = t);
        }
        setInput(t, n) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[t])) {
            const l = this._rootLView;
            rd(l[zt], l, o, t, n), Al(ni(this._tNode.index, l));
          }
        }
        get injector() {
          return new Lo(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function Gv() {
        const e = ci();
        fi(ht()[zt], e);
      }
      function od(e) {
        let t = (function jh(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          n = !0;
        const i = [e];
        for (; t; ) {
          let o;
          if (bn(e)) o = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Be(903, !1);
            o = t.ɵdir;
          }
          if (o) {
            if (n) {
              i.push(o);
              const u = e;
              (u.inputs = sd(e.inputs)),
                (u.declaredInputs = sd(e.declaredInputs)),
                (u.outputs = sd(e.outputs));
              const v = o.hostBindings;
              v && qv(e, v);
              const E = o.viewQuery,
                N = o.contentQueries;
              if (
                (E && Kv(e, E),
                N && Zv(e, N),
                ve(e.inputs, o.inputs),
                ve(e.declaredInputs, o.declaredInputs),
                ve(e.outputs, o.outputs),
                bn(o) && o.data.animation)
              ) {
                const z = e.data;
                z.animation = (z.animation || []).concat(o.data.animation);
              }
            }
            const l = o.features;
            if (l)
              for (let u = 0; u < l.length; u++) {
                const v = l[u];
                v && v.ngInherit && v(e), v === od && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function Wv(e) {
          let t = 0,
            n = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const o = e[i];
            (o.hostVars = t += o.hostVars),
              (o.hostAttrs = Yn(o.hostAttrs, (n = Yn(n, o.hostAttrs))));
          }
        })(i);
      }
      function sd(e) {
        return e === tt ? {} : e === Kt ? [] : e;
      }
      function Kv(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function Zv(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (i, o, l) => {
              t(i, o, l), n(i, o, l);
            }
          : t;
      }
      function qv(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function Tl(e) {
        return (
          !!ad(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function ad(e) {
        return null !== e && ('function' == typeof e || 'object' == typeof e);
      }
      function $o(e, t, n) {
        return (e[t] = n);
      }
      function Rr(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function ld(e, t, n, i) {
        const o = ht();
        return Rr(o, _r(), t) && (kn(), zo(ln(), o, e, t, n, i)), ld;
      }
      function da(e, t, n, i) {
        return Rr(e, _r(), n) ? t + lt(n) + i : Ln;
      }
      function tf(e, t, n, i, o, l, u, v) {
        const E = ht(),
          N = kn(),
          z = e + Hn,
          oe = N.firstCreatePass
            ? (function sb(e, t, n, i, o, l, u, v, E) {
                const N = t.consts,
                  z = la(t, e, 4, u || null, Bi(N, v));
                Jc(t, n, z, Bi(N, E)), fi(t, z);
                const oe = (z.tView = Xc(
                  2,
                  z,
                  i,
                  o,
                  l,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  N,
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, z),
                    (oe.queries = t.queries.embeddedTView(z))),
                  z
                );
              })(z, N, E, t, n, i, o, l, u)
            : N.data[z];
        lr(oe, !1);
        const Fe = E[fn].createComment('');
        ml(N, E, Fe, oe),
          Or(Fe, E),
          Ml(E, (E[z] = Ph(Fe, E, Fe, oe))),
          hn(oe) && qc(N, E, oe),
          null != u && Qc(E, oe, v);
      }
      function nf(e) {
        return Mr(
          (function ls() {
            return _n.lFrame.contextLView;
          })(),
          Hn + e,
        );
      }
      function cd(e, t, n) {
        const i = ht();
        return Rr(i, _r(), t) && ao(kn(), ln(), i, e, t, i[fn], n, !1), cd;
      }
      function dd(e, t, n, i, o) {
        const u = o ? 'class' : 'style';
        rd(e, n, t.inputs[u], u, i);
      }
      function Rl(e, t, n, i) {
        const o = ht(),
          l = kn(),
          u = Hn + e,
          v = o[fn],
          E = l.firstCreatePass
            ? (function lb(e, t, n, i, o, l) {
                const u = t.consts,
                  E = la(t, e, 2, i, Bi(u, o));
                return (
                  Jc(t, n, E, Bi(u, l)),
                  null !== E.attrs && Il(E, E.attrs, !1),
                  null !== E.mergedAttrs && Il(E, E.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, E),
                  E
                );
              })(u, l, o, t, n, i)
            : l.data[u],
          N = (o[u] = bc(
            v,
            t,
            (function qn() {
              return _n.lFrame.currentNamespace;
            })(),
          )),
          z = hn(E);
        return (
          lr(E, !0),
          Ru(v, N, E),
          32 != (32 & E.flags) && ml(l, o, N, E),
          0 ===
            (function I() {
              return _n.lFrame.elementDepthCount;
            })() && Or(N, o),
          (function w() {
            _n.lFrame.elementDepthCount++;
          })(),
          z && (qc(l, o, E), Zc(l, E, o)),
          null !== i && Qc(o, E),
          Rl
        );
      }
      function Fl() {
        let e = ci();
        Sr() ? io() : ((e = e.parent), lr(e, !1));
        const t = e;
        !(function $() {
          _n.lFrame.elementDepthCount--;
        })();
        const n = kn();
        return (
          n.firstCreatePass && (fi(n, e), Tt(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function Bn(e) {
              return 0 != (8 & e.flags);
            })(t) &&
            dd(n, t, ht(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function Lt(e) {
              return 0 != (16 & e.flags);
            })(t) &&
            dd(n, t, ht(), t.stylesWithoutHost, !1),
          Fl
        );
      }
      function ud(e, t, n, i) {
        return Rl(e, t, n, i), Fl(), ud;
      }
      function Pl(e, t, n) {
        const i = ht(),
          o = kn(),
          l = e + Hn,
          u = o.firstCreatePass
            ? (function cb(e, t, n, i, o) {
                const l = t.consts,
                  u = Bi(l, i),
                  v = la(t, e, 8, 'ng-container', u);
                return (
                  null !== u && Il(v, u, !0),
                  Jc(t, n, v, Bi(l, o)),
                  null !== t.queries && t.queries.elementStart(t, v),
                  v
                );
              })(l, o, i, t, n)
            : o.data[l];
        lr(u, !0);
        const v = (i[l] = i[fn].createComment(''));
        return (
          ml(o, i, v, u),
          Or(v, i),
          hn(u) && (qc(o, i, u), Zc(o, u, i)),
          null != n && Qc(i, u),
          Pl
        );
      }
      function Nl() {
        let e = ci();
        const t = kn();
        return (
          Sr() ? io() : ((e = e.parent), lr(e, !1)),
          t.firstCreatePass && (fi(t, e), Tt(e) && t.queries.elementEnd(e)),
          Nl
        );
      }
      function sf() {
        return ht();
      }
      function hd(e) {
        return !!e && 'function' == typeof e.then;
      }
      function af(e) {
        return !!e && 'function' == typeof e.subscribe;
      }
      const lf = af;
      function fd(e, t, n, i) {
        const o = ht(),
          l = kn(),
          u = ci();
        return cf(l, o, o[fn], u, e, t, i), fd;
      }
      function pd(e, t) {
        const n = ci(),
          i = ht(),
          o = kn();
        return cf(o, i, Bh(oo(o.data), n, i), n, e, t), pd;
      }
      function cf(e, t, n, i, o, l, u) {
        const v = hn(i),
          N = e.firstCreatePass && Lh(e),
          z = t[wn],
          oe = Nh(t);
        let Fe = !0;
        if (3 & i.type || u) {
          const Ht = vi(i, t),
            tn = u ? u(Ht) : Ht,
            cn = oe.length,
            Mn = u ? Rn => u(ai(Rn[i.index])) : i.index;
          let Ft = null;
          if (
            (!u &&
              v &&
              (Ft = (function db(e, t, n, i) {
                const o = e.cleanup;
                if (null != o)
                  for (let l = 0; l < o.length - 1; l += 2) {
                    const u = o[l];
                    if (u === n && o[l + 1] === i) {
                      const v = t[hi],
                        E = o[l + 2];
                      return v.length > E ? v[E] : null;
                    }
                    'string' == typeof u && (l += 2);
                  }
                return null;
              })(e, t, o, i.index)),
            null !== Ft)
          )
            ((Ft.__ngLastListenerFn__ || Ft).__ngNextListenerFn__ = l),
              (Ft.__ngLastListenerFn__ = l),
              (Fe = !1);
          else {
            l = uf(i, t, z, l, !1);
            const Rn = n.listen(tn, o, l);
            oe.push(l, Rn), N && N.push(o, Mn, cn, cn + 1);
          }
        } else l = uf(i, t, z, l, !1);
        const Ze = i.outputs;
        let Ct;
        if (Fe && null !== Ze && (Ct = Ze[o])) {
          const Ht = Ct.length;
          if (Ht)
            for (let tn = 0; tn < Ht; tn += 2) {
              const Fi = t[Ct[tn]][Ct[tn + 1]].subscribe(l),
                Wi = oe.length;
              oe.push(l, Fi), N && N.push(o, i.index, Wi, -(Wi + 1));
            }
        }
      }
      function df(e, t, n, i) {
        try {
          return wi(6, t, n), !1 !== n(i);
        } catch (o) {
          return Vh(e, o), !1;
        } finally {
          wi(7, t, n);
        }
      }
      function uf(e, t, n, i, o) {
        return function l(u) {
          if (u === Function) return i;
          Al(e.componentOffset > -1 ? ni(e.index, t) : t);
          let E = df(t, n, i, u),
            N = l.__ngNextListenerFn__;
          for (; N; ) (E = df(t, n, N, u) && E), (N = N.__ngNextListenerFn__);
          return o && !1 === E && (u.preventDefault(), (u.returnValue = !1)), E;
        };
      }
      function hf(e = 1) {
        return (function qe(e) {
          return (_n.lFrame.contextLView = (function gt(e, t) {
            for (; e > 0; ) (t = t[xi]), e--;
            return t;
          })(e, _n.lFrame.contextLView))[wn];
        })(e);
      }
      function ub(e, t) {
        let n = null;
        const i = (function B_(e) {
          const t = e.attrs;
          if (null != t) {
            const n = t.indexOf(5);
            if (!(1 & n)) return t[n + 1];
          }
          return null;
        })(e);
        for (let o = 0; o < t.length; o++) {
          const l = t[o];
          if ('*' !== l) {
            if (null === i ? uh(e, l, !0) : H_(i, l)) return o;
          } else n = o;
        }
        return n;
      }
      function ff(e) {
        const t = ht()[ri][Xn];
        if (!t.projection) {
          const i = (t.projection = f(e ? e.length : 1, null)),
            o = i.slice();
          let l = t.child;
          for (; null !== l; ) {
            const u = e ? ub(l, e) : 0;
            null !== u &&
              (o[u] ? (o[u].projectionNext = l) : (i[u] = l), (o[u] = l)),
              (l = l.next);
          }
        }
      }
      function pf(e, t = 0, n) {
        const i = ht(),
          o = kn(),
          l = la(o, Hn + e, 16, null, n || null);
        null === l.projection && (l.projection = t),
          io(),
          32 != (32 & l.flags) &&
            (function wg(e, t, n) {
              Tu(t[fn], 0, t, n, Cu(e, n, t), Mu(n.parent || t[Xn], n, t));
            })(o, i, l);
      }
      function Ll(e, t) {
        return (e << 17) | (t << 2);
      }
      function bs(e) {
        return (e >> 17) & 32767;
      }
      function gd(e) {
        return 2 | e;
      }
      function $s(e) {
        return (131068 & e) >> 2;
      }
      function _d(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function vd(e) {
        return 1 | e;
      }
      function Ef(e, t, n, i, o) {
        const l = e[n + 1],
          u = null === t;
        let v = i ? bs(l) : $s(l),
          E = !1;
        for (; 0 !== v && (!1 === E || u); ) {
          const z = e[v + 1];
          _b(e[v], t) && ((E = !0), (e[v + 1] = i ? vd(z) : gd(z))),
            (v = i ? bs(z) : $s(z));
        }
        E && (e[n + 1] = i ? gd(l) : vd(l));
      }
      function _b(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || 'string' != typeof t) && Ve(e, t) >= 0)
        );
      }
      const nr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function wf(e) {
        return e.substring(nr.key, nr.keyEnd);
      }
      function Mf(e, t) {
        const n = nr.textEnd;
        return n === t
          ? -1
          : ((t = nr.keyEnd =
              (function Db(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (nr.key = t), n)),
            va(e, t, n));
      }
      function va(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function bd(e, t, n) {
        return Oo(e, t, n, !1), bd;
      }
      function yd(e, t) {
        return Oo(e, t, null, !0), yd;
      }
      function Go(e, t) {
        for (
          let n = (function bb(e) {
            return (
              (function Sf(e) {
                (nr.key = 0),
                  (nr.keyEnd = 0),
                  (nr.value = 0),
                  (nr.valueEnd = 0),
                  (nr.textEnd = e.length);
              })(e),
              Mf(e, va(e, 0, nr.textEnd))
            );
          })(t);
          n >= 0;
          n = Mf(t, n)
        )
          U(e, wf(t), !0);
      }
      function Oo(e, t, n, i) {
        const o = ht(),
          l = kn(),
          u = cr(2);
        l.firstUpdatePass && Of(l, e, u, i),
          t !== Ln &&
            Rr(o, u, t) &&
            Ff(
              l,
              l.data[Nt()],
              o,
              o[fn],
              e,
              (o[u + 1] = (function Rb(e, t) {
                return (
                  null == e ||
                    '' === e ||
                    ('string' == typeof t
                      ? (e += t)
                      : 'object' == typeof e && (e = ue(ns(e)))),
                  e
                );
              })(t, n)),
              i,
              u,
            );
      }
      function Tf(e, t) {
        return t >= e.expandoStartIndex;
      }
      function Of(e, t, n, i) {
        const o = e.data;
        if (null === o[n + 1]) {
          const l = o[Nt()],
            u = Tf(e, n);
          Nf(l, i) && null === t && !u && (t = !1),
            (t = (function Mb(e, t, n, i) {
              const o = oo(e);
              let l = i ? t.residualClasses : t.residualStyles;
              if (null === o)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((n = Ga((n = Dd(null, e, t, n, i)), t.attrs, i)),
                  (l = null));
              else {
                const u = t.directiveStylingLast;
                if (-1 === u || e[u] !== o)
                  if (((n = Dd(o, e, t, n, i)), null === l)) {
                    let E = (function Ab(e, t, n) {
                      const i = n ? t.classBindings : t.styleBindings;
                      if (0 !== $s(i)) return e[bs(i)];
                    })(e, t, i);
                    void 0 !== E &&
                      Array.isArray(E) &&
                      ((E = Dd(null, e, t, E[1], i)),
                      (E = Ga(E, t.attrs, i)),
                      (function Sb(e, t, n, i) {
                        e[bs(n ? t.classBindings : t.styleBindings)] = i;
                      })(e, t, i, E));
                  } else
                    l = (function Ib(e, t, n) {
                      let i;
                      const o = t.directiveEnd;
                      for (let l = 1 + t.directiveStylingLast; l < o; l++)
                        i = Ga(i, e[l].hostAttrs, n);
                      return Ga(i, t.attrs, n);
                    })(e, t, i);
              }
              return (
                void 0 !== l &&
                  (i ? (t.residualClasses = l) : (t.residualStyles = l)),
                n
              );
            })(o, l, t, i)),
            (function mb(e, t, n, i, o, l) {
              let u = l ? t.classBindings : t.styleBindings,
                v = bs(u),
                E = $s(u);
              e[i] = n;
              let z,
                N = !1;
              if (
                (Array.isArray(n)
                  ? ((z = n[1]), (null === z || Ve(n, z) > 0) && (N = !0))
                  : (z = n),
                o)
              )
                if (0 !== E) {
                  const Fe = bs(e[v + 1]);
                  (e[i + 1] = Ll(Fe, v)),
                    0 !== Fe && (e[Fe + 1] = _d(e[Fe + 1], i)),
                    (e[v + 1] = (function fb(e, t) {
                      return (131071 & e) | (t << 17);
                    })(e[v + 1], i));
                } else
                  (e[i + 1] = Ll(v, 0)),
                    0 !== v && (e[v + 1] = _d(e[v + 1], i)),
                    (v = i);
              else
                (e[i + 1] = Ll(E, 0)),
                  0 === v ? (v = i) : (e[E + 1] = _d(e[E + 1], i)),
                  (E = i);
              N && (e[i + 1] = gd(e[i + 1])),
                Ef(e, z, i, !0),
                Ef(e, z, i, !1),
                (function gb(e, t, n, i, o) {
                  const l = o ? e.residualClasses : e.residualStyles;
                  null != l &&
                    'string' == typeof t &&
                    Ve(l, t) >= 0 &&
                    (n[i + 1] = vd(n[i + 1]));
                })(t, z, e, i, l),
                (u = Ll(v, E)),
                l ? (t.classBindings = u) : (t.styleBindings = u);
            })(o, l, t, n, u, i);
        }
      }
      function Dd(e, t, n, i, o) {
        let l = null;
        const u = n.directiveEnd;
        let v = n.directiveStylingLast;
        for (
          -1 === v ? (v = n.directiveStart) : v++;
          v < u && ((l = t[v]), (i = Ga(i, l.hostAttrs, o)), l !== e);

        )
          v++;
        return null !== e && (n.directiveStylingLast = v), i;
      }
      function Ga(e, t, n) {
        const i = n ? 1 : 2;
        let o = -1;
        if (null !== t)
          for (let l = 0; l < t.length; l++) {
            const u = t[l];
            'number' == typeof u
              ? (o = u)
              : o === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ['', e]),
                U(e, u, !!n || t[++l]));
          }
        return void 0 === e ? null : e;
      }
      function Ff(e, t, n, i, o, l, u, v) {
        if (!(3 & t.type)) return;
        const E = e.data,
          N = E[v + 1],
          z = (function pb(e) {
            return 1 == (1 & e);
          })(N)
            ? Pf(E, t, n, o, $s(N), u)
            : void 0;
        Bl(z) ||
          (Bl(l) ||
            ((function hb(e) {
              return 2 == (2 & e);
            })(N) &&
              (l = Pf(E, null, n, o, v, u))),
          (function Ag(e, t, n, i, o) {
            if (t) o ? e.addClass(n, i) : e.removeClass(n, i);
            else {
              let l = -1 === i.indexOf('-') ? void 0 : Jt.DashCase;
              null == o
                ? e.removeStyle(n, i, l)
                : ('string' == typeof o &&
                    o.endsWith('!important') &&
                    ((o = o.slice(0, -10)), (l |= Jt.Important)),
                  e.setStyle(n, i, o, l));
            }
          })(i, u, li(Nt(), n), o, l));
      }
      function Pf(e, t, n, i, o, l) {
        const u = null === t;
        let v;
        for (; o > 0; ) {
          const E = e[o],
            N = Array.isArray(E),
            z = N ? E[1] : E,
            oe = null === z;
          let Fe = n[o + 1];
          Fe === Ln && (Fe = oe ? Kt : void 0);
          let Ze = oe ? K(Fe, i) : z === i ? Fe : void 0;
          if ((N && !Bl(Ze) && (Ze = K(E, i)), Bl(Ze) && ((v = Ze), u)))
            return v;
          const Ct = e[o + 1];
          o = u ? bs(Ct) : $s(Ct);
        }
        if (null !== t) {
          let E = l ? t.residualClasses : t.residualStyles;
          null != E && (v = K(E, i));
        }
        return v;
      }
      function Bl(e) {
        return void 0 !== e;
      }
      function Nf(e, t) {
        return 0 != (e.flags & (t ? 8 : 16));
      }
      function Lf(e, t = '') {
        const n = ht(),
          i = kn(),
          o = e + Hn,
          l = i.firstCreatePass ? la(i, o, 1, t, null) : i.data[o],
          u = (n[o] = (function vc(e, t) {
            return e.createText(t);
          })(n[fn], t));
        ml(i, n, u, l), lr(l, !1);
      }
      function Cd(e) {
        return Vl('', e, ''), Cd;
      }
      function Vl(e, t, n) {
        const i = ht(),
          o = da(i, e, t, n);
        return (
          o !== Ln &&
            (function os(e, t, n) {
              const i = li(t, e);
              !(function bu(e, t, n) {
                e.setValue(t, n);
              })(e[fn], i, n);
            })(i, Nt(), o),
          Vl
        );
      }
      function Gf(e, t, n) {
        !(function Ro(e, t, n, i) {
          const o = kn(),
            l = cr(2);
          o.firstUpdatePass && Of(o, null, l, i);
          const u = ht();
          if (n !== Ln && Rr(u, l, n)) {
            const v = o.data[Nt()];
            if (Nf(v, i) && !Tf(o, l)) {
              let E = i ? v.classesWithoutHost : v.stylesWithoutHost;
              null !== E && (n = ce(E, n || '')), dd(o, v, u, n, i);
            } else
              !(function Ob(e, t, n, i, o, l, u, v) {
                o === Ln && (o = Kt);
                let E = 0,
                  N = 0,
                  z = 0 < o.length ? o[0] : null,
                  oe = 0 < l.length ? l[0] : null;
                for (; null !== z || null !== oe; ) {
                  const Fe = E < o.length ? o[E + 1] : void 0,
                    Ze = N < l.length ? l[N + 1] : void 0;
                  let Ht,
                    Ct = null;
                  z === oe
                    ? ((E += 2), (N += 2), Fe !== Ze && ((Ct = oe), (Ht = Ze)))
                    : null === oe || (null !== z && z < oe)
                    ? ((E += 2), (Ct = z))
                    : ((N += 2), (Ct = oe), (Ht = Ze)),
                    null !== Ct && Ff(e, t, n, i, Ct, Ht, u, v),
                    (z = E < o.length ? o[E] : null),
                    (oe = N < l.length ? l[N] : null);
                }
              })(
                o,
                v,
                u,
                u[fn],
                u[l + 1],
                (u[l + 1] = (function kb(e, t, n) {
                  if (null == n || '' === n) return Kt;
                  const i = [],
                    o = ns(n);
                  if (Array.isArray(o))
                    for (let l = 0; l < o.length; l++) e(i, o[l], !0);
                  else if ('object' == typeof o)
                    for (const l in o) o.hasOwnProperty(l) && e(i, l, o[l]);
                  else 'string' == typeof o && t(i, o);
                  return i;
                })(e, t, n)),
                i,
                l,
              );
          }
        })(U, Go, da(ht(), e, t, n), !0);
      }
      function xd(e, t, n) {
        const i = ht();
        return Rr(i, _r(), t) && ao(kn(), ln(), i, e, t, i[fn], n, !0), xd;
      }
      function Ed(e, t, n) {
        const i = ht();
        if (Rr(i, _r(), t)) {
          const l = kn(),
            u = ln();
          ao(l, u, i, e, t, Bh(oo(l.data), u, i), n, !0);
        }
        return Ed;
      }
      const Ys = void 0;
      var Xb = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Ys],
        [['AM', 'PM'], Ys, Ys],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
          ],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Ys,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',
          ],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Ys,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Ys, "{1} 'at' {0}", Ys],
        [
          '.',
          ',',
          ';',
          '%',
          '+',
          '-',
          'E',
          '\xd7',
          '\u2030',
          '\u221e',
          'NaN',
          ':',
        ],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function Qb(e) {
          const n = Math.floor(Math.abs(e)),
            i = e.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === n && 0 === i ? 1 : 5;
        },
      ];
      let ba = {};
      function wd(e) {
        const t = (function Jb(e) {
          return e.toLowerCase().replace(/_/g, '-');
        })(e);
        let n = ip(t);
        if (n) return n;
        const i = t.split('-')[0];
        if (((n = ip(i)), n)) return n;
        if ('en' === i) return Xb;
        throw new Be(701, !1);
      }
      function np(e) {
        return wd(e)[xn.PluralCase];
      }
      function ip(e) {
        return (
          e in ba ||
            (ba[e] =
              je.ng &&
              je.ng.common &&
              je.ng.common.locales &&
              je.ng.common.locales[e]),
          ba[e]
        );
      }
      var xn = (() => (
        ((xn = xn || {})[(xn.LocaleId = 0)] = 'LocaleId'),
        (xn[(xn.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (xn[(xn.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (xn[(xn.DaysFormat = 3)] = 'DaysFormat'),
        (xn[(xn.DaysStandalone = 4)] = 'DaysStandalone'),
        (xn[(xn.MonthsFormat = 5)] = 'MonthsFormat'),
        (xn[(xn.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (xn[(xn.Eras = 7)] = 'Eras'),
        (xn[(xn.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (xn[(xn.WeekendRange = 9)] = 'WeekendRange'),
        (xn[(xn.DateFormat = 10)] = 'DateFormat'),
        (xn[(xn.TimeFormat = 11)] = 'TimeFormat'),
        (xn[(xn.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (xn[(xn.NumberSymbols = 13)] = 'NumberSymbols'),
        (xn[(xn.NumberFormats = 14)] = 'NumberFormats'),
        (xn[(xn.CurrencyCode = 15)] = 'CurrencyCode'),
        (xn[(xn.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (xn[(xn.CurrencyName = 17)] = 'CurrencyName'),
        (xn[(xn.Currencies = 18)] = 'Currencies'),
        (xn[(xn.Directionality = 19)] = 'Directionality'),
        (xn[(xn.PluralCase = 20)] = 'PluralCase'),
        (xn[(xn.ExtraData = 21)] = 'ExtraData'),
        xn
      ))();
      const ya = 'en-US';
      let rp = ya;
      function Sd(e, t, n, i, o) {
        if (((e = re(e)), Array.isArray(e)))
          for (let l = 0; l < e.length; l++) Sd(e[l], t, n, i, o);
        else {
          const l = kn(),
            u = ht();
          let v = Us(e) ? e : re(e.provide),
            E = nh(e);
          const N = ci(),
            z = 1048575 & N.providerIndexes,
            oe = N.directiveStart,
            Fe = N.providerIndexes >> 20;
          if (Us(e) || !e.multi) {
            const Ze = new ae(E, o, aa),
              Ct = kd(v, t, o ? z : z + Fe, oe);
            -1 === Ct
              ? (Xi(Ds(N, u), l, v),
                Id(l, e, t.length),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(Ze),
                u.push(Ze))
              : ((n[Ct] = Ze), (u[Ct] = Ze));
          } else {
            const Ze = kd(v, t, z + Fe, oe),
              Ct = kd(v, t, z, z + Fe),
              tn = Ct >= 0 && n[Ct];
            if ((o && !tn) || (!o && !(Ze >= 0 && n[Ze]))) {
              Xi(Ds(N, u), l, v);
              const cn = (function qy(e, t, n, i, o) {
                const l = new ae(e, n, aa);
                return (
                  (l.multi = []),
                  (l.index = t),
                  (l.componentProviders = 0),
                  Ip(l, o, i && !n),
                  l
                );
              })(o ? Zy : Ky, n.length, o, i, E);
              !o && tn && (n[Ct].providerFactory = cn),
                Id(l, e, t.length, 0),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(cn),
                u.push(cn);
            } else Id(l, e, Ze > -1 ? Ze : Ct, Ip(n[o ? Ct : Ze], E, !o && i));
            !o && i && tn && n[Ct].componentProviders++;
          }
        }
      }
      function Id(e, t, n, i) {
        const o = Us(t),
          l = (function l_(e) {
            return !!e.useClass;
          })(t);
        if (o || l) {
          const E = (l ? re(t.useClass) : t).prototype.ngOnDestroy;
          if (E) {
            const N = e.destroyHooks || (e.destroyHooks = []);
            if (!o && t.multi) {
              const z = N.indexOf(n);
              -1 === z ? N.push(n, [i, E]) : N[z + 1].push(i, E);
            } else N.push(n, E);
          }
        }
      }
      function Ip(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function kd(e, t, n, i) {
        for (let o = n; o < i; o++) if (t[o] === e) return o;
        return -1;
      }
      function Ky(e, t, n, i) {
        return Td(this.multi, []);
      }
      function Zy(e, t, n, i) {
        const o = this.multi;
        let l;
        if (this.providerFactory) {
          const u = this.providerFactory.componentProviders,
            v = So(n, n[zt], this.providerFactory.index, i);
          (l = v.slice(0, u)), Td(o, l);
          for (let E = u; E < v.length; E++) l.push(v[E]);
        } else (l = []), Td(o, l);
        return l;
      }
      function Td(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function kp(e, t = []) {
        return n => {
          n.providersResolver = (i, o) =>
            (function Wy(e, t, n) {
              const i = kn();
              if (i.firstCreatePass) {
                const o = bn(e);
                Sd(n, i.data, i.blueprint, o, !0),
                  Sd(t, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(e) : e, t);
        };
      }
      class Da {}
      class Tp {}
      function Qy(e, t) {
        return new Op(e, t ?? null);
      }
      class Op extends Da {
        constructor(t, n) {
          super(),
            (this._parent = n),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Uh(this));
          const i = Di(t);
          (this._bootstrapComponents = rs(i.bootstrap)),
            (this._r3Injector = bh(
              t,
              n,
              [
                { provide: Da, useValue: this },
                { provide: Va, useValue: this.componentFactoryResolver },
              ],
              ue(t),
              new Set(['environment']),
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach(n => n()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Od extends Tp {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new Op(this.moduleType, t);
        }
      }
      class Xy extends Da {
        constructor(t, n, i) {
          super(),
            (this.componentFactoryResolver = new Uh(this)),
            (this.instance = null);
          const o = new th(
            [
              ...t,
              { provide: Da, useValue: this },
              { provide: Va, useValue: this.componentFactoryResolver },
            ],
            n || Cl(),
            i,
            new Set(['environment']),
          );
          (this.injector = o), o.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function Rd(e, t, n = null) {
        return new Xy(e, t, n).injector;
      }
      let Jy = (() => {
        class e {
          constructor(n) {
            (this._injector = n), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(n) {
            if (!n.standalone) return null;
            if (!this.cachedInjectors.has(n.id)) {
              const i = Qu(0, n.type),
                o =
                  i.length > 0
                    ? Rd([i], this._injector, `Standalone[${n.type.name}]`)
                    : null;
              this.cachedInjectors.set(n.id, o);
            }
            return this.cachedInjectors.get(n.id);
          }
          ngOnDestroy() {
            try {
              for (const n of this.cachedInjectors.values())
                null !== n && n.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (e.ɵprov = mt({
            token: e,
            providedIn: 'environment',
            factory: () => new e(Je(Hs)),
          })),
          e
        );
      })();
      function Rp(e) {
        e.getStandaloneInjector = t =>
          t.get(Jy).getOrCreateStandaloneInjector(e);
      }
      function Up(e, t, n, i) {
        return jp(ht(), Oi(), e, t, n, i);
      }
      function Hp(e, t, n, i, o) {
        return (function zp(e, t, n, i, o, l, u) {
          const v = t + n;
          return (function zs(e, t, n, i) {
            const o = Rr(e, t, n);
            return Rr(e, t + 1, i) || o;
          })(e, v, o, l)
            ? $o(e, v + 2, u ? i.call(u, o, l) : i(o, l))
            : Xa(e, v + 2);
        })(ht(), Oi(), e, t, n, i, o);
      }
      function Xa(e, t) {
        const n = e[t];
        return n === Ln ? void 0 : n;
      }
      function jp(e, t, n, i, o, l) {
        const u = t + n;
        return Rr(e, u, o)
          ? $o(e, u + 1, l ? i.call(l, o) : i(o))
          : Xa(e, u + 1);
      }
      function Wp(e, t) {
        const n = kn();
        let i;
        const o = e + Hn;
        n.firstCreatePass
          ? ((i = (function _0(e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const i = t[n];
                  if (e === i.name) return i;
                }
            })(t, n.pipeRegistry)),
            (n.data[o] = i),
            i.onDestroy &&
              (n.destroyHooks ?? (n.destroyHooks = [])).push(o, i.onDestroy))
          : (i = n.data[o]);
        const l = i.factory || (i.factory = qi(i.type)),
          u = Y(aa);
        try {
          const v = Qi(!1),
            E = l();
          return (
            Qi(v),
            (function ab(e, t, n, i) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = i);
            })(n, ht(), o, E),
            E
          );
        } finally {
          Y(u);
        }
      }
      function Kp(e, t, n) {
        const i = e + Hn,
          o = ht(),
          l = Mr(o, i);
        return (function Ja(e, t) {
          return e[zt].data[t].pure;
        })(o, i)
          ? jp(o, Oi(), t, l.transform, n, l)
          : l.transform(n);
      }
      function Pd(e) {
        return t => {
          setTimeout(e, void 0, t);
        };
      }
      const Wo = class C0 extends s.x {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, n, i) {
          let o = t,
            l = n || (() => null),
            u = i;
          if (t && 'object' == typeof t) {
            const E = t;
            (o = E.next?.bind(E)),
              (l = E.error?.bind(E)),
              (u = E.complete?.bind(E));
          }
          this.__isAsync && ((l = Pd(l)), o && (o = Pd(o)), u && (u = Pd(u)));
          const v = super.subscribe({ next: o, error: l, complete: u });
          return t instanceof x.w0 && t.add(v), v;
        }
      };
      function x0() {
        return this._results[Symbol.iterator]();
      }
      class $l {
        get changes() {
          return this._changes || (this._changes = new Wo());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const n = $l.prototype;
          n[Symbol.iterator] || (n[Symbol.iterator] = x0);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, n) {
          return this._results.reduce(t, n);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, n) {
          const i = this;
          i.dirty = !1;
          const o = (function Tr(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function ks(e, t, n) {
            if (e.length !== t.length) return !1;
            for (let i = 0; i < e.length; i++) {
              let o = e[i],
                l = t[i];
              if ((n && ((o = n(o)), (l = n(l))), l !== o)) return !1;
            }
            return !0;
          })(i._results, o, n)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let el = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = M0), e;
      })();
      const E0 = el,
        w0 = class extends E0 {
          constructor(t, n, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = n),
              (this.elementRef = i);
          }
          createEmbeddedView(t, n) {
            const i = this._declarationTContainer.tView,
              o = El(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                n || null,
              );
            o[Pi] = this._declarationLView[this._declarationTContainer.index];
            const u = this._declarationLView[Li];
            return (
              null !== u && (o[Li] = u.createEmbeddedView(i)),
              Kc(i, o, t),
              new za(o)
            );
          }
        };
      function M0() {
        return Yl(ci(), ht());
      }
      function Yl(e, t) {
        return 4 & e.type ? new w0(t, e, ra(e, t)) : null;
      }
      let Gl = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = A0), e;
      })();
      function A0() {
        return Qp(ci(), ht());
      }
      const S0 = Gl,
        Zp = class extends S0 {
          constructor(t, n, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = n),
              (this._hostLView = i);
          }
          get element() {
            return ra(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Lo(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Zs(this._hostTNode, this._hostLView);
            if (Vn(t)) {
              const n = mi(t, this._hostLView),
                i = kr(t);
              return new Lo(n[zt].data[i + 8], n);
            }
            return new Lo(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const n = qp(this._lContainer);
            return (null !== n && n[t]) || null;
          }
          get length() {
            return this._lContainer.length - J;
          }
          createEmbeddedView(t, n, i) {
            let o, l;
            'number' == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (l = i.injector));
            const u = t.createEmbeddedView(n || {}, l);
            return this.insert(u, o), u;
          }
          createComponent(t, n, i, o, l) {
            const u =
              t &&
              !(function Jo(e) {
                return 'function' == typeof e;
              })(t);
            let v;
            if (u) v = n;
            else {
              const oe = n || {};
              (v = oe.index),
                (i = oe.injector),
                (o = oe.projectableNodes),
                (l = oe.environmentInjector || oe.ngModuleRef);
            }
            const E = u ? t : new $a(vn(t)),
              N = i || this.parentInjector;
            if (!l && null == E.ngModule) {
              const Fe = (u ? N : this.parentInjector).get(Hs, null);
              Fe && (l = Fe);
            }
            const z = E.create(N, o, void 0, l);
            return this.insert(z.hostView, v), z;
          }
          insert(t, n) {
            const i = t._lView,
              o = i[zt];
            if (
              (function to(e) {
                return Ke(e[Un]);
              })(i)
            ) {
              const z = this.indexOf(t);
              if (-1 !== z) this.detach(z);
              else {
                const oe = i[Un],
                  Fe = new Zp(oe, oe[Xn], oe[Un]);
                Fe.detach(Fe.indexOf(t));
              }
            }
            const l = this._adjustIndex(n),
              u = this._lContainer;
            !(function bg(e, t, n, i) {
              const o = J + i,
                l = n.length;
              i > 0 && (n[o - 1][ti] = t),
                i < l - J
                  ? ((t[ti] = n[o]), Ts(n, J + i, t))
                  : (n.push(t), (t[ti] = null)),
                (t[Un] = n);
              const u = t[Pi];
              null !== u &&
                n !== u &&
                (function yg(e, t) {
                  const n = e[Fn];
                  t[ri] !== t[Un][Un][ri] && (e[Dr] = !0),
                    null === n ? (e[Fn] = [t]) : n.push(t);
                })(u, t);
              const v = t[Li];
              null !== v && v.insertView(e), (t[un] |= 64);
            })(o, i, u, l);
            const v = xc(l, u),
              E = i[fn],
              N = pl(E, u[rr]);
            return (
              null !== N &&
                (function gg(e, t, n, i, o, l) {
                  (i[di] = o), (i[Xn] = t), Na(e, i, n, 1, o, l);
                })(o, u[Xn], E, i, N, v),
              t.attachToViewContainerRef(),
              Ts(Nd(u), l, t),
              t
            );
          }
          move(t, n) {
            return this.insert(t, n);
          }
          indexOf(t) {
            const n = qp(this._lContainer);
            return null !== n ? n.indexOf(t) : -1;
          }
          remove(t) {
            const n = this._adjustIndex(t, -1),
              i = yc(this._lContainer, n);
            i && (Os(Nd(this._lContainer), n), Du(i[zt], i));
          }
          detach(t) {
            const n = this._adjustIndex(t, -1),
              i = yc(this._lContainer, n);
            return i && null != Os(Nd(this._lContainer), n) ? new za(i) : null;
          }
          _adjustIndex(t, n = 0) {
            return t ?? this.length + n;
          }
        };
      function qp(e) {
        return e[gi];
      }
      function Nd(e) {
        return e[gi] || (e[gi] = []);
      }
      function Qp(e, t) {
        let n;
        const i = t[e.index];
        if (Ke(i)) n = i;
        else {
          let o;
          if (8 & e.type) o = ai(i);
          else {
            const l = t[fn];
            o = l.createComment('');
            const u = vi(e, t);
            Bs(
              l,
              pl(l, u),
              o,
              (function Eg(e, t) {
                return e.nextSibling(t);
              })(l, u),
              !1,
            );
          }
          (t[e.index] = n = Ph(i, t, o, e)), Ml(t, n);
        }
        return new Zp(n, e, t);
      }
      class Ld {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Ld(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Bd {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const n = t.queries;
          if (null !== n) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : n.length,
              o = [];
            for (let l = 0; l < i; l++) {
              const u = n.getByIndex(l);
              o.push(this.queries[u.indexInDeclarationView].clone());
            }
            return new Bd(o);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let n = 0; n < this.queries.length; n++)
            null !== sm(t, n).matches && this.queries[n].setDirty();
        }
      }
      class Xp {
        constructor(t, n, i = null) {
          (this.predicate = t), (this.flags = n), (this.read = i);
        }
      }
      class Vd {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, n);
        }
        elementEnd(t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementEnd(t);
        }
        embeddedTView(t) {
          let n = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== n ? n.length : 0,
              l = this.getByIndex(i).embeddedTView(t, o);
            l &&
              ((l.indexInDeclarationView = i),
              null !== n ? n.push(l) : (n = [l]));
          }
          return null !== n ? new Vd(n) : null;
        }
        template(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, n);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Ud {
        constructor(t, n = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = n);
        }
        elementStart(t, n) {
          this.isApplyingToNode(n) && this.matchTNode(t, n);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, n) {
          this.elementStart(t, n);
        }
        embeddedTView(t, n) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, n),
              new Ud(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const n = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== n; ) i = i.parent;
            return n === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, n) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const l = i[o];
              this.matchTNodeWithReadOption(t, n, I0(n, l)),
                this.matchTNodeWithReadOption(t, n, xs(n, t, l, !1, !1));
            }
          else
            i === el
              ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1)
              : this.matchTNodeWithReadOption(t, n, xs(n, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, n, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === Ua || o === Gl || (o === el && 4 & n.type))
                this.addMatch(n.index, -2);
              else {
                const l = xs(n, t, o, !1, !1);
                null !== l && this.addMatch(n.index, l);
              }
            else this.addMatch(n.index, i);
          }
        }
        addMatch(t, n) {
          null === this.matches
            ? (this.matches = [t, n])
            : this.matches.push(t, n);
        }
      }
      function I0(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) if (n[i] === t) return n[i + 1];
        return null;
      }
      function T0(e, t, n, i) {
        return -1 === n
          ? (function k0(e, t) {
              return 11 & e.type ? ra(e, t) : 4 & e.type ? Yl(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function O0(e, t, n) {
              return n === Ua
                ? ra(t, e)
                : n === el
                ? Yl(t, e)
                : n === Gl
                ? Qp(t, e)
                : void 0;
            })(e, t, i)
          : So(e, e[zt], n, t);
      }
      function Jp(e, t, n, i) {
        const o = t[Li].queries[i];
        if (null === o.matches) {
          const l = e.data,
            u = n.matches,
            v = [];
          for (let E = 0; E < u.length; E += 2) {
            const N = u[E];
            v.push(N < 0 ? null : T0(t, l[N], u[E + 1], n.metadata.read));
          }
          o.matches = v;
        }
        return o.matches;
      }
      function Hd(e, t, n, i) {
        const o = e.queries.getByIndex(n),
          l = o.matches;
        if (null !== l) {
          const u = Jp(e, t, o, n);
          for (let v = 0; v < l.length; v += 2) {
            const E = l[v];
            if (E > 0) i.push(u[v / 2]);
            else {
              const N = l[v + 1],
                z = t[-E];
              for (let oe = J; oe < z.length; oe++) {
                const Fe = z[oe];
                Fe[Pi] === Fe[Un] && Hd(Fe[zt], Fe, N, i);
              }
              if (null !== z[Fn]) {
                const oe = z[Fn];
                for (let Fe = 0; Fe < oe.length; Fe++) {
                  const Ze = oe[Fe];
                  Hd(Ze[zt], Ze, N, i);
                }
              }
            }
          }
        }
        return i;
      }
      function em(e) {
        const t = ht(),
          n = kn(),
          i = mo();
        No(i + 1);
        const o = sm(n, i);
        if (
          e.dirty &&
          (function Ar(e) {
            return 4 == (4 & e[un]);
          })(t) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) e.reset([]);
          else {
            const l = o.crossesNgTemplate ? Hd(n, t, i, []) : Jp(n, t, o, i);
            e.reset(l, b_), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function tm(e, t, n) {
        const i = kn();
        i.firstCreatePass &&
          (om(i, new Xp(e, t, n), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          rm(i, ht(), t);
      }
      function nm(e, t, n, i) {
        const o = kn();
        if (o.firstCreatePass) {
          const l = ci();
          om(o, new Xp(t, n, i), l.index),
            (function F0(e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (n.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(o, e),
            2 == (2 & n) && (o.staticContentQueries = !0);
        }
        rm(o, ht(), n);
      }
      function im() {
        return (function R0(e, t) {
          return e[Li].queries[t].queryList;
        })(ht(), mo());
      }
      function rm(e, t, n) {
        const i = new $l(4 == (4 & n));
        kh(e, t, i, i.destroy),
          null === t[Li] && (t[Li] = new Bd()),
          t[Li].queries.push(new Ld(i));
      }
      function om(e, t, n) {
        null === e.queries && (e.queries = new Vd()),
          e.queries.track(new Ud(t, n));
      }
      function sm(e, t) {
        return e.queries.getByIndex(t);
      }
      function am(e, t) {
        return Yl(e, t);
      }
      function jd(e) {
        return !!Di(e);
      }
      function Kl(...e) {}
      const wm = new ii('Application Initializer');
      let Zl = (() => {
        class e {
          constructor(n) {
            (this.appInits = n),
              (this.resolve = Kl),
              (this.reject = Kl),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, o) => {
                (this.resolve = i), (this.reject = o);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const n = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let o = 0; o < this.appInits.length; o++) {
                const l = this.appInits[o]();
                if (hd(l)) n.push(l);
                else if (lf(l)) {
                  const u = new Promise((v, E) => {
                    l.subscribe({ complete: v, error: E });
                  });
                  n.push(u);
                }
              }
            Promise.all(n)
              .then(() => {
                i();
              })
              .catch(o => {
                this.reject(o);
              }),
              0 === n.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(wm, 8));
          }),
          (e.ɵprov = mt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const Mm = new ii('AppId', {
        providedIn: 'root',
        factory: function Am() {
          return `${Wd()}${Wd()}${Wd()}`;
        },
      });
      function Wd() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Sm = new ii('Platform Initializer'),
        eD = new ii('Platform ID', {
          providedIn: 'platform',
          factory: () => 'unknown',
        }),
        tD = new ii('AnimationModuleType');
      let nD = (() => {
        class e {
          log(n) {
            console.log(n);
          }
          warn(n) {
            console.warn(n);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = mt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      const ql = new ii('LocaleId', {
          providedIn: 'root',
          factory: () =>
            Te(ql, kt.Optional | kt.SkipSelf) ||
            (function iD() {
              return (typeof $localize < 'u' && $localize.locale) || ya;
            })(),
        }),
        rD = new ii('DefaultCurrencyCode', {
          providedIn: 'root',
          factory: () => 'USD',
        });
      class oD {
        constructor(t, n) {
          (this.ngModuleFactory = t), (this.componentFactories = n);
        }
      }
      let sD = (() => {
        class e {
          compileModuleSync(n) {
            return new Od(n);
          }
          compileModuleAsync(n) {
            return Promise.resolve(this.compileModuleSync(n));
          }
          compileModuleAndAllComponentsSync(n) {
            const i = this.compileModuleSync(n),
              l = rs(Di(n).declarations).reduce((u, v) => {
                const E = vn(v);
                return E && u.push(new $a(E)), u;
              }, []);
            return new oD(i, l);
          }
          compileModuleAndAllComponentsAsync(n) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(n));
          }
          clearCache() {}
          clearCacheFor(n) {}
          getModuleId(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = mt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const cD = (() => Promise.resolve(0))();
      function Kd(e) {
        typeof Zone > 'u'
          ? cD.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
      }
      class Co {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: n = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Wo(!1)),
            (this.onMicrotaskEmpty = new Wo(!1)),
            (this.onStable = new Wo(!1)),
            (this.onError = new Wo(!1)),
            typeof Zone > 'u')
          )
            throw new Be(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && n),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function dD() {
              let e = je.requestAnimationFrame,
                t = je.cancelAnimationFrame;
              if (typeof Zone < 'u' && e && t) {
                const n = e[Zone.__symbol__('OriginalDelegate')];
                n && (e = n);
                const i = t[Zone.__symbol__('OriginalDelegate')];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function fD(e) {
              const t = () => {
                !(function hD(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(je, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            'fakeTopEventTask',
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                qd(e),
                                (e.isCheckStableRunning = !0),
                                Zd(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {},
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    qd(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, i, o, l, u, v) => {
                  try {
                    return Tm(e), n.invokeTask(o, l, u, v);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      'eventTask' === l.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      t(),
                      Om(e);
                  }
                },
                onInvoke: (n, i, o, l, u, v, E) => {
                  try {
                    return Tm(e), n.invoke(o, l, u, v, E);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && t(), Om(e);
                  }
                },
                onHasTask: (n, i, o, l) => {
                  n.hasTask(o, l),
                    i === o &&
                      ('microTask' == l.change
                        ? ((e._hasPendingMicrotasks = l.microTask),
                          qd(e),
                          Zd(e))
                        : 'macroTask' == l.change &&
                          (e.hasPendingMacrotasks = l.macroTask));
                },
                onHandleError: (n, i, o, l) => (
                  n.handleError(o, l),
                  e.runOutsideAngular(() => e.onError.emit(l)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < 'u' && !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Co.isInAngularZone()) throw new Be(909, !1);
        }
        static assertNotInAngularZone() {
          if (Co.isInAngularZone()) throw new Be(909, !1);
        }
        run(t, n, i) {
          return this._inner.run(t, n, i);
        }
        runTask(t, n, i, o) {
          const l = this._inner,
            u = l.scheduleEventTask('NgZoneEvent: ' + o, t, uD, Kl, Kl);
          try {
            return l.runTask(u, n, i);
          } finally {
            l.cancelTask(u);
          }
        }
        runGuarded(t, n, i) {
          return this._inner.runGuarded(t, n, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const uD = {};
      function Zd(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function qd(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function Tm(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function Om(e) {
        e._nesting--, Zd(e);
      }
      class pD {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Wo()),
            (this.onMicrotaskEmpty = new Wo()),
            (this.onStable = new Wo()),
            (this.onError = new Wo());
        }
        run(t, n, i) {
          return t.apply(n, i);
        }
        runGuarded(t, n, i) {
          return t.apply(n, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, n, i, o) {
          return t.apply(n, i);
        }
      }
      const Rm = new ii(''),
        Fm = new ii('');
      let Qd,
        mD = (() => {
          class e {
            constructor(n, i, o) {
              (this._ngZone = n),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Qd ||
                  ((function gD(e) {
                    Qd = e;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                n.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > 'u'
                      ? null
                      : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Co.assertNotInAngularZone(),
                        Kd(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Kd(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let n = this._callbacks.pop();
                    clearTimeout(n.timeoutId), n.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let n = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  i =>
                    !i.updateCb ||
                    !i.updateCb(n) ||
                    (clearTimeout(i.timeoutId), !1),
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map(n => ({
                    source: n.source,
                    creationLocation: n.creationLocation,
                    data: n.data,
                  }))
                : [];
            }
            addCallback(n, i, o) {
              let l = -1;
              i &&
                i > 0 &&
                (l = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    u => u.timeoutId !== l,
                  )),
                    n(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: n, timeoutId: l, updateCb: o });
            }
            whenStable(n, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?',
                );
              this.addCallback(n, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(n) {
              this.registry.registerApplication(n, this);
            }
            unregisterApplication(n) {
              this.registry.unregisterApplication(n);
            }
            findProviders(n, i, o) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)(Je(Co), Je(Pm), Je(Fm));
            }),
            (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Pm = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(n, i) {
              this._applications.set(n, i);
            }
            unregisterApplication(n) {
              this._applications.delete(n);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(n) {
              return this._applications.get(n) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(n, i = !0) {
              return Qd?.findTestabilityInTree(this, n, i) ?? null;
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)();
            }),
            (e.ɵprov = mt({
              token: e,
              factory: e.ɵfac,
              providedIn: 'platform',
            })),
            e
          );
        })();
      const ss = !1;
      let ys = null;
      const Nm = new ii('AllowMultipleToken'),
        Xd = new ii('PlatformDestroyListeners'),
        Lm = new ii('appBootstrapListener');
      class bD {
        constructor(t, n) {
          (this.name = t), (this.token = n);
        }
      }
      function Vm(e, t, n = []) {
        const i = `Platform: ${t}`,
          o = new ii(i);
        return (l = []) => {
          let u = Jd();
          if (!u || u.injector.get(Nm, !1)) {
            const v = [...n, ...l, { provide: o, useValue: !0 }];
            e
              ? e(v)
              : (function yD(e) {
                  if (ys && !ys.get(Nm, !1)) throw new Be(400, !1);
                  ys = e;
                  const t = e.get(Hm);
                  (function Bm(e) {
                    const t = e.get(Sm, null);
                    t && t.forEach(n => n());
                  })(e);
                })(
                  (function Um(e = [], t) {
                    return js.create({
                      name: t,
                      providers: [
                        { provide: Nc, useValue: 'platform' },
                        { provide: Xd, useValue: new Set([() => (ys = null)]) },
                        ...e,
                      ],
                    });
                  })(v, i),
                );
          }
          return (function CD(e) {
            const t = Jd();
            if (!t) throw new Be(401, !1);
            return t;
          })();
        };
      }
      function Jd() {
        return ys?.get(Hm) ?? null;
      }
      let Hm = (() => {
        class e {
          constructor(n) {
            (this._injector = n),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(n, i) {
            const o = (function zm(e, t) {
                let n;
                return (
                  (n =
                    'noop' === e
                      ? new pD()
                      : ('zone.js' === e ? void 0 : e) || new Co(t)),
                  n
                );
              })(
                i?.ngZone,
                (function jm(e) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!e || !e.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!e || !e.ngZoneRunCoalescing) || !1,
                  };
                })(i),
              ),
              l = [{ provide: Co, useValue: o }];
            return o.run(() => {
              const u = js.create({
                  providers: l,
                  parent: this.injector,
                  name: n.moduleType.name,
                }),
                v = n.create(u),
                E = v.injector.get(Ha, null);
              if (!E) throw new Be(402, !1);
              return (
                o.runOutsideAngular(() => {
                  const N = o.onError.subscribe({
                    next: z => {
                      E.handleError(z);
                    },
                  });
                  v.onDestroy(() => {
                    Xl(this._modules, v), N.unsubscribe();
                  });
                }),
                (function $m(e, t, n) {
                  try {
                    const i = n();
                    return hd(i)
                      ? i.catch(o => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(E, o, () => {
                  const N = v.injector.get(Zl);
                  return (
                    N.runInitializers(),
                    N.donePromise.then(
                      () => (
                        (function op(e) {
                          Le(e, 'Expected localeId to be defined'),
                            'string' == typeof e &&
                              (rp = e.toLowerCase().replace(/_/g, '-'));
                        })(v.injector.get(ql, ya) || ya),
                        this._moduleDoBootstrap(v),
                        v
                      ),
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(n, i = []) {
            const o = Ym({}, i);
            return (function _D(e, t, n) {
              const i = new Od(n);
              return Promise.resolve(i);
            })(0, 0, n).then(l => this.bootstrapModuleFactory(l, o));
          }
          _moduleDoBootstrap(n) {
            const i = n.injector.get(Ql);
            if (n._bootstrapComponents.length > 0)
              n._bootstrapComponents.forEach(o => i.bootstrap(o));
            else {
              if (!n.instance.ngDoBootstrap) throw new Be(-403, !1);
              n.instance.ngDoBootstrap(i);
            }
            this._modules.push(n);
          }
          onDestroy(n) {
            this._destroyListeners.push(n);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Be(404, !1);
            this._modules.slice().forEach(i => i.destroy()),
              this._destroyListeners.forEach(i => i());
            const n = this._injector.get(Xd, null);
            n && (n.forEach(i => i()), n.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(js));
          }),
          (e.ɵprov = mt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      function Ym(e, t) {
        return Array.isArray(t) ? t.reduce(Ym, e) : { ...e, ...t };
      }
      let Ql = (() => {
        class e {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(n, i, o) {
            (this._zone = n),
              (this._injector = i),
              (this._exceptionHandler = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const l = new L.y(v => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    v.next(this._stable), v.complete();
                  });
              }),
              u = new L.y(v => {
                let E;
                this._zone.runOutsideAngular(() => {
                  E = this._zone.onStable.subscribe(() => {
                    Co.assertNotInAngularZone(),
                      Kd(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), v.next(!0));
                      });
                  });
                });
                const N = this._zone.onUnstable.subscribe(() => {
                  Co.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        v.next(!1);
                      }));
                });
                return () => {
                  E.unsubscribe(), N.unsubscribe();
                };
              });
            this.isStable = (0, ne.T)(l, u.pipe((0, te.B)()));
          }
          bootstrap(n, i) {
            const o = n instanceof ih;
            if (!this._injector.get(Zl).done) {
              !o && ei(n);
              throw new Be(405, ss);
            }
            let u;
            (u = o ? n : this._injector.get(Va).resolveComponentFactory(n)),
              this.componentTypes.push(u.componentType);
            const v = (function vD(e) {
                return e.isBoundToModule;
              })(u)
                ? void 0
                : this._injector.get(Da),
              N = u.create(js.NULL, [], i || u.selector, v),
              z = N.location.nativeElement,
              oe = N.injector.get(Rm, null);
            return (
              oe?.registerApplication(z),
              N.onDestroy(() => {
                this.detachView(N.hostView),
                  Xl(this.components, N),
                  oe?.unregisterApplication(z);
              }),
              this._loadComponent(N),
              N
            );
          }
          tick() {
            if (this._runningTick) throw new Be(101, !1);
            try {
              this._runningTick = !0;
              for (let n of this._views) n.detectChanges();
            } catch (n) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(n),
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(n) {
            const i = n;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(n) {
            const i = n;
            Xl(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(n) {
            this.attachView(n.hostView), this.tick(), this.components.push(n);
            const i = this._injector.get(Lm, []);
            i.push(...this._bootstrapListeners), i.forEach(o => o(n));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach(n => n()),
                  this._views.slice().forEach(n => n.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(n) {
            return (
              this._destroyListeners.push(n),
              () => Xl(this._destroyListeners, n)
            );
          }
          destroy() {
            if (this._destroyed) throw new Be(406, !1);
            const n = this._injector;
            n.destroy && !n.destroyed && n.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(Co), Je(Hs), Je(Ha));
          }),
          (e.ɵprov = mt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      function Xl(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function ED() {
        return !1;
      }
      let wD = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = MD), e;
      })();
      function MD(e) {
        return (function AD(e, t, n) {
          if (It(e) && !n) {
            const i = ni(e.index, t);
            return new za(i, i);
          }
          return 47 & e.type ? new za(t[ri], t) : null;
        })(ci(), ht(), 16 == (16 & e));
      }
      class qm {
        constructor() {}
        supports(t) {
          return Tl(t);
        }
        create(t) {
          return new RD(t);
        }
      }
      const OD = (e, t) => t;
      class RD {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || OD);
        }
        forEachItem(t) {
          let n;
          for (n = this._itHead; null !== n; n = n._next) t(n);
        }
        forEachOperation(t) {
          let n = this._itHead,
            i = this._removalsHead,
            o = 0,
            l = null;
          for (; n || i; ) {
            const u = !i || (n && n.currentIndex < Xm(i, o, l)) ? n : i,
              v = Xm(u, o, l),
              E = u.currentIndex;
            if (u === i) o--, (i = i._nextRemoved);
            else if (((n = n._next), null == u.previousIndex)) o++;
            else {
              l || (l = []);
              const N = v - o,
                z = E - o;
              if (N != z) {
                for (let Fe = 0; Fe < N; Fe++) {
                  const Ze = Fe < l.length ? l[Fe] : (l[Fe] = 0),
                    Ct = Ze + Fe;
                  z <= Ct && Ct < N && (l[Fe] = Ze + 1);
                }
                l[u.previousIndex] = z - N;
              }
            }
            v !== E && t(u, v, E);
          }
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousItHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachMovedItem(t) {
          let n;
          for (n = this._movesHead; null !== n; n = n._nextMoved) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        forEachIdentityChange(t) {
          let n;
          for (
            n = this._identityChangesHead;
            null !== n;
            n = n._nextIdentityChange
          )
            t(n);
        }
        diff(t) {
          if ((null == t && (t = []), !Tl(t))) throw new Be(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let o,
            l,
            u,
            n = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let v = 0; v < this.length; v++)
              (l = t[v]),
                (u = this._trackByFn(v, l)),
                null !== n && Object.is(n.trackById, u)
                  ? (i && (n = this._verifyReinsertion(n, l, u, v)),
                    Object.is(n.item, l) || this._addIdentityChange(n, l))
                  : ((n = this._mismatch(n, l, u, v)), (i = !0)),
                (n = n._next);
          } else
            (o = 0),
              (function ib(e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Symbol.iterator]();
                  let i;
                  for (; !(i = n.next()).done; ) t(i.value);
                }
              })(t, v => {
                (u = this._trackByFn(o, v)),
                  null !== n && Object.is(n.trackById, u)
                    ? (i && (n = this._verifyReinsertion(n, v, u, o)),
                      Object.is(n.item, v) || this._addIdentityChange(n, v))
                    : ((n = this._mismatch(n, v, u, o)), (i = !0)),
                  (n = n._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(n), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, n, i, o) {
          let l;
          return (
            null === t ? (l = this._itTail) : ((l = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, l, o))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, l, o))
              : (t = this._addAfter(new FD(n, i), l, o)),
            t
          );
        }
        _verifyReinsertion(t, n, i, o) {
          let l =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== l
              ? (t = this._reinsertAfter(l, t._prev, o))
              : t.currentIndex != o &&
                ((t.currentIndex = o), this._addToMoves(t, o)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const n = t._next;
            this._addToRemovals(this._unlink(t)), (t = n);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, n, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const o = t._prevRemoved,
            l = t._nextRemoved;
          return (
            null === o ? (this._removalsHead = l) : (o._nextRemoved = l),
            null === l ? (this._removalsTail = o) : (l._prevRemoved = o),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, n, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, n, i) {
          return (
            this._insertAfter(t, n, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, n, i) {
          const o = null === n ? this._itHead : n._next;
          return (
            (t._next = o),
            (t._prev = n),
            null === o ? (this._itTail = t) : (o._prev = t),
            null === n ? (this._itHead = t) : (n._next = t),
            null === this._linkedRecords && (this._linkedRecords = new Qm()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const n = t._prev,
            i = t._next;
          return (
            null === n ? (this._itHead = i) : (n._next = i),
            null === i ? (this._itTail = n) : (i._prev = n),
            t
          );
        }
        _addToMoves(t, n) {
          return (
            t.previousIndex === n ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Qm()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, n) {
          return (
            (t.item = n),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class FD {
        constructor(t, n) {
          (this.item = t),
            (this.trackById = n),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class PD {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, n) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === n || n <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const n = t._prevDup,
            i = t._nextDup;
          return (
            null === n ? (this._head = i) : (n._nextDup = i),
            null === i ? (this._tail = n) : (i._prevDup = n),
            null === this._head
          );
        }
      }
      class Qm {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const n = t.trackById;
          let i = this.map.get(n);
          i || ((i = new PD()), this.map.set(n, i)), i.add(t);
        }
        get(t, n) {
          const o = this.map.get(t);
          return o ? o.get(t, n) : null;
        }
        remove(t) {
          const n = t.trackById;
          return this.map.get(n).remove(t) && this.map.delete(n), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Xm(e, t, n) {
        const i = e.previousIndex;
        if (null === i) return i;
        let o = 0;
        return n && i < n.length && (o = n[i]), i + t + o;
      }
      class Jm {
        constructor() {}
        supports(t) {
          return t instanceof Map || ad(t);
        }
        create() {
          return new ND();
        }
      }
      class ND {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let n;
          for (n = this._mapHead; null !== n; n = n._next) t(n);
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousMapHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachChangedItem(t) {
          let n;
          for (n = this._changesHead; null !== n; n = n._nextChanged) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || ad(t))) throw new Be(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let n = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, o) => {
              if (n && n.key === o)
                this._maybeAddToChanges(n, i),
                  (this._appendAfter = n),
                  (n = n._next);
              else {
                const l = this._getOrCreateRecordForKey(o, i);
                n = this._insertBeforeOrAppend(n, l);
              }
            }),
            n)
          ) {
            n._prev && (n._prev._next = null), (this._removalsHead = n);
            for (let i = n; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, n) {
          if (t) {
            const i = t._prev;
            return (
              (n._next = t),
              (n._prev = i),
              (t._prev = n),
              i && (i._next = n),
              t === this._mapHead && (this._mapHead = n),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = n), (n._prev = this._appendAfter))
              : (this._mapHead = n),
            (this._appendAfter = n),
            null
          );
        }
        _getOrCreateRecordForKey(t, n) {
          if (this._records.has(t)) {
            const o = this._records.get(t);
            this._maybeAddToChanges(o, n);
            const l = o._prev,
              u = o._next;
            return (
              l && (l._next = u),
              u && (u._prev = l),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new LD(t);
          return (
            this._records.set(t, i),
            (i.currentValue = n),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, n) {
          Object.is(n, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = n),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, n) {
          t instanceof Map
            ? t.forEach(n)
            : Object.keys(t).forEach(i => n(t[i], i));
        }
      }
      class LD {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function eg() {
        return new ru([new qm()]);
      }
      let ru = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (null != i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || eg()),
              deps: [[e, new Fs(), new es()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (null != i) return i;
            throw new Be(901, !1);
          }
        }
        return (e.ɵprov = mt({ token: e, providedIn: 'root', factory: eg })), e;
      })();
      function tg() {
        return new ou([new Jm()]);
      }
      let ou = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || tg()),
              deps: [[e, new Fs(), new es()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (i) return i;
            throw new Be(901, !1);
          }
        }
        return (e.ɵprov = mt({ token: e, providedIn: 'root', factory: tg })), e;
      })();
      const UD = Vm(null, 'core', []);
      let HD = (() => {
        class e {
          constructor(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(Ql));
          }),
          (e.ɵmod = ir({ type: e })),
          (e.ɵinj = a({})),
          e
        );
      })();
      function jD(e) {
        return 'boolean' == typeof e ? e : null != e && 'false' !== e;
      }
    },
    4006: (Pt, Re, D) => {
      D.d(Re, {
        Cf: () => _t,
        F: () => Xn,
        Fj: () => He,
        JJ: () => dn,
        JL: () => kt,
        JU: () => ue,
        On: () => fr,
        Q7: () => wr,
        UX: () => gr,
        Zs: () => mr,
        _Y: () => Hn,
        a5: () => Wt,
        kI: () => W,
        oH: () => It,
        qu: () => to,
        sg: () => bn,
        u5: () => _n,
      });
      var s = D(4650),
        x = D(6895),
        L = D(457),
        ne = D(4128),
        te = D(4004);
      let de = (() => {
          class T {
            constructor(w, $) {
              (this._renderer = w),
                (this._elementRef = $),
                (this.onChange = it => {}),
                (this.onTouched = () => {});
            }
            setProperty(w, $) {
              this._renderer.setProperty(this._elementRef.nativeElement, w, $);
            }
            registerOnTouched(w) {
              this.onTouched = w;
            }
            registerOnChange(w) {
              this.onChange = w;
            }
            setDisabledState(w) {
              this.setProperty('disabled', w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(s.Qsj), s.Y36(s.SBq));
            }),
            (T.ɵdir = s.lG2({ type: T })),
            T
          );
        })(),
        ve = (() => {
          class T extends de {}
          return (
            (T.ɵfac = (function () {
              let I;
              return function ($) {
                return (I || (I = s.n5z(T)))($ || T);
              };
            })()),
            (T.ɵdir = s.lG2({ type: T, features: [s.qOj] })),
            T
          );
        })();
      const ue = new s.OlP('NgValueAccessor'),
        fe = { provide: ue, useExisting: (0, s.Gpc)(() => He), multi: !0 },
        Ne = new s.OlP('CompositionEventMode');
      let He = (() => {
        class T extends de {
          constructor(w, $, it) {
            super(w, $),
              (this._compositionMode = it),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function re() {
                  const T = (0, x.q)() ? (0, x.q)().getUserAgent() : '';
                  return /android (\d+)/.test(T.toLowerCase());
                })());
          }
          writeValue(w) {
            this.setProperty('value', w ?? '');
          }
          _handleInput(w) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(w);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(w) {
            (this._composing = !1), this._compositionMode && this.onChange(w);
          }
        }
        return (
          (T.ɵfac = function (w) {
            return new (w || T)(s.Y36(s.Qsj), s.Y36(s.SBq), s.Y36(Ne, 8));
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (w, $) {
              1 & w &&
                s.NdJ('input', function (an) {
                  return $._handleInput(an.target.value);
                })('blur', function () {
                  return $.onTouched();
                })('compositionstart', function () {
                  return $._compositionStart();
                })('compositionend', function (an) {
                  return $._compositionEnd(an.target.value);
                });
            },
            features: [s._Bn([fe]), s.qOj],
          })),
          T
        );
      })();
      const ct = !1;
      function vt(T) {
        return (
          null == T ||
          (('string' == typeof T || Array.isArray(T)) && 0 === T.length)
        );
      }
      function Be(T) {
        return null != T && 'number' == typeof T.length;
      }
      const _t = new s.OlP('NgValidators'),
        lt = new s.OlP('NgAsyncValidators'),
        bt =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class W {
        static min(I) {
          return (function se(T) {
            return I => {
              if (vt(I.value) || vt(T)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w < T
                ? { min: { min: T, actual: I.value } }
                : null;
            };
          })(I);
        }
        static max(I) {
          return (function ie(T) {
            return I => {
              if (vt(I.value) || vt(T)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w > T
                ? { max: { max: T, actual: I.value } }
                : null;
            };
          })(I);
        }
        static required(I) {
          return X(I);
        }
        static requiredTrue(I) {
          return Ae(I);
        }
        static email(I) {
          return (function Qe(T) {
            return vt(T.value) || bt.test(T.value) ? null : { email: !0 };
          })(I);
        }
        static minLength(I) {
          return (function ut(T) {
            return I =>
              vt(I.value) || !Be(I.value)
                ? null
                : I.value.length < T
                ? {
                    minlength: {
                      requiredLength: T,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static maxLength(I) {
          return (function Ut(T) {
            return I =>
              Be(I.value) && I.value.length > T
                ? {
                    maxlength: {
                      requiredLength: T,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static pattern(I) {
          return (function Et(T) {
            if (!T) return Yt;
            let I, w;
            return (
              'string' == typeof T
                ? ((w = ''),
                  '^' !== T.charAt(0) && (w += '^'),
                  (w += T),
                  '$' !== T.charAt(T.length - 1) && (w += '$'),
                  (I = new RegExp(w)))
                : ((w = T.toString()), (I = T)),
              $ => {
                if (vt($.value)) return null;
                const it = $.value;
                return I.test(it)
                  ? null
                  : { pattern: { requiredPattern: w, actualValue: it } };
              }
            );
          })(I);
        }
        static nullValidator(I) {
          return null;
        }
        static compose(I) {
          return Pe(I);
        }
        static composeAsync(I) {
          return Ye(I);
        }
      }
      function X(T) {
        return vt(T.value) ? { required: !0 } : null;
      }
      function Ae(T) {
        return !0 === T.value ? null : { required: !0 };
      }
      function Yt(T) {
        return null;
      }
      function Mt(T) {
        return null != T;
      }
      function $e(T) {
        const I = (0, s.QGY)(T) ? (0, L.D)(T) : T;
        if (ct && !(0, s.CqO)(I)) {
          let w = 'Expected async validator to return Promise or Observable.';
          throw (
            ('object' == typeof T &&
              (w +=
                ' Are you using a synchronous validator where an async validator is expected?'),
            new s.vHH(-1101, w))
          );
        }
        return I;
      }
      function ze(T) {
        let I = {};
        return (
          T.forEach(w => {
            I = null != w ? { ...I, ...w } : I;
          }),
          0 === Object.keys(I).length ? null : I
        );
      }
      function be(T, I) {
        return I.map(w => w(T));
      }
      function Ce(T) {
        return T.map(I =>
          (function Ue(T) {
            return !T.validate;
          })(I)
            ? I
            : w => I.validate(w),
        );
      }
      function Pe(T) {
        if (!T) return null;
        const I = T.filter(Mt);
        return 0 == I.length
          ? null
          : function (w) {
              return ze(be(w, I));
            };
      }
      function Le(T) {
        return null != T ? Pe(Ce(T)) : null;
      }
      function Ye(T) {
        if (!T) return null;
        const I = T.filter(Mt);
        return 0 == I.length
          ? null
          : function (w) {
              const $ = be(w, I).map($e);
              return (0, ne.D)($).pipe((0, te.U)(ze));
            };
      }
      function dt(T) {
        return null != T ? Ye(Ce(T)) : null;
      }
      function We(T, I) {
        return null === T ? [I] : Array.isArray(T) ? [...T, I] : [T, I];
      }
      function Gt(T) {
        return T._rawValidators;
      }
      function mt(T) {
        return T._rawAsyncValidators;
      }
      function nn(T) {
        return T ? (Array.isArray(T) ? T : [T]) : [];
      }
      function a(T, I) {
        return Array.isArray(T) ? T.includes(I) : T === I;
      }
      function ft(T, I) {
        const w = nn(I);
        return (
          nn(T).forEach(it => {
            a(w, it) || w.push(it);
          }),
          w
        );
      }
      function $t(T, I) {
        return nn(I).filter(w => !a(T, w));
      }
      class et {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(I) {
          (this._rawValidators = I || []),
            (this._composedValidatorFn = Le(this._rawValidators));
        }
        _setAsyncValidators(I) {
          (this._rawAsyncValidators = I || []),
            (this._composedAsyncValidatorFn = dt(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(I) {
          this._onDestroyCallbacks.push(I);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach(I => I()),
            (this._onDestroyCallbacks = []);
        }
        reset(I) {
          this.control && this.control.reset(I);
        }
        hasError(I, w) {
          return !!this.control && this.control.hasError(I, w);
        }
        getError(I, w) {
          return this.control ? this.control.getError(I, w) : null;
        }
      }
      class pt extends et {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Wt extends et {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class pn {
        constructor(I) {
          this._cd = I;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let dn = (() => {
          class T extends pn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(Wt, 2));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (w, $) {
                2 & w &&
                  s.ekj('ng-untouched', $.isUntouched)(
                    'ng-touched',
                    $.isTouched,
                  )('ng-pristine', $.isPristine)('ng-dirty', $.isDirty)(
                    'ng-valid',
                    $.isValid,
                  )('ng-invalid', $.isInvalid)('ng-pending', $.isPending);
              },
              features: [s.qOj],
            })),
            T
          );
        })(),
        kt = (() => {
          class T extends pn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(pt, 10));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (w, $) {
                2 & w &&
                  s.ekj('ng-untouched', $.isUntouched)(
                    'ng-touched',
                    $.isTouched,
                  )('ng-pristine', $.isPristine)('ng-dirty', $.isDirty)(
                    'ng-valid',
                    $.isValid,
                  )('ng-invalid', $.isInvalid)('ng-pending', $.isPending)(
                    'ng-submitted',
                    $.isSubmitted,
                  );
              },
              features: [s.qOj],
            })),
            T
          );
        })();
      function nt(T, I) {
        return T ? `with name: '${I}'` : `at index: ${I}`;
      }
      const Oe = !1,
        yt = 'VALID',
        Je = 'INVALID',
        At = 'PENDING',
        Te = 'DISABLED';
      function F(T) {
        return (Q(T) ? T.validators : T) || null;
      }
      function M(T, I) {
        return (Q(I) ? I.asyncValidators : T) || null;
      }
      function Q(T) {
        return null != T && !Array.isArray(T) && 'object' == typeof T;
      }
      function Xe(T, I, w) {
        const $ = T.controls;
        if (!(I ? Object.keys($) : $).length)
          throw new s.vHH(
            1e3,
            Oe
              ? (function wt(T) {
                  return `\n    There are no form controls registered with this ${
                    T ? 'group' : 'array'
                  } yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;
                })(I)
              : '',
          );
        if (!$[w])
          throw new s.vHH(
            1001,
            Oe
              ? (function Ot(T, I) {
                  return `Cannot find form control ${nt(T, I)}`;
                })(I, w)
              : '',
          );
      }
      function St(T, I, w) {
        T._forEachChild(($, it) => {
          if (void 0 === w[it])
            throw new s.vHH(
              1002,
              Oe
                ? (function Dn(T, I) {
                    return `Must supply a value for form control ${nt(T, I)}`;
                  })(I, it)
                : '',
            );
        });
      }
      class rn {
        constructor(I, w) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(I),
            this._assignAsyncValidators(w);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(I) {
          this._rawValidators = this._composedValidatorFn = I;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(I) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = I;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === yt;
        }
        get invalid() {
          return this.status === Je;
        }
        get pending() {
          return this.status == At;
        }
        get disabled() {
          return this.status === Te;
        }
        get enabled() {
          return this.status !== Te;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : 'change';
        }
        setValidators(I) {
          this._assignValidators(I);
        }
        setAsyncValidators(I) {
          this._assignAsyncValidators(I);
        }
        addValidators(I) {
          this.setValidators(ft(I, this._rawValidators));
        }
        addAsyncValidators(I) {
          this.setAsyncValidators(ft(I, this._rawAsyncValidators));
        }
        removeValidators(I) {
          this.setValidators($t(I, this._rawValidators));
        }
        removeAsyncValidators(I) {
          this.setAsyncValidators($t(I, this._rawAsyncValidators));
        }
        hasValidator(I) {
          return a(this._rawValidators, I);
        }
        hasAsyncValidator(I) {
          return a(this._rawAsyncValidators, I);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(I = {}) {
          (this.touched = !0),
            this._parent && !I.onlySelf && this._parent.markAsTouched(I);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild(I => I.markAllAsTouched());
        }
        markAsUntouched(I = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild(w => {
              w.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        markAsDirty(I = {}) {
          (this.pristine = !1),
            this._parent && !I.onlySelf && this._parent.markAsDirty(I);
        }
        markAsPristine(I = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild(w => {
              w.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        markAsPending(I = {}) {
          (this.status = At),
            !1 !== I.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !I.onlySelf && this._parent.markAsPending(I);
        }
        disable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = Te),
            (this.errors = null),
            this._forEachChild($ => {
              $.disable({ ...I, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach($ => $(!0));
        }
        enable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = yt),
            this._forEachChild($ => {
              $.enable({ ...I, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            }),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach($ => $(!1));
        }
        _updateAncestors(I) {
          this._parent &&
            !I.onlySelf &&
            (this._parent.updateValueAndValidity(I),
            I.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(I) {
          this._parent = I;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(I = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === yt || this.status === At) &&
                this._runAsyncValidator(I.emitEvent)),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !I.onlySelf &&
              this._parent.updateValueAndValidity(I);
        }
        _updateTreeValidity(I = { emitEvent: !0 }) {
          this._forEachChild(w => w._updateTreeValidity(I)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Te : yt;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(I) {
          if (this.asyncValidator) {
            (this.status = At), (this._hasOwnPendingAsyncValidator = !0);
            const w = $e(this.asyncValidator(this));
            this._asyncValidationSubscription = w.subscribe($ => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors($, { emitEvent: I });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(I, w = {}) {
          (this.errors = I), this._updateControlsErrors(!1 !== w.emitEvent);
        }
        get(I) {
          let w = I;
          return null == w ||
            (Array.isArray(w) || (w = w.split('.')), 0 === w.length)
            ? null
            : w.reduce(($, it) => $ && $._find(it), this);
        }
        getError(I, w) {
          const $ = w ? this.get(w) : this;
          return $ && $.errors ? $.errors[I] : null;
        }
        hasError(I, w) {
          return !!this.getError(I, w);
        }
        get root() {
          let I = this;
          for (; I._parent; ) I = I._parent;
          return I;
        }
        _updateControlsErrors(I) {
          (this.status = this._calculateStatus()),
            I && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(I);
        }
        _initObservables() {
          (this.valueChanges = new s.vpe()), (this.statusChanges = new s.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Te
            : this.errors
            ? Je
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(At)
            ? At
            : this._anyControlsHaveStatus(Je)
            ? Je
            : yt;
        }
        _anyControlsHaveStatus(I) {
          return this._anyControls(w => w.status === I);
        }
        _anyControlsDirty() {
          return this._anyControls(I => I.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls(I => I.touched);
        }
        _updatePristine(I = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        _updateTouched(I = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        _registerOnCollectionChange(I) {
          this._onCollectionChange = I;
        }
        _setUpdateStrategy(I) {
          Q(I) && null != I.updateOn && (this._updateOn = I.updateOn);
        }
        _parentMarkedDirty(I) {
          return (
            !I &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(I) {
          return null;
        }
        _assignValidators(I) {
          (this._rawValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedValidatorFn = (function b(T) {
              return Array.isArray(T) ? Le(T) : T || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(I) {
          (this._rawAsyncValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedAsyncValidatorFn = (function G(T) {
              return Array.isArray(T) ? dt(T) : T || null;
            })(this._rawAsyncValidators));
        }
      }
      class Rt extends rn {
        constructor(I, w, $) {
          super(F(w), M($, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(I, w) {
          return this.controls[I]
            ? this.controls[I]
            : ((this.controls[I] = w),
              w.setParent(this),
              w._registerOnCollectionChange(this._onCollectionChange),
              w);
        }
        addControl(I, w, $ = {}) {
          this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: $.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(I, w = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        setControl(I, w, $ = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            w && this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: $.emitEvent }),
            this._onCollectionChange();
        }
        contains(I) {
          return this.controls.hasOwnProperty(I) && this.controls[I].enabled;
        }
        setValue(I, w = {}) {
          St(this, !0, I),
            Object.keys(I).forEach($ => {
              Xe(this, !0, $),
                this.controls[$].setValue(I[$], {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (Object.keys(I).forEach($ => {
              const it = this.controls[$];
              it &&
                it.patchValue(I[$], { onlySelf: !0, emitEvent: w.emitEvent });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = {}, w = {}) {
          this._forEachChild(($, it) => {
            $.reset(I[it], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (I, w, $) => ((I[$] = w.getRawValue()), I),
          );
        }
        _syncPendingControls() {
          let I = this._reduceChildren(
            !1,
            (w, $) => !!$._syncPendingControls() || w,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          Object.keys(this.controls).forEach(w => {
            const $ = this.controls[w];
            $ && I($, w);
          });
        }
        _setUpControls() {
          this._forEachChild(I => {
            I.setParent(this),
              I._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(I) {
          for (const [w, $] of Object.entries(this.controls))
            if (this.contains(w) && I($)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (w, $, it) => (
              ($.enabled || this.disabled) && (w[it] = $.value), w
            ),
          );
        }
        _reduceChildren(I, w) {
          let $ = I;
          return (
            this._forEachChild((it, an) => {
              $ = w($, it, an);
            }),
            $
          );
        }
        _allControlsDisabled() {
          for (const I of Object.keys(this.controls))
            if (this.controls[I].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(I) {
          return this.controls.hasOwnProperty(I) ? this.controls[I] : null;
        }
      }
      class Ie extends Rt {}
      const Z = new s.OlP('CallSetDisabledState', {
          providedIn: 'root',
          factory: () => we,
        }),
        we = 'always';
      function Bt(T, I, w = we) {
        ki(T, I),
          I.valueAccessor.writeValue(T.value),
          (T.disabled || 'always' === w) &&
            I.valueAccessor.setDisabledState?.(T.disabled),
          (function ir(T, I) {
            I.valueAccessor.registerOnChange(w => {
              (T._pendingValue = w),
                (T._pendingChange = !0),
                (T._pendingDirty = !0),
                'change' === T.updateOn && Qn(T, I);
            });
          })(T, I),
          (function $n(T, I) {
            const w = ($, it) => {
              I.valueAccessor.writeValue($), it && I.viewToModelUpdate($);
            };
            T.registerOnChange(w),
              I._registerOnDestroy(() => {
                T._unregisterOnChange(w);
              });
          })(T, I),
          (function Vr(T, I) {
            I.valueAccessor.registerOnTouched(() => {
              (T._pendingTouched = !0),
                'blur' === T.updateOn && T._pendingChange && Qn(T, I),
                'submit' !== T.updateOn && T.markAsTouched();
            });
          })(T, I),
          (function Zn(T, I) {
            if (I.valueAccessor.setDisabledState) {
              const w = $ => {
                I.valueAccessor.setDisabledState($);
              };
              T.registerOnDisabledChange(w),
                I._registerOnDestroy(() => {
                  T._unregisterOnDisabledChange(w);
                });
            }
          })(T, I);
      }
      function qt(T, I, w = !0) {
        const $ = () => {};
        I.valueAccessor &&
          (I.valueAccessor.registerOnChange($),
          I.valueAccessor.registerOnTouched($)),
          yi(T, I),
          T &&
            (I._invokeOnDestroyCallbacks(),
            T._registerOnCollectionChange(() => {}));
      }
      function Cn(T, I) {
        T.forEach(w => {
          w.registerOnValidatorChange && w.registerOnValidatorChange(I);
        });
      }
      function ki(T, I) {
        const w = Gt(T);
        null !== I.validator
          ? T.setValidators(We(w, I.validator))
          : 'function' == typeof w && T.setValidators([w]);
        const $ = mt(T);
        null !== I.asyncValidator
          ? T.setAsyncValidators(We($, I.asyncValidator))
          : 'function' == typeof $ && T.setAsyncValidators([$]);
        const it = () => T.updateValueAndValidity();
        Cn(I._rawValidators, it), Cn(I._rawAsyncValidators, it);
      }
      function yi(T, I) {
        let w = !1;
        if (null !== T) {
          if (null !== I.validator) {
            const it = Gt(T);
            if (Array.isArray(it) && it.length > 0) {
              const an = it.filter(si => si !== I.validator);
              an.length !== it.length && ((w = !0), T.setValidators(an));
            }
          }
          if (null !== I.asyncValidator) {
            const it = mt(T);
            if (Array.isArray(it) && it.length > 0) {
              const an = it.filter(si => si !== I.asyncValidator);
              an.length !== it.length && ((w = !0), T.setAsyncValidators(an));
            }
          }
        }
        const $ = () => {};
        return Cn(I._rawValidators, $), Cn(I._rawAsyncValidators, $), w;
      }
      function Qn(T, I) {
        T._pendingDirty && T.markAsDirty(),
          T.setValue(T._pendingValue, { emitModelToViewChange: !1 }),
          I.viewToModelUpdate(T._pendingValue),
          (T._pendingChange = !1);
      }
      function jt(T, I) {
        ki(T, I);
      }
      function Vi(T, I) {
        if (!T.hasOwnProperty('model')) return !1;
        const w = T.model;
        return !!w.isFirstChange() || !Object.is(I, w.currentValue);
      }
      function di(T, I) {
        T._syncPendingControls(),
          I.forEach(w => {
            const $ = w.control;
            'submit' === $.updateOn &&
              $._pendingChange &&
              (w.viewToModelUpdate($._pendingValue), ($._pendingChange = !1));
          });
      }
      function zt(T, I) {
        if (!I) return null;
        let w, $, it;
        return (
          Array.isArray(I),
          I.forEach(an => {
            an.constructor === He
              ? (w = an)
              : (function ur(T) {
                  return Object.getPrototypeOf(T.constructor) === ve;
                })(an)
              ? ($ = an)
              : (it = an);
          }),
          it || $ || w || null
        );
      }
      const ti = { provide: pt, useExisting: (0, s.Gpc)(() => Xn) },
        ui = (() => Promise.resolve())();
      let Xn = (() => {
        class T extends pt {
          constructor(w, $, it) {
            super(),
              (this.callSetDisabledState = it),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new s.vpe()),
              (this.form = new Rt({}, Le(w), dt($)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(w) {
            ui.then(() => {
              const $ = this._findContainer(w.path);
              (w.control = $.registerControl(w.name, w.control)),
                Bt(w.control, w, this.callSetDisabledState),
                w.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(w);
            });
          }
          getControl(w) {
            return this.form.get(w.path);
          }
          removeControl(w) {
            ui.then(() => {
              const $ = this._findContainer(w.path);
              $ && $.removeControl(w.name), this._directives.delete(w);
            });
          }
          addFormGroup(w) {
            ui.then(() => {
              const $ = this._findContainer(w.path),
                it = new Rt({});
              jt(it, w),
                $.registerControl(w.name, it),
                it.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(w) {
            ui.then(() => {
              const $ = this._findContainer(w.path);
              $ && $.removeControl(w.name);
            });
          }
          getFormGroup(w) {
            return this.form.get(w.path);
          }
          updateModel(w, $) {
            ui.then(() => {
              this.form.get(w.path).setValue($);
            });
          }
          setValue(w) {
            this.control.setValue(w);
          }
          onSubmit(w) {
            return (
              (this.submitted = !0),
              di(this.form, this._directives),
              this.ngSubmit.emit(w),
              'dialog' === w?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(w) {
            this.form.reset(w), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(w) {
            return w.pop(), w.length ? this.form.get(w) : this.form;
          }
        }
        return (
          (T.ɵfac = function (w) {
            return new (w || T)(s.Y36(_t, 10), s.Y36(lt, 10), s.Y36(Z, 8));
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [
              ['form', 3, 'ngNoForm', '', 3, 'formGroup', ''],
              ['ng-form'],
              ['', 'ngForm', ''],
            ],
            hostBindings: function (w, $) {
              1 & w &&
                s.NdJ('submit', function (an) {
                  return $.onSubmit(an);
                })('reset', function () {
                  return $.onReset();
                });
            },
            inputs: { options: ['ngFormOptions', 'options'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [s._Bn([ti]), s.qOj],
          })),
          T
        );
      })();
      function hi(T, I) {
        const w = T.indexOf(I);
        w > -1 && T.splice(w, 1);
      }
      function wn(T) {
        return (
          'object' == typeof T &&
          null !== T &&
          2 === Object.keys(T).length &&
          'value' in T &&
          'disabled' in T
        );
      }
      const Ti = class extends rn {
          constructor(I = null, w, $) {
            super(F(w), M($, w)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(I),
              this._setUpdateStrategy(w),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Q(w) &&
                (w.nonNullable || w.initialValueIsDefault) &&
                (this.defaultValue = wn(I) ? I.value : I);
          }
          setValue(I, w = {}) {
            (this.value = this._pendingValue = I),
              this._onChange.length &&
                !1 !== w.emitModelToViewChange &&
                this._onChange.forEach($ =>
                  $(this.value, !1 !== w.emitViewToModelChange),
                ),
              this.updateValueAndValidity(w);
          }
          patchValue(I, w = {}) {
            this.setValue(I, w);
          }
          reset(I = this.defaultValue, w = {}) {
            this._applyFormState(I),
              this.markAsPristine(w),
              this.markAsUntouched(w),
              this.setValue(this.value, w),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(I) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(I) {
            this._onChange.push(I);
          }
          _unregisterOnChange(I) {
            hi(this._onChange, I);
          }
          registerOnDisabledChange(I) {
            this._onDisabledChange.push(I);
          }
          _unregisterOnDisabledChange(I) {
            hi(this._onDisabledChange, I);
          }
          _forEachChild(I) {}
          _syncPendingControls() {
            return !(
              'submit' !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(I) {
            wn(I)
              ? ((this.value = this._pendingValue = I.value),
                I.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = I);
          }
        },
        Li = { provide: Wt, useExisting: (0, s.Gpc)(() => fr) },
        hr = (() => Promise.resolve())();
      let fr = (() => {
          class T extends Wt {
            constructor(w, $, it, an, si, ht) {
              super(),
                (this._changeDetectorRef = si),
                (this.callSetDisabledState = ht),
                (this.control = new Ti()),
                (this._registered = !1),
                (this.update = new s.vpe()),
                (this._parent = w),
                this._setValidators($),
                this._setAsyncValidators(it),
                (this.valueAccessor = zt(0, an));
            }
            ngOnChanges(w) {
              if ((this._checkForErrors(), !this._registered || 'name' in w)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const $ = w.name.previousValue;
                  this.formDirective.removeControl({
                    name: $,
                    path: this._getPath($),
                  });
                }
                this._setUpControl();
              }
              'isDisabled' in w && this._updateDisabled(w),
                Vi(w, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(w) {
              (this.viewModel = w), this.update.emit(w);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Bt(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(w) {
              hr.then(() => {
                this.control.setValue(w, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(w) {
              const $ = w.isDisabled.currentValue,
                it = 0 !== $ && (0, s.D6c)($);
              hr.then(() => {
                it && !this.control.disabled
                  ? this.control.disable()
                  : !it && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(w) {
              return this._parent
                ? (function rt(T, I) {
                    return [...I.path, T];
                  })(w, this._parent)
                : [w];
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(
                s.Y36(pt, 9),
                s.Y36(_t, 10),
                s.Y36(lt, 10),
                s.Y36(ue, 10),
                s.Y36(s.sBO, 8),
                s.Y36(Z, 8),
              );
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  '',
                  'ngModel',
                  '',
                  3,
                  'formControlName',
                  '',
                  3,
                  'formControl',
                  '',
                ],
              ],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [s._Bn([Li]), s.qOj, s.TTD],
            })),
            T
          );
        })(),
        Hn = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', ''],
              ],
              hostAttrs: ['novalidate', ''],
            })),
            T
          );
        })(),
        gi = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({})),
            T
          );
        })();
      const Ke = new s.OlP('NgModelWithFormControlWarning'),
        Tt = { provide: Wt, useExisting: (0, s.Gpc)(() => It) };
      let It = (() => {
        class T extends Wt {
          set isDisabled(w) {}
          constructor(w, $, it, an, si) {
            super(),
              (this._ngModelWarningConfig = an),
              (this.callSetDisabledState = si),
              (this.update = new s.vpe()),
              (this._ngModelWarningSent = !1),
              this._setValidators(w),
              this._setAsyncValidators($),
              (this.valueAccessor = zt(0, it));
          }
          ngOnChanges(w) {
            if (this._isControlChanged(w)) {
              const $ = w.form.previousValue;
              $ && qt($, this, !1),
                Bt(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Vi(w, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && qt(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(w) {
            (this.viewModel = w), this.update.emit(w);
          }
          _isControlChanged(w) {
            return w.hasOwnProperty('form');
          }
        }
        return (
          (T._ngModelWarningSentOnce = !1),
          (T.ɵfac = function (w) {
            return new (w || T)(
              s.Y36(_t, 10),
              s.Y36(lt, 10),
              s.Y36(ue, 10),
              s.Y36(Ke, 8),
              s.Y36(Z, 8),
            );
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [s._Bn([Tt]), s.qOj, s.TTD],
          })),
          T
        );
      })();
      const hn = { provide: pt, useExisting: (0, s.Gpc)(() => bn) };
      let bn = (() => {
          class T extends pt {
            constructor(w, $, it) {
              super(),
                (this.callSetDisabledState = it),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new s.vpe()),
                this._setValidators(w),
                this._setAsyncValidators($);
            }
            ngOnChanges(w) {
              this._checkFormPresent(),
                w.hasOwnProperty('form') &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (yi(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(w) {
              const $ = this.form.get(w.path);
              return (
                Bt($, w, this.callSetDisabledState),
                $.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(w),
                $
              );
            }
            getControl(w) {
              return this.form.get(w.path);
            }
            removeControl(w) {
              qt(w.control || null, w, !1),
                (function un(T, I) {
                  const w = T.indexOf(I);
                  w > -1 && T.splice(w, 1);
                })(this.directives, w);
            }
            addFormGroup(w) {
              this._setUpFormContainer(w);
            }
            removeFormGroup(w) {
              this._cleanUpFormContainer(w);
            }
            getFormGroup(w) {
              return this.form.get(w.path);
            }
            addFormArray(w) {
              this._setUpFormContainer(w);
            }
            removeFormArray(w) {
              this._cleanUpFormContainer(w);
            }
            getFormArray(w) {
              return this.form.get(w.path);
            }
            updateModel(w, $) {
              this.form.get(w.path).setValue($);
            }
            onSubmit(w) {
              return (
                (this.submitted = !0),
                di(this.form, this.directives),
                this.ngSubmit.emit(w),
                'dialog' === w?.target?.method
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(w) {
              this.form.reset(w), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach(w => {
                const $ = w.control,
                  it = this.form.get(w.path);
                $ !== it &&
                  (qt($ || null, w),
                  (T => T instanceof Ti)(it) &&
                    (Bt(it, w, this.callSetDisabledState), (w.control = it)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(w) {
              const $ = this.form.get(w.path);
              jt($, w), $.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(w) {
              if (this.form) {
                const $ = this.form.get(w.path);
                $ &&
                  (function vn(T, I) {
                    return yi(T, I);
                  })($, w) &&
                  $.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              ki(this.form, this), this._oldForm && yi(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(_t, 10), s.Y36(lt, 10), s.Y36(Z, 8));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [['', 'formGroup', '']],
              hostBindings: function (w, $) {
                1 & w &&
                  s.NdJ('submit', function (an) {
                    return $.onSubmit(an);
                  })('reset', function () {
                    return $.onReset();
                  });
              },
              inputs: { form: ['formGroup', 'form'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [s._Bn([hn]), s.qOj, s.TTD],
            })),
            T
          );
        })(),
        ar = (() => {
          class T {
            constructor() {
              this._validator = Yt;
            }
            ngOnChanges(w) {
              if (this.inputName in w) {
                const $ = this.normalizeInput(w[this.inputName].currentValue);
                (this._enabled = this.enabled($)),
                  (this._validator = this._enabled
                    ? this.createValidator($)
                    : Yt),
                  this._onChange && this._onChange();
              }
            }
            validate(w) {
              return this._validator(w);
            }
            registerOnValidatorChange(w) {
              this._onChange = w;
            }
            enabled(w) {
              return null != w;
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵdir = s.lG2({ type: T, features: [s.TTD] })),
            T
          );
        })();
      const uo = { provide: _t, useExisting: (0, s.Gpc)(() => wr), multi: !0 },
        zr = { provide: _t, useExisting: (0, s.Gpc)(() => mr), multi: !0 };
      let wr = (() => {
          class T extends ar {
            constructor() {
              super(...arguments),
                (this.inputName = 'required'),
                (this.normalizeInput = s.D6c),
                (this.createValidator = w => X);
            }
            enabled(w) {
              return w;
            }
          }
          return (
            (T.ɵfac = (function () {
              let I;
              return function ($) {
                return (I || (I = s.n5z(T)))($ || T);
              };
            })()),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  '',
                  'required',
                  '',
                  'formControlName',
                  '',
                  3,
                  'type',
                  'checkbox',
                ],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (w, $) {
                2 & w && s.uIk('required', $._enabled ? '' : null);
              },
              inputs: { required: 'required' },
              features: [s._Bn([uo]), s.qOj],
            })),
            T
          );
        })(),
        mr = (() => {
          class T extends wr {
            constructor() {
              super(...arguments), (this.createValidator = w => Ae);
            }
          }
          return (
            (T.ɵfac = (function () {
              let I;
              return function ($) {
                return (I || (I = s.n5z(T)))($ || T);
              };
            })()),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControlName',
                  '',
                ],
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControl',
                  '',
                ],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (w, $) {
                2 & w && s.uIk('required', $._enabled ? '' : null);
              },
              features: [s._Bn([zr]), s.qOj],
            })),
            T
          );
        })(),
        Gr = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [gi] })),
            T
          );
        })();
      class Mr extends rn {
        constructor(I, w, $) {
          super(F(w), M($, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(I) {
          return this.controls[this._adjustIndex(I)];
        }
        push(I, w = {}) {
          this.controls.push(I),
            this._registerControl(I),
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        insert(I, w, $ = {}) {
          this.controls.splice(I, 0, w),
            this._registerControl(w),
            this.updateValueAndValidity({ emitEvent: $.emitEvent });
        }
        removeAt(I, w = {}) {
          let $ = this._adjustIndex(I);
          $ < 0 && ($ = 0),
            this.controls[$] &&
              this.controls[$]._registerOnCollectionChange(() => {}),
            this.controls.splice($, 1),
            this.updateValueAndValidity({ emitEvent: w.emitEvent });
        }
        setControl(I, w, $ = {}) {
          let it = this._adjustIndex(I);
          it < 0 && (it = 0),
            this.controls[it] &&
              this.controls[it]._registerOnCollectionChange(() => {}),
            this.controls.splice(it, 1),
            w && (this.controls.splice(it, 0, w), this._registerControl(w)),
            this.updateValueAndValidity({ emitEvent: $.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(I, w = {}) {
          St(this, !1, I),
            I.forEach(($, it) => {
              Xe(this, !1, it),
                this.at(it).setValue($, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (I.forEach(($, it) => {
              this.at(it) &&
                this.at(it).patchValue($, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = [], w = {}) {
          this._forEachChild(($, it) => {
            $.reset(I[it], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this.controls.map(I => I.getRawValue());
        }
        clear(I = {}) {
          this.controls.length < 1 ||
            (this._forEachChild(w => w._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: I.emitEvent }));
        }
        _adjustIndex(I) {
          return I < 0 ? I + this.length : I;
        }
        _syncPendingControls() {
          let I = this.controls.reduce(
            (w, $) => !!$._syncPendingControls() || w,
            !1,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          this.controls.forEach((w, $) => {
            I(w, $);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter(I => I.enabled || this.disabled)
            .map(I => I.value);
        }
        _anyControls(I) {
          return this.controls.some(w => w.enabled && I(w));
        }
        _setUpControls() {
          this._forEachChild(I => this._registerControl(I));
        }
        _allControlsDisabled() {
          for (const I of this.controls) if (I.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(I) {
          I.setParent(this),
            I._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(I) {
          return this.at(I) ?? null;
        }
      }
      function Hi(T) {
        return (
          !!T &&
          (void 0 !== T.asyncValidators ||
            void 0 !== T.validators ||
            void 0 !== T.updateOn)
        );
      }
      let to = (() => {
          class T {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const w = new T();
              return (w.useNonNullable = !0), w;
            }
            group(w, $ = null) {
              const it = this._reduceControls(w);
              let an = {};
              return (
                Hi($)
                  ? (an = $)
                  : null !== $ &&
                    ((an.validators = $.validator),
                    (an.asyncValidators = $.asyncValidator)),
                new Rt(it, an)
              );
            }
            record(w, $ = null) {
              const it = this._reduceControls(w);
              return new Ie(it, $);
            }
            control(w, $, it) {
              let an = {};
              return this.useNonNullable
                ? (Hi($)
                    ? (an = $)
                    : ((an.validators = $), (an.asyncValidators = it)),
                  new Ti(w, { ...an, nonNullable: !0 }))
                : new Ti(w, $, it);
            }
            array(w, $, it) {
              const an = w.map(si => this._createControl(si));
              return new Mr(an, $, it);
            }
            _reduceControls(w) {
              const $ = {};
              return (
                Object.keys(w).forEach(it => {
                  $[it] = this._createControl(w[it]);
                }),
                $
              );
            }
            _createControl(w) {
              return w instanceof Ti || w instanceof rn
                ? w
                : Array.isArray(w)
                ? this.control(
                    w[0],
                    w.length > 1 ? w[1] : null,
                    w.length > 2 ? w[2] : null,
                  )
                : this.control(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵprov = s.Yz7({
              token: T,
              factory: T.ɵfac,
              providedIn: 'root',
            })),
            T
          );
        })(),
        _n = (() => {
          class T {
            static withConfig(w) {
              return {
                ngModule: T,
                providers: [
                  { provide: Z, useValue: w.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [Gr] })),
            T
          );
        })(),
        gr = (() => {
          class T {
            static withConfig(w) {
              return {
                ngModule: T,
                providers: [
                  {
                    provide: Ke,
                    useValue: w.warnOnNgModelWithFormControl ?? 'always',
                  },
                  { provide: Z, useValue: w.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [Gr] })),
            T
          );
        })();
    },
    4859: (Pt, Re, D) => {
      D.d(Re, {
        RK: () => Ue,
        cs: () => Mt,
        lW: () => Ae,
        nh: () => $e,
        ot: () => Pe,
      });
      var s = D(3353),
        x = D(4650),
        L = D(2687),
        ne = D(3238),
        te = D(1281);
      const de = ['mat-button', ''],
        ve = [
          [
            ['', 8, 'material-icons', 3, 'iconPositionEnd', ''],
            ['mat-icon', 3, 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 3, 'iconPositionEnd', ''],
          ],
          '*',
          [
            ['', 'iconPositionEnd', '', 8, 'material-icons'],
            ['mat-icon', 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 'iconPositionEnd', ''],
          ],
        ],
        ue = [
          '.material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])',
          '*',
          '.material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]',
        ],
        fe = ['mat-fab', ''],
        re = ['mat-mini-fab', ''],
        He = ['mat-icon-button', ''],
        ct = ['*'],
        lt = [
          {
            selector: 'mat-button',
            mdcClasses: ['mdc-button', 'mat-mdc-button'],
          },
          {
            selector: 'mat-flat-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--unelevated',
              'mat-mdc-unelevated-button',
            ],
          },
          {
            selector: 'mat-raised-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--raised',
              'mat-mdc-raised-button',
            ],
          },
          {
            selector: 'mat-stroked-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--outlined',
              'mat-mdc-outlined-button',
            ],
          },
          { selector: 'mat-fab', mdcClasses: ['mdc-fab', 'mat-mdc-fab'] },
          {
            selector: 'mat-mini-fab',
            mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],
          },
          {
            selector: 'mat-icon-button',
            mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],
          },
        ],
        bt = (0, ne.pj)(
          (0, ne.Id)(
            (0, ne.Kr)(
              class {
                constructor(Le) {
                  this._elementRef = Le;
                }
              },
            ),
          ),
        );
      let W = (() => {
          class Le extends bt {
            constructor(dt, We, Gt, mt) {
              super(dt),
                (this._platform = We),
                (this._ngZone = Gt),
                (this._animationMode = mt),
                (this._focusMonitor = (0, x.f3M)(L.tE)),
                (this._isFab = !1);
              const nn = dt.nativeElement.classList;
              for (const a of lt)
                this._hasHostAttributes(a.selector) &&
                  a.mdcClasses.forEach(ft => {
                    nn.add(ft);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(dt = 'program', We) {
              dt
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    dt,
                    We,
                  )
                : this._elementRef.nativeElement.focus(We);
            }
            _hasHostAttributes(...dt) {
              return dt.some(We =>
                this._elementRef.nativeElement.hasAttribute(We),
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (Le.ɵfac = function (dt) {
              x.$Z();
            }),
            (Le.ɵdir = x.lG2({
              type: Le,
              viewQuery: function (dt, We) {
                if ((1 & dt && x.Gf(ne.wG, 5), 2 & dt)) {
                  let Gt;
                  x.iGM((Gt = x.CRH())) && (We.ripple = Gt.first);
                }
              },
              features: [x.qOj],
            })),
            Le
          );
        })(),
        Ae = (() => {
          class Le extends W {
            constructor(dt, We, Gt, mt) {
              super(dt, We, Gt, mt);
            }
          }
          return (
            (Le.ɵfac = function (dt) {
              return new (dt || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-flat-button', ''],
                ['button', 'mat-stroked-button', ''],
              ],
              hostVars: 7,
              hostBindings: function (dt, We) {
                2 & dt &&
                  (x.uIk('disabled', We.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === We._animationMode,
                  )('mat-unthemed', !We.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: de,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (dt, We) {
                1 & dt &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & dt &&
                    (x.ekj('mdc-button__ripple', !We._isFab)(
                      'mdc-fab__ripple',
                      We._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', We._isRippleDisabled())(
                      'matRippleTrigger',
                      We._elementRef.nativeElement,
                    ));
              },
              dependencies: [ne.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })();
      const ut = new x.OlP('mat-mdc-fab-default-options', {
        providedIn: 'root',
        factory: Ut,
      });
      function Ut() {
        return { color: 'accent' };
      }
      const Et = Ut();
      let Mt = (() => {
          class Le extends W {
            get extended() {
              return this._extended;
            }
            set extended(dt) {
              this._extended = (0, te.Ig)(dt);
            }
            constructor(dt, We, Gt, mt, nn) {
              super(dt, We, Gt, mt),
                (this._options = nn),
                (this._isFab = !0),
                (this._options = this._options || Et),
                (this.color = this.defaultColor =
                  this._options.color || Et.color);
            }
          }
          return (
            (Le.ɵfac = function (dt) {
              return new (dt || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(ut, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-fab', '']],
              hostVars: 11,
              hostBindings: function (dt, We) {
                2 & dt &&
                  (x.uIk('disabled', We.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === We._animationMode,
                  )('mat-unthemed', !We.color)('mat-mdc-button-base', !0)(
                    'mdc-fab--extended',
                    We.extended,
                  )('mat-mdc-extended-fab', We.extended));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                extended: 'extended',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: fe,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (dt, We) {
                1 & dt &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & dt &&
                    (x.ekj('mdc-button__ripple', !We._isFab)(
                      'mdc-fab__ripple',
                      We._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', We._isRippleDisabled())(
                      'matRippleTrigger',
                      We._elementRef.nativeElement,
                    ));
              },
              dependencies: [ne.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        $e = (() => {
          class Le extends W {
            constructor(dt, We, Gt, mt, nn) {
              super(dt, We, Gt, mt),
                (this._options = nn),
                (this._isFab = !0),
                (this._options = this._options || Et),
                (this.color = this.defaultColor =
                  this._options.color || Et.color);
            }
          }
          return (
            (Le.ɵfac = function (dt) {
              return new (dt || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(ut, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-mini-fab', '']],
              hostVars: 7,
              hostBindings: function (dt, We) {
                2 & dt &&
                  (x.uIk('disabled', We.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === We._animationMode,
                  )('mat-unthemed', !We.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: re,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (dt, We) {
                1 & dt &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & dt &&
                    (x.ekj('mdc-button__ripple', !We._isFab)(
                      'mdc-fab__ripple',
                      We._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', We._isRippleDisabled())(
                      'matRippleTrigger',
                      We._elementRef.nativeElement,
                    ));
              },
              dependencies: [ne.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        Ue = (() => {
          class Le extends W {
            constructor(dt, We, Gt, mt) {
              super(dt, We, Gt, mt);
            }
          }
          return (
            (Le.ɵfac = function (dt) {
              return new (dt || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-icon-button', '']],
              hostVars: 7,
              hostBindings: function (dt, We) {
                2 & dt &&
                  (x.uIk('disabled', We.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === We._animationMode,
                  )('mat-unthemed', !We.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: He,
              ngContentSelectors: ct,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  'mat-mdc-button-persistent-ripple',
                  'mdc-icon-button__ripple',
                ],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (dt, We) {
                1 & dt &&
                  (x.F$t(),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x._UZ(2, 'span', 1)(3, 'span', 2)(4, 'span', 3)),
                  2 & dt &&
                    (x.xp6(3),
                    x.Q6J('matRippleDisabled', We._isRippleDisabled())(
                      'matRippleCentered',
                      !0,
                    )('matRippleTrigger', We._elementRef.nativeElement));
              },
              dependencies: [ne.wG],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        Pe = (() => {
          class Le {}
          return (
            (Le.ɵfac = function (dt) {
              return new (dt || Le)();
            }),
            (Le.ɵmod = x.oAB({ type: Le })),
            (Le.ɵinj = x.cJS({ imports: [ne.BQ, ne.si, ne.BQ] })),
            Le
          );
        })();
    },
    3238: (Pt, Re, D) => {
      D.d(Re, {
        _A: () => Ue,
        rD: () => nn,
        sG: () => Ce,
        Ad: () => ze,
        K7: () => pe,
        HF: () => H,
        BQ: () => ie,
        XK: () => Gt,
        ey: () => Oe,
        Ng: () => At,
        wG: () => Me,
        si: () => je,
        hu: () => mt,
        CB: () => yt,
        jH: () => Je,
        pj: () => Ut,
        Kr: () => Et,
        Id: () => ut,
        FD: () => Mt,
        sb: () => Yt,
      });
      var s = D(4650),
        x = D(2687),
        L = D(445),
        te = D(6895),
        de = D(3353),
        ve = D(1281),
        ue = D(7579),
        ce = D(9521);
      const re = ['text'];
      function Ne(Te, F) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 6), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('state', b.selected ? 'checked' : 'unchecked')(
            'disabled',
            b.disabled,
          );
        }
      }
      function He(Te, F) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 7), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('disabled', b.disabled);
        }
      }
      function ct(Te, F) {
        if ((1 & Te && (s.TgZ(0, 'span', 8), s._uU(1), s.qZA()), 2 & Te)) {
          const b = s.oxw();
          s.xp6(1), s.hij('(', b.group.label, ')');
        }
      }
      const vt = [[['mat-icon']], '*'],
        Be = ['mat-icon', '*'],
        se = new s.OlP('mat-sanity-checks', {
          providedIn: 'root',
          factory: function W() {
            return !0;
          },
        });
      let ie = (() => {
        class Te {
          constructor(b, M, G) {
            (this._sanityChecks = M),
              (this._document = G),
              (this._hasDoneGlobalChecks = !1),
              b._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(b) {
            return (
              !(0, de.Oy)() &&
              ('boolean' == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[b])
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG(x.qm), s.LFG(se, 8), s.LFG(te.K0));
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [L.vT, L.vT] })),
          Te
        );
      })();
      function ut(Te) {
        return class extends Te {
          get disabled() {
            return this._disabled;
          }
          set disabled(F) {
            this._disabled = (0, ve.Ig)(F);
          }
          constructor(...F) {
            super(...F), (this._disabled = !1);
          }
        };
      }
      function Ut(Te, F) {
        return class extends Te {
          get color() {
            return this._color;
          }
          set color(b) {
            const M = b || this.defaultColor;
            M !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`,
                ),
              M && this._elementRef.nativeElement.classList.add(`mat-${M}`),
              (this._color = M));
          }
          constructor(...b) {
            super(...b), (this.defaultColor = F), (this.color = F);
          }
        };
      }
      function Et(Te) {
        return class extends Te {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(F) {
            this._disableRipple = (0, ve.Ig)(F);
          }
          constructor(...F) {
            super(...F), (this._disableRipple = !1);
          }
        };
      }
      function Yt(Te, F = 0) {
        return class extends Te {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(b) {
            this._tabIndex = null != b ? (0, ve.su)(b) : this.defaultTabIndex;
          }
          constructor(...b) {
            super(...b), (this._tabIndex = F), (this.defaultTabIndex = F);
          }
        };
      }
      function Mt(Te) {
        return class extends Te {
          updateErrorState() {
            const F = this.errorState,
              Q = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm,
              );
            Q !== F && ((this.errorState = Q), this.stateChanges.next());
          }
          constructor(...F) {
            super(...F), (this.errorState = !1);
          }
        };
      }
      const ze = new s.OlP('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function be() {
          return (0, s.f3M)(s.soG);
        },
      });
      class Ue {
        constructor() {
          (this._localeChanges = new ue.x()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(F) {
          return this.isDateInstance(F) && this.isValid(F) ? F : null;
        }
        deserialize(F) {
          return null == F || (this.isDateInstance(F) && this.isValid(F))
            ? F
            : this.invalid();
        }
        setLocale(F) {
          (this.locale = F), this._localeChanges.next();
        }
        compareDate(F, b) {
          return (
            this.getYear(F) - this.getYear(b) ||
            this.getMonth(F) - this.getMonth(b) ||
            this.getDate(F) - this.getDate(b)
          );
        }
        sameDate(F, b) {
          if (F && b) {
            let M = this.isValid(F),
              G = this.isValid(b);
            return M && G ? !this.compareDate(F, b) : M == G;
          }
          return F == b;
        }
        clampDate(F, b, M) {
          return b && this.compareDate(F, b) < 0
            ? b
            : M && this.compareDate(F, M) > 0
            ? M
            : F;
        }
      }
      const Ce = new s.OlP('mat-date-formats'),
        Pe =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function Le(Te, F) {
        const b = Array(Te);
        for (let M = 0; M < Te; M++) b[M] = F(M);
        return b;
      }
      let Ye = (() => {
        class Te extends Ue {
          constructor(b, M) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(b);
          }
          getYear(b) {
            return b.getFullYear();
          }
          getMonth(b) {
            return b.getMonth();
          }
          getDate(b) {
            return b.getDate();
          }
          getDayOfWeek(b) {
            return b.getDay();
          }
          getMonthNames(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              month: b,
              timeZone: 'utc',
            });
            return Le(12, G => this._format(M, new Date(2017, G, 1)));
          }
          getDateNames() {
            const b = new Intl.DateTimeFormat(this.locale, {
              day: 'numeric',
              timeZone: 'utc',
            });
            return Le(31, M => this._format(b, new Date(2017, 0, M + 1)));
          }
          getDayOfWeekNames(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              weekday: b,
              timeZone: 'utc',
            });
            return Le(7, G => this._format(M, new Date(2017, 0, G + 1)));
          }
          getYearName(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              year: 'numeric',
              timeZone: 'utc',
            });
            return this._format(M, b);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(b) {
            return this.getDate(
              this._createDateWithOverflow(
                this.getYear(b),
                this.getMonth(b) + 1,
                0,
              ),
            );
          }
          clone(b) {
            return new Date(b.getTime());
          }
          createDate(b, M, G) {
            let Q = this._createDateWithOverflow(b, M, G);
            return Q.getMonth(), Q;
          }
          today() {
            return new Date();
          }
          parse(b, M) {
            return 'number' == typeof b
              ? new Date(b)
              : b
              ? new Date(Date.parse(b))
              : null;
          }
          format(b, M) {
            if (!this.isValid(b))
              throw Error('NativeDateAdapter: Cannot format invalid date.');
            const G = new Intl.DateTimeFormat(this.locale, {
              ...M,
              timeZone: 'utc',
            });
            return this._format(G, b);
          }
          addCalendarYears(b, M) {
            return this.addCalendarMonths(b, 12 * M);
          }
          addCalendarMonths(b, M) {
            let G = this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b) + M,
              this.getDate(b),
            );
            return (
              this.getMonth(G) != (((this.getMonth(b) + M) % 12) + 12) % 12 &&
                (G = this._createDateWithOverflow(
                  this.getYear(G),
                  this.getMonth(G),
                  0,
                )),
              G
            );
          }
          addCalendarDays(b, M) {
            return this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b),
              this.getDate(b) + M,
            );
          }
          toIso8601(b) {
            return [
              b.getUTCFullYear(),
              this._2digit(b.getUTCMonth() + 1),
              this._2digit(b.getUTCDate()),
            ].join('-');
          }
          deserialize(b) {
            if ('string' == typeof b) {
              if (!b) return null;
              if (Pe.test(b)) {
                let M = new Date(b);
                if (this.isValid(M)) return M;
              }
            }
            return super.deserialize(b);
          }
          isDateInstance(b) {
            return b instanceof Date;
          }
          isValid(b) {
            return !isNaN(b.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(b, M, G) {
            const Q = new Date();
            return Q.setFullYear(b, M, G), Q.setHours(0, 0, 0, 0), Q;
          }
          _2digit(b) {
            return ('00' + b).slice(-2);
          }
          _format(b, M) {
            const G = new Date();
            return (
              G.setUTCFullYear(M.getFullYear(), M.getMonth(), M.getDate()),
              G.setUTCHours(
                M.getHours(),
                M.getMinutes(),
                M.getSeconds(),
                M.getMilliseconds(),
              ),
              b.format(G)
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG(ze, 8), s.LFG(de.t4));
          }),
          (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
          Te
        );
      })();
      const dt = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let We = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ providers: [{ provide: Ue, useClass: Ye }] })),
            Te
          );
        })(),
        Gt = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({
              providers: [{ provide: Ce, useValue: dt }],
              imports: [We],
            })),
            Te
          );
        })(),
        mt = (() => {
          class Te {
            isErrorState(b, M) {
              return !!(b && b.invalid && (b.dirty || (M && M.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
            Te
          );
        })(),
        nn = (() => {
          class Te {
            isErrorState(b, M) {
              return !!(b && b.invalid && (b.touched || (M && M.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({
              token: Te,
              factory: Te.ɵfac,
              providedIn: 'root',
            })),
            Te
          );
        })();
      class pt {
        constructor(F, b, M, G = !1) {
          (this._renderer = F),
            (this.element = b),
            (this.config = M),
            (this._animationForciblyDisabledThroughCss = G),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const Wt = (0, de.i$)({ passive: !0, capture: !0 });
      class pn {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = F => {
              const b = (0, de.sA)(F);
              b &&
                this._events.get(F.type)?.forEach((M, G) => {
                  (G === b || G.contains(b)) &&
                    M.forEach(Q => Q.handleEvent(F));
                });
            });
        }
        addHandler(F, b, M, G) {
          const Q = this._events.get(b);
          if (Q) {
            const Xe = Q.get(M);
            Xe ? Xe.add(G) : Q.set(M, new Set([G]));
          } else
            this._events.set(b, new Map([[M, new Set([G])]])),
              F.runOutsideAngular(() => {
                document.addEventListener(b, this._delegateEventHandler, Wt);
              });
        }
        removeHandler(F, b, M) {
          const G = this._events.get(F);
          if (!G) return;
          const Q = G.get(b);
          Q &&
            (Q.delete(M),
            0 === Q.size && G.delete(b),
            0 === G.size &&
              (this._events.delete(F),
              document.removeEventListener(F, this._delegateEventHandler, Wt)));
        }
      }
      const Sn = { enterDuration: 225, exitDuration: 150 },
        dn = (0, de.i$)({ passive: !0, capture: !0 }),
        kt = ['mousedown', 'touchstart'],
        En = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class at {
        constructor(F, b, M, G) {
          (this._target = F),
            (this._ngZone = b),
            (this._platform = G),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            G.isBrowser && (this._containerElement = (0, ve.fI)(M));
        }
        fadeInRipple(F, b, M = {}) {
          const G = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            Q = { ...Sn, ...M.animation };
          M.centered &&
            ((F = G.left + G.width / 2), (b = G.top + G.height / 2));
          const Xe =
              M.radius ||
              (function Y(Te, F, b) {
                const M = Math.max(
                    Math.abs(Te - b.left),
                    Math.abs(Te - b.right),
                  ),
                  G = Math.max(Math.abs(F - b.top), Math.abs(F - b.bottom));
                return Math.sqrt(M * M + G * G);
              })(F, b, G),
            St = F - G.left,
            rn = b - G.top,
            Rt = Q.enterDuration,
            tt = document.createElement('div');
          tt.classList.add('mat-ripple-element'),
            (tt.style.left = St - Xe + 'px'),
            (tt.style.top = rn - Xe + 'px'),
            (tt.style.height = 2 * Xe + 'px'),
            (tt.style.width = 2 * Xe + 'px'),
            null != M.color && (tt.style.backgroundColor = M.color),
            (tt.style.transitionDuration = `${Rt}ms`),
            this._containerElement.appendChild(tt);
          const Kt = window.getComputedStyle(tt),
            xe = Kt.transitionDuration,
            Z =
              'none' === Kt.transitionProperty ||
              '0s' === xe ||
              '0s, 0s' === xe ||
              (0 === G.width && 0 === G.height),
            we = new pt(this, tt, M, Z);
          (tt.style.transform = 'scale3d(1, 1, 1)'),
            (we.state = 0),
            M.persistent || (this._mostRecentTransientRipple = we);
          let rt = null;
          return (
            !Z &&
              (Rt || Q.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const Bt = () => this._finishRippleTransition(we),
                  qt = () => this._destroyRipple(we);
                tt.addEventListener('transitionend', Bt),
                  tt.addEventListener('transitioncancel', qt),
                  (rt = { onTransitionEnd: Bt, onTransitionCancel: qt });
              }),
            this._activeRipples.set(we, rt),
            (Z || !Rt) && this._finishRippleTransition(we),
            we
          );
        }
        fadeOutRipple(F) {
          if (2 === F.state || 3 === F.state) return;
          const b = F.element,
            M = { ...Sn, ...F.config.animation };
          (b.style.transitionDuration = `${M.exitDuration}ms`),
            (b.style.opacity = '0'),
            (F.state = 2),
            (F._animationForciblyDisabledThroughCss || !M.exitDuration) &&
              this._finishRippleTransition(F);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach(F => F.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach(F => {
            F.config.persistent || F.fadeOut();
          });
        }
        setupTriggerEvents(F) {
          const b = (0, ve.fI)(F);
          !this._platform.isBrowser ||
            !b ||
            b === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = b),
            kt.forEach(M => {
              at._eventManager.addHandler(this._ngZone, M, b, this);
            }));
        }
        handleEvent(F) {
          'mousedown' === F.type
            ? this._onMousedown(F)
            : 'touchstart' === F.type
            ? this._onTouchStart(F)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                En.forEach(b => {
                  this._triggerElement.addEventListener(b, this, dn);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(F) {
          0 === F.state
            ? this._startFadeOutTransition(F)
            : 2 === F.state && this._destroyRipple(F);
        }
        _startFadeOutTransition(F) {
          const b = F === this._mostRecentTransientRipple,
            { persistent: M } = F.config;
          (F.state = 1), !M && (!b || !this._isPointerDown) && F.fadeOut();
        }
        _destroyRipple(F) {
          const b = this._activeRipples.get(F) ?? null;
          this._activeRipples.delete(F),
            this._activeRipples.size || (this._containerRect = null),
            F === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (F.state = 3),
            null !== b &&
              (F.element.removeEventListener(
                'transitionend',
                b.onTransitionEnd,
              ),
              F.element.removeEventListener(
                'transitioncancel',
                b.onTransitionCancel,
              )),
            F.element.remove();
        }
        _onMousedown(F) {
          const b = (0, x.X6)(F),
            M =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !b &&
            !M &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(F.clientX, F.clientY, this._target.rippleConfig));
        }
        _onTouchStart(F) {
          if (!this._target.rippleDisabled && !(0, x.yG)(F)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const b = F.changedTouches;
            for (let M = 0; M < b.length; M++)
              this.fadeInRipple(
                b[M].clientX,
                b[M].clientY,
                this._target.rippleConfig,
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach(F => {
              !F.config.persistent &&
                (1 === F.state ||
                  (F.config.terminateOnPointerUp && 0 === F.state)) &&
                F.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const F = this._triggerElement;
          F &&
            (kt.forEach(b => at._eventManager.removeHandler(b, F, this)),
            this._pointerUpEventsRegistered &&
              En.forEach(b => F.removeEventListener(b, this, dn)));
        }
      }
      at._eventManager = new pn();
      const ee = new s.OlP('mat-ripple-global-options');
      let Me = (() => {
          class Te {
            get disabled() {
              return this._disabled;
            }
            set disabled(b) {
              b && this.fadeOutAllNonPersistent(),
                (this._disabled = b),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(b) {
              (this._trigger = b), this._setupTriggerEventsIfEnabled();
            }
            constructor(b, M, G, Q, Xe) {
              (this._elementRef = b),
                (this._animationMode = Xe),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = Q || {}),
                (this._rippleRenderer = new at(this, M, b, G));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...('NoopAnimations' === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(b, M = 0, G) {
              return 'number' == typeof b
                ? this._rippleRenderer.fadeInRipple(b, M, {
                    ...this.rippleConfig,
                    ...G,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...b,
                  });
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(de.t4),
                s.Y36(ee, 8),
                s.Y36(s.QbO, 8),
              );
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (b, M) {
                2 & b && s.ekj('mat-ripple-unbounded', M.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            Te
          );
        })(),
        je = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [ie, ie] })),
            Te
          );
        })(),
        De = (() => {
          class Te {
            constructor(b) {
              (this._animationMode = b),
                (this.state = 'unchecked'),
                (this.disabled = !1),
                (this.appearance = 'full');
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(s.Y36(s.QbO, 8));
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 12,
              hostBindings: function (b, M) {
                2 & b &&
                  s.ekj(
                    'mat-pseudo-checkbox-indeterminate',
                    'indeterminate' === M.state,
                  )('mat-pseudo-checkbox-checked', 'checked' === M.state)(
                    'mat-pseudo-checkbox-disabled',
                    M.disabled,
                  )('mat-pseudo-checkbox-minimal', 'minimal' === M.appearance)(
                    'mat-pseudo-checkbox-full',
                    'full' === M.appearance,
                  )(
                    '_mat-animation-noopable',
                    'NoopAnimations' === M._animationMode,
                  );
              },
              inputs: {
                state: 'state',
                disabled: 'disabled',
                appearance: 'appearance',
              },
              decls: 0,
              vars: 0,
              template: function (b, M) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })(),
        ye = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [ie] })),
            Te
          );
        })();
      const H = new s.OlP('MAT_OPTION_PARENT_COMPONENT'),
        pe = new s.OlP('MatOptgroup');
      let wt = 0;
      class Ot {
        constructor(F, b = !1) {
          (this.source = F), (this.isUserInput = b);
        }
      }
      let Dn = (() => {
          class Te {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(b) {
              this._disabled = (0, ve.Ig)(b);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(b, M, G, Q) {
              (this._element = b),
                (this._changeDetectorRef = M),
                (this._parent = G),
                (this.group = Q),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + wt++),
                (this.onSelectionChange = new s.vpe()),
                (this._stateChanges = new ue.x());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(b, M) {
              const G = this._getHostElement();
              'function' == typeof G.focus && G.focus(M);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(b) {
              (b.keyCode === ce.K5 || b.keyCode === ce.L_) &&
                !(0, ce.Vb)(b) &&
                (this._selectViaInteraction(), b.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const b = this.viewValue;
                b !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = b));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(b = !1) {
              this.onSelectionChange.emit(new Ot(this, b));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              s.$Z();
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              viewQuery: function (b, M) {
                if ((1 & b && s.Gf(re, 7), 2 & b)) {
                  let G;
                  s.iGM((G = s.CRH())) && (M._text = G.first);
                }
              },
              inputs: { value: 'value', id: 'id', disabled: 'disabled' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            Te
          );
        })(),
        Oe = (() => {
          class Te extends Dn {
            constructor(b, M, G, Q) {
              super(b, M, G, Q);
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(H, 8),
                s.Y36(pe, 8),
              );
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-option']],
              hostAttrs: [
                'role',
                'option',
                1,
                'mat-mdc-option',
                'mdc-list-item',
              ],
              hostVars: 11,
              hostBindings: function (b, M) {
                1 & b &&
                  s.NdJ('click', function () {
                    return M._selectViaInteraction();
                  })('keydown', function (Q) {
                    return M._handleKeydown(Q);
                  }),
                  2 & b &&
                    (s.Ikx('id', M.id),
                    s.uIk('aria-selected', M.selected)(
                      'aria-disabled',
                      M.disabled.toString(),
                    ),
                    s.ekj('mdc-list-item--selected', M.selected)(
                      'mat-mdc-option-multiple',
                      M.multiple,
                    )('mat-mdc-option-active', M.active)(
                      'mdc-list-item--disabled',
                      M.disabled,
                    ));
              },
              exportAs: ['matOption'],
              features: [s.qOj],
              ngContentSelectors: Be,
              decls: 8,
              vars: 5,
              consts: [
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'state',
                  'disabled',
                  4,
                  'ngIf',
                ],
                [1, 'mdc-list-item__primary-text'],
                ['text', ''],
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  3,
                  'disabled',
                  4,
                  'ngIf',
                ],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-option-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                ],
                [1, 'mat-mdc-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  1,
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'disabled',
                ],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (b, M) {
                1 & b &&
                  (s.F$t(vt),
                  s.YNc(0, Ne, 1, 2, 'mat-pseudo-checkbox', 0),
                  s.Hsn(1),
                  s.TgZ(2, 'span', 1, 2),
                  s.Hsn(4, 1),
                  s.qZA(),
                  s.YNc(5, He, 1, 1, 'mat-pseudo-checkbox', 3),
                  s.YNc(6, ct, 2, 1, 'span', 4),
                  s._UZ(7, 'div', 5)),
                  2 & b &&
                    (s.Q6J('ngIf', M.multiple),
                    s.xp6(5),
                    s.Q6J(
                      'ngIf',
                      !M.multiple &&
                        M.selected &&
                        !M.hideSingleSelectionIndicator,
                    ),
                    s.xp6(1),
                    s.Q6J('ngIf', M.group && M.group._inert),
                    s.xp6(1),
                    s.Q6J('matRippleTrigger', M._getHostElement())(
                      'matRippleDisabled',
                      M.disabled || M.disableRipple,
                    ));
              },
              dependencies: [Me, te.O5, De],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })();
      function yt(Te, F, b) {
        if (b.length) {
          let M = F.toArray(),
            G = b.toArray(),
            Q = 0;
          for (let Xe = 0; Xe < Te + 1; Xe++)
            M[Xe].group && M[Xe].group === G[Q] && Q++;
          return Q;
        }
        return 0;
      }
      function Je(Te, F, b, M) {
        return Te < b ? Te : Te + F > b + M ? Math.max(0, Te - M + F) : b;
      }
      let At = (() => {
        class Te {}
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)();
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [je, te.ez, ie, ye] })),
          Te
        );
      })();
    },
    9549: (Pt, Re, D) => {
      D.d(Re, {
        Eo: () => Tn,
        G_: () => at,
        KE: () => H,
        R9: () => a,
        hX: () => Ce,
        lN: () => ke,
        o2: () => Y,
      });
      var s = D(4650),
        x = D(445),
        L = D(3353),
        ne = D(7579),
        te = D(6451),
        de = D(2722),
        ve = D(6895),
        ue = D(1281),
        ce = D(7340),
        le = D(9643),
        fe = D(3238);
      const re = ['matFormFieldNotchedOutline', ''],
        Ne = ['*'],
        He = ['textField'],
        ct = ['iconPrefixContainer'],
        vt = ['textPrefixContainer'];
      function Be(he, ge) {
        1 & he && s._UZ(0, 'span', 19);
      }
      function _t(he, ge) {
        if (1 & he) {
          const pe = s.EpF();
          s.TgZ(0, 'label', 17),
            s.NdJ('cdkObserveContent', function () {
              s.CHM(pe);
              const wt = s.oxw(2);
              return s.KtG(wt._refreshOutlineNotchWidth());
            }),
            s.Hsn(1, 1),
            s.YNc(2, Be, 1, 0, 'span', 18),
            s.qZA();
        }
        if (2 & he) {
          const pe = s.oxw(2);
          s.Q6J('floating', pe._shouldLabelFloat())(
            'cdkObserveContentDisabled',
            !pe._hasOutline(),
          )('id', pe._labelId),
            s.uIk('for', pe._control.id)('aria-owns', pe._control.id),
            s.xp6(2),
            s.Q6J('ngIf', !pe.hideRequiredMarker && pe._control.required);
        }
      }
      function lt(he, ge) {
        if ((1 & he && s.YNc(0, _t, 3, 6, 'label', 16), 2 & he)) {
          const pe = s.oxw();
          s.Q6J('ngIf', pe._hasFloatingLabel());
        }
      }
      function bt(he, ge) {
        1 & he && s._UZ(0, 'div', 20);
      }
      function W(he, ge) {}
      function se(he, ge) {
        if ((1 & he && s.YNc(0, W, 0, 0, 'ng-template', 22), 2 & he)) {
          s.oxw(2);
          const pe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', pe);
        }
      }
      function ie(he, ge) {
        if (
          (1 & he &&
            (s.TgZ(0, 'div', 21),
            s.YNc(1, se, 1, 1, 'ng-template', 9),
            s.qZA()),
          2 & he)
        ) {
          const pe = s.oxw();
          s.Q6J('matFormFieldNotchedOutlineOpen', pe._shouldLabelFloat())(
            'matFormFieldNotchedOutlineLabelWidth',
            pe._labelWidth,
          ),
            s.xp6(1),
            s.Q6J('ngIf', !pe._forceDisplayInfixLabel());
        }
      }
      function X(he, ge) {
        1 & he && (s.TgZ(0, 'div', 23, 24), s.Hsn(2, 2), s.qZA());
      }
      function Ae(he, ge) {
        1 & he && (s.TgZ(0, 'div', 25, 26), s.Hsn(2, 3), s.qZA());
      }
      function Qe(he, ge) {}
      function ut(he, ge) {
        if ((1 & he && s.YNc(0, Qe, 0, 0, 'ng-template', 22), 2 & he)) {
          s.oxw();
          const pe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', pe);
        }
      }
      function Ut(he, ge) {
        1 & he && (s.TgZ(0, 'div', 27), s.Hsn(1, 4), s.qZA());
      }
      function Et(he, ge) {
        1 & he && (s.TgZ(0, 'div', 28), s.Hsn(1, 5), s.qZA());
      }
      function Yt(he, ge) {
        1 & he && s._UZ(0, 'div', 29);
      }
      function Mt(he, ge) {
        if ((1 & he && (s.TgZ(0, 'div', 30), s.Hsn(1, 6), s.qZA()), 2 & he)) {
          const pe = s.oxw();
          s.Q6J('@transitionMessages', pe._subscriptAnimationState);
        }
      }
      function $e(he, ge) {
        if ((1 & he && (s.TgZ(0, 'mat-hint', 34), s._uU(1), s.qZA()), 2 & he)) {
          const pe = s.oxw(2);
          s.Q6J('id', pe._hintLabelId), s.xp6(1), s.Oqu(pe.hintLabel);
        }
      }
      function ze(he, ge) {
        if (
          (1 & he &&
            (s.TgZ(0, 'div', 31),
            s.YNc(1, $e, 2, 2, 'mat-hint', 32),
            s.Hsn(2, 7),
            s._UZ(3, 'div', 33),
            s.Hsn(4, 8),
            s.qZA()),
          2 & he)
        ) {
          const pe = s.oxw();
          s.Q6J('@transitionMessages', pe._subscriptAnimationState),
            s.xp6(1),
            s.Q6J('ngIf', pe.hintLabel);
        }
      }
      const be = [
          '*',
          [['mat-label']],
          [
            ['', 'matPrefix', ''],
            ['', 'matIconPrefix', ''],
          ],
          [['', 'matTextPrefix', '']],
          [['', 'matTextSuffix', '']],
          [
            ['', 'matSuffix', ''],
            ['', 'matIconSuffix', ''],
          ],
          [['mat-error'], ['', 'matError', '']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        Ue = [
          '*',
          'mat-label',
          '[matPrefix], [matIconPrefix]',
          '[matTextPrefix]',
          '[matTextSuffix]',
          '[matSuffix], [matIconSuffix]',
          'mat-error, [matError]',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let Ce = (() => {
        class he {}
        return (
          (he.ɵfac = function (pe) {
            return new (pe || he)();
          }),
          (he.ɵdir = s.lG2({ type: he, selectors: [['mat-label']] })),
          he
        );
      })();
      const Le = new s.OlP('MatError');
      let dt = 0,
        We = (() => {
          class he {
            constructor() {
              (this.align = 'start'), (this.id = 'mat-mdc-hint-' + dt++);
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)();
            }),
            (he.ɵdir = s.lG2({
              type: he,
              selectors: [['mat-hint']],
              hostAttrs: [
                1,
                'mat-mdc-form-field-hint',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 4,
              hostBindings: function (pe, nt) {
                2 & pe &&
                  (s.Ikx('id', nt.id),
                  s.uIk('align', null),
                  s.ekj('mat-mdc-form-field-hint-end', 'end' === nt.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            he
          );
        })();
      const Gt = new s.OlP('MatPrefix'),
        nn = new s.OlP('MatSuffix');
      let a = (() => {
          class he {
            constructor() {
              this._isText = !1;
            }
            set _isTextSelector(pe) {
              this._isText = !0;
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)();
            }),
            (he.ɵdir = s.lG2({
              type: he,
              selectors: [
                ['', 'matSuffix', ''],
                ['', 'matIconSuffix', ''],
                ['', 'matTextSuffix', ''],
              ],
              inputs: { _isTextSelector: ['matTextSuffix', '_isTextSelector'] },
              features: [s._Bn([{ provide: nn, useExisting: he }])],
            })),
            he
          );
        })(),
        ft = (() => {
          class he {
            constructor(pe) {
              (this._elementRef = pe), (this.floating = !1);
            }
            getWidth() {
              return (function $t(he) {
                if (null !== he.offsetParent) return he.scrollWidth;
                const pe = he.cloneNode(!0);
                pe.style.setProperty('position', 'absolute'),
                  pe.style.setProperty(
                    'transform',
                    'translate(-9999px, -9999px)',
                  ),
                  document.documentElement.appendChild(pe);
                const nt = pe.scrollWidth;
                return pe.remove(), nt;
              })(this._elementRef.nativeElement);
            }
            get element() {
              return this._elementRef.nativeElement;
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(s.Y36(s.SBq));
            }),
            (he.ɵdir = s.lG2({
              type: he,
              selectors: [['label', 'matFormFieldFloatingLabel', '']],
              hostAttrs: [1, 'mdc-floating-label', 'mat-mdc-floating-label'],
              hostVars: 2,
              hostBindings: function (pe, nt) {
                2 & pe && s.ekj('mdc-floating-label--float-above', nt.floating);
              },
              inputs: { floating: 'floating' },
            })),
            he
          );
        })();
      const et = 'mdc-line-ripple--active',
        pt = 'mdc-line-ripple--deactivating';
      let Wt = (() => {
          class he {
            constructor(pe, nt) {
              (this._elementRef = pe),
                (this._handleTransitionEnd = wt => {
                  const Ot = this._elementRef.nativeElement.classList,
                    Dn = Ot.contains(pt);
                  'opacity' === wt.propertyName && Dn && Ot.remove(et, pt);
                }),
                nt.runOutsideAngular(() => {
                  pe.nativeElement.addEventListener(
                    'transitionend',
                    this._handleTransitionEnd,
                  );
                });
            }
            activate() {
              const pe = this._elementRef.nativeElement.classList;
              pe.remove(pt), pe.add(et);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(pt);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                'transitionend',
                this._handleTransitionEnd,
              );
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (he.ɵdir = s.lG2({
              type: he,
              selectors: [['div', 'matFormFieldLineRipple', '']],
              hostAttrs: [1, 'mdc-line-ripple'],
            })),
            he
          );
        })(),
        pn = (() => {
          class he {
            constructor(pe, nt) {
              (this._elementRef = pe),
                (this._ngZone = nt),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const pe = this._elementRef.nativeElement.querySelector(
                '.mdc-floating-label',
              );
              pe
                ? (this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--upgraded',
                  ),
                  'function' == typeof requestAnimationFrame &&
                    ((pe.style.transitionDuration = '0s'),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (pe.style.transitionDuration = ''),
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--no-label',
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : '0px'
                : null;
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (he.ɵcmp = s.Xpm({
              type: he,
              selectors: [['div', 'matFormFieldNotchedOutline', '']],
              hostAttrs: [1, 'mdc-notched-outline'],
              hostVars: 2,
              hostBindings: function (pe, nt) {
                2 & pe && s.ekj('mdc-notched-outline--notched', nt.open);
              },
              inputs: {
                labelWidth: [
                  'matFormFieldNotchedOutlineLabelWidth',
                  'labelWidth',
                ],
                open: ['matFormFieldNotchedOutlineOpen', 'open'],
              },
              attrs: re,
              ngContentSelectors: Ne,
              decls: 4,
              vars: 2,
              consts: [
                [1, 'mdc-notched-outline__leading'],
                [1, 'mdc-notched-outline__notch'],
                [1, 'mdc-notched-outline__trailing'],
              ],
              template: function (pe, nt) {
                1 & pe &&
                  (s.F$t(),
                  s._UZ(0, 'div', 0),
                  s.TgZ(1, 'div', 1),
                  s.Hsn(2),
                  s.qZA(),
                  s._UZ(3, 'div', 2)),
                  2 & pe && (s.xp6(1), s.Udp('width', nt._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            he
          );
        })();
      const Sn = {
        transitionMessages: (0, ce.X$)('transitionMessages', [
          (0, ce.SB)(
            'enter',
            (0, ce.oB)({ opacity: 1, transform: 'translateY(0%)' }),
          ),
          (0, ce.eR)('void => enter', [
            (0, ce.oB)({ opacity: 0, transform: 'translateY(-5px)' }),
            (0, ce.jt)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Tn = (() => {
        class he {}
        return (
          (he.ɵfac = function (pe) {
            return new (pe || he)();
          }),
          (he.ɵdir = s.lG2({ type: he })),
          he
        );
      })();
      const at = new s.OlP('MatFormField'),
        Y = new s.OlP('MAT_FORM_FIELD_DEFAULT_OPTIONS');
      let ee = 0,
        H = (() => {
          class he {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(pe) {
              this._hideRequiredMarker = (0, ue.Ig)(pe);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || 'auto';
            }
            set floatLabel(pe) {
              pe !== this._floatLabel &&
                ((this._floatLabel = pe),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(pe) {
              const nt = this._appearance;
              (this._appearance = pe || this._defaults?.appearance || 'fill'),
                'outline' === this._appearance &&
                  this._appearance !== nt &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                'fixed'
              );
            }
            set subscriptSizing(pe) {
              this._subscriptSizing =
                pe || this._defaults?.subscriptSizing || 'fixed';
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(pe) {
              (this._hintLabel = pe), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(pe) {
              this._explicitFormFieldControl = pe;
            }
            constructor(pe, nt, wt, Ot, Dn, Oe, yt, Je) {
              (this._elementRef = pe),
                (this._changeDetectorRef = nt),
                (this._ngZone = wt),
                (this._dir = Ot),
                (this._platform = Dn),
                (this._defaults = Oe),
                (this._animationMode = yt),
                (this._document = Je),
                (this._hideRequiredMarker = !1),
                (this.color = 'primary'),
                (this._appearance = 'fill'),
                (this._subscriptSizing = null),
                (this._hintLabel = ''),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = 'mat-mdc-form-field-label-' + ee++),
                (this._hintLabelId = 'mat-mdc-hint-' + ee++),
                (this._subscriptAnimationState = ''),
                (this._labelWidth = 0),
                (this._destroyed = new ne.x()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                Oe &&
                  (Oe.appearance && (this.appearance = Oe.appearance),
                  (this._hideRequiredMarker = Boolean(Oe?.hideRequiredMarker)),
                  Oe.color && (this.color = Oe.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = 'enter'),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = 'always');
            }
            _initializeControl() {
              const pe = this._control;
              pe.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${pe.controlType}`,
                ),
                pe.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                pe.ngControl &&
                  pe.ngControl.valueChanges &&
                  pe.ngControl.valueChanges
                    .pipe((0, de.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                pe => !pe._isText,
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  pe => pe._isText,
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  pe => !pe._isText,
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  pe => pe._isText,
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                (0, te.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes,
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  'mdc-text-field--focused',
                  this._control.focused,
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe((0, de.R)(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe((0, de.R)(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
                  );
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel;
            }
            _hasOutline() {
              return 'outline' === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(pe) {
              const nt = this._control ? this._control.ngControl : null;
              return nt && nt[pe];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? 'error'
                : 'hint';
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let pe = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    pe.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const nt = this._hintChildren
                      ? this._hintChildren.find(Ot => 'start' === Ot.align)
                      : null,
                    wt = this._hintChildren
                      ? this._hintChildren.find(Ot => 'end' === Ot.align)
                      : null;
                  nt
                    ? pe.push(nt.id)
                    : this._hintLabel && pe.push(this._hintLabelId),
                    wt && pe.push(wt.id);
                } else
                  this._errorChildren &&
                    pe.push(...this._errorChildren.map(nt => nt.id));
                this._control.setDescribedByIds(pe);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const pe = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (pe.style.transform = '');
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const nt = this._iconPrefixContainer?.nativeElement,
                wt = this._textPrefixContainer?.nativeElement,
                Ot = nt?.getBoundingClientRect().width ?? 0,
                Dn = wt?.getBoundingClientRect().width ?? 0;
              pe.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                'rtl' === this._dir.value ? '-1' : '1'
              } * (${
                Ot + Dn
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const pe = this._elementRef.nativeElement;
              if (pe.getRootNode) {
                const nt = pe.getRootNode();
                return nt && nt !== pe;
              }
              return document.documentElement.contains(pe);
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(L.t4),
                s.Y36(Y, 8),
                s.Y36(s.QbO, 8),
                s.Y36(ve.K0),
              );
            }),
            (he.ɵcmp = s.Xpm({
              type: he,
              selectors: [['mat-form-field']],
              contentQueries: function (pe, nt, wt) {
                if (
                  (1 & pe &&
                    (s.Suo(wt, Ce, 5),
                    s.Suo(wt, Ce, 7),
                    s.Suo(wt, Tn, 5),
                    s.Suo(wt, Gt, 5),
                    s.Suo(wt, nn, 5),
                    s.Suo(wt, Le, 5),
                    s.Suo(wt, We, 5)),
                  2 & pe)
                ) {
                  let Ot;
                  s.iGM((Ot = s.CRH())) && (nt._labelChildNonStatic = Ot.first),
                    s.iGM((Ot = s.CRH())) && (nt._labelChildStatic = Ot.first),
                    s.iGM((Ot = s.CRH())) && (nt._formFieldControl = Ot.first),
                    s.iGM((Ot = s.CRH())) && (nt._prefixChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (nt._suffixChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (nt._errorChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (nt._hintChildren = Ot);
                }
              },
              viewQuery: function (pe, nt) {
                if (
                  (1 & pe &&
                    (s.Gf(He, 5),
                    s.Gf(ct, 5),
                    s.Gf(vt, 5),
                    s.Gf(ft, 5),
                    s.Gf(pn, 5),
                    s.Gf(Wt, 5)),
                  2 & pe)
                ) {
                  let wt;
                  s.iGM((wt = s.CRH())) && (nt._textField = wt.first),
                    s.iGM((wt = s.CRH())) &&
                      (nt._iconPrefixContainer = wt.first),
                    s.iGM((wt = s.CRH())) &&
                      (nt._textPrefixContainer = wt.first),
                    s.iGM((wt = s.CRH())) && (nt._floatingLabel = wt.first),
                    s.iGM((wt = s.CRH())) && (nt._notchedOutline = wt.first),
                    s.iGM((wt = s.CRH())) && (nt._lineRipple = wt.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-form-field'],
              hostVars: 42,
              hostBindings: function (pe, nt) {
                2 & pe &&
                  s.ekj(
                    'mat-mdc-form-field-label-always-float',
                    nt._shouldAlwaysFloat(),
                  )('mat-mdc-form-field-has-icon-prefix', nt._hasIconPrefix)(
                    'mat-mdc-form-field-has-icon-suffix',
                    nt._hasIconSuffix,
                  )('mat-form-field-invalid', nt._control.errorState)(
                    'mat-form-field-disabled',
                    nt._control.disabled,
                  )('mat-form-field-autofilled', nt._control.autofilled)(
                    'mat-form-field-no-animations',
                    'NoopAnimations' === nt._animationMode,
                  )('mat-form-field-appearance-fill', 'fill' == nt.appearance)(
                    'mat-form-field-appearance-outline',
                    'outline' == nt.appearance,
                  )(
                    'mat-form-field-hide-placeholder',
                    nt._hasFloatingLabel() && !nt._shouldLabelFloat(),
                  )('mat-focused', nt._control.focused)(
                    'mat-primary',
                    'accent' !== nt.color && 'warn' !== nt.color,
                  )('mat-accent', 'accent' === nt.color)(
                    'mat-warn',
                    'warn' === nt.color,
                  )('ng-untouched', nt._shouldForward('untouched'))(
                    'ng-touched',
                    nt._shouldForward('touched'),
                  )('ng-pristine', nt._shouldForward('pristine'))(
                    'ng-dirty',
                    nt._shouldForward('dirty'),
                  )('ng-valid', nt._shouldForward('valid'))(
                    'ng-invalid',
                    nt._shouldForward('invalid'),
                  )('ng-pending', nt._shouldForward('pending'));
              },
              inputs: {
                hideRequiredMarker: 'hideRequiredMarker',
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                subscriptSizing: 'subscriptSizing',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [s._Bn([{ provide: at, useExisting: he }])],
              ngContentSelectors: Ue,
              decls: 18,
              vars: 23,
              consts: [
                ['labelTemplate', ''],
                [1, 'mat-mdc-text-field-wrapper', 'mdc-text-field', 3, 'click'],
                ['textField', ''],
                ['class', 'mat-mdc-form-field-focus-overlay', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-flex'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-form-field-icon-prefix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-prefix', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-infix'],
                [3, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-suffix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-icon-suffix', 4, 'ngIf'],
                ['matFormFieldLineRipple', '', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-form-field-subscript-wrapper',
                  'mat-mdc-form-field-bottom-align',
                  3,
                  'ngSwitch',
                ],
                [
                  'class',
                  'mat-mdc-form-field-error-wrapper',
                  4,
                  'ngSwitchCase',
                ],
                ['class', 'mat-mdc-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                ],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-mdc-form-field-required-marker mdc-floating-label--required',
                  4,
                  'ngIf',
                ],
                [
                  'aria-hidden',
                  'true',
                  1,
                  'mat-mdc-form-field-required-marker',
                  'mdc-floating-label--required',
                ],
                [1, 'mat-mdc-form-field-focus-overlay'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                ],
                [3, 'ngTemplateOutlet'],
                [1, 'mat-mdc-form-field-icon-prefix'],
                ['iconPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-prefix'],
                ['textPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-suffix'],
                [1, 'mat-mdc-form-field-icon-suffix'],
                ['matFormFieldLineRipple', ''],
                [1, 'mat-mdc-form-field-error-wrapper'],
                [1, 'mat-mdc-form-field-hint-wrapper'],
                [3, 'id', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-hint-spacer'],
                [3, 'id'],
              ],
              template: function (pe, nt) {
                1 & pe &&
                  (s.F$t(be),
                  s.YNc(0, lt, 1, 1, 'ng-template', null, 0, s.W1O),
                  s.TgZ(2, 'div', 1, 2),
                  s.NdJ('click', function (Ot) {
                    return (
                      nt._control.onContainerClick &&
                      nt._control.onContainerClick(Ot)
                    );
                  }),
                  s.YNc(4, bt, 1, 0, 'div', 3),
                  s.TgZ(5, 'div', 4),
                  s.YNc(6, ie, 2, 3, 'div', 5),
                  s.YNc(7, X, 3, 0, 'div', 6),
                  s.YNc(8, Ae, 3, 0, 'div', 7),
                  s.TgZ(9, 'div', 8),
                  s.YNc(10, ut, 1, 1, 'ng-template', 9),
                  s.Hsn(11),
                  s.qZA(),
                  s.YNc(12, Ut, 2, 0, 'div', 10),
                  s.YNc(13, Et, 2, 0, 'div', 11),
                  s.qZA(),
                  s.YNc(14, Yt, 1, 0, 'div', 12),
                  s.qZA(),
                  s.TgZ(15, 'div', 13),
                  s.YNc(16, Mt, 2, 1, 'div', 14),
                  s.YNc(17, ze, 5, 2, 'div', 15),
                  s.qZA()),
                  2 & pe &&
                    (s.xp6(2),
                    s.ekj('mdc-text-field--filled', !nt._hasOutline())(
                      'mdc-text-field--outlined',
                      nt._hasOutline(),
                    )('mdc-text-field--no-label', !nt._hasFloatingLabel())(
                      'mdc-text-field--disabled',
                      nt._control.disabled,
                    )('mdc-text-field--invalid', nt._control.errorState),
                    s.xp6(2),
                    s.Q6J('ngIf', !nt._hasOutline() && !nt._control.disabled),
                    s.xp6(2),
                    s.Q6J('ngIf', nt._hasOutline()),
                    s.xp6(1),
                    s.Q6J('ngIf', nt._hasIconPrefix),
                    s.xp6(1),
                    s.Q6J('ngIf', nt._hasTextPrefix),
                    s.xp6(2),
                    s.Q6J(
                      'ngIf',
                      !nt._hasOutline() || nt._forceDisplayInfixLabel(),
                    ),
                    s.xp6(2),
                    s.Q6J('ngIf', nt._hasTextSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', nt._hasIconSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', !nt._hasOutline()),
                    s.xp6(1),
                    s.ekj(
                      'mat-mdc-form-field-subscript-dynamic-size',
                      'dynamic' === nt.subscriptSizing,
                    ),
                    s.Q6J('ngSwitch', nt._getDisplayedMessages()),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'error'),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'hint'));
              },
              dependencies: [ve.O5, ve.tP, ve.RF, ve.n9, le.wD, We, ft, pn, Wt],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [Sn.transitionMessages] },
              changeDetection: 0,
            })),
            he
          );
        })(),
        ke = (() => {
          class he {}
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)();
            }),
            (he.ɵmod = s.oAB({ type: he })),
            (he.ɵinj = s.cJS({ imports: [fe.BQ, ve.ez, le.Q8, fe.BQ] })),
            he
          );
        })();
    },
    4144: (Pt, Re, D) => {
      D.d(Re, { Jk: () => ct, Nt: () => lt, c: () => bt });
      var s = D(1281),
        x = D(3353),
        L = D(4650),
        ne = D(515),
        te = D(7579);
      const de = (0, x.i$)({ passive: !0 });
      let ve = (() => {
          class W {
            constructor(ie, X) {
              (this._platform = ie),
                (this._ngZone = X),
                (this._monitoredElements = new Map());
            }
            monitor(ie) {
              if (!this._platform.isBrowser) return ne.E;
              const X = (0, s.fI)(ie),
                Ae = this._monitoredElements.get(X);
              if (Ae) return Ae.subject;
              const Qe = new te.x(),
                ut = 'cdk-text-field-autofilled',
                Ut = Et => {
                  'cdk-text-field-autofill-start' !== Et.animationName ||
                  X.classList.contains(ut)
                    ? 'cdk-text-field-autofill-end' === Et.animationName &&
                      X.classList.contains(ut) &&
                      (X.classList.remove(ut),
                      this._ngZone.run(() =>
                        Qe.next({ target: Et.target, isAutofilled: !1 }),
                      ))
                    : (X.classList.add(ut),
                      this._ngZone.run(() =>
                        Qe.next({ target: Et.target, isAutofilled: !0 }),
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  X.addEventListener('animationstart', Ut, de),
                    X.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(X, {
                  subject: Qe,
                  unlisten: () => {
                    X.removeEventListener('animationstart', Ut, de);
                  },
                }),
                Qe
              );
            }
            stopMonitoring(ie) {
              const X = (0, s.fI)(ie),
                Ae = this._monitoredElements.get(X);
              Ae &&
                (Ae.unlisten(),
                Ae.subject.complete(),
                X.classList.remove('cdk-text-field-autofill-monitored'),
                X.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(X));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((ie, X) =>
                this.stopMonitoring(X),
              );
            }
          }
          return (
            (W.ɵfac = function (ie) {
              return new (ie || W)(L.LFG(x.t4), L.LFG(L.R0b));
            }),
            (W.ɵprov = L.Yz7({
              token: W,
              factory: W.ɵfac,
              providedIn: 'root',
            })),
            W
          );
        })(),
        le = (() => {
          class W {}
          return (
            (W.ɵfac = function (ie) {
              return new (ie || W)();
            }),
            (W.ɵmod = L.oAB({ type: W })),
            (W.ɵinj = L.cJS({})),
            W
          );
        })();
      var fe = D(4006),
        re = D(3238),
        Ne = D(9549);
      const ct = new L.OlP('MAT_INPUT_VALUE_ACCESSOR'),
        vt = [
          'button',
          'checkbox',
          'file',
          'hidden',
          'image',
          'radio',
          'range',
          'reset',
          'submit',
        ];
      let Be = 0;
      const _t = (0, re.FD)(
        class {
          constructor(W, se, ie, X) {
            (this._defaultErrorStateMatcher = W),
              (this._parentForm = se),
              (this._parentFormGroup = ie),
              (this.ngControl = X),
              (this.stateChanges = new te.x());
          }
        },
      );
      let lt = (() => {
          class W extends _t {
            get disabled() {
              return this._disabled;
            }
            set disabled(ie) {
              (this._disabled = (0, s.Ig)(ie)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(ie) {
              this._id = ie || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(fe.kI.required) ??
                !1
              );
            }
            set required(ie) {
              this._required = (0, s.Ig)(ie);
            }
            get type() {
              return this._type;
            }
            set type(ie) {
              (this._type = ie || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  (0, x.qK)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(ie) {
              ie !== this.value &&
                ((this._inputValueAccessor.value = ie),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(ie) {
              this._readonly = (0, s.Ig)(ie);
            }
            constructor(ie, X, Ae, Qe, ut, Ut, Et, Yt, Mt, $e) {
              super(Ut, Qe, ut, Ae),
                (this._elementRef = ie),
                (this._platform = X),
                (this._autofillMonitor = Yt),
                (this._formField = $e),
                (this._uid = 'mat-input-' + Be++),
                (this.focused = !1),
                (this.stateChanges = new te.x()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter(Ue => (0, x.qK)().has(Ue))),
                (this._iOSKeyupListener = Ue => {
                  const Ce = Ue.target;
                  !Ce.value &&
                    0 === Ce.selectionStart &&
                    0 === Ce.selectionEnd &&
                    (Ce.setSelectionRange(1, 1), Ce.setSelectionRange(0, 0));
                });
              const ze = this._elementRef.nativeElement,
                be = ze.nodeName.toLowerCase();
              (this._inputValueAccessor = Et || ze),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                X.IOS &&
                  Mt.runOutsideAngular(() => {
                    ie.nativeElement.addEventListener(
                      'keyup',
                      this._iOSKeyupListener,
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === be),
                (this._isTextarea = 'textarea' === be),
                (this._isInFormField = !!$e),
                this._isNativeSelect &&
                  (this.controlType = ze.multiple
                    ? 'mat-native-select-multiple'
                    : 'mat-native-select');
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe(ie => {
                    (this.autofilled = ie.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement,
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    'keyup',
                    this._iOSKeyupListener,
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(ie) {
              this._elementRef.nativeElement.focus(ie);
            }
            _focusChanged(ie) {
              ie !== this.focused &&
                ((this.focused = ie), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const ie = this._elementRef.nativeElement.value;
              this._previousNativeValue !== ie &&
                ((this._previousNativeValue = ie), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const ie = this._getPlaceholder();
              if (ie !== this._previousPlaceholder) {
                const X = this._elementRef.nativeElement;
                (this._previousPlaceholder = ie),
                  ie
                    ? X.setAttribute('placeholder', ie)
                    : X.removeAttribute('placeholder');
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              vt.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let ie = this._elementRef.nativeElement.validity;
              return ie && ie.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const ie = this._elementRef.nativeElement,
                  X = ie.options[0];
                return (
                  this.focused ||
                  ie.multiple ||
                  !this.empty ||
                  !!(ie.selectedIndex > -1 && X && X.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(ie) {
              ie.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    ie.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const ie = this._elementRef.nativeElement;
              return this._isNativeSelect && (ie.multiple || ie.size > 1);
            }
          }
          return (
            (W.ɵfac = function (ie) {
              return new (ie || W)(
                L.Y36(L.SBq),
                L.Y36(x.t4),
                L.Y36(fe.a5, 10),
                L.Y36(fe.F, 8),
                L.Y36(fe.sg, 8),
                L.Y36(re.rD),
                L.Y36(ct, 10),
                L.Y36(ve),
                L.Y36(L.R0b),
                L.Y36(Ne.G_, 8),
              );
            }),
            (W.ɵdir = L.lG2({
              type: W,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-mdc-input-element'],
              hostVars: 18,
              hostBindings: function (ie, X) {
                1 & ie &&
                  L.NdJ('focus', function () {
                    return X._focusChanged(!0);
                  })('blur', function () {
                    return X._focusChanged(!1);
                  })('input', function () {
                    return X._onInput();
                  }),
                  2 & ie &&
                    (L.Ikx('id', X.id)('disabled', X.disabled)(
                      'required',
                      X.required,
                    ),
                    L.uIk('name', X.name || null)(
                      'readonly',
                      (X.readonly && !X._isNativeSelect) || null,
                    )(
                      'aria-invalid',
                      X.empty && X.required ? null : X.errorState,
                    )('aria-required', X.required)('id', X.id),
                    L.ekj('mat-input-server', X._isServer)(
                      'mat-mdc-form-field-textarea-control',
                      X._isInFormField && X._isTextarea,
                    )('mat-mdc-form-field-input-control', X._isInFormField)(
                      'mdc-text-field__input',
                      X._isInFormField,
                    )('mat-mdc-native-select-inline', X._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [
                L._Bn([{ provide: Ne.Eo, useExisting: W }]),
                L.qOj,
                L.TTD,
              ],
            })),
            W
          );
        })(),
        bt = (() => {
          class W {}
          return (
            (W.ɵfac = function (ie) {
              return new (ie || W)();
            }),
            (W.ɵmod = L.oAB({ type: W })),
            (W.ɵinj = L.cJS({ imports: [re.BQ, Ne.lN, Ne.lN, le, re.BQ] })),
            W
          );
        })();
    },
    7009: (Pt, Re, D) => {
      D.d(Re, { ZX: () => Et, ux: () => ze });
      var s = D(4650),
        x = D(7579),
        L = D(6895),
        ne = D(4859),
        te = D(7340),
        de = D(4080),
        ve = D(3353),
        ue = D(5698),
        ce = D(2722),
        le = D(2687),
        fe = D(2289),
        re = D(8184),
        Ne = D(3238);
      function He(be, Ue) {
        if (1 & be) {
          const Ce = s.EpF();
          s.TgZ(0, 'div', 2)(1, 'button', 3),
            s.NdJ('click', function () {
              s.CHM(Ce);
              const Le = s.oxw();
              return s.KtG(Le.action());
            }),
            s._uU(2),
            s.qZA()();
        }
        if (2 & be) {
          const Ce = s.oxw();
          s.xp6(2), s.hij(' ', Ce.data.action, ' ');
        }
      }
      const ct = ['label'];
      function vt(be, Ue) {}
      const Be = Math.pow(2, 31) - 1;
      class _t {
        constructor(Ue, Ce) {
          (this._overlayRef = Ce),
            (this._afterDismissed = new x.x()),
            (this._afterOpened = new x.x()),
            (this._onAction = new x.x()),
            (this._dismissedByAction = !1),
            (this.containerInstance = Ue),
            Ue._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(Ue) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(Ue, Be),
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const lt = new s.OlP('MatSnackBarData');
      class bt {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      let W = (() => {
          class be {}
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)();
            }),
            (be.ɵdir = s.lG2({
              type: be,
              selectors: [['', 'matSnackBarLabel', '']],
              hostAttrs: [1, 'mat-mdc-snack-bar-label', 'mdc-snackbar__label'],
            })),
            be
          );
        })(),
        se = (() => {
          class be {}
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)();
            }),
            (be.ɵdir = s.lG2({
              type: be,
              selectors: [['', 'matSnackBarActions', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-actions',
                'mdc-snackbar__actions',
              ],
            })),
            be
          );
        })(),
        ie = (() => {
          class be {}
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)();
            }),
            (be.ɵdir = s.lG2({
              type: be,
              selectors: [['', 'matSnackBarAction', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-action',
                'mdc-snackbar__action',
              ],
            })),
            be
          );
        })(),
        X = (() => {
          class be {
            constructor(Ce, Pe) {
              (this.snackBarRef = Ce), (this.data = Pe);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)(s.Y36(_t), s.Y36(lt));
            }),
            (be.ɵcmp = s.Xpm({
              type: be,
              selectors: [['simple-snack-bar']],
              hostAttrs: [1, 'mat-mdc-simple-snack-bar'],
              exportAs: ['matSnackBar'],
              decls: 3,
              vars: 2,
              consts: [
                ['matSnackBarLabel', ''],
                ['matSnackBarActions', '', 4, 'ngIf'],
                ['matSnackBarActions', ''],
                ['mat-button', '', 'matSnackBarAction', '', 3, 'click'],
              ],
              template: function (Ce, Pe) {
                1 & Ce &&
                  (s.TgZ(0, 'div', 0),
                  s._uU(1),
                  s.qZA(),
                  s.YNc(2, He, 3, 1, 'div', 1)),
                  2 & Ce &&
                    (s.xp6(1),
                    s.hij(' ', Pe.data.message, '\n'),
                    s.xp6(1),
                    s.Q6J('ngIf', Pe.hasAction));
              },
              dependencies: [L.O5, ne.lW, W, se, ie],
              styles: ['.mat-mdc-simple-snack-bar{display:flex}'],
              encapsulation: 2,
              changeDetection: 0,
            })),
            be
          );
        })();
      const Ae = {
        snackBarState: (0, te.X$)('state', [
          (0, te.SB)(
            'void, hidden',
            (0, te.oB)({ transform: 'scale(0.8)', opacity: 0 }),
          ),
          (0, te.SB)(
            'visible',
            (0, te.oB)({ transform: 'scale(1)', opacity: 1 }),
          ),
          (0, te.eR)(
            '* => visible',
            (0, te.jt)('150ms cubic-bezier(0, 0, 0.2, 1)'),
          ),
          (0, te.eR)(
            '* => void, * => hidden',
            (0, te.jt)(
              '75ms cubic-bezier(0.4, 0.0, 1, 1)',
              (0, te.oB)({ opacity: 0 }),
            ),
          ),
        ]),
      };
      let Qe = 0,
        ut = (() => {
          class be extends de.en {
            constructor(Ce, Pe, Le, Ye, dt) {
              super(),
                (this._ngZone = Ce),
                (this._elementRef = Pe),
                (this._changeDetectorRef = Le),
                (this._platform = Ye),
                (this.snackBarConfig = dt),
                (this._document = (0, s.f3M)(L.K0)),
                (this._trackedModals = new Set()),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new x.x()),
                (this._onExit = new x.x()),
                (this._onEnter = new x.x()),
                (this._animationState = 'void'),
                (this._liveElementId = 'mat-snack-bar-container-live-' + Qe++),
                (this.attachDomPortal = We => {
                  this._assertNotAttached();
                  const Gt = this._portalOutlet.attachDomPortal(We);
                  return this._afterPortalAttached(), Gt;
                }),
                (this._live =
                  'assertive' !== dt.politeness || dt.announcementMessage
                    ? 'off' === dt.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(Ce) {
              this._assertNotAttached();
              const Pe = this._portalOutlet.attachComponentPortal(Ce);
              return this._afterPortalAttached(), Pe;
            }
            attachTemplatePortal(Ce) {
              this._assertNotAttached();
              const Pe = this._portalOutlet.attachTemplatePortal(Ce);
              return this._afterPortalAttached(), Pe;
            }
            onAnimationEnd(Ce) {
              const { fromState: Pe, toState: Le } = Ce;
              if (
                ((('void' === Le && 'void' !== Pe) || 'hidden' === Le) &&
                  this._completeExit(),
                'visible' === Le)
              ) {
                const Ye = this._onEnter;
                this._ngZone.run(() => {
                  Ye.next(), Ye.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = 'hidden'),
                    this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0),
                this._clearFromModals(),
                this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe((0, ue.q)(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const Ce = this._elementRef.nativeElement,
                Pe = this.snackBarConfig.panelClass;
              Pe &&
                (Array.isArray(Pe)
                  ? Pe.forEach(Le => Ce.classList.add(Le))
                  : Ce.classList.add(Pe)),
                this._exposeToModals();
            }
            _exposeToModals() {
              const Ce = this._liveElementId,
                Pe = this._document.querySelectorAll(
                  'body > .cdk-overlay-container [aria-modal="true"]',
                );
              for (let Le = 0; Le < Pe.length; Le++) {
                const Ye = Pe[Le],
                  dt = Ye.getAttribute('aria-owns');
                this._trackedModals.add(Ye),
                  dt
                    ? -1 === dt.indexOf(Ce) &&
                      Ye.setAttribute('aria-owns', dt + ' ' + Ce)
                    : Ye.setAttribute('aria-owns', Ce);
              }
            }
            _clearFromModals() {
              this._trackedModals.forEach(Ce => {
                const Pe = Ce.getAttribute('aria-owns');
                if (Pe) {
                  const Le = Pe.replace(this._liveElementId, '').trim();
                  Le.length > 0
                    ? Ce.setAttribute('aria-owns', Le)
                    : Ce.removeAttribute('aria-owns');
                }
              }),
                this._trackedModals.clear();
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const Ce =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-hidden]',
                        ),
                      Pe =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-live]',
                        );
                    if (Ce && Pe) {
                      let Le = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        Ce.contains(document.activeElement) &&
                        (Le = document.activeElement),
                        Ce.removeAttribute('aria-hidden'),
                        Pe.appendChild(Ce),
                        Le?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)(
                s.Y36(s.R0b),
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(ve.t4),
                s.Y36(bt),
              );
            }),
            (be.ɵdir = s.lG2({
              type: be,
              viewQuery: function (Ce, Pe) {
                if ((1 & Ce && s.Gf(de.Pl, 7), 2 & Ce)) {
                  let Le;
                  s.iGM((Le = s.CRH())) && (Pe._portalOutlet = Le.first);
                }
              },
              features: [s.qOj],
            })),
            be
          );
        })(),
        Ut = (() => {
          class be extends ut {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const Ce = this._label.nativeElement,
                Pe = 'mdc-snackbar__label';
              Ce.classList.toggle(Pe, !Ce.querySelector(`.${Pe}`));
            }
          }
          return (
            (be.ɵfac = (function () {
              let Ue;
              return function (Pe) {
                return (Ue || (Ue = s.n5z(be)))(Pe || be);
              };
            })()),
            (be.ɵcmp = s.Xpm({
              type: be,
              selectors: [['mat-snack-bar-container']],
              viewQuery: function (Ce, Pe) {
                if ((1 & Ce && s.Gf(ct, 7), 2 & Ce)) {
                  let Le;
                  s.iGM((Le = s.CRH())) && (Pe._label = Le.first);
                }
              },
              hostAttrs: [
                1,
                'mdc-snackbar',
                'mat-mdc-snack-bar-container',
                'mdc-snackbar--open',
              ],
              hostVars: 1,
              hostBindings: function (Ce, Pe) {
                1 & Ce &&
                  s.WFA('@state.done', function (Ye) {
                    return Pe.onAnimationEnd(Ye);
                  }),
                  2 & Ce && s.d8E('@state', Pe._animationState);
              },
              features: [s.qOj],
              decls: 6,
              vars: 3,
              consts: [
                [1, 'mdc-snackbar__surface'],
                [1, 'mat-mdc-snack-bar-label'],
                ['label', ''],
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (Ce, Pe) {
                1 & Ce &&
                  (s.TgZ(0, 'div', 0)(1, 'div', 1, 2)(3, 'div', 3),
                  s.YNc(4, vt, 0, 0, 'ng-template', 4),
                  s.qZA(),
                  s._UZ(5, 'div'),
                  s.qZA()()),
                  2 & Ce &&
                    (s.xp6(5),
                    s.uIk('aria-live', Pe._live)('role', Pe._role)(
                      'id',
                      Pe._liveElementId,
                    ));
              },
              dependencies: [de.Pl],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [Ae.snackBarState] },
            })),
            be
          );
        })(),
        Et = (() => {
          class be {}
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)();
            }),
            (be.ɵmod = s.oAB({ type: be })),
            (be.ɵinj = s.cJS({
              imports: [re.U8, de.eL, L.ez, ne.ot, Ne.BQ, Ne.BQ],
            })),
            be
          );
        })();
      const Mt = new s.OlP('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function Yt() {
          return new bt();
        },
      });
      let $e = (() => {
          class be {
            get _openedSnackBarRef() {
              const Ce = this._parentSnackBar;
              return Ce ? Ce._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(Ce) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = Ce)
                : (this._snackBarRefAtThisLevel = Ce);
            }
            constructor(Ce, Pe, Le, Ye, dt, We) {
              (this._overlay = Ce),
                (this._live = Pe),
                (this._injector = Le),
                (this._breakpointObserver = Ye),
                (this._parentSnackBar = dt),
                (this._defaultConfig = We),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(Ce, Pe) {
              return this._attach(Ce, Pe);
            }
            openFromTemplate(Ce, Pe) {
              return this._attach(Ce, Pe);
            }
            open(Ce, Pe = '', Le) {
              const Ye = { ...this._defaultConfig, ...Le };
              return (
                (Ye.data = { message: Ce, action: Pe }),
                Ye.announcementMessage === Ce &&
                  (Ye.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, Ye)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(Ce, Pe) {
              const Ye = s.zs3.create({
                  parent:
                    (Pe &&
                      Pe.viewContainerRef &&
                      Pe.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: bt, useValue: Pe }],
                }),
                dt = new de.C5(
                  this.snackBarContainerComponent,
                  Pe.viewContainerRef,
                  Ye,
                ),
                We = Ce.attach(dt);
              return (We.instance.snackBarConfig = Pe), We.instance;
            }
            _attach(Ce, Pe) {
              const Le = { ...new bt(), ...this._defaultConfig, ...Pe },
                Ye = this._createOverlay(Le),
                dt = this._attachSnackBarContainer(Ye, Le),
                We = new _t(dt, Ye);
              if (Ce instanceof s.Rgc) {
                const Gt = new de.UE(Ce, null, {
                  $implicit: Le.data,
                  snackBarRef: We,
                });
                We.instance = dt.attachTemplatePortal(Gt);
              } else {
                const Gt = this._createInjector(Le, We),
                  mt = new de.C5(Ce, void 0, Gt),
                  nn = dt.attachComponentPortal(mt);
                We.instance = nn.instance;
              }
              return (
                this._breakpointObserver
                  .observe(fe.u3.HandsetPortrait)
                  .pipe((0, ce.R)(Ye.detachments()))
                  .subscribe(Gt => {
                    Ye.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      Gt.matches,
                    );
                  }),
                Le.announcementMessage &&
                  dt._onAnnounce.subscribe(() => {
                    this._live.announce(Le.announcementMessage, Le.politeness);
                  }),
                this._animateSnackBar(We, Le),
                (this._openedSnackBarRef = We),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(Ce, Pe) {
              Ce.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == Ce &&
                  (this._openedSnackBarRef = null),
                  Pe.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      Ce.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : Ce.containerInstance.enter(),
                Pe.duration &&
                  Pe.duration > 0 &&
                  Ce.afterOpened().subscribe(() =>
                    Ce._dismissAfter(Pe.duration),
                  );
            }
            _createOverlay(Ce) {
              const Pe = new re.X_();
              Pe.direction = Ce.direction;
              let Le = this._overlay.position().global();
              const Ye = 'rtl' === Ce.direction,
                dt =
                  'left' === Ce.horizontalPosition ||
                  ('start' === Ce.horizontalPosition && !Ye) ||
                  ('end' === Ce.horizontalPosition && Ye),
                We = !dt && 'center' !== Ce.horizontalPosition;
              return (
                dt
                  ? Le.left('0')
                  : We
                  ? Le.right('0')
                  : Le.centerHorizontally(),
                'top' === Ce.verticalPosition ? Le.top('0') : Le.bottom('0'),
                (Pe.positionStrategy = Le),
                this._overlay.create(Pe)
              );
            }
            _createInjector(Ce, Pe) {
              return s.zs3.create({
                parent:
                  (Ce && Ce.viewContainerRef && Ce.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: _t, useValue: Pe },
                  { provide: lt, useValue: Ce.data },
                ],
              });
            }
          }
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)(
                s.LFG(re.aV),
                s.LFG(le.Kd),
                s.LFG(s.zs3),
                s.LFG(fe.Yg),
                s.LFG(be, 12),
                s.LFG(Mt),
              );
            }),
            (be.ɵprov = s.Yz7({ token: be, factory: be.ɵfac })),
            be
          );
        })(),
        ze = (() => {
          class be extends $e {
            constructor(Ce, Pe, Le, Ye, dt, We) {
              super(Ce, Pe, Le, Ye, dt, We),
                (this.simpleSnackBarComponent = X),
                (this.snackBarContainerComponent = Ut),
                (this.handsetCssClass = 'mat-mdc-snack-bar-handset');
            }
          }
          return (
            (be.ɵfac = function (Ce) {
              return new (Ce || be)(
                s.LFG(re.aV),
                s.LFG(le.Kd),
                s.LFG(s.zs3),
                s.LFG(fe.Yg),
                s.LFG(be, 12),
                s.LFG(Mt),
              );
            }),
            (be.ɵprov = s.Yz7({ token: be, factory: be.ɵfac, providedIn: Et })),
            be
          );
        })();
    },
    1481: (Pt, Re, D) => {
      D.d(Re, {
        Dx: () => De,
        H7: () => rn,
        b2: () => at,
        q6: () => Tn,
        se: () => Mt,
      });
      var s = D(6895),
        x = D(4650);
      class L extends s.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class ne extends L {
        static makeCurrent() {
          (0, s.HT)(new ne());
        }
        onAndCancel(xe, Z, we) {
          return (
            xe.addEventListener(Z, we, !1),
            () => {
              xe.removeEventListener(Z, we, !1);
            }
          );
        }
        dispatchEvent(xe, Z) {
          xe.dispatchEvent(Z);
        }
        remove(xe) {
          xe.parentNode && xe.parentNode.removeChild(xe);
        }
        createElement(xe, Z) {
          return (Z = Z || this.getDefaultDocument()).createElement(xe);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(xe) {
          return xe.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(xe) {
          return xe instanceof DocumentFragment;
        }
        getGlobalEventTarget(xe, Z) {
          return 'window' === Z
            ? window
            : 'document' === Z
            ? xe
            : 'body' === Z
            ? xe.body
            : null;
        }
        getBaseHref(xe) {
          const Z = (function de() {
            return (
              (te = te || document.querySelector('base')),
              te ? te.getAttribute('href') : null
            );
          })();
          return null == Z
            ? null
            : (function ue(Ie) {
                (ve = ve || document.createElement('a')),
                  ve.setAttribute('href', Ie);
                const xe = ve.pathname;
                return '/' === xe.charAt(0) ? xe : `/${xe}`;
              })(Z);
        }
        resetBaseElement() {
          te = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(xe) {
          return (0, s.Mx)(document.cookie, xe);
        }
      }
      let ve,
        te = null;
      const ce = new x.OlP('TRANSITION_ID'),
        fe = [
          {
            provide: x.ip1,
            useFactory: function le(Ie, xe, Z) {
              return () => {
                Z.get(x.CZH).donePromise.then(() => {
                  const we = (0, s.q)(),
                    rt = xe.querySelectorAll(`style[ng-transition="${Ie}"]`);
                  for (let Bt = 0; Bt < rt.length; Bt++) we.remove(rt[Bt]);
                });
              };
            },
            deps: [ce, s.K0, x.zs3],
            multi: !0,
          },
        ];
      let Ne = (() => {
        class Ie {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (Ie.ɵfac = function (Z) {
            return new (Z || Ie)();
          }),
          (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
          Ie
        );
      })();
      const He = new x.OlP('EventManagerPlugins');
      let ct = (() => {
        class Ie {
          constructor(Z, we) {
            (this._zone = we),
              (this._eventNameToPlugin = new Map()),
              Z.forEach(rt => {
                rt.manager = this;
              }),
              (this._plugins = Z.slice().reverse());
          }
          addEventListener(Z, we, rt) {
            return this._findPluginFor(we).addEventListener(Z, we, rt);
          }
          addGlobalEventListener(Z, we, rt) {
            return this._findPluginFor(we).addGlobalEventListener(Z, we, rt);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(Z) {
            const we = this._eventNameToPlugin.get(Z);
            if (we) return we;
            const rt = this._plugins;
            for (let Bt = 0; Bt < rt.length; Bt++) {
              const qt = rt[Bt];
              if (qt.supports(Z)) return this._eventNameToPlugin.set(Z, qt), qt;
            }
            throw new Error(`No event manager plugin found for event ${Z}`);
          }
        }
        return (
          (Ie.ɵfac = function (Z) {
            return new (Z || Ie)(x.LFG(He), x.LFG(x.R0b));
          }),
          (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
          Ie
        );
      })();
      class vt {
        constructor(xe) {
          this._doc = xe;
        }
        addGlobalEventListener(xe, Z, we) {
          const rt = (0, s.q)().getGlobalEventTarget(this._doc, xe);
          if (!rt)
            throw new Error(`Unsupported event target ${rt} for event ${Z}`);
          return this.addEventListener(rt, Z, we);
        }
      }
      let Be = (() => {
          class Ie {
            constructor() {
              this.usageCount = new Map();
            }
            addStyles(Z) {
              for (const we of Z)
                1 === this.changeUsageCount(we, 1) && this.onStyleAdded(we);
            }
            removeStyles(Z) {
              for (const we of Z)
                0 === this.changeUsageCount(we, -1) && this.onStyleRemoved(we);
            }
            onStyleRemoved(Z) {}
            onStyleAdded(Z) {}
            getAllStyles() {
              return this.usageCount.keys();
            }
            changeUsageCount(Z, we) {
              const rt = this.usageCount;
              let Bt = rt.get(Z) ?? 0;
              return (Bt += we), Bt > 0 ? rt.set(Z, Bt) : rt.delete(Z), Bt;
            }
            ngOnDestroy() {
              for (const Z of this.getAllStyles()) this.onStyleRemoved(Z);
              this.usageCount.clear();
            }
          }
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)();
            }),
            (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
            Ie
          );
        })(),
        _t = (() => {
          class Ie extends Be {
            constructor(Z) {
              super(),
                (this.doc = Z),
                (this.styleRef = new Map()),
                (this.hostNodes = new Set()),
                this.resetHostNodes();
            }
            onStyleAdded(Z) {
              for (const we of this.hostNodes) this.addStyleToHost(we, Z);
            }
            onStyleRemoved(Z) {
              const we = this.styleRef;
              we.get(Z)?.forEach(Bt => Bt.remove()), we.delete(Z);
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes();
            }
            addHost(Z) {
              this.hostNodes.add(Z);
              for (const we of this.getAllStyles()) this.addStyleToHost(Z, we);
            }
            removeHost(Z) {
              this.hostNodes.delete(Z);
            }
            addStyleToHost(Z, we) {
              const rt = this.doc.createElement('style');
              (rt.textContent = we), Z.appendChild(rt);
              const Bt = this.styleRef.get(we);
              Bt ? Bt.push(rt) : this.styleRef.set(we, [rt]);
            }
            resetHostNodes() {
              const Z = this.hostNodes;
              Z.clear(), Z.add(this.doc.head);
            }
          }
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)(x.LFG(s.K0));
            }),
            (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
            Ie
          );
        })();
      const lt = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          math: 'http://www.w3.org/1998/MathML/',
        },
        bt = /%COMP%/g,
        Qe = new x.OlP('RemoveStylesOnCompDestory', {
          providedIn: 'root',
          factory: () => !1,
        });
      function Et(Ie, xe) {
        return xe.flat(100).map(Z => Z.replace(bt, Ie));
      }
      function Yt(Ie) {
        return xe => {
          if ('__ngUnwrap__' === xe) return Ie;
          !1 === Ie(xe) && (xe.preventDefault(), (xe.returnValue = !1));
        };
      }
      let Mt = (() => {
        class Ie {
          constructor(Z, we, rt, Bt) {
            (this.eventManager = Z),
              (this.sharedStylesHost = we),
              (this.appId = rt),
              (this.removeStylesOnCompDestory = Bt),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new $e(Z));
          }
          createRenderer(Z, we) {
            if (!Z || !we) return this.defaultRenderer;
            const rt = this.getOrCreateRenderer(Z, we);
            return (
              rt instanceof Le
                ? rt.applyToHost(Z)
                : rt instanceof Pe && rt.applyStyles(),
              rt
            );
          }
          getOrCreateRenderer(Z, we) {
            const rt = this.rendererByCompId;
            let Bt = rt.get(we.id);
            if (!Bt) {
              const qt = this.eventManager,
                Cn = this.sharedStylesHost,
                Zn = this.removeStylesOnCompDestory;
              switch (we.encapsulation) {
                case x.ifc.Emulated:
                  Bt = new Le(qt, Cn, we, this.appId, Zn);
                  break;
                case x.ifc.ShadowDom:
                  return new Ce(qt, Cn, Z, we);
                default:
                  Bt = new Pe(qt, Cn, we, Zn);
              }
              (Bt.onDestroy = () => rt.delete(we.id)), rt.set(we.id, Bt);
            }
            return Bt;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          begin() {}
          end() {}
        }
        return (
          (Ie.ɵfac = function (Z) {
            return new (Z || Ie)(x.LFG(ct), x.LFG(_t), x.LFG(x.AFp), x.LFG(Qe));
          }),
          (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
          Ie
        );
      })();
      class $e {
        constructor(xe) {
          (this.eventManager = xe),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(xe, Z) {
          return Z
            ? document.createElementNS(lt[Z] || Z, xe)
            : document.createElement(xe);
        }
        createComment(xe) {
          return document.createComment(xe);
        }
        createText(xe) {
          return document.createTextNode(xe);
        }
        appendChild(xe, Z) {
          (Ue(xe) ? xe.content : xe).appendChild(Z);
        }
        insertBefore(xe, Z, we) {
          xe && (Ue(xe) ? xe.content : xe).insertBefore(Z, we);
        }
        removeChild(xe, Z) {
          xe && xe.removeChild(Z);
        }
        selectRootElement(xe, Z) {
          let we = 'string' == typeof xe ? document.querySelector(xe) : xe;
          if (!we)
            throw new Error(`The selector "${xe}" did not match any elements`);
          return Z || (we.textContent = ''), we;
        }
        parentNode(xe) {
          return xe.parentNode;
        }
        nextSibling(xe) {
          return xe.nextSibling;
        }
        setAttribute(xe, Z, we, rt) {
          if (rt) {
            Z = rt + ':' + Z;
            const Bt = lt[rt];
            Bt ? xe.setAttributeNS(Bt, Z, we) : xe.setAttribute(Z, we);
          } else xe.setAttribute(Z, we);
        }
        removeAttribute(xe, Z, we) {
          if (we) {
            const rt = lt[we];
            rt ? xe.removeAttributeNS(rt, Z) : xe.removeAttribute(`${we}:${Z}`);
          } else xe.removeAttribute(Z);
        }
        addClass(xe, Z) {
          xe.classList.add(Z);
        }
        removeClass(xe, Z) {
          xe.classList.remove(Z);
        }
        setStyle(xe, Z, we, rt) {
          rt & (x.JOm.DashCase | x.JOm.Important)
            ? xe.style.setProperty(
                Z,
                we,
                rt & x.JOm.Important ? 'important' : '',
              )
            : (xe.style[Z] = we);
        }
        removeStyle(xe, Z, we) {
          we & x.JOm.DashCase ? xe.style.removeProperty(Z) : (xe.style[Z] = '');
        }
        setProperty(xe, Z, we) {
          xe[Z] = we;
        }
        setValue(xe, Z) {
          xe.nodeValue = Z;
        }
        listen(xe, Z, we) {
          return 'string' == typeof xe
            ? this.eventManager.addGlobalEventListener(xe, Z, Yt(we))
            : this.eventManager.addEventListener(xe, Z, Yt(we));
        }
      }
      function Ue(Ie) {
        return 'TEMPLATE' === Ie.tagName && void 0 !== Ie.content;
      }
      class Ce extends $e {
        constructor(xe, Z, we, rt) {
          super(xe),
            (this.sharedStylesHost = Z),
            (this.hostEl = we),
            (this.shadowRoot = we.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const Bt = Et(rt.id, rt.styles);
          for (const qt of Bt) {
            const Cn = document.createElement('style');
            (Cn.textContent = qt), this.shadowRoot.appendChild(Cn);
          }
        }
        nodeOrShadowRoot(xe) {
          return xe === this.hostEl ? this.shadowRoot : xe;
        }
        appendChild(xe, Z) {
          return super.appendChild(this.nodeOrShadowRoot(xe), Z);
        }
        insertBefore(xe, Z, we) {
          return super.insertBefore(this.nodeOrShadowRoot(xe), Z, we);
        }
        removeChild(xe, Z) {
          return super.removeChild(this.nodeOrShadowRoot(xe), Z);
        }
        parentNode(xe) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(xe)),
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Pe extends $e {
        constructor(xe, Z, we, rt, Bt = we.id) {
          super(xe),
            (this.sharedStylesHost = Z),
            (this.removeStylesOnCompDestory = rt),
            (this.rendererUsageCount = 0),
            (this.styles = Et(Bt, we.styles));
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles),
            this.rendererUsageCount++;
        }
        destroy() {
          this.removeStylesOnCompDestory &&
            (this.sharedStylesHost.removeStyles(this.styles),
            this.rendererUsageCount--,
            0 === this.rendererUsageCount && this.onDestroy?.());
        }
      }
      class Le extends Pe {
        constructor(xe, Z, we, rt, Bt) {
          const qt = rt + '-' + we.id;
          super(xe, Z, we, Bt, qt),
            (this.contentAttr = (function ut(Ie) {
              return '_ngcontent-%COMP%'.replace(bt, Ie);
            })(qt)),
            (this.hostAttr = (function Ut(Ie) {
              return '_nghost-%COMP%'.replace(bt, Ie);
            })(qt));
        }
        applyToHost(xe) {
          this.applyStyles(), this.setAttribute(xe, this.hostAttr, '');
        }
        createElement(xe, Z) {
          const we = super.createElement(xe, Z);
          return super.setAttribute(we, this.contentAttr, ''), we;
        }
      }
      let Ye = (() => {
        class Ie extends vt {
          constructor(Z) {
            super(Z);
          }
          supports(Z) {
            return !0;
          }
          addEventListener(Z, we, rt) {
            return (
              Z.addEventListener(we, rt, !1),
              () => this.removeEventListener(Z, we, rt)
            );
          }
          removeEventListener(Z, we, rt) {
            return Z.removeEventListener(we, rt);
          }
        }
        return (
          (Ie.ɵfac = function (Z) {
            return new (Z || Ie)(x.LFG(s.K0));
          }),
          (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
          Ie
        );
      })();
      const dt = ['alt', 'control', 'meta', 'shift'],
        We = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        Gt = {
          alt: Ie => Ie.altKey,
          control: Ie => Ie.ctrlKey,
          meta: Ie => Ie.metaKey,
          shift: Ie => Ie.shiftKey,
        };
      let mt = (() => {
        class Ie extends vt {
          constructor(Z) {
            super(Z);
          }
          supports(Z) {
            return null != Ie.parseEventName(Z);
          }
          addEventListener(Z, we, rt) {
            const Bt = Ie.parseEventName(we),
              qt = Ie.eventCallback(Bt.fullKey, rt, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, s.q)().onAndCancel(Z, Bt.domEventName, qt),
              );
          }
          static parseEventName(Z) {
            const we = Z.toLowerCase().split('.'),
              rt = we.shift();
            if (0 === we.length || ('keydown' !== rt && 'keyup' !== rt))
              return null;
            const Bt = Ie._normalizeKey(we.pop());
            let qt = '',
              Cn = we.indexOf('code');
            if (
              (Cn > -1 && (we.splice(Cn, 1), (qt = 'code.')),
              dt.forEach(ki => {
                const yi = we.indexOf(ki);
                yi > -1 && (we.splice(yi, 1), (qt += ki + '.'));
              }),
              (qt += Bt),
              0 != we.length || 0 === Bt.length)
            )
              return null;
            const Zn = {};
            return (Zn.domEventName = rt), (Zn.fullKey = qt), Zn;
          }
          static matchEventFullKeyCode(Z, we) {
            let rt = We[Z.key] || Z.key,
              Bt = '';
            return (
              we.indexOf('code.') > -1 && ((rt = Z.code), (Bt = 'code.')),
              !(null == rt || !rt) &&
                ((rt = rt.toLowerCase()),
                ' ' === rt ? (rt = 'space') : '.' === rt && (rt = 'dot'),
                dt.forEach(qt => {
                  qt !== rt && (0, Gt[qt])(Z) && (Bt += qt + '.');
                }),
                (Bt += rt),
                Bt === we)
            );
          }
          static eventCallback(Z, we, rt) {
            return Bt => {
              Ie.matchEventFullKeyCode(Bt, Z) && rt.runGuarded(() => we(Bt));
            };
          }
          static _normalizeKey(Z) {
            return 'esc' === Z ? 'escape' : Z;
          }
        }
        return (
          (Ie.ɵfac = function (Z) {
            return new (Z || Ie)(x.LFG(s.K0));
          }),
          (Ie.ɵprov = x.Yz7({ token: Ie, factory: Ie.ɵfac })),
          Ie
        );
      })();
      const Tn = (0, x.eFA)(x._c5, 'browser', [
          { provide: x.Lbi, useValue: s.bD },
          {
            provide: x.g9A,
            useValue: function pt() {
              ne.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: s.K0,
            useFactory: function pn() {
              return (0, x.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        dn = new x.OlP(''),
        kt = [
          {
            provide: x.rWj,
            useClass: class re {
              addToWindow(xe) {
                (x.dqk.getAngularTestability = (we, rt = !0) => {
                  const Bt = xe.findTestabilityInTree(we, rt);
                  if (null == Bt)
                    throw new Error('Could not find testability for element.');
                  return Bt;
                }),
                  (x.dqk.getAllAngularTestabilities = () =>
                    xe.getAllTestabilities()),
                  (x.dqk.getAllAngularRootElements = () =>
                    xe.getAllRootElements()),
                  x.dqk.frameworkStabilizers ||
                    (x.dqk.frameworkStabilizers = []),
                  x.dqk.frameworkStabilizers.push(we => {
                    const rt = x.dqk.getAllAngularTestabilities();
                    let Bt = rt.length,
                      qt = !1;
                    const Cn = function (Zn) {
                      (qt = qt || Zn), Bt--, 0 == Bt && we(qt);
                    };
                    rt.forEach(function (Zn) {
                      Zn.whenStable(Cn);
                    });
                  });
              }
              findTestabilityInTree(xe, Z, we) {
                return null == Z
                  ? null
                  : xe.getTestability(Z) ??
                      (we
                        ? (0, s.q)().isShadowRoot(Z)
                          ? this.findTestabilityInTree(xe, Z.host, !0)
                          : this.findTestabilityInTree(xe, Z.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: x.lri, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
          { provide: x.dDg, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
        ],
        En = [
          { provide: x.zSh, useValue: 'root' },
          {
            provide: x.qLn,
            useFactory: function Wt() {
              return new x.qLn();
            },
            deps: [],
          },
          { provide: He, useClass: Ye, multi: !0, deps: [s.K0, x.R0b, x.Lbi] },
          { provide: He, useClass: mt, multi: !0, deps: [s.K0] },
          { provide: Mt, useClass: Mt, deps: [ct, _t, x.AFp, Qe] },
          { provide: x.FYo, useExisting: Mt },
          { provide: Be, useExisting: _t },
          { provide: _t, useClass: _t, deps: [s.K0] },
          { provide: ct, useClass: ct, deps: [He, x.R0b] },
          { provide: s.JF, useClass: Ne, deps: [] },
          [],
        ];
      let at = (() => {
          class Ie {
            constructor(Z) {}
            static withServerTransition(Z) {
              return {
                ngModule: Ie,
                providers: [
                  { provide: x.AFp, useValue: Z.appId },
                  { provide: ce, useExisting: x.AFp },
                  fe,
                ],
              };
            }
          }
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)(x.LFG(dn, 12));
            }),
            (Ie.ɵmod = x.oAB({ type: Ie })),
            (Ie.ɵinj = x.cJS({
              providers: [...En, ...kt],
              imports: [s.ez, x.hGG],
            })),
            Ie
          );
        })(),
        De = (() => {
          class Ie {
            constructor(Z) {
              this._doc = Z;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(Z) {
              this._doc.title = Z || '';
            }
          }
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)(x.LFG(s.K0));
            }),
            (Ie.ɵprov = x.Yz7({
              token: Ie,
              factory: function (Z) {
                let we = null;
                return (
                  (we = Z
                    ? new Z()
                    : (function je() {
                        return new De((0, x.LFG)(s.K0));
                      })()),
                  we
                );
              },
              providedIn: 'root',
            })),
            Ie
          );
        })();
      typeof window < 'u' && window;
      let rn = (() => {
          class Ie {}
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)();
            }),
            (Ie.ɵprov = x.Yz7({
              token: Ie,
              factory: function (Z) {
                let we = null;
                return (we = Z ? new (Z || Ie)() : x.LFG(tt)), we;
              },
              providedIn: 'root',
            })),
            Ie
          );
        })(),
        tt = (() => {
          class Ie extends rn {
            constructor(Z) {
              super(), (this._doc = Z);
            }
            sanitize(Z, we) {
              if (null == we) return null;
              switch (Z) {
                case x.q3G.NONE:
                  return we;
                case x.q3G.HTML:
                  return (0, x.qzn)(we, 'HTML')
                    ? (0, x.z3N)(we)
                    : (0, x.EiD)(this._doc, String(we)).toString();
                case x.q3G.STYLE:
                  return (0, x.qzn)(we, 'Style') ? (0, x.z3N)(we) : we;
                case x.q3G.SCRIPT:
                  if ((0, x.qzn)(we, 'Script')) return (0, x.z3N)(we);
                  throw new Error('unsafe value used in a script context');
                case x.q3G.URL:
                  return (0, x.qzn)(we, 'URL')
                    ? (0, x.z3N)(we)
                    : (0, x.mCW)(String(we));
                case x.q3G.RESOURCE_URL:
                  if ((0, x.qzn)(we, 'ResourceURL')) return (0, x.z3N)(we);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${x.JZr})`,
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${Z} (see ${x.JZr})`,
                  );
              }
            }
            bypassSecurityTrustHtml(Z) {
              return (0, x.JVY)(Z);
            }
            bypassSecurityTrustStyle(Z) {
              return (0, x.L6k)(Z);
            }
            bypassSecurityTrustScript(Z) {
              return (0, x.eBb)(Z);
            }
            bypassSecurityTrustUrl(Z) {
              return (0, x.LAX)(Z);
            }
            bypassSecurityTrustResourceUrl(Z) {
              return (0, x.pB0)(Z);
            }
          }
          return (
            (Ie.ɵfac = function (Z) {
              return new (Z || Ie)(x.LFG(s.K0));
            }),
            (Ie.ɵprov = x.Yz7({
              token: Ie,
              factory: function (Z) {
                let we = null;
                return (
                  (we = Z
                    ? new Z()
                    : (function Rt(Ie) {
                        return new tt(Ie.get(s.K0));
                      })(x.LFG(x.zs3))),
                  we
                );
              },
              providedIn: 'root',
            })),
            Ie
          );
        })();
    },
    8252: (Pt, Re, D) => {
      D.d(Re, {
        gz: () => Nn,
        F0: () => Xi,
        rH: () => fs,
        Bz: () => ll,
        lC: () => Er,
      });
      var s = D(4650),
        x = D(457),
        L = D(9646),
        ne = D(1135);
      const de = (0, D(3888).d)(
        f =>
          function () {
            f(this),
              (this.name = 'EmptyError'),
              (this.message = 'no elements in sequence');
          },
      );
      var ve = D(9841),
        ue = D(7272),
        ce = D(9770),
        le = D(9635),
        fe = D(2843),
        re = D(9751),
        Ne = D(515),
        He = D(727),
        ct = D(4482),
        vt = D(5403);
      function Be() {
        return (0, ct.e)((f, m) => {
          let d = null;
          f._refCount++;
          const C = (0, vt.x)(m, void 0, void 0, void 0, () => {
            if (!f || f._refCount <= 0 || 0 < --f._refCount)
              return void (d = null);
            const O = f._connection,
              U = d;
            (d = null),
              O && (!U || O === U) && O.unsubscribe(),
              m.unsubscribe();
          });
          f.subscribe(C), C.closed || (d = f.connect());
        });
      }
      class _t extends re.y {
        constructor(m, d) {
          super(),
            (this.source = m),
            (this.subjectFactory = d),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, ct.A)(m) && (this.lift = m.lift);
        }
        _subscribe(m) {
          return this.getSubject().subscribe(m);
        }
        getSubject() {
          const m = this._subject;
          return (
            (!m || m.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: m } = this;
          (this._subject = this._connection = null), m?.unsubscribe();
        }
        connect() {
          let m = this._connection;
          if (!m) {
            m = this._connection = new He.w0();
            const d = this.getSubject();
            m.add(
              this.source.subscribe(
                (0, vt.x)(
                  d,
                  void 0,
                  () => {
                    this._teardown(), d.complete();
                  },
                  C => {
                    this._teardown(), d.error(C);
                  },
                  () => this._teardown(),
                ),
              ),
            ),
              m.closed && ((this._connection = null), (m = He.w0.EMPTY));
          }
          return m;
        }
        refCount() {
          return Be()(this);
        }
      }
      var lt = D(7579),
        bt = D(6895),
        W = D(4004),
        se = D(3900),
        ie = D(5698),
        X = D(8675),
        Ae = D(9300),
        Qe = D(5577);
      function ut(f) {
        return (0, ct.e)((m, d) => {
          let C = !1;
          m.subscribe(
            (0, vt.x)(
              d,
              O => {
                (C = !0), d.next(O);
              },
              () => {
                C || d.next(f), d.complete();
              },
            ),
          );
        });
      }
      function Ut(f = Et) {
        return (0, ct.e)((m, d) => {
          let C = !1;
          m.subscribe(
            (0, vt.x)(
              d,
              O => {
                (C = !0), d.next(O);
              },
              () => (C ? d.complete() : d.error(f())),
            ),
          );
        });
      }
      function Et() {
        return new de();
      }
      var Yt = D(4671);
      function Mt(f, m) {
        const d = arguments.length >= 2;
        return C =>
          C.pipe(
            f ? (0, Ae.h)((O, U) => f(O, U, C)) : Yt.y,
            (0, ie.q)(1),
            d ? ut(m) : Ut(() => new de()),
          );
      }
      var $e = D(4351),
        ze = D(8505),
        be = D(262),
        Ue = D(5026);
      function Ce(f) {
        return f <= 0
          ? () => Ne.E
          : (0, ct.e)((m, d) => {
              let C = [];
              m.subscribe(
                (0, vt.x)(
                  d,
                  O => {
                    C.push(O), f < C.length && C.shift();
                  },
                  () => {
                    for (const O of C) d.next(O);
                    d.complete();
                  },
                  void 0,
                  () => {
                    C = null;
                  },
                ),
              );
            });
      }
      function Pe(f, m) {
        const d = arguments.length >= 2;
        return C =>
          C.pipe(
            f ? (0, Ae.h)((O, U) => f(O, U, C)) : Yt.y,
            Ce(1),
            d ? ut(m) : Ut(() => new de()),
          );
      }
      var Le = D(2529),
        Ye = D(9718),
        dt = D(8746),
        We = D(8189),
        Gt = D(1481);
      const mt = 'primary',
        nn = Symbol('RouteTitle');
      class a {
        constructor(m) {
          this.params = m || {};
        }
        has(m) {
          return Object.prototype.hasOwnProperty.call(this.params, m);
        }
        get(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d[0] : d;
          }
          return null;
        }
        getAll(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d : [d];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ft(f) {
        return new a(f);
      }
      function $t(f, m, d) {
        const C = d.path.split('/');
        if (
          C.length > f.length ||
          ('full' === d.pathMatch && (m.hasChildren() || C.length < f.length))
        )
          return null;
        const O = {};
        for (let U = 0; U < C.length; U++) {
          const K = C[U],
            Ve = f[U];
          if (K.startsWith(':')) O[K.substring(1)] = Ve;
          else if (K !== Ve.path) return null;
        }
        return { consumed: f.slice(0, C.length), posParams: O };
      }
      function pt(f, m) {
        const d = f ? Object.keys(f) : void 0,
          C = m ? Object.keys(m) : void 0;
        if (!d || !C || d.length != C.length) return !1;
        let O;
        for (let U = 0; U < d.length; U++)
          if (((O = d[U]), !Wt(f[O], m[O]))) return !1;
        return !0;
      }
      function Wt(f, m) {
        if (Array.isArray(f) && Array.isArray(m)) {
          if (f.length !== m.length) return !1;
          const d = [...f].sort(),
            C = [...m].sort();
          return d.every((O, U) => C[U] === O);
        }
        return f === m;
      }
      function pn(f) {
        return Array.prototype.concat.apply([], f);
      }
      function Sn(f) {
        return f.length > 0 ? f[f.length - 1] : null;
      }
      function dn(f, m) {
        for (const d in f) f.hasOwnProperty(d) && m(f[d], d);
      }
      function kt(f) {
        return (0, s.CqO)(f)
          ? f
          : (0, s.QGY)(f)
          ? (0, x.D)(Promise.resolve(f))
          : (0, L.of)(f);
      }
      const En = !1,
        at = {
          exact: function je(f, m, d) {
            if (
              !wt(f.segments, m.segments) ||
              !ke(f.segments, m.segments, d) ||
              f.numberOfChildren !== m.numberOfChildren
            )
              return !1;
            for (const C in m.children)
              if (!f.children[C] || !je(f.children[C], m.children[C], d))
                return !1;
            return !0;
          },
          subset: ye,
        },
        Y = {
          exact: function Me(f, m) {
            return pt(f, m);
          },
          subset: function De(f, m) {
            return (
              Object.keys(m).length <= Object.keys(f).length &&
              Object.keys(m).every(d => Wt(f[d], m[d]))
            );
          },
          ignored: () => !0,
        };
      function ee(f, m, d) {
        return (
          at[d.paths](f.root, m.root, d.matrixParams) &&
          Y[d.queryParams](f.queryParams, m.queryParams) &&
          !('exact' === d.fragment && f.fragment !== m.fragment)
        );
      }
      function ye(f, m, d) {
        return H(f, m, m.segments, d);
      }
      function H(f, m, d, C) {
        if (f.segments.length > d.length) {
          const O = f.segments.slice(0, d.length);
          return !(!wt(O, d) || m.hasChildren() || !ke(O, d, C));
        }
        if (f.segments.length === d.length) {
          if (!wt(f.segments, d) || !ke(f.segments, d, C)) return !1;
          for (const O in m.children)
            if (!f.children[O] || !ye(f.children[O], m.children[O], C))
              return !1;
          return !0;
        }
        {
          const O = d.slice(0, f.segments.length),
            U = d.slice(f.segments.length);
          return (
            !!(wt(f.segments, O) && ke(f.segments, O, C) && f.children[mt]) &&
            H(f.children[mt], m, U, C)
          );
        }
      }
      function ke(f, m, d) {
        return m.every((C, O) => Y[d](f[O].parameters, C.parameters));
      }
      class he {
        constructor(m = new ge([], {}), d = {}, C = null) {
          (this.root = m), (this.queryParams = d), (this.fragment = C);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ft(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return yt.serialize(this);
        }
      }
      class ge {
        constructor(m, d) {
          (this.segments = m),
            (this.children = d),
            (this.parent = null),
            dn(d, (C, O) => (C.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Je(this);
        }
      }
      class pe {
        constructor(m, d) {
          (this.path = m), (this.parameters = d);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ft(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Xe(this);
        }
      }
      function wt(f, m) {
        return f.length === m.length && f.every((d, C) => d.path === m[C].path);
      }
      let Dn = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({
            token: f,
            factory: function () {
              return new Oe();
            },
            providedIn: 'root',
          })),
          f
        );
      })();
      class Oe {
        parse(m) {
          const d = new we(m);
          return new he(
            d.parseRootSegment(),
            d.parseQueryParams(),
            d.parseFragment(),
          );
        }
        serialize(m) {
          const d = `/${At(m.root, !0)}`,
            C = (function rn(f) {
              const m = Object.keys(f)
                .map(d => {
                  const C = f[d];
                  return Array.isArray(C)
                    ? C.map(O => `${F(d)}=${F(O)}`).join('&')
                    : `${F(d)}=${F(C)}`;
                })
                .filter(d => !!d);
              return m.length ? `?${m.join('&')}` : '';
            })(m.queryParams);
          return `${d}${C}${
            'string' == typeof m.fragment
              ? `#${(function b(f) {
                  return encodeURI(f);
                })(m.fragment)}`
              : ''
          }`;
        }
      }
      const yt = new Oe();
      function Je(f) {
        return f.segments.map(m => Xe(m)).join('/');
      }
      function At(f, m) {
        if (!f.hasChildren()) return Je(f);
        if (m) {
          const d = f.children[mt] ? At(f.children[mt], !1) : '',
            C = [];
          return (
            dn(f.children, (O, U) => {
              U !== mt && C.push(`${U}:${At(O, !1)}`);
            }),
            C.length > 0 ? `${d}(${C.join('//')})` : d
          );
        }
        {
          const d = (function Ot(f, m) {
            let d = [];
            return (
              dn(f.children, (C, O) => {
                O === mt && (d = d.concat(m(C, O)));
              }),
              dn(f.children, (C, O) => {
                O !== mt && (d = d.concat(m(C, O)));
              }),
              d
            );
          })(f, (C, O) =>
            O === mt ? [At(f.children[mt], !1)] : [`${O}:${At(C, !1)}`],
          );
          return 1 === Object.keys(f.children).length && null != f.children[mt]
            ? `${Je(f)}/${d[0]}`
            : `${Je(f)}/(${d.join('//')})`;
        }
      }
      function Te(f) {
        return encodeURIComponent(f)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function F(f) {
        return Te(f).replace(/%3B/gi, ';');
      }
      function M(f) {
        return Te(f)
          .replace(/\(/g, '%28')
          .replace(/\)/g, '%29')
          .replace(/%26/gi, '&');
      }
      function G(f) {
        return decodeURIComponent(f);
      }
      function Q(f) {
        return G(f.replace(/\+/g, '%20'));
      }
      function Xe(f) {
        return `${M(f.path)}${(function St(f) {
          return Object.keys(f)
            .map(m => `;${M(m)}=${M(f[m])}`)
            .join('');
        })(f.parameters)}`;
      }
      const Rt = /^[^\/()?;=#]+/;
      function tt(f) {
        const m = f.match(Rt);
        return m ? m[0] : '';
      }
      const Kt = /^[^=?&#]+/,
        xe = /^[^&#]+/;
      class we {
        constructor(m) {
          (this.url = m), (this.remaining = m);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining ||
            this.peekStartsWith('?') ||
            this.peekStartsWith('#')
              ? new ge([], {})
              : new ge([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const m = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(m);
            } while (this.consumeOptional('&'));
          return m;
        }
        parseFragment() {
          return this.consumeOptional('#')
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const m = [];
          for (
            this.peekStartsWith('(') || m.push(this.parseSegment());
            this.peekStartsWith('/') &&
            !this.peekStartsWith('//') &&
            !this.peekStartsWith('/(');

          )
            this.capture('/'), m.push(this.parseSegment());
          let d = {};
          this.peekStartsWith('/(') &&
            (this.capture('/'), (d = this.parseParens(!0)));
          let C = {};
          return (
            this.peekStartsWith('(') && (C = this.parseParens(!1)),
            (m.length > 0 || Object.keys(d).length > 0) &&
              (C[mt] = new ge(m, d)),
            C
          );
        }
        parseSegment() {
          const m = tt(this.remaining);
          if ('' === m && this.peekStartsWith(';')) throw new s.vHH(4009, En);
          return this.capture(m), new pe(G(m), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const m = {};
          for (; this.consumeOptional(';'); ) this.parseParam(m);
          return m;
        }
        parseParam(m) {
          const d = tt(this.remaining);
          if (!d) return;
          this.capture(d);
          let C = '';
          if (this.consumeOptional('=')) {
            const O = tt(this.remaining);
            O && ((C = O), this.capture(C));
          }
          m[G(d)] = G(C);
        }
        parseQueryParam(m) {
          const d = (function Ie(f) {
            const m = f.match(Kt);
            return m ? m[0] : '';
          })(this.remaining);
          if (!d) return;
          this.capture(d);
          let C = '';
          if (this.consumeOptional('=')) {
            const K = (function Z(f) {
              const m = f.match(xe);
              return m ? m[0] : '';
            })(this.remaining);
            K && ((C = K), this.capture(C));
          }
          const O = Q(d),
            U = Q(C);
          if (m.hasOwnProperty(O)) {
            let K = m[O];
            Array.isArray(K) || ((K = [K]), (m[O] = K)), K.push(U);
          } else m[O] = U;
        }
        parseParens(m) {
          const d = {};
          for (
            this.capture('(');
            !this.consumeOptional(')') && this.remaining.length > 0;

          ) {
            const C = tt(this.remaining),
              O = this.remaining[C.length];
            if ('/' !== O && ')' !== O && ';' !== O) throw new s.vHH(4010, En);
            let U;
            C.indexOf(':') > -1
              ? ((U = C.slice(0, C.indexOf(':'))),
                this.capture(U),
                this.capture(':'))
              : m && (U = mt);
            const K = this.parseChildren();
            (d[U] = 1 === Object.keys(K).length ? K[mt] : new ge([], K)),
              this.consumeOptional('//');
          }
          return d;
        }
        peekStartsWith(m) {
          return this.remaining.startsWith(m);
        }
        consumeOptional(m) {
          return (
            !!this.peekStartsWith(m) &&
            ((this.remaining = this.remaining.substring(m.length)), !0)
          );
        }
        capture(m) {
          if (!this.consumeOptional(m)) throw new s.vHH(4011, En);
        }
      }
      function rt(f) {
        return f.segments.length > 0 ? new ge([], { [mt]: f }) : f;
      }
      function Bt(f) {
        const m = {};
        for (const C of Object.keys(f.children)) {
          const U = Bt(f.children[C]);
          (U.segments.length > 0 || U.hasChildren()) && (m[C] = U);
        }
        return (function qt(f) {
          if (1 === f.numberOfChildren && f.children[mt]) {
            const m = f.children[mt];
            return new ge(f.segments.concat(m.segments), m.children);
          }
          return f;
        })(new ge(f.segments, m));
      }
      function Cn(f) {
        return f instanceof he;
      }
      const Zn = !1;
      function Vr(f, m, d, C, O) {
        if (0 === d.length) return jt(m.root, m.root, m.root, C, O);
        const U = (function Kn(f) {
          if ('string' == typeof f[0] && 1 === f.length && '/' === f[0])
            return new gn(!0, 0, f);
          let m = 0,
            d = !1;
          const C = f.reduce((O, U, K) => {
            if ('object' == typeof U && null != U) {
              if (U.outlets) {
                const Ve = {};
                return (
                  dn(U.outlets, (xt, Xt) => {
                    Ve[Xt] = 'string' == typeof xt ? xt.split('/') : xt;
                  }),
                  [...O, { outlets: Ve }]
                );
              }
              if (U.segmentPath) return [...O, U.segmentPath];
            }
            return 'string' != typeof U
              ? [...O, U]
              : 0 === K
              ? (U.split('/').forEach((Ve, xt) => {
                  (0 == xt && '.' === Ve) ||
                    (0 == xt && '' === Ve
                      ? (d = !0)
                      : '..' === Ve
                      ? m++
                      : '' != Ve && O.push(Ve));
                }),
                O)
              : [...O, U];
          }, []);
          return new gn(d, m, C);
        })(d);
        return U.toRoot()
          ? jt(m.root, m.root, new ge([], {}), C, O)
          : (function K(xt) {
              const Xt = (function qr(f, m, d, C) {
                  if (f.isAbsolute) return new ei(m.root, !0, 0);
                  if (-1 === C) return new ei(d, d === m.root, 0);
                  return (function Vi(f, m, d) {
                    let C = f,
                      O = m,
                      U = d;
                    for (; U > O; ) {
                      if (((U -= O), (C = C.parent), !C))
                        throw new s.vHH(4005, Zn && "Invalid number of '../'");
                      O = C.segments.length;
                    }
                    return new ei(C, !1, O - U);
                  })(d, C + (Qn(f.commands[0]) ? 0 : 1), f.numberOfDoubleDots);
                })(U, m, f.snapshot?._urlSegment, xt),
                en = Xt.processChildren
                  ? zt(Xt.segmentGroup, Xt.index, U.commands)
                  : di(Xt.segmentGroup, Xt.index, U.commands);
              return jt(m.root, Xt.segmentGroup, en, C, O);
            })(f.snapshot?._lastPathIndex);
      }
      function Qn(f) {
        return (
          'object' == typeof f && null != f && !f.outlets && !f.segmentPath
        );
      }
      function $n(f) {
        return 'object' == typeof f && null != f && f.outlets;
      }
      function jt(f, m, d, C, O) {
        let K,
          U = {};
        C &&
          dn(C, (xt, Xt) => {
            U[Xt] = Array.isArray(xt) ? xt.map(en => `${en}`) : `${xt}`;
          }),
          (K = f === m ? d : vn(f, m, d));
        const Ve = rt(Bt(K));
        return new he(Ve, U, O);
      }
      function vn(f, m, d) {
        const C = {};
        return (
          dn(f.children, (O, U) => {
            C[U] = O === m ? d : vn(O, m, d);
          }),
          new ge(f.segments, C)
        );
      }
      class gn {
        constructor(m, d, C) {
          if (
            ((this.isAbsolute = m),
            (this.numberOfDoubleDots = d),
            (this.commands = C),
            m && C.length > 0 && Qn(C[0]))
          )
            throw new s.vHH(
              4003,
              Zn && 'Root segment cannot have matrix parameters',
            );
          const O = C.find($n);
          if (O && O !== Sn(C))
            throw new s.vHH(
              4004,
              Zn && '{outlets:{}} has to be the last command',
            );
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            '/' == this.commands[0]
          );
        }
      }
      class ei {
        constructor(m, d, C) {
          (this.segmentGroup = m), (this.processChildren = d), (this.index = C);
        }
      }
      function di(f, m, d) {
        if (
          (f || (f = new ge([], {})),
          0 === f.segments.length && f.hasChildren())
        )
          return zt(f, m, d);
        const C = (function un(f, m, d) {
            let C = 0,
              O = m;
            const U = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; O < f.segments.length; ) {
              if (C >= d.length) return U;
              const K = f.segments[O],
                Ve = d[C];
              if ($n(Ve)) break;
              const xt = `${Ve}`,
                Xt = C < d.length - 1 ? d[C + 1] : null;
              if (O > 0 && void 0 === xt) break;
              if (xt && Xt && 'object' == typeof Xt && void 0 === Xt.outlets) {
                if (!Xn(xt, Xt, K)) return U;
                C += 2;
              } else {
                if (!Xn(xt, {}, K)) return U;
                C++;
              }
              O++;
            }
            return { match: !0, pathIndex: O, commandIndex: C };
          })(f, m, d),
          O = d.slice(C.commandIndex);
        if (C.match && C.pathIndex < f.segments.length) {
          const U = new ge(f.segments.slice(0, C.pathIndex), {});
          return (
            (U.children[mt] = new ge(
              f.segments.slice(C.pathIndex),
              f.children,
            )),
            zt(U, 0, O)
          );
        }
        return C.match && 0 === O.length
          ? new ge(f.segments, {})
          : C.match && !f.hasChildren()
          ? Un(f, m, d)
          : C.match
          ? zt(f, 0, O)
          : Un(f, m, d);
      }
      function zt(f, m, d) {
        if (0 === d.length) return new ge(f.segments, {});
        {
          const C = (function ur(f) {
              return $n(f[0]) ? f[0].outlets : { [mt]: f };
            })(d),
            O = {};
          if (
            !C[mt] &&
            f.children[mt] &&
            1 === f.numberOfChildren &&
            0 === f.children[mt].segments.length
          ) {
            const U = zt(f.children[mt], m, d);
            return new ge(f.segments, U.children);
          }
          return (
            dn(C, (U, K) => {
              'string' == typeof U && (U = [U]),
                null !== U && (O[K] = di(f.children[K], m, U));
            }),
            dn(f.children, (U, K) => {
              void 0 === C[K] && (O[K] = U);
            }),
            new ge(f.segments, O)
          );
        }
      }
      function Un(f, m, d) {
        const C = f.segments.slice(0, m);
        let O = 0;
        for (; O < d.length; ) {
          const U = d[O];
          if ($n(U)) {
            const xt = ti(U.outlets);
            return new ge(C, xt);
          }
          if (0 === O && Qn(d[0])) {
            C.push(new pe(f.segments[m].path, ui(d[0]))), O++;
            continue;
          }
          const K = $n(U) ? U.outlets[mt] : `${U}`,
            Ve = O < d.length - 1 ? d[O + 1] : null;
          K && Ve && Qn(Ve)
            ? (C.push(new pe(K, ui(Ve))), (O += 2))
            : (C.push(new pe(K, {})), O++);
        }
        return new ge(C, {});
      }
      function ti(f) {
        const m = {};
        return (
          dn(f, (d, C) => {
            'string' == typeof d && (d = [d]),
              null !== d && (m[C] = Un(new ge([], {}), 0, d));
          }),
          m
        );
      }
      function ui(f) {
        const m = {};
        return dn(f, (d, C) => (m[C] = `${d}`)), m;
      }
      function Xn(f, m, d) {
        return f == d.path && pt(m, d.parameters);
      }
      const hi = 'imperative';
      class wn {
        constructor(m, d) {
          (this.id = m), (this.url = d);
        }
      }
      class Ti extends wn {
        constructor(m, d, C = 'imperative', O = null) {
          super(m, d),
            (this.type = 0),
            (this.navigationTrigger = C),
            (this.restoredState = O);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Ci extends wn {
        constructor(m, d, C) {
          super(m, d), (this.urlAfterRedirects = C), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class fn extends wn {
        constructor(m, d, C, O) {
          super(m, d), (this.reason = C), (this.code = O), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Ji extends wn {
        constructor(m, d, C, O) {
          super(m, d), (this.reason = C), (this.code = O), (this.type = 16);
        }
      }
      class Ki extends wn {
        constructor(m, d, C, O) {
          super(m, d), (this.error = C), (this.target = O), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class yr extends wn {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class xi extends wn {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ri extends wn {
        constructor(m, d, C, O, U) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.shouldActivate = U),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Pi extends wn {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Ni extends wn {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Li {
        constructor(m) {
          (this.route = m), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class hr {
        constructor(m) {
          (this.route = m), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class fr {
        constructor(m) {
          (this.snapshot = m), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Hn {
        constructor(m) {
          (this.snapshot = m), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Ui {
        constructor(m) {
          (this.snapshot = m), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Zi {
        constructor(m) {
          (this.snapshot = m), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Dr {
        constructor(m, d, C) {
          (this.routerEvent = m),
            (this.position = d),
            (this.anchor = C),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let Fn = (() => {
          class f {
            createUrlTree(d, C, O, U, K, Ve) {
              return Vr(d || C.root, O, U, K, Ve);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
            f
          );
        })(),
        Ge = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function (m) {
                return Fn.ɵfac(m);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class Se {
        constructor(m) {
          this._root = m;
        }
        get root() {
          return this._root.value;
        }
        parent(m) {
          const d = this.pathFromRoot(m);
          return d.length > 1 ? d[d.length - 2] : null;
        }
        children(m) {
          const d = Ke(m, this._root);
          return d ? d.children.map(C => C.value) : [];
        }
        firstChild(m) {
          const d = Ke(m, this._root);
          return d && d.children.length > 0 ? d.children[0].value : null;
        }
        siblings(m) {
          const d = Tt(m, this._root);
          return d.length < 2
            ? []
            : d[d.length - 2].children.map(O => O.value).filter(O => O !== m);
        }
        pathFromRoot(m) {
          return Tt(m, this._root).map(d => d.value);
        }
      }
      function Ke(f, m) {
        if (f === m.value) return m;
        for (const d of m.children) {
          const C = Ke(f, d);
          if (C) return C;
        }
        return null;
      }
      function Tt(f, m) {
        if (f === m.value) return [m];
        for (const d of m.children) {
          const C = Tt(f, d);
          if (C.length) return C.unshift(m), C;
        }
        return [];
      }
      class It {
        constructor(m, d) {
          (this.value = m), (this.children = d);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function hn(f) {
        const m = {};
        return f && f.children.forEach(d => (m[d.value.outlet] = d)), m;
      }
      class bn extends Se {
        constructor(m, d) {
          super(m), (this.snapshot = d), lo(this, m);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Pn(f, m) {
        const d = (function Jn(f, m) {
            const K = new or([], {}, {}, '', {}, mt, m, null, f.root, -1, {});
            return new Cr('', new It(K, []));
          })(f, m),
          C = new ne.X([new pe('', {})]),
          O = new ne.X({}),
          U = new ne.X({}),
          K = new ne.X({}),
          Ve = new ne.X(''),
          xt = new Nn(C, O, K, Ve, U, mt, m, d.root);
        return (xt.snapshot = d.root), new bn(new It(xt, []), d);
      }
      class Nn {
        constructor(m, d, C, O, U, K, Ve, xt) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = C),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = K),
            (this.component = Ve),
            (this.title =
              this.data?.pipe((0, W.U)(Xt => Xt[nn])) ?? (0, L.of)(void 0)),
            (this._futureSnapshot = xt);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, W.U)(m => ft(m)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, W.U)(m => ft(m)),
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function Ei(f, m = 'emptyOnly') {
        const d = f.pathFromRoot;
        let C = 0;
        if ('always' !== m)
          for (C = d.length - 1; C >= 1; ) {
            const O = d[C],
              U = d[C - 1];
            if (O.routeConfig && '' === O.routeConfig.path) C--;
            else {
              if (U.component) break;
              C--;
            }
          }
        return (function Ur(f) {
          return f.reduce(
            (m, d) => ({
              params: { ...m.params, ...d.params },
              data: { ...m.data, ...d.data },
              resolve: {
                ...d.data,
                ...m.resolve,
                ...d.routeConfig?.data,
                ...d._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} },
          );
        })(d.slice(C));
      }
      class or {
        get title() {
          return this.data?.[nn];
        }
        constructor(m, d, C, O, U, K, Ve, xt, Xt, en, Wn) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = C),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = K),
            (this.component = Ve),
            (this.routeConfig = xt),
            (this._urlSegment = Xt),
            (this._lastPathIndex = en),
            (this._resolve = Wn);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ft(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ft(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map(C => C.toString())
            .join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class Cr extends Se {
        constructor(m, d) {
          super(d), (this.url = m), lo(this, d);
        }
        toString() {
          return Fr(this._root);
        }
      }
      function lo(f, m) {
        (m.value._routerState = f), m.children.forEach(d => lo(f, d));
      }
      function Fr(f) {
        const m =
          f.children.length > 0 ? ` { ${f.children.map(Fr).join(', ')} } ` : '';
        return `${f.value}${m}`;
      }
      function Hr(f) {
        if (f.snapshot) {
          const m = f.snapshot,
            d = f._futureSnapshot;
          (f.snapshot = d),
            pt(m.queryParams, d.queryParams) ||
              f.queryParams.next(d.queryParams),
            m.fragment !== d.fragment && f.fragment.next(d.fragment),
            pt(m.params, d.params) || f.params.next(d.params),
            (function et(f, m) {
              if (f.length !== m.length) return !1;
              for (let d = 0; d < f.length; ++d) if (!pt(f[d], m[d])) return !1;
              return !0;
            })(m.url, d.url) || f.url.next(d.url),
            pt(m.data, d.data) || f.data.next(d.data);
        } else
          (f.snapshot = f._futureSnapshot), f.data.next(f._futureSnapshot.data);
      }
      function sr(f, m) {
        const d =
          pt(f.params, m.params) &&
          (function nt(f, m) {
            return (
              wt(f, m) && f.every((d, C) => pt(d.parameters, m[C].parameters))
            );
          })(f.url, m.url);
        return (
          d &&
          !(!f.parent != !m.parent) &&
          (!f.parent || sr(f.parent, m.parent))
        );
      }
      function Xr(f, m, d) {
        if (d && f.shouldReuseRoute(m.value, d.value.snapshot)) {
          const C = d.value;
          C._futureSnapshot = m.value;
          const O = (function xo(f, m, d) {
            return m.children.map(C => {
              for (const O of d.children)
                if (f.shouldReuseRoute(C.value, O.value.snapshot))
                  return Xr(f, C, O);
              return Xr(f, C);
            });
          })(f, m, d);
          return new It(C, O);
        }
        {
          if (f.shouldAttach(m.value)) {
            const U = f.retrieve(m.value);
            if (null !== U) {
              const K = U.route;
              return (
                (K.value._futureSnapshot = m.value),
                (K.children = m.children.map(Ve => Xr(f, Ve))),
                K
              );
            }
          }
          const C = (function Po(f) {
              return new Nn(
                new ne.X(f.url),
                new ne.X(f.params),
                new ne.X(f.queryParams),
                new ne.X(f.fragment),
                new ne.X(f.data),
                f.outlet,
                f.component,
                f,
              );
            })(m.value),
            O = m.children.map(U => Xr(f, U));
          return new It(C, O);
        }
      }
      const Pr = 'ngNavigationCancelingError';
      function xr(f, m) {
        const { redirectTo: d, navigationBehaviorOptions: C } = Cn(m)
            ? { redirectTo: m, navigationBehaviorOptions: void 0 }
            : m,
          O = Jr(!1, 0, m);
        return (O.url = d), (O.navigationBehaviorOptions = C), O;
      }
      function Jr(f, m, d) {
        const C = new Error('NavigationCancelingError: ' + (f || ''));
        return (C[Pr] = !0), (C.cancellationCode = m), d && (C.url = d), C;
      }
      function jr(f) {
        return co(f) && Cn(f.url);
      }
      function co(f) {
        return f && f[Pr];
      }
      class ar {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new qi()),
            (this.attachRef = null);
        }
      }
      let qi = (() => {
        class f {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(d, C) {
            const O = this.getOrCreateContext(d);
            (O.outlet = C), this.contexts.set(d, O);
          }
          onChildOutletDestroyed(d) {
            const C = this.getContext(d);
            C && ((C.outlet = null), (C.attachRef = null));
          }
          onOutletDeactivated() {
            const d = this.contexts;
            return (this.contexts = new Map()), d;
          }
          onOutletReAttached(d) {
            this.contexts = d;
          }
          getOrCreateContext(d) {
            let C = this.getContext(d);
            return C || ((C = new ar()), this.contexts.set(d, C)), C;
          }
          getContext(d) {
            return this.contexts.get(d) || null;
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const _i = !1;
      let Er = (() => {
        class f {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = mt),
              (this.activateEvents = new s.vpe()),
              (this.deactivateEvents = new s.vpe()),
              (this.attachEvents = new s.vpe()),
              (this.detachEvents = new s.vpe()),
              (this.parentContexts = (0, s.f3M)(qi)),
              (this.location = (0, s.f3M)(s.s_b)),
              (this.changeDetector = (0, s.f3M)(s.sBO)),
              (this.environmentInjector = (0, s.f3M)(s.lqb));
          }
          ngOnChanges(d) {
            if (d.name) {
              const { firstChange: C, previousValue: O } = d.name;
              if (C) return;
              this.isTrackedInParentContexts(O) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(O)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(d) {
            return this.parentContexts.getContext(d)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const d = this.parentContexts.getContext(this.name);
            d?.route &&
              (d.attachRef
                ? this.attach(d.attachRef, d.route)
                : this.activateWith(d.route, d.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new s.vHH(4012, _i);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new s.vHH(4012, _i);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new s.vHH(4012, _i);
            this.location.detach();
            const d = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(d.instance),
              d
            );
          }
          attach(d, C) {
            (this.activated = d),
              (this._activatedRoute = C),
              this.location.insert(d.hostView),
              this.attachEvents.emit(d.instance);
          }
          deactivate() {
            if (this.activated) {
              const d = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(d);
            }
          }
          activateWith(d, C) {
            if (this.isActivated) throw new s.vHH(4013, _i);
            this._activatedRoute = d;
            const O = this.location,
              K = d.snapshot.component,
              Ve = this.parentContexts.getOrCreateContext(this.name).children,
              xt = new pr(d, Ve, O.injector);
            if (
              C &&
              (function uo(f) {
                return !!f.resolveComponentFactory;
              })(C)
            ) {
              const Xt = C.resolveComponentFactory(K);
              this.activated = O.createComponent(Xt, O.length, xt);
            } else
              this.activated = O.createComponent(K, {
                index: O.length,
                injector: xt,
                environmentInjector: C ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵdir = s.lG2({
            type: f,
            selectors: [['router-outlet']],
            inputs: { name: 'name' },
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
            standalone: !0,
            features: [s.TTD],
          })),
          f
        );
      })();
      class pr {
        constructor(m, d, C) {
          (this.route = m), (this.childContexts = d), (this.parent = C);
        }
        get(m, d) {
          return m === Nn
            ? this.route
            : m === qi
            ? this.childContexts
            : this.parent.get(m, d);
        }
      }
      let zr = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵcmp = s.Xpm({
            type: f,
            selectors: [['ng-component']],
            standalone: !0,
            features: [s.jDz],
            decls: 1,
            vars: 0,
            template: function (d, C) {
              1 & d && s._UZ(0, 'router-outlet');
            },
            dependencies: [Er],
            encapsulation: 2,
          })),
          f
        );
      })();
      function wr(f, m) {
        return (
          f.providers &&
            !f._injector &&
            (f._injector = (0, s.MMx)(f.providers, m, `Route: ${f.path}`)),
          f._injector ?? m
        );
      }
      function oi(f) {
        const m = f.children && f.children.map(oi),
          d = m ? { ...f, children: m } : { ...f };
        return (
          !d.component &&
            !d.loadComponent &&
            (m || d.loadChildren) &&
            d.outlet &&
            d.outlet !== mt &&
            (d.component = zr),
          d
        );
      }
      function li(f) {
        return f.outlet || mt;
      }
      function vi(f, m) {
        const d = f.filter(C => li(C) === m);
        return d.push(...f.filter(C => li(C) !== m)), d;
      }
      function Yr(f) {
        if (!f) return null;
        if (f.routeConfig?._injector) return f.routeConfig._injector;
        for (let m = f.parent; m; m = m.parent) {
          const d = m.routeConfig;
          if (d?._loadedInjector) return d._loadedInjector;
          if (d?._injector) return d._injector;
        }
        return null;
      }
      class Mr {
        constructor(m, d, C, O) {
          (this.routeReuseStrategy = m),
            (this.futureState = d),
            (this.currState = C),
            (this.forwardEvent = O);
        }
        activate(m) {
          const d = this.futureState._root,
            C = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(d, C, m),
            Hr(this.futureState.root),
            this.activateChildRoutes(d, C, m);
        }
        deactivateChildRoutes(m, d, C) {
          const O = hn(d);
          m.children.forEach(U => {
            const K = U.value.outlet;
            this.deactivateRoutes(U, O[K], C), delete O[K];
          }),
            dn(O, (U, K) => {
              this.deactivateRouteAndItsChildren(U, C);
            });
        }
        deactivateRoutes(m, d, C) {
          const O = m.value,
            U = d ? d.value : null;
          if (O === U)
            if (O.component) {
              const K = C.getContext(O.outlet);
              K && this.deactivateChildRoutes(m, d, K.children);
            } else this.deactivateChildRoutes(m, d, C);
          else U && this.deactivateRouteAndItsChildren(d, C);
        }
        deactivateRouteAndItsChildren(m, d) {
          m.value.component &&
          this.routeReuseStrategy.shouldDetach(m.value.snapshot)
            ? this.detachAndStoreRouteSubtree(m, d)
            : this.deactivateRouteAndOutlet(m, d);
        }
        detachAndStoreRouteSubtree(m, d) {
          const C = d.getContext(m.value.outlet),
            O = C && m.value.component ? C.children : d,
            U = hn(m);
          for (const K of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[K], O);
          if (C && C.outlet) {
            const K = C.outlet.detach(),
              Ve = C.children.onOutletDeactivated();
            this.routeReuseStrategy.store(m.value.snapshot, {
              componentRef: K,
              route: m,
              contexts: Ve,
            });
          }
        }
        deactivateRouteAndOutlet(m, d) {
          const C = d.getContext(m.value.outlet),
            O = C && m.value.component ? C.children : d,
            U = hn(m);
          for (const K of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[K], O);
          C &&
            (C.outlet &&
              (C.outlet.deactivate(), C.children.onOutletDeactivated()),
            (C.attachRef = null),
            (C.resolver = null),
            (C.route = null));
        }
        activateChildRoutes(m, d, C) {
          const O = hn(d);
          m.children.forEach(U => {
            this.activateRoutes(U, O[U.value.outlet], C),
              this.forwardEvent(new Zi(U.value.snapshot));
          }),
            m.children.length && this.forwardEvent(new Hn(m.value.snapshot));
        }
        activateRoutes(m, d, C) {
          const O = m.value,
            U = d ? d.value : null;
          if ((Hr(O), O === U))
            if (O.component) {
              const K = C.getOrCreateContext(O.outlet);
              this.activateChildRoutes(m, d, K.children);
            } else this.activateChildRoutes(m, d, C);
          else if (O.component) {
            const K = C.getOrCreateContext(O.outlet);
            if (this.routeReuseStrategy.shouldAttach(O.snapshot)) {
              const Ve = this.routeReuseStrategy.retrieve(O.snapshot);
              this.routeReuseStrategy.store(O.snapshot, null),
                K.children.onOutletReAttached(Ve.contexts),
                (K.attachRef = Ve.componentRef),
                (K.route = Ve.route.value),
                K.outlet && K.outlet.attach(Ve.componentRef, Ve.route.value),
                Hr(Ve.route.value),
                this.activateChildRoutes(m, null, K.children);
            } else {
              const Ve = Yr(O.snapshot),
                xt = Ve?.get(s._Vd) ?? null;
              (K.attachRef = null),
                (K.route = O),
                (K.resolver = xt),
                (K.injector = Ve),
                K.outlet && K.outlet.activateWith(O, K.injector),
                this.activateChildRoutes(m, null, K.children);
            }
          } else this.activateChildRoutes(m, null, C);
        }
      }
      class ni {
        constructor(m) {
          (this.path = m), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ar {
        constructor(m, d) {
          (this.component = m), (this.route = d);
        }
      }
      function Hi(f, m, d) {
        const C = f._root;
        return Nr(C, m ? m._root : null, d, [C.value]);
      }
      function Bi(f, m) {
        const d = Symbol(),
          C = m.get(f, d);
        return C === d
          ? 'function' != typeof f || (0, s.Z0I)(f)
            ? m.get(f)
            : f
          : C;
      }
      function Nr(
        f,
        m,
        d,
        C,
        O = { canDeactivateChecks: [], canActivateChecks: [] },
      ) {
        const U = hn(m);
        return (
          f.children.forEach(K => {
            (function no(
              f,
              m,
              d,
              C,
              O = { canDeactivateChecks: [], canActivateChecks: [] },
            ) {
              const U = f.value,
                K = m ? m.value : null,
                Ve = d ? d.getContext(f.value.outlet) : null;
              if (K && U.routeConfig === K.routeConfig) {
                const xt = (function _n(f, m, d) {
                  if ('function' == typeof d) return d(f, m);
                  switch (d) {
                    case 'pathParamsChange':
                      return !wt(f.url, m.url);
                    case 'pathParamsOrQueryParamsChange':
                      return (
                        !wt(f.url, m.url) || !pt(f.queryParams, m.queryParams)
                      );
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !sr(f, m) || !pt(f.queryParams, m.queryParams);
                    default:
                      return !sr(f, m);
                  }
                })(K, U, U.routeConfig.runGuardsAndResolvers);
                xt
                  ? O.canActivateChecks.push(new ni(C))
                  : ((U.data = K.data), (U._resolvedData = K._resolvedData)),
                  Nr(f, m, U.component ? (Ve ? Ve.children : null) : d, C, O),
                  xt &&
                    Ve &&
                    Ve.outlet &&
                    Ve.outlet.isActivated &&
                    O.canDeactivateChecks.push(new Ar(Ve.outlet.component, K));
              } else
                K && gr(m, Ve, O),
                  O.canActivateChecks.push(new ni(C)),
                  Nr(
                    f,
                    null,
                    U.component ? (Ve ? Ve.children : null) : d,
                    C,
                    O,
                  );
            })(K, U[K.value.outlet], d, C.concat([K.value]), O),
              delete U[K.value.outlet];
          }),
          dn(U, (K, Ve) => gr(K, d.getContext(Ve), O)),
          O
        );
      }
      function gr(f, m, d) {
        const C = hn(f),
          O = f.value;
        dn(C, (U, K) => {
          gr(U, O.component ? (m ? m.children.getContext(K) : null) : m, d);
        }),
          d.canDeactivateChecks.push(
            new Ar(
              O.component && m && m.outlet && m.outlet.isActivated
                ? m.outlet.component
                : null,
              O,
            ),
          );
      }
      function T(f) {
        return 'function' == typeof f;
      }
      function Lr(f) {
        return f instanceof de || 'EmptyError' === f?.name;
      }
      const fo = Symbol('INITIAL_VALUE');
      function ci() {
        return (0, se.w)(f =>
          (0, ve.a)(f.map(m => m.pipe((0, ie.q)(1), (0, X.O)(fo)))).pipe(
            (0, W.U)(m => {
              for (const d of m)
                if (!0 !== d) {
                  if (d === fo) return fo;
                  if (!1 === d || d instanceof he) return d;
                }
              return !0;
            }),
            (0, Ae.h)(m => m !== fo),
            (0, ie.q)(1),
          ),
        );
      }
      function ji(f) {
        return (0, le.z)(
          (0, ze.b)(m => {
            if (Cn(m)) throw xr(0, m);
          }),
          (0, W.U)(m => !0 === m),
        );
      }
      const _r = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function cr(f, m, d, C, O) {
        const U = bi(f, m, d);
        return U.matched
          ? (function Ir(f, m, d, C) {
              const O = m.canMatch;
              if (!O || 0 === O.length) return (0, L.of)(!0);
              const U = O.map(K => {
                const Ve = Bi(K, f);
                return kt(
                  (function si(f) {
                    return f && T(f.canMatch);
                  })(Ve)
                    ? Ve.canMatch(m, d)
                    : f.runInContext(() => Ve(m, d)),
                );
              });
              return (0, L.of)(U).pipe(ci(), ji());
            })((C = wr(m, C)), m, d).pipe(
              (0, W.U)(K => (!0 === K ? U : { ..._r })),
            )
          : (0, L.of)(U);
      }
      function bi(f, m, d) {
        if ('' === m.path)
          return 'full' === m.pathMatch && (f.hasChildren() || d.length > 0)
            ? { ..._r }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: d,
                parameters: {},
                positionalParamSegments: {},
              };
        const O = (m.matcher || $t)(d, f, m);
        if (!O) return { ..._r };
        const U = {};
        dn(O.posParams, (Ve, xt) => {
          U[xt] = Ve.path;
        });
        const K =
          O.consumed.length > 0
            ? { ...U, ...O.consumed[O.consumed.length - 1].parameters }
            : U;
        return {
          matched: !0,
          consumedSegments: O.consumed,
          remainingSegments: d.slice(O.consumed.length),
          parameters: K,
          positionalParamSegments: O.posParams ?? {},
        };
      }
      function Yi(f, m, d, C) {
        if (
          d.length > 0 &&
          (function po(f, m, d) {
            return d.some(C => mo(f, m, C) && li(C) !== mt);
          })(f, d, C)
        ) {
          const U = new ge(
            m,
            (function ds(f, m, d, C) {
              const O = {};
              (O[mt] = C),
                (C._sourceSegment = f),
                (C._segmentIndexShift = m.length);
              for (const U of d)
                if ('' === U.path && li(U) !== mt) {
                  const K = new ge([], {});
                  (K._sourceSegment = f),
                    (K._segmentIndexShift = m.length),
                    (O[li(U)] = K);
                }
              return O;
            })(f, m, C, new ge(d, f.children)),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: [] }
          );
        }
        if (
          0 === d.length &&
          (function oo(f, m, d) {
            return d.some(C => mo(f, m, C));
          })(f, d, C)
        ) {
          const U = new ge(
            f.segments,
            (function cs(f, m, d, C, O) {
              const U = {};
              for (const K of C)
                if (mo(f, d, K) && !O[li(K)]) {
                  const Ve = new ge([], {});
                  (Ve._sourceSegment = f),
                    (Ve._segmentIndexShift = m.length),
                    (U[li(K)] = Ve);
                }
              return { ...O, ...U };
            })(f, m, d, C, f.children),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: d }
          );
        }
        const O = new ge(f.segments, f.children);
        return (
          (O._sourceSegment = f),
          (O._segmentIndexShift = m.length),
          { segmentGroup: O, slicedSegments: d }
        );
      }
      function mo(f, m, d) {
        return (
          (!(f.hasChildren() || m.length > 0) || 'full' !== d.pathMatch) &&
          '' === d.path
        );
      }
      function No(f, m, d, C) {
        return (
          !!(li(f) === C || (C !== mt && mo(m, d, f))) &&
          ('**' === f.path || bi(m, f, d).matched)
        );
      }
      function B(f, m, d) {
        return 0 === m.length && !f.children[d];
      }
      const h = !1;
      class p {
        constructor(m) {
          this.segmentGroup = m || null;
        }
      }
      class S {
        constructor(m) {
          this.urlTree = m;
        }
      }
      function V(f) {
        return (0, fe._)(new p(f));
      }
      function q(f) {
        return (0, fe._)(new S(f));
      }
      class gt {
        constructor(m, d, C, O, U) {
          (this.injector = m),
            (this.configLoader = d),
            (this.urlSerializer = C),
            (this.urlTree = O),
            (this.config = U),
            (this.allowRedirects = !0);
        }
        apply() {
          const m = Yi(this.urlTree.root, [], [], this.config).segmentGroup,
            d = new ge(m.segments, m.children);
          return this.expandSegmentGroup(this.injector, this.config, d, mt)
            .pipe(
              (0, W.U)(U =>
                this.createUrlTree(
                  Bt(U),
                  this.urlTree.queryParams,
                  this.urlTree.fragment,
                ),
              ),
            )
            .pipe(
              (0, be.K)(U => {
                if (U instanceof S)
                  return (this.allowRedirects = !1), this.match(U.urlTree);
                throw U instanceof p ? this.noMatchError(U) : U;
              }),
            );
        }
        match(m) {
          return this.expandSegmentGroup(this.injector, this.config, m.root, mt)
            .pipe(
              (0, W.U)(O =>
                this.createUrlTree(Bt(O), m.queryParams, m.fragment),
              ),
            )
            .pipe(
              (0, be.K)(O => {
                throw O instanceof p ? this.noMatchError(O) : O;
              }),
            );
        }
        noMatchError(m) {
          return new s.vHH(4002, h);
        }
        createUrlTree(m, d, C) {
          const O = rt(m);
          return new he(O, d, C);
        }
        expandSegmentGroup(m, d, C, O) {
          return 0 === C.segments.length && C.hasChildren()
            ? this.expandChildren(m, d, C).pipe((0, W.U)(U => new ge([], U)))
            : this.expandSegment(m, C, d, C.segments, O, !0);
        }
        expandChildren(m, d, C) {
          const O = [];
          for (const U of Object.keys(C.children))
            'primary' === U ? O.unshift(U) : O.push(U);
          return (0, x.D)(O).pipe(
            (0, $e.b)(U => {
              const K = C.children[U],
                Ve = vi(d, U);
              return this.expandSegmentGroup(m, Ve, K, U).pipe(
                (0, W.U)(xt => ({ segment: xt, outlet: U })),
              );
            }),
            (0, Ue.R)((U, K) => ((U[K.outlet] = K.segment), U), {}),
            Pe(),
          );
        }
        expandSegment(m, d, C, O, U, K) {
          return (0, x.D)(C).pipe(
            (0, $e.b)(Ve =>
              this.expandSegmentAgainstRoute(m, d, C, Ve, O, U, K).pipe(
                (0, be.K)(Xt => {
                  if (Xt instanceof p) return (0, L.of)(null);
                  throw Xt;
                }),
              ),
            ),
            Mt(Ve => !!Ve),
            (0, be.K)((Ve, xt) => {
              if (Lr(Ve)) return B(d, O, U) ? (0, L.of)(new ge([], {})) : V(d);
              throw Ve;
            }),
          );
        }
        expandSegmentAgainstRoute(m, d, C, O, U, K, Ve) {
          return No(O, d, U, K)
            ? void 0 === O.redirectTo
              ? this.matchSegmentAgainstRoute(m, d, O, U, K)
              : Ve && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(m, d, C, O, U, K)
              : V(d)
            : V(d);
        }
        expandSegmentAgainstRouteUsingRedirect(m, d, C, O, U, K) {
          return '**' === O.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(m, C, O, K)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                m,
                d,
                C,
                O,
                U,
                K,
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(m, d, C, O) {
          const U = this.applyRedirectCommands([], C.redirectTo, {});
          return C.redirectTo.startsWith('/')
            ? q(U)
            : this.lineralizeSegments(C, U).pipe(
                (0, Qe.z)(K => {
                  const Ve = new ge(K, {});
                  return this.expandSegment(m, Ve, d, K, O, !1);
                }),
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(m, d, C, O, U, K) {
          const {
            matched: Ve,
            consumedSegments: xt,
            remainingSegments: Xt,
            positionalParamSegments: en,
          } = bi(d, O, U);
          if (!Ve) return V(d);
          const Wn = this.applyRedirectCommands(xt, O.redirectTo, en);
          return O.redirectTo.startsWith('/')
            ? q(Wn)
            : this.lineralizeSegments(O, Wn).pipe(
                (0, Qe.z)(zi =>
                  this.expandSegment(m, d, C, zi.concat(Xt), K, !1),
                ),
              );
        }
        matchSegmentAgainstRoute(m, d, C, O, U) {
          return '**' === C.path
            ? ((m = wr(C, m)),
              C.loadChildren
                ? (C._loadedRoutes
                    ? (0, L.of)({
                        routes: C._loadedRoutes,
                        injector: C._loadedInjector,
                      })
                    : this.configLoader.loadChildren(m, C)
                  ).pipe(
                    (0, W.U)(
                      Ve => (
                        (C._loadedRoutes = Ve.routes),
                        (C._loadedInjector = Ve.injector),
                        new ge(O, {})
                      ),
                    ),
                  )
                : (0, L.of)(new ge(O, {})))
            : cr(d, C, O, m).pipe(
                (0, se.w)(
                  ({
                    matched: K,
                    consumedSegments: Ve,
                    remainingSegments: xt,
                  }) =>
                    K
                      ? this.getChildConfig((m = C._injector ?? m), C, O).pipe(
                          (0, Qe.z)(en => {
                            const Wn = en.injector ?? m,
                              zi = en.routes,
                              { segmentGroup: _o, slicedSegments: so } = Yi(
                                d,
                                Ve,
                                xt,
                                zi,
                              ),
                              vo = new ge(_o.segments, _o.children);
                            if (0 === so.length && vo.hasChildren())
                              return this.expandChildren(Wn, zi, vo).pipe(
                                (0, W.U)(es => new ge(Ve, es)),
                              );
                            if (0 === zi.length && 0 === so.length)
                              return (0, L.of)(new ge(Ve, {}));
                            const br = li(C) === U;
                            return this.expandSegment(
                              Wn,
                              vo,
                              zi,
                              so,
                              br ? mt : U,
                              !0,
                            ).pipe(
                              (0, W.U)(
                                Ho =>
                                  new ge(Ve.concat(Ho.segments), Ho.children),
                              ),
                            );
                          }),
                        )
                      : V(d),
                ),
              );
        }
        getChildConfig(m, d, C) {
          return d.children
            ? (0, L.of)({ routes: d.children, injector: m })
            : d.loadChildren
            ? void 0 !== d._loadedRoutes
              ? (0, L.of)({
                  routes: d._loadedRoutes,
                  injector: d._loadedInjector,
                })
              : (function Oi(f, m, d, C) {
                  const O = m.canLoad;
                  if (void 0 === O || 0 === O.length) return (0, L.of)(!0);
                  const U = O.map(K => {
                    const Ve = Bi(K, f);
                    return kt(
                      (function w(f) {
                        return f && T(f.canLoad);
                      })(Ve)
                        ? Ve.canLoad(m, d)
                        : f.runInContext(() => Ve(m, d)),
                    );
                  });
                  return (0, L.of)(U).pipe(ci(), ji());
                })(m, d, C).pipe(
                  (0, Qe.z)(O =>
                    O
                      ? this.configLoader.loadChildren(m, d).pipe(
                          (0, ze.b)(U => {
                            (d._loadedRoutes = U.routes),
                              (d._loadedInjector = U.injector);
                          }),
                        )
                      : (function Ee(f) {
                          return (0, fe._)(Jr(h, 3));
                        })(),
                  ),
                )
            : (0, L.of)({ routes: [], injector: m });
        }
        lineralizeSegments(m, d) {
          let C = [],
            O = d.root;
          for (;;) {
            if (((C = C.concat(O.segments)), 0 === O.numberOfChildren))
              return (0, L.of)(C);
            if (O.numberOfChildren > 1 || !O.children[mt])
              return m.redirectTo, (0, fe._)(new s.vHH(4e3, h));
            O = O.children[mt];
          }
        }
        applyRedirectCommands(m, d, C) {
          return this.applyRedirectCreateUrlTree(
            d,
            this.urlSerializer.parse(d),
            m,
            C,
          );
        }
        applyRedirectCreateUrlTree(m, d, C, O) {
          const U = this.createSegmentGroup(m, d.root, C, O);
          return new he(
            U,
            this.createQueryParams(d.queryParams, this.urlTree.queryParams),
            d.fragment,
          );
        }
        createQueryParams(m, d) {
          const C = {};
          return (
            dn(m, (O, U) => {
              if ('string' == typeof O && O.startsWith(':')) {
                const Ve = O.substring(1);
                C[U] = d[Ve];
              } else C[U] = O;
            }),
            C
          );
        }
        createSegmentGroup(m, d, C, O) {
          const U = this.createSegments(m, d.segments, C, O);
          let K = {};
          return (
            dn(d.children, (Ve, xt) => {
              K[xt] = this.createSegmentGroup(m, Ve, C, O);
            }),
            new ge(U, K)
          );
        }
        createSegments(m, d, C, O) {
          return d.map(U =>
            U.path.startsWith(':')
              ? this.findPosParam(m, U, O)
              : this.findOrReturn(U, C),
          );
        }
        findPosParam(m, d, C) {
          const O = C[d.path.substring(1)];
          if (!O) throw new s.vHH(4001, h);
          return O;
        }
        findOrReturn(m, d) {
          let C = 0;
          for (const O of d) {
            if (O.path === m.path) return d.splice(C), O;
            C++;
          }
          return m;
        }
      }
      class ln {}
      class yn {
        constructor(m, d, C, O, U, K, Ve) {
          (this.injector = m),
            (this.rootComponentType = d),
            (this.config = C),
            (this.urlTree = O),
            (this.url = U),
            (this.paramsInheritanceStrategy = K),
            (this.urlSerializer = Ve);
        }
        recognize() {
          const m = Yi(
            this.urlTree.root,
            [],
            [],
            this.config.filter(d => void 0 === d.redirectTo),
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            m,
            mt,
          ).pipe(
            (0, W.U)(d => {
              if (null === d) return null;
              const C = new or(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  mt,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {},
                ),
                O = new It(C, d),
                U = new Cr(this.url, O);
              return this.inheritParamsAndData(U._root), U;
            }),
          );
        }
        inheritParamsAndData(m) {
          const d = m.value,
            C = Ei(d, this.paramsInheritanceStrategy);
          (d.params = Object.freeze(C.params)),
            (d.data = Object.freeze(C.data)),
            m.children.forEach(O => this.inheritParamsAndData(O));
        }
        processSegmentGroup(m, d, C, O) {
          return 0 === C.segments.length && C.hasChildren()
            ? this.processChildren(m, d, C)
            : this.processSegment(m, d, C, C.segments, O);
        }
        processChildren(m, d, C) {
          return (0, x.D)(Object.keys(C.children)).pipe(
            (0, $e.b)(O => {
              const U = C.children[O],
                K = vi(d, O);
              return this.processSegmentGroup(m, K, U, O);
            }),
            (0, Ue.R)((O, U) => (O && U ? (O.push(...U), O) : null)),
            (0, Le.o)(O => null !== O),
            ut(null),
            Pe(),
            (0, W.U)(O => {
              if (null === O) return null;
              const U = fi(O);
              return (
                (function jn(f) {
                  f.sort((m, d) =>
                    m.value.outlet === mt
                      ? -1
                      : d.value.outlet === mt
                      ? 1
                      : m.value.outlet.localeCompare(d.value.outlet),
                  );
                })(U),
                U
              );
            }),
          );
        }
        processSegment(m, d, C, O, U) {
          return (0, x.D)(d).pipe(
            (0, $e.b)(K =>
              this.processSegmentAgainstRoute(K._injector ?? m, K, C, O, U),
            ),
            Mt(K => !!K),
            (0, be.K)(K => {
              if (Lr(K)) return B(C, O, U) ? (0, L.of)([]) : (0, L.of)(null);
              throw K;
            }),
          );
        }
        processSegmentAgainstRoute(m, d, C, O, U) {
          if (d.redirectTo || !No(d, C, O, U)) return (0, L.of)(null);
          let K;
          if ('**' === d.path) {
            const Ve = O.length > 0 ? Sn(O).parameters : {},
              xt = y(C) + O.length,
              Xt = new or(
                O,
                Ve,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                A(d),
                li(d),
                d.component ?? d._loadedComponent ?? null,
                d,
                vr(C),
                xt,
                j(d),
              );
            K = (0, L.of)({
              snapshot: Xt,
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            K = cr(C, d, O, m).pipe(
              (0, W.U)(
                ({
                  matched: Ve,
                  consumedSegments: xt,
                  remainingSegments: Xt,
                  parameters: en,
                }) => {
                  if (!Ve) return null;
                  const Wn = y(C) + xt.length;
                  return {
                    snapshot: new or(
                      xt,
                      en,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      A(d),
                      li(d),
                      d.component ?? d._loadedComponent ?? null,
                      d,
                      vr(C),
                      Wn,
                      j(d),
                    ),
                    consumedSegments: xt,
                    remainingSegments: Xt,
                  };
                },
              ),
            );
          return K.pipe(
            (0, se.w)(Ve => {
              if (null === Ve) return (0, L.of)(null);
              const {
                snapshot: xt,
                consumedSegments: Xt,
                remainingSegments: en,
              } = Ve;
              m = d._injector ?? m;
              const Wn = d._loadedInjector ?? m,
                zi = (function qn(f) {
                  return f.children
                    ? f.children
                    : f.loadChildren
                    ? f._loadedRoutes
                    : [];
                })(d),
                { segmentGroup: _o, slicedSegments: so } = Yi(
                  C,
                  Xt,
                  en,
                  zi.filter(br => void 0 === br.redirectTo),
                );
              if (0 === so.length && _o.hasChildren())
                return this.processChildren(Wn, zi, _o).pipe(
                  (0, W.U)(br => (null === br ? null : [new It(xt, br)])),
                );
              if (0 === zi.length && 0 === so.length)
                return (0, L.of)([new It(xt, [])]);
              const vo = li(d) === U;
              return this.processSegment(Wn, zi, _o, so, vo ? mt : U).pipe(
                (0, W.U)(br => (null === br ? null : [new It(xt, br)])),
              );
            }),
          );
        }
      }
      function Mi(f) {
        const m = f.value.routeConfig;
        return m && '' === m.path && void 0 === m.redirectTo;
      }
      function fi(f) {
        const m = [],
          d = new Set();
        for (const C of f) {
          if (!Mi(C)) {
            m.push(C);
            continue;
          }
          const O = m.find(U => C.value.routeConfig === U.value.routeConfig);
          void 0 !== O ? (O.children.push(...C.children), d.add(O)) : m.push(C);
        }
        for (const C of d) {
          const O = fi(C.children);
          m.push(new It(C.value, O));
        }
        return m.filter(C => !d.has(C));
      }
      function vr(f) {
        let m = f;
        for (; m._sourceSegment; ) m = m._sourceSegment;
        return m;
      }
      function y(f) {
        let m = f,
          d = m._segmentIndexShift ?? 0;
        for (; m._sourceSegment; )
          (m = m._sourceSegment), (d += m._segmentIndexShift ?? 0);
        return d - 1;
      }
      function A(f) {
        return f.data || {};
      }
      function j(f) {
        return f.resolve || {};
      }
      function Lt(f) {
        return 'string' == typeof f.title || null === f.title;
      }
      function Vt(f) {
        return (0, se.w)(m => {
          const d = f(m);
          return d ? (0, x.D)(d).pipe((0, W.U)(() => m)) : (0, L.of)(m);
        });
      }
      const sn = new s.OlP('ROUTES');
      let On = (() => {
        class f {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, s.f3M)(s.Sil));
          }
          loadComponent(d) {
            if (this.componentLoaders.get(d))
              return this.componentLoaders.get(d);
            if (d._loadedComponent) return (0, L.of)(d._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(d);
            const C = kt(d.loadComponent()).pipe(
                (0, W.U)(Yn),
                (0, ze.b)(U => {
                  this.onLoadEndListener && this.onLoadEndListener(d),
                    (d._loadedComponent = U);
                }),
                (0, dt.x)(() => {
                  this.componentLoaders.delete(d);
                }),
              ),
              O = new _t(C, () => new lt.x()).pipe(Be());
            return this.componentLoaders.set(d, O), O;
          }
          loadChildren(d, C) {
            if (this.childrenLoaders.get(C)) return this.childrenLoaders.get(C);
            if (C._loadedRoutes)
              return (0, L.of)({
                routes: C._loadedRoutes,
                injector: C._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(C);
            const U = this.loadModuleFactoryOrRoutes(C.loadChildren).pipe(
                (0, W.U)(Ve => {
                  this.onLoadEndListener && this.onLoadEndListener(C);
                  let xt,
                    Xt,
                    en = !1;
                  Array.isArray(Ve)
                    ? (Xt = Ve)
                    : ((xt = Ve.create(d).injector),
                      (Xt = pn(xt.get(sn, [], s.XFs.Self | s.XFs.Optional))));
                  return { routes: Xt.map(oi), injector: xt };
                }),
                (0, dt.x)(() => {
                  this.childrenLoaders.delete(C);
                }),
              ),
              K = new _t(U, () => new lt.x()).pipe(Be());
            return this.childrenLoaders.set(C, K), K;
          }
          loadModuleFactoryOrRoutes(d) {
            return kt(d()).pipe(
              (0, W.U)(Yn),
              (0, Qe.z)(C =>
                C instanceof s.YKP || Array.isArray(C)
                  ? (0, L.of)(C)
                  : (0, x.D)(this.compiler.compileModuleAsync(C)),
              ),
            );
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function Yn(f) {
        return (function Ai(f) {
          return f && 'object' == typeof f && 'default' in f;
        })(f)
          ? f.default
          : f;
      }
      let Vn = (() => {
        class f {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new lt.x()),
              (this.configLoader = (0, s.f3M)(On)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.urlSerializer = (0, s.f3M)(Dn)),
              (this.rootContexts = (0, s.f3M)(qi)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, L.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = O =>
                this.events.next(new hr(O))),
              (this.configLoader.onLoadStartListener = O =>
                this.events.next(new Li(O)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(d) {
            const C = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...d, id: C });
          }
          setupNavigations(d) {
            return (
              (this.transitions = new ne.X({
                id: 0,
                targetPageId: 0,
                currentUrlTree: d.currentUrlTree,
                currentRawUrl: d.currentUrlTree,
                extractedUrl: d.urlHandlingStrategy.extract(d.currentUrlTree),
                urlAfterRedirects: d.urlHandlingStrategy.extract(
                  d.currentUrlTree,
                ),
                rawUrl: d.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: hi,
                restoredState: null,
                currentSnapshot: d.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: d.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, Ae.h)(C => 0 !== C.id),
                (0, W.U)(C => ({
                  ...C,
                  extractedUrl: d.urlHandlingStrategy.extract(C.rawUrl),
                })),
                (0, se.w)(C => {
                  let O = !1,
                    U = !1;
                  return (0, L.of)(C).pipe(
                    (0, ze.b)(K => {
                      this.currentNavigation = {
                        id: K.id,
                        initialUrl: K.rawUrl,
                        extractedUrl: K.extractedUrl,
                        trigger: K.source,
                        extras: K.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, se.w)(K => {
                      const Ve = d.browserUrlTree.toString(),
                        xt =
                          !d.navigated ||
                          K.extractedUrl.toString() !== Ve ||
                          Ve !== d.currentUrlTree.toString();
                      if (
                        !xt &&
                        'reload' !==
                          (K.extras.onSameUrlNavigation ??
                            d.onSameUrlNavigation)
                      ) {
                        const en = '';
                        return (
                          this.events.next(
                            new Ji(K.id, d.serializeUrl(C.rawUrl), en, 0),
                          ),
                          (d.rawUrlTree = K.rawUrl),
                          K.resolve(null),
                          Ne.E
                        );
                      }
                      if (d.urlHandlingStrategy.shouldProcessUrl(K.rawUrl))
                        return (
                          kr(K.source) && (d.browserUrlTree = K.extractedUrl),
                          (0, L.of)(K).pipe(
                            (0, se.w)(en => {
                              const Wn = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new Ti(
                                    en.id,
                                    this.urlSerializer.serialize(
                                      en.extractedUrl,
                                    ),
                                    en.source,
                                    en.restoredState,
                                  ),
                                ),
                                Wn !== this.transitions?.getValue()
                                  ? Ne.E
                                  : Promise.resolve(en)
                              );
                            }),
                            (function Nt(f, m, d, C) {
                              return (0, se.w)(O =>
                                (function qe(f, m, d, C, O) {
                                  return new gt(f, m, d, C, O).apply();
                                })(f, m, d, O.extractedUrl, C).pipe(
                                  (0, W.U)(U => ({
                                    ...O,
                                    urlAfterRedirects: U,
                                  })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              d.config,
                            ),
                            (0, ze.b)(en => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: en.urlAfterRedirects,
                              }),
                                (C.urlAfterRedirects = en.urlAfterRedirects);
                            }),
                            (function ae(f, m, d, C, O) {
                              return (0, Qe.z)(U =>
                                (function mn(
                                  f,
                                  m,
                                  d,
                                  C,
                                  O,
                                  U,
                                  K = 'emptyOnly',
                                ) {
                                  return new yn(f, m, d, C, O, K, U)
                                    .recognize()
                                    .pipe(
                                      (0, se.w)(Ve =>
                                        null === Ve
                                          ? (function In(f) {
                                              return new re.y(m => m.error(f));
                                            })(new ln())
                                          : (0, L.of)(Ve),
                                      ),
                                    );
                                })(
                                  f,
                                  m,
                                  d,
                                  U.urlAfterRedirects,
                                  C.serialize(U.urlAfterRedirects),
                                  C,
                                  O,
                                ).pipe(
                                  (0, W.U)(K => ({ ...U, targetSnapshot: K })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              d.config,
                              this.urlSerializer,
                              d.paramsInheritanceStrategy,
                            ),
                            (0, ze.b)(en => {
                              if (
                                ((C.targetSnapshot = en.targetSnapshot),
                                'eager' === d.urlUpdateStrategy)
                              ) {
                                if (!en.extras.skipLocationChange) {
                                  const zi = d.urlHandlingStrategy.merge(
                                    en.urlAfterRedirects,
                                    en.rawUrl,
                                  );
                                  d.setBrowserUrl(zi, en);
                                }
                                d.browserUrlTree = en.urlAfterRedirects;
                              }
                              const Wn = new yr(
                                en.id,
                                this.urlSerializer.serialize(en.extractedUrl),
                                this.urlSerializer.serialize(
                                  en.urlAfterRedirects,
                                ),
                                en.targetSnapshot,
                              );
                              this.events.next(Wn);
                            }),
                          )
                        );
                      if (
                        xt &&
                        d.urlHandlingStrategy.shouldProcessUrl(d.rawUrlTree)
                      ) {
                        const {
                            id: en,
                            extractedUrl: Wn,
                            source: zi,
                            restoredState: _o,
                            extras: so,
                          } = K,
                          vo = new Ti(
                            en,
                            this.urlSerializer.serialize(Wn),
                            zi,
                            _o,
                          );
                        this.events.next(vo);
                        const br = Pn(Wn, this.rootComponentType).snapshot;
                        return (
                          (C = {
                            ...K,
                            targetSnapshot: br,
                            urlAfterRedirects: Wn,
                            extras: {
                              ...so,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          }),
                          (0, L.of)(C)
                        );
                      }
                      {
                        const en = '';
                        return (
                          this.events.next(
                            new Ji(K.id, d.serializeUrl(C.extractedUrl), en, 1),
                          ),
                          (d.rawUrlTree = K.rawUrl),
                          K.resolve(null),
                          Ne.E
                        );
                      }
                    }),
                    (0, ze.b)(K => {
                      const Ve = new xi(
                        K.id,
                        this.urlSerializer.serialize(K.extractedUrl),
                        this.urlSerializer.serialize(K.urlAfterRedirects),
                        K.targetSnapshot,
                      );
                      this.events.next(Ve);
                    }),
                    (0, W.U)(
                      K =>
                        (C = {
                          ...K,
                          guards: Hi(
                            K.targetSnapshot,
                            K.currentSnapshot,
                            this.rootContexts,
                          ),
                        }),
                    ),
                    (function as(f, m) {
                      return (0, Qe.z)(d => {
                        const {
                          targetSnapshot: C,
                          currentSnapshot: O,
                          guards: {
                            canActivateChecks: U,
                            canDeactivateChecks: K,
                          },
                        } = d;
                        return 0 === K.length && 0 === U.length
                          ? (0, L.of)({ ...d, guardsResult: !0 })
                          : (function wo(f, m, d, C) {
                              return (0, x.D)(f).pipe(
                                (0, Qe.z)(O =>
                                  (function Mo(f, m, d, C, O) {
                                    const U =
                                      m && m.routeConfig
                                        ? m.routeConfig.canDeactivate
                                        : null;
                                    if (!U || 0 === U.length)
                                      return (0, L.of)(!0);
                                    const K = U.map(Ve => {
                                      const xt = Yr(m) ?? O,
                                        Xt = Bi(Ve, xt);
                                      return kt(
                                        (function an(f) {
                                          return f && T(f.canDeactivate);
                                        })(Xt)
                                          ? Xt.canDeactivate(f, m, d, C)
                                          : xt.runInContext(() =>
                                              Xt(f, m, d, C),
                                            ),
                                      ).pipe(Mt());
                                    });
                                    return (0, L.of)(K).pipe(ci());
                                  })(O.component, O.route, d, m, C),
                                ),
                                Mt(O => !0 !== O, !0),
                              );
                            })(K, C, O, f).pipe(
                              (0, Qe.z)(Ve =>
                                Ve &&
                                (function I(f) {
                                  return 'boolean' == typeof f;
                                })(Ve)
                                  ? (function lr(f, m, d, C) {
                                      return (0, x.D)(m).pipe(
                                        (0, $e.b)(O =>
                                          (0, ue.z)(
                                            (function io(f, m) {
                                              return (
                                                null !== f && m && m(new fr(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route.parent, C),
                                            (function Sr(f, m) {
                                              return (
                                                null !== f && m && m(new Ui(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route, C),
                                            (function ro(f, m, d) {
                                              const C = m[m.length - 1],
                                                U = m
                                                  .slice(0, m.length - 1)
                                                  .reverse()
                                                  .map(K =>
                                                    (function to(f) {
                                                      const m = f.routeConfig
                                                        ? f.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return m && 0 !== m.length
                                                        ? { node: f, guards: m }
                                                        : null;
                                                    })(K),
                                                  )
                                                  .filter(K => null !== K)
                                                  .map(K =>
                                                    (0, ce.P)(() => {
                                                      const Ve = K.guards.map(
                                                        xt => {
                                                          const Xt =
                                                              Yr(K.node) ?? d,
                                                            en = Bi(xt, Xt);
                                                          return kt(
                                                            (function it(f) {
                                                              return (
                                                                f &&
                                                                T(
                                                                  f.canActivateChild,
                                                                )
                                                              );
                                                            })(en)
                                                              ? en.canActivateChild(
                                                                  C,
                                                                  f,
                                                                )
                                                              : Xt.runInContext(
                                                                  () =>
                                                                    en(C, f),
                                                                ),
                                                          ).pipe(Mt());
                                                        },
                                                      );
                                                      return (0, L.of)(Ve).pipe(
                                                        ci(),
                                                      );
                                                    }),
                                                  );
                                              return (0, L.of)(U).pipe(ci());
                                            })(f, O.path, d),
                                            (function ls(f, m, d) {
                                              const C = m.routeConfig
                                                ? m.routeConfig.canActivate
                                                : null;
                                              if (!C || 0 === C.length)
                                                return (0, L.of)(!0);
                                              const O = C.map(U =>
                                                (0, ce.P)(() => {
                                                  const K = Yr(m) ?? d,
                                                    Ve = Bi(U, K);
                                                  return kt(
                                                    (function $(f) {
                                                      return (
                                                        f && T(f.canActivate)
                                                      );
                                                    })(Ve)
                                                      ? Ve.canActivate(m, f)
                                                      : K.runInContext(() =>
                                                          Ve(m, f),
                                                        ),
                                                  ).pipe(Mt());
                                                }),
                                              );
                                              return (0, L.of)(O).pipe(ci());
                                            })(f, O.route, d),
                                          ),
                                        ),
                                        Mt(O => !0 !== O, !0),
                                      );
                                    })(C, U, f, m)
                                  : (0, L.of)(Ve),
                              ),
                              (0, W.U)(Ve => ({ ...d, guardsResult: Ve })),
                            );
                      });
                    })(this.environmentInjector, K => this.events.next(K)),
                    (0, ze.b)(K => {
                      if (
                        ((C.guardsResult = K.guardsResult), Cn(K.guardsResult))
                      )
                        throw xr(0, K.guardsResult);
                      const Ve = new ri(
                        K.id,
                        this.urlSerializer.serialize(K.extractedUrl),
                        this.urlSerializer.serialize(K.urlAfterRedirects),
                        K.targetSnapshot,
                        !!K.guardsResult,
                      );
                      this.events.next(Ve);
                    }),
                    (0, Ae.h)(
                      K =>
                        !!K.guardsResult ||
                        (d.restoreHistory(K),
                        this.cancelNavigationTransition(K, '', 3),
                        !1),
                    ),
                    Vt(K => {
                      if (K.guards.canActivateChecks.length)
                        return (0, L.of)(K).pipe(
                          (0, ze.b)(Ve => {
                            const xt = new Pi(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(xt);
                          }),
                          (0, se.w)(Ve => {
                            let xt = !1;
                            return (0, L.of)(Ve).pipe(
                              (function ot(f, m) {
                                return (0, Qe.z)(d => {
                                  const {
                                    targetSnapshot: C,
                                    guards: { canActivateChecks: O },
                                  } = d;
                                  if (!O.length) return (0, L.of)(d);
                                  let U = 0;
                                  return (0, x.D)(O).pipe(
                                    (0, $e.b)(K =>
                                      (function Dt(f, m, d, C) {
                                        const O = f.routeConfig,
                                          U = f._resolve;
                                        return (
                                          void 0 !== O?.title &&
                                            !Lt(O) &&
                                            (U[nn] = O.title),
                                          (function Qt(f, m, d, C) {
                                            const O = (function zn(f) {
                                              return [
                                                ...Object.keys(f),
                                                ...Object.getOwnPropertySymbols(
                                                  f,
                                                ),
                                              ];
                                            })(f);
                                            if (0 === O.length)
                                              return (0, L.of)({});
                                            const U = {};
                                            return (0, x.D)(O).pipe(
                                              (0, Qe.z)(K =>
                                                (function Bn(f, m, d, C) {
                                                  const O = Yr(m) ?? C,
                                                    U = Bi(f, O);
                                                  return kt(
                                                    U.resolve
                                                      ? U.resolve(m, d)
                                                      : O.runInContext(() =>
                                                          U(m, d),
                                                        ),
                                                  );
                                                })(f[K], m, d, C).pipe(
                                                  Mt(),
                                                  (0, ze.b)(Ve => {
                                                    U[K] = Ve;
                                                  }),
                                                ),
                                              ),
                                              Ce(1),
                                              (0, Ye.h)(U),
                                              (0, be.K)(K =>
                                                Lr(K) ? Ne.E : (0, fe._)(K),
                                              ),
                                            );
                                          })(U, f, m, C).pipe(
                                            (0, W.U)(
                                              K => (
                                                (f._resolvedData = K),
                                                (f.data = Ei(f, d).resolve),
                                                O &&
                                                  Lt(O) &&
                                                  (f.data[nn] = O.title),
                                                null
                                              ),
                                            ),
                                          )
                                        );
                                      })(K.route, C, f, m),
                                    ),
                                    (0, ze.b)(() => U++),
                                    Ce(1),
                                    (0, Qe.z)(K =>
                                      U === O.length ? (0, L.of)(d) : Ne.E,
                                    ),
                                  );
                                });
                              })(
                                d.paramsInheritanceStrategy,
                                this.environmentInjector,
                              ),
                              (0, ze.b)({
                                next: () => (xt = !0),
                                complete: () => {
                                  xt ||
                                    (d.restoreHistory(Ve),
                                    this.cancelNavigationTransition(Ve, '', 2));
                                },
                              }),
                            );
                          }),
                          (0, ze.b)(Ve => {
                            const xt = new Ni(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(xt);
                          }),
                        );
                    }),
                    Vt(K => {
                      const Ve = xt => {
                        const Xt = [];
                        xt.routeConfig?.loadComponent &&
                          !xt.routeConfig._loadedComponent &&
                          Xt.push(
                            this.configLoader
                              .loadComponent(xt.routeConfig)
                              .pipe(
                                (0, ze.b)(en => {
                                  xt.component = en;
                                }),
                                (0, W.U)(() => {}),
                              ),
                          );
                        for (const en of xt.children) Xt.push(...Ve(en));
                        return Xt;
                      };
                      return (0, ve.a)(Ve(K.targetSnapshot.root)).pipe(
                        ut(),
                        (0, ie.q)(1),
                      );
                    }),
                    Vt(() => this.afterPreactivation()),
                    (0, W.U)(K => {
                      const Ve = (function Qr(f, m, d) {
                        const C = Xr(f, m._root, d ? d._root : void 0);
                        return new bn(C, m);
                      })(
                        d.routeReuseStrategy,
                        K.targetSnapshot,
                        K.currentRouterState,
                      );
                      return (C = { ...K, targetRouterState: Ve });
                    }),
                    (0, ze.b)(K => {
                      (d.currentUrlTree = K.urlAfterRedirects),
                        (d.rawUrlTree = d.urlHandlingStrategy.merge(
                          K.urlAfterRedirects,
                          K.rawUrl,
                        )),
                        (d.routerState = K.targetRouterState),
                        'deferred' === d.urlUpdateStrategy &&
                          (K.extras.skipLocationChange ||
                            d.setBrowserUrl(d.rawUrlTree, K),
                          (d.browserUrlTree = K.urlAfterRedirects));
                    }),
                    ((f, m, d) =>
                      (0, W.U)(
                        C => (
                          new Mr(
                            m,
                            C.targetRouterState,
                            C.currentRouterState,
                            d,
                          ).activate(f),
                          C
                        ),
                      ))(this.rootContexts, d.routeReuseStrategy, K =>
                      this.events.next(K),
                    ),
                    (0, ie.q)(1),
                    (0, ze.b)({
                      next: K => {
                        (O = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (d.navigated = !0),
                          this.events.next(
                            new Ci(
                              K.id,
                              this.urlSerializer.serialize(K.extractedUrl),
                              this.urlSerializer.serialize(d.currentUrlTree),
                            ),
                          ),
                          d.titleStrategy?.updateTitle(
                            K.targetRouterState.snapshot,
                          ),
                          K.resolve(!0);
                      },
                      complete: () => {
                        O = !0;
                      },
                    }),
                    (0, dt.x)(() => {
                      O || U || this.cancelNavigationTransition(C, '', 1),
                        this.currentNavigation?.id === C.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, be.K)(K => {
                      if (((U = !0), co(K))) {
                        jr(K) || ((d.navigated = !0), d.restoreHistory(C, !0));
                        const Ve = new fn(
                          C.id,
                          this.urlSerializer.serialize(C.extractedUrl),
                          K.message,
                          K.cancellationCode,
                        );
                        if ((this.events.next(Ve), jr(K))) {
                          const xt = d.urlHandlingStrategy.merge(
                              K.url,
                              d.rawUrlTree,
                            ),
                            Xt = {
                              skipLocationChange: C.extras.skipLocationChange,
                              replaceUrl:
                                'eager' === d.urlUpdateStrategy || kr(C.source),
                            };
                          d.scheduleNavigation(xt, hi, null, Xt, {
                            resolve: C.resolve,
                            reject: C.reject,
                            promise: C.promise,
                          });
                        } else C.resolve(!1);
                      } else {
                        d.restoreHistory(C, !0);
                        const Ve = new Ki(
                          C.id,
                          this.urlSerializer.serialize(C.extractedUrl),
                          K,
                          C.targetSnapshot ?? void 0,
                        );
                        this.events.next(Ve);
                        try {
                          C.resolve(d.errorHandler(K));
                        } catch (xt) {
                          C.reject(xt);
                        }
                      }
                      return Ne.E;
                    }),
                  );
                }),
              )
            );
          }
          cancelNavigationTransition(d, C, O) {
            const U = new fn(
              d.id,
              this.urlSerializer.serialize(d.extractedUrl),
              C,
              O,
            );
            this.events.next(U), d.resolve(!1);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function kr(f) {
        return f !== hi;
      }
      let Ao = (() => {
          class f {
            buildTitle(d) {
              let C,
                O = d.root;
              for (; void 0 !== O; )
                (C = this.getResolvedTitleForRoute(O) ?? C),
                  (O = O.children.find(U => U.outlet === mt));
              return C;
            }
            getResolvedTitleForRoute(d) {
              return d.data[nn];
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(mi);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        mi = (() => {
          class f extends Ao {
            constructor(d) {
              super(), (this.title = d);
            }
            updateTitle(d) {
              const C = this.buildTitle(d);
              void 0 !== C && this.title.setTitle(C);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(s.LFG(Gt.Dx));
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        Wr = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(us);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class Qi {
        shouldDetach(m) {
          return !1;
        }
        store(m, d) {}
        shouldAttach(m) {
          return !1;
        }
        retrieve(m) {
          return null;
        }
        shouldReuseRoute(m, d) {
          return m.routeConfig === d.routeConfig;
        }
      }
      let us = (() => {
        class f extends Qi {}
        return (
          (f.ɵfac = (function () {
            let m;
            return function (C) {
              return (m || (m = s.n5z(f)))(C || f);
            };
          })()),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const hs = new s.OlP('', { providedIn: 'root', factory: () => ({}) });
      let nl = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(Kr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        Kr = (() => {
          class f {
            shouldProcessUrl(d) {
              return !0;
            }
            extract(d) {
              return d;
            }
            merge(d, C) {
              return d;
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })();
      function Ds(f) {
        throw f;
      }
      function Ks(f, m, d) {
        return m.parse('/');
      }
      const Ea = {
          paths: 'exact',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'exact',
        },
        Zs = {
          paths: 'subset',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'subset',
        };
      let Xi = (() => {
          class f {
            get navigationId() {
              return this.navigationTransitions.navigationId;
            }
            get browserPageId() {
              if ('computed' === this.canceledNavigationResolution)
                return this.location.getState()?.ɵrouterPageId;
            }
            get events() {
              return this.navigationTransitions.events;
            }
            constructor() {
              (this.disposed = !1),
                (this.currentPageId = 0),
                (this.console = (0, s.f3M)(s.c2e)),
                (this.isNgZoneEnabled = !1),
                (this.options = (0, s.f3M)(hs, { optional: !0 }) || {}),
                (this.errorHandler = this.options.errorHandler || Ds),
                (this.malformedUriErrorHandler =
                  this.options.malformedUriErrorHandler || Ks),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.urlHandlingStrategy = (0, s.f3M)(nl)),
                (this.routeReuseStrategy = (0, s.f3M)(Wr)),
                (this.urlCreationStrategy = (0, s.f3M)(Ge)),
                (this.titleStrategy = (0, s.f3M)(Ao)),
                (this.onSameUrlNavigation =
                  this.options.onSameUrlNavigation || 'ignore'),
                (this.paramsInheritanceStrategy =
                  this.options.paramsInheritanceStrategy || 'emptyOnly'),
                (this.urlUpdateStrategy =
                  this.options.urlUpdateStrategy || 'deferred'),
                (this.canceledNavigationResolution =
                  this.options.canceledNavigationResolution || 'replace'),
                (this.config = pn((0, s.f3M)(sn, { optional: !0 }) ?? [])),
                (this.navigationTransitions = (0, s.f3M)(Vn)),
                (this.urlSerializer = (0, s.f3M)(Dn)),
                (this.location = (0, s.f3M)(bt.Ye)),
                (this.isNgZoneEnabled =
                  (0, s.f3M)(s.R0b) instanceof s.R0b &&
                  s.R0b.isInAngularZone()),
                this.resetConfig(this.config),
                (this.currentUrlTree = new he()),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.routerState = Pn(this.currentUrlTree, null)),
                this.navigationTransitions.setupNavigations(this).subscribe(
                  d => {
                    (this.lastSuccessfulId = d.id),
                      (this.currentPageId = this.browserPageId ?? 0);
                  },
                  d => {
                    this.console.warn(`Unhandled Navigation Error: ${d}`);
                  },
                );
            }
            resetRootComponentType(d) {
              (this.routerState.root.component = d),
                (this.navigationTransitions.rootComponentType = d);
            }
            initialNavigation() {
              if (
                (this.setUpLocationChangeListener(),
                !this.navigationTransitions.hasRequestedNavigation)
              ) {
                const d = this.location.getState();
                this.navigateToSyncWithBrowser(this.location.path(!0), hi, d);
              }
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe(d => {
                  const C = 'popstate' === d.type ? 'popstate' : 'hashchange';
                  'popstate' === C &&
                    setTimeout(() => {
                      this.navigateToSyncWithBrowser(d.url, C, d.state);
                    }, 0);
                }));
            }
            navigateToSyncWithBrowser(d, C, O) {
              const U = { replaceUrl: !0 },
                K = O?.navigationId ? O : null;
              if (O) {
                const xt = { ...O };
                delete xt.navigationId,
                  delete xt.ɵrouterPageId,
                  0 !== Object.keys(xt).length && (U.state = xt);
              }
              const Ve = this.parseUrl(d);
              this.scheduleNavigation(Ve, C, K, U);
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.navigationTransitions.currentNavigation;
            }
            resetConfig(d) {
              (this.config = d.map(oi)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.navigationTransitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(),
                  (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(d, C = {}) {
              const {
                  relativeTo: O,
                  queryParams: U,
                  fragment: K,
                  queryParamsHandling: Ve,
                  preserveFragment: xt,
                } = C,
                Xt = xt ? this.currentUrlTree.fragment : K;
              let en = null;
              switch (Ve) {
                case 'merge':
                  en = { ...this.currentUrlTree.queryParams, ...U };
                  break;
                case 'preserve':
                  en = this.currentUrlTree.queryParams;
                  break;
                default:
                  en = U || null;
              }
              return (
                null !== en && (en = this.removeEmptyProps(en)),
                this.urlCreationStrategy.createUrlTree(
                  O,
                  this.routerState,
                  this.currentUrlTree,
                  d,
                  en,
                  Xt ?? null,
                )
              );
            }
            navigateByUrl(d, C = { skipLocationChange: !1 }) {
              const O = Cn(d) ? d : this.parseUrl(d),
                U = this.urlHandlingStrategy.merge(O, this.rawUrlTree);
              return this.scheduleNavigation(U, hi, null, C);
            }
            navigate(d, C = { skipLocationChange: !1 }) {
              return (
                (function il(f) {
                  for (let m = 0; m < f.length; m++) {
                    const d = f[m];
                    if (null == d) throw new s.vHH(4008, false);
                  }
                })(d),
                this.navigateByUrl(this.createUrlTree(d, C), C)
              );
            }
            serializeUrl(d) {
              return this.urlSerializer.serialize(d);
            }
            parseUrl(d) {
              let C;
              try {
                C = this.urlSerializer.parse(d);
              } catch (O) {
                C = this.malformedUriErrorHandler(O, this.urlSerializer, d);
              }
              return C;
            }
            isActive(d, C) {
              let O;
              if (
                ((O = !0 === C ? { ...Ea } : !1 === C ? { ...Zs } : C), Cn(d))
              )
                return ee(this.currentUrlTree, d, O);
              const U = this.parseUrl(d);
              return ee(this.currentUrlTree, U, O);
            }
            removeEmptyProps(d) {
              return Object.keys(d).reduce((C, O) => {
                const U = d[O];
                return null != U && (C[O] = U), C;
              }, {});
            }
            scheduleNavigation(d, C, O, U, K) {
              if (this.disposed) return Promise.resolve(!1);
              let Ve, xt, Xt, en;
              return (
                K
                  ? ((Ve = K.resolve), (xt = K.reject), (Xt = K.promise))
                  : (Xt = new Promise((Wn, zi) => {
                      (Ve = Wn), (xt = zi);
                    })),
                (en =
                  'computed' === this.canceledNavigationResolution
                    ? O && O.ɵrouterPageId
                      ? O.ɵrouterPageId
                      : (this.browserPageId ?? 0) + 1
                    : 0),
                this.navigationTransitions.handleNavigationRequest({
                  targetPageId: en,
                  source: C,
                  restoredState: O,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  rawUrl: d,
                  extras: U,
                  resolve: Ve,
                  reject: xt,
                  promise: Xt,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                Xt.catch(Wn => Promise.reject(Wn))
              );
            }
            setBrowserUrl(d, C) {
              const O = this.urlSerializer.serialize(d);
              if (
                this.location.isCurrentPathEqualTo(O) ||
                C.extras.replaceUrl
              ) {
                const K = {
                  ...C.extras.state,
                  ...this.generateNgRouterState(C.id, this.browserPageId),
                };
                this.location.replaceState(O, '', K);
              } else {
                const U = {
                  ...C.extras.state,
                  ...this.generateNgRouterState(C.id, C.targetPageId),
                };
                this.location.go(O, '', U);
              }
            }
            restoreHistory(d, C = !1) {
              if ('computed' === this.canceledNavigationResolution) {
                const U =
                  this.currentPageId -
                  (this.browserPageId ?? this.currentPageId);
                0 !== U
                  ? this.location.historyGo(U)
                  : this.currentUrlTree ===
                      this.getCurrentNavigation()?.finalUrl &&
                    0 === U &&
                    (this.resetState(d),
                    (this.browserUrlTree = d.currentUrlTree),
                    this.resetUrlToCurrentUrlTree());
              } else
                'replace' === this.canceledNavigationResolution &&
                  (C && this.resetState(d), this.resetUrlToCurrentUrlTree());
            }
            resetState(d) {
              (this.routerState = d.currentRouterState),
                (this.currentUrlTree = d.currentUrlTree),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  d.rawUrl,
                ));
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                '',
                this.generateNgRouterState(
                  this.lastSuccessfulId,
                  this.currentPageId,
                ),
              );
            }
            generateNgRouterState(d, C) {
              return 'computed' === this.canceledNavigationResolution
                ? { navigationId: d, ɵrouterPageId: C }
                : { navigationId: d };
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        fs = (() => {
          class f {
            constructor(d, C, O, U, K, Ve) {
              (this.router = d),
                (this.route = C),
                (this.tabIndexAttribute = O),
                (this.renderer = U),
                (this.el = K),
                (this.locationStrategy = Ve),
                (this._preserveFragment = !1),
                (this._skipLocationChange = !1),
                (this._replaceUrl = !1),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new lt.x());
              const xt = K.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = 'a' === xt || 'area' === xt),
                this.isAnchorElement
                  ? (this.subscription = d.events.subscribe(Xt => {
                      Xt instanceof Ci && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl('0');
            }
            set preserveFragment(d) {
              this._preserveFragment = (0, s.D6c)(d);
            }
            get preserveFragment() {
              return this._preserveFragment;
            }
            set skipLocationChange(d) {
              this._skipLocationChange = (0, s.D6c)(d);
            }
            get skipLocationChange() {
              return this._skipLocationChange;
            }
            set replaceUrl(d) {
              this._replaceUrl = (0, s.D6c)(d);
            }
            get replaceUrl() {
              return this._replaceUrl;
            }
            setTabIndexIfNotOnNativeEl(d) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue('tabindex', d);
            }
            ngOnChanges(d) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(d) {
              null != d
                ? ((this.commands = Array.isArray(d) ? d : [d]),
                  this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(d, C, O, U, K) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== d ||
                      C ||
                      O ||
                      U ||
                      K ||
                      ('string' == typeof this.target &&
                        '_self' != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree),
                    )
                  : null;
              const d =
                null === this.href
                  ? null
                  : (0, s.P3R)(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      'href',
                    );
              this.applyAttributeValue('href', d);
            }
            applyAttributeValue(d, C) {
              const O = this.renderer,
                U = this.el.nativeElement;
              null !== C ? O.setAttribute(U, d, C) : O.removeAttribute(U, d);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(
                s.Y36(Xi),
                s.Y36(Nn),
                s.$8M('tabindex'),
                s.Y36(s.Qsj),
                s.Y36(s.SBq),
                s.Y36(bt.S$),
              );
            }),
            (f.ɵdir = s.lG2({
              type: f,
              selectors: [['', 'routerLink', '']],
              hostVars: 1,
              hostBindings: function (d, C) {
                1 & d &&
                  s.NdJ('click', function (U) {
                    return C.onClick(
                      U.button,
                      U.ctrlKey,
                      U.shiftKey,
                      U.altKey,
                      U.metaKey,
                    );
                  }),
                  2 & d && s.uIk('target', C.target);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                state: 'state',
                relativeTo: 'relativeTo',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                routerLink: 'routerLink',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            f
          );
        })();
      class Cs {}
      let So = (() => {
        class f {
          constructor(d, C, O, U, K) {
            (this.router = d),
              (this.injector = O),
              (this.preloadingStrategy = U),
              (this.loader = K);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, Ae.h)(d => d instanceof Ci),
                (0, $e.b)(() => this.preload()),
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(d, C) {
            const O = [];
            for (const U of C) {
              U.providers &&
                !U._injector &&
                (U._injector = (0, s.MMx)(U.providers, d, `Route: ${U.path}`));
              const K = U._injector ?? d,
                Ve = U._loadedInjector ?? K;
              ((U.loadChildren && !U._loadedRoutes && void 0 === U.canLoad) ||
                (U.loadComponent && !U._loadedComponent)) &&
                O.push(this.preloadConfig(K, U)),
                (U.children || U._loadedRoutes) &&
                  O.push(this.processRoutes(Ve, U.children ?? U._loadedRoutes));
            }
            return (0, x.D)(O).pipe((0, We.J)());
          }
          preloadConfig(d, C) {
            return this.preloadingStrategy.preload(C, () => {
              let O;
              O =
                C.loadChildren && void 0 === C.canLoad
                  ? this.loader.loadChildren(d, C)
                  : (0, L.of)(null);
              const U = O.pipe(
                (0, Qe.z)(K =>
                  null === K
                    ? (0, L.of)(void 0)
                    : ((C._loadedRoutes = K.routes),
                      (C._loadedInjector = K.injector),
                      this.processRoutes(K.injector ?? d, K.routes)),
                ),
              );
              if (C.loadComponent && !C._loadedComponent) {
                const K = this.loader.loadComponent(C);
                return (0, x.D)([U, K]).pipe((0, We.J)());
              }
              return U;
            });
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(
              s.LFG(Xi),
              s.LFG(s.Sil),
              s.LFG(s.lqb),
              s.LFG(Cs),
              s.LFG(On),
            );
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const Es = new s.OlP('');
      let ws = (() => {
        class f {
          constructor(d, C, O, U, K = {}) {
            (this.urlSerializer = d),
              (this.transitions = C),
              (this.viewportScroller = O),
              (this.zone = U),
              (this.options = K),
              (this.lastId = 0),
              (this.lastSource = 'imperative'),
              (this.restoredId = 0),
              (this.store = {}),
              (K.scrollPositionRestoration =
                K.scrollPositionRestoration || 'disabled'),
              (K.anchorScrolling = K.anchorScrolling || 'disabled');
          }
          init() {
            'disabled' !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration('manual'),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof Ti
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = d.navigationTrigger),
                  (this.restoredId = d.restoredState
                    ? d.restoredState.navigationId
                    : 0))
                : d instanceof Ci &&
                  ((this.lastId = d.id),
                  this.scheduleScrollEvent(
                    d,
                    this.urlSerializer.parse(d.urlAfterRedirects).fragment,
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof Dr &&
                (d.position
                  ? 'top' === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : 'enabled' === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(d.position)
                  : d.anchor && 'enabled' === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(d.anchor)
                  : 'disabled' !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(d, C) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new Dr(
                      d,
                      'popstate' === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      C,
                    ),
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (f.ɵfac = function (d) {
            s.$Z();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
          f
        );
      })();
      var dr = (() => (
        ((dr = dr || {})[(dr.COMPLETE = 0)] = 'COMPLETE'),
        (dr[(dr.FAILED = 1)] = 'FAILED'),
        (dr[(dr.REDIRECTING = 2)] = 'REDIRECTING'),
        dr
      ))();
      const Bo = !1;
      function Io(f, m) {
        return { ɵkind: f, ɵproviders: m };
      }
      const As = new s.OlP('', { providedIn: 'root', factory: () => !1 });
      function ko() {
        const f = (0, s.f3M)(s.zs3);
        return m => {
          const d = f.get(s.z2F);
          if (m !== d.components[0]) return;
          const C = f.get(Xi),
            O = f.get(Ss);
          1 === f.get(Qo) && C.initialNavigation(),
            f.get(ii, null, s.XFs.Optional)?.setUpPreloading(),
            f.get(Es, null, s.XFs.Optional)?.init(),
            C.resetRootComponentType(d.componentTypes[0]),
            O.closed || (O.next(), O.complete(), O.unsubscribe());
        };
      }
      const Ss = new s.OlP(Bo ? 'bootstrap done indicator' : '', {
          factory: () => new lt.x(),
        }),
        Qo = new s.OlP(Bo ? 'initial navigation' : '', {
          providedIn: 'root',
          factory: () => 1,
        });
      function Aa() {
        let f = [];
        return (
          (f = Bo
            ? [
                {
                  provide: s.Xts,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(Xi);
                    return () =>
                      m.events.subscribe(d => {
                        console.group?.(`Router Event: ${d.constructor.name}`),
                          console.log(
                            (function rr(f) {
                              if (!('type' in f))
                                return `Unknown Router Event: ${f.constructor.name}`;
                              switch (f.type) {
                                case 14:
                                  return `ActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 13:
                                  return `ActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 12:
                                  return `ChildActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 11:
                                  return `ChildActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 8:
                                  return `GuardsCheckEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state}, shouldActivate: ${f.shouldActivate})`;
                                case 7:
                                  return `GuardsCheckStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 2:
                                  return `NavigationCancel(id: ${f.id}, url: '${f.url}')`;
                                case 16:
                                  return `NavigationSkipped(id: ${f.id}, url: '${f.url}')`;
                                case 1:
                                  return `NavigationEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}')`;
                                case 3:
                                  return `NavigationError(id: ${f.id}, url: '${f.url}', error: ${f.error})`;
                                case 0:
                                  return `NavigationStart(id: ${f.id}, url: '${f.url}')`;
                                case 6:
                                  return `ResolveEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 5:
                                  return `ResolveStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 10:
                                  return `RouteConfigLoadEnd(path: ${f.route.path})`;
                                case 9:
                                  return `RouteConfigLoadStart(path: ${f.route.path})`;
                                case 4:
                                  return `RoutesRecognized(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 15:
                                  return `Scroll(anchor: '${
                                    f.anchor
                                  }', position: '${
                                    f.position
                                      ? `${f.position[0]}, ${f.position[1]}`
                                      : null
                                  }')`;
                              }
                            })(d),
                          ),
                          console.log(d),
                          console.groupEnd?.();
                      });
                  },
                },
              ]
            : []),
          Io(1, f)
        );
      }
      const ii = new s.OlP(Bo ? 'router preloader' : '');
      function sl(f) {
        return Io(0, [
          { provide: ii, useExisting: So },
          { provide: Cs, useExisting: f },
        ]);
      }
      const ms = !1,
        Qs = new s.OlP(
          ms ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD',
        ),
        Xo = [
          bt.Ye,
          { provide: Dn, useClass: Oe },
          Xi,
          qi,
          {
            provide: Nn,
            useFactory: function Ms(f) {
              return f.routerState.root;
            },
            deps: [Xi],
          },
          On,
          ms ? { provide: As, useValue: !0 } : [],
        ];
      function al() {
        return new s.PXZ('Router', Xi);
      }
      let ll = (() => {
        class f {
          constructor(d) {}
          static forRoot(d, C) {
            return {
              ngModule: f,
              providers: [
                Xo,
                ms && C?.enableTracing ? Aa().ɵproviders : [],
                { provide: sn, multi: !0, useValue: d },
                {
                  provide: Qs,
                  useFactory: ks,
                  deps: [[Xi, new s.FiY(), new s.tp0()]],
                },
                { provide: hs, useValue: C || {} },
                C?.useHash
                  ? { provide: bt.S$, useClass: bt.Do }
                  : { provide: bt.S$, useClass: bt.b0 },
                {
                  provide: Es,
                  useFactory: () => {
                    const f = (0, s.f3M)(bt.EM),
                      m = (0, s.f3M)(s.R0b),
                      d = (0, s.f3M)(hs),
                      C = (0, s.f3M)(Vn),
                      O = (0, s.f3M)(Dn);
                    return (
                      d.scrollOffset && f.setOffset(d.scrollOffset),
                      new ws(O, C, f, m, d)
                    );
                  },
                },
                C?.preloadingStrategy
                  ? sl(C.preloadingStrategy).ɵproviders
                  : [],
                { provide: s.PXZ, multi: !0, useFactory: al },
                C?.initialNavigation ? Tr(C) : [],
                [
                  { provide: go, useFactory: ko },
                  { provide: s.tb, multi: !0, useExisting: go },
                ],
              ],
            };
          }
          static forChild(d) {
            return {
              ngModule: f,
              providers: [{ provide: sn, multi: !0, useValue: d }],
            };
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(s.LFG(Qs, 8));
          }),
          (f.ɵmod = s.oAB({ type: f })),
          (f.ɵinj = s.cJS({ imports: [zr] })),
          f
        );
      })();
      function ks(f) {
        if (ms && f)
          throw new s.vHH(
            4007,
            "The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead.",
          );
        return 'guarded';
      }
      function Tr(f) {
        return [
          'disabled' === f.initialNavigation
            ? Io(3, [
                {
                  provide: s.ip1,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(Xi);
                    return () => {
                      m.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Qo, useValue: 2 },
              ]).ɵproviders
            : [],
          'enabledBlocking' === f.initialNavigation
            ? Io(2, [
                { provide: Qo, useValue: 0 },
                {
                  provide: s.ip1,
                  multi: !0,
                  deps: [s.zs3],
                  useFactory: m => {
                    const d = m.get(bt.V_, Promise.resolve());
                    return () =>
                      d.then(
                        () =>
                          new Promise(C => {
                            const O = m.get(Xi),
                              U = m.get(Ss);
                            (function Lo(f, m) {
                              f.events
                                .pipe(
                                  (0, Ae.h)(
                                    d =>
                                      d instanceof Ci ||
                                      d instanceof fn ||
                                      d instanceof Ki ||
                                      d instanceof Ji,
                                  ),
                                  (0, W.U)(d =>
                                    d instanceof Ci || d instanceof Ji
                                      ? dr.COMPLETE
                                      : d instanceof fn &&
                                        (0 === d.code || 1 === d.code)
                                      ? dr.REDIRECTING
                                      : dr.FAILED,
                                  ),
                                  (0, Ae.h)(d => d !== dr.REDIRECTING),
                                  (0, ie.q)(1),
                                )
                                .subscribe(() => {
                                  m();
                                });
                            })(O, () => {
                              C(!0);
                            }),
                              (m.get(Vn).afterPreactivation = () => (
                                C(!0), U.closed ? (0, L.of)(void 0) : U
                              )),
                              O.initialNavigation();
                          }),
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const go = new s.OlP(ms ? 'Router Initializer' : '');
    },
    8776: (Pt, Re, D) => {
      D.d(Re, { eX: () => Ye, sQ: () => ge, GW: () => Ut, l4: () => dt });
      var s = D(6451),
        x = D(9751),
        L = D(7579),
        ne = D(8502),
        te = D(515),
        de = D(9646),
        ve = D(2843),
        ue = D(576);
      class le {
        constructor(yt, Je, At) {
          (this.kind = yt),
            (this.value = Je),
            (this.error = At),
            (this.hasValue = 'N' === yt);
        }
        observe(yt) {
          return fe(this, yt);
        }
        do(yt, Je, At) {
          const { kind: Te, value: F, error: b } = this;
          return 'N' === Te ? yt?.(F) : 'E' === Te ? Je?.(b) : At?.();
        }
        accept(yt, Je, At) {
          var Te;
          return (0, ue.m)(
            null === (Te = yt) || void 0 === Te ? void 0 : Te.next,
          )
            ? this.observe(yt)
            : this.do(yt, Je, At);
        }
        toObservable() {
          const { kind: yt, value: Je, error: At } = this,
            Te =
              'N' === yt
                ? (0, de.of)(Je)
                : 'E' === yt
                ? (0, ve._)(() => At)
                : 'C' === yt
                ? te.E
                : 0;
          if (!Te) throw new TypeError(`Unexpected notification kind ${yt}`);
          return Te;
        }
        static createNext(yt) {
          return new le('N', yt);
        }
        static createError(yt) {
          return new le('E', void 0, yt);
        }
        static createComplete() {
          return le.completeNotification;
        }
      }
      function fe(Oe, yt) {
        var Je, At, Te;
        const { kind: F, value: b, error: M } = Oe;
        if ('string' != typeof F)
          throw new TypeError('Invalid notification, missing "kind"');
        'N' === F
          ? null === (Je = yt.next) || void 0 === Je || Je.call(yt, b)
          : 'E' === F
          ? null === (At = yt.error) || void 0 === At || At.call(yt, M)
          : null === (Te = yt.complete) || void 0 === Te || Te.call(yt);
      }
      le.completeNotification = new le('C');
      var re = D(4482),
        Ne = D(5403),
        ct = D(4004),
        vt = D(262),
        Be = D(9300),
        _t = D(8421);
      function lt(Oe, yt, Je, At) {
        return (0, re.e)((Te, F) => {
          let b;
          yt && 'function' != typeof yt
            ? ({ duration: Je, element: b, connector: At } = yt)
            : (b = yt);
          const M = new Map(),
            G = tt => {
              M.forEach(tt), tt(F);
            },
            Q = tt => G(Kt => Kt.error(tt));
          let Xe = 0,
            St = !1;
          const rn = new Ne.Q(
            F,
            tt => {
              try {
                const Kt = Oe(tt);
                let Ie = M.get(Kt);
                if (!Ie) {
                  M.set(Kt, (Ie = At ? At() : new L.x()));
                  const xe = (function Rt(tt, Kt) {
                    const Ie = new x.y(xe => {
                      Xe++;
                      const Z = Kt.subscribe(xe);
                      return () => {
                        Z.unsubscribe(), 0 == --Xe && St && rn.unsubscribe();
                      };
                    });
                    return (Ie.key = tt), Ie;
                  })(Kt, Ie);
                  if ((F.next(xe), Je)) {
                    const Z = (0, Ne.x)(
                      Ie,
                      () => {
                        Ie.complete(), Z?.unsubscribe();
                      },
                      void 0,
                      void 0,
                      () => M.delete(Kt),
                    );
                    rn.add((0, _t.Xf)(Je(xe)).subscribe(Z));
                  }
                }
                Ie.next(b ? b(tt) : tt);
              } catch (Kt) {
                Q(Kt);
              }
            },
            () => G(tt => tt.complete()),
            Q,
            () => M.clear(),
            () => ((St = !0), 0 === Xe),
          );
          Te.subscribe(rn);
        });
      }
      var bt = D(5577),
        W = D(6129),
        ie = D(5698),
        X = D(4650),
        Ae = D(1831);
      const Qe = { dispatch: !0, functional: !1, useEffectsErrorHandler: !0 },
        ut = '__@ngrx/effects_create__';
      function Ut(Oe, yt = {}) {
        const Je = yt.functional ? Oe : Oe(),
          At = { ...Qe, ...yt };
        return Object.defineProperty(Je, ut, { value: At }), Je;
      }
      function $e(Oe) {
        return Object.getPrototypeOf(Oe);
      }
      function be(Oe) {
        return 'function' == typeof Oe;
      }
      function Ue(Oe) {
        return Oe.filter(be);
      }
      function Ce(Oe, yt, Je) {
        const At = $e(Oe).constructor.name,
          Te = (function Mt(Oe) {
            return (function Et(Oe) {
              return Object.getOwnPropertyNames(Oe)
                .filter(
                  At =>
                    !(!Oe[At] || !Oe[At].hasOwnProperty(ut)) &&
                    Oe[At][ut].hasOwnProperty('dispatch'),
                )
                .map(At => ({ propertyName: At, ...Oe[At][ut] }));
            })(Oe);
          })(Oe).map(
            ({ propertyName: F, dispatch: b, useEffectsErrorHandler: M }) => {
              const G = 'function' == typeof Oe[F] ? Oe[F]() : Oe[F],
                Q = M ? Je(G, yt) : G;
              return !1 === b
                ? Q.pipe((0, ne.l)())
                : Q.pipe(
                    (function He() {
                      return (0, re.e)((Oe, yt) => {
                        Oe.subscribe(
                          (0, Ne.x)(
                            yt,
                            Je => {
                              yt.next(le.createNext(Je));
                            },
                            () => {
                              yt.next(le.createComplete()), yt.complete();
                            },
                            Je => {
                              yt.next(le.createError(Je)), yt.complete();
                            },
                          ),
                        );
                      });
                    })(),
                  ).pipe(
                    (0, ct.U)(St => ({
                      effect: Oe[F],
                      notification: St,
                      propertyName: F,
                      sourceName: At,
                      sourceInstance: Oe,
                    })),
                  );
            },
          );
        return (0, s.T)(...Te);
      }
      const Pe = 10;
      function Le(Oe, yt, Je = Pe) {
        return Oe.pipe(
          (0, vt.K)(
            At => (yt && yt.handleError(At), Je <= 1 ? Oe : Le(Oe, yt, Je - 1)),
          ),
        );
      }
      let Ye = (() => {
        class Oe extends x.y {
          constructor(Je) {
            super(), Je && (this.source = Je);
          }
          lift(Je) {
            const At = new Oe();
            return (At.source = this), (At.operator = Je), At;
          }
        }
        return (
          (Oe.ɵfac = function (Je) {
            return new (Je || Oe)(X.LFG(Ae.Y$));
          }),
          (Oe.ɵprov = X.Yz7({
            token: Oe,
            factory: Oe.ɵfac,
            providedIn: 'root',
          })),
          Oe
        );
      })();
      function dt(...Oe) {
        return (0, Be.h)(yt =>
          Oe.some(Je =>
            'string' == typeof Je ? Je === yt.type : Je.type === yt.type,
          ),
        );
      }
      const We = new X.OlP('@ngrx/effects Internal Root Guard'),
        Gt = new X.OlP('@ngrx/effects User Provided Effects'),
        mt = new X.OlP('@ngrx/effects Internal Root Effects'),
        nn = new X.OlP('@ngrx/effects Internal Root Effects Instances'),
        a = new X.OlP('@ngrx/effects Internal Feature Effects'),
        ft = new X.OlP(
          '@ngrx/effects Internal Feature Effects Instance Groups',
        ),
        $t = new X.OlP('@ngrx/effects Effects Error Handler', {
          providedIn: 'root',
          factory: () => Le,
        }),
        et = '@ngrx/effects/init';
      (0, Ae.PH)(et);
      const dn = 'ngrxOnIdentifyEffects',
        Y = 'ngrxOnInitEffects';
      function ee(Oe) {
        return Me(Oe, Y);
      }
      function Me(Oe, yt) {
        return Oe && yt in Oe && 'function' == typeof Oe[yt];
      }
      let je = (() => {
        class Oe extends L.x {
          constructor(Je, At) {
            super(), (this.errorHandler = Je), (this.effectsErrorHandler = At);
          }
          addEffects(Je) {
            this.next(Je);
          }
          toActions() {
            return this.pipe(
              lt(Je =>
                (function ze(Oe) {
                  return (
                    'Object' !== Oe.constructor.name &&
                    'Function' !== Oe.constructor.name
                  );
                })(Je)
                  ? $e(Je)
                  : Je,
              ),
              (0, bt.z)(Je => Je.pipe(lt(De))),
              (0, bt.z)(Je => {
                const At = Je.pipe(
                    (0, W.z)(F =>
                      (function ye(Oe, yt) {
                        return Je => {
                          const At = Ce(Je, Oe, yt);
                          return (function at(Oe) {
                            return Me(Oe, 'ngrxOnRunEffects');
                          })(Je)
                            ? Je.ngrxOnRunEffects(At)
                            : At;
                        };
                      })(
                        this.errorHandler,
                        this.effectsErrorHandler,
                      )(F),
                    ),
                    (0, ct.U)(
                      F => (
                        (function Wt(Oe, yt) {
                          if ('N' === Oe.notification.kind) {
                            const Je = Oe.notification.value;
                            !(function pn(Oe) {
                              return (
                                'function' != typeof Oe &&
                                Oe &&
                                Oe.type &&
                                'string' == typeof Oe.type
                              );
                            })(Je) &&
                              yt.handleError(
                                new Error(
                                  `Effect ${(function Sn({
                                    propertyName: Oe,
                                    sourceInstance: yt,
                                    sourceName: Je,
                                  }) {
                                    const At = 'function' == typeof yt[Oe];
                                    return `"${Je}.${String(Oe)}${
                                      At ? '()' : ''
                                    }"`;
                                  })(
                                    Oe,
                                  )} dispatched an invalid action: ${(function Tn(
                                    Oe,
                                  ) {
                                    try {
                                      return JSON.stringify(Oe);
                                    } catch {
                                      return Oe;
                                    }
                                  })(Je)}`,
                                ),
                              );
                          }
                        })(F, this.errorHandler),
                        F.notification
                      ),
                    ),
                    (0, Be.h)(F => 'N' === F.kind && null != F.value),
                    (function se() {
                      return (0, re.e)((Oe, yt) => {
                        Oe.subscribe((0, Ne.x)(yt, Je => fe(Je, yt)));
                      });
                    })(),
                  ),
                  Te = Je.pipe(
                    (0, ie.q)(1),
                    (0, Be.h)(ee),
                    (0, ct.U)(F => F.ngrxOnInitEffects()),
                  );
                return (0, s.T)(At, Te);
              }),
            );
          }
        }
        return (
          (Oe.ɵfac = function (Je) {
            return new (Je || Oe)(X.LFG(X.qLn), X.LFG($t));
          }),
          (Oe.ɵprov = X.Yz7({
            token: Oe,
            factory: Oe.ɵfac,
            providedIn: 'root',
          })),
          Oe
        );
      })();
      function De(Oe) {
        return (function kt(Oe) {
          return Me(Oe, dn);
        })(Oe)
          ? Oe.ngrxOnIdentifyEffects()
          : '';
      }
      let H = (() => {
          class Oe {
            constructor(Je, At) {
              (this.effectSources = Je),
                (this.store = At),
                (this.effectsSubscription = null);
            }
            get isStarted() {
              return !!this.effectsSubscription;
            }
            start() {
              this.effectsSubscription ||
                (this.effectsSubscription = this.effectSources
                  .toActions()
                  .subscribe(this.store));
            }
            ngOnDestroy() {
              this.effectsSubscription &&
                (this.effectsSubscription.unsubscribe(),
                (this.effectsSubscription = null));
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(X.LFG(je), X.LFG(Ae.yh));
            }),
            (Oe.ɵprov = X.Yz7({
              token: Oe,
              factory: Oe.ɵfac,
              providedIn: 'root',
            })),
            Oe
          );
        })(),
        ke = (() => {
          class Oe {
            constructor(Je, At, Te, F, b, M, G) {
              (this.sources = Je), At.start();
              for (const Q of F) Je.addEffects(Q);
              Te.dispatch({ type: et });
            }
            addEffects(Je) {
              this.sources.addEffects(Je);
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(
                X.LFG(je),
                X.LFG(H),
                X.LFG(Ae.yh),
                X.LFG(nn),
                X.LFG(Ae.cr, 8),
                X.LFG(Ae.CK, 8),
                X.LFG(We, 8),
              );
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })(),
        he = (() => {
          class Oe {
            constructor(Je, At, Te, F) {
              const b = At.flat();
              for (const M of b) Je.addEffects(M);
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(
                X.LFG(ke),
                X.LFG(ft),
                X.LFG(Ae.cr, 8),
                X.LFG(Ae.CK, 8),
              );
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })(),
        ge = (() => {
          class Oe {
            static forFeature(...Je) {
              const At = Je.flat(),
                Te = Ue(At);
              return {
                ngModule: he,
                providers: [
                  Te,
                  { provide: a, multi: !0, useValue: At },
                  { provide: Gt, multi: !0, useValue: [] },
                  { provide: ft, multi: !0, useFactory: pe, deps: [a, Gt] },
                ],
              };
            }
            static forRoot(...Je) {
              const At = Je.flat(),
                Te = Ue(At);
              return {
                ngModule: ke,
                providers: [
                  Te,
                  { provide: mt, useValue: [At] },
                  { provide: We, useFactory: nt },
                  { provide: Gt, multi: !0, useValue: [] },
                  { provide: nn, useFactory: pe, deps: [mt, Gt] },
                ],
              };
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)();
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })();
      function pe(Oe, yt) {
        const Je = [];
        for (const At of Oe) Je.push(...At);
        for (const At of yt) Je.push(...At);
        return Je.map(At => (be(At) ? (0, X.f3M)(At) : At));
      }
      function nt() {
        const Oe = (0, X.f3M)(H, { optional: !0, skipSelf: !0 }),
          yt = (0, X.f3M)(mt, { self: !0 });
        if ((1 !== yt.length || 0 !== yt[0].length) && Oe)
          throw new TypeError(
            'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.',
          );
        return 'guarded';
      }
    },
    1831: (Pt, Re, D) => {
      D.d(Re, {
        Y$: () => wt,
        yh: () => At,
        CK: () => Dr,
        Aw: () => rr,
        cr: () => Zi,
        PH: () => Ae,
        Lq: () => Fn,
        P1: () => yi,
        on: () => gi,
        Ky: () => Qe,
      });
      var s = D(4650),
        x = D(1135),
        L = D(9751),
        ne = D(7579),
        te = D(4408),
        ve = D(640);
      const ce = new (class ue extends ve.v {})(
        class de extends te.o {
          constructor(Ge, Se) {
            super(Ge, Se), (this.scheduler = Ge), (this.work = Se);
          }
          schedule(Ge, Se = 0) {
            return Se > 0
              ? super.schedule(Ge, Se)
              : ((this.delay = Se),
                (this.state = Ge),
                this.scheduler.flush(this),
                this);
          }
          execute(Ge, Se) {
            return Se > 0 || this.closed
              ? super.execute(Ge, Se)
              : this._execute(Ge, Se);
          }
          requestAsyncId(Ge, Se, Ke = 0) {
            return (null != Ke && Ke > 0) || (null == Ke && this.delay > 0)
              ? super.requestAsyncId(Ge, Se, Ke)
              : (Ge.flush(this), 0);
          }
        },
      );
      var fe = D(5363),
        re = D(4482),
        Ne = D(5403),
        He = D(8421),
        ct = D(4671),
        vt = D(5032),
        Be = D(3269),
        lt = D(5026),
        bt = D(4004),
        se = D(1884);
      const ie = {};
      function Ae(J, Ge) {
        if (((ie[J] = (ie[J] || 0) + 1), 'function' == typeof Ge))
          return Ut(J, (...Ke) => ({ ...Ge(...Ke), type: J }));
        switch (Ge ? Ge._as : 'empty') {
          case 'empty':
            return Ut(J, () => ({ type: J }));
          case 'props':
            return Ut(J, Ke => ({ ...Ke, type: J }));
          default:
            throw new Error('Unexpected config.');
        }
      }
      function Qe() {
        return { _as: 'props', _p: void 0 };
      }
      function Ut(J, Ge) {
        return Object.defineProperty(Ge, 'type', { value: J, writable: !1 });
      }
      const be = '@ngrx/store/init';
      let Ue = (() => {
        class J extends x.X {
          constructor() {
            super({ type: be });
          }
          next(Se) {
            if ('function' == typeof Se)
              throw new TypeError(
                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().",
              );
            if (typeof Se > 'u') throw new TypeError('Actions must be objects');
            if (typeof Se.type > 'u')
              throw new TypeError('Actions must have a type property');
            super.next(Se);
          }
          complete() {}
          ngOnDestroy() {
            super.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)();
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Ce = [Ue],
        Pe = new s.OlP('@ngrx/store Internal Root Guard'),
        Le = new s.OlP('@ngrx/store Internal Initial State'),
        Ye = new s.OlP('@ngrx/store Initial State'),
        dt = new s.OlP('@ngrx/store Reducer Factory'),
        We = new s.OlP('@ngrx/store Internal Reducer Factory Provider'),
        Gt = new s.OlP('@ngrx/store Initial Reducers'),
        mt = new s.OlP('@ngrx/store Internal Initial Reducers'),
        nn = new s.OlP('@ngrx/store Store Features'),
        a = new s.OlP('@ngrx/store Internal Store Reducers'),
        ft = new s.OlP('@ngrx/store Internal Feature Reducers'),
        $t = new s.OlP('@ngrx/store Internal Feature Configs'),
        et = new s.OlP('@ngrx/store Internal Store Features'),
        pt = new s.OlP('@ngrx/store Internal Feature Reducers Token'),
        Wt = new s.OlP('@ngrx/store Feature Reducers'),
        pn = new s.OlP('@ngrx/store User Provided Meta Reducers'),
        Sn = new s.OlP('@ngrx/store Meta Reducers'),
        Tn = new s.OlP('@ngrx/store Internal Resolved Meta Reducers'),
        dn = new s.OlP('@ngrx/store User Runtime Checks Config'),
        kt = new s.OlP('@ngrx/store Internal User Runtime Checks Config'),
        En = new s.OlP('@ngrx/store Internal Runtime Checks'),
        at = new s.OlP('@ngrx/store Check if Action types are unique');
      function Me(J, Ge = {}) {
        const Se = Object.keys(J),
          Ke = {};
        for (let It = 0; It < Se.length; It++) {
          const hn = Se[It];
          'function' == typeof J[hn] && (Ke[hn] = J[hn]);
        }
        const Tt = Object.keys(Ke);
        return function (hn, bn) {
          hn = void 0 === hn ? Ge : hn;
          let Pn = !1;
          const Jn = {};
          for (let Nn = 0; Nn < Tt.length; Nn++) {
            const Ei = Tt[Nn],
              or = hn[Ei],
              Cr = (0, Ke[Ei])(or, bn);
            (Jn[Ei] = Cr), (Pn = Pn || Cr !== or);
          }
          return Pn ? Jn : hn;
        };
      }
      function De(...J) {
        return function (Ge) {
          if (0 === J.length) return Ge;
          const Se = J[J.length - 1];
          return J.slice(0, -1).reduceRight((Tt, It) => It(Tt), Se(Ge));
        };
      }
      function ye(J, Ge) {
        return (
          Array.isArray(Ge) &&
            Ge.length > 0 &&
            (J = De.apply(null, [...Ge, J])),
          (Se, Ke) => {
            const Tt = J(Se);
            return (It, hn) => Tt((It = void 0 === It ? Ke : It), hn);
          }
        );
      }
      new s.OlP('@ngrx/store Root Store Provider'),
        new s.OlP('@ngrx/store Feature State Provider');
      class ke extends L.y {}
      class he extends Ue {}
      let pe = (() => {
        class J extends x.X {
          constructor(Se, Ke, Tt, It) {
            super(It(Tt, Ke)),
              (this.dispatcher = Se),
              (this.initialState = Ke),
              (this.reducers = Tt),
              (this.reducerFactory = It);
          }
          get currentReducers() {
            return this.reducers;
          }
          addFeature(Se) {
            this.addFeatures([Se]);
          }
          addFeatures(Se) {
            const Ke = Se.reduce(
              (
                Tt,
                {
                  reducers: It,
                  reducerFactory: hn,
                  metaReducers: bn,
                  initialState: Pn,
                  key: Jn,
                },
              ) => {
                const Nn =
                  'function' == typeof It
                    ? (function H(J) {
                        const Ge =
                          Array.isArray(J) && J.length > 0
                            ? De(...J)
                            : Se => Se;
                        return (Se, Ke) => (
                          (Se = Ge(Se)),
                          (Tt, It) => Se((Tt = void 0 === Tt ? Ke : Tt), It)
                        );
                      })(bn)(It, Pn)
                    : ye(hn, bn)(It, Pn);
                return (Tt[Jn] = Nn), Tt;
              },
              {},
            );
            this.addReducers(Ke);
          }
          removeFeature(Se) {
            this.removeFeatures([Se]);
          }
          removeFeatures(Se) {
            this.removeReducers(Se.map(Ke => Ke.key));
          }
          addReducer(Se, Ke) {
            this.addReducers({ [Se]: Ke });
          }
          addReducers(Se) {
            (this.reducers = { ...this.reducers, ...Se }),
              this.updateReducers(Object.keys(Se));
          }
          removeReducer(Se) {
            this.removeReducers([Se]);
          }
          removeReducers(Se) {
            Se.forEach(Ke => {
              this.reducers = (function je(J, Ge) {
                return Object.keys(J)
                  .filter(Se => Se !== Ge)
                  .reduce((Se, Ke) => Object.assign(Se, { [Ke]: J[Ke] }), {});
              })(this.reducers, Ke);
            }),
              this.updateReducers(Se);
          }
          updateReducers(Se) {
            this.next(this.reducerFactory(this.reducers, this.initialState)),
              this.dispatcher.next({
                type: '@ngrx/store/update-reducers',
                features: Se,
              });
          }
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(he), s.LFG(Ye), s.LFG(Gt), s.LFG(dt));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const nt = [
        pe,
        { provide: ke, useExisting: pe },
        { provide: he, useExisting: Ue },
      ];
      let wt = (() => {
        class J extends ne.x {
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = (function () {
            let Ge;
            return function (Ke) {
              return (Ge || (Ge = s.n5z(J)))(Ke || J);
            };
          })()),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Ot = [wt];
      class Dn extends L.y {}
      let Oe = (() => {
        class J extends x.X {
          constructor(Se, Ke, Tt, It) {
            super(It);
            const bn = Se.pipe((0, fe.Q)(ce)).pipe(
                (function _t(...J) {
                  const Ge = (0, Be.jO)(J);
                  return (0, re.e)((Se, Ke) => {
                    const Tt = J.length,
                      It = new Array(Tt);
                    let hn = J.map(() => !1),
                      bn = !1;
                    for (let Pn = 0; Pn < Tt; Pn++)
                      (0, He.Xf)(J[Pn]).subscribe(
                        (0, Ne.x)(
                          Ke,
                          Jn => {
                            (It[Pn] = Jn),
                              !bn &&
                                !hn[Pn] &&
                                ((hn[Pn] = !0),
                                (bn = hn.every(ct.y)) && (hn = null));
                          },
                          vt.Z,
                        ),
                      );
                    Se.subscribe(
                      (0, Ne.x)(Ke, Pn => {
                        if (bn) {
                          const Jn = [Pn, ...It];
                          Ke.next(Ge ? Ge(...Jn) : Jn);
                        }
                      }),
                    );
                  });
                })(Ke),
              ),
              Jn = bn.pipe((0, lt.R)(yt, { state: It }));
            this.stateSubscription = Jn.subscribe(
              ({ state: Nn, action: Ei }) => {
                this.next(Nn), Tt.next(Ei);
              },
            );
          }
          ngOnDestroy() {
            this.stateSubscription.unsubscribe(), this.complete();
          }
        }
        return (
          (J.INIT = be),
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(Ue), s.LFG(ke), s.LFG(wt), s.LFG(Ye));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      function yt(J = { state: void 0 }, [Ge, Se]) {
        const { state: Ke } = J;
        return { state: Se(Ke, Ge), action: Ge };
      }
      const Je = [Oe, { provide: Dn, useExisting: Oe }];
      let At = (() => {
        class J extends L.y {
          constructor(Se, Ke, Tt) {
            super(),
              (this.actionsObserver = Ke),
              (this.reducerManager = Tt),
              (this.source = Se);
          }
          select(Se, ...Ke) {
            return F.call(null, Se, ...Ke)(this);
          }
          lift(Se) {
            const Ke = new J(this, this.actionsObserver, this.reducerManager);
            return (Ke.operator = Se), Ke;
          }
          dispatch(Se) {
            this.actionsObserver.next(Se);
          }
          next(Se) {
            this.actionsObserver.next(Se);
          }
          error(Se) {
            this.actionsObserver.error(Se);
          }
          complete() {
            this.actionsObserver.complete();
          }
          addReducer(Se, Ke) {
            this.reducerManager.addReducer(Se, Ke);
          }
          removeReducer(Se) {
            this.reducerManager.removeReducer(Se);
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(Dn), s.LFG(Ue), s.LFG(pe));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Te = [At];
      function F(J, Ge, ...Se) {
        return function (Tt) {
          let It;
          if ('string' == typeof J) {
            const hn = [Ge, ...Se].filter(Boolean);
            It = Tt.pipe(
              (function W(...J) {
                const Ge = J.length;
                if (0 === Ge)
                  throw new Error('list of properties cannot be empty.');
                return (0, bt.U)(Se => {
                  let Ke = Se;
                  for (let Tt = 0; Tt < Ge; Tt++) {
                    const It = Ke?.[J[Tt]];
                    if (!(typeof It < 'u')) return;
                    Ke = It;
                  }
                  return Ke;
                });
              })(J, ...hn),
            );
          } else {
            if ('function' != typeof J)
              throw new TypeError(
                `Unexpected type '${typeof J}' in select operator, expected 'string' or 'function'`,
              );
            It = Tt.pipe((0, bt.U)(hn => J(hn, Ge)));
          }
          return It.pipe((0, se.x)());
        };
      }
      const b = 'https://ngrx.io/guide/store/configuration/runtime-checks';
      function M(J) {
        return void 0 === J;
      }
      function G(J) {
        return null === J;
      }
      function Q(J) {
        return Array.isArray(J);
      }
      function Rt(J) {
        return 'object' == typeof J && null !== J;
      }
      function Ie(J) {
        return 'function' == typeof J;
      }
      function qt(J, Ge) {
        return J === Ge;
      }
      function ki(J, Ge = qt, Se = qt) {
        let It,
          Ke = null,
          Tt = null;
        return {
          memoized: function Jn() {
            if (void 0 !== It) return It.result;
            if (!Ke)
              return (Tt = J.apply(null, arguments)), (Ke = arguments), Tt;
            if (
              !(function Cn(J, Ge, Se) {
                for (let Ke = 0; Ke < J.length; Ke++)
                  if (!Se(J[Ke], Ge[Ke])) return !0;
                return !1;
              })(arguments, Ke, Ge)
            )
              return Tt;
            const Nn = J.apply(null, arguments);
            return (Ke = arguments), Se(Tt, Nn) ? Tt : ((Tt = Nn), Nn);
          },
          reset: function hn() {
            (Ke = null), (Tt = null);
          },
          setResult: function bn(Nn) {
            It = { result: Nn };
          },
          clearResult: function Pn() {
            It = void 0;
          },
        };
      }
      function yi(...J) {
        return (function Vr(J, Ge = { stateFn: ir }) {
          return function (...Se) {
            let Ke = Se;
            if (Array.isArray(Ke[0])) {
              const [Nn, ...Ei] = Ke;
              Ke = [...Nn, ...Ei];
            } else
              1 === Ke.length &&
                (function $n(J) {
                  return (
                    !!J &&
                    'object' == typeof J &&
                    Object.values(J).every(Ge => 'function' == typeof Ge)
                  );
                })(Ke[0]) &&
                (Ke = (function jt(J) {
                  const Ge = Object.values(J),
                    Se = Object.keys(J);
                  return [
                    ...Ge,
                    (...Tt) =>
                      Se.reduce((It, hn, bn) => ({ ...It, [hn]: Tt[bn] }), {}),
                  ];
                })(Ke[0]));
            const Tt = Ke.slice(0, Ke.length - 1),
              It = Ke[Ke.length - 1],
              hn = Tt.filter(
                Nn => Nn.release && 'function' == typeof Nn.release,
              ),
              bn = J(function (...Nn) {
                return It.apply(null, Nn);
              }),
              Pn = ki(function (Nn, Ei) {
                return Ge.stateFn.apply(null, [Nn, Tt, Ei, bn]);
              });
            return Object.assign(Pn.memoized, {
              release: function Jn() {
                Pn.reset(), bn.reset(), hn.forEach(Nn => Nn.release());
              },
              projector: bn.memoized,
              setResult: Pn.setResult,
              clearResult: Pn.clearResult,
            });
          };
        })(ki)(...J);
      }
      function ir(J, Ge, Se, Ke) {
        if (void 0 === Se) {
          const It = Ge.map(hn => hn(J));
          return Ke.memoized.apply(null, It);
        }
        const Tt = Ge.map(It => It(J, Se));
        return Ke.memoized.apply(null, [...Tt, Se]);
      }
      function ei(J) {
        return J instanceof s.OlP ? (0, s.f3M)(J) : J;
      }
      function Di(J, Ge) {
        return Ge.map((Se, Ke) => {
          if (J[Ke] instanceof s.OlP) {
            const Tt = (0, s.f3M)(J[Ke]);
            return {
              key: Se.key,
              reducerFactory: Tt.reducerFactory ? Tt.reducerFactory : Me,
              metaReducers: Tt.metaReducers ? Tt.metaReducers : [],
              initialState: Tt.initialState,
            };
          }
          return Se;
        });
      }
      function qr(J) {
        return J.map(Ge => (Ge instanceof s.OlP ? (0, s.f3M)(Ge) : Ge));
      }
      function Vi(J) {
        return 'function' == typeof J ? J() : J;
      }
      function ur(J, Ge) {
        return J.concat(Ge);
      }
      function di() {
        if ((0, s.f3M)(At, { optional: !0, skipSelf: !0 }))
          throw new TypeError(
            'The root Store has been provided more than once. Feature modules should provide feature states instead.',
          );
        return 'guarded';
      }
      function un(J) {
        Object.freeze(J);
        const Ge = Ie(J);
        return (
          Object.getOwnPropertyNames(J).forEach(Se => {
            if (
              !Se.startsWith('\u0275') &&
              (function Z(J, Ge) {
                return Object.prototype.hasOwnProperty.call(J, Ge);
              })(J, Se) &&
              (!Ge ||
                ('caller' !== Se && 'callee' !== Se && 'arguments' !== Se))
            ) {
              const Ke = J[Se];
              (Rt(Ke) || Ie(Ke)) && !Object.isFrozen(Ke) && un(Ke);
            }
          }),
          J
        );
      }
      function ti(J, Ge = []) {
        return (M(J) || G(J)) && 0 === Ge.length
          ? { path: ['root'], value: J }
          : Object.keys(J).reduce((Ke, Tt) => {
              if (Ke) return Ke;
              const It = J[Tt];
              return (function xe(J) {
                return Ie(J) && J.hasOwnProperty('\u0275cmp');
              })(It)
                ? Ke
                : !(
                    M(It) ||
                    G(It) ||
                    (function rn(J) {
                      return 'number' == typeof J;
                    })(It) ||
                    (function St(J) {
                      return 'boolean' == typeof J;
                    })(It) ||
                    (function Xe(J) {
                      return 'string' == typeof J;
                    })(It) ||
                    Q(It)
                  ) &&
                    ((function Kt(J) {
                      if (
                        !(function tt(J) {
                          return Rt(J) && !Q(J);
                        })(J)
                      )
                        return !1;
                      const Ge = Object.getPrototypeOf(J);
                      return Ge === Object.prototype || null === Ge;
                    })(It)
                      ? ti(It, [...Ge, Tt])
                      : { path: [...Ge, Tt], value: It });
            }, !1);
      }
      function ui(J, Ge) {
        if (!1 === J) return;
        const Se = J.path.join('.'),
          Ke = new Error(
            `Detected unserializable ${Ge} at "${Se}". ${b}#strict${Ge}serializability`,
          );
        throw ((Ke.value = J.value), (Ke.unserializablePath = Se), Ke);
      }
      function hi(J) {
        return (0, s.X6Q)()
          ? {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !0,
              strictActionImmutability: !0,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
              ...J,
            }
          : {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !1,
              strictActionImmutability: !1,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
            };
      }
      function wn({
        strictActionSerializability: J,
        strictStateSerializability: Ge,
      }) {
        return Se =>
          J || Ge
            ? (function Un(J, Ge) {
                return function (Se, Ke) {
                  Ge.action(Ke) && ui(ti(Ke), 'action');
                  const Tt = J(Se, Ke);
                  return Ge.state() && ui(ti(Tt), 'state'), Tt;
                };
              })(Se, { action: Ke => J && !Ci(Ke), state: () => Ge })
            : Se;
      }
      function Ti({
        strictActionImmutability: J,
        strictStateImmutability: Ge,
      }) {
        return Se =>
          J || Ge
            ? (function zt(J, Ge) {
                return function (Se, Ke) {
                  const Tt = Ge.action(Ke) ? un(Ke) : Ke,
                    It = J(Se, Tt);
                  return Ge.state() ? un(It) : It;
                };
              })(Se, { action: Ke => J && !Ci(Ke), state: () => Ge })
            : Se;
      }
      function Ci(J) {
        return J.type.startsWith('@ngrx');
      }
      function fn({ strictActionWithinNgZone: J }) {
        return Ge =>
          J
            ? (function Xn(J, Ge) {
                return function (Se, Ke) {
                  if (Ge.action(Ke) && !s.R0b.isInAngularZone())
                    throw new Error(
                      `Action '${Ke.type}' running outside NgZone. ${b}#strictactionwithinngzone`,
                    );
                  return J(Se, Ke);
                };
              })(Ge, { action: Se => J && !Ci(Se) })
            : Ge;
      }
      function Ji(J) {
        return [
          { provide: kt, useValue: J },
          { provide: dn, useFactory: yr, deps: [kt] },
          { provide: En, deps: [dn], useFactory: hi },
          { provide: Sn, multi: !0, deps: [En], useFactory: Ti },
          { provide: Sn, multi: !0, deps: [En], useFactory: wn },
          { provide: Sn, multi: !0, deps: [En], useFactory: fn },
        ];
      }
      function Ki() {
        return [{ provide: at, multi: !0, deps: [En], useFactory: xi }];
      }
      function yr(J) {
        return J;
      }
      function xi(J) {
        if (!J.strictActionTypeUniqueness) return;
        const Ge = Object.entries(ie)
          .filter(([, Se]) => Se > 1)
          .map(([Se]) => Se);
        if (Ge.length)
          throw new Error(
            `Action types are registered more than once, ${Ge.map(
              Se => `"${Se}"`,
            ).join(', ')}. ${b}#strictactiontypeuniqueness`,
          );
      }
      function Pi(J = {}, Ge = {}) {
        return [
          { provide: Pe, useFactory: di },
          { provide: Le, useValue: Ge.initialState },
          { provide: Ye, useFactory: Vi, deps: [Le] },
          { provide: mt, useValue: J },
          { provide: a, useExisting: J instanceof s.OlP ? J : mt },
          { provide: Gt, deps: [mt, [new s.tBr(a)]], useFactory: ei },
          { provide: pn, useValue: Ge.metaReducers ? Ge.metaReducers : [] },
          { provide: Tn, deps: [Sn, pn], useFactory: ur },
          { provide: We, useValue: Ge.reducerFactory ? Ge.reducerFactory : Me },
          { provide: dt, deps: [We, Tn], useFactory: ye },
          Ce,
          nt,
          Ot,
          Je,
          Te,
          Ji(Ge.runtimeChecks),
          Ki(),
        ];
      }
      function Ui(J, Ge, Se = {}) {
        return [
          { provide: $t, multi: !0, useValue: J instanceof Object ? {} : Se },
          {
            provide: nn,
            multi: !0,
            useValue: {
              key: J instanceof Object ? J.name : J,
              reducerFactory:
                Se instanceof s.OlP || !Se.reducerFactory
                  ? Me
                  : Se.reducerFactory,
              metaReducers:
                Se instanceof s.OlP || !Se.metaReducers ? [] : Se.metaReducers,
              initialState:
                Se instanceof s.OlP || !Se.initialState
                  ? void 0
                  : Se.initialState,
            },
          },
          { provide: et, deps: [$t, nn], useFactory: Di },
          {
            provide: ft,
            multi: !0,
            useValue: J instanceof Object ? J.reducer : Ge,
          },
          {
            provide: pt,
            multi: !0,
            useExisting: Ge instanceof s.OlP ? Ge : ft,
          },
          {
            provide: Wt,
            multi: !0,
            deps: [ft, [new s.tBr(pt)]],
            useFactory: qr,
          },
          Ki(),
        ];
      }
      let Zi = (() => {
          class J {
            constructor(Se, Ke, Tt, It, hn, bn) {}
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(Ue),
                s.LFG(ke),
                s.LFG(wt),
                s.LFG(At),
                s.LFG(Pe, 8),
                s.LFG(at, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        Dr = (() => {
          class J {
            constructor(Se, Ke, Tt, It, hn) {
              (this.features = Se),
                (this.featureReducers = Ke),
                (this.reducerManager = Tt);
              const bn = Se.map((Pn, Jn) => {
                const Ei = Ke.shift()[Jn];
                return {
                  ...Pn,
                  reducers: Ei,
                  initialState: Vi(Pn.initialState),
                };
              });
              Tt.addFeatures(bn);
            }
            ngOnDestroy() {
              this.reducerManager.removeFeatures(this.features);
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(et),
                s.LFG(Wt),
                s.LFG(pe),
                s.LFG(Zi),
                s.LFG(at, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        rr = (() => {
          class J {
            static forRoot(Se, Ke) {
              return { ngModule: Zi, providers: [...Pi(Se, Ke)] };
            }
            static forFeature(Se, Ke, Tt = {}) {
              return { ngModule: Dr, providers: [...Ui(Se, Ke, Tt)] };
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)();
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })();
      function gi(...J) {
        return { reducer: J.pop(), types: J.map(Ke => Ke.type) };
      }
      function Fn(J, ...Ge) {
        const Se = new Map();
        for (const Ke of Ge)
          for (const Tt of Ke.types) {
            const It = Se.get(Tt);
            Se.set(
              Tt,
              It ? (bn, Pn) => Ke.reducer(It(bn, Pn), Pn) : Ke.reducer,
            );
          }
        return function (Ke = J, Tt) {
          const It = Se.get(Tt.type);
          return It ? It(Ke, Tt) : Ke;
        };
      }
    },
  },
  Pt => {
    Pt((Pt.s = 4044));
  },
]);
