'use strict';
(self.webpackChunktimepage = self.webpackChunktimepage || []).push([
  [179],
  {
    568: (Rt, Pe, C) => {
      C.r(Pe), C.d(Pe, { AuthModule: () => yn });
      var s = C(6895),
        x = C(8252),
        L = C(4006);
      class oe {
        constructor(ft, Et, mt) {
          (this.name = ft), (this.description = Et), (this.rules = mt);
        }
      }
      const ve = /^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/,
        le = {
          LOGIN: [L.kI.required, L.kI.minLength(6)],
          PASS: [L.kI.required, L.kI.minLength(6)],
          EMAIL: [L.kI.pattern(ve)],
          EMAIL_REQUIRED: [L.kI.required, L.kI.pattern(ve)],
        },
        he = ['dirty'],
        ae = {
          required: new oe('required', 'Required field', [...he]),
          email: new oe('pattern', 'Email is incorrect', [...he]),
          repass: new oe('repass', "Passwords don't match", ['dirty']),
          minLength: rt =>
            new oe('minlength', `Minimal length is ${rt} symbols`, [...he]),
          maxLength: rt =>
            new oe('maxlength', `Maximum length of ${rt} symbols is exceeded`, [
              ...he,
            ]),
          pattern: rt =>
            new oe('pattern', `Field must satisfy to pattern: ${rt}`, [...he]),
        },
        pe = {
          LOGIN: [ae.required, ae.minLength(6)],
          EMAIL: [ae.email],
          EMAIL_REQUIRED: [ae.required, ae.email],
          PASS: [ae.required, ae.minLength(6)],
          REPASS: [
            ae.required,
            ae.pattern('\u0441\u0442\u0440\u043e\u043a\u0438'),
            ae.repass,
          ],
        };
      function ie(rt) {
        const { pass: ft, repass: Et } = rt.controls;
        return (
          ft.value && Et.value && ft.value !== Et.value
            ? Et.setErrors({ repass: !0, ...Et.errors })
            : Et.errors &&
              'repass' in Et.errors &&
              Et.setErrors(
                Object.keys(Et.errors).length > 0 ? Et.errors : null,
              ),
          null
        );
      }
      var Ve = C(6054),
        Ue = C(1831);
      const at = rt => rt.auth,
        vt = (0, Ue.P1)(at, rt => rt.loading),
        Le = (0, Ue.P1)(at, rt => rt.registrationLogin),
        _t = (0, Ue.P1)(at, rt => rt.isAuth),
        lt = (0, Ue.P1)(at, rt => rt.error);
      var bt = C(9300),
        W = C(4650),
        se = C(7009),
        ne = C(9549),
        X = C(4144),
        we = C(4859);
      function nt(rt, ft) {
        if ((1 & rt && (W.TgZ(0, 'span', 3), W._uU(1), W.qZA()), 2 & rt)) {
          const Et = W.oxw().$implicit;
          W.xp6(1), W.hij(' ', Et.description, ' ');
        }
      }
      function ut(rt, ft) {
        if (
          (1 & rt && (W.ynx(0), W.YNc(1, nt, 2, 1, 'span', 2), W.BQk()), 2 & rt)
        ) {
          const Et = ft.$implicit,
            mt = W.oxw();
          W.xp6(1),
            W.Q6J(
              'ngIf',
              mt.control.hasError(Et.name) && mt.isRulesApplied(Et),
            );
        }
      }
      let Ut = (() => {
        class rt {
          isRulesApplied(Et) {
            return Et.rules.every(mt => this.control[mt]);
          }
        }
        return (
          (rt.ɵfac = function (Et) {
            return new (Et || rt)();
          }),
          (rt.ɵcmp = W.Xpm({
            type: rt,
            selectors: [['app-input-error']],
            inputs: { form: 'form', control: 'control', errors: 'errors' },
            decls: 2,
            vars: 2,
            consts: [
              [1, 'error', 3, 'formGroup'],
              [4, 'ngFor', 'ngForOf'],
              ['class', 'error', 4, 'ngIf'],
              [1, 'error'],
            ],
            template: function (Et, mt) {
              1 & Et &&
                (W.ynx(0, 0), W.YNc(1, ut, 2, 1, 'ng-container', 1), W.BQk()),
                2 & Et &&
                  (W.Q6J('formGroup', mt.form),
                  W.xp6(1),
                  W.Q6J('ngForOf', mt.errors));
            },
            dependencies: [s.sg, s.O5, L.JL, L.sg],
            styles: [
              '[_nghost-%COMP%]{display:block;margin-bottom:11px;margin-top:-22px;height:14px}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{font-size:11px;color:#e00052}',
            ],
          })),
          rt
        );
      })();
      const At = [
        {
          path: 'signup',
          component: (() => {
            class rt {
              constructor(Et, mt, ln, mn) {
                (this.fb = Et),
                  (this.store = mt),
                  (this.router = ln),
                  (this.snackBar = mn),
                  (this.loading = !1),
                  (this.regForm = this.fb.group(
                    {
                      username: ['', le.LOGIN],
                      email: ['', le.EMAIL_REQUIRED],
                      pass: ['', le.PASS],
                      repass: ['', le.PASS],
                    },
                    { validators: ie, updateOn: 'change' },
                  )),
                  (this.errors = {
                    username: pe.LOGIN,
                    email: pe.EMAIL_REQUIRED,
                    pass: pe.PASS,
                    repass: pe.REPASS,
                  }),
                  (this.loadingSubscription = this.store
                    .select(vt)
                    .subscribe(dn => (this.loading = dn))),
                  (this.registrationSubscrption = this.store
                    .select(Le)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(() => {
                      this.snackBar.open(
                        'Account has been successfully created',
                        void 0,
                        { duration: 3e3 },
                      ),
                        this.router.navigate(['/auth/signin']);
                    })),
                  (this.errorSubscription = this.store
                    .select(lt)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(dn => {
                      this.snackBar.open(dn, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, Ve.E)()),
                  this.loadingSubscription.unsubscribe(),
                  this.registrationSubscrption.unsubscribe(),
                  this.errorSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.regForm.invalid;
              }
              onRegistration() {
                const {
                  username: Et,
                  email: mt,
                  pass: ln,
                } = this.regForm.value;
                Et &&
                  mt &&
                  ln &&
                  this.store.dispatch(
                    (0, Ve.y1)({ username: Et, email: mt, password: ln }),
                  );
              }
            }
            return (
              (rt.ɵfac = function (Et) {
                return new (Et || rt)(
                  W.Y36(L.qu),
                  W.Y36(Ue.yh),
                  W.Y36(x.F0),
                  W.Y36(se.ux),
                );
              }),
              (rt.ɵcmp = W.Xpm({
                type: rt,
                selectors: [['app-signup']],
                decls: 32,
                vars: 18,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'data-testid',
                    'username-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'email',
                    'data-testid',
                    'email',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'email-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'password-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'repass',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'repass-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signup',
                    1,
                    'signup-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'signup-block'],
                  [
                    'routerLink',
                    '/auth/signin',
                    'data-testid',
                    'signin',
                    1,
                    'signup-login',
                    'link',
                  ],
                ],
                template: function (Et, mt) {
                  1 & Et &&
                    (W.TgZ(0, 'div', 0)(1, 'header', 1),
                    W._uU(2, 'Sign Up'),
                    W.qZA(),
                    W.TgZ(3, 'form', 2),
                    W.NdJ('keydown.enter', function () {
                      return !mt.isDisabled && mt.onRegistration();
                    }),
                    W.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    W._uU(6, 'Username'),
                    W.qZA(),
                    W._UZ(7, 'input', 3),
                    W.qZA(),
                    W._UZ(8, 'app-input-error', 4),
                    W.TgZ(9, 'mat-form-field')(10, 'mat-label'),
                    W._uU(11, 'Email'),
                    W.qZA(),
                    W._UZ(12, 'input', 5),
                    W.qZA(),
                    W._UZ(13, 'app-input-error', 6),
                    W.TgZ(14, 'mat-form-field')(15, 'mat-label'),
                    W._uU(16, 'Password'),
                    W.qZA(),
                    W._UZ(17, 'input', 7),
                    W.qZA(),
                    W._UZ(18, 'app-input-error', 8),
                    W.TgZ(19, 'mat-form-field')(20, 'mat-label'),
                    W._uU(21, 'Repeat password'),
                    W.qZA(),
                    W._UZ(22, 'input', 9),
                    W.qZA(),
                    W._UZ(23, 'app-input-error', 10),
                    W.TgZ(24, 'button', 11),
                    W.NdJ('click', function () {
                      return mt.onRegistration();
                    }),
                    W._uU(25, ' Sign Up '),
                    W.qZA(),
                    W._UZ(26, 'div', 12),
                    W.TgZ(27, 'div', 13)(28, 'span'),
                    W._uU(29, 'Do you have an account?'),
                    W.qZA(),
                    W.TgZ(30, 'a', 14),
                    W._uU(31, 'Sign In'),
                    W.qZA()()()()),
                    2 & Et &&
                      (W.xp6(3),
                      W.Q6J('formGroup', mt.regForm),
                      W.xp6(4),
                      W.Q6J('formControl', mt.regForm.controls.username),
                      W.xp6(1),
                      W.Q6J('form', mt.regForm)(
                        'control',
                        mt.regForm.controls.username,
                      )('errors', mt.errors.username),
                      W.xp6(4),
                      W.Q6J('formControl', mt.regForm.controls.email),
                      W.xp6(1),
                      W.Q6J('form', mt.regForm)(
                        'control',
                        mt.regForm.controls.email,
                      )('errors', mt.errors.email),
                      W.xp6(4),
                      W.Q6J('formControl', mt.regForm.controls.pass),
                      W.xp6(1),
                      W.Q6J('form', mt.regForm)(
                        'control',
                        mt.regForm.controls.pass,
                      )('errors', mt.errors.pass),
                      W.xp6(4),
                      W.Q6J('formControl', mt.regForm.controls.repass),
                      W.xp6(1),
                      W.Q6J('form', mt.regForm)(
                        'control',
                        mt.regForm.controls.repass,
                      )('errors', mt.errors.repass),
                      W.xp6(1),
                      W.Q6J('disabled', mt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ne.KE,
                  ne.hX,
                  X.Nt,
                  we.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                  Ut,
                ],
                styles: [
                  '.signup-button[_ngcontent-%COMP%]{display:flex}.signup-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.signup-login[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              rt
            );
          })(),
        },
        {
          path: 'signin',
          component: (() => {
            class rt {
              constructor(Et, mt, ln, mn) {
                (this.fb = Et),
                  (this.store = mt),
                  (this.router = ln),
                  (this.snackBar = mn),
                  (this.loading = !1),
                  (this.logInForm = this.fb.group({
                    username: ['', [L.kI.required]],
                    pass: ['', [L.kI.required]],
                  })),
                  (this.loadingSubscription = this.store
                    .select(vt)
                    .subscribe(dn => (this.loading = dn))),
                  (this.errorSubscription = this.store
                    .select(lt)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(dn => {
                      this.snackBar.open(dn, void 0, { duration: 5e3 });
                    })),
                  (this.isAuthSubscription = this.store
                    .select(_t)
                    .pipe((0, bt.h)(Boolean))
                    .subscribe(dn => {
                      this.router.navigate(['/calendar']);
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, Ve.DH)()),
                  this.errorSubscription.unsubscribe(),
                  this.loadingSubscription.unsubscribe(),
                  this.isAuthSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.logInForm.invalid;
              }
              onLogin() {
                const { username: Et, pass: mt } = this.logInForm.value;
                Et &&
                  mt &&
                  this.store.dispatch(
                    (0, Ve.zB)({ username: Et, password: mt }),
                  );
              }
            }
            return (
              (rt.ɵfac = function (Et) {
                return new (Et || rt)(
                  W.Y36(L.qu),
                  W.Y36(Ue.yh),
                  W.Y36(x.F0),
                  W.Y36(se.ux),
                );
              }),
              (rt.ɵcmp = W.Xpm({
                type: rt,
                selectors: [['app-signin']],
                decls: 20,
                vars: 4,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signin',
                    1,
                    'login-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'login-block'],
                  [
                    'routerLink',
                    '/auth/signup',
                    'data-testid',
                    'signup',
                    1,
                    'login-registration',
                    'link',
                  ],
                ],
                template: function (Et, mt) {
                  1 & Et &&
                    (W.TgZ(0, 'div', 0)(1, 'header', 1),
                    W._uU(2, 'Sign In'),
                    W.qZA(),
                    W.TgZ(3, 'form', 2),
                    W.NdJ('keydown.enter', function () {
                      return !mt.isDisabled && mt.onLogin();
                    }),
                    W.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    W._uU(6, 'Username'),
                    W.qZA(),
                    W._UZ(7, 'input', 3),
                    W.qZA(),
                    W.TgZ(8, 'mat-form-field')(9, 'mat-label'),
                    W._uU(10, 'Password'),
                    W.qZA(),
                    W._UZ(11, 'input', 4),
                    W.qZA(),
                    W.TgZ(12, 'button', 5),
                    W.NdJ('click', function () {
                      return mt.onLogin();
                    }),
                    W._uU(13, ' Sign In '),
                    W.qZA(),
                    W._UZ(14, 'div', 6),
                    W.TgZ(15, 'div', 7)(16, 'span'),
                    W._uU(17, "Don't have an account?"),
                    W.qZA(),
                    W.TgZ(18, 'a', 8),
                    W._uU(19, 'Sign Up'),
                    W.qZA()()()()),
                    2 & Et &&
                      (W.xp6(3),
                      W.Q6J('formGroup', mt.logInForm),
                      W.xp6(4),
                      W.Q6J('formControl', mt.logInForm.controls.username),
                      W.xp6(4),
                      W.Q6J('formControl', mt.logInForm.controls.pass),
                      W.xp6(1),
                      W.Q6J('disabled', mt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ne.KE,
                  ne.hX,
                  X.Nt,
                  we.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                ],
                styles: [
                  '.login-button[_ngcontent-%COMP%]{display:flex}.login-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.login-registration[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              rt
            );
          })(),
        },
      ];
      let $e = (() => {
        class rt {}
        return (
          (rt.ɵfac = function (Et) {
            return new (Et || rt)();
          }),
          (rt.ɵmod = W.oAB({ type: rt })),
          (rt.ɵinj = W.cJS({ imports: [x.Bz.forChild(At), x.Bz] })),
          rt
        );
      })();
      var He = C(2542),
        De = C(8776),
        je = C(4004),
        Ce = C(9646),
        Re = C(6129),
        Ne = C(262);
      let Ge = (() => {
        class rt {
          constructor(Et, mt) {
            (this.actions$ = Et),
              (this.authService = mt),
              (this.signUp$ = (0, De.GW)(() =>
                this.actions$.pipe(
                  (0, De.l4)(Ve.y1.type),
                  (0, Re.z)(({ username: ln, email: mn, password: dn }) =>
                    this.authService.register(ln, mn, dn).pipe(
                      (0, je.U)(() => (0, Ve.pV)({ login: ln })),
                      (0, Ne.K)(Gn =>
                        (0, Ce.of)(
                          (0, Ve.wq)({
                            error: Gn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.login$ = (0, De.GW)(() =>
                this.actions$.pipe(
                  (0, De.l4)(Ve.zB.type),
                  (0, Re.z)(({ username: ln, password: mn }) =>
                    this.authService.login(ln, mn).pipe(
                      (0, je.U)(() => (0, Ve.he)()),
                      (0, Ne.K)(dn =>
                        (0, Ce.of)(
                          (0, Ve.wq)({
                            error: dn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.logout$ = (0, De.GW)(() =>
                this.actions$.pipe(
                  (0, De.l4)(Ve.kS.type),
                  (0, Re.z)(() =>
                    this.authService.logout().pipe(
                      (0, je.U)(() => (0, Ve.wq)({ error: '' })),
                      (0, Ne.K)(ln =>
                        (0, Ce.of)(
                          (0, Ve.wq)({
                            error: ln?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (rt.ɵfac = function (Et) {
            return new (Et || rt)(W.LFG(De.eX), W.LFG(He.e));
          }),
          (rt.ɵprov = W.Yz7({ token: rt, factory: rt.ɵfac })),
          rt
        );
      })();
      const Ke = (0, Ue.Lq)(
        { loading: !1, registrationLogin: '', isAuth: !1 },
        (0, Ue.on)(Ve.y1, rt => ({ ...rt, error: void 0, loading: !0 })),
        (0, Ue.on)(Ve.zB, rt => ({ ...rt, error: void 0, loading: !0 })),
        (0, Ue.on)(Ve.wq, (rt, { error: ft }) => ({
          ...rt,
          error: ft,
          loading: !1,
        })),
        (0, Ue.on)(Ve.pV, (rt, { login: ft }) => ({
          ...rt,
          error: void 0,
          loading: !1,
          registrationLogin: ft,
        })),
        (0, Ue.on)(Ve.he, rt => ({
          ...rt,
          error: void 0,
          loading: !1,
          isAuth: !0,
        })),
        (0, Ue.on)(Ve.E, rt => ({
          ...rt,
          error: void 0,
          loading: !1,
          registrationLogin: '',
        })),
        (0, Ue.on)(Ve.DH, rt => ({
          ...rt,
          error: void 0,
          loading: !1,
          isAuth: !1,
        })),
      );
      var Wt = C(529);
      let pt = (() => {
        class rt {}
        return (
          (rt.ɵfac = function (Et) {
            return new (Et || rt)();
          }),
          (rt.ɵmod = W.oAB({ type: rt })),
          (rt.ɵinj = W.cJS({ imports: [s.ez, L.u5, L.UX, ne.lN, X.c] })),
          rt
        );
      })();
      var l = C(3238);
      let yn = (() => {
        class rt {}
        return (
          (rt.ɵfac = function (Et) {
            return new (Et || rt)();
          }),
          (rt.ɵmod = W.oAB({ type: rt })),
          (rt.ɵinj = W.cJS({
            providers: [He.e, { provide: l.rD, useClass: l.hu }],
            imports: [
              s.ez,
              $e,
              ne.lN,
              X.c,
              we.ot,
              L.u5,
              L.UX,
              De.sQ.forFeature([Ge]),
              Ue.Aw.forFeature('auth', Ke),
              Wt.JF,
              se.ZX,
              pt,
            ],
          })),
          rt
        );
      })();
    },
    2542: (Rt, Pe, C) => {
      C.d(Pe, { e: () => ve });
      var s = C(529),
        x = C(4004),
        L = C(3835),
        oe = C(4650),
        te = C(8252);
      const ue = { headers: new s.WM({ 'Content-Type': 'application/json' }) };
      let ve = (() => {
        class le {
          constructor(ae, pe) {
            (this.http = ae), (this.router = pe);
          }
          register(ae, pe, ie) {
            return this.http.post(
              `${L.k.apiUrl}/auth/signup`,
              { username: ae, email: pe, password: ie },
              ue,
            );
          }
          login(ae, pe) {
            return this.http
              .post(
                `${L.k.apiUrl}/auth/signin`,
                { username: ae, password: pe },
                ue,
              )
              .pipe(
                (0, x.U)(
                  ({ accessToken: ie }) => (
                    localStorage.setItem('token', ie), ie
                  ),
                ),
              );
          }
          logout() {
            return this.http.post(`${L.k.apiUrl}/auth/signout`, {}).pipe(
              (0, x.U)(() => {
                localStorage.removeItem('token'),
                  this.router.navigate(['/auth/signin']);
              }),
            );
          }
        }
        return (
          (le.ɵfac = function (ae) {
            return new (ae || le)(oe.LFG(s.eN), oe.LFG(te.F0));
          }),
          (le.ɵprov = oe.Yz7({
            token: le,
            factory: le.ɵfac,
            providedIn: 'root',
          })),
          le
        );
      })();
    },
    6054: (Rt, Pe, C) => {
      C.d(Pe, {
        DH: () => le,
        E: () => ve,
        he: () => ue,
        kS: () => he,
        pV: () => te,
        wq: () => oe,
        y1: () => L,
        zB: () => x,
      });
      var s = C(1831);
      const x = (0, s.PH)('[Auth] SignIn', (0, s.Ky)()),
        L = (0, s.PH)('[Auth] SignUp', (0, s.Ky)()),
        oe = (0, s.PH)('[Auth] Error', (0, s.Ky)()),
        te = (0, s.PH)('[Auth] Register Success', (0, s.Ky)()),
        ue = (0, s.PH)('[Auth] Login Success'),
        ve = (0, s.PH)('[Auth] Clear Registration Login'),
        le = (0, s.PH)('[Auth] Clear Auth'),
        he = (0, s.PH)('[Auth] Logout');
    },
    7754: (Rt, Pe, C) => {
      C.r(Pe), C.d(Pe, { CalendarModule: () => lc });
      var s = C(6895),
        x = C(8252),
        L = C(1831);
      const oe = (0, L.PH)('[Calendar] Load Calendar Notes', (0, L.Ky)()),
        te = (0, L.PH)('[Calendar] Load Todo Notes'),
        ue = (0, L.PH)('[Calendar] Calendar Notes Loaded', (0, L.Ky)()),
        ve = (0, L.PH)('[Calendar] Todo Notes Loaded', (0, L.Ky)()),
        le = (0, L.PH)('[Calendar] Load Notes Error', (0, L.Ky)()),
        he = (0, L.PH)('[Calendar] Create Note', (0, L.Ky)()),
        ae = (0, L.PH)('[Calendar] Update Note', (0, L.Ky)()),
        pe = (0, L.PH)('[Calendar] Delete Note', (0, L.Ky)()),
        ie = (0, L.PH)('[Calendar] Request Succeded'),
        Ve = (0, L.PH)('[Calendar] Reset Request Succeded'),
        Ue = (0, L.PH)('[Calendar] Update Min Rows Count', (0, L.Ky)()),
        at = (0, L.PH)('[Calendar] Complete Note', (0, L.Ky)()),
        vt = (0, L.PH)('[Calendar] Revert Note Completion', (0, L.Ky)()),
        Le = g => {
          const R = g.getDay() > 0 ? g.getDay() - 1 : 6,
            r = new Date(g);
          return r.setDate(g.getDate() - R), r;
        },
        _t = g => {
          const R = Le(g),
            r = new Date(R);
          return r.setDate(R.getDate() + 6), r;
        },
        lt = (g, R) => {
          const r = new Date(g);
          return r.setDate(g.getDate() - R), r;
        },
        bt = (g, R) => {
          const r = new Date(g);
          return r.setDate(g.getDate() + R), r;
        },
        ne = [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        X = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        we = g => (g < 10 ? `0${g}` : g),
        nt = g =>
          new Date(
            `${g.getFullYear()}-${we(g.getMonth() + 1)}-${we(
              g.getDate(),
            )}:00:00:00`,
          ).toISOString(),
        ut = g =>
          new Date(
            `${g.getFullYear()}-${we(g.getMonth() + 1)}-${we(
              g.getDate(),
            )}:23:59:59`,
          ).toISOString(),
        xt = g => `${we(g.getDate())}.${we(g.getMonth() + 1)}`,
        At = (g, R) =>
          new Date(
            `${g.getFullYear()}-${we(g.getMonth() + 1)}-${we(g.getDate())}T${
              R ?? '00:00'
            }:10`,
          ).toISOString(),
        $e = g => `${we(g.getHours())}:${we(g.getMinutes())}`;
      var He = C(9300);
      const De = g => g.calendar,
        Re =
          ((0, L.P1)(De, g => g.loading),
          (0, L.P1)(De, g => g.calendarNotes),
          (0, L.P1)(De, g => g.todoNotes)),
        Ne = (0, L.P1)(De, g => g.error),
        ct =
          ((0, L.P1)(De, g => g.loaded), (0, L.P1)(De, g => g.requestSuccess)),
        Ke = (0, L.P1)(De, (g, R) => g.calendarNotes && g.calendarNotes[R]),
        Wt = (0, L.P1)(De, g => g.minRowsCount);
      var pt = C(6054),
        l = C(4650),
        yn = C(7009),
        rt = C(4859),
        ft = C(3238),
        Et = C(1281),
        mt = C(9646),
        ln = C(2843),
        mn = C(4128),
        dn = C(727),
        Gn = C(8505),
        Jt = C(4004),
        Lt = C(262),
        Pn = C(8746),
        ot = C(3099),
        z = C(5698),
        ee = C(529),
        Ae = C(1481);
      const ze = ['*'];
      let _e;
      function H(g) {
        return (
          (function ye() {
            if (void 0 === _e && ((_e = null), typeof window < 'u')) {
              const g = window;
              void 0 !== g.trustedTypes &&
                (_e = g.trustedTypes.createPolicy('angular#components', {
                  createHTML: R => R,
                }));
            }
            return _e;
          })()?.createHTML(g) || g
        );
      }
      function ke(g) {
        return Error(`Unable to find icon with the name "${g}"`);
      }
      function me(g) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${g}".`,
        );
      }
      function fe(g) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${g}".`,
        );
      }
      class qe {
        constructor(R, r, c) {
          (this.url = R), (this.svgText = r), (this.options = c);
        }
      }
      let Mt = (() => {
        class g {
          constructor(r, c, _, k) {
            (this._httpClient = r),
              (this._sanitizer = c),
              (this._errorHandler = k),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                'material-icons',
                'mat-ligature-font',
              ]),
              (this._document = _);
          }
          addSvgIcon(r, c, _) {
            return this.addSvgIconInNamespace('', r, c, _);
          }
          addSvgIconLiteral(r, c, _) {
            return this.addSvgIconLiteralInNamespace('', r, c, _);
          }
          addSvgIconInNamespace(r, c, _, k) {
            return this._addSvgIconConfig(r, c, new qe(_, null, k));
          }
          addSvgIconResolver(r) {
            return this._resolvers.push(r), this;
          }
          addSvgIconLiteralInNamespace(r, c, _, k) {
            const ge = this._sanitizer.sanitize(l.q3G.HTML, _);
            if (!ge) throw fe(_);
            const st = H(ge);
            return this._addSvgIconConfig(r, c, new qe('', st, k));
          }
          addSvgIconSet(r, c) {
            return this.addSvgIconSetInNamespace('', r, c);
          }
          addSvgIconSetLiteral(r, c) {
            return this.addSvgIconSetLiteralInNamespace('', r, c);
          }
          addSvgIconSetInNamespace(r, c, _) {
            return this._addSvgIconSetConfig(r, new qe(c, null, _));
          }
          addSvgIconSetLiteralInNamespace(r, c, _) {
            const k = this._sanitizer.sanitize(l.q3G.HTML, c);
            if (!k) throw fe(c);
            const ge = H(k);
            return this._addSvgIconSetConfig(r, new qe('', ge, _));
          }
          registerFontClassAlias(r, c = r) {
            return this._fontCssClassesByAlias.set(r, c), this;
          }
          classNameForFontAlias(r) {
            return this._fontCssClassesByAlias.get(r) || r;
          }
          setDefaultFontSetClass(...r) {
            return (this._defaultFontSetClass = r), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(r) {
            const c = this._sanitizer.sanitize(l.q3G.RESOURCE_URL, r);
            if (!c) throw me(r);
            const _ = this._cachedIconsByUrl.get(c);
            return _
              ? (0, mt.of)(Ie(_))
              : this._loadSvgIconFromConfig(new qe(r, null)).pipe(
                  (0, Gn.b)(k => this._cachedIconsByUrl.set(c, k)),
                  (0, Jt.U)(k => Ie(k)),
                );
          }
          getNamedSvgIcon(r, c = '') {
            const _ = Dt(c, r);
            let k = this._svgIconConfigs.get(_);
            if (k) return this._getSvgFromConfig(k);
            if (((k = this._getIconConfigFromResolvers(c, r)), k))
              return this._svgIconConfigs.set(_, k), this._getSvgFromConfig(k);
            const ge = this._iconSetConfigs.get(c);
            return ge
              ? this._getSvgFromIconSetConfigs(r, ge)
              : (0, ln._)(ke(_));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(r) {
            return r.svgText
              ? (0, mt.of)(Ie(this._svgElementFromConfig(r)))
              : this._loadSvgIconFromConfig(r).pipe((0, Jt.U)(c => Ie(c)));
          }
          _getSvgFromIconSetConfigs(r, c) {
            const _ = this._extractIconWithNameFromAnySet(r, c);
            if (_) return (0, mt.of)(_);
            const k = c
              .filter(ge => !ge.svgText)
              .map(ge =>
                this._loadSvgIconSetFromConfig(ge).pipe(
                  (0, Lt.K)(st => {
                    const In = `Loading icon set URL: ${this._sanitizer.sanitize(
                      l.q3G.RESOURCE_URL,
                      ge.url,
                    )} failed: ${st.message}`;
                    return (
                      this._errorHandler.handleError(new Error(In)),
                      (0, mt.of)(null)
                    );
                  }),
                ),
              );
            return (0, mn.D)(k).pipe(
              (0, Jt.U)(() => {
                const ge = this._extractIconWithNameFromAnySet(r, c);
                if (!ge) throw ke(r);
                return ge;
              }),
            );
          }
          _extractIconWithNameFromAnySet(r, c) {
            for (let _ = c.length - 1; _ >= 0; _--) {
              const k = c[_];
              if (k.svgText && k.svgText.toString().indexOf(r) > -1) {
                const ge = this._svgElementFromConfig(k),
                  st = this._extractSvgIconFromSet(ge, r, k.options);
                if (st) return st;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(r) {
            return this._fetchIcon(r).pipe(
              (0, Gn.b)(c => (r.svgText = c)),
              (0, Jt.U)(() => this._svgElementFromConfig(r)),
            );
          }
          _loadSvgIconSetFromConfig(r) {
            return r.svgText
              ? (0, mt.of)(null)
              : this._fetchIcon(r).pipe((0, Gn.b)(c => (r.svgText = c)));
          }
          _extractSvgIconFromSet(r, c, _) {
            const k = r.querySelector(`[id="${c}"]`);
            if (!k) return null;
            const ge = k.cloneNode(!0);
            if ((ge.removeAttribute('id'), 'svg' === ge.nodeName.toLowerCase()))
              return this._setSvgAttributes(ge, _);
            if ('symbol' === ge.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(ge), _);
            const st = this._svgElementFromString(H('<svg></svg>'));
            return st.appendChild(ge), this._setSvgAttributes(st, _);
          }
          _svgElementFromString(r) {
            const c = this._document.createElement('DIV');
            c.innerHTML = r;
            const _ = c.querySelector('svg');
            if (!_) throw Error('<svg> tag not found');
            return _;
          }
          _toSvgElement(r) {
            const c = this._svgElementFromString(H('<svg></svg>')),
              _ = r.attributes;
            for (let k = 0; k < _.length; k++) {
              const { name: ge, value: st } = _[k];
              'id' !== ge && c.setAttribute(ge, st);
            }
            for (let k = 0; k < r.childNodes.length; k++)
              r.childNodes[k].nodeType === this._document.ELEMENT_NODE &&
                c.appendChild(r.childNodes[k].cloneNode(!0));
            return c;
          }
          _setSvgAttributes(r, c) {
            return (
              r.setAttribute('fit', ''),
              r.setAttribute('height', '100%'),
              r.setAttribute('width', '100%'),
              r.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              r.setAttribute('focusable', 'false'),
              c && c.viewBox && r.setAttribute('viewBox', c.viewBox),
              r
            );
          }
          _fetchIcon(r) {
            const { url: c, options: _ } = r,
              k = _?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function de() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.',
                );
              })();
            if (null == c) throw Error(`Cannot fetch icon from URL "${c}".`);
            const ge = this._sanitizer.sanitize(l.q3G.RESOURCE_URL, c);
            if (!ge) throw me(c);
            const st = this._inProgressUrlFetches.get(ge);
            if (st) return st;
            const an = this._httpClient
              .get(ge, { responseType: 'text', withCredentials: k })
              .pipe(
                (0, Jt.U)(In => H(In)),
                (0, Pn.x)(() => this._inProgressUrlFetches.delete(ge)),
                (0, ot.B)(),
              );
            return this._inProgressUrlFetches.set(ge, an), an;
          }
          _addSvgIconConfig(r, c, _) {
            return this._svgIconConfigs.set(Dt(r, c), _), this;
          }
          _addSvgIconSetConfig(r, c) {
            const _ = this._iconSetConfigs.get(r);
            return _ ? _.push(c) : this._iconSetConfigs.set(r, [c]), this;
          }
          _svgElementFromConfig(r) {
            if (!r.svgElement) {
              const c = this._svgElementFromString(r.svgText);
              this._setSvgAttributes(c, r.options), (r.svgElement = c);
            }
            return r.svgElement;
          }
          _getIconConfigFromResolvers(r, c) {
            for (let _ = 0; _ < this._resolvers.length; _++) {
              const k = this._resolvers[_](c, r);
              if (k)
                return et(k) ? new qe(k.url, null, k.options) : new qe(k, null);
            }
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.LFG(ee.eN, 8),
              l.LFG(Ae.H7),
              l.LFG(s.K0, 8),
              l.LFG(l.qLn),
            );
          }),
          (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      function Ie(g) {
        return g.cloneNode(!0);
      }
      function Dt(g, R) {
        return g + ':' + R;
      }
      function et(g) {
        return !(!g.url || !g.options);
      }
      const St = (0, ft.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        ),
        Te = new l.OlP('MAT_ICON_DEFAULT_OPTIONS'),
        F = new l.OlP('mat-icon-location', {
          providedIn: 'root',
          factory: function b() {
            const g = (0, l.f3M)(s.K0),
              R = g ? g.location : null;
            return { getPathname: () => (R ? R.pathname + R.search : '') };
          },
        }),
        M = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        G = M.map(g => `[${g}]`).join(', '),
        Q = /^url\(['"]?#(.*?)['"]?\)$/;
      let Qe = (() => {
          class g extends St {
            get inline() {
              return this._inline;
            }
            set inline(r) {
              this._inline = (0, Et.Ig)(r);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(r) {
              r !== this._svgIcon &&
                (r
                  ? this._updateSvgIcon(r)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = r));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontSet &&
                ((this._fontSet = c), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontIcon &&
                ((this._fontIcon = c), this._updateFontIconClasses());
            }
            constructor(r, c, _, k, ge, st) {
              super(r),
                (this._iconRegistry = c),
                (this._location = k),
                (this._errorHandler = ge),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = dn.w0.EMPTY),
                st &&
                  (st.color && (this.color = this.defaultColor = st.color),
                  st.fontSet && (this.fontSet = st.fontSet)),
                _ || r.nativeElement.setAttribute('aria-hidden', 'true');
            }
            _splitIconName(r) {
              if (!r) return ['', ''];
              const c = r.split(':');
              switch (c.length) {
                case 1:
                  return ['', c[0]];
                case 2:
                  return c;
                default:
                  throw Error(`Invalid icon name: "${r}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const r = this._elementsWithExternalReferences;
              if (r && r.size) {
                const c = this._location.getPathname();
                c !== this._previousPath &&
                  ((this._previousPath = c), this._prependPathToReferences(c));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(r) {
              this._clearSvgElement();
              const c = this._location.getPathname();
              (this._previousPath = c),
                this._cacheChildrenWithExternalReferences(r),
                this._prependPathToReferences(c),
                this._elementRef.nativeElement.appendChild(r);
            }
            _clearSvgElement() {
              const r = this._elementRef.nativeElement;
              let c = r.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                c--;

              ) {
                const _ = r.childNodes[c];
                (1 !== _.nodeType || 'svg' === _.nodeName.toLowerCase()) &&
                  _.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const r = this._elementRef.nativeElement,
                c = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter(_ => _.length > 0);
              this._previousFontSetClass.forEach(_ => r.classList.remove(_)),
                c.forEach(_ => r.classList.add(_)),
                (this._previousFontSetClass = c),
                this.fontIcon !== this._previousFontIconClass &&
                  !c.includes('mat-ligature-font') &&
                  (this._previousFontIconClass &&
                    r.classList.remove(this._previousFontIconClass),
                  this.fontIcon && r.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(r) {
              return 'string' == typeof r ? r.trim().split(' ')[0] : r;
            }
            _prependPathToReferences(r) {
              const c = this._elementsWithExternalReferences;
              c &&
                c.forEach((_, k) => {
                  _.forEach(ge => {
                    k.setAttribute(ge.name, `url('${r}#${ge.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(r) {
              const c = r.querySelectorAll(G),
                _ = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let k = 0; k < c.length; k++)
                M.forEach(ge => {
                  const st = c[k],
                    an = st.getAttribute(ge),
                    In = an ? an.match(Q) : null;
                  if (In) {
                    let Un = _.get(st);
                    Un || ((Un = []), _.set(st, Un)),
                      Un.push({ name: ge, value: In[1] });
                  }
                });
            }
            _updateSvgIcon(r) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                r)
              ) {
                const [c, _] = this._splitIconName(r);
                c && (this._svgNamespace = c),
                  _ && (this._svgName = _),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(_, c)
                    .pipe((0, z.q)(1))
                    .subscribe(
                      k => this._setSvgElement(k),
                      k => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${c}:${_}! ${k.message}`,
                          ),
                        );
                      },
                    ));
              }
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(Mt),
                l.$8M('aria-hidden'),
                l.Y36(F),
                l.Y36(l.qLn),
                l.Y36(Te, 8),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 8,
              hostBindings: function (r, c) {
                2 & r &&
                  (l.uIk(
                    'data-mat-icon-type',
                    c._usingFontIcon() ? 'font' : 'svg',
                  )('data-mat-icon-name', c._svgName || c.fontIcon)(
                    'data-mat-icon-namespace',
                    c._svgNamespace || c.fontSet,
                  )('fontIcon', c._usingFontIcon() ? c.fontIcon : null),
                  l.ekj('mat-icon-inline', c.inline)(
                    'mat-icon-no-color',
                    'primary' !== c.color &&
                      'accent' !== c.color &&
                      'warn' !== c.color,
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [l.qOj],
              ngContentSelectors: ze,
              decls: 1,
              vars: 0,
              template: function (r, c) {
                1 & r && (l.F$t(), l.Hsn(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Tt = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({ imports: [ft.BQ, ft.BQ] })),
            g
          );
        })();
      var Vt = C(2687),
        Je = C(9521),
        Ft = C(7579),
        en = C(6451),
        Oe = C(3101),
        be = C(8675),
        Z = C(3900),
        Ee = C(2722),
        dt = C(4986),
        Bt = C(7272),
        qt = C(8502),
        Dn = C(9718),
        Wn = C(5577),
        wi = C(8421);
      function _i(g, R) {
        return R
          ? r => (0, Bt.z)(R.pipe((0, z.q)(1), (0, qt.l)()), r.pipe(_i(g)))
          : (0, Wn.z)((r, c) =>
              (0, wi.Xf)(g(r, c)).pipe((0, z.q)(1), (0, Dn.h)(r)),
            );
      }
      var cr = C(5963);
      function Or(g, R = dt.z) {
        const r = (0, cr.H)(g, R);
        return _i(() => r);
      }
      var kn = C(4080),
        Gt = C(7340),
        ni = C(445),
        nn = C(8184),
        Kn = C(3353),
        qn = C(44);
      const ai = ['mat-menu-item', ''];
      function Di(g, R) {
        1 & g && (l.O4$(), l.TgZ(0, 'svg', 3), l._UZ(1, 'polygon', 4), l.qZA());
      }
      const eo = [[['mat-icon'], ['', 'matMenuItemIcon', '']], '*'],
        Ni = ['mat-icon, [matMenuItemIcon]', '*'];
      function dr(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'div', 0),
            l.NdJ('keydown', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._handleKeydown(_));
            })('click', function () {
              l.CHM(r);
              const _ = l.oxw();
              return l.KtG(_.closed.emit('click'));
            })('@transformMenu.start', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._onAnimationStart(_));
            })('@transformMenu.done', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._onAnimationDone(_));
            }),
            l.TgZ(1, 'div', 1),
            l.Hsn(2),
            l.qZA()();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Q6J('id', r.panelId)('ngClass', r._classList)(
            '@transformMenu',
            r._panelAnimationState,
          ),
            l.uIk('aria-label', r.ariaLabel || null)(
              'aria-labelledby',
              r.ariaLabelledby || null,
            )('aria-describedby', r.ariaDescribedby || null);
        }
      }
      const ui = ['*'],
        jt = new l.OlP('MAT_MENU_PANEL'),
        hn = (0, ft.Kr)((0, ft.Id)(class {}));
      let Nn = (() => {
        class g extends hn {
          constructor(r, c, _, k, ge) {
            super(),
              (this._elementRef = r),
              (this._document = c),
              (this._focusMonitor = _),
              (this._parentMenu = k),
              (this._changeDetectorRef = ge),
              (this.role = 'menuitem'),
              (this._hovered = new Ft.x()),
              (this._focused = new Ft.x()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              k?.addItem?.(this);
          }
          focus(r, c) {
            this._focusMonitor && r
              ? this._focusMonitor.focusVia(this._getHostElement(), r, c)
              : this._getHostElement().focus(c),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(r) {
            this.disabled && (r.preventDefault(), r.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const r = this._elementRef.nativeElement.cloneNode(!0),
              c = r.querySelectorAll('mat-icon, .material-icons');
            for (let _ = 0; _ < c.length; _++) c[_].remove();
            return r.textContent?.trim() || '';
          }
          _setHighlighted(r) {
            (this._highlighted = r), this._changeDetectorRef?.markForCheck();
          }
          _setTriggersSubmenu(r) {
            (this._triggersSubmenu = r),
              this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(l.SBq),
              l.Y36(s.K0),
              l.Y36(Vt.tE),
              l.Y36(jt, 8),
              l.Y36(l.sBO),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [
              1,
              'mat-mdc-menu-item',
              'mat-mdc-focus-indicator',
              'mdc-list-item',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              1 & r &&
                l.NdJ('click', function (k) {
                  return c._checkDisabled(k);
                })('mouseenter', function () {
                  return c._handleMouseEnter();
                }),
                2 & r &&
                  (l.uIk('role', c.role)('tabindex', c._getTabIndex())(
                    'aria-disabled',
                    c.disabled,
                  )('disabled', c.disabled || null),
                  l.ekj('mat-mdc-menu-item-highlighted', c._highlighted)(
                    'mat-mdc-menu-item-submenu-trigger',
                    c._triggersSubmenu,
                  ));
            },
            inputs: {
              disabled: 'disabled',
              disableRipple: 'disableRipple',
              role: 'role',
            },
            exportAs: ['matMenuItem'],
            features: [l.qOj],
            attrs: ai,
            ngContentSelectors: Ni,
            decls: 5,
            vars: 3,
            consts: [
              [1, 'mdc-list-item__primary-text'],
              [
                'matRipple',
                '',
                1,
                'mat-mdc-menu-ripple',
                3,
                'matRippleDisabled',
                'matRippleTrigger',
              ],
              [
                'class',
                'mat-mdc-menu-submenu-icon',
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                4,
                'ngIf',
              ],
              [
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                1,
                'mat-mdc-menu-submenu-icon',
              ],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (r, c) {
              1 & r &&
                (l.F$t(eo),
                l.Hsn(0),
                l.TgZ(1, 'span', 0),
                l.Hsn(2, 1),
                l.qZA(),
                l._UZ(3, 'div', 1),
                l.YNc(4, Di, 2, 0, 'svg', 2)),
                2 & r &&
                  (l.xp6(3),
                  l.Q6J('matRippleDisabled', c.disableRipple || c.disabled)(
                    'matRippleTrigger',
                    c._getHostElement(),
                  ),
                  l.xp6(1),
                  l.Q6J('ngIf', c._triggersSubmenu));
            },
            dependencies: [s.O5, ft.wG],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const li = new l.OlP('MatMenuContent'),
        ri = {
          transformMenu: (0, Gt.X$)('transformMenu', [
            (0, Gt.SB)(
              'void',
              (0, Gt.oB)({ opacity: 0, transform: 'scale(0.8)' }),
            ),
            (0, Gt.eR)(
              'void => enter',
              (0, Gt.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Gt.oB)({ opacity: 1, transform: 'scale(1)' }),
              ),
            ),
            (0, Gt.eR)(
              '* => void',
              (0, Gt.jt)('100ms 25ms linear', (0, Gt.oB)({ opacity: 0 })),
            ),
          ]),
          fadeInItems: (0, Gt.X$)('fadeInItems', [
            (0, Gt.SB)('showing', (0, Gt.oB)({ opacity: 1 })),
            (0, Gt.eR)('void => *', [
              (0, Gt.oB)({ opacity: 0 }),
              (0, Gt.jt)('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        };
      let zi = 0;
      const ur = new l.OlP('mat-menu-default-options', {
        providedIn: 'root',
        factory: function Ai() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let Xn = (() => {
          class g {
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(r) {
              (this._xPosition = r), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(r) {
              (this._yPosition = r), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(r) {
              this._overlapTrigger = (0, Et.Ig)(r);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(r) {
              this._hasBackdrop = (0, Et.Ig)(r);
            }
            set panelClass(r) {
              const c = this._previousPanelClass;
              c &&
                c.length &&
                c.split(' ').forEach(_ => {
                  this._classList[_] = !1;
                }),
                (this._previousPanelClass = r),
                r &&
                  r.length &&
                  (r.split(' ').forEach(_ => {
                    this._classList[_] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(r) {
              this.panelClass = r;
            }
            constructor(r, c, _, k) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._defaultOptions = _),
                (this._changeDetectorRef = k),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new l.n_E()),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new Ft.x()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new l.vpe()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + zi++);
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new Vt.Em(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit('tab'),
                ),
                this._directDescendantItems.changes
                  .pipe(
                    (0, be.O)(this._directDescendantItems),
                    (0, Z.w)(r => (0, en.T)(...r.map(c => c._focused))),
                  )
                  .subscribe(r => this._keyManager.updateActiveItem(r)),
                this._directDescendantItems.changes.subscribe(r => {
                  const c = this._keyManager;
                  if (
                    'enter' === this._panelAnimationState &&
                    c.activeItem?._hasFocus()
                  ) {
                    const _ = r.toArray(),
                      k = Math.max(
                        0,
                        Math.min(_.length - 1, c.activeItemIndex || 0),
                      );
                    _[k] && !_[k].disabled
                      ? c.setActiveItem(k)
                      : c.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._directDescendantItems.destroy(),
                this.closed.complete(),
                this._firstItemFocusSubscription?.unsubscribe();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                (0, be.O)(this._directDescendantItems),
                (0, Z.w)(c => (0, en.T)(...c.map(_ => _._hovered))),
              );
            }
            addItem(r) {}
            removeItem(r) {}
            _handleKeydown(r) {
              const c = r.keyCode,
                _ = this._keyManager;
              switch (c) {
                case Je.hY:
                  (0, Je.Vb)(r) ||
                    (r.preventDefault(), this.closed.emit('keydown'));
                  break;
                case Je.oh:
                  this.parentMenu &&
                    'ltr' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                case Je.SV:
                  this.parentMenu &&
                    'rtl' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                default:
                  return (
                    (c === Je.LH || c === Je.JH) &&
                      _.setFocusOrigin('keyboard'),
                    void _.onKeydown(r)
                  );
              }
              r.stopPropagation();
            }
            focusFirstItem(r = 'program') {
              this._firstItemFocusSubscription?.unsubscribe(),
                (this._firstItemFocusSubscription = this._ngZone.onStable
                  .pipe((0, z.q)(1))
                  .subscribe(() => {
                    let c = null;
                    if (
                      (this._directDescendantItems.length &&
                        (c = this._directDescendantItems.first
                          ._getHostElement()
                          .closest('[role="menu"]')),
                      !c || !c.contains(document.activeElement))
                    ) {
                      const _ = this._keyManager;
                      _.setFocusOrigin(r).setFirstItemActive(),
                        !_.activeItem && c && c.focus();
                    }
                  }));
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(r) {
              const c = Math.min(this._baseElevation + r, 24),
                _ = `${this._elevationPrefix}${c}`,
                k = Object.keys(this._classList).find(ge =>
                  ge.startsWith(this._elevationPrefix),
                );
              (!k || k === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[_] = !0),
                (this._previousElevation = _));
            }
            setPositionClasses(r = this.xPosition, c = this.yPosition) {
              const _ = this._classList;
              (_['mat-menu-before'] = 'before' === r),
                (_['mat-menu-after'] = 'after' === r),
                (_['mat-menu-above'] = 'above' === c),
                (_['mat-menu-below'] = 'below' === c),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(r) {
              this._animationDone.next(r), (this._isAnimating = !1);
            }
            _onAnimationStart(r) {
              (this._isAnimating = !0),
                'enter' === r.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (r.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes
                .pipe((0, be.O)(this._allItems))
                .subscribe(r => {
                  this._directDescendantItems.reset(
                    r.filter(c => c._parentMenu === this),
                  ),
                    this._directDescendantItems.notifyOnChanges();
                });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(l.R0b),
                l.Y36(ur),
                l.Y36(l.sBO),
              );
            }),
            (g.ɵdir = l.lG2({
              type: g,
              contentQueries: function (r, c, _) {
                if (
                  (1 & r && (l.Suo(_, li, 5), l.Suo(_, Nn, 5), l.Suo(_, Nn, 4)),
                  2 & r)
                ) {
                  let k;
                  l.iGM((k = l.CRH())) && (c.lazyContent = k.first),
                    l.iGM((k = l.CRH())) && (c._allItems = k),
                    l.iGM((k = l.CRH())) && (c.items = k);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && l.Gf(l.Rgc, 5), 2 & r)) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c.templateRef = _.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            g
          );
        })(),
        er = (() => {
          class g extends Xn {
            constructor(r, c, _, k) {
              super(r, c, _, k),
                (this._elevationPrefix = 'mat-elevation-z'),
                (this._baseElevation = 8);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(l.R0b),
                l.Y36(ur),
                l.Y36(l.sBO),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (r, c) {
                2 & r &&
                  l.uIk('aria-label', null)('aria-labelledby', null)(
                    'aria-describedby',
                    null,
                  );
              },
              exportAs: ['matMenu'],
              features: [l._Bn([{ provide: jt, useExisting: g }]), l.qOj],
              ngContentSelectors: ui,
              decls: 1,
              vars: 0,
              consts: [
                [
                  'tabindex',
                  '-1',
                  'role',
                  'menu',
                  1,
                  'mat-mdc-menu-panel',
                  'mdc-menu-surface',
                  'mdc-menu-surface--open',
                  'mat-mdc-elevation-specific',
                  3,
                  'id',
                  'ngClass',
                  'keydown',
                  'click',
                ],
                [1, 'mat-mdc-menu-content', 'mdc-list'],
              ],
              template: function (r, c) {
                1 & r && (l.F$t(), l.YNc(0, dr, 3, 6, 'ng-template'));
              },
              dependencies: [s.mk],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;position:relative}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item.mdc-list-item{align-items:center}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item .mdc-list-item__primary-text{white-space:normal}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [ri.transformMenu, ri.fadeInItems] },
              changeDetection: 0,
            })),
            g
          );
        })();
      const Si = new l.OlP('mat-menu-scroll-strategy'),
        hr = {
          provide: Si,
          deps: [nn.aV],
          useFactory: function Li(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        or = (0, Kn.i$)({ passive: !0 });
      let ki = (() => {
          class g {
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(r) {
              this.menu = r;
            }
            get menu() {
              return this._menu;
            }
            set menu(r) {
              r !== this._menu &&
                ((this._menu = r),
                this._menuCloseSubscription.unsubscribe(),
                r &&
                  (this._menuCloseSubscription = r.close.subscribe(c => {
                    this._destroyMenu(c),
                      ('click' === c || 'tab' === c) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(c);
                  })),
                this._menuItemInstance?._setTriggersSubmenu(
                  this.triggersSubmenu(),
                ));
            }
            constructor(r, c, _, k, ge, st, an, In, Un) {
              (this._overlay = r),
                (this._element = c),
                (this._viewContainerRef = _),
                (this._menuItemInstance = st),
                (this._dir = an),
                (this._focusMonitor = In),
                (this._ngZone = Un),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = dn.w0.EMPTY),
                (this._hoverSubscription = dn.w0.EMPTY),
                (this._menuCloseSubscription = dn.w0.EMPTY),
                (this._changeDetectorRef = (0, l.f3M)(l.sBO)),
                (this._handleTouchStart = gi => {
                  (0, Vt.yG)(gi) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new l.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new l.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = k),
                (this._parentMaterialMenu = ge instanceof Xn ? ge : void 0),
                c.nativeElement.addEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  or,
                );
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  or,
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !!(
                this._menuItemInstance &&
                this._parentMaterialMenu &&
                this.menu
              );
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const r = this.menu;
              if (this._menuOpen || !r) return;
              const c = this._createOverlay(r),
                _ = c.getConfig(),
                k = _.positionStrategy;
              this._setPosition(r, k),
                (_.hasBackdrop =
                  null == r.hasBackdrop
                    ? !this.triggersSubmenu()
                    : r.hasBackdrop),
                c.attach(this._getPortal(r)),
                r.lazyContent && r.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(r),
                r instanceof Xn &&
                  (r._startAnimation(),
                  r._directDescendantItems.changes
                    .pipe((0, Ee.R)(r.close))
                    .subscribe(() => {
                      k.withLockedPosition(!1).reapplyLastPosition(),
                        k.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(r, c) {
              this._focusMonitor && r
                ? this._focusMonitor.focusVia(this._element, r, c)
                : this._element.nativeElement.focus(c);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(r) {
              if (!this._overlayRef || !this.menuOpen) return;
              const c = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === r ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                c instanceof Xn
                  ? (c._resetAnimation(),
                    c.lazyContent
                      ? c._animationDone
                          .pipe(
                            (0, He.h)(_ => 'void' === _.toState),
                            (0, z.q)(1),
                            (0, Ee.R)(c.lazyContent._attached),
                          )
                          .subscribe({
                            next: () => c.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), c?.lazyContent?.detach());
            }
            _initMenu(r) {
              (r.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (r.direction = this.dir),
                this._setMenuElevation(r),
                r.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(r) {
              if (r.setElevation) {
                let c = 0,
                  _ = r.parentMenu;
                for (; _; ) c++, (_ = _.parentMenu);
                r.setElevation(c);
              }
            }
            _setIsMenuOpen(r) {
              r !== this._menuOpen &&
                ((this._menuOpen = r),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(r),
                this._changeDetectorRef.markForCheck());
            }
            _createOverlay(r) {
              if (!this._overlayRef) {
                const c = this._getOverlayConfig(r);
                this._subscribeToPositions(r, c.positionStrategy),
                  (this._overlayRef = this._overlay.create(c)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(r) {
              return new nn.X_({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    '.mat-menu-panel, .mat-mdc-menu-panel',
                  ),
                backdropClass:
                  r.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: r.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(r, c) {
              r.setPositionClasses &&
                c.positionChanges.subscribe(_ => {
                  const k =
                      'start' === _.connectionPair.overlayX
                        ? 'after'
                        : 'before',
                    ge =
                      'top' === _.connectionPair.overlayY ? 'below' : 'above';
                  this._ngZone
                    ? this._ngZone.run(() => r.setPositionClasses(k, ge))
                    : r.setPositionClasses(k, ge);
                });
            }
            _setPosition(r, c) {
              let [_, k] =
                  'before' === r.xPosition
                    ? ['end', 'start']
                    : ['start', 'end'],
                [ge, st] =
                  'above' === r.yPosition
                    ? ['bottom', 'top']
                    : ['top', 'bottom'],
                [an, In] = [ge, st],
                [Un, gi] = [_, k],
                xo = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((gi = _ = 'before' === r.xPosition ? 'start' : 'end'),
                  (k = Un = 'end' === _ ? 'start' : 'end'),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const Os = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = Os
                      ? Os._getHostElement().offsetTop
                      : 0;
                  }
                  xo =
                    'bottom' === ge
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                r.overlapTrigger ||
                  ((an = 'top' === ge ? 'bottom' : 'top'),
                  (In = 'top' === st ? 'bottom' : 'top'));
              c.withPositions([
                {
                  originX: _,
                  originY: an,
                  overlayX: Un,
                  overlayY: ge,
                  offsetY: xo,
                },
                {
                  originX: k,
                  originY: an,
                  overlayX: gi,
                  overlayY: ge,
                  offsetY: xo,
                },
                {
                  originX: _,
                  originY: In,
                  overlayX: Un,
                  overlayY: st,
                  offsetY: -xo,
                },
                {
                  originX: k,
                  originY: In,
                  overlayX: gi,
                  overlayY: st,
                  offsetY: -xo,
                },
              ]);
            }
            _menuClosingActions() {
              const r = this._overlayRef.backdropClick(),
                c = this._overlayRef.detachments(),
                _ = this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : (0, mt.of)(),
                k = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      (0, He.h)(ge => ge !== this._menuItemInstance),
                      (0, He.h)(() => this._menuOpen),
                    )
                  : (0, mt.of)();
              return (0, en.T)(r, _, k, c);
            }
            _handleMousedown(r) {
              (0, Vt.X6)(r) ||
                ((this._openedBy = 0 === r.button ? 'mouse' : void 0),
                this.triggersSubmenu() && r.preventDefault());
            }
            _handleKeydown(r) {
              const c = r.keyCode;
              (c === Je.K5 || c === Je.L_) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((c === Je.SV && 'ltr' === this.dir) ||
                    (c === Je.oh && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(r) {
              this.triggersSubmenu()
                ? (r.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    (0, He.h)(r => r === this._menuItemInstance && !r.disabled),
                    Or(0, Oe.E),
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof Xn && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              (0, z.q)(1),
                              Or(0, Oe.E),
                              (0, Ee.R)(this._parentMaterialMenu._hovered()),
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(r) {
              return (
                (!this._portal || this._portal.templateRef !== r.templateRef) &&
                  (this._portal = new kn.UE(
                    r.templateRef,
                    this._viewContainerRef,
                  )),
                this._portal
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(nn.aV),
                l.Y36(l.SBq),
                l.Y36(l.s_b),
                l.Y36(Si),
                l.Y36(jt, 8),
                l.Y36(Nn, 10),
                l.Y36(ni.Is, 8),
                l.Y36(Vt.tE),
                l.Y36(l.R0b),
              );
            }),
            (g.ɵdir = l.lG2({
              type: g,
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  l.NdJ('click', function (k) {
                    return c._handleClick(k);
                  })('mousedown', function (k) {
                    return c._handleMousedown(k);
                  })('keydown', function (k) {
                    return c._handleKeydown(k);
                  }),
                  2 & r &&
                    l.uIk('aria-haspopup', c.menu ? 'menu' : null)(
                      'aria-expanded',
                      c.menuOpen,
                    )('aria-controls', c.menuOpen ? c.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  'mat-menu-trigger-for',
                  '_deprecatedMatMenuTriggerFor',
                ],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            g
          );
        })(),
        Zi = (() => {
          class g extends ki {}
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = l.n5z(g)))(c || g);
              };
            })()),
            (g.ɵdir = l.lG2({
              type: g,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-mdc-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [l.qOj],
            })),
            g
          );
        })(),
        vr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({
              providers: [hr],
              imports: [s.ez, ft.si, ft.BQ, nn.U8, qn.ZD, ft.BQ],
            })),
            g
          );
        })();
      var Ci = (() => {
          return (
            ((g = Ci || (Ci = {})).week = 'week'),
            (g.month = 'month'),
            (g.year = 'year'),
            Ci
          );
          var g;
        })(),
        Ln = C(4006),
        Ti = C(9770);
      function J(g, R) {}
      class Ye {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let We = (() => {
        class g extends kn.en {
          constructor(r, c, _, k, ge, st, an, In) {
            super(),
              (this._elementRef = r),
              (this._focusTrapFactory = c),
              (this._config = k),
              (this._interactivityChecker = ge),
              (this._ngZone = st),
              (this._overlayRef = an),
              (this._focusMonitor = In),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = Un => {
                this._portalOutlet.hasAttached();
                const gi = this._portalOutlet.attachDomPortal(Un);
                return this._contentAttached(), gi;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = _);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachComponentPortal(r);
            return this._contentAttached(), c;
          }
          attachTemplatePortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachTemplatePortal(r);
            return this._contentAttached(), c;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(r, c) {
            this._interactivityChecker.isFocusable(r) ||
              ((r.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const _ = () => {
                  r.removeEventListener('blur', _),
                    r.removeEventListener('mousedown', _),
                    r.removeAttribute('tabindex');
                };
                r.addEventListener('blur', _),
                  r.addEventListener('mousedown', _);
              })),
              r.focus(c);
          }
          _focusByCssSelector(r, c) {
            let _ = this._elementRef.nativeElement.querySelector(r);
            _ && this._forceFocus(_, c);
          }
          _trapFocus() {
            const r = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case 'dialog':
                this._containsFocus() || r.focus();
                break;
              case !0:
              case 'first-tabbable':
                this._focusTrap.focusInitialElementWhenReady().then(c => {
                  c || this._focusDialogContainer();
                });
                break;
              case 'first-heading':
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]',
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const r = this._config.restoreFocus;
            let c = null;
            if (
              ('string' == typeof r
                ? (c = this._document.querySelector(r))
                : 'boolean' == typeof r
                ? (c = r ? this._elementFocusedBeforeDialogWasOpened : null)
                : r && (c = r),
              this._config.restoreFocus && c && 'function' == typeof c.focus)
            ) {
              const _ = (0, Kn.ht)(),
                k = this._elementRef.nativeElement;
              (!_ || _ === this._document.body || _ === k || k.contains(_)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(c, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : c.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const r = this._elementRef.nativeElement,
              c = (0, Kn.ht)();
            return r === c || r.contains(c);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = (0, Kn.ht)());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(l.SBq),
              l.Y36(Vt.qV),
              l.Y36(s.K0, 8),
              l.Y36(Ye),
              l.Y36(Vt.ic),
              l.Y36(l.R0b),
              l.Y36(nn.Iu),
              l.Y36(Vt.tE),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['cdk-dialog-container']],
            viewQuery: function (r, c) {
              if ((1 & r && l.Gf(kn.Pl, 7), 2 & r)) {
                let _;
                l.iGM((_ = l.CRH())) && (c._portalOutlet = _.first);
              }
            },
            hostAttrs: ['tabindex', '-1', 1, 'cdk-dialog-container'],
            hostVars: 6,
            hostBindings: function (r, c) {
              2 & r &&
                l.uIk('id', c._config.id || null)('role', c._config.role)(
                  'aria-modal',
                  c._config.ariaModal,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                );
            },
            features: [l.qOj],
            decls: 1,
            vars: 0,
            consts: [['cdkPortalOutlet', '']],
            template: function (r, c) {
              1 & r && l.YNc(0, J, 0, 0, 'ng-template', 0);
            },
            dependencies: [kn.Pl],
            styles: [
              '.cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class It {
        constructor(R, r) {
          (this.overlayRef = R),
            (this.config = r),
            (this.closed = new Ft.x()),
            (this.disableClose = r.disableClose),
            (this.backdropClick = R.backdropClick()),
            (this.keydownEvents = R.keydownEvents()),
            (this.outsidePointerEvents = R.outsidePointerEvents()),
            (this.id = r.id),
            this.keydownEvents.subscribe(c => {
              c.keyCode === Je.hY &&
                !this.disableClose &&
                !(0, Je.Vb)(c) &&
                (c.preventDefault(),
                this.close(void 0, { focusOrigin: 'keyboard' }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: 'mouse' });
            }),
            (this._detachSubscription = R.detachments().subscribe(() => {
              !1 !== r.closeOnOverlayDetachments && this.close();
            }));
        }
        close(R, r) {
          if (this.containerInstance) {
            const c = this.closed;
            (this.containerInstance._closeInteractionType =
              r?.focusOrigin || 'program'),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              c.next(R),
              c.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(R = '', r = '') {
          return this.overlayRef.updateSize({ width: R, height: r }), this;
        }
        addPanelClass(R) {
          return this.overlayRef.addPanelClass(R), this;
        }
        removePanelClass(R) {
          return this.overlayRef.removePanelClass(R), this;
        }
      }
      const kt = new l.OlP('DialogScrollStrategy'),
        un = new l.OlP('DialogData'),
        bn = new l.OlP('DefaultDialogConfig'),
        ei = {
          provide: kt,
          deps: [nn.aV],
          useFactory: function On(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let Rn = 0,
        vi = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(r, c, _, k, ge, st) {
              (this._overlay = r),
                (this._injector = c),
                (this._defaultOptions = _),
                (this._parentDialog = k),
                (this._overlayContainer = ge),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Ft.x()),
                (this._afterOpenedAtThisLevel = new Ft.x()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = (0, Ti.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, be.O)(void 0)),
                )),
                (this._scrollStrategy = st);
            }
            open(r, c) {
              ((c = { ...(this._defaultOptions || new Ye()), ...c }).id =
                c.id || 'cdk-dialog-' + Rn++),
                c.id && this.getDialogById(c.id);
              const k = this._getOverlayConfig(c),
                ge = this._overlay.create(k),
                st = new It(ge, c),
                an = this._attachContainer(ge, st, c);
              return (
                (st.containerInstance = an),
                this._attachDialogContent(r, st, an, c),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(st),
                st.closed.subscribe(() => this._removeOpenDialog(st, !0)),
                this.afterOpened.next(st),
                st
              );
            }
            closeAll() {
              Rr(this.openDialogs, r => r.close());
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              Rr(this._openDialogsAtThisLevel, r => {
                !1 === r.config.closeOnDestroy && this._removeOpenDialog(r, !1);
              }),
                Rr(this._openDialogsAtThisLevel, r => r.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(r) {
              const c = new nn.X_({
                positionStrategy:
                  r.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: r.scrollStrategy || this._scrollStrategy(),
                panelClass: r.panelClass,
                hasBackdrop: r.hasBackdrop,
                direction: r.direction,
                minWidth: r.minWidth,
                minHeight: r.minHeight,
                maxWidth: r.maxWidth,
                maxHeight: r.maxHeight,
                width: r.width,
                height: r.height,
                disposeOnNavigation: r.closeOnNavigation,
              });
              return r.backdropClass && (c.backdropClass = r.backdropClass), c;
            }
            _attachContainer(r, c, _) {
              const k = _.injector || _.viewContainerRef?.injector,
                ge = [
                  { provide: Ye, useValue: _ },
                  { provide: It, useValue: c },
                  { provide: nn.Iu, useValue: r },
                ];
              let st;
              _.container
                ? 'function' == typeof _.container
                  ? (st = _.container)
                  : ((st = _.container.type),
                    ge.push(..._.container.providers(_)))
                : (st = We);
              const an = new kn.C5(
                st,
                _.viewContainerRef,
                l.zs3.create({ parent: k || this._injector, providers: ge }),
                _.componentFactoryResolver,
              );
              return r.attach(an).instance;
            }
            _attachDialogContent(r, c, _, k) {
              if (r instanceof l.Rgc) {
                const ge = this._createInjector(k, c, _, void 0);
                let st = { $implicit: k.data, dialogRef: c };
                k.templateContext &&
                  (st = {
                    ...st,
                    ...('function' == typeof k.templateContext
                      ? k.templateContext()
                      : k.templateContext),
                  }),
                  _.attachTemplatePortal(new kn.UE(r, null, st, ge));
              } else {
                const ge = this._createInjector(k, c, _, this._injector),
                  st = _.attachComponentPortal(
                    new kn.C5(
                      r,
                      k.viewContainerRef,
                      ge,
                      k.componentFactoryResolver,
                    ),
                  );
                c.componentInstance = st.instance;
              }
            }
            _createInjector(r, c, _, k) {
              const ge = r.injector || r.viewContainerRef?.injector,
                st = [
                  { provide: un, useValue: r.data },
                  { provide: It, useValue: c },
                ];
              return (
                r.providers &&
                  ('function' == typeof r.providers
                    ? st.push(...r.providers(c, r, _))
                    : st.push(...r.providers)),
                r.direction &&
                  (!ge || !ge.get(ni.Is, null, { optional: !0 })) &&
                  st.push({
                    provide: ni.Is,
                    useValue: { value: r.direction, change: (0, mt.of)() },
                  }),
                l.zs3.create({ parent: ge || k, providers: st })
              );
            }
            _removeOpenDialog(r, c) {
              const _ = this.openDialogs.indexOf(r);
              _ > -1 &&
                (this.openDialogs.splice(_, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((k, ge) => {
                    k
                      ? ge.setAttribute('aria-hidden', k)
                      : ge.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  c && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const r = this._overlayContainer.getContainerElement();
              if (r.parentElement) {
                const c = r.parentElement.children;
                for (let _ = c.length - 1; _ > -1; _--) {
                  const k = c[_];
                  k !== r &&
                    'SCRIPT' !== k.nodeName &&
                    'STYLE' !== k.nodeName &&
                    !k.hasAttribute('aria-live') &&
                    (this._ariaHiddenElements.set(
                      k,
                      k.getAttribute('aria-hidden'),
                    ),
                    k.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.LFG(nn.aV),
                l.LFG(l.zs3),
                l.LFG(bn, 8),
                l.LFG(g, 12),
                l.LFG(nn.Xj),
                l.LFG(kt),
              );
            }),
            (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      function Rr(g, R) {
        let r = g.length;
        for (; r--; ) R(g[r]);
      }
      let br = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = l.oAB({ type: g })),
          (g.ɵinj = l.cJS({
            providers: [vi, ei],
            imports: [nn.U8, kn.eL, Vt.rt, kn.eL],
          })),
          g
        );
      })();
      function yr(g, R) {}
      class Fr {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const jr = 'mdc-dialog--open',
        to = 'mdc-dialog--opening',
        sr = 'mdc-dialog--closing';
      let Ao = (() => {
        class g extends We {
          constructor(r, c, _, k, ge, st, an, In) {
            super(r, c, _, k, ge, st, an, In),
              (this._animationStateChanged = new l.vpe());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(r) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: 'opened',
                totalTime: r,
              });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(l.SBq),
              l.Y36(Vt.qV),
              l.Y36(s.K0, 8),
              l.Y36(Fr),
              l.Y36(Vt.ic),
              l.Y36(l.R0b),
              l.Y36(nn.Iu),
              l.Y36(Vt.tE),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['ng-component']],
            features: [l.qOj],
            decls: 0,
            vars: 0,
            template: function (r, c) {},
            encapsulation: 2,
          })),
          g
        );
      })();
      const So = '--mat-dialog-transition-duration';
      function Pr(g) {
        return null == g
          ? null
          : 'number' == typeof g
          ? g
          : g.endsWith('ms')
          ? (0, Et.su)(g.substring(0, g.length - 2))
          : g.endsWith('s')
          ? 1e3 * (0, Et.su)(g.substring(0, g.length - 1))
          : '0' === g
          ? 0
          : null;
      }
      let Nr = (() => {
        class g extends Ao {
          constructor(r, c, _, k, ge, st, an, In, Un) {
            super(r, c, _, k, ge, st, an, Un),
              (this._animationMode = In),
              (this._animationsEnabled =
                'NoopAnimations' !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._openAnimationDuration = this._animationsEnabled
                ? Pr(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._closeAnimationDuration = this._animationsEnabled
                ? Pr(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._openAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: 'closed',
                    totalTime: this._closeAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: 'opening',
              totalTime: this._openAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    So,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(to),
                  this._hostElement.classList.add(jr),
                  this._waitForAnimationToComplete(
                    this._openAnimationDuration,
                    this._finishDialogOpen,
                  ))
                : (this._hostElement.classList.add(jr),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: 'closing',
              totalTime: this._closeAnimationDuration,
            }),
              this._hostElement.classList.remove(jr),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    So,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(sr),
                  this._waitForAnimationToComplete(
                    this._closeAnimationDuration,
                    this._finishDialogClose,
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(to),
              this._hostElement.classList.remove(sr);
          }
          _waitForAnimationToComplete(r, c) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(c, r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(l.SBq),
              l.Y36(Vt.qV),
              l.Y36(s.K0, 8),
              l.Y36(Fr),
              l.Y36(Vt.ic),
              l.Y36(l.R0b),
              l.Y36(nn.Iu),
              l.Y36(l.QbO, 8),
              l.Y36(Vt.tE),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['mat-dialog-container']],
            hostAttrs: [
              'tabindex',
              '-1',
              1,
              'mat-mdc-dialog-container',
              'mdc-dialog',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              2 & r &&
                (l.Ikx('id', c._config.id),
                l.uIk('aria-modal', c._config.ariaModal)(
                  'role',
                  c._config.role,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                ),
                l.ekj('_mat-animation-noopable', !c._animationsEnabled));
            },
            features: [l.qOj],
            decls: 3,
            vars: 0,
            consts: [
              [1, 'mdc-dialog__container'],
              [1, 'mat-mdc-dialog-surface', 'mdc-dialog__surface'],
              ['cdkPortalOutlet', ''],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'div', 0)(1, 'div', 1),
                l.YNc(2, yr, 0, 0, 'ng-template', 2),
                l.qZA()());
            },
            dependencies: [kn.Pl],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class zr {
        constructor(R, r, c) {
          (this._ref = R),
            (this._containerInstance = c),
            (this._afterOpened = new Ft.x()),
            (this._beforeClosed = new Ft.x()),
            (this._state = 0),
            (this.disableClose = r.disableClose),
            (this.id = R.id),
            c._animationStateChanged
              .pipe(
                (0, He.h)(_ => 'opened' === _.state),
                (0, z.q)(1),
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            c._animationStateChanged
              .pipe(
                (0, He.h)(_ => 'closed' === _.state),
                (0, z.q)(1),
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            R.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            (0, en.T)(
              this.backdropClick(),
              this.keydownEvents().pipe(
                (0, He.h)(
                  _ =>
                    _.keyCode === Je.hY && !this.disableClose && !(0, Je.Vb)(_),
                ),
              ),
            ).subscribe(_ => {
              this.disableClose ||
                (_.preventDefault(),
                (function po(g, R, r) {
                  (g._closeInteractionType = R), g.close(r);
                })(this, 'keydown' === _.type ? 'keyboard' : 'mouse'));
            });
        }
        close(R) {
          (this._result = R),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, He.h)(r => 'closing' === r.state),
                (0, z.q)(1),
              )
              .subscribe(r => {
                this._beforeClosed.next(R),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    r.totalTime + 100,
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(R) {
          let r = this._ref.config.positionStrategy;
          return (
            R && (R.left || R.right)
              ? R.left
                ? r.left(R.left)
                : r.right(R.right)
              : r.centerHorizontally(),
            R && (R.top || R.bottom)
              ? R.top
                ? r.top(R.top)
                : r.bottom(R.bottom)
              : r.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(R = '', r = '') {
          return this._ref.updateSize(R, r), this;
        }
        addPanelClass(R) {
          return this._ref.addPanelClass(R), this;
        }
        removePanelClass(R) {
          return this._ref.removePanelClass(R), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const io = new l.OlP('MatMdcDialogData'),
        Dr = new l.OlP('mat-mdc-dialog-default-options'),
        $i = new l.OlP('mat-mdc-dialog-scroll-strategy'),
        Cr = {
          provide: $i,
          deps: [nn.aV],
          useFactory: function xi(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let ro = 0,
        $r = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(r, c, _, k, ge, st, an, In, Un, gi) {
              (this._overlay = r),
                (this._defaultOptions = _),
                (this._parentDialog = k),
                (this._dialogRefConstructor = an),
                (this._dialogContainerType = In),
                (this._dialogDataToken = Un),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Ft.x()),
                (this._afterOpenedAtThisLevel = new Ft.x()),
                (this._idPrefix = 'mat-dialog-'),
                (this.dialogConfigClass = Fr),
                (this.afterAllClosed = (0, Ti.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, be.O)(void 0)),
                )),
                (this._scrollStrategy = st),
                (this._dialog = c.get(vi));
            }
            open(r, c) {
              let _;
              ((c = { ...(this._defaultOptions || new Fr()), ...c }).id =
                c.id || `${this._idPrefix}${ro++}`),
                (c.scrollStrategy = c.scrollStrategy || this._scrollStrategy());
              const k = this._dialog.open(r, {
                ...c,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: c },
                    { provide: Ye, useValue: c },
                  ],
                },
                templateContext: () => ({ dialogRef: _ }),
                providers: (ge, st, an) => (
                  (_ = new this._dialogRefConstructor(ge, c, an)),
                  _.updatePosition(c?.position),
                  [
                    { provide: this._dialogContainerType, useValue: an },
                    { provide: this._dialogDataToken, useValue: st.data },
                    { provide: this._dialogRefConstructor, useValue: _ },
                  ]
                ),
              });
              return (
                (_.componentInstance = k.componentInstance),
                this.openDialogs.push(_),
                this.afterOpened.next(_),
                _.afterClosed().subscribe(() => {
                  const ge = this.openDialogs.indexOf(_);
                  ge > -1 &&
                    (this.openDialogs.splice(ge, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                _
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(r) {
              let c = r.length;
              for (; c--; ) r[c].close();
            }
          }
          return (
            (g.ɵfac = function (r) {
              l.$Z();
            }),
            (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        ar = (() => {
          class g extends $r {
            constructor(r, c, _, k, ge, st, an, In) {
              super(r, c, k, st, an, ge, zr, Nr, io, In),
                (this._idPrefix = 'mat-mdc-dialog-');
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.LFG(nn.aV),
                l.LFG(l.zs3),
                l.LFG(s.Ye, 8),
                l.LFG(Dr, 8),
                l.LFG($i),
                l.LFG(g, 12),
                l.LFG(nn.Xj),
                l.LFG(l.QbO, 8),
              );
            }),
            (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        Lr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = l.lG2({
              type: g,
              selectors: [
                ['', 'mat-dialog-content', ''],
                ['mat-dialog-content'],
                ['', 'matDialogContent', ''],
              ],
              hostAttrs: [1, 'mat-mdc-dialog-content', 'mdc-dialog__content'],
            })),
            g
          );
        })(),
        Yr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({
              providers: [ar, Cr],
              imports: [br, nn.U8, kn.eL, ft.BQ, ft.BQ],
            })),
            g
          );
        })();
      var zn = C(9549),
        ci = C(4144);
      const Gr = ['mat-calendar-body', ''];
      function Wr(g, R) {
        if (
          (1 & g && (l.TgZ(0, 'tr', 3)(1, 'td', 4), l._uU(2), l.qZA()()), 2 & g)
        ) {
          const r = l.oxw();
          l.xp6(1),
            l.Udp('padding-top', r._cellPadding)(
              'padding-bottom',
              r._cellPadding,
            ),
            l.uIk('colspan', r.numCols),
            l.xp6(1),
            l.hij(' ', r.label, ' ');
        }
      }
      function Er(g, R) {
        if ((1 & g && (l.TgZ(0, 'td', 4), l._uU(1), l.qZA()), 2 & g)) {
          const r = l.oxw(2);
          l.Udp('padding-top', r._cellPadding)(
            'padding-bottom',
            r._cellPadding,
          ),
            l.uIk('colspan', r._firstRowOffset),
            l.xp6(1),
            l.hij(
              ' ',
              r._firstRowOffset >= r.labelMinRequiredCells ? r.label : '',
              ' ',
            );
        }
      }
      function Ei(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'td', 8)(1, 'button', 9),
            l.NdJ('click', function (_) {
              const ge = l.CHM(r).$implicit,
                st = l.oxw(2);
              return l.KtG(st._cellClicked(ge, _));
            })('focus', function (_) {
              const ge = l.CHM(r).$implicit,
                st = l.oxw(2);
              return l.KtG(st._emitActiveDateChange(ge, _));
            }),
            l.TgZ(2, 'span', 10),
            l._uU(3),
            l.qZA(),
            l._UZ(4, 'span', 11),
            l.qZA()();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = l.oxw().index,
            k = l.oxw();
          l.Udp('width', k._cellWidth)('padding-top', k._cellPadding)(
            'padding-bottom',
            k._cellPadding,
          ),
            l.uIk('data-mat-row', _)('data-mat-col', c),
            l.xp6(1),
            l.ekj('mat-calendar-body-disabled', !r.enabled)(
              'mat-calendar-body-active',
              k._isActiveCell(_, c),
            )('mat-calendar-body-range-start', k._isRangeStart(r.compareValue))(
              'mat-calendar-body-range-end',
              k._isRangeEnd(r.compareValue),
            )('mat-calendar-body-in-range', k._isInRange(r.compareValue))(
              'mat-calendar-body-comparison-bridge-start',
              k._isComparisonBridgeStart(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-bridge-end',
              k._isComparisonBridgeEnd(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-start',
              k._isComparisonStart(r.compareValue),
            )(
              'mat-calendar-body-comparison-end',
              k._isComparisonEnd(r.compareValue),
            )(
              'mat-calendar-body-in-comparison-range',
              k._isInComparisonRange(r.compareValue),
            )(
              'mat-calendar-body-preview-start',
              k._isPreviewStart(r.compareValue),
            )('mat-calendar-body-preview-end', k._isPreviewEnd(r.compareValue))(
              'mat-calendar-body-in-preview',
              k._isInPreview(r.compareValue),
            ),
            l.Q6J('ngClass', r.cssClasses)(
              'tabindex',
              k._isActiveCell(_, c) ? 0 : -1,
            ),
            l.uIk('aria-label', r.ariaLabel)(
              'aria-disabled',
              !r.enabled || null,
            )('aria-pressed', k._isSelected(r.compareValue))(
              'aria-current',
              k.todayValue === r.compareValue ? 'date' : null,
            )('aria-describedby', k._getDescribedby(r.compareValue)),
            l.xp6(1),
            l.ekj('mat-calendar-body-selected', k._isSelected(r.compareValue))(
              'mat-calendar-body-comparison-identical',
              k._isComparisonIdentical(r.compareValue),
            )('mat-calendar-body-today', k.todayValue === r.compareValue),
            l.xp6(1),
            l.hij(' ', r.displayValue, ' ');
        }
      }
      function wr(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'tr', 5),
            l.YNc(1, Er, 2, 6, 'td', 6),
            l.YNc(2, Ei, 5, 48, 'td', 7),
            l.qZA()),
          2 & g)
        ) {
          const r = R.$implicit,
            c = R.index,
            _ = l.oxw();
          l.xp6(1),
            l.Q6J('ngIf', 0 === c && _._firstRowOffset),
            l.xp6(1),
            l.Q6J('ngForOf', r);
        }
      }
      function Br(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'th', 5)(1, 'span', 6),
            l._uU(2),
            l.qZA(),
            l.TgZ(3, 'span', 7),
            l._uU(4),
            l.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          l.xp6(2), l.Oqu(r.long), l.xp6(2), l.Oqu(r.narrow);
        }
      }
      const ko = ['*'];
      function Ri(g, R) {}
      function Vr(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'mat-month-view', 5),
            l.NdJ('activeDateChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG((k.activeDate = _));
            })('_userSelection', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._dateSelected(_));
            })('dragStarted', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._dragStarted(_));
            })('dragEnded', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._dragEnded(_));
            }),
            l.qZA();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          )('comparisonStart', r.comparisonStart)(
            'comparisonEnd',
            r.comparisonEnd,
          )('startDateAccessibleName', r.startDateAccessibleName)(
            'endDateAccessibleName',
            r.endDateAccessibleName,
          )('activeDrag', r._activeDrag);
        }
      }
      function so(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'mat-year-view', 6),
            l.NdJ('activeDateChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG((k.activeDate = _));
            })('monthSelected', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._monthSelectedInYearView(_));
            })('selectedChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._goToDateInView(_, 'month'));
            }),
            l.qZA();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function vn(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'mat-multi-year-view', 7),
            l.NdJ('activeDateChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG((k.activeDate = _));
            })('yearSelected', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._yearSelectedInMultiYearView(_));
            })('selectedChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._goToDateInView(_, 'year'));
            }),
            l.qZA();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function fr(g, R) {}
      const T = ['button'];
      function I(g, R) {
        1 & g && (l.O4$(), l.TgZ(0, 'svg', 3), l._UZ(1, 'path', 4), l.qZA());
      }
      const w = [[['', 'matDatepickerToggleIcon', '']]],
        Y = ['[matDatepickerToggleIcon]'];
      let Sn = (() => {
        class g {
          constructor() {
            (this.changes = new Ft.x()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.closeCalendarLabel = 'Close calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 24 years'),
              (this.nextMultiYearLabel = 'Next 24 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year'),
              (this.startDateLabel = 'Start date'),
              (this.endDateLabel = 'End date');
          }
          formatYearRange(r, c) {
            return `${r} \u2013 ${c}`;
          }
          formatYearRangeLabel(r, c) {
            return `${r} to ${c}`;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      class pr {
        constructor(R, r, c, _, k = {}, ge = R, st) {
          (this.value = R),
            (this.displayValue = r),
            (this.ariaLabel = c),
            (this.enabled = _),
            (this.cssClasses = k),
            (this.compareValue = ge),
            (this.rawValue = st);
        }
      }
      let go = 1,
        Zn = (() => {
          class g {
            ngAfterViewChecked() {
              this._focusActiveCellAfterViewChecked &&
                (this._focusActiveCell(),
                (this._focusActiveCellAfterViewChecked = !1));
            }
            constructor(r, c) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._platform = (0, l.f3M)(Kn.t4)),
                (this._focusActiveCellAfterViewChecked = !1),
                (this.numCols = 7),
                (this.activeCell = 0),
                (this.isRange = !1),
                (this.cellAspectRatio = 1),
                (this.previewStart = null),
                (this.previewEnd = null),
                (this.selectedValueChange = new l.vpe()),
                (this.previewChange = new l.vpe()),
                (this.activeDateChange = new l.vpe()),
                (this.dragStarted = new l.vpe()),
                (this.dragEnded = new l.vpe()),
                (this._didDragSinceMouseDown = !1),
                (this._enterHandler = _ => {
                  if (this._skipNextFocus && 'focus' === _.type)
                    this._skipNextFocus = !1;
                  else if (_.target && this.isRange) {
                    const k = this._getCellFromElement(_.target);
                    k &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({
                          value: k.enabled ? k : null,
                          event: _,
                        }),
                      );
                  }
                }),
                (this._touchmoveHandler = _ => {
                  if (!this.isRange) return;
                  const k = Qo(_),
                    ge = k ? this._getCellFromElement(k) : null;
                  k !== _.target && (this._didDragSinceMouseDown = !0),
                    Kr(_.target) && _.preventDefault(),
                    this._ngZone.run(() =>
                      this.previewChange.emit({
                        value: ge?.enabled ? ge : null,
                        event: _,
                      }),
                    );
                }),
                (this._leaveHandler = _ => {
                  null !== this.previewEnd &&
                    this.isRange &&
                    ('blur' !== _.type && (this._didDragSinceMouseDown = !0),
                    _.target &&
                      this._getCellFromElement(_.target) &&
                      (!_.relatedTarget ||
                        !this._getCellFromElement(_.relatedTarget)) &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({ value: null, event: _ }),
                      ));
                }),
                (this._mousedownHandler = _ => {
                  if (!this.isRange) return;
                  this._didDragSinceMouseDown = !1;
                  const k = _.target && this._getCellFromElement(_.target);
                  !k ||
                    !this._isInRange(k.rawValue) ||
                    this._ngZone.run(() => {
                      this.dragStarted.emit({ value: k.rawValue, event: _ });
                    });
                }),
                (this._mouseupHandler = _ => {
                  if (!this.isRange) return;
                  const k = Kr(_.target);
                  k
                    ? k.closest('.mat-calendar-body') ===
                        this._elementRef.nativeElement &&
                      this._ngZone.run(() => {
                        const ge = this._getCellFromElement(k);
                        this.dragEnded.emit({
                          value: ge?.rawValue ?? null,
                          event: _,
                        });
                      })
                    : this._ngZone.run(() => {
                        this.dragEnded.emit({ value: null, event: _ });
                      });
                }),
                (this._touchendHandler = _ => {
                  const k = Qo(_);
                  k && this._mouseupHandler({ target: k });
                }),
                (this._id = 'mat-calendar-body-' + go++),
                (this._startDateLabelId = `${this._id}-start-date`),
                (this._endDateLabelId = `${this._id}-end-date`),
                c.runOutsideAngular(() => {
                  const _ = r.nativeElement;
                  _.addEventListener('mouseenter', this._enterHandler, !0),
                    _.addEventListener('touchmove', this._touchmoveHandler, !0),
                    _.addEventListener('focus', this._enterHandler, !0),
                    _.addEventListener('mouseleave', this._leaveHandler, !0),
                    _.addEventListener('blur', this._leaveHandler, !0),
                    _.addEventListener('mousedown', this._mousedownHandler),
                    _.addEventListener('touchstart', this._mousedownHandler),
                    this._platform.isBrowser &&
                      (window.addEventListener('mouseup', this._mouseupHandler),
                      window.addEventListener(
                        'touchend',
                        this._touchendHandler,
                      ));
                });
            }
            _cellClicked(r, c) {
              this._didDragSinceMouseDown ||
                (r.enabled &&
                  this.selectedValueChange.emit({ value: r.value, event: c }));
            }
            _emitActiveDateChange(r, c) {
              r.enabled &&
                this.activeDateChange.emit({ value: r.value, event: c });
            }
            _isSelected(r) {
              return this.startValue === r || this.endValue === r;
            }
            ngOnChanges(r) {
              const c = r.numCols,
                { rows: _, numCols: k } = this;
              (r.rows || c) &&
                (this._firstRowOffset =
                  _ && _.length && _[0].length ? k - _[0].length : 0),
                (r.cellAspectRatio || c || !this._cellPadding) &&
                  (this._cellPadding = (50 * this.cellAspectRatio) / k + '%'),
                (c || !this._cellWidth) && (this._cellWidth = 100 / k + '%');
            }
            ngOnDestroy() {
              const r = this._elementRef.nativeElement;
              r.removeEventListener('mouseenter', this._enterHandler, !0),
                r.removeEventListener('touchmove', this._touchmoveHandler, !0),
                r.removeEventListener('focus', this._enterHandler, !0),
                r.removeEventListener('mouseleave', this._leaveHandler, !0),
                r.removeEventListener('blur', this._leaveHandler, !0),
                r.removeEventListener('mousedown', this._mousedownHandler),
                r.removeEventListener('touchstart', this._mousedownHandler),
                this._platform.isBrowser &&
                  (window.removeEventListener('mouseup', this._mouseupHandler),
                  window.removeEventListener(
                    'touchend',
                    this._touchendHandler,
                  ));
            }
            _isActiveCell(r, c) {
              let _ = r * this.numCols + c;
              return r && (_ -= this._firstRowOffset), _ == this.activeCell;
            }
            _focusActiveCell(r = !0) {
              this._ngZone.runOutsideAngular(() => {
                this._ngZone.onStable.pipe((0, z.q)(1)).subscribe(() => {
                  setTimeout(() => {
                    const c = this._elementRef.nativeElement.querySelector(
                      '.mat-calendar-body-active',
                    );
                    c && (r || (this._skipNextFocus = !0), c.focus());
                  });
                });
              });
            }
            _scheduleFocusActiveCellAfterViewChecked() {
              this._focusActiveCellAfterViewChecked = !0;
            }
            _isRangeStart(r) {
              return Yi(r, this.startValue, this.endValue);
            }
            _isRangeEnd(r) {
              return Zr(r, this.startValue, this.endValue);
            }
            _isInRange(r) {
              return ao(r, this.startValue, this.endValue, this.isRange);
            }
            _isComparisonStart(r) {
              return Yi(r, this.comparisonStart, this.comparisonEnd);
            }
            _isComparisonBridgeStart(r, c, _) {
              if (
                !this._isComparisonStart(r) ||
                this._isRangeStart(r) ||
                !this._isInRange(r)
              )
                return !1;
              let k = this.rows[c][_ - 1];
              if (!k) {
                const ge = this.rows[c - 1];
                k = ge && ge[ge.length - 1];
              }
              return k && !this._isRangeEnd(k.compareValue);
            }
            _isComparisonBridgeEnd(r, c, _) {
              if (
                !this._isComparisonEnd(r) ||
                this._isRangeEnd(r) ||
                !this._isInRange(r)
              )
                return !1;
              let k = this.rows[c][_ + 1];
              if (!k) {
                const ge = this.rows[c + 1];
                k = ge && ge[0];
              }
              return k && !this._isRangeStart(k.compareValue);
            }
            _isComparisonEnd(r) {
              return Zr(r, this.comparisonStart, this.comparisonEnd);
            }
            _isInComparisonRange(r) {
              return ao(
                r,
                this.comparisonStart,
                this.comparisonEnd,
                this.isRange,
              );
            }
            _isComparisonIdentical(r) {
              return (
                this.comparisonStart === this.comparisonEnd &&
                r === this.comparisonStart
              );
            }
            _isPreviewStart(r) {
              return Yi(r, this.previewStart, this.previewEnd);
            }
            _isPreviewEnd(r) {
              return Zr(r, this.previewStart, this.previewEnd);
            }
            _isInPreview(r) {
              return ao(r, this.previewStart, this.previewEnd, this.isRange);
            }
            _getDescribedby(r) {
              return this.isRange
                ? this.startValue === r && this.endValue === r
                  ? `${this._startDateLabelId} ${this._endDateLabelId}`
                  : this.startValue === r
                  ? this._startDateLabelId
                  : this.endValue === r
                  ? this._endDateLabelId
                  : null
                : null;
            }
            _getCellFromElement(r) {
              const c = Kr(r);
              if (c) {
                const _ = c.getAttribute('data-mat-row'),
                  k = c.getAttribute('data-mat-col');
                if (_ && k) return this.rows[parseInt(_)][parseInt(k)];
              }
              return null;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(l.Y36(l.SBq), l.Y36(l.R0b));
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['', 'mat-calendar-body', '']],
              hostAttrs: [1, 'mat-calendar-body'],
              inputs: {
                label: 'label',
                rows: 'rows',
                todayValue: 'todayValue',
                startValue: 'startValue',
                endValue: 'endValue',
                labelMinRequiredCells: 'labelMinRequiredCells',
                numCols: 'numCols',
                activeCell: 'activeCell',
                isRange: 'isRange',
                cellAspectRatio: 'cellAspectRatio',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                previewStart: 'previewStart',
                previewEnd: 'previewEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedValueChange: 'selectedValueChange',
                previewChange: 'previewChange',
                activeDateChange: 'activeDateChange',
                dragStarted: 'dragStarted',
                dragEnded: 'dragEnded',
              },
              exportAs: ['matCalendarBody'],
              features: [l.TTD],
              attrs: Gr,
              decls: 6,
              vars: 6,
              consts: [
                ['aria-hidden', 'true', 4, 'ngIf'],
                ['role', 'row', 4, 'ngFor', 'ngForOf'],
                [1, 'mat-calendar-body-hidden-label', 3, 'id'],
                ['aria-hidden', 'true'],
                [1, 'mat-calendar-body-label'],
                ['role', 'row'],
                [
                  'class',
                  'mat-calendar-body-label',
                  3,
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngIf',
                ],
                [
                  'role',
                  'gridcell',
                  'class',
                  'mat-calendar-body-cell-container',
                  3,
                  'width',
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                ['role', 'gridcell', 1, 'mat-calendar-body-cell-container'],
                [
                  'type',
                  'button',
                  1,
                  'mat-calendar-body-cell',
                  3,
                  'ngClass',
                  'tabindex',
                  'click',
                  'focus',
                ],
                [1, 'mat-calendar-body-cell-content', 'mat-focus-indicator'],
                ['aria-hidden', 'true', 1, 'mat-calendar-body-cell-preview'],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.YNc(0, Wr, 3, 6, 'tr', 0),
                  l.YNc(1, wr, 3, 2, 'tr', 1),
                  l.TgZ(2, 'label', 2),
                  l._uU(3),
                  l.qZA(),
                  l.TgZ(4, 'label', 2),
                  l._uU(5),
                  l.qZA()),
                  2 & r &&
                    (l.Q6J('ngIf', c._firstRowOffset < c.labelMinRequiredCells),
                    l.xp6(1),
                    l.Q6J('ngForOf', c.rows),
                    l.xp6(1),
                    l.Q6J('id', c._startDateLabelId),
                    l.xp6(1),
                    l.hij(' ', c.startDateAccessibleName, '\n'),
                    l.xp6(1),
                    l.Q6J('id', c._endDateLabelId),
                    l.xp6(1),
                    l.hij(' ', c.endDateAccessibleName, '\n'));
              },
              dependencies: [s.mk, s.sg, s.O5],
              styles: [
                '.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      function To(g) {
        return 'TD' === g?.nodeName;
      }
      function Kr(g) {
        let R;
        return (
          To(g)
            ? (R = g)
            : To(g.parentNode)
            ? (R = g.parentNode)
            : To(g.parentNode?.parentNode) && (R = g.parentNode.parentNode),
          null != R?.getAttribute('data-mat-row') ? R : null
        );
      }
      function Yi(g, R, r) {
        return null !== r && R !== r && g < r && g === R;
      }
      function Zr(g, R, r) {
        return null !== R && R !== r && g >= R && g === r;
      }
      function ao(g, R, r, c) {
        return c && null !== R && null !== r && R !== r && g >= R && g <= r;
      }
      function Qo(g) {
        const R = g.changedTouches[0];
        return document.elementFromPoint(R.clientX, R.clientY);
      }
      class Bi {
        constructor(R, r) {
          (this.start = R), (this.end = r);
        }
      }
      let Mr = (() => {
          class g {
            constructor(r, c) {
              (this.selection = r),
                (this._adapter = c),
                (this._selectionChanged = new Ft.x()),
                (this.selectionChanged = this._selectionChanged),
                (this.selection = r);
            }
            updateSelection(r, c) {
              const _ = this.selection;
              (this.selection = r),
                this._selectionChanged.next({
                  selection: r,
                  source: c,
                  oldValue: _,
                });
            }
            ngOnDestroy() {
              this._selectionChanged.complete();
            }
            _isValidDateInstance(r) {
              return (
                this._adapter.isDateInstance(r) && this._adapter.isValid(r)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              l.$Z();
            }),
            (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        Vi = (() => {
          class g extends Mr {
            constructor(r) {
              super(null, r);
            }
            add(r) {
              super.updateSelection(r, this);
            }
            isValid() {
              return (
                null != this.selection &&
                this._isValidDateInstance(this.selection)
              );
            }
            isComplete() {
              return null != this.selection;
            }
            clone() {
              const r = new g(this._adapter);
              return r.updateSelection(this.selection, this), r;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(l.LFG(ft._A));
            }),
            (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      const Ar = {
          provide: Mr,
          deps: [[new l.FiY(), new l.tp0(), Mr], ft._A],
          useFactory: function qr(g, R) {
            return g || new Vi(R);
          },
        },
        gr = new l.OlP('MAT_DATE_RANGE_SELECTION_STRATEGY');
      let lo = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            const c = this._activeDate,
              _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              this._hasSameMonthAndYear(c, this._activeDate) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof Bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setRanges(this._selected);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _, k, ge) {
            (this._changeDetectorRef = r),
              (this._dateFormats = c),
              (this._dateAdapter = _),
              (this._dir = k),
              (this._rangeStrategy = ge),
              (this._rerenderSubscription = dn.w0.EMPTY),
              (this.activeDrag = null),
              (this.selectedChange = new l.vpe()),
              (this._userSelection = new l.vpe()),
              (this.dragStarted = new l.vpe()),
              (this.dragEnded = new l.vpe()),
              (this.activeDateChange = new l.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, be.O)(null))
              .subscribe(() => this._init());
          }
          ngOnChanges(r) {
            const c = r.comparisonStart || r.comparisonEnd;
            c && !c.firstChange && this._setRanges(this.selected),
              r.activeDrag && !this.activeDrag && this._clearPreview();
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _dateSelected(r) {
            const c = r.value,
              _ = this._getDateFromDayOfMonth(c);
            let k, ge;
            this._selected instanceof Bi
              ? ((k = this._getDateInCurrentMonth(this._selected.start)),
                (ge = this._getDateInCurrentMonth(this._selected.end)))
              : (k = ge = this._getDateInCurrentMonth(this._selected)),
              (k !== c || ge !== c) && this.selectedChange.emit(_),
              this._userSelection.emit({ value: _, event: r.event }),
              this._clearPreview(),
              this._changeDetectorRef.markForCheck();
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromDayOfMonth(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this._activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case Je.oh:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case Je.SV:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case Je.LH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  -7,
                );
                break;
              case Je.JH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  7,
                );
                break;
              case Je.Sd:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  1 - this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case Je.uR:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                    this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case Je.Ku:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                break;
              case Je.VM:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                break;
              case Je.K5:
              case Je.L_:
                return (
                  (this._selectionKeyPressed = !0),
                  void (this._canSelect(this._activeDate) && r.preventDefault())
                );
              case Je.hY:
                return void (
                  null != this._previewEnd &&
                  !(0, Je.Vb)(r) &&
                  (this._clearPreview(),
                  this.activeDrag
                    ? this.dragEnded.emit({ value: null, event: r })
                    : (this.selectedChange.emit(null),
                      this._userSelection.emit({ value: null, event: r })),
                  r.preventDefault(),
                  r.stopPropagation())
                );
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              (this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked()),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === Je.L_ || r.keyCode === Je.K5) &&
              (this._selectionKeyPressed &&
                this._canSelect(this._activeDate) &&
                this._dateSelected({
                  value: this._dateAdapter.getDate(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _init() {
            this._setRanges(this.selected),
              (this._todayDate = this._getCellCompareValue(
                this._dateAdapter.today(),
              )),
              (this._monthLabel = this._dateFormats.display.monthLabel
                ? this._dateAdapter.format(
                    this.activeDate,
                    this._dateFormats.display.monthLabel,
                  )
                : this._dateAdapter
                    .getMonthNames('short')
                    [
                      this._dateAdapter.getMonth(this.activeDate)
                    ].toLocaleUpperCase());
            let r = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              1,
            );
            (this._firstWeekOffset =
              (7 +
                this._dateAdapter.getDayOfWeek(r) -
                this._dateAdapter.getFirstDayOfWeek()) %
              7),
              this._initWeekdays(),
              this._createWeekCells(),
              this._changeDetectorRef.markForCheck();
          }
          _focusActiveCell(r) {
            this._matCalendarBody._focusActiveCell(r);
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _previewChanged({ event: r, value: c }) {
            if (this._rangeStrategy) {
              const _ = c ? c.rawValue : null,
                k = this._rangeStrategy.createPreview(_, this.selected, r);
              if (
                ((this._previewStart = this._getCellCompareValue(k.start)),
                (this._previewEnd = this._getCellCompareValue(k.end)),
                this.activeDrag && _)
              ) {
                const ge = this._rangeStrategy.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  _,
                  r,
                );
                ge &&
                  ((this._previewStart = this._getCellCompareValue(ge.start)),
                  (this._previewEnd = this._getCellCompareValue(ge.end)));
              }
              this._changeDetectorRef.detectChanges();
            }
          }
          _dragEnded(r) {
            if (this.activeDrag)
              if (r.value) {
                const c = this._rangeStrategy?.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  r.value,
                  r.event,
                );
                this.dragEnded.emit({ value: c ?? null, event: r.event });
              } else this.dragEnded.emit({ value: null, event: r.event });
          }
          _getDateFromDayOfMonth(r) {
            return this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r,
            );
          }
          _initWeekdays() {
            const r = this._dateAdapter.getFirstDayOfWeek(),
              c = this._dateAdapter.getDayOfWeekNames('narrow');
            let k = this._dateAdapter
              .getDayOfWeekNames('long')
              .map((ge, st) => ({ long: ge, narrow: c[st] }));
            this._weekdays = k.slice(r).concat(k.slice(0, r));
          }
          _createWeekCells() {
            const r = this._dateAdapter.getNumDaysInMonth(this.activeDate),
              c = this._dateAdapter.getDateNames();
            this._weeks = [[]];
            for (let _ = 0, k = this._firstWeekOffset; _ < r; _++, k++) {
              7 == k && (this._weeks.push([]), (k = 0));
              const ge = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  this._dateAdapter.getMonth(this.activeDate),
                  _ + 1,
                ),
                st = this._shouldEnableDate(ge),
                an = this._dateAdapter.format(
                  ge,
                  this._dateFormats.display.dateA11yLabel,
                ),
                In = this.dateClass ? this.dateClass(ge, 'month') : void 0;
              this._weeks[this._weeks.length - 1].push(
                new pr(
                  _ + 1,
                  c[_],
                  an,
                  st,
                  In,
                  this._getCellCompareValue(ge),
                  ge,
                ),
              );
            }
          }
          _shouldEnableDate(r) {
            return (
              !!r &&
              (!this.minDate ||
                this._dateAdapter.compareDate(r, this.minDate) >= 0) &&
              (!this.maxDate ||
                this._dateAdapter.compareDate(r, this.maxDate) <= 0) &&
              (!this.dateFilter || this.dateFilter(r))
            );
          }
          _getDateInCurrentMonth(r) {
            return r && this._hasSameMonthAndYear(r, this.activeDate)
              ? this._dateAdapter.getDate(r)
              : null;
          }
          _hasSameMonthAndYear(r, c) {
            return !(
              !r ||
              !c ||
              this._dateAdapter.getMonth(r) != this._dateAdapter.getMonth(c) ||
              this._dateAdapter.getYear(r) != this._dateAdapter.getYear(c)
            );
          }
          _getCellCompareValue(r) {
            if (r) {
              const c = this._dateAdapter.getYear(r),
                _ = this._dateAdapter.getMonth(r),
                k = this._dateAdapter.getDate(r);
              return new Date(c, _, k).getTime();
            }
            return null;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setRanges(r) {
            r instanceof Bi
              ? ((this._rangeStart = this._getCellCompareValue(r.start)),
                (this._rangeEnd = this._getCellCompareValue(r.end)),
                (this._isRange = !0))
              : ((this._rangeStart = this._rangeEnd =
                  this._getCellCompareValue(r)),
                (this._isRange = !1)),
              (this._comparisonRangeStart = this._getCellCompareValue(
                this.comparisonStart,
              )),
              (this._comparisonRangeEnd = this._getCellCompareValue(
                this.comparisonEnd,
              ));
          }
          _canSelect(r) {
            return !this.dateFilter || this.dateFilter(r);
          }
          _clearPreview() {
            this._previewStart = this._previewEnd = null;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(l.sBO),
              l.Y36(ft.sG, 8),
              l.Y36(ft._A, 8),
              l.Y36(ni.Is, 8),
              l.Y36(gr, 8),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['mat-month-view']],
            viewQuery: function (r, c) {
              if ((1 & r && l.Gf(Zn, 5), 2 & r)) {
                let _;
                l.iGM((_ = l.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
              comparisonStart: 'comparisonStart',
              comparisonEnd: 'comparisonEnd',
              startDateAccessibleName: 'startDateAccessibleName',
              endDateAccessibleName: 'endDateAccessibleName',
              activeDrag: 'activeDrag',
            },
            outputs: {
              selectedChange: 'selectedChange',
              _userSelection: '_userSelection',
              dragStarted: 'dragStarted',
              dragEnded: 'dragEnded',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMonthView'],
            features: [l.TTD],
            decls: 7,
            vars: 15,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              [1, 'mat-calendar-table-header'],
              ['scope', 'col', 4, 'ngFor', 'ngForOf'],
              [
                'aria-hidden',
                'true',
                'colspan',
                '7',
                1,
                'mat-calendar-table-header-divider',
              ],
              [
                'mat-calendar-body',
                '',
                3,
                'label',
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'comparisonStart',
                'comparisonEnd',
                'previewStart',
                'previewEnd',
                'isRange',
                'labelMinRequiredCells',
                'activeCell',
                'startDateAccessibleName',
                'endDateAccessibleName',
                'selectedValueChange',
                'activeDateChange',
                'previewChange',
                'dragStarted',
                'dragEnded',
                'keyup',
                'keydown',
              ],
              ['scope', 'col'],
              [1, 'cdk-visually-hidden'],
              ['aria-hidden', 'true'],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                l.YNc(3, Br, 5, 2, 'th', 2),
                l.qZA(),
                l.TgZ(4, 'tr'),
                l._UZ(5, 'th', 3),
                l.qZA()(),
                l.TgZ(6, 'tbody', 4),
                l.NdJ('selectedValueChange', function (k) {
                  return c._dateSelected(k);
                })('activeDateChange', function (k) {
                  return c._updateActiveDate(k);
                })('previewChange', function (k) {
                  return c._previewChanged(k);
                })('dragStarted', function (k) {
                  return c.dragStarted.emit(k);
                })('dragEnded', function (k) {
                  return c._dragEnded(k);
                })('keyup', function (k) {
                  return c._handleCalendarBodyKeyup(k);
                })('keydown', function (k) {
                  return c._handleCalendarBodyKeydown(k);
                }),
                l.qZA()()),
                2 & r &&
                  (l.xp6(3),
                  l.Q6J('ngForOf', c._weekdays),
                  l.xp6(3),
                  l.Q6J('label', c._monthLabel)('rows', c._weeks)(
                    'todayValue',
                    c._todayDate,
                  )('startValue', c._rangeStart)('endValue', c._rangeEnd)(
                    'comparisonStart',
                    c._comparisonRangeStart,
                  )('comparisonEnd', c._comparisonRangeEnd)(
                    'previewStart',
                    c._previewStart,
                  )('previewEnd', c._previewEnd)('isRange', c._isRange)(
                    'labelMinRequiredCells',
                    3,
                  )('activeCell', c._dateAdapter.getDate(c.activeDate) - 1)(
                    'startDateAccessibleName',
                    c.startDateAccessibleName,
                  )('endDateAccessibleName', c.endDateAccessibleName));
            },
            dependencies: [s.sg, Zn],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const B = 24;
      let p = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            let c = this._activeDate;
            const _ =
              this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              S(
                this._dateAdapter,
                c,
                this._activeDate,
                this.minDate,
                this.maxDate,
              ) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof Bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setSelectedYear(r);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _) {
            (this._changeDetectorRef = r),
              (this._dateAdapter = c),
              (this._dir = _),
              (this._rerenderSubscription = dn.w0.EMPTY),
              (this.selectedChange = new l.vpe()),
              (this.yearSelected = new l.vpe()),
              (this.activeDateChange = new l.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, be.O)(null))
              .subscribe(() => this._init());
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _init() {
            this._todayYear = this._dateAdapter.getYear(
              this._dateAdapter.today(),
            );
            const c =
              this._dateAdapter.getYear(this._activeDate) -
              V(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
            this._years = [];
            for (let _ = 0, k = []; _ < B; _++)
              k.push(c + _),
                4 == k.length &&
                  (this._years.push(k.map(ge => this._createCellForYear(ge))),
                  (k = []));
            this._changeDetectorRef.markForCheck();
          }
          _yearSelected(r) {
            const c = r.value,
              _ = this._dateAdapter.createDate(c, 0, 1),
              k = this._getDateFromYear(c);
            this.yearSelected.emit(_), this.selectedChange.emit(k);
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromYear(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this.activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case Je.oh:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case Je.SV:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case Je.LH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -4,
                );
                break;
              case Je.JH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  4,
                );
                break;
              case Je.Sd:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -V(
                    this._dateAdapter,
                    this.activeDate,
                    this.minDate,
                    this.maxDate,
                  ),
                );
                break;
              case Je.uR:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  B -
                    V(
                      this._dateAdapter,
                      this.activeDate,
                      this.minDate,
                      this.maxDate,
                    ) -
                    1,
                );
                break;
              case Je.Ku:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * -B : -B,
                );
                break;
              case Je.VM:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * B : B,
                );
                break;
              case Je.K5:
              case Je.L_:
                this._selectionKeyPressed = !0;
                break;
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked(),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === Je.L_ || r.keyCode === Je.K5) &&
              (this._selectionKeyPressed &&
                this._yearSelected({
                  value: this._dateAdapter.getYear(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _getActiveCell() {
            return V(
              this._dateAdapter,
              this.activeDate,
              this.minDate,
              this.maxDate,
            );
          }
          _focusActiveCell() {
            this._matCalendarBody._focusActiveCell();
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _getDateFromYear(r) {
            const c = this._dateAdapter.getMonth(this.activeDate),
              _ = this._dateAdapter.getNumDaysInMonth(
                this._dateAdapter.createDate(r, c, 1),
              );
            return this._dateAdapter.createDate(
              r,
              c,
              Math.min(this._dateAdapter.getDate(this.activeDate), _),
            );
          }
          _createCellForYear(r) {
            const c = this._dateAdapter.createDate(r, 0, 1),
              _ = this._dateAdapter.getYearName(c),
              k = this.dateClass ? this.dateClass(c, 'multi-year') : void 0;
            return new pr(r, _, _, this._shouldEnableYear(r), k);
          }
          _shouldEnableYear(r) {
            if (
              null == r ||
              (this.maxDate && r > this._dateAdapter.getYear(this.maxDate)) ||
              (this.minDate && r < this._dateAdapter.getYear(this.minDate))
            )
              return !1;
            if (!this.dateFilter) return !0;
            for (
              let _ = this._dateAdapter.createDate(r, 0, 1);
              this._dateAdapter.getYear(_) == r;
              _ = this._dateAdapter.addCalendarDays(_, 1)
            )
              if (this.dateFilter(_)) return !0;
            return !1;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setSelectedYear(r) {
            if (((this._selectedYear = null), r instanceof Bi)) {
              const c = r.start || r.end;
              c && (this._selectedYear = this._dateAdapter.getYear(c));
            } else r && (this._selectedYear = this._dateAdapter.getYear(r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(l.Y36(l.sBO), l.Y36(ft._A, 8), l.Y36(ni.Is, 8));
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['mat-multi-year-view']],
            viewQuery: function (r, c) {
              if ((1 & r && l.Gf(Zn, 5), 2 & r)) {
                let _;
                l.iGM((_ = l.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
            },
            outputs: {
              selectedChange: 'selectedChange',
              yearSelected: 'yearSelected',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMultiYearView'],
            decls: 5,
            vars: 7,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
              ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
              [
                'mat-calendar-body',
                '',
                3,
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'numCols',
                'cellAspectRatio',
                'activeCell',
                'selectedValueChange',
                'activeDateChange',
                'keyup',
                'keydown',
              ],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                l._UZ(3, 'th', 2),
                l.qZA()(),
                l.TgZ(4, 'tbody', 3),
                l.NdJ('selectedValueChange', function (k) {
                  return c._yearSelected(k);
                })('activeDateChange', function (k) {
                  return c._updateActiveDate(k);
                })('keyup', function (k) {
                  return c._handleCalendarBodyKeyup(k);
                })('keydown', function (k) {
                  return c._handleCalendarBodyKeydown(k);
                }),
                l.qZA()()),
                2 & r &&
                  (l.xp6(4),
                  l.Q6J('rows', c._years)('todayValue', c._todayYear)(
                    'startValue',
                    c._selectedYear,
                  )('endValue', c._selectedYear)('numCols', 4)(
                    'cellAspectRatio',
                    4 / 7,
                  )('activeCell', c._getActiveCell()));
            },
            dependencies: [Zn],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      function S(g, R, r, c, _) {
        const k = g.getYear(R),
          ge = g.getYear(r),
          st = q(g, c, _);
        return Math.floor((k - st) / B) === Math.floor((ge - st) / B);
      }
      function V(g, R, r, c) {
        return (function xe(g, R) {
          return ((g % R) + R) % R;
        })(g.getYear(R) - q(g, r, c), B);
      }
      function q(g, R, r) {
        let c = 0;
        return r ? (c = g.getYear(r) - B + 1) : R && (c = g.getYear(R)), c;
      }
      let Me = (() => {
          class g {
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(r) {
              let c = this._activeDate;
              const _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(
                _,
                this.minDate,
                this.maxDate,
              )),
                this._dateAdapter.getYear(c) !==
                  this._dateAdapter.getYear(this._activeDate) && this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              (this._selected =
                r instanceof Bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    )),
                this._setSelectedMonth(r);
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            constructor(r, c, _, k) {
              (this._changeDetectorRef = r),
                (this._dateFormats = c),
                (this._dateAdapter = _),
                (this._dir = k),
                (this._rerenderSubscription = dn.w0.EMPTY),
                (this.selectedChange = new l.vpe()),
                (this.monthSelected = new l.vpe()),
                (this.activeDateChange = new l.vpe()),
                (this._activeDate = this._dateAdapter.today());
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe((0, be.O)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _monthSelected(r) {
              const c = r.value,
                _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  c,
                  1,
                );
              this.monthSelected.emit(_);
              const k = this._getDateFromMonth(c);
              this.selectedChange.emit(k);
            }
            _updateActiveDate(r) {
              const _ = this._activeDate;
              (this.activeDate = this._getDateFromMonth(r.value)),
                this._dateAdapter.compareDate(_, this.activeDate) &&
                  this.activeDateChange.emit(this.activeDate);
            }
            _handleCalendarBodyKeydown(r) {
              const c = this._activeDate,
                _ = this._isRtl();
              switch (r.keyCode) {
                case Je.oh:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? 1 : -1,
                  );
                  break;
                case Je.SV:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? -1 : 1,
                  );
                  break;
                case Je.LH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -4,
                  );
                  break;
                case Je.JH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    4,
                  );
                  break;
                case Je.Sd:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case Je.uR:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    11 - this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case Je.Ku:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? -10 : -1,
                  );
                  break;
                case Je.VM:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? 10 : 1,
                  );
                  break;
                case Je.K5:
                case Je.L_:
                  this._selectionKeyPressed = !0;
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(c, this.activeDate) &&
                (this.activeDateChange.emit(this.activeDate),
                this._focusActiveCellAfterViewChecked()),
                r.preventDefault();
            }
            _handleCalendarBodyKeyup(r) {
              (r.keyCode === Je.L_ || r.keyCode === Je.K5) &&
                (this._selectionKeyPressed &&
                  this._monthSelected({
                    value: this._dateAdapter.getMonth(this._activeDate),
                    event: r,
                  }),
                (this._selectionKeyPressed = !1));
            }
            _init() {
              this._setSelectedMonth(this.selected),
                (this._todayMonth = this._getMonthInCurrentYear(
                  this._dateAdapter.today(),
                )),
                (this._yearLabel = this._dateAdapter.getYearName(
                  this.activeDate,
                ));
              let r = this._dateAdapter.getMonthNames('short');
              (this._months = [
                [0, 1, 2, 3],
                [4, 5, 6, 7],
                [8, 9, 10, 11],
              ].map(c => c.map(_ => this._createCellForMonth(_, r[_])))),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _focusActiveCellAfterViewChecked() {
              this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
            }
            _getMonthInCurrentYear(r) {
              return r &&
                this._dateAdapter.getYear(r) ==
                  this._dateAdapter.getYear(this.activeDate)
                ? this._dateAdapter.getMonth(r)
                : null;
            }
            _getDateFromMonth(r) {
              const c = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                _ = this._dateAdapter.getNumDaysInMonth(c);
              return this._dateAdapter.createDate(
                this._dateAdapter.getYear(this.activeDate),
                r,
                Math.min(this._dateAdapter.getDate(this.activeDate), _),
              );
            }
            _createCellForMonth(r, c) {
              const _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                k = this._dateAdapter.format(
                  _,
                  this._dateFormats.display.monthYearA11yLabel,
                ),
                ge = this.dateClass ? this.dateClass(_, 'year') : void 0;
              return new pr(
                r,
                c.toLocaleUpperCase(),
                k,
                this._shouldEnableMonth(r),
                ge,
              );
            }
            _shouldEnableMonth(r) {
              const c = this._dateAdapter.getYear(this.activeDate);
              if (
                null == r ||
                this._isYearAndMonthAfterMaxDate(c, r) ||
                this._isYearAndMonthBeforeMinDate(c, r)
              )
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let k = this._dateAdapter.createDate(c, r, 1);
                this._dateAdapter.getMonth(k) == r;
                k = this._dateAdapter.addCalendarDays(k, 1)
              )
                if (this.dateFilter(k)) return !0;
              return !1;
            }
            _isYearAndMonthAfterMaxDate(r, c) {
              if (this.maxDate) {
                const _ = this._dateAdapter.getYear(this.maxDate),
                  k = this._dateAdapter.getMonth(this.maxDate);
                return r > _ || (r === _ && c > k);
              }
              return !1;
            }
            _isYearAndMonthBeforeMinDate(r, c) {
              if (this.minDate) {
                const _ = this._dateAdapter.getYear(this.minDate),
                  k = this._dateAdapter.getMonth(this.minDate);
                return r < _ || (r === _ && c < k);
              }
              return !1;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
            _setSelectedMonth(r) {
              this._selectedMonth =
                r instanceof Bi
                  ? this._getMonthInCurrentYear(r.start) ||
                    this._getMonthInCurrentYear(r.end)
                  : this._getMonthInCurrentYear(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.sBO),
                l.Y36(ft.sG, 8),
                l.Y36(ft._A, 8),
                l.Y36(ni.Is, 8),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-year-view']],
              viewQuery: function (r, c) {
                if ((1 & r && l.Gf(Zn, 5), 2 & r)) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c._matCalendarBody = _.first);
                }
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                monthSelected: 'monthSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matYearView'],
              decls: 5,
              vars: 9,
              consts: [
                ['role', 'grid', 1, 'mat-calendar-table'],
                ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'startValue',
                  'endValue',
                  'labelMinRequiredCells',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'activeDateChange',
                  'keyup',
                  'keydown',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                  l._UZ(3, 'th', 2),
                  l.qZA()(),
                  l.TgZ(4, 'tbody', 3),
                  l.NdJ('selectedValueChange', function (k) {
                    return c._monthSelected(k);
                  })('activeDateChange', function (k) {
                    return c._updateActiveDate(k);
                  })('keyup', function (k) {
                    return c._handleCalendarBodyKeyup(k);
                  })('keydown', function (k) {
                    return c._handleCalendarBodyKeydown(k);
                  }),
                  l.qZA()()),
                  2 & r &&
                    (l.xp6(4),
                    l.Q6J('label', c._yearLabel)('rows', c._months)(
                      'todayValue',
                      c._todayMonth,
                    )('startValue', c._selectedMonth)(
                      'endValue',
                      c._selectedMonth,
                    )('labelMinRequiredCells', 2)('numCols', 4)(
                      'cellAspectRatio',
                      4 / 7,
                    )('activeCell', c._dateAdapter.getMonth(c.activeDate)));
              },
              dependencies: [Zn],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Xe = 1,
        gt = (() => {
          class g {
            constructor(r, c, _, k, ge) {
              (this._intl = r),
                (this.calendar = c),
                (this._dateAdapter = _),
                (this._dateFormats = k),
                (this._id = 'mat-calendar-header-' + Xe++),
                (this._periodButtonLabelId = `${this._id}-period-label`),
                this.calendar.stateChanges.subscribe(() => ge.markForCheck());
            }
            get periodButtonText() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRange(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonDescription() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRangeLabel(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonLabel() {
              return 'month' == this.calendar.currentView
                ? this._intl.switchToMultiYearViewLabel
                : this._intl.switchToMonthViewLabel;
            }
            get prevButtonLabel() {
              return {
                month: this._intl.prevMonthLabel,
                year: this._intl.prevYearLabel,
                'multi-year': this._intl.prevMultiYearLabel,
              }[this.calendar.currentView];
            }
            get nextButtonLabel() {
              return {
                month: this._intl.nextMonthLabel,
                year: this._intl.nextYearLabel,
                'multi-year': this._intl.nextMultiYearLabel,
              }[this.calendar.currentView];
            }
            currentPeriodClicked() {
              this.calendar.currentView =
                'month' == this.calendar.currentView ? 'multi-year' : 'month';
            }
            previousClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      -1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? -1 : -B,
                    );
            }
            nextClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? 1 : B,
                    );
            }
            previousEnabled() {
              return (
                !this.calendar.minDate ||
                !this.calendar.minDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.minDate,
                )
              );
            }
            nextEnabled() {
              return (
                !this.calendar.maxDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.maxDate,
                )
              );
            }
            _isSameView(r, c) {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) ==
                    this._dateAdapter.getYear(c) &&
                    this._dateAdapter.getMonth(r) ==
                      this._dateAdapter.getMonth(c)
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) == this._dateAdapter.getYear(c)
                : S(
                    this._dateAdapter,
                    r,
                    c,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  );
            }
            _formatMinAndMaxYearLabels() {
              const c =
                  this._dateAdapter.getYear(this.calendar.activeDate) -
                  V(
                    this._dateAdapter,
                    this.calendar.activeDate,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  ),
                _ = c + B - 1;
              return [
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(c, 0, 1),
                ),
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(_, 0, 1),
                ),
              ];
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(Sn),
                l.Y36((0, l.Gpc)(() => Zt)),
                l.Y36(ft._A, 8),
                l.Y36(ft.sG, 8),
                l.Y36(l.sBO),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-calendar-header']],
              exportAs: ['matCalendarHeader'],
              ngContentSelectors: ko,
              decls: 13,
              vars: 11,
              consts: [
                [1, 'mat-calendar-header'],
                [1, 'mat-calendar-controls'],
                [
                  'mat-button',
                  '',
                  'type',
                  'button',
                  'aria-live',
                  'polite',
                  1,
                  'mat-calendar-period-button',
                  3,
                  'click',
                ],
                ['aria-hidden', 'true'],
                [
                  'viewBox',
                  '0 0 10 5',
                  'focusable',
                  'false',
                  'aria-hidden',
                  'true',
                  1,
                  'mat-calendar-arrow',
                ],
                ['points', '0,0 5,5 10,0'],
                [1, 'mat-calendar-spacer'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-previous-button',
                  3,
                  'disabled',
                  'click',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-next-button',
                  3,
                  'disabled',
                  'click',
                ],
                [1, 'mat-calendar-hidden-label', 3, 'id'],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.F$t(),
                  l.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'button', 2),
                  l.NdJ('click', function () {
                    return c.currentPeriodClicked();
                  }),
                  l.TgZ(3, 'span', 3),
                  l._uU(4),
                  l.qZA(),
                  l.O4$(),
                  l.TgZ(5, 'svg', 4),
                  l._UZ(6, 'polygon', 5),
                  l.qZA()(),
                  l.kcU(),
                  l._UZ(7, 'div', 6),
                  l.Hsn(8),
                  l.TgZ(9, 'button', 7),
                  l.NdJ('click', function () {
                    return c.previousClicked();
                  }),
                  l.qZA(),
                  l.TgZ(10, 'button', 8),
                  l.NdJ('click', function () {
                    return c.nextClicked();
                  }),
                  l.qZA()()(),
                  l.TgZ(11, 'label', 9),
                  l._uU(12),
                  l.qZA()),
                  2 & r &&
                    (l.xp6(2),
                    l.uIk('aria-label', c.periodButtonLabel)(
                      'aria-describedby',
                      c._periodButtonLabelId,
                    ),
                    l.xp6(2),
                    l.Oqu(c.periodButtonText),
                    l.xp6(1),
                    l.ekj(
                      'mat-calendar-invert',
                      'month' !== c.calendar.currentView,
                    ),
                    l.xp6(4),
                    l.Q6J('disabled', !c.previousEnabled()),
                    l.uIk('aria-label', c.prevButtonLabel),
                    l.xp6(1),
                    l.Q6J('disabled', !c.nextEnabled()),
                    l.uIk('aria-label', c.nextButtonLabel),
                    l.xp6(1),
                    l.Q6J('id', c._periodButtonLabelId),
                    l.xp6(1),
                    l.Oqu(c.periodButtonDescription));
              },
              dependencies: [rt.lW, rt.RK],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Zt = (() => {
          class g {
            get startAt() {
              return this._startAt;
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              this._selected =
                r instanceof Bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    );
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get activeDate() {
              return this._clampedActiveDate;
            }
            set activeDate(r) {
              (this._clampedActiveDate = this._dateAdapter.clampDate(
                r,
                this.minDate,
                this.maxDate,
              )),
                this.stateChanges.next(),
                this._changeDetectorRef.markForCheck();
            }
            get currentView() {
              return this._currentView;
            }
            set currentView(r) {
              const c = this._currentView !== r ? r : null;
              (this._currentView = r),
                (this._moveFocusOnNextTick = !0),
                this._changeDetectorRef.markForCheck(),
                c && this.viewChanged.emit(c);
            }
            constructor(r, c, _, k) {
              (this._dateAdapter = c),
                (this._dateFormats = _),
                (this._changeDetectorRef = k),
                (this._moveFocusOnNextTick = !1),
                (this.startView = 'month'),
                (this.selectedChange = new l.vpe()),
                (this.yearSelected = new l.vpe()),
                (this.monthSelected = new l.vpe()),
                (this.viewChanged = new l.vpe(!0)),
                (this._userSelection = new l.vpe()),
                (this._userDragDrop = new l.vpe()),
                (this._activeDrag = null),
                (this.stateChanges = new Ft.x()),
                (this._intlChanges = r.changes.subscribe(() => {
                  k.markForCheck(), this.stateChanges.next();
                }));
            }
            ngAfterContentInit() {
              (this._calendarHeaderPortal = new kn.C5(
                this.headerComponent || gt,
              )),
                (this.activeDate = this.startAt || this._dateAdapter.today()),
                (this._currentView = this.startView);
            }
            ngAfterViewChecked() {
              this._moveFocusOnNextTick &&
                ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe(), this.stateChanges.complete();
            }
            ngOnChanges(r) {
              const c =
                  r.minDate &&
                  !this._dateAdapter.sameDate(
                    r.minDate.previousValue,
                    r.minDate.currentValue,
                  )
                    ? r.minDate
                    : void 0,
                _ =
                  r.maxDate &&
                  !this._dateAdapter.sameDate(
                    r.maxDate.previousValue,
                    r.maxDate.currentValue,
                  )
                    ? r.maxDate
                    : void 0,
                k = c || _ || r.dateFilter;
              if (k && !k.firstChange) {
                const ge = this._getCurrentViewComponent();
                ge && (this._changeDetectorRef.detectChanges(), ge._init());
              }
              this.stateChanges.next();
            }
            focusActiveCell() {
              this._getCurrentViewComponent()._focusActiveCell(!1);
            }
            updateTodaysDate() {
              this._getCurrentViewComponent()._init();
            }
            _dateSelected(r) {
              const c = r.value;
              (this.selected instanceof Bi ||
                (c && !this._dateAdapter.sameDate(c, this.selected))) &&
                this.selectedChange.emit(c),
                this._userSelection.emit(r);
            }
            _yearSelectedInMultiYearView(r) {
              this.yearSelected.emit(r);
            }
            _monthSelectedInYearView(r) {
              this.monthSelected.emit(r);
            }
            _goToDateInView(r, c) {
              (this.activeDate = r), (this.currentView = c);
            }
            _dragStarted(r) {
              this._activeDrag = r;
            }
            _dragEnded(r) {
              this._activeDrag &&
                (r.value && this._userDragDrop.emit(r),
                (this._activeDrag = null));
            }
            _getCurrentViewComponent() {
              return this.monthView || this.yearView || this.multiYearView;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(Sn),
                l.Y36(ft._A, 8),
                l.Y36(ft.sG, 8),
                l.Y36(l.sBO),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-calendar']],
              viewQuery: function (r, c) {
                if ((1 & r && (l.Gf(lo, 5), l.Gf(Me, 5), l.Gf(p, 5)), 2 & r)) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c.monthView = _.first),
                    l.iGM((_ = l.CRH())) && (c.yearView = _.first),
                    l.iGM((_ = l.CRH())) && (c.multiYearView = _.first);
                }
              },
              hostAttrs: [1, 'mat-calendar'],
              inputs: {
                headerComponent: 'headerComponent',
                startAt: 'startAt',
                startView: 'startView',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                _userSelection: '_userSelection',
                _userDragDrop: '_userDragDrop',
              },
              exportAs: ['matCalendar'],
              features: [l._Bn([Ar]), l.TTD],
              decls: 5,
              vars: 5,
              consts: [
                [3, 'cdkPortalOutlet'],
                [
                  'cdkMonitorSubtreeFocus',
                  '',
                  'tabindex',
                  '-1',
                  1,
                  'mat-calendar-content',
                  3,
                  'ngSwitch',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.YNc(0, Ri, 0, 0, 'ng-template', 0),
                  l.TgZ(1, 'div', 1),
                  l.YNc(2, Vr, 1, 11, 'mat-month-view', 2),
                  l.YNc(3, so, 1, 6, 'mat-year-view', 3),
                  l.YNc(4, vn, 1, 6, 'mat-multi-year-view', 4),
                  l.qZA()),
                  2 & r &&
                    (l.Q6J('cdkPortalOutlet', c._calendarHeaderPortal),
                    l.xp6(1),
                    l.Q6J('ngSwitch', c.currentView),
                    l.xp6(1),
                    l.Q6J('ngSwitchCase', 'month'),
                    l.xp6(1),
                    l.Q6J('ngSwitchCase', 'year'),
                    l.xp6(1),
                    l.Q6J('ngSwitchCase', 'multi-year'));
              },
              dependencies: [s.RF, s.n9, Vt.kH, kn.Pl, lo, Me, p],
              styles: [
                '.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}.mat-calendar-hidden-label{display:none}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      const zt = {
        transformPanel: (0, Gt.X$)('transformPanel', [
          (0, Gt.eR)(
            'void => enter-dropdown',
            (0, Gt.jt)(
              '120ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Gt.F4)([
                (0, Gt.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
                (0, Gt.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ]),
            ),
          ),
          (0, Gt.eR)(
            'void => enter-dialog',
            (0, Gt.jt)(
              '150ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Gt.F4)([
                (0, Gt.oB)({ opacity: 0, transform: 'scale(0.7)' }),
                (0, Gt.oB)({ transform: 'none', opacity: 1 }),
              ]),
            ),
          ),
          (0, Gt.eR)(
            '* => void',
            (0, Gt.jt)('100ms linear', (0, Gt.oB)({ opacity: 0 })),
          ),
        ]),
        fadeInCalendar: (0, Gt.X$)('fadeInCalendar', [
          (0, Gt.SB)('void', (0, Gt.oB)({ opacity: 0 })),
          (0, Gt.SB)('enter', (0, Gt.oB)({ opacity: 1 })),
          (0, Gt.eR)(
            'void => *',
            (0, Gt.jt)('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ),
        ]),
      };
      let Cn = 0;
      const sn = new l.OlP('mat-datepicker-scroll-strategy'),
        xn = {
          provide: sn,
          deps: [nn.aV],
          useFactory: function fn(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        Hn = (0, ft.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        );
      let Jn = (() => {
          class g extends Hn {
            constructor(r, c, _, k, ge, st) {
              super(r),
                (this._changeDetectorRef = c),
                (this._globalModel = _),
                (this._dateAdapter = k),
                (this._rangeSelectionStrategy = ge),
                (this._subscriptions = new dn.w0()),
                (this._animationDone = new Ft.x()),
                (this._isAnimating = !1),
                (this._actionsPortal = null),
                (this._closeButtonText = st.closeCalendarLabel);
            }
            ngOnInit() {
              this._animationState = this.datepicker.touchUi
                ? 'enter-dialog'
                : 'enter-dropdown';
            }
            ngAfterViewInit() {
              this._subscriptions.add(
                this.datepicker.stateChanges.subscribe(() => {
                  this._changeDetectorRef.markForCheck();
                }),
              ),
                this._calendar.focusActiveCell();
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(), this._animationDone.complete();
            }
            _handleUserSelection(r) {
              const c = this._model.selection,
                _ = r.value,
                k = c instanceof Bi;
              if (k && this._rangeSelectionStrategy) {
                const ge = this._rangeSelectionStrategy.selectionFinished(
                  _,
                  c,
                  r.event,
                );
                this._model.updateSelection(ge, this);
              } else
                _ &&
                  (k || !this._dateAdapter.sameDate(_, c)) &&
                  this._model.add(_);
              (!this._model || this._model.isComplete()) &&
                !this._actionsPortal &&
                this.datepicker.close();
            }
            _handleUserDragDrop(r) {
              this._model.updateSelection(r.value, this);
            }
            _startExitAnimation() {
              (this._animationState = 'void'),
                this._changeDetectorRef.markForCheck();
            }
            _handleAnimationEvent(r) {
              (this._isAnimating = 'start' === r.phaseName),
                this._isAnimating || this._animationDone.next();
            }
            _getSelected() {
              return this._model.selection;
            }
            _applyPendingSelection() {
              this._model !== this._globalModel &&
                this._globalModel.updateSelection(this._model.selection, this);
            }
            _assignActions(r, c) {
              (this._model = r ? this._globalModel.clone() : this._globalModel),
                (this._actionsPortal = r),
                c && this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(l.sBO),
                l.Y36(Mr),
                l.Y36(ft._A),
                l.Y36(gr, 8),
                l.Y36(Sn),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-datepicker-content']],
              viewQuery: function (r, c) {
                if ((1 & r && l.Gf(Zt, 5), 2 & r)) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c._calendar = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-content'],
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  l.WFA('@transformPanel.start', function (k) {
                    return c._handleAnimationEvent(k);
                  })('@transformPanel.done', function (k) {
                    return c._handleAnimationEvent(k);
                  }),
                  2 & r &&
                    (l.d8E('@transformPanel', c._animationState),
                    l.ekj(
                      'mat-datepicker-content-touch',
                      c.datepicker.touchUi,
                    ));
              },
              inputs: { color: 'color' },
              exportAs: ['matDatepickerContent'],
              features: [l.qOj],
              decls: 5,
              vars: 26,
              consts: [
                [
                  'cdkTrapFocus',
                  '',
                  'role',
                  'dialog',
                  1,
                  'mat-datepicker-content-container',
                ],
                [
                  3,
                  'id',
                  'ngClass',
                  'startAt',
                  'startView',
                  'minDate',
                  'maxDate',
                  'dateFilter',
                  'headerComponent',
                  'selected',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'yearSelected',
                  'monthSelected',
                  'viewChanged',
                  '_userSelection',
                  '_userDragDrop',
                ],
                [3, 'cdkPortalOutlet'],
                [
                  'type',
                  'button',
                  'mat-raised-button',
                  '',
                  1,
                  'mat-datepicker-close-button',
                  3,
                  'color',
                  'focus',
                  'blur',
                  'click',
                ],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (l.TgZ(0, 'div', 0)(1, 'mat-calendar', 1),
                    l.NdJ('yearSelected', function (k) {
                      return c.datepicker._selectYear(k);
                    })('monthSelected', function (k) {
                      return c.datepicker._selectMonth(k);
                    })('viewChanged', function (k) {
                      return c.datepicker._viewChanged(k);
                    })('_userSelection', function (k) {
                      return c._handleUserSelection(k);
                    })('_userDragDrop', function (k) {
                      return c._handleUserDragDrop(k);
                    }),
                    l.qZA(),
                    l.YNc(2, fr, 0, 0, 'ng-template', 2),
                    l.TgZ(3, 'button', 3),
                    l.NdJ('focus', function () {
                      return (c._closeButtonFocused = !0);
                    })('blur', function () {
                      return (c._closeButtonFocused = !1);
                    })('click', function () {
                      return c.datepicker.close();
                    }),
                    l._uU(4),
                    l.qZA()()),
                  2 & r)
                ) {
                  let _;
                  l.ekj(
                    'mat-datepicker-content-container-with-custom-header',
                    c.datepicker.calendarHeaderComponent,
                  )(
                    'mat-datepicker-content-container-with-actions',
                    c._actionsPortal,
                  ),
                    l.uIk('aria-modal', !0)(
                      'aria-labelledby',
                      null !== (_ = c._dialogLabelId) && void 0 !== _
                        ? _
                        : void 0,
                    ),
                    l.xp6(1),
                    l.Q6J('id', c.datepicker.id)(
                      'ngClass',
                      c.datepicker.panelClass,
                    )('startAt', c.datepicker.startAt)(
                      'startView',
                      c.datepicker.startView,
                    )('minDate', c.datepicker._getMinDate())(
                      'maxDate',
                      c.datepicker._getMaxDate(),
                    )('dateFilter', c.datepicker._getDateFilter())(
                      'headerComponent',
                      c.datepicker.calendarHeaderComponent,
                    )('selected', c._getSelected())(
                      'dateClass',
                      c.datepicker.dateClass,
                    )('comparisonStart', c.comparisonStart)(
                      'comparisonEnd',
                      c.comparisonEnd,
                    )('@fadeInCalendar', 'enter')(
                      'startDateAccessibleName',
                      c.startDateAccessibleName,
                    )('endDateAccessibleName', c.endDateAccessibleName),
                    l.xp6(1),
                    l.Q6J('cdkPortalOutlet', c._actionsPortal),
                    l.xp6(1),
                    l.ekj('cdk-visually-hidden', !c._closeButtonFocused),
                    l.Q6J('color', c.color || 'primary'),
                    l.xp6(1),
                    l.Oqu(c._closeButtonText);
                }
              },
              dependencies: [s.mk, rt.lW, Vt.mK, kn.Pl, Zt],
              styles: [
                '.mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}',
              ],
              encapsulation: 2,
              data: { animation: [zt.transformPanel, zt.fadeInCalendar] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        bi = (() => {
          class g {
            get startAt() {
              return (
                this._startAt ||
                (this.datepickerInput
                  ? this.datepickerInput.getStartValue()
                  : null)
              );
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get color() {
              return (
                this._color ||
                (this.datepickerInput
                  ? this.datepickerInput.getThemePalette()
                  : void 0)
              );
            }
            set color(r) {
              this._color = r;
            }
            get touchUi() {
              return this._touchUi;
            }
            set touchUi(r) {
              this._touchUi = (0, Et.Ig)(r);
            }
            get disabled() {
              return void 0 === this._disabled && this.datepickerInput
                ? this.datepickerInput.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              const c = (0, Et.Ig)(r);
              c !== this._disabled &&
                ((this._disabled = c), this.stateChanges.next(void 0));
            }
            get restoreFocus() {
              return this._restoreFocus;
            }
            set restoreFocus(r) {
              this._restoreFocus = (0, Et.Ig)(r);
            }
            get panelClass() {
              return this._panelClass;
            }
            set panelClass(r) {
              this._panelClass = (0, Et.du)(r);
            }
            get opened() {
              return this._opened;
            }
            set opened(r) {
              (0, Et.Ig)(r) ? this.open() : this.close();
            }
            _getMinDate() {
              return this.datepickerInput && this.datepickerInput.min;
            }
            _getMaxDate() {
              return this.datepickerInput && this.datepickerInput.max;
            }
            _getDateFilter() {
              return this.datepickerInput && this.datepickerInput.dateFilter;
            }
            constructor(r, c, _, k, ge, st, an) {
              (this._overlay = r),
                (this._ngZone = c),
                (this._viewContainerRef = _),
                (this._dateAdapter = ge),
                (this._dir = st),
                (this._model = an),
                (this._inputStateChanges = dn.w0.EMPTY),
                (this._document = (0, l.f3M)(s.K0)),
                (this.startView = 'month'),
                (this._touchUi = !1),
                (this.xPosition = 'start'),
                (this.yPosition = 'below'),
                (this._restoreFocus = !0),
                (this.yearSelected = new l.vpe()),
                (this.monthSelected = new l.vpe()),
                (this.viewChanged = new l.vpe(!0)),
                (this.openedStream = new l.vpe()),
                (this.closedStream = new l.vpe()),
                (this._opened = !1),
                (this.id = 'mat-datepicker-' + Cn++),
                (this._focusedElementBeforeOpen = null),
                (this._backdropHarnessClass = `${this.id}-backdrop`),
                (this.stateChanges = new Ft.x()),
                (this._scrollStrategy = k);
            }
            ngOnChanges(r) {
              const c = r.xPosition || r.yPosition;
              if (c && !c.firstChange && this._overlayRef) {
                const _ = this._overlayRef.getConfig().positionStrategy;
                _ instanceof nn._G &&
                  (this._setConnectedPositions(_),
                  this.opened && this._overlayRef.updatePosition());
              }
              this.stateChanges.next(void 0);
            }
            ngOnDestroy() {
              this._destroyOverlay(),
                this.close(),
                this._inputStateChanges.unsubscribe(),
                this.stateChanges.complete();
            }
            select(r) {
              this._model.add(r);
            }
            _selectYear(r) {
              this.yearSelected.emit(r);
            }
            _selectMonth(r) {
              this.monthSelected.emit(r);
            }
            _viewChanged(r) {
              this.viewChanged.emit(r);
            }
            registerInput(r) {
              return (
                this._inputStateChanges.unsubscribe(),
                (this.datepickerInput = r),
                (this._inputStateChanges = r.stateChanges.subscribe(() =>
                  this.stateChanges.next(void 0),
                )),
                this._model
              );
            }
            registerActions(r) {
              (this._actionsPortal = r),
                this._componentRef?.instance._assignActions(r, !0);
            }
            removeActions(r) {
              r === this._actionsPortal &&
                ((this._actionsPortal = null),
                this._componentRef?.instance._assignActions(null, !0));
            }
            open() {
              this._opened ||
                this.disabled ||
                this._componentRef?.instance._isAnimating ||
                ((this._focusedElementBeforeOpen = (0, Kn.ht)()),
                this._openOverlay(),
                (this._opened = !0),
                this.openedStream.emit());
            }
            close() {
              if (!this._opened || this._componentRef?.instance._isAnimating)
                return;
              const r =
                  this._restoreFocus &&
                  this._focusedElementBeforeOpen &&
                  'function' == typeof this._focusedElementBeforeOpen.focus,
                c = () => {
                  this._opened &&
                    ((this._opened = !1), this.closedStream.emit());
                };
              if (this._componentRef) {
                const { instance: _, location: k } = this._componentRef;
                _._startExitAnimation(),
                  _._animationDone.pipe((0, z.q)(1)).subscribe(() => {
                    const ge = this._document.activeElement;
                    r &&
                      (!ge ||
                        ge === this._document.activeElement ||
                        k.nativeElement.contains(ge)) &&
                      this._focusedElementBeforeOpen.focus(),
                      (this._focusedElementBeforeOpen = null),
                      this._destroyOverlay();
                  });
              }
              r ? setTimeout(c) : c();
            }
            _applyPendingSelection() {
              this._componentRef?.instance?._applyPendingSelection();
            }
            _forwardContentValues(r) {
              (r.datepicker = this),
                (r.color = this.color),
                (r._dialogLabelId = this.datepickerInput.getOverlayLabelId()),
                r._assignActions(this._actionsPortal, !1);
            }
            _openOverlay() {
              this._destroyOverlay();
              const r = this.touchUi,
                c = new kn.C5(Jn, this._viewContainerRef),
                _ = (this._overlayRef = this._overlay.create(
                  new nn.X_({
                    positionStrategy: r
                      ? this._getDialogStrategy()
                      : this._getDropdownStrategy(),
                    hasBackdrop: !0,
                    backdropClass: [
                      r
                        ? 'cdk-overlay-dark-backdrop'
                        : 'mat-overlay-transparent-backdrop',
                      this._backdropHarnessClass,
                    ],
                    direction: this._dir,
                    scrollStrategy: r
                      ? this._overlay.scrollStrategies.block()
                      : this._scrollStrategy(),
                    panelClass: 'mat-datepicker-' + (r ? 'dialog' : 'popup'),
                  }),
                ));
              this._getCloseStream(_).subscribe(k => {
                k && k.preventDefault(), this.close();
              }),
                _.keydownEvents().subscribe(k => {
                  const ge = k.keyCode;
                  (ge === Je.LH ||
                    ge === Je.JH ||
                    ge === Je.oh ||
                    ge === Je.SV ||
                    ge === Je.Ku ||
                    ge === Je.VM) &&
                    k.preventDefault();
                }),
                (this._componentRef = _.attach(c)),
                this._forwardContentValues(this._componentRef.instance),
                r ||
                  this._ngZone.onStable
                    .pipe((0, z.q)(1))
                    .subscribe(() => _.updatePosition());
            }
            _destroyOverlay() {
              this._overlayRef &&
                (this._overlayRef.dispose(),
                (this._overlayRef = this._componentRef = null));
            }
            _getDialogStrategy() {
              return this._overlay
                .position()
                .global()
                .centerHorizontally()
                .centerVertically();
            }
            _getDropdownStrategy() {
              const r = this._overlay
                .position()
                .flexibleConnectedTo(
                  this.datepickerInput.getConnectedOverlayOrigin(),
                )
                .withTransformOriginOn('.mat-datepicker-content')
                .withFlexibleDimensions(!1)
                .withViewportMargin(8)
                .withLockedPosition();
              return this._setConnectedPositions(r);
            }
            _setConnectedPositions(r) {
              const c = 'end' === this.xPosition ? 'end' : 'start',
                _ = 'start' === c ? 'end' : 'start',
                k = 'above' === this.yPosition ? 'bottom' : 'top',
                ge = 'top' === k ? 'bottom' : 'top';
              return r.withPositions([
                { originX: c, originY: ge, overlayX: c, overlayY: k },
                { originX: c, originY: k, overlayX: c, overlayY: ge },
                { originX: _, originY: ge, overlayX: _, overlayY: k },
                { originX: _, originY: k, overlayX: _, overlayY: ge },
              ]);
            }
            _getCloseStream(r) {
              const c = ['ctrlKey', 'shiftKey', 'metaKey'];
              return (0, en.T)(
                r.backdropClick(),
                r.detachments(),
                r
                  .keydownEvents()
                  .pipe(
                    (0, He.h)(
                      _ =>
                        (_.keyCode === Je.hY && !(0, Je.Vb)(_)) ||
                        (this.datepickerInput &&
                          (0, Je.Vb)(_, 'altKey') &&
                          _.keyCode === Je.LH &&
                          c.every(k => !(0, Je.Vb)(_, k))),
                    ),
                  ),
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(nn.aV),
                l.Y36(l.R0b),
                l.Y36(l.s_b),
                l.Y36(sn),
                l.Y36(ft._A, 8),
                l.Y36(ni.Is, 8),
                l.Y36(Mr),
              );
            }),
            (g.ɵdir = l.lG2({
              type: g,
              inputs: {
                calendarHeaderComponent: 'calendarHeaderComponent',
                startAt: 'startAt',
                startView: 'startView',
                color: 'color',
                touchUi: 'touchUi',
                disabled: 'disabled',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                restoreFocus: 'restoreFocus',
                dateClass: 'dateClass',
                panelClass: 'panelClass',
                opened: 'opened',
              },
              outputs: {
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                openedStream: 'opened',
                closedStream: 'closed',
              },
              features: [l.TTD],
            })),
            g
          );
        })(),
        Ui = (() => {
          class g extends bi {}
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = l.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-datepicker']],
              exportAs: ['matDatepicker'],
              features: [l._Bn([Ar, { provide: bi, useExisting: g }]), l.qOj],
              decls: 0,
              vars: 0,
              template: function (r, c) {},
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      class ii {
        constructor(R, r) {
          (this.target = R),
            (this.targetElement = r),
            (this.value = this.target.value);
        }
      }
      let Sr = (() => {
        class g {
          get value() {
            return this._model
              ? this._getValueFromModel(this._model.selection)
              : this._pendingValue;
          }
          set value(r) {
            this._assignValueProgrammatically(r);
          }
          get disabled() {
            return !!this._disabled || this._parentDisabled();
          }
          set disabled(r) {
            const c = (0, Et.Ig)(r),
              _ = this._elementRef.nativeElement;
            this._disabled !== c &&
              ((this._disabled = c), this.stateChanges.next(void 0)),
              c && this._isInitialized && _.blur && _.blur();
          }
          _getValidators() {
            return [
              this._parseValidator,
              this._minValidator,
              this._maxValidator,
              this._filterValidator,
            ];
          }
          _registerModel(r) {
            (this._model = r),
              this._valueChangesSubscription.unsubscribe(),
              this._pendingValue && this._assignValue(this._pendingValue),
              (this._valueChangesSubscription =
                this._model.selectionChanged.subscribe(c => {
                  if (this._shouldHandleChangeEvent(c)) {
                    const _ = this._getValueFromModel(c.selection);
                    (this._lastValueValid = this._isValidValue(_)),
                      this._cvaOnChange(_),
                      this._onTouched(),
                      this._formatValue(_),
                      this.dateInput.emit(
                        new ii(this, this._elementRef.nativeElement),
                      ),
                      this.dateChange.emit(
                        new ii(this, this._elementRef.nativeElement),
                      );
                  }
                }));
          }
          constructor(r, c, _) {
            (this._elementRef = r),
              (this._dateAdapter = c),
              (this._dateFormats = _),
              (this.dateChange = new l.vpe()),
              (this.dateInput = new l.vpe()),
              (this.stateChanges = new Ft.x()),
              (this._onTouched = () => {}),
              (this._validatorOnChange = () => {}),
              (this._cvaOnChange = () => {}),
              (this._valueChangesSubscription = dn.w0.EMPTY),
              (this._localeSubscription = dn.w0.EMPTY),
              (this._parseValidator = () =>
                this._lastValueValid
                  ? null
                  : {
                      matDatepickerParse: {
                        text: this._elementRef.nativeElement.value,
                      },
                    }),
              (this._filterValidator = k => {
                const ge = this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(k.value),
                );
                return !ge || this._matchesFilter(ge)
                  ? null
                  : { matDatepickerFilter: !0 };
              }),
              (this._minValidator = k => {
                const ge = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(k.value),
                  ),
                  st = this._getMinDate();
                return !st || !ge || this._dateAdapter.compareDate(st, ge) <= 0
                  ? null
                  : { matDatepickerMin: { min: st, actual: ge } };
              }),
              (this._maxValidator = k => {
                const ge = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(k.value),
                  ),
                  st = this._getMaxDate();
                return !st || !ge || this._dateAdapter.compareDate(st, ge) >= 0
                  ? null
                  : { matDatepickerMax: { max: st, actual: ge } };
              }),
              (this._lastValueValid = !1),
              (this._localeSubscription = c.localeChanges.subscribe(() => {
                this._assignValueProgrammatically(this.value);
              }));
          }
          ngAfterViewInit() {
            this._isInitialized = !0;
          }
          ngOnChanges(r) {
            (function Gi(g, R) {
              const r = Object.keys(g);
              for (let c of r) {
                const { previousValue: _, currentValue: k } = g[c];
                if (!R.isDateInstance(_) || !R.isDateInstance(k)) return !0;
                if (!R.sameDate(_, k)) return !0;
              }
              return !1;
            })(r, this._dateAdapter) && this.stateChanges.next(void 0);
          }
          ngOnDestroy() {
            this._valueChangesSubscription.unsubscribe(),
              this._localeSubscription.unsubscribe(),
              this.stateChanges.complete();
          }
          registerOnValidatorChange(r) {
            this._validatorOnChange = r;
          }
          validate(r) {
            return this._validator ? this._validator(r) : null;
          }
          writeValue(r) {
            this._assignValueProgrammatically(r);
          }
          registerOnChange(r) {
            this._cvaOnChange = r;
          }
          registerOnTouched(r) {
            this._onTouched = r;
          }
          setDisabledState(r) {
            this.disabled = r;
          }
          _onKeydown(r) {
            (0, Je.Vb)(r, 'altKey') &&
              r.keyCode === Je.JH &&
              ['ctrlKey', 'shiftKey', 'metaKey'].every(
                k => !(0, Je.Vb)(r, k),
              ) &&
              !this._elementRef.nativeElement.readOnly &&
              (this._openPopup(), r.preventDefault());
          }
          _onInput(r) {
            const c = this._lastValueValid;
            let _ = this._dateAdapter.parse(
              r,
              this._dateFormats.parse.dateInput,
            );
            (this._lastValueValid = this._isValidValue(_)),
              (_ = this._dateAdapter.getValidDateOrNull(_));
            const k = !this._dateAdapter.sameDate(_, this.value);
            !_ || k
              ? this._cvaOnChange(_)
              : (r && !this.value && this._cvaOnChange(_),
                c !== this._lastValueValid && this._validatorOnChange()),
              k &&
                (this._assignValue(_),
                this.dateInput.emit(
                  new ii(this, this._elementRef.nativeElement),
                ));
          }
          _onChange() {
            this.dateChange.emit(new ii(this, this._elementRef.nativeElement));
          }
          _onBlur() {
            this.value && this._formatValue(this.value), this._onTouched();
          }
          _formatValue(r) {
            this._elementRef.nativeElement.value =
              null != r
                ? this._dateAdapter.format(
                    r,
                    this._dateFormats.display.dateInput,
                  )
                : '';
          }
          _assignValue(r) {
            this._model
              ? (this._assignValueToModel(r), (this._pendingValue = null))
              : (this._pendingValue = r);
          }
          _isValidValue(r) {
            return !r || this._dateAdapter.isValid(r);
          }
          _parentDisabled() {
            return !1;
          }
          _assignValueProgrammatically(r) {
            (r = this._dateAdapter.deserialize(r)),
              (this._lastValueValid = this._isValidValue(r)),
              (r = this._dateAdapter.getValidDateOrNull(r)),
              this._assignValue(r),
              this._formatValue(r);
          }
          _matchesFilter(r) {
            const c = this._getDateFilter();
            return !c || c(r);
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(l.Y36(l.SBq), l.Y36(ft._A, 8), l.Y36(ft.sG, 8));
          }),
          (g.ɵdir = l.lG2({
            type: g,
            inputs: { value: 'value', disabled: 'disabled' },
            outputs: { dateChange: 'dateChange', dateInput: 'dateInput' },
            features: [l.TTD],
          })),
          g
        );
      })();
      const y = { provide: Ln.JU, useExisting: (0, l.Gpc)(() => A), multi: !0 },
        P = { provide: Ln.Cf, useExisting: (0, l.Gpc)(() => A), multi: !0 };
      let A = (() => {
          class g extends Sr {
            set matDatepicker(r) {
              r &&
                ((this._datepicker = r),
                (this._closedSubscription = r.closedStream.subscribe(() =>
                  this._onTouched(),
                )),
                this._registerModel(r.registerInput(this)));
            }
            get min() {
              return this._min;
            }
            set min(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._min) ||
                ((this._min = c), this._validatorOnChange());
            }
            get max() {
              return this._max;
            }
            set max(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._max) ||
                ((this._max = c), this._validatorOnChange());
            }
            get dateFilter() {
              return this._dateFilter;
            }
            set dateFilter(r) {
              const c = this._matchesFilter(this.value);
              (this._dateFilter = r),
                this._matchesFilter(this.value) !== c &&
                  this._validatorOnChange();
            }
            constructor(r, c, _, k) {
              super(r, c, _),
                (this._formField = k),
                (this._closedSubscription = dn.w0.EMPTY),
                (this._validator = Ln.kI.compose(super._getValidators()));
            }
            getConnectedOverlayOrigin() {
              return this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._elementRef;
            }
            getOverlayLabelId() {
              return this._formField
                ? this._formField.getLabelId()
                : this._elementRef.nativeElement.getAttribute(
                    'aria-labelledby',
                  );
            }
            getThemePalette() {
              return this._formField ? this._formField.color : void 0;
            }
            getStartValue() {
              return this.value;
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this._closedSubscription.unsubscribe();
            }
            _openPopup() {
              this._datepicker && this._datepicker.open();
            }
            _getValueFromModel(r) {
              return r;
            }
            _assignValueToModel(r) {
              this._model && this._model.updateSelection(r, this);
            }
            _getMinDate() {
              return this._min;
            }
            _getMaxDate() {
              return this._max;
            }
            _getDateFilter() {
              return this._dateFilter;
            }
            _shouldHandleChangeEvent(r) {
              return r.source !== this;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(ft._A, 8),
                l.Y36(ft.sG, 8),
                l.Y36(zn.G_, 8),
              );
            }),
            (g.ɵdir = l.lG2({
              type: g,
              selectors: [['input', 'matDatepicker', '']],
              hostAttrs: [1, 'mat-datepicker-input'],
              hostVars: 6,
              hostBindings: function (r, c) {
                1 & r &&
                  l.NdJ('input', function (k) {
                    return c._onInput(k.target.value);
                  })('change', function () {
                    return c._onChange();
                  })('blur', function () {
                    return c._onBlur();
                  })('keydown', function (k) {
                    return c._onKeydown(k);
                  }),
                  2 & r &&
                    (l.Ikx('disabled', c.disabled),
                    l.uIk('aria-haspopup', c._datepicker ? 'dialog' : null)(
                      'aria-owns',
                      ((null == c._datepicker ? null : c._datepicker.opened) &&
                        c._datepicker.id) ||
                        null,
                    )('min', c.min ? c._dateAdapter.toIso8601(c.min) : null)(
                      'max',
                      c.max ? c._dateAdapter.toIso8601(c.max) : null,
                    )(
                      'data-mat-calendar',
                      c._datepicker ? c._datepicker.id : null,
                    ));
              },
              inputs: {
                matDatepicker: 'matDatepicker',
                min: 'min',
                max: 'max',
                dateFilter: ['matDatepickerFilter', 'dateFilter'],
              },
              exportAs: ['matDatepickerInput'],
              features: [
                l._Bn([y, P, { provide: ci.Jk, useExisting: g }]),
                l.qOj,
              ],
            })),
            g
          );
        })(),
        j = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = l.lG2({
              type: g,
              selectors: [['', 'matDatepickerToggleIcon', '']],
            })),
            g
          );
        })(),
        ce = (() => {
          class g {
            get disabled() {
              return void 0 === this._disabled && this.datepicker
                ? this.datepicker.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              this._disabled = (0, Et.Ig)(r);
            }
            constructor(r, c, _) {
              (this._intl = r),
                (this._changeDetectorRef = c),
                (this._stateChanges = dn.w0.EMPTY);
              const k = Number(_);
              this.tabIndex = k || 0 === k ? k : null;
            }
            ngOnChanges(r) {
              r.datepicker && this._watchStateChanges();
            }
            ngOnDestroy() {
              this._stateChanges.unsubscribe();
            }
            ngAfterContentInit() {
              this._watchStateChanges();
            }
            _open(r) {
              this.datepicker &&
                !this.disabled &&
                (this.datepicker.open(), r.stopPropagation());
            }
            _watchStateChanges() {
              const r = this.datepicker
                  ? this.datepicker.stateChanges
                  : (0, mt.of)(),
                c =
                  this.datepicker && this.datepicker.datepickerInput
                    ? this.datepicker.datepickerInput.stateChanges
                    : (0, mt.of)(),
                _ = this.datepicker
                  ? (0, en.T)(
                      this.datepicker.openedStream,
                      this.datepicker.closedStream,
                    )
                  : (0, mt.of)();
              this._stateChanges.unsubscribe(),
                (this._stateChanges = (0, en.T)(
                  this._intl.changes,
                  r,
                  c,
                  _,
                ).subscribe(() => this._changeDetectorRef.markForCheck()));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(l.Y36(Sn), l.Y36(l.sBO), l.$8M('tabindex'));
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-datepicker-toggle']],
              contentQueries: function (r, c, _) {
                if ((1 & r && l.Suo(_, j, 5), 2 & r)) {
                  let k;
                  l.iGM((k = l.CRH())) && (c._customIcon = k.first);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && l.Gf(T, 5), 2 & r)) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c._button = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-toggle'],
              hostVars: 8,
              hostBindings: function (r, c) {
                1 & r &&
                  l.NdJ('click', function (k) {
                    return c._open(k);
                  }),
                  2 & r &&
                    (l.uIk('tabindex', null)(
                      'data-mat-calendar',
                      c.datepicker ? c.datepicker.id : null,
                    ),
                    l.ekj(
                      'mat-datepicker-toggle-active',
                      c.datepicker && c.datepicker.opened,
                    )(
                      'mat-accent',
                      c.datepicker && 'accent' === c.datepicker.color,
                    )(
                      'mat-warn',
                      c.datepicker && 'warn' === c.datepicker.color,
                    ));
              },
              inputs: {
                datepicker: ['for', 'datepicker'],
                tabIndex: 'tabIndex',
                ariaLabel: ['aria-label', 'ariaLabel'],
                disabled: 'disabled',
                disableRipple: 'disableRipple',
              },
              exportAs: ['matDatepickerToggle'],
              features: [l.TTD],
              ngContentSelectors: Y,
              decls: 4,
              vars: 6,
              consts: [
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  3,
                  'disabled',
                  'disableRipple',
                ],
                ['button', ''],
                [
                  'class',
                  'mat-datepicker-toggle-default-icon',
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  4,
                  'ngIf',
                ],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  1,
                  'mat-datepicker-toggle-default-icon',
                ],
                [
                  'd',
                  'M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.F$t(w),
                  l.TgZ(0, 'button', 0, 1),
                  l.YNc(2, I, 2, 0, 'svg', 2),
                  l.Hsn(3),
                  l.qZA()),
                  2 & r &&
                    (l.Q6J('disabled', c.disabled)(
                      'disableRipple',
                      c.disableRipple,
                    ),
                    l.uIk('aria-haspopup', c.datepicker ? 'dialog' : null)(
                      'aria-label',
                      c.ariaLabel || c._intl.openCalendarLabel,
                    )('tabindex', c.disabled ? -1 : c.tabIndex),
                    l.xp6(2),
                    l.Q6J('ngIf', !c._customIcon));
              },
              dependencies: [s.O5, rt.RK],
              styles: [
                '.mat-datepicker-toggle{pointer-events:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        tr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({
              providers: [Sn, xn],
              imports: [s.ez, rt.ot, nn.U8, Vt.rt, kn.eL, ft.BQ, qn.ZD],
            })),
            g
          );
        })();
      class Ca {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(R = !1, r, c = !0, _) {
          (this._multiple = R),
            (this._emitChanges = c),
            (this.compareWith = _),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new Ft.x()),
            r &&
              r.length &&
              (R
                ? r.forEach(k => this._markSelected(k))
                : this._markSelected(r[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...R) {
          this._verifyValueAssignment(R), R.forEach(c => this._markSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        deselect(...R) {
          this._verifyValueAssignment(R),
            R.forEach(c => this._unmarkSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        setSelection(...R) {
          this._verifyValueAssignment(R);
          const r = this.selected,
            c = new Set(R);
          R.forEach(k => this._markSelected(k)),
            r.filter(k => !c.has(k)).forEach(k => this._unmarkSelected(k));
          const _ = this._hasQueuedChanges();
          return this._emitChangeEvent(), _;
        }
        toggle(R) {
          return this.isSelected(R) ? this.deselect(R) : this.select(R);
        }
        clear(R = !0) {
          this._unmarkAll();
          const r = this._hasQueuedChanges();
          return R && this._emitChangeEvent(), r;
        }
        isSelected(R) {
          return this._selection.has(this._getConcreteValue(R));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(R) {
          this._multiple && this.selected && this._selected.sort(R);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(R) {
          (R = this._getConcreteValue(R)),
            this.isSelected(R) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(R) || this._selection.add(R),
              this._emitChanges && this._selectedToEmit.push(R));
        }
        _unmarkSelected(R) {
          (R = this._getConcreteValue(R)),
            this.isSelected(R) &&
              (this._selection.delete(R),
              this._emitChanges && this._deselectedToEmit.push(R));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach(R => this._unmarkSelected(R));
        }
        _verifyValueAssignment(R) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(R) {
          if (this.compareWith) {
            for (let r of this._selection) if (this.compareWith(R, r)) return r;
            return R;
          }
          return R;
        }
      }
      var xs = C(1884);
      const zs = ['trigger'],
        Es = ['panel'];
      function Xi(g, R) {
        if ((1 & g && (l.TgZ(0, 'span', 10), l._uU(1), l.qZA()), 2 & g)) {
          const r = l.oxw();
          l.xp6(1), l.Oqu(r.placeholder);
        }
      }
      function xa(g, R) {
        if ((1 & g && (l.TgZ(0, 'span', 14), l._uU(1), l.qZA()), 2 & g)) {
          const r = l.oxw(2);
          l.xp6(1), l.Oqu(r.triggerValue);
        }
      }
      function Xo(g, R) {
        1 & g && l.Hsn(0, 0, ['*ngSwitchCase', 'true']);
      }
      function $s(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'span', 11),
            l.YNc(1, xa, 2, 1, 'span', 12),
            l.YNc(2, Xo, 1, 0, 'ng-content', 13),
            l.qZA()),
          2 & g)
        ) {
          const r = l.oxw();
          l.Q6J('ngSwitch', !!r.customTrigger),
            l.xp6(2),
            l.Q6J('ngSwitchCase', !0);
        }
      }
      function Ys(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.O4$(),
            l.kcU(),
            l.TgZ(0, 'div', 15, 16),
            l.NdJ('@transformPanel.done', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._panelDoneAnimatingStream.next(_.toState));
            })('keydown', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k._handleKeydown(_));
            }),
            l.Hsn(2, 1),
            l.qZA();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Gre(
            'mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ',
            r._getPanelTheme(),
            '',
          ),
            l.Q6J('ngClass', r.panelClass)('@transformPanel', 'showing'),
            l.uIk('id', r.id + '-panel')('aria-multiselectable', r.multiple)(
              'aria-label',
              r.ariaLabel || null,
            )('aria-labelledby', r._getPanelAriaLabelledby());
        }
      }
      const ws = [[['mat-select-trigger']], '*'],
        Ja = ['mat-select-trigger', '*'],
        Ms = {
          transformPanelWrap: (0, Gt.X$)('transformPanelWrap', [
            (0, Gt.eR)(
              '* => void',
              (0, Gt.IO)('@transformPanel', [(0, Gt.pV)()], { optional: !0 }),
            ),
          ]),
          transformPanel: (0, Gt.X$)('transformPanel', [
            (0, Gt.SB)(
              'void',
              (0, Gt.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
            ),
            (0, Gt.eR)(
              'void => showing',
              (0, Gt.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Gt.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ),
            ),
            (0, Gt.eR)(
              '* => void',
              (0, Gt.jt)('100ms linear', (0, Gt.oB)({ opacity: 0 })),
            ),
          ]),
        };
      let ir = 0;
      const Ro = new l.OlP('mat-select-scroll-strategy'),
        Ea = new l.OlP('MAT_SELECT_CONFIG'),
        fs = {
          provide: Ro,
          deps: [nn.aV],
          useFactory: function zo(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        vo = new l.OlP('MatSelectTrigger');
      class ps {
        constructor(R, r) {
          (this.source = R), (this.value = r);
        }
      }
      const As = (0, ft.Kr)(
        (0, ft.sb)(
          (0, ft.Id)(
            (0, ft.FD)(
              class {
                constructor(g, R, r, c, _) {
                  (this._elementRef = g),
                    (this._defaultErrorStateMatcher = R),
                    (this._parentForm = r),
                    (this._parentFormGroup = c),
                    (this.ngControl = _),
                    (this.stateChanges = new Ft.x());
                }
              },
            ),
          ),
        ),
      );
      let Jo = (() => {
          class g extends As {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(r) {
              (this._placeholder = r), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(Ln.kI.required) ??
                !1
              );
            }
            set required(r) {
              (this._required = (0, Et.Ig)(r)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(r) {
              this._multiple = (0, Et.Ig)(r);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(r) {
              this._disableOptionCentering = (0, Et.Ig)(r);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(r) {
              (this._compareWith = r),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(r) {
              this._assignValue(r) && this._onChange(r);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(r) {
              this._typeaheadDebounceInterval = (0, Et.su)(r);
            }
            get id() {
              return this._id;
            }
            set id(r) {
              (this._id = r || this._uid), this.stateChanges.next();
            }
            constructor(r, c, _, k, ge, st, an, In, Un, gi, xo, Os, ul, Xr) {
              super(ge, k, an, In, gi),
                (this._viewportRuler = r),
                (this._changeDetectorRef = c),
                (this._ngZone = _),
                (this._dir = st),
                (this._parentFormField = Un),
                (this._liveAnnouncer = ul),
                (this._defaultOptions = Xr),
                (this._panelOpen = !1),
                (this._compareWith = (Eo, ka) => Eo === ka),
                (this._uid = 'mat-select-' + ir++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new Ft.x()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + ir++),
                (this._panelDoneAnimatingStream = new Ft.x()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = (0, Ti.P)(() => {
                  const Eo = this.options;
                  return Eo
                    ? Eo.changes.pipe(
                        (0, be.O)(Eo),
                        (0, Z.w)(() =>
                          (0, en.T)(...Eo.map(ka => ka.onSelectionChange)),
                        ),
                      )
                    : this._ngZone.onStable.pipe(
                        (0, z.q)(1),
                        (0, Z.w)(() => this.optionSelectionChanges),
                      );
                })),
                (this.openedChange = new l.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  (0, He.h)(Eo => Eo),
                  (0, Jt.U)(() => {}),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, He.h)(Eo => !Eo),
                  (0, Jt.U)(() => {}),
                )),
                (this.selectionChange = new l.vpe()),
                (this.valueChange = new l.vpe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != Xr?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    Xr.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = Os),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(xo) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new Ca(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe((0, xs.x)(), (0, Ee.R)(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe((0, Ee.R)(this._destroy))
                  .subscribe(r => {
                    r.added.forEach(c => c.select()),
                      r.removed.forEach(c => c.deselect());
                  }),
                this.options.changes
                  .pipe((0, be.O)(null), (0, Ee.R)(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const r = this._getTriggerAriaLabelledby(),
                c = this.ngControl;
              if (r !== this._triggerAriaLabelledBy) {
                const _ = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = r),
                  r
                    ? _.setAttribute('aria-labelledby', r)
                    : _.removeAttribute('aria-labelledby');
              }
              c &&
                (this._previousControl !== c.control &&
                  (void 0 !== this._previousControl &&
                    null !== c.disabled &&
                    c.disabled !== this.disabled &&
                    (this.disabled = c.disabled),
                  (this._previousControl = c.control)),
                this.updateErrorState());
            }
            ngOnChanges(r) {
              (r.disabled || r.userAriaDescribedBy) && this.stateChanges.next(),
                r.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval,
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? 'rtl' : 'ltr',
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(r) {
              this._assignValue(r);
            }
            registerOnChange(r) {
              this._onChange = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              (this.disabled = r),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const r = this._selectionModel.selected.map(c => c.viewValue);
                return this._isRtl() && r.reverse(), r.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(r) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(r)
                  : this._handleClosedKeydown(r));
            }
            _handleClosedKeydown(r) {
              const c = r.keyCode,
                _ = c === Je.JH || c === Je.LH || c === Je.oh || c === Je.SV,
                k = c === Je.K5 || c === Je.L_,
                ge = this._keyManager;
              if (
                (!ge.isTyping() && k && !(0, Je.Vb)(r)) ||
                ((this.multiple || r.altKey) && _)
              )
                r.preventDefault(), this.open();
              else if (!this.multiple) {
                const st = this.selected;
                ge.onKeydown(r);
                const an = this.selected;
                an &&
                  st !== an &&
                  this._liveAnnouncer.announce(an.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(r) {
              const c = this._keyManager,
                _ = r.keyCode,
                k = _ === Je.JH || _ === Je.LH,
                ge = c.isTyping();
              if (k && r.altKey) r.preventDefault(), this.close();
              else if (
                ge ||
                (_ !== Je.K5 && _ !== Je.L_) ||
                !c.activeItem ||
                (0, Je.Vb)(r)
              )
                if (!ge && this._multiple && _ === Je.A && r.ctrlKey) {
                  r.preventDefault();
                  const st = this.options.some(
                    an => !an.disabled && !an.selected,
                  );
                  this.options.forEach(an => {
                    an.disabled || (st ? an.select() : an.deselect());
                  });
                } else {
                  const st = c.activeItemIndex;
                  c.onKeydown(r),
                    this._multiple &&
                      k &&
                      r.shiftKey &&
                      c.activeItem &&
                      c.activeItemIndex !== st &&
                      c.activeItem._selectViaInteraction();
                }
              else r.preventDefault(), c.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange
                .pipe((0, z.q)(1))
                .subscribe(() => {
                  this._changeDetectorRef.detectChanges(),
                    this._positioningSettled();
                });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(r) {
              if (
                (this.options.forEach(c => c.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && r)
              )
                Array.isArray(r),
                  r.forEach(c => this._selectOptionByValue(c)),
                  this._sortValues();
              else {
                const c = this._selectOptionByValue(r);
                c
                  ? this._keyManager.updateActiveItem(c)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(r) {
              const c = this.options.find(_ => {
                if (this._selectionModel.isSelected(_)) return !1;
                try {
                  return null != _.value && this._compareWith(_.value, r);
                } catch {
                  return !1;
                }
              });
              return c && this._selectionModel.select(c), c;
            }
            _assignValue(r) {
              return (
                !!(r !== this._value || (this._multiple && Array.isArray(r))) &&
                (this.options && this._setSelectionByValue(r),
                (this._value = r),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new Vt.s1(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0,
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const r = (0, en.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe((0, Ee.R)(r)).subscribe(c => {
                this._onSelect(c.source, c.isUserInput),
                  c.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                (0, en.T)(...this.options.map(c => c._stateChanges))
                  .pipe((0, Ee.R)(r))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(r, c) {
              const _ = this._selectionModel.isSelected(r);
              null != r.value || this._multiple
                ? (_ !== r.selected &&
                    (r.selected
                      ? this._selectionModel.select(r)
                      : this._selectionModel.deselect(r)),
                  c && this._keyManager.setActiveItem(r),
                  this.multiple && (this._sortValues(), c && this.focus()))
                : (r.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(r.value)),
                _ !== this._selectionModel.isSelected(r) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const r = this.options.toArray();
                this._selectionModel.sort((c, _) =>
                  this.sortComparator
                    ? this.sortComparator(c, _, r)
                    : r.indexOf(c) - r.indexOf(_),
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(r) {
              let c = null;
              (c = this.multiple
                ? this.selected.map(_ => _.value)
                : this.selected
                ? this.selected.value
                : r),
                (this._value = c),
                this.valueChange.emit(c),
                this._onChange(c),
                this.selectionChange.emit(this._getChangeEvent(c)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0],
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(r) {
              this._elementRef.nativeElement.focus(r);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (r ? r + ' ' : '') + this.ariaLabelledby
                : r;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              let c = (r ? r + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (c += ' ' + this.ariaLabelledby), c;
            }
            _panelDoneAnimating(r) {
              this.openedChange.emit(r);
            }
            setDescribedByIds(r) {
              r.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    r.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(qn.rL),
                l.Y36(l.sBO),
                l.Y36(l.R0b),
                l.Y36(ft.rD),
                l.Y36(l.SBq),
                l.Y36(ni.Is, 8),
                l.Y36(Ln.F, 8),
                l.Y36(Ln.sg, 8),
                l.Y36(zn.G_, 8),
                l.Y36(Ln.a5, 10),
                l.$8M('tabindex'),
                l.Y36(Ro),
                l.Y36(Vt.Kd),
                l.Y36(Ea, 8),
              );
            }),
            (g.ɵdir = l.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (l.Gf(zs, 5), l.Gf(Es, 5), l.Gf(nn.pI, 5)), 2 & r)
                ) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c.trigger = _.first),
                    l.iGM((_ = l.CRH())) && (c.panel = _.first),
                    l.iGM((_ = l.CRH())) && (c._overlayDir = _.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                panelClass: 'panelClass',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                sortComparator: 'sortComparator',
                id: 'id',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [l.qOj, l.TTD],
            })),
            g
          );
        })(),
        Fo = (() => {
          class g extends Jo {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'top',
                  },
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-mdc-select-panel-above',
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe((0, Ee.R)(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(r) {
              const c = this.options.toArray()[r];
              if (c) {
                const _ = this.panel.nativeElement,
                  k = (0, ft.CB)(r, this.options, this.optionGroups),
                  ge = c._getHostElement();
                _.scrollTop =
                  0 === r && 1 === k
                    ? 0
                    : (0, ft.jH)(
                        ge.offsetTop,
                        ge.offsetHeight,
                        _.scrollTop,
                        _.offsetHeight,
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(r) {
              return new ps(this, r);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof nn.xu
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(r) {
              (this._hideSingleSelectionIndicator = (0, Et.Ig)(r)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const r of this.options)
                  r._changeDetectorRef.markForCheck();
            }
          }
          return (
            (g.ɵfac = (function () {
              let R;
              return function (c) {
                return (R || (R = l.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-select']],
              contentQueries: function (r, c, _) {
                if (
                  (1 & r &&
                    (l.Suo(_, vo, 5), l.Suo(_, ft.ey, 5), l.Suo(_, ft.K7, 5)),
                  2 & r)
                ) {
                  let k;
                  l.iGM((k = l.CRH())) && (c.customTrigger = k.first),
                    l.iGM((k = l.CRH())) && (c.options = k),
                    l.iGM((k = l.CRH())) && (c.optionGroups = k);
                }
              },
              hostAttrs: [
                'role',
                'combobox',
                'aria-autocomplete',
                'none',
                'aria-haspopup',
                'listbox',
                1,
                'mat-mdc-select',
              ],
              hostVars: 19,
              hostBindings: function (r, c) {
                1 & r &&
                  l.NdJ('keydown', function (k) {
                    return c._handleKeydown(k);
                  })('focus', function () {
                    return c._onFocus();
                  })('blur', function () {
                    return c._onBlur();
                  }),
                  2 & r &&
                    (l.uIk('id', c.id)('tabindex', c.tabIndex)(
                      'aria-controls',
                      c.panelOpen ? c.id + '-panel' : null,
                    )('aria-expanded', c.panelOpen)(
                      'aria-label',
                      c.ariaLabel || null,
                    )('aria-required', c.required.toString())(
                      'aria-disabled',
                      c.disabled.toString(),
                    )('aria-invalid', c.errorState)(
                      'aria-activedescendant',
                      c._getAriaActiveDescendant(),
                    ),
                    l.ekj('mat-mdc-select-disabled', c.disabled)(
                      'mat-mdc-select-invalid',
                      c.errorState,
                    )('mat-mdc-select-required', c.required)(
                      'mat-mdc-select-empty',
                      c.empty,
                    )('mat-mdc-select-multiple', c.multiple));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
                hideSingleSelectionIndicator: 'hideSingleSelectionIndicator',
              },
              exportAs: ['matSelect'],
              features: [
                l._Bn([
                  { provide: zn.Eo, useExisting: g },
                  { provide: ft.HF, useExisting: g },
                ]),
                l.qOj,
              ],
              ngContentSelectors: Ja,
              decls: 11,
              vars: 11,
              consts: [
                [
                  'cdk-overlay-origin',
                  '',
                  1,
                  'mat-mdc-select-trigger',
                  3,
                  'click',
                ],
                ['fallbackOverlayOrigin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-mdc-select-value', 3, 'ngSwitch'],
                [
                  'class',
                  'mat-mdc-select-placeholder mat-mdc-select-min-line',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'class',
                  'mat-mdc-select-value-text',
                  3,
                  'ngSwitch',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'mat-mdc-select-arrow-wrapper'],
                [1, 'mat-mdc-select-arrow'],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'focusable',
                  'false',
                ],
                ['d', 'M7 10l5 5 5-5z'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayWidth',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-mdc-select-placeholder', 'mat-mdc-select-min-line'],
                [1, 'mat-mdc-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-mdc-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-mdc-select-min-line'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (l.F$t(ws),
                    l.TgZ(0, 'div', 0, 1),
                    l.NdJ('click', function () {
                      return c.toggle();
                    }),
                    l.TgZ(3, 'div', 2),
                    l.YNc(4, Xi, 2, 1, 'span', 3),
                    l.YNc(5, $s, 3, 2, 'span', 4),
                    l.qZA(),
                    l.TgZ(6, 'div', 5)(7, 'div', 6),
                    l.O4$(),
                    l.TgZ(8, 'svg', 7),
                    l._UZ(9, 'path', 8),
                    l.qZA()()()(),
                    l.YNc(10, Ys, 3, 9, 'ng-template', 9),
                    l.NdJ('backdropClick', function () {
                      return c.close();
                    })('attach', function () {
                      return c._onAttached();
                    })('detach', function () {
                      return c.close();
                    })),
                  2 & r)
                ) {
                  const _ = l.MAs(1);
                  l.uIk('aria-owns', c.panelOpen ? c.id + '-panel' : null),
                    l.xp6(3),
                    l.Q6J('ngSwitch', c.empty),
                    l.uIk('id', c._valueId),
                    l.xp6(1),
                    l.Q6J('ngSwitchCase', !0),
                    l.xp6(1),
                    l.Q6J('ngSwitchCase', !1),
                    l.xp6(5),
                    l.Q6J(
                      'cdkConnectedOverlayPanelClass',
                      c._overlayPanelClass,
                    )('cdkConnectedOverlayScrollStrategy', c._scrollStrategy)(
                      'cdkConnectedOverlayOrigin',
                      c._preferredOverlayOrigin || _,
                    )('cdkConnectedOverlayOpen', c.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      c._positions,
                    )('cdkConnectedOverlayWidth', c._overlayWidth);
                }
              },
              dependencies: [s.mk, s.RF, s.n9, s.ED, nn.pI, nn.xu],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [Ms.transformPanel] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        Ss = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({
              providers: [fs],
              imports: [s.ez, nn.U8, ft.Ng, ft.BQ, qn.ZD, zn.lN, ft.Ng, ft.BQ],
            })),
            g
          );
        })();
      const es = ['input'],
        $o = ['label'],
        el = ['*'],
        wa = new l.OlP('mat-checkbox-default-options', {
          providedIn: 'root',
          factory: ti,
        });
      function ti() {
        return { color: 'accent', clickAction: 'check-indeterminate' };
      }
      const tl = {
        provide: Ln.JU,
        useExisting: (0, l.Gpc)(() => Is),
        multi: !0,
      };
      class Jl {}
      let ec = 0;
      const nl = ti(),
        gs = (0, ft.sb)(
          (0, ft.pj)(
            (0, ft.Kr)(
              (0, ft.Id)(
                class {
                  constructor(g) {
                    this._elementRef = g;
                  }
                },
              ),
            ),
          ),
        );
      let tc = (() => {
          class g extends gs {
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            get required() {
              return this._required;
            }
            set required(r) {
              this._required = (0, Et.Ig)(r);
            }
            constructor(r, c, _, k, ge, st, an) {
              super(c),
                (this._changeDetectorRef = _),
                (this._ngZone = k),
                (this._animationMode = st),
                (this._options = an),
                (this.ariaLabel = ''),
                (this.ariaLabelledby = null),
                (this.labelPosition = 'after'),
                (this.name = null),
                (this.change = new l.vpe()),
                (this.indeterminateChange = new l.vpe()),
                (this._onTouched = () => {}),
                (this._currentAnimationClass = ''),
                (this._currentCheckState = 0),
                (this._controlValueAccessorChangeFn = () => {}),
                (this._checked = !1),
                (this._disabled = !1),
                (this._indeterminate = !1),
                (this._options = this._options || nl),
                (this.color = this.defaultColor =
                  this._options.color || nl.color),
                (this.tabIndex = parseInt(ge) || 0),
                (this.id = this._uniqueId = `${r}${++ec}`);
            }
            ngAfterViewInit() {
              this._syncIndeterminate(this._indeterminate);
            }
            get checked() {
              return this._checked;
            }
            set checked(r) {
              const c = (0, Et.Ig)(r);
              c != this.checked &&
                ((this._checked = c), this._changeDetectorRef.markForCheck());
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(r) {
              const c = (0, Et.Ig)(r);
              c !== this.disabled &&
                ((this._disabled = c), this._changeDetectorRef.markForCheck());
            }
            get indeterminate() {
              return this._indeterminate;
            }
            set indeterminate(r) {
              const c = r != this._indeterminate;
              (this._indeterminate = (0, Et.Ig)(r)),
                c &&
                  (this._transitionCheckState(
                    this._indeterminate ? 3 : this.checked ? 1 : 2,
                  ),
                  this.indeterminateChange.emit(this._indeterminate)),
                this._syncIndeterminate(this._indeterminate);
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
            writeValue(r) {
              this.checked = !!r;
            }
            registerOnChange(r) {
              this._controlValueAccessorChangeFn = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              this.disabled = r;
            }
            _transitionCheckState(r) {
              let c = this._currentCheckState,
                _ = this._getAnimationTargetElement();
              if (
                c !== r &&
                _ &&
                (this._currentAnimationClass &&
                  _.classList.remove(this._currentAnimationClass),
                (this._currentAnimationClass =
                  this._getAnimationClassForCheckStateTransition(c, r)),
                (this._currentCheckState = r),
                this._currentAnimationClass.length > 0)
              ) {
                _.classList.add(this._currentAnimationClass);
                const k = this._currentAnimationClass;
                this._ngZone.runOutsideAngular(() => {
                  setTimeout(() => {
                    _.classList.remove(k);
                  }, 1e3);
                });
              }
            }
            _emitChangeEvent() {
              this._controlValueAccessorChangeFn(this.checked),
                this.change.emit(this._createChangeEvent(this.checked)),
                this._inputElement &&
                  (this._inputElement.nativeElement.checked = this.checked);
            }
            toggle() {
              (this.checked = !this.checked),
                this._controlValueAccessorChangeFn(this.checked);
            }
            _handleInputClick() {
              const r = this._options?.clickAction;
              this.disabled || 'noop' === r
                ? !this.disabled &&
                  'noop' === r &&
                  ((this._inputElement.nativeElement.checked = this.checked),
                  (this._inputElement.nativeElement.indeterminate =
                    this.indeterminate))
                : (this.indeterminate &&
                    'check' !== r &&
                    Promise.resolve().then(() => {
                      (this._indeterminate = !1),
                        this.indeterminateChange.emit(this._indeterminate);
                    }),
                  (this._checked = !this._checked),
                  this._transitionCheckState(this._checked ? 1 : 2),
                  this._emitChangeEvent());
            }
            _onInteractionEvent(r) {
              r.stopPropagation();
            }
            _onBlur() {
              Promise.resolve().then(() => {
                this._onTouched(), this._changeDetectorRef.markForCheck();
              });
            }
            _getAnimationClassForCheckStateTransition(r, c) {
              if ('NoopAnimations' === this._animationMode) return '';
              switch (r) {
                case 0:
                  if (1 === c) return this._animationClasses.uncheckedToChecked;
                  if (3 == c)
                    return this._checked
                      ? this._animationClasses.checkedToIndeterminate
                      : this._animationClasses.uncheckedToIndeterminate;
                  break;
                case 2:
                  return 1 === c
                    ? this._animationClasses.uncheckedToChecked
                    : this._animationClasses.uncheckedToIndeterminate;
                case 1:
                  return 2 === c
                    ? this._animationClasses.checkedToUnchecked
                    : this._animationClasses.checkedToIndeterminate;
                case 3:
                  return 1 === c
                    ? this._animationClasses.indeterminateToChecked
                    : this._animationClasses.indeterminateToUnchecked;
              }
              return '';
            }
            _syncIndeterminate(r) {
              const c = this._inputElement;
              c && (c.nativeElement.indeterminate = r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              l.$Z();
            }),
            (g.ɵdir = l.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (l.Gf(es, 5), l.Gf($o, 5), l.Gf(ft.wG, 5)), 2 & r)
                ) {
                  let _;
                  l.iGM((_ = l.CRH())) && (c._inputElement = _.first),
                    l.iGM((_ = l.CRH())) && (c._labelElement = _.first),
                    l.iGM((_ = l.CRH())) && (c.ripple = _.first);
                }
              },
              inputs: {
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                id: 'id',
                required: 'required',
                labelPosition: 'labelPosition',
                name: 'name',
                value: 'value',
                checked: 'checked',
                disabled: 'disabled',
                indeterminate: 'indeterminate',
              },
              outputs: {
                change: 'change',
                indeterminateChange: 'indeterminateChange',
              },
              features: [l.qOj],
            })),
            g
          );
        })(),
        Is = (() => {
          class g extends tc {
            constructor(r, c, _, k, ge, st) {
              super('mat-mdc-checkbox-', r, c, _, k, ge, st),
                (this._animationClasses = {
                  uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',
                  uncheckedToIndeterminate:
                    'mdc-checkbox--anim-unchecked-indeterminate',
                  checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',
                  checkedToIndeterminate:
                    'mdc-checkbox--anim-checked-indeterminate',
                  indeterminateToChecked:
                    'mdc-checkbox--anim-indeterminate-checked',
                  indeterminateToUnchecked:
                    'mdc-checkbox--anim-indeterminate-unchecked',
                });
            }
            focus() {
              this._inputElement.nativeElement.focus();
            }
            _createChangeEvent(r) {
              const c = new Jl();
              return (c.source = this), (c.checked = r), c;
            }
            _getAnimationTargetElement() {
              return this._inputElement?.nativeElement;
            }
            _onInputClick() {
              super._handleInputClick();
            }
            _onTouchTargetClick() {
              super._handleInputClick(),
                this.disabled || this._inputElement.nativeElement.focus();
            }
            _preventBubblingFromLabel(r) {
              r.target &&
                this._labelElement.nativeElement.contains(r.target) &&
                r.stopPropagation();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                l.Y36(l.SBq),
                l.Y36(l.sBO),
                l.Y36(l.R0b),
                l.$8M('tabindex'),
                l.Y36(l.QbO, 8),
                l.Y36(wa, 8),
              );
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['mat-checkbox']],
              hostAttrs: [1, 'mat-mdc-checkbox'],
              hostVars: 12,
              hostBindings: function (r, c) {
                2 & r &&
                  (l.Ikx('id', c.id),
                  l.uIk('tabindex', null)('aria-label', null)(
                    'aria-labelledby',
                    null,
                  ),
                  l.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === c._animationMode,
                  )('mdc-checkbox--disabled', c.disabled)(
                    'mat-mdc-checkbox-disabled',
                    c.disabled,
                  )('mat-mdc-checkbox-checked', c.checked));
              },
              inputs: {
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
              },
              exportAs: ['matCheckbox'],
              features: [l._Bn([tl]), l.qOj],
              ngContentSelectors: el,
              decls: 15,
              vars: 19,
              consts: [
                [1, 'mdc-form-field', 3, 'click'],
                [1, 'mdc-checkbox'],
                ['checkbox', ''],
                [1, 'mat-mdc-checkbox-touch-target', 3, 'click'],
                [
                  'type',
                  'checkbox',
                  1,
                  'mdc-checkbox__native-control',
                  3,
                  'checked',
                  'indeterminate',
                  'disabled',
                  'id',
                  'required',
                  'tabIndex',
                  'blur',
                  'click',
                  'change',
                ],
                ['input', ''],
                [1, 'mdc-checkbox__ripple'],
                [1, 'mdc-checkbox__background'],
                [
                  'focusable',
                  'false',
                  'viewBox',
                  '0 0 24 24',
                  'aria-hidden',
                  'true',
                  1,
                  'mdc-checkbox__checkmark',
                ],
                [
                  'fill',
                  'none',
                  'd',
                  'M1.73,12.91 8.1,19.28 22.79,4.59',
                  1,
                  'mdc-checkbox__checkmark-path',
                ],
                [1, 'mdc-checkbox__mixedmark'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-checkbox-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                ],
                [3, 'for'],
                ['label', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (l.F$t(),
                    l.TgZ(0, 'div', 0),
                    l.NdJ('click', function (k) {
                      return c._preventBubblingFromLabel(k);
                    }),
                    l.TgZ(1, 'div', 1, 2)(3, 'div', 3),
                    l.NdJ('click', function () {
                      return c._onTouchTargetClick();
                    }),
                    l.qZA(),
                    l.TgZ(4, 'input', 4, 5),
                    l.NdJ('blur', function () {
                      return c._onBlur();
                    })('click', function () {
                      return c._onInputClick();
                    })('change', function (k) {
                      return c._onInteractionEvent(k);
                    }),
                    l.qZA(),
                    l._UZ(6, 'div', 6),
                    l.TgZ(7, 'div', 7),
                    l.O4$(),
                    l.TgZ(8, 'svg', 8),
                    l._UZ(9, 'path', 9),
                    l.qZA(),
                    l.kcU(),
                    l._UZ(10, 'div', 10),
                    l.qZA(),
                    l._UZ(11, 'div', 11),
                    l.qZA(),
                    l.TgZ(12, 'label', 12, 13),
                    l.Hsn(14),
                    l.qZA()()),
                  2 & r)
                ) {
                  const _ = l.MAs(2);
                  l.ekj(
                    'mdc-form-field--align-end',
                    'before' == c.labelPosition,
                  ),
                    l.xp6(4),
                    l.ekj('mdc-checkbox--selected', c.checked),
                    l.Q6J('checked', c.checked)(
                      'indeterminate',
                      c.indeterminate,
                    )('disabled', c.disabled)('id', c.inputId)(
                      'required',
                      c.required,
                    )('tabIndex', c.tabIndex),
                    l.uIk('aria-label', c.ariaLabel || null)(
                      'aria-labelledby',
                      c.ariaLabelledby,
                    )('aria-describedby', c.ariaDescribedby)('name', c.name)(
                      'value',
                      c.value,
                    ),
                    l.xp6(7),
                    l.Q6J('matRippleTrigger', _)(
                      'matRippleDisabled',
                      c.disableRipple || c.disabled,
                    )('matRippleCentered', !0),
                    l.xp6(1),
                    l.Q6J('for', c.inputId);
                }
              },
              dependencies: [ft.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:not([disabled])~.mdc-checkbox__ripple{opacity:.04;transform:scale(1);transition:opacity 80ms 0 cubic-bezier(0, 0, 0.2, 1),transform 80ms 0 cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:not([disabled]):focus~.mdc-checkbox__ripple{opacity:.16}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__native-control:focus:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, black)}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Ma = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({})),
            g
          );
        })(),
        Fi = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = l.oAB({ type: g })),
            (g.ɵinj = l.cJS({ imports: [ft.BQ, ft.si, Ma, ft.BQ, Ma] })),
            g
          );
        })(),
        ks = (() => {
          class g {
            transform(r) {
              switch (r) {
                case Ci.week:
                  return 'Every week';
                case Ci.month:
                  return 'Every month';
                case Ci.year:
                  return 'Every year';
                default:
                  return 'Every week';
              }
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = l.Yjl({ name: 'periodName', type: g, pure: !0 })),
            g
          );
        })();
      function ns(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'mat-form-field', 17)(1, 'mat-label'),
            l._uU(2, 'Choose a date'),
            l.qZA(),
            l._UZ(3, 'input', 18)(4, 'mat-datepicker-toggle', 19)(
              5,
              'mat-datepicker',
              null,
              20,
            ),
            l.qZA()),
          2 & g)
        ) {
          const r = l.MAs(6),
            c = l.oxw(2);
          l.xp6(3),
            l.Q6J('formControl', c.noteForm.controls.date)('matDatepicker', r),
            l.xp6(1),
            l.Q6J('for', r);
        }
      }
      const Aa = function (g) {
        return ['select-text', g];
      };
      function Ir(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'mat-option', 21)(1, 'div', 22), l._uU(2), l.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          l.Q6J('value', r),
            l.xp6(1),
            l.Q6J('ngClass', l.VKq(3, Aa, r)),
            l.xp6(1),
            l.Oqu(r);
        }
      }
      function bo(g, R) {
        if (
          (1 & g &&
            (l.TgZ(0, 'mat-option', 21)(1, 'div'),
            l._uU(2),
            l.ALo(3, 'periodName'),
            l.qZA()()),
          2 & g)
        ) {
          const r = R.$implicit;
          l.Q6J('value', r), l.xp6(2), l.Oqu(l.lcZ(3, 2, r));
        }
      }
      function Ks(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.ynx(0),
            l.TgZ(1, 'div', 7),
            l.YNc(2, ns, 7, 3, 'mat-form-field', 8),
            l.TgZ(3, 'mat-form-field', 9)(4, 'mat-label'),
            l._uU(5, 'Style'),
            l.qZA(),
            l.TgZ(6, 'mat-select', 10),
            l.YNc(7, Ir, 3, 5, 'mat-option', 11),
            l.qZA()()(),
            l.TgZ(8, 'div', 12)(9, 'mat-checkbox', 13),
            l.NdJ('change', function () {
              l.CHM(r);
              const _ = l.oxw();
              return l.KtG(_.triggerTime());
            }),
            l._uU(10, ' Time '),
            l.qZA(),
            l.TgZ(11, 'mat-form-field'),
            l._UZ(12, 'input', 14),
            l.qZA()(),
            l.TgZ(13, 'div', 12)(14, 'mat-checkbox', 13),
            l.NdJ('change', function () {
              l.CHM(r);
              const _ = l.oxw();
              return l.KtG(_.triggerPeriod());
            }),
            l._uU(15, ' Repeat '),
            l.qZA(),
            l.TgZ(16, 'mat-form-field', 15)(17, 'mat-label'),
            l._uU(18, 'Period'),
            l.qZA(),
            l.TgZ(19, 'mat-select', 16),
            l.YNc(20, bo, 4, 4, 'mat-option', 11),
            l.qZA()()(),
            l.BQk();
        }
        if (2 & g) {
          const r = l.oxw();
          l.xp6(2),
            l.Q6J('ngIf', r.withDate),
            l.xp6(4),
            l.Q6J('formControl', r.noteForm.controls.color),
            l.xp6(1),
            l.Q6J('ngForOf', r.styles),
            l.xp6(2),
            l.Q6J('formControl', r.noteForm.controls.hasTime),
            l.xp6(3),
            l.Q6J('formControl', r.noteForm.controls.time),
            l.xp6(2),
            l.Q6J('formControl', r.noteForm.controls.repeatable),
            l.xp6(5),
            l.Q6J('formControl', r.noteForm.controls.period),
            l.xp6(1),
            l.Q6J('ngForOf', r.periods);
        }
      }
      const is = 'default',
        f = [is, 'red', 'green', 'blue', 'yellow'],
        m = Ci.week;
      let d = (() => {
        class g {
          constructor(r, c, _, k) {
            (this.fb = r),
              (this.dialogRef = c),
              (this.store = _),
              (this.data = k),
              (this.styles = f),
              (this.periods = Object.values(Ci)),
              (this.noteForm = this.fb.group({
                title: ['', [Ln.kI.required]],
                date: [new Date(), [Ln.kI.required]],
                color: [is],
                hasTime: [!1],
                time: ['00:00'],
                repeatable: [!1],
                period: [m],
              })),
              this.noteForm.setValue({
                title: k.note?.title || '',
                date: k.note?.date
                  ? new Date(k.note.date)
                  : k.date || new Date(),
                color: k.note?.color || is,
                time:
                  k.note?.hasTime && k.note?.date
                    ? $e(new Date(k.note.date))
                    : '00:00',
                hasTime: !!k.note?.hasTime,
                repeatable: !!k.note?.repeatable,
                period: k.note?.repeatable && k.note.period ? k.note.period : m,
              }),
              (this.note = k.note),
              (this.date = k.date),
              (this.withDate = k.withDate),
              k.note?.hasTime
                ? this.noteForm.controls.time.enable()
                : this.noteForm.controls.time.disable(),
              k.note?.repeatable
                ? this.noteForm.controls.period.enable()
                : this.noteForm.controls.period.disable();
          }
          ngOnInit() {
            this.successSubscription = this.store
              .select(ct)
              .pipe((0, He.h)(Boolean))
              .subscribe(() => {
                if (
                  (this.dialogRef.close(),
                  this.store.dispatch(Ve()),
                  this.withDate && this.date)
                ) {
                  const r = Le(this.date),
                    c = _t(this.date);
                  this.store.dispatch(oe({ startDate: nt(r), endDate: ut(c) }));
                } else this.store.dispatch(te());
              });
          }
          ngOnDestroy() {
            this.successSubscription?.unsubscribe();
          }
          save() {
            const {
              title: r,
              date: c,
              color: _,
              hasTime: k,
              time: ge,
              repeatable: st,
              period: an,
            } = this.noteForm.value;
            if (!r || !c) return;
            const In = this.note
              ? {
                  ...this.note,
                  title: r,
                  date: this.withDate ? At(c, k ? ge : void 0) : void 0,
                  color: _,
                  hasTime: k,
                  repeatable: st,
                  period: st ? an : void 0,
                }
              : {
                  title: r,
                  date: this.withDate ? At(c, k ? ge : void 0) : void 0,
                  color: _,
                  completed: !1,
                  hasTime: k,
                  repeatable: st,
                  period: st ? an : void 0,
                };
            this.store.dispatch(this.note?.id ? ae(In) : he(In));
          }
          delete() {
            this.note && this.store.dispatch(pe(this.note));
          }
          triggerTime() {
            this.noteForm.controls.hasTime.value
              ? this.noteForm.controls.time.enable()
              : this.noteForm.controls.time.disable();
          }
          triggerPeriod() {
            this.noteForm.controls.repeatable.value
              ? this.noteForm.controls.period.enable()
              : this.noteForm.controls.period.disable();
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              l.Y36(Ln.qu),
              l.Y36(zr),
              l.Y36(L.yh),
              l.Y36(io),
            );
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['app-note-dialog']],
            decls: 10,
            vars: 5,
            consts: [
              [
                'mat-dialog-content',
                '',
                'data-testid',
                'note-dialog',
                1,
                'dialog',
              ],
              ['novalidate', '', 1, 'form', 3, 'formGroup', 'keydown.enter'],
              [
                'matInput',
                '',
                'data-testid',
                'title',
                'autofocus',
                '',
                3,
                'formControl',
              ],
              [4, 'ngIf'],
              [1, 'dialog-footer'],
              [
                'color',
                'secondary',
                'mat-raised-button',
                '',
                'data-testid',
                'delete',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [
                'color',
                'primary',
                'mat-raised-button',
                '',
                'data-testid',
                'save',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [1, 'dialog-row'],
              [
                'class',
                'dialog-calendar full',
                'appearance',
                'fill',
                4,
                'ngIf',
              ],
              [1, 'dialog-select', 'full'],
              ['required', '', 3, 'formControl'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              [1, 'dialog-checkbox-container'],
              [1, 'dialog-checkbox', 3, 'formControl', 'change'],
              [
                'matInput',
                '',
                'data-testid',
                'time',
                'type',
                'time',
                3,
                'formControl',
              ],
              [1, 'dialog-select'],
              [3, 'formControl'],
              ['appearance', 'fill', 1, 'dialog-calendar', 'full'],
              [
                'matInput',
                '',
                'data-testid',
                'date',
                3,
                'formControl',
                'matDatepicker',
              ],
              ['matIconSuffix', '', 3, 'for'],
              ['picker', ''],
              [3, 'value'],
              [3, 'ngClass'],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'div', 0)(1, 'form', 1),
                l.NdJ('keydown.enter', function () {
                  return !c.noteForm.invalid && c.save();
                }),
                l.TgZ(2, 'mat-form-field'),
                l._UZ(3, 'input', 2),
                l.qZA(),
                l.YNc(4, Ks, 21, 8, 'ng-container', 3),
                l.qZA()(),
                l.TgZ(5, 'div', 4)(6, 'button', 5),
                l.NdJ('click', function () {
                  return c.delete();
                }),
                l._uU(7, ' Delete '),
                l.qZA(),
                l.TgZ(8, 'button', 6),
                l.NdJ('click', function () {
                  return c.save();
                }),
                l._uU(9, ' Save '),
                l.qZA()()),
                2 & r &&
                  (l.xp6(1),
                  l.Q6J('formGroup', c.noteForm),
                  l.xp6(2),
                  l.Q6J('formControl', c.noteForm.controls.title),
                  l.xp6(1),
                  l.Q6J('ngIf', !(null != c.note && c.note.completed)),
                  l.xp6(2),
                  l.Q6J('disabled', !(null != c.note && c.note.id)),
                  l.xp6(2),
                  l.Q6J('disabled', c.noteForm.invalid));
            },
            dependencies: [
              s.mk,
              s.sg,
              s.O5,
              rt.lW,
              zn.KE,
              zn.hX,
              zn.R9,
              Ln._Y,
              Ln.Fj,
              Ln.JJ,
              Ln.JL,
              Ln.Q7,
              Ln.oH,
              Ln.sg,
              ci.Nt,
              Ui,
              A,
              ce,
              Lr,
              Fo,
              ft.ey,
              Is,
              ks,
            ],
            styles: [
              '.dialog-row[_ngcontent-%COMP%], .dialog-checkbox-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;align-items:center}.dialog-checkbox-container[_ngcontent-%COMP%]{flex-direction:row}.dialog-color[_ngcontent-%COMP%]{margin-left:20px;display:flex;cursor:pointer}.dialog-color[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer}.dialog-calendar[_ngcontent-%COMP%]{display:flex}.dialog-select[_ngcontent-%COMP%]{display:flex;margin-left:12px}.dialog-button[_ngcontent-%COMP%]{width:100px}.dialog-button[_ngcontent-%COMP%]:not(:first-child){margin-left:12px}.dialog-footer[_ngcontent-%COMP%]{padding:0 20px 20px;display:flex;justify-content:space-between}.select-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:70px;text-align:center}.dialog-checkbox[_ngcontent-%COMP%]{margin-bottom:22px}@media only screen and (min-width: 1020px){.dialog[_ngcontent-%COMP%]{width:400px}.dialog-row[_ngcontent-%COMP%]{flex-direction:row}.dialog-select[_ngcontent-%COMP%]{width:200px}.dialog-calendar[_ngcontent-%COMP%]{margin-right:20px}}',
            ],
          })),
          g
        );
      })();
      const D = (g, R) => {
        const r = g.map(c => ({
          id: c.id,
          text: c.title,
          color: c.color,
          completed: c.completed,
          time: c.hasTime && c.date ? $e(new Date(c.date)) : '',
        }));
        if (g.length < R) {
          const c = R - g.length;
          for (let _ = 0; _ < c; _++) r.push({});
        }
        return r;
      };
      function O(g, R) {
        if ((1 & g && (l.TgZ(0, 'span', 4), l._uU(1), l.qZA()), 2 & g)) {
          const r = l.oxw();
          l.xp6(1), l.hij(' ', r.row.time, ' ');
        }
      }
      function U(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.TgZ(0, 'mat-checkbox', 5),
            l.NdJ('ngModelChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG((k.row.completed = _));
            })('change', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k.onChange(_));
            }),
            l.qZA();
        }
        if (2 & g) {
          const r = l.oxw();
          l.Q6J('ngModel', r.row.completed);
        }
      }
      const K = function (g) {
          return { row__interactive: g };
        },
        Be = function (g, R) {
          return ['row-text', g, R];
        };
      let wt = (() => {
          class g {
            constructor() {
              (this.rowClick = new l.vpe()), (this.rowChange = new l.vpe());
            }
            get isInteractive() {
              return !!this.row.text || this.interactive;
            }
            onClick(r) {
              'checkbox' !== r.target?.getAttribute('type') &&
                (r.stopPropagation(),
                r.preventDefault(),
                this.rowClick.emit(this.row));
            }
            onChange({ checked: r }) {
              this.rowChange.emit({ ...this.row, completed: r });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['app-row']],
              inputs: { row: 'row', interactive: 'interactive' },
              outputs: { rowClick: 'rowClick', rowChange: 'rowChange' },
              decls: 5,
              vars: 10,
              consts: [
                [1, 'row', 3, 'ngClass', 'click'],
                [3, 'ngClass'],
                ['class', 'time', 4, 'ngIf'],
                [
                  'class',
                  'row-checkbox',
                  3,
                  'ngModel',
                  'ngModelChange',
                  'change',
                  4,
                  'ngIf',
                ],
                [1, 'time'],
                [1, 'row-checkbox', 3, 'ngModel', 'ngModelChange', 'change'],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.TgZ(0, 'div', 0),
                  l.NdJ('click', function (k) {
                    return c.isInteractive ? c.onClick(k) : void 0;
                  }),
                  l.TgZ(1, 'span', 1),
                  l.YNc(2, O, 2, 1, 'span', 2),
                  l._uU(3),
                  l.qZA(),
                  l.YNc(4, U, 1, 1, 'mat-checkbox', 3),
                  l.qZA()),
                  2 & r &&
                    (l.Q6J('ngClass', l.VKq(5, K, c.isInteractive)),
                    l.xp6(1),
                    l.Q6J(
                      'ngClass',
                      l.WLB(
                        7,
                        Be,
                        c.row.color || '',
                        c.row.completed ? 'row-text__completed' : '',
                      ),
                    ),
                    l.xp6(1),
                    l.Q6J('ngIf', c.row.time),
                    l.xp6(1),
                    l.hij(' ', c.row.text, ' '),
                    l.xp6(1),
                    l.Q6J('ngIf', !!c.row.text));
              },
              dependencies: [s.mk, s.O5, Ln.JJ, Is, Ln.On],
              styles: [
                '.row[_ngcontent-%COMP%]{height:23px;padding:8px 4px;font-size:13px;border-bottom:solid 1px #ddd;display:flex;align-items:center;justify-content:space-between}.row__interactive[_ngcontent-%COMP%]{cursor:pointer}.row__interactive[_ngcontent-%COMP%]:hover{border-bottom:solid 1px #3f51b5}.row-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.row-text__completed[_ngcontent-%COMP%]{text-decoration:line-through;opacity:.3}@media only screen and (min-width: 1020px){.row-checkbox[_ngcontent-%COMP%]{display:none}.row[_ngcontent-%COMP%]:hover   .row-checkbox[_ngcontent-%COMP%]{display:block}}',
              ],
              changeDetection: 0,
            })),
            g
          );
        })(),
        Qt = (() => {
          class g {
            transform(r) {
              return xt(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = l.Yjl({ name: 'dateWithMonth', type: g, pure: !0 })),
            g
          );
        })(),
        rn = (() => {
          class g {
            transform(r) {
              return (g => X[g.getDay()])(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = l.Yjl({ name: 'dayOfWeek', type: g, pure: !0 })),
            g
          );
        })();
      function Yn(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.ynx(0),
            l.TgZ(1, 'app-row', 5),
            l.NdJ('rowClick', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k.openDialog(_.id));
            })('rowChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k.updateCompleted(_));
            }),
            l.ALo(2, 'dateWithMonth'),
            l.qZA(),
            l.BQk();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = l.oxw();
          l.xp6(1),
            l.Q6J('row', r)('interactive', c === _.notes.length),
            l.uIk('data-testid', l.lcZ(2, 3, _.date) + ' ' + c);
        }
      }
      const Hi = function (g) {
          return { 'day-date__active': g };
        },
        yo = function (g) {
          return { 'day-name__active': g };
        };
      let uo = (() => {
        class g {
          constructor(r, c) {
            (this.dialog = r),
              (this.store = c),
              (this.notes = []),
              (this.rows = []);
          }
          ngOnInit() {
            (this.notesSubscription = this.store
              .select(Ke, xt(this.date))
              .subscribe(r => {
                this.notes = r ?? [];
                const c =
                  this.minRowCount > this.notes.length
                    ? this.minRowCount
                    : this.notes.length + 1;
                c > this.minRowCount &&
                  ((this.minRowCount = c),
                  this.store.dispatch(Ue({ count: c }))),
                  (this.rows = D(this.notes, c));
              })),
              (this.rowsCountSubscrption = this.store
                .select(Wt, this.date.toISOString().split('T')[0])
                .subscribe(r => {
                  (this.minRowCount = r), (this.rows = D(this.notes, r));
                })),
              (this.rows = D(this.notes, this.minRowCount));
          }
          ngOnChanges(r) {
            r.minRowsCount &&
              (this.rows = D(this.notes, r.minRowsCount.currentValue));
          }
          ngOnDestroy() {
            this.rowsCountSubscrption?.unsubscribe(),
              this.notesSubscription?.unsubscribe();
          }
          get isActive() {
            return (g => {
              const R = new Date();
              return (
                R.getFullYear() === g.getFullYear() &&
                R.getMonth() === g.getMonth() &&
                R.getDate() === g.getDate()
              );
            })(this.date);
          }
          openDialog(r) {
            const c = this.notes.find(_ => _.id === r);
            this.dialog.open(d, {
              data: { date: this.date, note: c, withDate: !0 },
            });
          }
          updateCompleted(r) {
            const c = this.notes.find(_ => _.id === r.id);
            c && this.store.dispatch(c.completed ? vt(c) : at(c));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(l.Y36(ar), l.Y36(L.yh));
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['app-day']],
            inputs: { date: 'date' },
            features: [l.TTD],
            decls: 9,
            vars: 13,
            consts: [
              [1, 'day'],
              [1, 'day-header'],
              [1, 'day-date', 3, 'ngClass'],
              [1, 'day-name', 3, 'ngClass'],
              [4, 'ngFor', 'ngForOf'],
              [3, 'row', 'interactive', 'rowClick', 'rowChange'],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                l._uU(3),
                l.ALo(4, 'dateWithMonth'),
                l.qZA(),
                l.TgZ(5, 'span', 3),
                l._uU(6),
                l.ALo(7, 'dayOfWeek'),
                l.qZA()(),
                l.YNc(8, Yn, 3, 5, 'ng-container', 4),
                l.qZA()),
                2 & r &&
                  (l.xp6(2),
                  l.Q6J('ngClass', l.VKq(9, Hi, c.isActive)),
                  l.xp6(1),
                  l.Oqu(l.lcZ(4, 5, c.date)),
                  l.xp6(2),
                  l.Q6J('ngClass', l.VKq(11, yo, c.isActive)),
                  l.xp6(1),
                  l.Oqu(l.lcZ(7, 7, c.date)),
                  l.xp6(2),
                  l.Q6J('ngForOf', c.rows));
            },
            dependencies: [s.mk, s.sg, wt, Qt, rn],
            styles: [
              '.day-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:2px solid #000;padding-bottom:12px;font-size:18px;line-height:28px}.day-date[_ngcontent-%COMP%]{font-weight:700}.day-date__active[_ngcontent-%COMP%]{color:#3f51b5}.day-name[_ngcontent-%COMP%]{color:#999}.day-name__active[_ngcontent-%COMP%]{color:#3f51b580}@media only screen and (min-width: 1020px){.day-header[_ngcontent-%COMP%]{font-size:21px}}',
            ],
          })),
          g
        );
      })();
      function Po(g, R) {
        if (
          (1 & g && (l.TgZ(0, 'div', 2), l._UZ(1, 'app-day', 3), l.qZA()),
          2 & g)
        ) {
          const r = R.$implicit;
          l.xp6(1), l.Q6J('date', r);
        }
      }
      let _r = (() => {
        class g {
          ngOnInit() {
            this.fillDates(this.startDate);
          }
          ngOnChanges(r) {
            r.startDate && this.fillDates(r.startDate.currentValue);
          }
          fillDates(r) {
            this.dates = [];
            for (let c = 0; c < 7; c++) this.dates.push(bt(r, c));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵcmp = l.Xpm({
            type: g,
            selectors: [['app-week']],
            inputs: { startDate: 'startDate' },
            features: [l.TTD],
            decls: 2,
            vars: 1,
            consts: [
              ['data-testid', 'calendar', 1, 'week'],
              ['class', 'week-day', 4, 'ngFor', 'ngForOf'],
              [1, 'week-day'],
              [3, 'date'],
            ],
            template: function (r, c) {
              1 & r &&
                (l.TgZ(0, 'div', 0), l.YNc(1, Po, 2, 1, 'div', 1), l.qZA()),
                2 & r && (l.xp6(1), l.Q6J('ngForOf', c.dates));
            },
            dependencies: [s.sg, uo],
            styles: [
              '[_nghost-%COMP%]{display:flex}.week[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px;flex:1}.week-day[_ngcontent-%COMP%]{margin-top:20px}@media only screen and (min-width: 1020px){.week[_ngcontent-%COMP%]{flex-direction:row}.week-day[_ngcontent-%COMP%]{width:calc((100% - 120px) / 7)}.week-day[_ngcontent-%COMP%]:not(:first-child){margin-left:20px}}',
            ],
          })),
          g
        );
      })();
      function Ts(g, R) {
        if (1 & g) {
          const r = l.EpF();
          l.ynx(0),
            l.TgZ(1, 'app-row', 5),
            l.NdJ('rowClick', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k.openDialog(_.id));
            })('rowChange', function (_) {
              l.CHM(r);
              const k = l.oxw();
              return l.KtG(k.updateCompleted(_));
            }),
            l.qZA(),
            l.BQk();
        }
        if (2 & g) {
          const r = R.$implicit,
            c = R.index,
            _ = l.oxw();
          l.xp6(1),
            l.Q6J('row', r)('interactive', c === _.notes.length),
            l.uIk('data-testid', 'row ' + (c + 1));
        }
      }
      let rs = (() => {
          class g {
            constructor(r, c) {
              (this.dialog = r),
                (this.store = c),
                (this.notes = []),
                (this.rows = []),
                (this.minRowsCount = 12),
                (this.notesSubscription = this.store.select(Re).subscribe(_ => {
                  this.notes = _ ?? [];
                  const k =
                    this.minRowsCount > this.notes.length
                      ? this.minRowsCount
                      : this.notes.length + 3 - (this.notes.length % 3);
                  k > this.minRowsCount && (this.minRowsCount = k),
                    (this.rows = D(this.notes, k));
                })),
                (this.rows = D(this.notes, 12));
            }
            ngOnDestroy() {
              this.notesSubscription.unsubscribe();
            }
            openDialog(r) {
              const c = this.notes.find(_ => _.id === r);
              this.dialog.open(d, { data: { note: c, withDate: !1 } });
            }
            updateCompleted(r) {
              const c = this.notes.find(_ => _.id === r.id);
              c && this.store.dispatch(ae({ ...c, completed: !!r.completed }));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(l.Y36(ar), l.Y36(L.yh));
            }),
            (g.ɵcmp = l.Xpm({
              type: g,
              selectors: [['app-todo-list']],
              decls: 9,
              vars: 1,
              consts: [
                [1, 'todo-header'],
                [1, 'todo-title'],
                [
                  'mat-icon-button',
                  '',
                  'data-testid',
                  'add-todo',
                  1,
                  'todo-add',
                  3,
                  'click',
                ],
                ['data-testid', 'todo-list', 1, 'todo-list'],
                [4, 'ngFor', 'ngForOf'],
                [3, 'row', 'interactive', 'rowClick', 'rowChange'],
              ],
              template: function (r, c) {
                1 & r &&
                  (l.TgZ(0, 'div')(1, 'div', 0)(2, 'span', 1),
                  l._uU(3, 'Someday'),
                  l.qZA(),
                  l.TgZ(4, 'button', 2),
                  l.NdJ('click', function () {
                    return c.openDialog();
                  }),
                  l.TgZ(5, 'mat-icon'),
                  l._uU(6, 'add'),
                  l.qZA()()(),
                  l.TgZ(7, 'div', 3),
                  l.YNc(8, Ts, 2, 3, 'ng-container', 4),
                  l.qZA()()),
                  2 & r && (l.xp6(8), l.Q6J('ngForOf', c.rows));
              },
              dependencies: [s.sg, rt.RK, Qe, wt],
              styles: [
                '.todo-header[_ngcontent-%COMP%]{display:flex;align-items:center;padding-bottom:12px;margin-top:40px}.todo-title[_ngcontent-%COMP%]{font-size:18px;line-height:28px;font-weight:700;color:#555}.todo-add[_ngcontent-%COMP%]{margin-left:20px;color:#555}@media only screen and (min-width: 1020px){.todo-header[_ngcontent-%COMP%]{font-size:21px;max-width:32%}.todo-list[_ngcontent-%COMP%]{display:grid;grid-template-columns:32% 31% 31%;grid-template-rows:40px 40px 40px 40px;column-gap:2%}}',
              ],
            })),
            g
          );
        })(),
        rl = (() => {
          class g {
            transform(r) {
              return (g => `${ne[g.getMonth()]} ${g.getFullYear()}`)(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = l.Yjl({ name: 'headerDate', type: g, pure: !0 })),
            g
          );
        })();
      const nc = [
        {
          path: '',
          component: (() => {
            class g {
              constructor(r, c, _) {
                (this.store = r),
                  (this.snackBar = c),
                  (this.activatedRoute = _);
                const k = this.activatedRoute.snapshot.queryParams.startDate;
                k &&
                (g => {
                  const R = Date.parse(g);
                  return !isNaN(R);
                })(k)
                  ? ((this.startDate = Le(new Date(k))),
                    (this.endDate = _t(new Date(k))))
                  : ((this.startDate = Le(new Date())),
                    (this.endDate = _t(new Date())));
              }
              ngOnInit() {
                this.getNotes(),
                  this.store.dispatch(te()),
                  (this.errorSubscription = this.store
                    .select(Ne)
                    .pipe((0, He.h)(Boolean))
                    .subscribe(r => {
                      this.snackBar.open(r, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.errorSubscription?.unsubscribe();
              }
              onBackClick() {
                (this.startDate = lt(this.startDate, 7)),
                  (this.endDate = lt(this.endDate, 7)),
                  this.getNotes();
              }
              onForwardClick() {
                (this.startDate = bt(this.startDate, 7)),
                  (this.endDate = bt(this.endDate, 7)),
                  this.getNotes();
              }
              getNotes() {
                this.store.dispatch(
                  oe({
                    startDate: nt(this.startDate),
                    endDate: ut(this.endDate),
                  }),
                );
              }
              logout() {
                this.store.dispatch((0, pt.kS)());
              }
            }
            return (
              (g.ɵfac = function (r) {
                return new (r || g)(l.Y36(L.yh), l.Y36(yn.ux), l.Y36(x.gz));
              }),
              (g.ɵcmp = l.Xpm({
                type: g,
                selectors: [['app-calendar']],
                decls: 33,
                vars: 6,
                consts: [
                  [1, 'calendar'],
                  [1, 'calendar-header'],
                  [1, 'calendar-month'],
                  [1, 'calendar-buttons'],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__mini',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__large',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  ['menu', 'matMenu'],
                  ['mat-menu-item', '', 3, 'click'],
                  [3, 'startDate'],
                ],
                template: function (r, c) {
                  if (
                    (1 & r &&
                      (l.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                      l._uU(3),
                      l.ALo(4, 'headerDate'),
                      l.qZA(),
                      l.TgZ(5, 'div', 3)(6, 'button', 4),
                      l.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      l.TgZ(7, 'mat-icon'),
                      l._uU(8, 'arrow_back_ios_new'),
                      l.qZA()(),
                      l.TgZ(9, 'button', 5),
                      l.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      l.TgZ(10, 'mat-icon'),
                      l._uU(11, 'arrow_forward_ios_new'),
                      l.qZA()(),
                      l.TgZ(12, 'button', 6),
                      l.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      l.TgZ(13, 'mat-icon'),
                      l._uU(14, 'arrow_back_ios_new'),
                      l.qZA()(),
                      l.TgZ(15, 'button', 7),
                      l.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      l.TgZ(16, 'mat-icon'),
                      l._uU(17, 'arrow_forward_ios_new'),
                      l.qZA()(),
                      l.TgZ(18, 'button', 8)(19, 'mat-icon'),
                      l._uU(20, 'more_vert'),
                      l.qZA()(),
                      l.TgZ(21, 'button', 9)(22, 'mat-icon'),
                      l._uU(23, 'more_vert'),
                      l.qZA()(),
                      l.TgZ(24, 'mat-menu', null, 10)(26, 'button', 11),
                      l.NdJ('click', function () {
                        return c.logout();
                      }),
                      l.TgZ(27, 'mat-icon'),
                      l._uU(28, 'logout'),
                      l.qZA(),
                      l.TgZ(29, 'span'),
                      l._uU(30, 'Logout'),
                      l.qZA()()()()(),
                      l._UZ(31, 'app-week', 12)(32, 'app-todo-list'),
                      l.qZA()),
                    2 & r)
                  ) {
                    const _ = l.MAs(25);
                    l.xp6(3),
                      l.Oqu(l.lcZ(4, 4, c.startDate)),
                      l.xp6(15),
                      l.Q6J('matMenuTriggerFor', _),
                      l.xp6(3),
                      l.Q6J('matMenuTriggerFor', _),
                      l.xp6(10),
                      l.Q6J('startDate', c.startDate);
                  }
                },
                dependencies: [rt.nh, rt.cs, Qe, er, Nn, Zi, _r, rs, rl],
                styles: [
                  '.calendar[_ngcontent-%COMP%]{padding:12px}.calendar-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.calendar-month[_ngcontent-%COMP%]{font-size:21px;line-height:36px;font-weight:700}.calendar-buttons[_ngcontent-%COMP%]{display:flex}.calendar-button__large[_ngcontent-%COMP%]{display:none}.calendar-button[_ngcontent-%COMP%]:not(:first-child){margin-left:8px}.calendar-menu[_ngcontent-%COMP%]{margin-left:20px}@media only screen and (min-width: 1020px){.calendar-button__large[_ngcontent-%COMP%]{display:block}.calendar-button__mini[_ngcontent-%COMP%]{display:none}.calendar-month[_ngcontent-%COMP%]{font-size:36px;line-height:42px}}',
                ],
              })),
              g
            );
          })(),
        },
      ];
      let ol = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = l.oAB({ type: g })),
          (g.ɵinj = l.cJS({ imports: [x.Bz.forChild(nc), x.Bz] })),
          g
        );
      })();
      var Do = C(3835);
      const Ia = {
        randomUUID:
          typeof crypto < 'u' &&
          crypto.randomUUID &&
          crypto.randomUUID.bind(crypto),
      };
      let qs;
      const ic = new Uint8Array(16);
      function _s() {
        if (
          !qs &&
          ((qs =
            typeof crypto < 'u' &&
            crypto.getRandomValues &&
            crypto.getRandomValues.bind(crypto)),
          !qs)
        )
          throw new Error(
            'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
          );
        return qs(ic);
      }
      const Pi = [];
      for (let g = 0; g < 256; ++g) Pi.push((g + 256).toString(16).slice(1));
      const ru = function oc(g, R, r) {
          if (Ia.randomUUID && !R && !g) return Ia.randomUUID();
          const c = (g = g || {}).random || (g.rng || _s)();
          if (((c[6] = (15 & c[6]) | 64), (c[8] = (63 & c[8]) | 128), R)) {
            r = r || 0;
            for (let _ = 0; _ < 16; ++_) R[r + _] = c[_];
            return R;
          }
          return (function sl(g, R = 0) {
            return (
              Pi[g[R + 0]] +
              Pi[g[R + 1]] +
              Pi[g[R + 2]] +
              Pi[g[R + 3]] +
              '-' +
              Pi[g[R + 4]] +
              Pi[g[R + 5]] +
              '-' +
              Pi[g[R + 6]] +
              Pi[g[R + 7]] +
              '-' +
              Pi[g[R + 8]] +
              Pi[g[R + 9]] +
              '-' +
              Pi[g[R + 10]] +
              Pi[g[R + 11]] +
              Pi[g[R + 12]] +
              Pi[g[R + 13]] +
              Pi[g[R + 14]] +
              Pi[g[R + 15]]
            ).toLowerCase();
          })(c);
        },
        vs = { headers: new ee.WM({ 'Content-Type': 'application/json' }) };
      let al = (() => {
        class g {
          constructor(r) {
            this.http = r;
          }
          getNotes(r, c) {
            return this.http.get(`${Do.k.apiUrl}/notes`, {
              params: r && c ? { from: r, to: c } : {},
              ...vs,
            });
          }
          createNote(r) {
            const c = { ...r, id: ru() };
            return this.http.post(`${Do.k.apiUrl}/notes`, c, vs);
          }
          updateNote(r) {
            return this.http.patch(`${Do.k.apiUrl}/notes/${r.id}`, r, vs);
          }
          deleteNote(r) {
            return this.http.delete(`${Do.k.apiUrl}/notes/${r.id}`, vs);
          }
          completeNote(r) {
            return this.http.post(
              `${Do.k.apiUrl}/notes/${r.id}/complete`,
              { date: r.date },
              vs,
            );
          }
          revertNoteCompletion(r) {
            return this.http.delete(`${Do.k.apiUrl}/notes/${r.id}/complete`, {
              ...vs,
              body: { date: r.date },
            });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(l.LFG(ee.eN));
          }),
          (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      var lr = C(8776),
        Co = C(6129);
      const sc = (g, R) =>
        (!g.hasTime && R.hasTime) ||
        (g.hasTime && R.hasTime && g.date && R.date && g.date > R.date)
          ? 1
          : (!R.hasTime && g.hasTime) ||
            (g.hasTime && R.hasTime && g.date && R.date && R.date > g.date)
          ? -1
          : 0;
      let cl = (() => {
        class g {
          constructor(r, c) {
            (this.actions$ = r),
              (this.notesService = c),
              (this.loadCalendarNotes$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(oe.type),
                  (0, Co.z)(({ startDate: _, endDate: k }) =>
                    this.notesService.getNotes(_, k).pipe(
                      (0, Jt.U)(ge =>
                        _ && k
                          ? (g => {
                              const R = g.reduce((r, c) => {
                                const _ = new Date(c.date ?? ''),
                                  k = xt(_);
                                return r[k] ? r[k].push(c) : (r[k] = [c]), r;
                              }, {});
                              for (let r in R) R[r] = R[r].sort(sc);
                              return R;
                            })(ge)
                          : ge,
                      ),
                      (0, Jt.U)(ge => ue({ calendarNotes: ge })),
                      (0, Lt.K)(ge =>
                        (0, mt.of)(
                          le({ error: ge?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.loadTodoNotes$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(te.type),
                  (0, Co.z)(() =>
                    this.notesService.getNotes().pipe(
                      (0, Jt.U)(_ => ve({ todoNotes: _ })),
                      (0, Lt.K)(_ =>
                        (0, mt.of)(
                          le({ error: _?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.createNote$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(he.type),
                  (0, Co.z)(_ =>
                    this.notesService.createNote(_).pipe(
                      (0, Jt.U)(() => ie()),
                      (0, Lt.K)(k =>
                        (0, mt.of)(
                          le({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.updateNote$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(ae.type),
                  (0, Co.z)(_ =>
                    this.notesService.updateNote(_).pipe(
                      (0, Jt.U)(() => ie()),
                      (0, Lt.K)(k =>
                        (0, mt.of)(
                          le({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.deleteNote$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(pe.type),
                  (0, Co.z)(_ =>
                    this.notesService.deleteNote(_).pipe(
                      (0, Jt.U)(() => ie()),
                      (0, Lt.K)(k =>
                        (0, mt.of)(
                          le({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.completeNote$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(at.type),
                  (0, Co.z)(_ =>
                    this.notesService.completeNote(_).pipe(
                      (0, Jt.U)(() => ie()),
                      (0, Lt.K)(k =>
                        (0, mt.of)(
                          le({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.revertNoteCompletion$ = (0, lr.GW)(() =>
                this.actions$.pipe(
                  (0, lr.l4)(vt.type),
                  (0, Co.z)(_ =>
                    this.notesService.revertNoteCompletion(_).pipe(
                      (0, Jt.U)(() => ie()),
                      (0, Lt.K)(k =>
                        (0, mt.of)(
                          le({ error: k?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(l.LFG(lr.eX), l.LFG(al));
          }),
          (g.ɵprov = l.Yz7({ token: g, factory: g.ɵfac })),
          g
        );
      })();
      const ou = (0, L.Lq)(
        {
          loading: !1,
          todoNotes: [],
          loaded: !1,
          requestSuccess: !1,
          minRowsCount: 6,
        },
        (0, L.on)(oe, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(te, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(ue, (g, { calendarNotes: R }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          calendarNotes: R,
        })),
        (0, L.on)(ve, (g, { todoNotes: R }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          todoNotes: R,
        })),
        (0, L.on)(le, (g, { error: R }) => ({ ...g, error: R, loading: !1 })),
        (0, L.on)(he, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(ae, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(pe, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(ie, g => ({
          ...g,
          error: void 0,
          requestSuccess: !0,
          loading: !1,
        })),
        (0, L.on)(Ve, g => ({ ...g, requestSuccess: !1 })),
        (0, L.on)(Ue, (g, { count: R }) => ({ ...g, minRowsCount: R })),
      );
      var ac = C(2542);
      let lc = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = l.oAB({ type: g })),
          (g.ɵinj = l.cJS({
            providers: [al, ac.e, { provide: ft.Ad, useValue: 'ru-RU' }],
            imports: [
              s.ez,
              ol,
              lr.sQ.forFeature([cl]),
              L.Aw.forFeature('calendar', ou),
              rt.ot,
              Tt,
              zn.lN,
              Ln.UX,
              ci.c,
              tr,
              Yr,
              ft.XK,
              yn.ZX,
              Ss,
              vr,
              Fi,
              Ln.u5,
            ],
          })),
          g
        );
      })();
    },
    3835: (Rt, Pe, C) => {
      C.d(Pe, { k: () => s });
      const s = { apiUrl: '/api', baseUrl: 'http://localhost:4200' };
    },
    4044: (Rt, Pe, C) => {
      var s = C(1481),
        x = C(4650),
        L = C(8252);
      let oe = (() => {
        class B {
          constructor() {
            this.title = 'timepage';
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵcmp = x.Xpm({
            type: B,
            selectors: [['app-root']],
            decls: 2,
            vars: 0,
            consts: [['role', 'main', 1, 'content']],
            template: function (p, S) {
              1 & p && (x.TgZ(0, 'div', 0), x._UZ(1, 'router-outlet'), x.qZA());
            },
            dependencies: [L.lC],
          })),
          B
        );
      })();
      var te = C(7340);
      function ve(B) {
        return new x.vHH(3e3, !1);
      }
      function l() {
        return typeof window < 'u' && typeof window.document < 'u';
      }
      function yn() {
        return (
          typeof process < 'u' &&
          '[object process]' === {}.toString.call(process)
        );
      }
      function rt(B) {
        switch (B.length) {
          case 0:
            return new te.ZN();
          case 1:
            return B[0];
          default:
            return new te.ZE(B);
        }
      }
      function ft(B, h, p, S, V = new Map(), q = new Map()) {
        const xe = [],
          Me = [];
        let Xe = -1,
          gt = null;
        if (
          (S.forEach(Zt => {
            const zt = Zt.get('offset'),
              Cn = zt == Xe,
              sn = (Cn && gt) || new Map();
            Zt.forEach((fn, xn) => {
              let Hn = xn,
                Jn = fn;
              if ('offset' !== xn)
                switch (((Hn = h.normalizePropertyName(Hn, xe)), Jn)) {
                  case te.k1:
                    Jn = V.get(xn);
                    break;
                  case te.l3:
                    Jn = q.get(xn);
                    break;
                  default:
                    Jn = h.normalizeStyleValue(xn, Hn, Jn, xe);
                }
              sn.set(Hn, Jn);
            }),
              Cn || Me.push(sn),
              (gt = sn),
              (Xe = zt);
          }),
          xe.length)
        )
          throw (function At(B) {
            return new x.vHH(3502, !1);
          })();
        return Me;
      }
      function Et(B, h, p, S) {
        switch (h) {
          case 'start':
            B.onStart(() => S(p && mt(p, 'start', B)));
            break;
          case 'done':
            B.onDone(() => S(p && mt(p, 'done', B)));
            break;
          case 'destroy':
            B.onDestroy(() => S(p && mt(p, 'destroy', B)));
        }
      }
      function mt(B, h, p) {
        const q = ln(
            B.element,
            B.triggerName,
            B.fromState,
            B.toState,
            h || B.phaseName,
            p.totalTime ?? B.totalTime,
            !!p.disabled,
          ),
          xe = B._data;
        return null != xe && (q._data = xe), q;
      }
      function ln(B, h, p, S, V = '', q = 0, xe) {
        return {
          element: B,
          triggerName: h,
          fromState: p,
          toState: S,
          phaseName: V,
          totalTime: q,
          disabled: !!xe,
        };
      }
      function mn(B, h, p) {
        let S = B.get(h);
        return S || B.set(h, (S = p)), S;
      }
      function dn(B) {
        const h = B.indexOf(':');
        return [B.substring(1, h), B.slice(h + 1)];
      }
      let Gn = (B, h) => !1,
        Jt = (B, h, p) => [],
        Lt = null;
      function Pn(B) {
        const h = B.parentNode || B.host;
        return h === Lt ? null : h;
      }
      (yn() || typeof Element < 'u') &&
        (l()
          ? ((Lt = (() => document.documentElement)()),
            (Gn = (B, h) => {
              for (; h; ) {
                if (h === B) return !0;
                h = Pn(h);
              }
              return !1;
            }))
          : (Gn = (B, h) => B.contains(h)),
        (Jt = (B, h, p) => {
          if (p) return Array.from(B.querySelectorAll(h));
          const S = B.querySelector(h);
          return S ? [S] : [];
        }));
      let ee = null,
        Ae = !1;
      const H = Gn,
        ke = Jt;
      let me = (() => {
          class B {
            validateStyleProperty(p) {
              return (function ze(B) {
                ee ||
                  ((ee =
                    (function ye() {
                      return typeof document < 'u' ? document.body : null;
                    })() || {}),
                  (Ae = !!ee.style && 'WebkitAppearance' in ee.style));
                let h = !0;
                return (
                  ee.style &&
                    !(function z(B) {
                      return 'ebkit' == B.substring(1, 6);
                    })(B) &&
                    ((h = B in ee.style),
                    !h &&
                      Ae &&
                      (h =
                        'Webkit' + B.charAt(0).toUpperCase() + B.slice(1) in
                        ee.style)),
                  h
                );
              })(p);
            }
            matchesElement(p, S) {
              return !1;
            }
            containsElement(p, S) {
              return H(p, S);
            }
            getParentElement(p) {
              return Pn(p);
            }
            query(p, S, V) {
              return ke(p, S, V);
            }
            computeStyle(p, S, V) {
              return V || '';
            }
            animate(p, S, V, q, xe, Me = [], Xe) {
              return new te.ZN(V, q);
            }
          }
          return (
            (B.ɵfac = function (p) {
              return new (p || B)();
            }),
            (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
            B
          );
        })(),
        fe = (() => {
          class B {}
          return (B.NOOP = new me()), B;
        })();
      const qe = 1e3,
        wn = 'ng-enter',
        Ie = 'ng-leave',
        Dt = 'ng-trigger',
        et = '.ng-trigger',
        St = 'ng-animating',
        Te = '.ng-animating';
      function F(B) {
        if ('number' == typeof B) return B;
        const h = B.match(/^(-?[\.\d]+)(m?s)/);
        return !h || h.length < 2 ? 0 : b(parseFloat(h[1]), h[2]);
      }
      function b(B, h) {
        return 's' === h ? B * qe : B;
      }
      function M(B, h, p) {
        return B.hasOwnProperty('duration')
          ? B
          : (function G(B, h, p) {
              let V,
                q = 0,
                xe = '';
              if ('string' == typeof B) {
                const Me = B.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i,
                );
                if (null === Me)
                  return h.push(ve()), { duration: 0, delay: 0, easing: '' };
                V = b(parseFloat(Me[1]), Me[2]);
                const Xe = Me[3];
                null != Xe && (q = b(parseFloat(Xe), Me[4]));
                const gt = Me[5];
                gt && (xe = gt);
              } else V = B;
              if (!p) {
                let Me = !1,
                  Xe = h.length;
                V < 0 &&
                  (h.push(
                    (function le() {
                      return new x.vHH(3100, !1);
                    })(),
                  ),
                  (Me = !0)),
                  q < 0 &&
                    (h.push(
                      (function he() {
                        return new x.vHH(3101, !1);
                      })(),
                    ),
                    (Me = !0)),
                  Me && h.splice(Xe, 0, ve());
              }
              return { duration: V, delay: q, easing: xe };
            })(B, h, p);
      }
      function Q(B, h = {}) {
        return (
          Object.keys(B).forEach(p => {
            h[p] = B[p];
          }),
          h
        );
      }
      function Qe(B) {
        const h = new Map();
        return (
          Object.keys(B).forEach(p => {
            h.set(p, B[p]);
          }),
          h
        );
      }
      function Je(B, h = new Map(), p) {
        if (p) for (let [S, V] of p) h.set(S, V);
        for (let [S, V] of B) h.set(S, V);
        return h;
      }
      function Ft(B, h, p) {
        return p ? h + ':' + p + ';' : '';
      }
      function en(B) {
        let h = '';
        for (let p = 0; p < B.style.length; p++) {
          const S = B.style.item(p);
          h += Ft(0, S, B.style.getPropertyValue(S));
        }
        for (const p in B.style)
          B.style.hasOwnProperty(p) &&
            !p.startsWith('_') &&
            (h += Ft(0, _i(p), B.style[p]));
        B.setAttribute('style', h);
      }
      function Oe(B, h, p) {
        B.style &&
          (h.forEach((S, V) => {
            const q = wi(V);
            p && !p.has(V) && p.set(V, B.style[q]), (B.style[q] = S);
          }),
          yn() && en(B));
      }
      function be(B, h) {
        B.style &&
          (h.forEach((p, S) => {
            const V = wi(S);
            B.style[V] = '';
          }),
          yn() && en(B));
      }
      function Z(B) {
        return Array.isArray(B) ? (1 == B.length ? B[0] : (0, te.vP)(B)) : B;
      }
      const dt = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function Bt(B) {
        let h = [];
        if ('string' == typeof B) {
          let p;
          for (; (p = dt.exec(B)); ) h.push(p[1]);
          dt.lastIndex = 0;
        }
        return h;
      }
      function qt(B, h, p) {
        const S = B.toString(),
          V = S.replace(dt, (q, xe) => {
            let Me = h[xe];
            return (
              null == Me &&
                (p.push(
                  (function pe(B) {
                    return new x.vHH(3003, !1);
                  })(),
                ),
                (Me = '')),
              Me.toString()
            );
          });
        return V == S ? B : V;
      }
      function Dn(B) {
        const h = [];
        let p = B.next();
        for (; !p.done; ) h.push(p.value), (p = B.next());
        return h;
      }
      const Wn = /-+([a-z0-9])/g;
      function wi(B) {
        return B.replace(Wn, (...h) => h[1].toUpperCase());
      }
      function _i(B) {
        return B.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function kn(B, h, p) {
        switch (h.type) {
          case 7:
            return B.visitTrigger(h, p);
          case 0:
            return B.visitState(h, p);
          case 1:
            return B.visitTransition(h, p);
          case 2:
            return B.visitSequence(h, p);
          case 3:
            return B.visitGroup(h, p);
          case 4:
            return B.visitAnimate(h, p);
          case 5:
            return B.visitKeyframes(h, p);
          case 6:
            return B.visitStyle(h, p);
          case 8:
            return B.visitReference(h, p);
          case 9:
            return B.visitAnimateChild(h, p);
          case 10:
            return B.visitAnimateRef(h, p);
          case 11:
            return B.visitQuery(h, p);
          case 12:
            return B.visitStagger(h, p);
          default:
            throw (function ie(B) {
              return new x.vHH(3004, !1);
            })();
        }
      }
      function Gt(B, h) {
        return window.getComputedStyle(B)[h];
      }
      const Ni = '*';
      function dr(B, h) {
        const p = [];
        return (
          'string' == typeof B
            ? B.split(/\s*,\s*/).forEach(S =>
                (function ui(B, h, p) {
                  if (':' == B[0]) {
                    const Xe = (function jt(B, h) {
                      switch (B) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (p, S) => parseFloat(S) > parseFloat(p);
                        case ':decrement':
                          return (p, S) => parseFloat(S) < parseFloat(p);
                        default:
                          return (
                            h.push(
                              (function ut(B) {
                                return new x.vHH(3016, !1);
                              })(),
                            ),
                            '* => *'
                          );
                      }
                    })(B, p);
                    if ('function' == typeof Xe) return void h.push(Xe);
                    B = Xe;
                  }
                  const S = B.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == S || S.length < 4)
                    return (
                      p.push(
                        (function nt(B) {
                          return new x.vHH(3015, !1);
                        })(),
                      ),
                      h
                    );
                  const V = S[1],
                    q = S[2],
                    xe = S[3];
                  h.push(hi(V, xe));
                  '<' == q[0] && !(V == Ni && xe == Ni) && h.push(hi(xe, V));
                })(S, p, h),
              )
            : p.push(B),
          p
        );
      }
      const hn = new Set(['true', '1']),
        Nn = new Set(['false', '0']);
      function hi(B, h) {
        const p = hn.has(B) || Nn.has(B),
          S = hn.has(h) || Nn.has(h);
        return (V, q) => {
          let xe = B == Ni || B == V,
            Me = h == Ni || h == q;
          return (
            !xe &&
              p &&
              'boolean' == typeof V &&
              (xe = V ? hn.has(B) : Nn.has(B)),
            !Me &&
              S &&
              'boolean' == typeof q &&
              (Me = q ? hn.has(h) : Nn.has(h)),
            xe && Me
          );
        };
      }
      const Qn = new RegExp('s*:selfs*,?', 'g');
      function li(B, h, p, S) {
        return new Mi(B).build(h, p, S);
      }
      class Mi {
        constructor(h) {
          this._driver = h;
        }
        build(h, p, S) {
          const V = new Ji(p);
          return this._resetContextStyleTimingState(V), kn(this, Z(h), V);
        }
        _resetContextStyleTimingState(h) {
          (h.currentQuerySelector = ''),
            (h.collectedStyles = new Map()),
            h.collectedStyles.set('', new Map()),
            (h.currentTime = 0);
        }
        visitTrigger(h, p) {
          let S = (p.queryCount = 0),
            V = (p.depCount = 0);
          const q = [],
            xe = [];
          return (
            '@' == h.name.charAt(0) &&
              p.errors.push(
                (function Ue() {
                  return new x.vHH(3006, !1);
                })(),
              ),
            h.definitions.forEach(Me => {
              if ((this._resetContextStyleTimingState(p), 0 == Me.type)) {
                const Xe = Me,
                  gt = Xe.name;
                gt
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach(Zt => {
                    (Xe.name = Zt), q.push(this.visitState(Xe, p));
                  }),
                  (Xe.name = gt);
              } else if (1 == Me.type) {
                const Xe = this.visitTransition(Me, p);
                (S += Xe.queryCount), (V += Xe.depCount), xe.push(Xe);
              } else
                p.errors.push(
                  (function at() {
                    return new x.vHH(3007, !1);
                  })(),
                );
            }),
            {
              type: 7,
              name: h.name,
              states: q,
              transitions: xe,
              queryCount: S,
              depCount: V,
              options: null,
            }
          );
        }
        visitState(h, p) {
          const S = this.visitStyle(h.styles, p),
            V = (h.options && h.options.params) || null;
          if (S.containsDynamicStyles) {
            const q = new Set(),
              xe = V || {};
            S.styles.forEach(Me => {
              Me instanceof Map &&
                Me.forEach(Xe => {
                  Bt(Xe).forEach(gt => {
                    xe.hasOwnProperty(gt) || q.add(gt);
                  });
                });
            }),
              q.size &&
                (Dn(q.values()),
                p.errors.push(
                  (function vt(B, h) {
                    return new x.vHH(3008, !1);
                  })(),
                ));
          }
          return {
            type: 0,
            name: h.name,
            style: S,
            options: V ? { params: V } : null,
          };
        }
        visitTransition(h, p) {
          (p.queryCount = 0), (p.depCount = 0);
          const S = kn(this, Z(h.animation), p);
          return {
            type: 1,
            matchers: dr(h.expr, p.errors),
            animation: S,
            queryCount: p.queryCount,
            depCount: p.depCount,
            options: Ai(h.options),
          };
        }
        visitSequence(h, p) {
          return {
            type: 2,
            steps: h.steps.map(S => kn(this, S, p)),
            options: Ai(h.options),
          };
        }
        visitGroup(h, p) {
          const S = p.currentTime;
          let V = 0;
          const q = h.steps.map(xe => {
            p.currentTime = S;
            const Me = kn(this, xe, p);
            return (V = Math.max(V, p.currentTime)), Me;
          });
          return (
            (p.currentTime = V), { type: 3, steps: q, options: Ai(h.options) }
          );
        }
        visitAnimate(h, p) {
          const S = (function ur(B, h) {
            if (B.hasOwnProperty('duration')) return B;
            if ('number' == typeof B) return Xn(M(B, h).duration, 0, '');
            const p = B;
            if (
              p.split(/\s+/).some(q => '{' == q.charAt(0) && '{' == q.charAt(1))
            ) {
              const q = Xn(0, 0, '');
              return (q.dynamic = !0), (q.strValue = p), q;
            }
            const V = M(p, h);
            return Xn(V.duration, V.delay, V.easing);
          })(h.timings, p.errors);
          p.currentAnimateTimings = S;
          let V,
            q = h.styles ? h.styles : (0, te.oB)({});
          if (5 == q.type) V = this.visitKeyframes(q, p);
          else {
            let xe = h.styles,
              Me = !1;
            if (!xe) {
              Me = !0;
              const gt = {};
              S.easing && (gt.easing = S.easing), (xe = (0, te.oB)(gt));
            }
            p.currentTime += S.duration + S.delay;
            const Xe = this.visitStyle(xe, p);
            (Xe.isEmptyStep = Me), (V = Xe);
          }
          return (
            (p.currentAnimateTimings = null),
            { type: 4, timings: S, style: V, options: null }
          );
        }
        visitStyle(h, p) {
          const S = this._makeStyleAst(h, p);
          return this._validateStyleAst(S, p), S;
        }
        _makeStyleAst(h, p) {
          const S = [],
            V = Array.isArray(h.styles) ? h.styles : [h.styles];
          for (let Me of V)
            'string' == typeof Me
              ? Me === te.l3
                ? S.push(Me)
                : p.errors.push(new x.vHH(3002, !1))
              : S.push(Qe(Me));
          let q = !1,
            xe = null;
          return (
            S.forEach(Me => {
              if (
                Me instanceof Map &&
                (Me.has('easing') &&
                  ((xe = Me.get('easing')), Me.delete('easing')),
                !q)
              )
                for (let Xe of Me.values())
                  if (Xe.toString().indexOf('{{') >= 0) {
                    q = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: S,
              easing: xe,
              offset: h.offset,
              containsDynamicStyles: q,
              options: null,
            }
          );
        }
        _validateStyleAst(h, p) {
          const S = p.currentAnimateTimings;
          let V = p.currentTime,
            q = p.currentTime;
          S && q > 0 && (q -= S.duration + S.delay),
            h.styles.forEach(xe => {
              'string' != typeof xe &&
                xe.forEach((Me, Xe) => {
                  const gt = p.collectedStyles.get(p.currentQuerySelector),
                    Zt = gt.get(Xe);
                  let zt = !0;
                  Zt &&
                    (q != V &&
                      q >= Zt.startTime &&
                      V <= Zt.endTime &&
                      (p.errors.push(
                        (function lt(B, h, p, S, V) {
                          return new x.vHH(3010, !1);
                        })(),
                      ),
                      (zt = !1)),
                    (q = Zt.startTime)),
                    zt && gt.set(Xe, { startTime: q, endTime: V }),
                    p.options &&
                      (function Ee(B, h, p) {
                        const S = h.params || {},
                          V = Bt(B);
                        V.length &&
                          V.forEach(q => {
                            S.hasOwnProperty(q) ||
                              p.push(
                                (function ae(B) {
                                  return new x.vHH(3001, !1);
                                })(),
                              );
                          });
                      })(Me, p.options, p.errors);
                });
            });
        }
        visitKeyframes(h, p) {
          const S = { type: 5, styles: [], options: null };
          if (!p.currentAnimateTimings)
            return (
              p.errors.push(
                (function bt() {
                  return new x.vHH(3011, !1);
                })(),
              ),
              S
            );
          let q = 0;
          const xe = [];
          let Me = !1,
            Xe = !1,
            gt = 0;
          const Zt = h.steps.map(Jn => {
            const bi = this._makeStyleAst(Jn, p);
            let Ui =
                null != bi.offset
                  ? bi.offset
                  : (function zi(B) {
                      if ('string' == typeof B) return null;
                      let h = null;
                      if (Array.isArray(B))
                        B.forEach(p => {
                          if (p instanceof Map && p.has('offset')) {
                            const S = p;
                            (h = parseFloat(S.get('offset'))),
                              S.delete('offset');
                          }
                        });
                      else if (B instanceof Map && B.has('offset')) {
                        const p = B;
                        (h = parseFloat(p.get('offset'))), p.delete('offset');
                      }
                      return h;
                    })(bi.styles),
              ii = 0;
            return (
              null != Ui && (q++, (ii = bi.offset = Ui)),
              (Xe = Xe || ii < 0 || ii > 1),
              (Me = Me || ii < gt),
              (gt = ii),
              xe.push(ii),
              bi
            );
          });
          Xe &&
            p.errors.push(
              (function W() {
                return new x.vHH(3012, !1);
              })(),
            ),
            Me &&
              p.errors.push(
                (function se() {
                  return new x.vHH(3200, !1);
                })(),
              );
          const zt = h.steps.length;
          let Cn = 0;
          q > 0 && q < zt
            ? p.errors.push(
                (function ne() {
                  return new x.vHH(3202, !1);
                })(),
              )
            : 0 == q && (Cn = 1 / (zt - 1));
          const sn = zt - 1,
            fn = p.currentTime,
            xn = p.currentAnimateTimings,
            Hn = xn.duration;
          return (
            Zt.forEach((Jn, bi) => {
              const Ui = Cn > 0 ? (bi == sn ? 1 : Cn * bi) : xe[bi],
                ii = Ui * Hn;
              (p.currentTime = fn + xn.delay + ii),
                (xn.duration = ii),
                this._validateStyleAst(Jn, p),
                (Jn.offset = Ui),
                S.styles.push(Jn);
            }),
            S
          );
        }
        visitReference(h, p) {
          return {
            type: 8,
            animation: kn(this, Z(h.animation), p),
            options: Ai(h.options),
          };
        }
        visitAnimateChild(h, p) {
          return p.depCount++, { type: 9, options: Ai(h.options) };
        }
        visitAnimateRef(h, p) {
          return {
            type: 10,
            animation: this.visitReference(h.animation, p),
            options: Ai(h.options),
          };
        }
        visitQuery(h, p) {
          const S = p.currentQuerySelector,
            V = h.options || {};
          p.queryCount++, (p.currentQuery = h);
          const [q, xe] = (function ri(B) {
            const h = !!B.split(/\s*,\s*/).find(p => ':self' == p);
            return (
              h && (B = B.replace(Qn, '')),
              (B = B.replace(/@\*/g, et)
                .replace(/@\w+/g, p => et + '-' + p.slice(1))
                .replace(/:animating/g, Te)),
              [B, h]
            );
          })(h.selector);
          (p.currentQuerySelector = S.length ? S + ' ' + q : q),
            mn(p.collectedStyles, p.currentQuerySelector, new Map());
          const Me = kn(this, Z(h.animation), p);
          return (
            (p.currentQuery = null),
            (p.currentQuerySelector = S),
            {
              type: 11,
              selector: q,
              limit: V.limit || 0,
              optional: !!V.optional,
              includeSelf: xe,
              animation: Me,
              originalSelector: h.selector,
              options: Ai(h.options),
            }
          );
        }
        visitStagger(h, p) {
          p.currentQuery ||
            p.errors.push(
              (function X() {
                return new x.vHH(3013, !1);
              })(),
            );
          const S =
            'full' === h.timings
              ? { duration: 0, delay: 0, easing: 'full' }
              : M(h.timings, p.errors, !0);
          return {
            type: 12,
            animation: kn(this, Z(h.animation), p),
            timings: S,
            options: null,
          };
        }
      }
      class Ji {
        constructor(h) {
          (this.errors = h),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Ai(B) {
        return (
          B
            ? (B = Q(B)).params &&
              (B.params = (function _n(B) {
                return B ? Q(B) : null;
              })(B.params))
            : (B = {}),
          B
        );
      }
      function Xn(B, h, p) {
        return { duration: B, delay: h, easing: p };
      }
      function er(B, h, p, S, V, q, xe = null, Me = !1) {
        return {
          type: 1,
          element: B,
          keyframes: h,
          preStyleProps: p,
          postStyleProps: S,
          duration: V,
          delay: q,
          totalTime: V + q,
          easing: xe,
          subTimeline: Me,
        };
      }
      class Si {
        constructor() {
          this._map = new Map();
        }
        get(h) {
          return this._map.get(h) || [];
        }
        append(h, p) {
          let S = this._map.get(h);
          S || this._map.set(h, (S = [])), S.push(...p);
        }
        has(h) {
          return this._map.has(h);
        }
        clear() {
          this._map.clear();
        }
      }
      const or = new RegExp(':enter', 'g'),
        ki = new RegExp(':leave', 'g');
      function Zi(
        B,
        h,
        p,
        S,
        V,
        q = new Map(),
        xe = new Map(),
        Me,
        Xe,
        gt = [],
      ) {
        return new vr().buildKeyframes(B, h, p, S, V, q, xe, Me, Xe, gt);
      }
      class vr {
        buildKeyframes(h, p, S, V, q, xe, Me, Xe, gt, Zt = []) {
          gt = gt || new Si();
          const zt = new Ln(h, p, gt, V, q, Zt, []);
          zt.options = Xe;
          const Cn = Xe.delay ? F(Xe.delay) : 0;
          zt.currentTimeline.delayNextStep(Cn),
            zt.currentTimeline.setStyles([xe], null, zt.errors, Xe),
            kn(this, S, zt);
          const sn = zt.timelines.filter(fn => fn.containsAnimation());
          if (sn.length && Me.size) {
            let fn;
            for (let xn = sn.length - 1; xn >= 0; xn--) {
              const Hn = sn[xn];
              if (Hn.element === p) {
                fn = Hn;
                break;
              }
            }
            fn &&
              !fn.allowOnlyTimelineStyles() &&
              fn.setStyles([Me], null, zt.errors, Xe);
          }
          return sn.length
            ? sn.map(fn => fn.buildKeyframes())
            : [er(p, [], [], [], 0, Cn, '', !1)];
        }
        visitTrigger(h, p) {}
        visitState(h, p) {}
        visitTransition(h, p) {}
        visitAnimateChild(h, p) {
          const S = p.subInstructions.get(p.element);
          if (S) {
            const V = p.createSubContext(h.options),
              q = p.currentTimeline.currentTime,
              xe = this._visitSubInstructions(S, V, V.options);
            q != xe && p.transformIntoNewTimeline(xe);
          }
          p.previousNode = h;
        }
        visitAnimateRef(h, p) {
          const S = p.createSubContext(h.options);
          S.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [h.options, h.animation.options],
              p,
              S,
            ),
            this.visitReference(h.animation, S),
            p.transformIntoNewTimeline(S.currentTimeline.currentTime),
            (p.previousNode = h);
        }
        _applyAnimationRefDelays(h, p, S) {
          for (const V of h) {
            const q = V?.delay;
            if (q) {
              const xe =
                'number' == typeof q ? q : F(qt(q, V?.params ?? {}, p.errors));
              S.delayNextStep(xe);
            }
          }
        }
        _visitSubInstructions(h, p, S) {
          let q = p.currentTimeline.currentTime;
          const xe = null != S.duration ? F(S.duration) : null,
            Me = null != S.delay ? F(S.delay) : null;
          return (
            0 !== xe &&
              h.forEach(Xe => {
                const gt = p.appendInstructionToTimeline(Xe, xe, Me);
                q = Math.max(q, gt.duration + gt.delay);
              }),
            q
          );
        }
        visitReference(h, p) {
          p.updateOptions(h.options, !0),
            kn(this, h.animation, p),
            (p.previousNode = h);
        }
        visitSequence(h, p) {
          const S = p.subContextCount;
          let V = p;
          const q = h.options;
          if (
            q &&
            (q.params || q.delay) &&
            ((V = p.createSubContext(q)),
            V.transformIntoNewTimeline(),
            null != q.delay)
          ) {
            6 == V.previousNode.type &&
              (V.currentTimeline.snapshotCurrentStyles(),
              (V.previousNode = Ci));
            const xe = F(q.delay);
            V.delayNextStep(xe);
          }
          h.steps.length &&
            (h.steps.forEach(xe => kn(this, xe, V)),
            V.currentTimeline.applyStylesToKeyframe(),
            V.subContextCount > S && V.transformIntoNewTimeline()),
            (p.previousNode = h);
        }
        visitGroup(h, p) {
          const S = [];
          let V = p.currentTimeline.currentTime;
          const q = h.options && h.options.delay ? F(h.options.delay) : 0;
          h.steps.forEach(xe => {
            const Me = p.createSubContext(h.options);
            q && Me.delayNextStep(q),
              kn(this, xe, Me),
              (V = Math.max(V, Me.currentTimeline.currentTime)),
              S.push(Me.currentTimeline);
          }),
            S.forEach(xe => p.currentTimeline.mergeTimelineCollectedStyles(xe)),
            p.transformIntoNewTimeline(V),
            (p.previousNode = h);
        }
        _visitTiming(h, p) {
          if (h.dynamic) {
            const S = h.strValue;
            return M(p.params ? qt(S, p.params, p.errors) : S, p.errors);
          }
          return { duration: h.duration, delay: h.delay, easing: h.easing };
        }
        visitAnimate(h, p) {
          const S = (p.currentAnimateTimings = this._visitTiming(h.timings, p)),
            V = p.currentTimeline;
          S.delay && (p.incrementTime(S.delay), V.snapshotCurrentStyles());
          const q = h.style;
          5 == q.type
            ? this.visitKeyframes(q, p)
            : (p.incrementTime(S.duration),
              this.visitStyle(q, p),
              V.applyStylesToKeyframe()),
            (p.currentAnimateTimings = null),
            (p.previousNode = h);
        }
        visitStyle(h, p) {
          const S = p.currentTimeline,
            V = p.currentAnimateTimings;
          !V && S.hasCurrentStyleProperties() && S.forwardFrame();
          const q = (V && V.easing) || h.easing;
          h.isEmptyStep
            ? S.applyEmptyStep(q)
            : S.setStyles(h.styles, q, p.errors, p.options),
            (p.previousNode = h);
        }
        visitKeyframes(h, p) {
          const S = p.currentAnimateTimings,
            V = p.currentTimeline.duration,
            q = S.duration,
            Me = p.createSubContext().currentTimeline;
          (Me.easing = S.easing),
            h.styles.forEach(Xe => {
              Me.forwardTime((Xe.offset || 0) * q),
                Me.setStyles(Xe.styles, Xe.easing, p.errors, p.options),
                Me.applyStylesToKeyframe();
            }),
            p.currentTimeline.mergeTimelineCollectedStyles(Me),
            p.transformIntoNewTimeline(V + q),
            (p.previousNode = h);
        }
        visitQuery(h, p) {
          const S = p.currentTimeline.currentTime,
            V = h.options || {},
            q = V.delay ? F(V.delay) : 0;
          q &&
            (6 === p.previousNode.type ||
              (0 == S && p.currentTimeline.hasCurrentStyleProperties())) &&
            (p.currentTimeline.snapshotCurrentStyles(), (p.previousNode = Ci));
          let xe = S;
          const Me = p.invokeQuery(
            h.selector,
            h.originalSelector,
            h.limit,
            h.includeSelf,
            !!V.optional,
            p.errors,
          );
          p.currentQueryTotal = Me.length;
          let Xe = null;
          Me.forEach((gt, Zt) => {
            p.currentQueryIndex = Zt;
            const zt = p.createSubContext(h.options, gt);
            q && zt.delayNextStep(q),
              gt === p.element && (Xe = zt.currentTimeline),
              kn(this, h.animation, zt),
              zt.currentTimeline.applyStylesToKeyframe(),
              (xe = Math.max(xe, zt.currentTimeline.currentTime));
          }),
            (p.currentQueryIndex = 0),
            (p.currentQueryTotal = 0),
            p.transformIntoNewTimeline(xe),
            Xe &&
              (p.currentTimeline.mergeTimelineCollectedStyles(Xe),
              p.currentTimeline.snapshotCurrentStyles()),
            (p.previousNode = h);
        }
        visitStagger(h, p) {
          const S = p.parentContext,
            V = p.currentTimeline,
            q = h.timings,
            xe = Math.abs(q.duration),
            Me = xe * (p.currentQueryTotal - 1);
          let Xe = xe * p.currentQueryIndex;
          switch (q.duration < 0 ? 'reverse' : q.easing) {
            case 'reverse':
              Xe = Me - Xe;
              break;
            case 'full':
              Xe = S.currentStaggerTime;
          }
          const Zt = p.currentTimeline;
          Xe && Zt.delayNextStep(Xe);
          const zt = Zt.currentTime;
          kn(this, h.animation, p),
            (p.previousNode = h),
            (S.currentStaggerTime =
              V.currentTime - zt + (V.startTime - S.currentTimeline.startTime));
        }
      }
      const Ci = {};
      class Ln {
        constructor(h, p, S, V, q, xe, Me, Xe) {
          (this._driver = h),
            (this.element = p),
            (this.subInstructions = S),
            (this._enterClassName = V),
            (this._leaveClassName = q),
            (this.errors = xe),
            (this.timelines = Me),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Ci),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = Xe || new Ti(this._driver, p, 0)),
            Me.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(h, p) {
          if (!h) return;
          const S = h;
          let V = this.options;
          null != S.duration && (V.duration = F(S.duration)),
            null != S.delay && (V.delay = F(S.delay));
          const q = S.params;
          if (q) {
            let xe = V.params;
            xe || (xe = this.options.params = {}),
              Object.keys(q).forEach(Me => {
                (!p || !xe.hasOwnProperty(Me)) &&
                  (xe[Me] = qt(q[Me], xe, this.errors));
              });
          }
        }
        _copyOptions() {
          const h = {};
          if (this.options) {
            const p = this.options.params;
            if (p) {
              const S = (h.params = {});
              Object.keys(p).forEach(V => {
                S[V] = p[V];
              });
            }
          }
          return h;
        }
        createSubContext(h = null, p, S) {
          const V = p || this.element,
            q = new Ln(
              this._driver,
              V,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(V, S || 0),
            );
          return (
            (q.previousNode = this.previousNode),
            (q.currentAnimateTimings = this.currentAnimateTimings),
            (q.options = this._copyOptions()),
            q.updateOptions(h),
            (q.currentQueryIndex = this.currentQueryIndex),
            (q.currentQueryTotal = this.currentQueryTotal),
            (q.parentContext = this),
            this.subContextCount++,
            q
          );
        }
        transformIntoNewTimeline(h) {
          return (
            (this.previousNode = Ci),
            (this.currentTimeline = this.currentTimeline.fork(this.element, h)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(h, p, S) {
          const V = {
              duration: p ?? h.duration,
              delay: this.currentTimeline.currentTime + (S ?? 0) + h.delay,
              easing: '',
            },
            q = new J(
              this._driver,
              h.element,
              h.keyframes,
              h.preStyleProps,
              h.postStyleProps,
              V,
              h.stretchStartingKeyframe,
            );
          return this.timelines.push(q), V;
        }
        incrementTime(h) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + h);
        }
        delayNextStep(h) {
          h > 0 && this.currentTimeline.delayNextStep(h);
        }
        invokeQuery(h, p, S, V, q, xe) {
          let Me = [];
          if ((V && Me.push(this.element), h.length > 0)) {
            h = (h = h.replace(or, '.' + this._enterClassName)).replace(
              ki,
              '.' + this._leaveClassName,
            );
            let gt = this._driver.query(this.element, h, 1 != S);
            0 !== S &&
              (gt =
                S < 0 ? gt.slice(gt.length + S, gt.length) : gt.slice(0, S)),
              Me.push(...gt);
          }
          return (
            !q &&
              0 == Me.length &&
              xe.push(
                (function we(B) {
                  return new x.vHH(3014, !1);
                })(),
              ),
            Me
          );
        }
      }
      class Ti {
        constructor(h, p, S, V) {
          (this._driver = h),
            (this.element = p),
            (this.startTime = S),
            (this._elementTimelineStylesLookup = V),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(p)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                p,
                this._localTimelineStyles,
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(h) {
          const p = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || p
            ? (this.forwardTime(this.currentTime + h),
              p && this.snapshotCurrentStyles())
            : (this.startTime += h);
        }
        fork(h, p) {
          return (
            this.applyStylesToKeyframe(),
            new Ti(
              this._driver,
              h,
              p || this.currentTime,
              this._elementTimelineStylesLookup,
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(h) {
          this.applyStylesToKeyframe(),
            (this.duration = h),
            this._loadKeyframe();
        }
        _updateStyle(h, p) {
          this._localTimelineStyles.set(h, p),
            this._globalTimelineStyles.set(h, p),
            this._styleSummary.set(h, { time: this.currentTime, value: p });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(h) {
          h && this._previousKeyframe.set('easing', h);
          for (let [p, S] of this._globalTimelineStyles)
            this._backFill.set(p, S || te.l3),
              this._currentKeyframe.set(p, te.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(h, p, S, V) {
          p && this._previousKeyframe.set('easing', p);
          const q = (V && V.params) || {},
            xe = (function Se(B, h) {
              const p = new Map();
              let S;
              return (
                B.forEach(V => {
                  if ('*' === V) {
                    S = S || h.keys();
                    for (let q of S) p.set(q, te.l3);
                  } else Je(V, p);
                }),
                p
              );
            })(h, this._globalTimelineStyles);
          for (let [Me, Xe] of xe) {
            const gt = qt(Xe, q, S);
            this._pendingStyles.set(Me, gt),
              this._localTimelineStyles.has(Me) ||
                this._backFill.set(
                  Me,
                  this._globalTimelineStyles.get(Me) ?? te.l3,
                ),
              this._updateStyle(Me, gt);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((h, p) => {
              this._currentKeyframe.set(p, h);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((h, p) => {
              this._currentKeyframe.has(p) || this._currentKeyframe.set(p, h);
            }));
        }
        snapshotCurrentStyles() {
          for (let [h, p] of this._localTimelineStyles)
            this._pendingStyles.set(h, p), this._updateStyle(h, p);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const h = [];
          for (let p in this._currentKeyframe) h.push(p);
          return h;
        }
        mergeTimelineCollectedStyles(h) {
          h._styleSummary.forEach((p, S) => {
            const V = this._styleSummary.get(S);
            (!V || p.time > V.time) && this._updateStyle(S, p.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const h = new Set(),
            p = new Set(),
            S = 1 === this._keyframes.size && 0 === this.duration;
          let V = [];
          this._keyframes.forEach((Me, Xe) => {
            const gt = Je(Me, new Map(), this._backFill);
            gt.forEach((Zt, zt) => {
              Zt === te.k1 ? h.add(zt) : Zt === te.l3 && p.add(zt);
            }),
              S || gt.set('offset', Xe / this.duration),
              V.push(gt);
          });
          const q = h.size ? Dn(h.values()) : [],
            xe = p.size ? Dn(p.values()) : [];
          if (S) {
            const Me = V[0],
              Xe = new Map(Me);
            Me.set('offset', 0), Xe.set('offset', 1), (V = [Me, Xe]);
          }
          return er(
            this.element,
            V,
            q,
            xe,
            this.duration,
            this.startTime,
            this.easing,
            !1,
          );
        }
      }
      class J extends Ti {
        constructor(h, p, S, V, q, xe, Me = !1) {
          super(h, p, xe.delay),
            (this.keyframes = S),
            (this.preStyleProps = V),
            (this.postStyleProps = q),
            (this._stretchStartingKeyframe = Me),
            (this.timings = {
              duration: xe.duration,
              delay: xe.delay,
              easing: xe.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let h = this.keyframes,
            { delay: p, duration: S, easing: V } = this.timings;
          if (this._stretchStartingKeyframe && p) {
            const q = [],
              xe = S + p,
              Me = p / xe,
              Xe = Je(h[0]);
            Xe.set('offset', 0), q.push(Xe);
            const gt = Je(h[0]);
            gt.set('offset', Ye(Me)), q.push(gt);
            const Zt = h.length - 1;
            for (let zt = 1; zt <= Zt; zt++) {
              let Cn = Je(h[zt]);
              const sn = Cn.get('offset');
              Cn.set('offset', Ye((p + sn * S) / xe)), q.push(Cn);
            }
            (S = xe), (p = 0), (V = ''), (h = q);
          }
          return er(
            this.element,
            h,
            this.preStyleProps,
            this.postStyleProps,
            S,
            p,
            V,
            !0,
          );
        }
      }
      function Ye(B, h = 3) {
        const p = Math.pow(10, h - 1);
        return Math.round(B * p) / p;
      }
      class It {}
      const un = new Set([
        'width',
        'height',
        'minWidth',
        'minHeight',
        'maxWidth',
        'maxHeight',
        'left',
        'top',
        'bottom',
        'right',
        'fontSize',
        'outlineWidth',
        'outlineOffset',
        'paddingTop',
        'paddingLeft',
        'paddingBottom',
        'paddingRight',
        'marginTop',
        'marginLeft',
        'marginBottom',
        'marginRight',
        'borderRadius',
        'borderWidth',
        'borderTopWidth',
        'borderLeftWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'textIndent',
        'perspective',
      ]);
      class bn extends It {
        normalizePropertyName(h, p) {
          return wi(h);
        }
        normalizeStyleValue(h, p, S, V) {
          let q = '';
          const xe = S.toString().trim();
          if (un.has(p) && 0 !== S && '0' !== S)
            if ('number' == typeof S) q = 'px';
            else {
              const Me = S.match(/^[+-]?[\d\.]+([a-z]*)$/);
              Me &&
                0 == Me[1].length &&
                V.push(
                  (function Ve(B, h) {
                    return new x.vHH(3005, !1);
                  })(),
                );
            }
          return xe + q;
        }
      }
      function On(B, h, p, S, V, q, xe, Me, Xe, gt, Zt, zt, Cn) {
        return {
          type: 0,
          element: B,
          triggerName: h,
          isRemovalTransition: V,
          fromState: p,
          fromStyles: q,
          toState: S,
          toStyles: xe,
          timelines: Me,
          queriedElements: Xe,
          preStyleProps: gt,
          postStyleProps: Zt,
          totalTime: zt,
          errors: Cn,
        };
      }
      const ei = {};
      class Rn {
        constructor(h, p, S) {
          (this._triggerName = h), (this.ast = p), (this._stateStyles = S);
        }
        match(h, p, S, V) {
          return (function Rr(B, h, p, S, V) {
            return B.some(q => q(h, p, S, V));
          })(this.ast.matchers, h, p, S, V);
        }
        buildStyles(h, p, S) {
          let V = this._stateStyles.get('*');
          return (
            void 0 !== h && (V = this._stateStyles.get(h?.toString()) || V),
            V ? V.buildStyles(p, S) : new Map()
          );
        }
        build(h, p, S, V, q, xe, Me, Xe, gt, Zt) {
          const zt = [],
            Cn = (this.ast.options && this.ast.options.params) || ei,
            fn = this.buildStyles(S, (Me && Me.params) || ei, zt),
            xn = (Xe && Xe.params) || ei,
            Hn = this.buildStyles(V, xn, zt),
            Jn = new Set(),
            bi = new Map(),
            Ui = new Map(),
            ii = 'void' === V,
            Sr = { params: br(xn, Cn), delay: this.ast.options?.delay },
            Gi = Zt
              ? []
              : Zi(h, p, this.ast.animation, q, xe, fn, Hn, Sr, gt, zt);
          let y = 0;
          if (
            (Gi.forEach(A => {
              y = Math.max(A.duration + A.delay, y);
            }),
            zt.length)
          )
            return On(
              p,
              this._triggerName,
              S,
              V,
              ii,
              fn,
              Hn,
              [],
              [],
              bi,
              Ui,
              y,
              zt,
            );
          Gi.forEach(A => {
            const j = A.element,
              ce = mn(bi, j, new Set());
            A.preStyleProps.forEach(yt => ce.add(yt));
            const it = mn(Ui, j, new Set());
            A.postStyleProps.forEach(yt => it.add(yt)), j !== p && Jn.add(j);
          });
          const P = Dn(Jn.values());
          return On(p, this._triggerName, S, V, ii, fn, Hn, Gi, P, bi, Ui, y);
        }
      }
      function br(B, h) {
        const p = Q(h);
        for (const S in B) B.hasOwnProperty(S) && null != B[S] && (p[S] = B[S]);
        return p;
      }
      class yr {
        constructor(h, p, S) {
          (this.styles = h), (this.defaultParams = p), (this.normalizer = S);
        }
        buildStyles(h, p) {
          const S = new Map(),
            V = Q(this.defaultParams);
          return (
            Object.keys(h).forEach(q => {
              const xe = h[q];
              null !== xe && (V[q] = xe);
            }),
            this.styles.styles.forEach(q => {
              'string' != typeof q &&
                q.forEach((xe, Me) => {
                  xe && (xe = qt(xe, V, p));
                  const Xe = this.normalizer.normalizePropertyName(Me, p);
                  (xe = this.normalizer.normalizeStyleValue(Me, Xe, xe, p)),
                    S.set(Me, xe);
                });
            }),
            S
          );
        }
      }
      class jr {
        constructor(h, p, S) {
          (this.name = h),
            (this.ast = p),
            (this._normalizer = S),
            (this.transitionFactories = []),
            (this.states = new Map()),
            p.states.forEach(V => {
              this.states.set(
                V.name,
                new yr(V.style, (V.options && V.options.params) || {}, S),
              );
            }),
            sr(this.states, 'true', '1'),
            sr(this.states, 'false', '0'),
            p.transitions.forEach(V => {
              this.transitionFactories.push(new Rn(h, V, this.states));
            }),
            (this.fallbackTransition = (function to(B, h, p) {
              return new Rn(
                B,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(xe, Me) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                h,
              );
            })(h, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(h, p, S, V) {
          return (
            this.transitionFactories.find(xe => xe.match(h, p, S, V)) || null
          );
        }
        matchStyles(h, p, S) {
          return this.fallbackTransition.buildStyles(h, p, S);
        }
      }
      function sr(B, h, p) {
        B.has(h)
          ? B.has(p) || B.set(p, B.get(h))
          : B.has(p) && B.set(h, B.get(p));
      }
      const fo = new Si();
      class no {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(h, p) {
          const S = [],
            V = [],
            q = li(this._driver, p, S, V);
          if (S.length)
            throw (function $e(B) {
              return new x.vHH(3503, !1);
            })();
          this._animations.set(h, q);
        }
        _buildPlayer(h, p, S) {
          const V = h.element,
            q = ft(0, this._normalizer, 0, h.keyframes, p, S);
          return this._driver.animate(
            V,
            q,
            h.duration,
            h.delay,
            h.easing,
            [],
            !0,
          );
        }
        create(h, p, S = {}) {
          const V = [],
            q = this._animations.get(h);
          let xe;
          const Me = new Map();
          if (
            (q
              ? ((xe = Zi(
                  this._driver,
                  p,
                  q,
                  wn,
                  Ie,
                  new Map(),
                  new Map(),
                  S,
                  fo,
                  V,
                )),
                xe.forEach(Zt => {
                  const zt = mn(Me, Zt.element, new Map());
                  Zt.postStyleProps.forEach(Cn => zt.set(Cn, null));
                }))
              : (V.push(
                  (function He() {
                    return new x.vHH(3300, !1);
                  })(),
                ),
                (xe = [])),
            V.length)
          )
            throw (function De(B) {
              return new x.vHH(3504, !1);
            })();
          Me.forEach((Zt, zt) => {
            Zt.forEach((Cn, sn) => {
              Zt.set(sn, this._driver.computeStyle(zt, sn, te.l3));
            });
          });
          const gt = rt(
            xe.map(Zt => {
              const zt = Me.get(Zt.element);
              return this._buildPlayer(Zt, new Map(), zt);
            }),
          );
          return (
            this._playersById.set(h, gt),
            gt.onDestroy(() => this.destroy(h)),
            this.players.push(gt),
            gt
          );
        }
        destroy(h) {
          const p = this._getPlayer(h);
          p.destroy(), this._playersById.delete(h);
          const S = this.players.indexOf(p);
          S >= 0 && this.players.splice(S, 1);
        }
        _getPlayer(h) {
          const p = this._playersById.get(h);
          if (!p)
            throw (function je(B) {
              return new x.vHH(3301, !1);
            })();
          return p;
        }
        listen(h, p, S, V) {
          const q = ln(p, '', '', '');
          return Et(this._getPlayer(h), S, q, V), () => {};
        }
        command(h, p, S, V) {
          if ('register' == S) return void this.register(h, V[0]);
          if ('create' == S) return void this.create(h, p, V[0] || {});
          const q = this._getPlayer(h);
          switch (S) {
            case 'play':
              q.play();
              break;
            case 'pause':
              q.pause();
              break;
            case 'reset':
              q.reset();
              break;
            case 'restart':
              q.restart();
              break;
            case 'finish':
              q.finish();
              break;
            case 'init':
              q.init();
              break;
            case 'setPosition':
              q.setPosition(parseFloat(V[0]));
              break;
            case 'destroy':
              this.destroy(h);
          }
        }
      }
      const Ao = 'ng-animate-queued',
        Pr = 'ng-animate-disabled',
        io = [],
        Dr = {
          namespaceId: '',
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        $i = {
          namespaceId: '',
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        xi = '__ng_removed';
      class Cr {
        get params() {
          return this.options.params;
        }
        constructor(h, p = '') {
          this.namespaceId = p;
          const S = h && h.hasOwnProperty('value');
          if (
            ((this.value = (function Io(B) {
              return B ?? null;
            })(S ? h.value : h)),
            S)
          ) {
            const q = Q(h);
            delete q.value, (this.options = q);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(h) {
          const p = h.params;
          if (p) {
            const S = this.options.params;
            Object.keys(p).forEach(V => {
              null == S[V] && (S[V] = p[V]);
            });
          }
        }
      }
      const xr = 'void',
        ro = new Cr(xr);
      class $r {
        constructor(h, p, S) {
          (this.id = h),
            (this.hostElement = p),
            (this._engine = S),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + h),
            pi(p, this._hostClassName);
        }
        listen(h, p, S, V) {
          if (!this._triggers.has(p))
            throw (function Ce(B, h) {
              return new x.vHH(3302, !1);
            })();
          if (null == S || 0 == S.length)
            throw (function Re(B) {
              return new x.vHH(3303, !1);
            })();
          if (
            !(function Oi(B) {
              return 'start' == B || 'done' == B;
            })(S)
          )
            throw (function Ne(B, h) {
              return new x.vHH(3400, !1);
            })();
          const q = mn(this._elementListeners, h, []),
            xe = { name: p, phase: S, callback: V };
          q.push(xe);
          const Me = mn(this._engine.statesByElement, h, new Map());
          return (
            Me.has(p) || (pi(h, Dt), pi(h, Dt + '-' + p), Me.set(p, ro)),
            () => {
              this._engine.afterFlush(() => {
                const Xe = q.indexOf(xe);
                Xe >= 0 && q.splice(Xe, 1),
                  this._triggers.has(p) || Me.delete(p);
              });
            }
          );
        }
        register(h, p) {
          return !this._triggers.has(h) && (this._triggers.set(h, p), !0);
        }
        _getTrigger(h) {
          const p = this._triggers.get(h);
          if (!p)
            throw (function Ge(B) {
              return new x.vHH(3401, !1);
            })();
          return p;
        }
        trigger(h, p, S, V = !0) {
          const q = this._getTrigger(p),
            xe = new oo(this.id, p, h);
          let Me = this._engine.statesByElement.get(h);
          Me ||
            (pi(h, Dt),
            pi(h, Dt + '-' + p),
            this._engine.statesByElement.set(h, (Me = new Map())));
          let Xe = Me.get(p);
          const gt = new Cr(S, this.id);
          if (
            (!(S && S.hasOwnProperty('value')) &&
              Xe &&
              gt.absorbOptions(Xe.options),
            Me.set(p, gt),
            Xe || (Xe = ro),
            gt.value !== xr && Xe.value === gt.value)
          ) {
            if (
              !(function Er(B, h) {
                const p = Object.keys(B),
                  S = Object.keys(h);
                if (p.length != S.length) return !1;
                for (let V = 0; V < p.length; V++) {
                  const q = p[V];
                  if (!h.hasOwnProperty(q) || B[q] !== h[q]) return !1;
                }
                return !0;
              })(Xe.params, gt.params)
            ) {
              const xn = [],
                Hn = q.matchStyles(Xe.value, Xe.params, xn),
                Jn = q.matchStyles(gt.value, gt.params, xn);
              xn.length
                ? this._engine.reportError(xn)
                : this._engine.afterFlush(() => {
                    be(h, Hn), Oe(h, Jn);
                  });
            }
            return;
          }
          const Cn = mn(this._engine.playersByElement, h, []);
          Cn.forEach(xn => {
            xn.namespaceId == this.id &&
              xn.triggerName == p &&
              xn.queued &&
              xn.destroy();
          });
          let sn = q.matchTransition(Xe.value, gt.value, h, gt.params),
            fn = !1;
          if (!sn) {
            if (!V) return;
            (sn = q.fallbackTransition), (fn = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: h,
              triggerName: p,
              transition: sn,
              fromState: Xe,
              toState: gt,
              player: xe,
              isFallbackTransition: fn,
            }),
            fn ||
              (pi(h, Ao),
              xe.onStart(() => {
                zn(h, Ao);
              })),
            xe.onDone(() => {
              let xn = this.players.indexOf(xe);
              xn >= 0 && this.players.splice(xn, 1);
              const Hn = this._engine.playersByElement.get(h);
              if (Hn) {
                let Jn = Hn.indexOf(xe);
                Jn >= 0 && Hn.splice(Jn, 1);
              }
            }),
            this.players.push(xe),
            Cn.push(xe),
            xe
          );
        }
        deregister(h) {
          this._triggers.delete(h),
            this._engine.statesByElement.forEach(p => p.delete(h)),
            this._elementListeners.forEach((p, S) => {
              this._elementListeners.set(
                S,
                p.filter(V => V.name != h),
              );
            });
        }
        clearElementCache(h) {
          this._engine.statesByElement.delete(h),
            this._elementListeners.delete(h);
          const p = this._engine.playersByElement.get(h);
          p &&
            (p.forEach(S => S.destroy()),
            this._engine.playersByElement.delete(h));
        }
        _signalRemovalForInnerTriggers(h, p) {
          const S = this._engine.driver.query(h, et, !0);
          S.forEach(V => {
            if (V[xi]) return;
            const q = this._engine.fetchNamespacesByElement(V);
            q.size
              ? q.forEach(xe => xe.triggerLeaveAnimation(V, p, !1, !0))
              : this.clearElementCache(V);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              S.forEach(V => this.clearElementCache(V)),
            );
        }
        triggerLeaveAnimation(h, p, S, V) {
          const q = this._engine.statesByElement.get(h),
            xe = new Map();
          if (q) {
            const Me = [];
            if (
              (q.forEach((Xe, gt) => {
                if ((xe.set(gt, Xe.value), this._triggers.has(gt))) {
                  const Zt = this.trigger(h, gt, xr, V);
                  Zt && Me.push(Zt);
                }
              }),
              Me.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, h, !0, p, xe),
                S && rt(Me).onDone(() => this._engine.processLeaveNode(h)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(h) {
          const p = this._elementListeners.get(h),
            S = this._engine.statesByElement.get(h);
          if (p && S) {
            const V = new Set();
            p.forEach(q => {
              const xe = q.name;
              if (V.has(xe)) return;
              V.add(xe);
              const Xe = this._triggers.get(xe).fallbackTransition,
                gt = S.get(xe) || ro,
                Zt = new Cr(xr),
                zt = new oo(this.id, xe, h);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: h,
                  triggerName: xe,
                  transition: Xe,
                  fromState: gt,
                  toState: Zt,
                  player: zt,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(h, p) {
          const S = this._engine;
          if (
            (h.childElementCount && this._signalRemovalForInnerTriggers(h, p),
            this.triggerLeaveAnimation(h, p, !0))
          )
            return;
          let V = !1;
          if (S.totalAnimations) {
            const q = S.players.length ? S.playersByQueriedElement.get(h) : [];
            if (q && q.length) V = !0;
            else {
              let xe = h;
              for (; (xe = xe.parentNode); )
                if (S.statesByElement.get(xe)) {
                  V = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(h), V))
            S.markElementAsRemoved(this.id, h, !1, p);
          else {
            const q = h[xi];
            (!q || q === Dr) &&
              (S.afterFlush(() => this.clearElementCache(h)),
              S.destroyInnerAnimations(h),
              S._onRemovalComplete(h, p));
          }
        }
        insertNode(h, p) {
          pi(h, this._hostClassName);
        }
        drainQueuedTransitions(h) {
          const p = [];
          return (
            this._queue.forEach(S => {
              const V = S.player;
              if (V.destroyed) return;
              const q = S.element,
                xe = this._elementListeners.get(q);
              xe &&
                xe.forEach(Me => {
                  if (Me.name == S.triggerName) {
                    const Xe = ln(
                      q,
                      S.triggerName,
                      S.fromState.value,
                      S.toState.value,
                    );
                    (Xe._data = h), Et(S.player, Me.phase, Xe, Me.callback);
                  }
                }),
                V.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      V.destroy();
                    })
                  : p.push(S);
            }),
            (this._queue = []),
            p.sort((S, V) => {
              const q = S.transition.ast.depCount,
                xe = V.transition.ast.depCount;
              return 0 == q || 0 == xe
                ? q - xe
                : this._engine.driver.containsElement(S.element, V.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(h) {
          this.players.forEach(p => p.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, h);
        }
        elementContainsData(h) {
          let p = !1;
          return (
            this._elementListeners.has(h) && (p = !0),
            (p = !!this._queue.find(S => S.element === h) || p),
            p
          );
        }
      }
      class ar {
        _onRemovalComplete(h, p) {
          this.onRemovalComplete(h, p);
        }
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this.driver = p),
            (this._normalizer = S),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (V, q) => {});
        }
        get queuedPlayers() {
          const h = [];
          return (
            this._namespaceList.forEach(p => {
              p.players.forEach(S => {
                S.queued && h.push(S);
              });
            }),
            h
          );
        }
        createNamespace(h, p) {
          const S = new $r(h, p, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, p)
              ? this._balanceNamespaceList(S, p)
              : (this.newHostElements.set(p, S), this.collectEnterElement(p)),
            (this._namespaceLookup[h] = S)
          );
        }
        _balanceNamespaceList(h, p) {
          const S = this._namespaceList,
            V = this.namespacesByHostElement;
          if (S.length - 1 >= 0) {
            let xe = !1,
              Me = this.driver.getParentElement(p);
            for (; Me; ) {
              const Xe = V.get(Me);
              if (Xe) {
                const gt = S.indexOf(Xe);
                S.splice(gt + 1, 0, h), (xe = !0);
                break;
              }
              Me = this.driver.getParentElement(Me);
            }
            xe || S.unshift(h);
          } else S.push(h);
          return V.set(p, h), h;
        }
        register(h, p) {
          let S = this._namespaceLookup[h];
          return S || (S = this.createNamespace(h, p)), S;
        }
        registerTrigger(h, p, S) {
          let V = this._namespaceLookup[h];
          V && V.register(p, S) && this.totalAnimations++;
        }
        destroy(h, p) {
          if (!h) return;
          const S = this._fetchNamespace(h);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(S.hostElement),
              delete this._namespaceLookup[h];
            const V = this._namespaceList.indexOf(S);
            V >= 0 && this._namespaceList.splice(V, 1);
          }),
            this.afterFlushAnimationsDone(() => S.destroy(p));
        }
        _fetchNamespace(h) {
          return this._namespaceLookup[h];
        }
        fetchNamespacesByElement(h) {
          const p = new Set(),
            S = this.statesByElement.get(h);
          if (S)
            for (let V of S.values())
              if (V.namespaceId) {
                const q = this._fetchNamespace(V.namespaceId);
                q && p.add(q);
              }
          return p;
        }
        trigger(h, p, S, V) {
          if (Lr(p)) {
            const q = this._fetchNamespace(h);
            if (q) return q.trigger(p, S, V), !0;
          }
          return !1;
        }
        insertNode(h, p, S, V) {
          if (!Lr(p)) return;
          const q = p[xi];
          if (q && q.setForRemoval) {
            (q.setForRemoval = !1), (q.setForMove = !0);
            const xe = this.collectedLeaveElements.indexOf(p);
            xe >= 0 && this.collectedLeaveElements.splice(xe, 1);
          }
          if (h) {
            const xe = this._fetchNamespace(h);
            xe && xe.insertNode(p, S);
          }
          V && this.collectEnterElement(p);
        }
        collectEnterElement(h) {
          this.collectedEnterElements.push(h);
        }
        markElementAsDisabled(h, p) {
          p
            ? this.disabledNodes.has(h) ||
              (this.disabledNodes.add(h), pi(h, Pr))
            : this.disabledNodes.has(h) &&
              (this.disabledNodes.delete(h), zn(h, Pr));
        }
        removeNode(h, p, S, V) {
          if (Lr(p)) {
            const q = h ? this._fetchNamespace(h) : null;
            if (
              (q ? q.removeNode(p, V) : this.markElementAsRemoved(h, p, !1, V),
              S)
            ) {
              const xe = this.namespacesByHostElement.get(p);
              xe && xe.id !== h && xe.removeNode(p, V);
            }
          } else this._onRemovalComplete(p, V);
        }
        markElementAsRemoved(h, p, S, V, q) {
          this.collectedLeaveElements.push(p),
            (p[xi] = {
              namespaceId: h,
              setForRemoval: V,
              hasAnimation: S,
              removedBeforeQueried: !1,
              previousTriggersValues: q,
            });
        }
        listen(h, p, S, V, q) {
          return Lr(p) ? this._fetchNamespace(h).listen(p, S, V, q) : () => {};
        }
        _buildInstruction(h, p, S, V, q) {
          return h.transition.build(
            this.driver,
            h.element,
            h.fromState.value,
            h.toState.value,
            S,
            V,
            h.fromState.options,
            h.toState.options,
            p,
            q,
          );
        }
        destroyInnerAnimations(h) {
          let p = this.driver.query(h, et, !0);
          p.forEach(S => this.destroyActiveAnimationsForElement(S)),
            0 != this.playersByQueriedElement.size &&
              ((p = this.driver.query(h, Te, !0)),
              p.forEach(S => this.finishActiveQueriedAnimationOnElement(S)));
        }
        destroyActiveAnimationsForElement(h) {
          const p = this.playersByElement.get(h);
          p &&
            p.forEach(S => {
              S.queued ? (S.markedForDestroy = !0) : S.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(h) {
          const p = this.playersByQueriedElement.get(h);
          p && p.forEach(S => S.finish());
        }
        whenRenderingDone() {
          return new Promise(h => {
            if (this.players.length) return rt(this.players).onDone(() => h());
            h();
          });
        }
        processLeaveNode(h) {
          const p = h[xi];
          if (p && p.setForRemoval) {
            if (((h[xi] = Dr), p.namespaceId)) {
              this.destroyInnerAnimations(h);
              const S = this._fetchNamespace(p.namespaceId);
              S && S.clearElementCache(h);
            }
            this._onRemovalComplete(h, p.setForRemoval);
          }
          h.classList?.contains(Pr) && this.markElementAsDisabled(h, !1),
            this.driver.query(h, '.ng-animate-disabled', !0).forEach(S => {
              this.markElementAsDisabled(S, !1);
            });
        }
        flush(h = -1) {
          let p = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((S, V) =>
                this._balanceNamespaceList(S, V),
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let S = 0; S < this.collectedEnterElements.length; S++)
              pi(this.collectedEnterElements[S], 'ng-star-inserted');
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const S = [];
            try {
              p = this._flushAnimations(S, h);
            } finally {
              for (let V = 0; V < S.length; V++) S[V]();
            }
          } else
            for (let S = 0; S < this.collectedLeaveElements.length; S++)
              this.processLeaveNode(this.collectedLeaveElements[S]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach(S => S()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const S = this._whenQuietFns;
            (this._whenQuietFns = []),
              p.length
                ? rt(p).onDone(() => {
                    S.forEach(V => V());
                  })
                : S.forEach(V => V());
          }
        }
        reportError(h) {
          throw (function ct(B) {
            return new x.vHH(3402, !1);
          })();
        }
        _flushAnimations(h, p) {
          const S = new Si(),
            V = [],
            q = new Map(),
            xe = [],
            Me = new Map(),
            Xe = new Map(),
            gt = new Map(),
            Zt = new Set();
          this.disabledNodes.forEach(Nt => {
            Zt.add(Nt);
            const Yt = this.driver.query(Nt, '.ng-animate-queued', !0);
            for (let $t = 0; $t < Yt.length; $t++) Zt.add(Yt[$t]);
          });
          const zt = this.bodyNode,
            Cn = Array.from(this.statesByElement.keys()),
            sn = oi(Cn, this.collectedEnterElements),
            fn = new Map();
          let xn = 0;
          sn.forEach((Nt, Yt) => {
            const $t = wn + xn++;
            fn.set(Yt, $t), Nt.forEach(pn => pi(pn, $t));
          });
          const Hn = [],
            Jn = new Set(),
            bi = new Set();
          for (let Nt = 0; Nt < this.collectedLeaveElements.length; Nt++) {
            const Yt = this.collectedLeaveElements[Nt],
              $t = Yt[xi];
            $t &&
              $t.setForRemoval &&
              (Hn.push(Yt),
              Jn.add(Yt),
              $t.hasAnimation
                ? this.driver
                    .query(Yt, '.ng-star-inserted', !0)
                    .forEach(pn => Jn.add(pn))
                : bi.add(Yt));
          }
          const Ui = new Map(),
            ii = oi(Cn, Array.from(Jn));
          ii.forEach((Nt, Yt) => {
            const $t = Ie + xn++;
            Ui.set(Yt, $t), Nt.forEach(pn => pi(pn, $t));
          }),
            h.push(() => {
              sn.forEach((Nt, Yt) => {
                const $t = fn.get(Yt);
                Nt.forEach(pn => zn(pn, $t));
              }),
                ii.forEach((Nt, Yt) => {
                  const $t = Ui.get(Yt);
                  Nt.forEach(pn => zn(pn, $t));
                }),
                Hn.forEach(Nt => {
                  this.processLeaveNode(Nt);
                });
            });
          const Sr = [],
            Gi = [];
          for (let Nt = this._namespaceList.length - 1; Nt >= 0; Nt--)
            this._namespaceList[Nt].drainQueuedTransitions(p).forEach($t => {
              const pn = $t.player,
                gn = $t.element;
              if ((Sr.push(pn), this.collectedEnterElements.length)) {
                const yi = gn[xi];
                if (yi && yi.setForMove) {
                  if (
                    yi.previousTriggersValues &&
                    yi.previousTriggersValues.has($t.triggerName)
                  ) {
                    const tr = yi.previousTriggersValues.get($t.triggerName),
                      nr = this.statesByElement.get($t.element);
                    if (nr && nr.has($t.triggerName)) {
                      const _o = nr.get($t.triggerName);
                      (_o.value = tr), nr.set($t.triggerName, _o);
                    }
                  }
                  return void pn.destroy();
                }
              }
              const $n = !zt || !this.driver.containsElement(zt, gn),
                mi = Ui.get(gn),
                si = fn.get(gn),
                Bn = this._buildInstruction($t, S, si, mi, $n);
              if (Bn.errors && Bn.errors.length) return void Gi.push(Bn);
              if ($n)
                return (
                  pn.onStart(() => be(gn, Bn.fromStyles)),
                  pn.onDestroy(() => Oe(gn, Bn.toStyles)),
                  void V.push(pn)
                );
              if ($t.isFallbackTransition)
                return (
                  pn.onStart(() => be(gn, Bn.fromStyles)),
                  pn.onDestroy(() => Oe(gn, Bn.toStyles)),
                  void V.push(pn)
                );
              const Qi = [];
              Bn.timelines.forEach(yi => {
                (yi.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(yi.element) || Qi.push(yi);
              }),
                (Bn.timelines = Qi),
                S.append(gn, Bn.timelines),
                xe.push({ instruction: Bn, player: pn, element: gn }),
                Bn.queriedElements.forEach(yi => mn(Me, yi, []).push(pn)),
                Bn.preStyleProps.forEach((yi, tr) => {
                  if (yi.size) {
                    let nr = Xe.get(tr);
                    nr || Xe.set(tr, (nr = new Set())),
                      yi.forEach((_o, Ds) => nr.add(Ds));
                  }
                }),
                Bn.postStyleProps.forEach((yi, tr) => {
                  let nr = gt.get(tr);
                  nr || gt.set(tr, (nr = new Set())),
                    yi.forEach((_o, Ds) => nr.add(Ds));
                });
            });
          if (Gi.length) {
            const Nt = [];
            Gi.forEach(Yt => {
              Nt.push(
                (function Wt(B, h) {
                  return new x.vHH(3505, !1);
                })(),
              );
            }),
              Sr.forEach(Yt => Yt.destroy()),
              this.reportError(Nt);
          }
          const y = new Map(),
            P = new Map();
          xe.forEach(Nt => {
            const Yt = Nt.element;
            S.has(Yt) &&
              (P.set(Yt, Yt),
              this._beforeAnimationBuild(
                Nt.player.namespaceId,
                Nt.instruction,
                y,
              ));
          }),
            V.forEach(Nt => {
              const Yt = Nt.element;
              this._getPreviousPlayers(
                Yt,
                !1,
                Nt.namespaceId,
                Nt.triggerName,
                null,
              ).forEach(pn => {
                mn(y, Yt, []).push(pn), pn.destroy();
              });
            });
          const A = Hn.filter(Nt => Ei(Nt, Xe, gt)),
            j = new Map();
          Yr(j, this.driver, bi, gt, te.l3).forEach(Nt => {
            Ei(Nt, Xe, gt) && A.push(Nt);
          });
          const it = new Map();
          sn.forEach((Nt, Yt) => {
            Yr(it, this.driver, new Set(Nt), Xe, te.k1);
          }),
            A.forEach(Nt => {
              const Yt = j.get(Nt),
                $t = it.get(Nt);
              j.set(
                Nt,
                new Map([
                  ...Array.from(Yt?.entries() ?? []),
                  ...Array.from($t?.entries() ?? []),
                ]),
              );
            });
          const yt = [],
            tn = [],
            Vn = {};
          xe.forEach(Nt => {
            const { element: Yt, player: $t, instruction: pn } = Nt;
            if (S.has(Yt)) {
              if (Zt.has(Yt))
                return (
                  $t.onDestroy(() => Oe(Yt, pn.toStyles)),
                  ($t.disabled = !0),
                  $t.overrideTotalTime(pn.totalTime),
                  void V.push($t)
                );
              let gn = Vn;
              if (P.size > 1) {
                let mi = Yt;
                const si = [];
                for (; (mi = mi.parentNode); ) {
                  const Bn = P.get(mi);
                  if (Bn) {
                    gn = Bn;
                    break;
                  }
                  si.push(mi);
                }
                si.forEach(Bn => P.set(Bn, gn));
              }
              const $n = this._buildAnimation($t.namespaceId, pn, y, q, it, j);
              if (($t.setRealPlayer($n), gn === Vn)) yt.push($t);
              else {
                const mi = this.playersByElement.get(gn);
                mi && mi.length && ($t.parentPlayer = rt(mi)), V.push($t);
              }
            } else
              be(Yt, pn.fromStyles),
                $t.onDestroy(() => Oe(Yt, pn.toStyles)),
                tn.push($t),
                Zt.has(Yt) && V.push($t);
          }),
            tn.forEach(Nt => {
              const Yt = q.get(Nt.element);
              if (Yt && Yt.length) {
                const $t = rt(Yt);
                Nt.setRealPlayer($t);
              }
            }),
            V.forEach(Nt => {
              Nt.parentPlayer
                ? Nt.syncPlayerEvents(Nt.parentPlayer)
                : Nt.destroy();
            });
          for (let Nt = 0; Nt < Hn.length; Nt++) {
            const Yt = Hn[Nt],
              $t = Yt[xi];
            if ((zn(Yt, Ie), $t && $t.hasAnimation)) continue;
            let pn = [];
            if (Me.size) {
              let $n = Me.get(Yt);
              $n && $n.length && pn.push(...$n);
              let mi = this.driver.query(Yt, Te, !0);
              for (let si = 0; si < mi.length; si++) {
                let Bn = Me.get(mi[si]);
                Bn && Bn.length && pn.push(...Bn);
              }
            }
            const gn = pn.filter($n => !$n.destroyed);
            gn.length ? ci(this, Yt, gn) : this.processLeaveNode(Yt);
          }
          return (
            (Hn.length = 0),
            yt.forEach(Nt => {
              this.players.push(Nt),
                Nt.onDone(() => {
                  Nt.destroy();
                  const Yt = this.players.indexOf(Nt);
                  this.players.splice(Yt, 1);
                }),
                Nt.play();
            }),
            yt
          );
        }
        elementContainsData(h, p) {
          let S = !1;
          const V = p[xi];
          return (
            V && V.setForRemoval && (S = !0),
            this.playersByElement.has(p) && (S = !0),
            this.playersByQueriedElement.has(p) && (S = !0),
            this.statesByElement.has(p) && (S = !0),
            this._fetchNamespace(h).elementContainsData(p) || S
          );
        }
        afterFlush(h) {
          this._flushFns.push(h);
        }
        afterFlushAnimationsDone(h) {
          this._whenQuietFns.push(h);
        }
        _getPreviousPlayers(h, p, S, V, q) {
          let xe = [];
          if (p) {
            const Me = this.playersByQueriedElement.get(h);
            Me && (xe = Me);
          } else {
            const Me = this.playersByElement.get(h);
            if (Me) {
              const Xe = !q || q == xr;
              Me.forEach(gt => {
                gt.queued || (!Xe && gt.triggerName != V) || xe.push(gt);
              });
            }
          }
          return (
            (S || V) &&
              (xe = xe.filter(
                Me =>
                  !((S && S != Me.namespaceId) || (V && V != Me.triggerName)),
              )),
            xe
          );
        }
        _beforeAnimationBuild(h, p, S) {
          const q = p.element,
            xe = p.isRemovalTransition ? void 0 : h,
            Me = p.isRemovalTransition ? void 0 : p.triggerName;
          for (const Xe of p.timelines) {
            const gt = Xe.element,
              Zt = gt !== q,
              zt = mn(S, gt, []);
            this._getPreviousPlayers(gt, Zt, xe, Me, p.toState).forEach(sn => {
              const fn = sn.getRealPlayer();
              fn.beforeDestroy && fn.beforeDestroy(), sn.destroy(), zt.push(sn);
            });
          }
          be(q, p.fromStyles);
        }
        _buildAnimation(h, p, S, V, q, xe) {
          const Me = p.triggerName,
            Xe = p.element,
            gt = [],
            Zt = new Set(),
            zt = new Set(),
            Cn = p.timelines.map(fn => {
              const xn = fn.element;
              Zt.add(xn);
              const Hn = xn[xi];
              if (Hn && Hn.removedBeforeQueried)
                return new te.ZN(fn.duration, fn.delay);
              const Jn = xn !== Xe,
                bi = (function Gr(B) {
                  const h = [];
                  return Wr(B, h), h;
                })((S.get(xn) || io).map(y => y.getRealPlayer())).filter(
                  y => !!y.element && y.element === xn,
                ),
                Ui = q.get(xn),
                ii = xe.get(xn),
                Sr = ft(0, this._normalizer, 0, fn.keyframes, Ui, ii),
                Gi = this._buildPlayer(fn, Sr, bi);
              if ((fn.subTimeline && V && zt.add(xn), Jn)) {
                const y = new oo(h, Me, xn);
                y.setRealPlayer(Gi), gt.push(y);
              }
              return Gi;
            });
          gt.forEach(fn => {
            mn(this.playersByQueriedElement, fn.element, []).push(fn),
              fn.onDone(() =>
                (function qo(B, h, p) {
                  let S = B.get(h);
                  if (S) {
                    if (S.length) {
                      const V = S.indexOf(p);
                      S.splice(V, 1);
                    }
                    0 == S.length && B.delete(h);
                  }
                  return S;
                })(this.playersByQueriedElement, fn.element, fn),
              );
          }),
            Zt.forEach(fn => pi(fn, St));
          const sn = rt(Cn);
          return (
            sn.onDestroy(() => {
              Zt.forEach(fn => zn(fn, St)), Oe(Xe, p.toStyles);
            }),
            zt.forEach(fn => {
              mn(V, fn, []).push(sn);
            }),
            sn
          );
        }
        _buildPlayer(h, p, S) {
          return p.length > 0
            ? this.driver.animate(
                h.element,
                p,
                h.duration,
                h.delay,
                h.easing,
                S,
              )
            : new te.ZN(h.duration, h.delay);
        }
      }
      class oo {
        constructor(h, p, S) {
          (this.namespaceId = h),
            (this.triggerName = p),
            (this.element = S),
            (this._player = new te.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(h) {
          this._containsRealPlayer ||
            ((this._player = h),
            this._queuedCallbacks.forEach((p, S) => {
              p.forEach(V => Et(h, S, void 0, V));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(h.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(h) {
          this.totalTime = h;
        }
        syncPlayerEvents(h) {
          const p = this._player;
          p.triggerCallback && h.onStart(() => p.triggerCallback('start')),
            h.onDone(() => this.finish()),
            h.onDestroy(() => this.destroy());
        }
        _queueEvent(h, p) {
          mn(this._queuedCallbacks, h, []).push(p);
        }
        onDone(h) {
          this.queued && this._queueEvent('done', h), this._player.onDone(h);
        }
        onStart(h) {
          this.queued && this._queueEvent('start', h), this._player.onStart(h);
        }
        onDestroy(h) {
          this.queued && this._queueEvent('destroy', h),
            this._player.onDestroy(h);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(h) {
          this.queued || this._player.setPosition(h);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(h) {
          const p = this._player;
          p.triggerCallback && p.triggerCallback(h);
        }
      }
      function Lr(B) {
        return B && 1 === B.nodeType;
      }
      function mo(B, h) {
        const p = B.style.display;
        return (B.style.display = h ?? 'none'), p;
      }
      function Yr(B, h, p, S, V) {
        const q = [];
        p.forEach(Xe => q.push(mo(Xe)));
        const xe = [];
        S.forEach((Xe, gt) => {
          const Zt = new Map();
          Xe.forEach(zt => {
            const Cn = h.computeStyle(gt, zt, V);
            Zt.set(zt, Cn),
              (!Cn || 0 == Cn.length) && ((gt[xi] = $i), xe.push(gt));
          }),
            B.set(gt, Zt);
        });
        let Me = 0;
        return p.forEach(Xe => mo(Xe, q[Me++])), xe;
      }
      function oi(B, h) {
        const p = new Map();
        if ((B.forEach(Me => p.set(Me, [])), 0 == h.length)) return p;
        const S = 1,
          V = new Set(h),
          q = new Map();
        function xe(Me) {
          if (!Me) return S;
          let Xe = q.get(Me);
          if (Xe) return Xe;
          const gt = Me.parentNode;
          return (
            (Xe = p.has(gt) ? gt : V.has(gt) ? S : xe(gt)), q.set(Me, Xe), Xe
          );
        }
        return (
          h.forEach(Me => {
            const Xe = xe(Me);
            Xe !== S && p.get(Xe).push(Me);
          }),
          p
        );
      }
      function pi(B, h) {
        B.classList?.add(h);
      }
      function zn(B, h) {
        B.classList?.remove(h);
      }
      function ci(B, h, p) {
        rt(p).onDone(() => B.processLeaveNode(h));
      }
      function Wr(B, h) {
        for (let p = 0; p < B.length; p++) {
          const S = B[p];
          S instanceof te.ZE ? Wr(S.players, h) : h.push(S);
        }
      }
      function Ei(B, h, p) {
        const S = p.get(B);
        if (!S) return !1;
        let V = h.get(B);
        return V ? S.forEach(q => V.add(q)) : h.set(B, S), p.delete(B), !0;
      }
      class wr {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (V, q) => {}),
            (this._transitionEngine = new ar(h, p, S)),
            (this._timelineEngine = new no(h, p, S)),
            (this._transitionEngine.onRemovalComplete = (V, q) =>
              this.onRemovalComplete(V, q));
        }
        registerTrigger(h, p, S, V, q) {
          const xe = h + '-' + V;
          let Me = this._triggerCache[xe];
          if (!Me) {
            const Xe = [],
              gt = [],
              Zt = li(this._driver, q, Xe, gt);
            if (Xe.length)
              throw (function Kt(B, h) {
                return new x.vHH(3404, !1);
              })();
            (Me = (function Fr(B, h, p) {
              return new jr(B, h, p);
            })(V, Zt, this._normalizer)),
              (this._triggerCache[xe] = Me);
          }
          this._transitionEngine.registerTrigger(p, V, Me);
        }
        register(h, p) {
          this._transitionEngine.register(h, p);
        }
        destroy(h, p) {
          this._transitionEngine.destroy(h, p);
        }
        onInsert(h, p, S, V) {
          this._transitionEngine.insertNode(h, p, S, V);
        }
        onRemove(h, p, S, V) {
          this._transitionEngine.removeNode(h, p, V || !1, S);
        }
        disableAnimations(h, p) {
          this._transitionEngine.markElementAsDisabled(h, p);
        }
        process(h, p, S, V) {
          if ('@' == S.charAt(0)) {
            const [q, xe] = dn(S);
            this._timelineEngine.command(q, p, xe, V);
          } else this._transitionEngine.trigger(h, p, S, V);
        }
        listen(h, p, S, V, q) {
          if ('@' == S.charAt(0)) {
            const [xe, Me] = dn(S);
            return this._timelineEngine.listen(xe, p, Me, q);
          }
          return this._transitionEngine.listen(h, p, S, V, q);
        }
        flush(h = -1) {
          this._transitionEngine.flush(h);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players,
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let ko = (() => {
        class B {
          constructor(p, S, V) {
            (this._element = p),
              (this._startStyles = S),
              (this._endStyles = V),
              (this._state = 0);
            let q = B.initialStylesByElement.get(p);
            q || B.initialStylesByElement.set(p, (q = new Map())),
              (this._initialStyles = q);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Oe(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Oe(this._element, this._initialStyles),
                this._endStyles &&
                  (Oe(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (B.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (be(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (be(this._element, this._endStyles),
                  (this._endStyles = null)),
                Oe(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (B.initialStylesByElement = new WeakMap()), B;
      })();
      function Ri(B) {
        let h = null;
        return (
          B.forEach((p, S) => {
            (function Vr(B) {
              return 'display' === B || 'position' === B;
            })(S) && ((h = h || new Map()), h.set(S, p));
          }),
          h
        );
      }
      class so {
        constructor(h, p, S, V) {
          (this.element = h),
            (this.keyframes = p),
            (this.options = S),
            (this._specialStyles = V),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = S.duration),
            (this._delay = S.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(h => h()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const h = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            h,
            this.options,
          )),
            (this._finalKeyframe = h.length ? h[h.length - 1] : new Map()),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(h) {
          const p = [];
          return (
            h.forEach(S => {
              p.push(Object.fromEntries(S));
            }),
            p
          );
        }
        _triggerWebAnimation(h, p, S) {
          return h.animate(this._convertKeyframesToObject(p), S);
        }
        onStart(h) {
          this._originalOnStartFns.push(h), this._onStartFns.push(h);
        }
        onDone(h) {
          this._originalOnDoneFns.push(h), this._onDoneFns.push(h);
        }
        onDestroy(h) {
          this._onDestroyFns.push(h);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach(h => h()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach(h => h()),
            (this._onDestroyFns = []));
        }
        setPosition(h) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = h * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const h = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((S, V) => {
              'offset' !== V &&
                h.set(V, this._finished ? S : Gt(this.element, V));
            }),
            (this.currentSnapshot = h);
        }
        triggerCallback(h) {
          const p = 'start' === h ? this._onStartFns : this._onDoneFns;
          p.forEach(S => S()), (p.length = 0);
        }
      }
      class vn {
        validateStyleProperty(h) {
          return !0;
        }
        validateAnimatableStyleProperty(h) {
          return !0;
        }
        matchesElement(h, p) {
          return !1;
        }
        containsElement(h, p) {
          return H(h, p);
        }
        getParentElement(h) {
          return Pn(h);
        }
        query(h, p, S) {
          return ke(h, p, S);
        }
        computeStyle(h, p, S) {
          return window.getComputedStyle(h)[p];
        }
        animate(h, p, S, V, q, xe = []) {
          const Xe = {
            duration: S,
            delay: V,
            fill: 0 == V ? 'both' : 'forwards',
          };
          q && (Xe.easing = q);
          const gt = new Map(),
            Zt = xe.filter(sn => sn instanceof so);
          (function cr(B, h) {
            return 0 === B || 0 === h;
          })(S, V) &&
            Zt.forEach(sn => {
              sn.currentSnapshot.forEach((fn, xn) => gt.set(xn, fn));
            });
          let zt = (function Tt(B) {
            return B.length
              ? B[0] instanceof Map
                ? B
                : B.map(h => Qe(h))
              : [];
          })(p).map(sn => Je(sn));
          zt = (function Or(B, h, p) {
            if (p.size && h.length) {
              let S = h[0],
                V = [];
              if (
                (p.forEach((q, xe) => {
                  S.has(xe) || V.push(xe), S.set(xe, q);
                }),
                V.length)
              )
                for (let q = 1; q < h.length; q++) {
                  let xe = h[q];
                  V.forEach(Me => xe.set(Me, Gt(B, Me)));
                }
            }
            return h;
          })(h, zt, gt);
          const Cn = (function Br(B, h) {
            let p = null,
              S = null;
            return (
              Array.isArray(h) && h.length
                ? ((p = Ri(h[0])), h.length > 1 && (S = Ri(h[h.length - 1])))
                : h instanceof Map && (p = Ri(h)),
              p || S ? new ko(B, p, S) : null
            );
          })(h, zt);
          return new so(h, zt, Xe, Cn);
        }
      }
      var fr = C(6895);
      let T = (() => {
        class B extends te._j {
          constructor(p, S) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = p.createRenderer(S.body, {
                id: '0',
                encapsulation: x.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(p) {
            const S = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const V = Array.isArray(p) ? (0, te.vP)(p) : p;
            return (
              Y(this._renderer, null, S, 'register', [V]),
              new I(S, this._renderer)
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(fr.K0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class I extends te.LC {
        constructor(h, p) {
          super(), (this._id = h), (this._renderer = p);
        }
        create(h, p) {
          return new w(this._id, h, p || {}, this._renderer);
        }
      }
      class w {
        constructor(h, p, S, V) {
          (this.id = h),
            (this.element = p),
            (this._renderer = V),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', S);
        }
        _listen(h, p) {
          return this._renderer.listen(this.element, `@@${this.id}:${h}`, p);
        }
        _command(h, ...p) {
          return Y(this._renderer, this.element, this.id, h, p);
        }
        onDone(h) {
          this._listen('done', h);
        }
        onStart(h) {
          this._listen('start', h);
        }
        onDestroy(h) {
          this._listen('destroy', h);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(h) {
          this._command('setPosition', h);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function Y(B, h, p, S, V) {
        return B.setProperty(h, `@@${p}:${S}`, V);
      }
      const on = '@.disabled';
      let di = (() => {
        class B {
          constructor(p, S, V) {
            (this.delegate = p),
              (this.engine = S),
              (this._zone = V),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (S.onRemovalComplete = (q, xe) => {
                const Me = xe?.parentNode(q);
                Me && xe.removeChild(Me, q);
              });
          }
          createRenderer(p, S) {
            const q = this.delegate.createRenderer(p, S);
            if (!(p && S && S.data && S.data.animation)) {
              let Zt = this._rendererCache.get(q);
              return (
                Zt ||
                  ((Zt = new ht('', q, this.engine, () =>
                    this._rendererCache.delete(q),
                  )),
                  this._rendererCache.set(q, Zt)),
                Zt
              );
            }
            const xe = S.id,
              Me = S.id + '-' + this._currentId;
            this._currentId++, this.engine.register(Me, p);
            const Xe = Zt => {
              Array.isArray(Zt)
                ? Zt.forEach(Xe)
                : this.engine.registerTrigger(xe, Me, p, Zt.name, Zt);
            };
            return (
              S.data.animation.forEach(Xe), new Sn(this, Me, q, this.engine)
            );
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(p, S, V) {
            p >= 0 && p < this._microtaskId
              ? this._zone.run(() => S(V))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach(q => {
                        const [xe, Me] = q;
                        xe(Me);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([S, V]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(wr), x.LFG(x.R0b));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class ht {
        constructor(h, p, S, V) {
          (this.namespaceId = h),
            (this.delegate = p),
            (this.engine = S),
            (this._onDestroy = V),
            (this.destroyNode = this.delegate.destroyNode
              ? q => p.destroyNode(q)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(h, p) {
          return this.delegate.createElement(h, p);
        }
        createComment(h) {
          return this.delegate.createComment(h);
        }
        createText(h) {
          return this.delegate.createText(h);
        }
        appendChild(h, p) {
          this.delegate.appendChild(h, p),
            this.engine.onInsert(this.namespaceId, p, h, !1);
        }
        insertBefore(h, p, S, V = !0) {
          this.delegate.insertBefore(h, p, S),
            this.engine.onInsert(this.namespaceId, p, h, V);
        }
        removeChild(h, p, S) {
          this.engine.onRemove(this.namespaceId, p, this.delegate, S);
        }
        selectRootElement(h, p) {
          return this.delegate.selectRootElement(h, p);
        }
        parentNode(h) {
          return this.delegate.parentNode(h);
        }
        nextSibling(h) {
          return this.delegate.nextSibling(h);
        }
        setAttribute(h, p, S, V) {
          this.delegate.setAttribute(h, p, S, V);
        }
        removeAttribute(h, p, S) {
          this.delegate.removeAttribute(h, p, S);
        }
        addClass(h, p) {
          this.delegate.addClass(h, p);
        }
        removeClass(h, p) {
          this.delegate.removeClass(h, p);
        }
        setStyle(h, p, S, V) {
          this.delegate.setStyle(h, p, S, V);
        }
        removeStyle(h, p, S) {
          this.delegate.removeStyle(h, p, S);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0) && p == on
            ? this.disableAnimations(h, !!S)
            : this.delegate.setProperty(h, p, S);
        }
        setValue(h, p) {
          this.delegate.setValue(h, p);
        }
        listen(h, p, S) {
          return this.delegate.listen(h, p, S);
        }
        disableAnimations(h, p) {
          this.engine.disableAnimations(h, p);
        }
      }
      class Sn extends ht {
        constructor(h, p, S, V, q) {
          super(p, S, V, q), (this.factory = h), (this.namespaceId = p);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0)
            ? '.' == p.charAt(1) && p == on
              ? this.disableAnimations(h, (S = void 0 === S || !!S))
              : this.engine.process(this.namespaceId, h, p.slice(1), S)
            : this.delegate.setProperty(h, p, S);
        }
        listen(h, p, S) {
          if ('@' == p.charAt(0)) {
            const V = (function pr(B) {
              switch (B) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return B;
              }
            })(h);
            let q = p.slice(1),
              xe = '';
            return (
              '@' != q.charAt(0) &&
                ([q, xe] = (function go(B) {
                  const h = B.indexOf('.');
                  return [B.substring(0, h), B.slice(h + 1)];
                })(q)),
              this.engine.listen(this.namespaceId, V, q, xe, Me => {
                this.factory.scheduleListenerCallback(Me._data || -1, S, Me);
              })
            );
          }
          return this.delegate.listen(h, p, S);
        }
      }
      const Yi = [
          { provide: te._j, useClass: T },
          {
            provide: It,
            useFactory: function To() {
              return new bn();
            },
          },
          {
            provide: wr,
            useClass: (() => {
              class B extends wr {
                constructor(p, S, V, q) {
                  super(p.body, S, V);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (B.ɵfac = function (p) {
                  return new (p || B)(
                    x.LFG(fr.K0),
                    x.LFG(fe),
                    x.LFG(It),
                    x.LFG(x.z2F),
                  );
                }),
                (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
                B
              );
            })(),
          },
          {
            provide: x.FYo,
            useFactory: function Kr(B, h, p) {
              return new di(B, h, p);
            },
            deps: [s.se, wr, x.R0b],
          },
        ],
        Zr = [
          { provide: fe, useFactory: () => new vn() },
          { provide: x.QbO, useValue: 'BrowserAnimations' },
          ...Yi,
        ],
        ao = [
          { provide: fe, useClass: me },
          { provide: x.QbO, useValue: 'NoopAnimations' },
          ...Yi,
        ];
      let Qo = (() => {
        class B {
          static withConfig(p) {
            return { ngModule: B, providers: p.disableAnimations ? ao : Zr };
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ providers: Zr, imports: [s.b2] })),
          B
        );
      })();
      var qi = C(8776),
        qr = C(1831),
        Ar = C(568),
        mr = C(7754),
        Oo = C(9549);
      const gr = [
        {
          path: 'auth',
          loadChildren: () =>
            Promise.resolve()
              .then(C.bind(C, 568))
              .then(B => B.AuthModule),
        },
        {
          path: 'calendar',
          loadChildren: () =>
            Promise.resolve()
              .then(C.bind(C, 7754))
              .then(B => B.CalendarModule),
        },
        { path: '', redirectTo: '/calendar', pathMatch: 'full' },
      ];
      let ds = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ imports: [L.Bz.forRoot(gr), L.Bz] })),
          B
        );
      })();
      var us = C(262);
      let Ho = (() => {
        class B {
          constructor(p) {
            this.router = p;
          }
          intercept(p, S) {
            return S.handle(
              p.clone({
                headers: p.headers.set(
                  'x-access-token',
                  localStorage.getItem('token') || '',
                ),
              }),
            ).pipe(
              (0, us.K)(q => {
                throw (
                  (401 === q.status && this.router.navigate(['/auth/signin']),
                  q)
                );
              }),
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(L.F0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac, providedIn: 'root' })),
          B
        );
      })();
      var Qr = C(529);
      let lo = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B, bootstrap: [oe] })),
          (B.ɵinj = x.cJS({
            providers: [
              { provide: Oo.o2, useValue: { appearance: 'outline' } },
              { provide: Qr.TP, useClass: Ho, multi: !0 },
            ],
            imports: [
              s.b2,
              Qo,
              qi.sQ.forRoot([]),
              qr.Aw.forRoot({}, {}),
              Ar.AuthModule,
              mr.CalendarModule,
              ds,
            ],
          })),
          B
        );
      })();
      s.q6()
        .bootstrapModule(lo)
        .catch(B => console.error(B));
    },
    1135: (Rt, Pe, C) => {
      C.d(Pe, { X: () => x });
      var s = C(7579);
      class x extends s.x {
        constructor(oe) {
          super(), (this._value = oe);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(oe) {
          const te = super._subscribe(oe);
          return !te.closed && oe.next(this._value), te;
        }
        getValue() {
          const { hasError: oe, thrownError: te, _value: ue } = this;
          if (oe) throw te;
          return this._throwIfClosed(), ue;
        }
        next(oe) {
          super.next((this._value = oe));
        }
      }
    },
    9751: (Rt, Pe, C) => {
      C.d(Pe, { y: () => le });
      var s = C(930),
        x = C(727),
        L = C(8822),
        oe = C(9635),
        te = C(2416),
        ue = C(576),
        ve = C(2806);
      let le = (() => {
        class ie {
          constructor(Ue) {
            Ue && (this._subscribe = Ue);
          }
          lift(Ue) {
            const at = new ie();
            return (at.source = this), (at.operator = Ue), at;
          }
          subscribe(Ue, at, vt) {
            const Le = (function pe(ie) {
              return (
                (ie && ie instanceof s.Lv) ||
                ((function ae(ie) {
                  return (
                    ie &&
                    (0, ue.m)(ie.next) &&
                    (0, ue.m)(ie.error) &&
                    (0, ue.m)(ie.complete)
                  );
                })(ie) &&
                  (0, x.Nn)(ie))
              );
            })(Ue)
              ? Ue
              : new s.Hp(Ue, at, vt);
            return (
              (0, ve.x)(() => {
                const { operator: _t, source: lt } = this;
                Le.add(
                  _t
                    ? _t.call(Le, lt)
                    : lt
                    ? this._subscribe(Le)
                    : this._trySubscribe(Le),
                );
              }),
              Le
            );
          }
          _trySubscribe(Ue) {
            try {
              return this._subscribe(Ue);
            } catch (at) {
              Ue.error(at);
            }
          }
          forEach(Ue, at) {
            return new (at = he(at))((vt, Le) => {
              const _t = new s.Hp({
                next: lt => {
                  try {
                    Ue(lt);
                  } catch (bt) {
                    Le(bt), _t.unsubscribe();
                  }
                },
                error: Le,
                complete: vt,
              });
              this.subscribe(_t);
            });
          }
          _subscribe(Ue) {
            var at;
            return null === (at = this.source) || void 0 === at
              ? void 0
              : at.subscribe(Ue);
          }
          [L.L]() {
            return this;
          }
          pipe(...Ue) {
            return (0, oe.U)(Ue)(this);
          }
          toPromise(Ue) {
            return new (Ue = he(Ue))((at, vt) => {
              let Le;
              this.subscribe(
                _t => (Le = _t),
                _t => vt(_t),
                () => at(Le),
              );
            });
          }
        }
        return (ie.create = Ve => new ie(Ve)), ie;
      })();
      function he(ie) {
        var Ve;
        return null !== (Ve = ie ?? te.v.Promise) && void 0 !== Ve
          ? Ve
          : Promise;
      }
    },
    7579: (Rt, Pe, C) => {
      C.d(Pe, { x: () => ve });
      var s = C(9751),
        x = C(727);
      const oe = (0, C(3888).d)(
        he =>
          function () {
            he(this),
              (this.name = 'ObjectUnsubscribedError'),
              (this.message = 'object unsubscribed');
          },
      );
      var te = C(8737),
        ue = C(2806);
      let ve = (() => {
        class he extends s.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(pe) {
            const ie = new le(this, this);
            return (ie.operator = pe), ie;
          }
          _throwIfClosed() {
            if (this.closed) throw new oe();
          }
          next(pe) {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const ie of this.currentObservers) ie.next(pe);
              }
            });
          }
          error(pe) {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = pe);
                const { observers: ie } = this;
                for (; ie.length; ) ie.shift().error(pe);
              }
            });
          }
          complete() {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: pe } = this;
                for (; pe.length; ) pe.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var pe;
            return (
              (null === (pe = this.observers) || void 0 === pe
                ? void 0
                : pe.length) > 0
            );
          }
          _trySubscribe(pe) {
            return this._throwIfClosed(), super._trySubscribe(pe);
          }
          _subscribe(pe) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(pe),
              this._innerSubscribe(pe)
            );
          }
          _innerSubscribe(pe) {
            const { hasError: ie, isStopped: Ve, observers: Ue } = this;
            return ie || Ve
              ? x.Lc
              : ((this.currentObservers = null),
                Ue.push(pe),
                new x.w0(() => {
                  (this.currentObservers = null), (0, te.P)(Ue, pe);
                }));
          }
          _checkFinalizedStatuses(pe) {
            const { hasError: ie, thrownError: Ve, isStopped: Ue } = this;
            ie ? pe.error(Ve) : Ue && pe.complete();
          }
          asObservable() {
            const pe = new s.y();
            return (pe.source = this), pe;
          }
        }
        return (he.create = (ae, pe) => new le(ae, pe)), he;
      })();
      class le extends ve {
        constructor(ae, pe) {
          super(), (this.destination = ae), (this.source = pe);
        }
        next(ae) {
          var pe, ie;
          null ===
            (ie =
              null === (pe = this.destination) || void 0 === pe
                ? void 0
                : pe.next) ||
            void 0 === ie ||
            ie.call(pe, ae);
        }
        error(ae) {
          var pe, ie;
          null ===
            (ie =
              null === (pe = this.destination) || void 0 === pe
                ? void 0
                : pe.error) ||
            void 0 === ie ||
            ie.call(pe, ae);
        }
        complete() {
          var ae, pe;
          null ===
            (pe =
              null === (ae = this.destination) || void 0 === ae
                ? void 0
                : ae.complete) ||
            void 0 === pe ||
            pe.call(ae);
        }
        _subscribe(ae) {
          var pe, ie;
          return null !==
            (ie =
              null === (pe = this.source) || void 0 === pe
                ? void 0
                : pe.subscribe(ae)) && void 0 !== ie
            ? ie
            : x.Lc;
        }
      }
    },
    930: (Rt, Pe, C) => {
      C.d(Pe, { Hp: () => vt, Lv: () => ie });
      var s = C(576),
        x = C(727),
        L = C(2416),
        oe = C(7849),
        te = C(5032);
      const ue = he('C', void 0, void 0);
      function he(W, se, ne) {
        return { kind: W, value: se, error: ne };
      }
      var ae = C(3410),
        pe = C(2806);
      class ie extends x.w0 {
        constructor(se) {
          super(),
            (this.isStopped = !1),
            se
              ? ((this.destination = se), (0, x.Nn)(se) && se.add(this))
              : (this.destination = bt);
        }
        static create(se, ne, X) {
          return new vt(se, ne, X);
        }
        next(se) {
          this.isStopped
            ? lt(
                (function le(W) {
                  return he('N', W, void 0);
                })(se),
                this,
              )
            : this._next(se);
        }
        error(se) {
          this.isStopped
            ? lt(
                (function ve(W) {
                  return he('E', void 0, W);
                })(se),
                this,
              )
            : ((this.isStopped = !0), this._error(se));
        }
        complete() {
          this.isStopped
            ? lt(ue, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(se) {
          this.destination.next(se);
        }
        _error(se) {
          try {
            this.destination.error(se);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const Ve = Function.prototype.bind;
      function Ue(W, se) {
        return Ve.call(W, se);
      }
      class at {
        constructor(se) {
          this.partialObserver = se;
        }
        next(se) {
          const { partialObserver: ne } = this;
          if (ne.next)
            try {
              ne.next(se);
            } catch (X) {
              Le(X);
            }
        }
        error(se) {
          const { partialObserver: ne } = this;
          if (ne.error)
            try {
              ne.error(se);
            } catch (X) {
              Le(X);
            }
          else Le(se);
        }
        complete() {
          const { partialObserver: se } = this;
          if (se.complete)
            try {
              se.complete();
            } catch (ne) {
              Le(ne);
            }
        }
      }
      class vt extends ie {
        constructor(se, ne, X) {
          let we;
          if ((super(), (0, s.m)(se) || !se))
            we = {
              next: se ?? void 0,
              error: ne ?? void 0,
              complete: X ?? void 0,
            };
          else {
            let nt;
            this && L.v.useDeprecatedNextContext
              ? ((nt = Object.create(se)),
                (nt.unsubscribe = () => this.unsubscribe()),
                (we = {
                  next: se.next && Ue(se.next, nt),
                  error: se.error && Ue(se.error, nt),
                  complete: se.complete && Ue(se.complete, nt),
                }))
              : (we = se);
          }
          this.destination = new at(we);
        }
      }
      function Le(W) {
        L.v.useDeprecatedSynchronousErrorHandling ? (0, pe.O)(W) : (0, oe.h)(W);
      }
      function lt(W, se) {
        const { onStoppedNotification: ne } = L.v;
        ne && ae.z.setTimeout(() => ne(W, se));
      }
      const bt = {
        closed: !0,
        next: te.Z,
        error: function _t(W) {
          throw W;
        },
        complete: te.Z,
      };
    },
    727: (Rt, Pe, C) => {
      C.d(Pe, { Lc: () => ue, w0: () => te, Nn: () => ve });
      var s = C(576);
      const L = (0, C(3888).d)(
        he =>
          function (pe) {
            he(this),
              (this.message = pe
                ? `${pe.length} errors occurred during unsubscription:\n${pe
                    .map((ie, Ve) => `${Ve + 1}) ${ie.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = pe);
          },
      );
      var oe = C(8737);
      class te {
        constructor(ae) {
          (this.initialTeardown = ae),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let ae;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: pe } = this;
            if (pe)
              if (((this._parentage = null), Array.isArray(pe)))
                for (const Ue of pe) Ue.remove(this);
              else pe.remove(this);
            const { initialTeardown: ie } = this;
            if ((0, s.m)(ie))
              try {
                ie();
              } catch (Ue) {
                ae = Ue instanceof L ? Ue.errors : [Ue];
              }
            const { _finalizers: Ve } = this;
            if (Ve) {
              this._finalizers = null;
              for (const Ue of Ve)
                try {
                  le(Ue);
                } catch (at) {
                  (ae = ae ?? []),
                    at instanceof L
                      ? (ae = [...ae, ...at.errors])
                      : ae.push(at);
                }
            }
            if (ae) throw new L(ae);
          }
        }
        add(ae) {
          var pe;
          if (ae && ae !== this)
            if (this.closed) le(ae);
            else {
              if (ae instanceof te) {
                if (ae.closed || ae._hasParent(this)) return;
                ae._addParent(this);
              }
              (this._finalizers =
                null !== (pe = this._finalizers) && void 0 !== pe
                  ? pe
                  : []).push(ae);
            }
        }
        _hasParent(ae) {
          const { _parentage: pe } = this;
          return pe === ae || (Array.isArray(pe) && pe.includes(ae));
        }
        _addParent(ae) {
          const { _parentage: pe } = this;
          this._parentage = Array.isArray(pe)
            ? (pe.push(ae), pe)
            : pe
            ? [pe, ae]
            : ae;
        }
        _removeParent(ae) {
          const { _parentage: pe } = this;
          pe === ae
            ? (this._parentage = null)
            : Array.isArray(pe) && (0, oe.P)(pe, ae);
        }
        remove(ae) {
          const { _finalizers: pe } = this;
          pe && (0, oe.P)(pe, ae), ae instanceof te && ae._removeParent(this);
        }
      }
      te.EMPTY = (() => {
        const he = new te();
        return (he.closed = !0), he;
      })();
      const ue = te.EMPTY;
      function ve(he) {
        return (
          he instanceof te ||
          (he &&
            'closed' in he &&
            (0, s.m)(he.remove) &&
            (0, s.m)(he.add) &&
            (0, s.m)(he.unsubscribe))
        );
      }
      function le(he) {
        (0, s.m)(he) ? he() : he.unsubscribe();
      }
    },
    2416: (Rt, Pe, C) => {
      C.d(Pe, { v: () => s });
      const s = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    9841: (Rt, Pe, C) => {
      C.d(Pe, { a: () => ae });
      var s = C(9751),
        x = C(4742),
        L = C(457),
        oe = C(4671),
        te = C(3268),
        ue = C(3269),
        ve = C(1810),
        le = C(5403),
        he = C(9672);
      function ae(...Ve) {
        const Ue = (0, ue.yG)(Ve),
          at = (0, ue.jO)(Ve),
          { args: vt, keys: Le } = (0, x.D)(Ve);
        if (0 === vt.length) return (0, L.D)([], Ue);
        const _t = new s.y(
          (function pe(Ve, Ue, at = oe.y) {
            return vt => {
              ie(
                Ue,
                () => {
                  const { length: Le } = Ve,
                    _t = new Array(Le);
                  let lt = Le,
                    bt = Le;
                  for (let W = 0; W < Le; W++)
                    ie(
                      Ue,
                      () => {
                        const se = (0, L.D)(Ve[W], Ue);
                        let ne = !1;
                        se.subscribe(
                          (0, le.x)(
                            vt,
                            X => {
                              (_t[W] = X),
                                ne || ((ne = !0), bt--),
                                bt || vt.next(at(_t.slice()));
                            },
                            () => {
                              --lt || vt.complete();
                            },
                          ),
                        );
                      },
                      vt,
                    );
                },
                vt,
              );
            };
          })(vt, Ue, Le ? lt => (0, ve.n)(Le, lt) : oe.y),
        );
        return at ? _t.pipe((0, te.Z)(at)) : _t;
      }
      function ie(Ve, Ue, at) {
        Ve ? (0, he.f)(at, Ve, Ue) : Ue();
      }
    },
    7272: (Rt, Pe, C) => {
      C.d(Pe, { z: () => te });
      var s = C(8189),
        L = C(3269),
        oe = C(457);
      function te(...ue) {
        return (function x() {
          return (0, s.J)(1);
        })()((0, oe.D)(ue, (0, L.yG)(ue)));
      }
    },
    9770: (Rt, Pe, C) => {
      C.d(Pe, { P: () => L });
      var s = C(9751),
        x = C(8421);
      function L(oe) {
        return new s.y(te => {
          (0, x.Xf)(oe()).subscribe(te);
        });
      }
    },
    515: (Rt, Pe, C) => {
      C.d(Pe, { E: () => x });
      const x = new (C(9751).y)(te => te.complete());
    },
    4128: (Rt, Pe, C) => {
      C.d(Pe, { D: () => le });
      var s = C(9751),
        x = C(4742),
        L = C(8421),
        oe = C(3269),
        te = C(5403),
        ue = C(3268),
        ve = C(1810);
      function le(...he) {
        const ae = (0, oe.jO)(he),
          { args: pe, keys: ie } = (0, x.D)(he),
          Ve = new s.y(Ue => {
            const { length: at } = pe;
            if (!at) return void Ue.complete();
            const vt = new Array(at);
            let Le = at,
              _t = at;
            for (let lt = 0; lt < at; lt++) {
              let bt = !1;
              (0, L.Xf)(pe[lt]).subscribe(
                (0, te.x)(
                  Ue,
                  W => {
                    bt || ((bt = !0), _t--), (vt[lt] = W);
                  },
                  () => Le--,
                  void 0,
                  () => {
                    (!Le || !bt) &&
                      (_t || Ue.next(ie ? (0, ve.n)(ie, vt) : vt),
                      Ue.complete());
                  },
                ),
              );
            }
          });
        return ae ? Ve.pipe((0, ue.Z)(ae)) : Ve;
      }
    },
    457: (Rt, Pe, C) => {
      C.d(Pe, { D: () => ne });
      var s = C(8421),
        x = C(5363),
        L = C(4482);
      function oe(X, we = 0) {
        return (0, L.e)((nt, ut) => {
          ut.add(X.schedule(() => nt.subscribe(ut), we));
        });
      }
      var ve = C(9751),
        he = C(2202),
        ae = C(576),
        pe = C(9672);
      function Ve(X, we) {
        if (!X) throw new Error('Iterable cannot be null');
        return new ve.y(nt => {
          (0, pe.f)(nt, we, () => {
            const ut = X[Symbol.asyncIterator]();
            (0, pe.f)(
              nt,
              we,
              () => {
                ut.next().then(Ut => {
                  Ut.done ? nt.complete() : nt.next(Ut.value);
                });
              },
              0,
              !0,
            );
          });
        });
      }
      var Ue = C(3670),
        at = C(8239),
        vt = C(1144),
        Le = C(6495),
        _t = C(2206),
        lt = C(4532),
        bt = C(3260);
      function ne(X, we) {
        return we
          ? (function se(X, we) {
              if (null != X) {
                if ((0, Ue.c)(X))
                  return (function te(X, we) {
                    return (0, s.Xf)(X).pipe(oe(we), (0, x.Q)(we));
                  })(X, we);
                if ((0, vt.z)(X))
                  return (function le(X, we) {
                    return new ve.y(nt => {
                      let ut = 0;
                      return we.schedule(function () {
                        ut === X.length
                          ? nt.complete()
                          : (nt.next(X[ut++]), nt.closed || this.schedule());
                      });
                    });
                  })(X, we);
                if ((0, at.t)(X))
                  return (function ue(X, we) {
                    return (0, s.Xf)(X).pipe(oe(we), (0, x.Q)(we));
                  })(X, we);
                if ((0, _t.D)(X)) return Ve(X, we);
                if ((0, Le.T)(X))
                  return (function ie(X, we) {
                    return new ve.y(nt => {
                      let ut;
                      return (
                        (0, pe.f)(nt, we, () => {
                          (ut = X[he.h]()),
                            (0, pe.f)(
                              nt,
                              we,
                              () => {
                                let Ut, xt;
                                try {
                                  ({ value: Ut, done: xt } = ut.next());
                                } catch (Kt) {
                                  return void nt.error(Kt);
                                }
                                xt ? nt.complete() : nt.next(Ut);
                              },
                              0,
                              !0,
                            );
                        }),
                        () => (0, ae.m)(ut?.return) && ut.return()
                      );
                    });
                  })(X, we);
                if ((0, bt.L)(X))
                  return (function W(X, we) {
                    return Ve((0, bt.Q)(X), we);
                  })(X, we);
              }
              throw (0, lt.z)(X);
            })(X, we)
          : (0, s.Xf)(X);
      }
    },
    8421: (Rt, Pe, C) => {
      C.d(Pe, { Xf: () => Ve });
      var s = C(655),
        x = C(1144),
        L = C(8239),
        oe = C(9751),
        te = C(3670),
        ue = C(2206),
        ve = C(4532),
        le = C(6495),
        he = C(3260),
        ae = C(576),
        pe = C(7849),
        ie = C(8822);
      function Ve(W) {
        if (W instanceof oe.y) return W;
        if (null != W) {
          if ((0, te.c)(W))
            return (function Ue(W) {
              return new oe.y(se => {
                const ne = W[ie.L]();
                if ((0, ae.m)(ne.subscribe)) return ne.subscribe(se);
                throw new TypeError(
                  'Provided object does not correctly implement Symbol.observable',
                );
              });
            })(W);
          if ((0, x.z)(W))
            return (function at(W) {
              return new oe.y(se => {
                for (let ne = 0; ne < W.length && !se.closed; ne++)
                  se.next(W[ne]);
                se.complete();
              });
            })(W);
          if ((0, L.t)(W))
            return (function vt(W) {
              return new oe.y(se => {
                W.then(
                  ne => {
                    se.closed || (se.next(ne), se.complete());
                  },
                  ne => se.error(ne),
                ).then(null, pe.h);
              });
            })(W);
          if ((0, ue.D)(W)) return _t(W);
          if ((0, le.T)(W))
            return (function Le(W) {
              return new oe.y(se => {
                for (const ne of W) if ((se.next(ne), se.closed)) return;
                se.complete();
              });
            })(W);
          if ((0, he.L)(W))
            return (function lt(W) {
              return _t((0, he.Q)(W));
            })(W);
        }
        throw (0, ve.z)(W);
      }
      function _t(W) {
        return new oe.y(se => {
          (function bt(W, se) {
            var ne, X, we, nt;
            return (0, s.mG)(this, void 0, void 0, function* () {
              try {
                for (ne = (0, s.KL)(W); !(X = yield ne.next()).done; )
                  if ((se.next(X.value), se.closed)) return;
              } catch (ut) {
                we = { error: ut };
              } finally {
                try {
                  X && !X.done && (nt = ne.return) && (yield nt.call(ne));
                } finally {
                  if (we) throw we.error;
                }
              }
              se.complete();
            });
          })(W, se).catch(ne => se.error(ne));
        });
      }
    },
    6451: (Rt, Pe, C) => {
      C.d(Pe, { T: () => ue });
      var s = C(8189),
        x = C(8421),
        L = C(515),
        oe = C(3269),
        te = C(457);
      function ue(...ve) {
        const le = (0, oe.yG)(ve),
          he = (0, oe._6)(ve, 1 / 0),
          ae = ve;
        return ae.length
          ? 1 === ae.length
            ? (0, x.Xf)(ae[0])
            : (0, s.J)(he)((0, te.D)(ae, le))
          : L.E;
      }
    },
    9646: (Rt, Pe, C) => {
      C.d(Pe, { of: () => L });
      var s = C(3269),
        x = C(457);
      function L(...oe) {
        const te = (0, s.yG)(oe);
        return (0, x.D)(oe, te);
      }
    },
    2843: (Rt, Pe, C) => {
      C.d(Pe, { _: () => L });
      var s = C(9751),
        x = C(576);
      function L(oe, te) {
        const ue = (0, x.m)(oe) ? oe : () => oe,
          ve = le => le.error(ue());
        return new s.y(te ? le => te.schedule(ve, 0, le) : ve);
      }
    },
    5963: (Rt, Pe, C) => {
      C.d(Pe, { H: () => te });
      var s = C(9751),
        x = C(4986),
        L = C(3532);
      function te(ue = 0, ve, le = x.P) {
        let he = -1;
        return (
          null != ve && ((0, L.K)(ve) ? (le = ve) : (he = ve)),
          new s.y(ae => {
            let pe = (function oe(ue) {
              return ue instanceof Date && !isNaN(ue);
            })(ue)
              ? +ue - le.now()
              : ue;
            pe < 0 && (pe = 0);
            let ie = 0;
            return le.schedule(function () {
              ae.closed ||
                (ae.next(ie++),
                0 <= he ? this.schedule(void 0, he) : ae.complete());
            }, pe);
          })
        );
      }
    },
    5403: (Rt, Pe, C) => {
      C.d(Pe, { Q: () => L, x: () => x });
      var s = C(930);
      function x(oe, te, ue, ve, le) {
        return new L(oe, te, ue, ve, le);
      }
      class L extends s.Lv {
        constructor(te, ue, ve, le, he, ae) {
          super(te),
            (this.onFinalize = he),
            (this.shouldUnsubscribe = ae),
            (this._next = ue
              ? function (pe) {
                  try {
                    ue(pe);
                  } catch (ie) {
                    te.error(ie);
                  }
                }
              : super._next),
            (this._error = le
              ? function (pe) {
                  try {
                    le(pe);
                  } catch (ie) {
                    te.error(ie);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = ve
              ? function () {
                  try {
                    ve();
                  } catch (pe) {
                    te.error(pe);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var te;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: ue } = this;
            super.unsubscribe(),
              !ue &&
                (null === (te = this.onFinalize) ||
                  void 0 === te ||
                  te.call(this));
          }
        }
      }
    },
    262: (Rt, Pe, C) => {
      C.d(Pe, { K: () => oe });
      var s = C(8421),
        x = C(5403),
        L = C(4482);
      function oe(te) {
        return (0, L.e)((ue, ve) => {
          let ae,
            le = null,
            he = !1;
          (le = ue.subscribe(
            (0, x.x)(ve, void 0, void 0, pe => {
              (ae = (0, s.Xf)(te(pe, oe(te)(ue)))),
                le
                  ? (le.unsubscribe(), (le = null), ae.subscribe(ve))
                  : (he = !0);
            }),
          )),
            he && (le.unsubscribe(), (le = null), ae.subscribe(ve));
        });
      }
    },
    4351: (Rt, Pe, C) => {
      C.d(Pe, { b: () => L });
      var s = C(5577),
        x = C(576);
      function L(oe, te) {
        return (0, x.m)(te) ? (0, s.z)(oe, te, 1) : (0, s.z)(oe, 1);
      }
    },
    8372: (Rt, Pe, C) => {
      C.d(Pe, { b: () => oe });
      var s = C(4986),
        x = C(4482),
        L = C(5403);
      function oe(te, ue = s.z) {
        return (0, x.e)((ve, le) => {
          let he = null,
            ae = null,
            pe = null;
          const ie = () => {
            if (he) {
              he.unsubscribe(), (he = null);
              const Ue = ae;
              (ae = null), le.next(Ue);
            }
          };
          function Ve() {
            const Ue = pe + te,
              at = ue.now();
            if (at < Ue)
              return (he = this.schedule(void 0, Ue - at)), void le.add(he);
            ie();
          }
          ve.subscribe(
            (0, L.x)(
              le,
              Ue => {
                (ae = Ue),
                  (pe = ue.now()),
                  he || ((he = ue.schedule(Ve, te)), le.add(he));
              },
              () => {
                ie(), le.complete();
              },
              void 0,
              () => {
                ae = he = null;
              },
            ),
          );
        });
      }
    },
    1884: (Rt, Pe, C) => {
      C.d(Pe, { x: () => oe });
      var s = C(4671),
        x = C(4482),
        L = C(5403);
      function oe(ue, ve = s.y) {
        return (
          (ue = ue ?? te),
          (0, x.e)((le, he) => {
            let ae,
              pe = !0;
            le.subscribe(
              (0, L.x)(he, ie => {
                const Ve = ve(ie);
                (pe || !ue(ae, Ve)) && ((pe = !1), (ae = Ve), he.next(ie));
              }),
            );
          })
        );
      }
      function te(ue, ve) {
        return ue === ve;
      }
    },
    6129: (Rt, Pe, C) => {
      C.d(Pe, { z: () => te });
      var s = C(4004),
        x = C(8421),
        L = C(4482),
        oe = C(5403);
      function te(ue, ve) {
        return ve
          ? le =>
              le.pipe(
                te((he, ae) =>
                  (0, x.Xf)(ue(he, ae)).pipe(
                    (0, s.U)((pe, ie) => ve(he, pe, ae, ie)),
                  ),
                ),
              )
          : (0, L.e)((le, he) => {
              let ae = 0,
                pe = null,
                ie = !1;
              le.subscribe(
                (0, oe.x)(
                  he,
                  Ve => {
                    pe ||
                      ((pe = (0, oe.x)(he, void 0, () => {
                        (pe = null), ie && he.complete();
                      })),
                      (0, x.Xf)(ue(Ve, ae++)).subscribe(pe));
                  },
                  () => {
                    (ie = !0), !pe && he.complete();
                  },
                ),
              );
            });
      }
    },
    9300: (Rt, Pe, C) => {
      C.d(Pe, { h: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, te) {
        return (0, s.e)((ue, ve) => {
          let le = 0;
          ue.subscribe(
            (0, x.x)(ve, he => oe.call(te, he, le++) && ve.next(he)),
          );
        });
      }
    },
    8746: (Rt, Pe, C) => {
      C.d(Pe, { x: () => x });
      var s = C(4482);
      function x(L) {
        return (0, s.e)((oe, te) => {
          try {
            oe.subscribe(te);
          } finally {
            te.add(L);
          }
        });
      }
    },
    8502: (Rt, Pe, C) => {
      C.d(Pe, { l: () => oe });
      var s = C(4482),
        x = C(5403),
        L = C(5032);
      function oe() {
        return (0, s.e)((te, ue) => {
          te.subscribe((0, x.x)(ue, L.Z));
        });
      }
    },
    4004: (Rt, Pe, C) => {
      C.d(Pe, { U: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, te) {
        return (0, s.e)((ue, ve) => {
          let le = 0;
          ue.subscribe(
            (0, x.x)(ve, he => {
              ve.next(oe.call(te, he, le++));
            }),
          );
        });
      }
    },
    9718: (Rt, Pe, C) => {
      C.d(Pe, { h: () => x });
      var s = C(4004);
      function x(L) {
        return (0, s.U)(() => L);
      }
    },
    8189: (Rt, Pe, C) => {
      C.d(Pe, { J: () => L });
      var s = C(5577),
        x = C(4671);
      function L(oe = 1 / 0) {
        return (0, s.z)(x.y, oe);
      }
    },
    5577: (Rt, Pe, C) => {
      C.d(Pe, { z: () => le });
      var s = C(4004),
        x = C(8421),
        L = C(4482),
        oe = C(9672),
        te = C(5403),
        ve = C(576);
      function le(he, ae, pe = 1 / 0) {
        return (0, ve.m)(ae)
          ? le(
              (ie, Ve) =>
                (0, s.U)((Ue, at) => ae(ie, Ue, Ve, at))((0, x.Xf)(he(ie, Ve))),
              pe,
            )
          : ('number' == typeof ae && (pe = ae),
            (0, L.e)((ie, Ve) =>
              (function ue(he, ae, pe, ie, Ve, Ue, at, vt) {
                const Le = [];
                let _t = 0,
                  lt = 0,
                  bt = !1;
                const W = () => {
                    bt && !Le.length && !_t && ae.complete();
                  },
                  se = X => (_t < ie ? ne(X) : Le.push(X)),
                  ne = X => {
                    Ue && ae.next(X), _t++;
                    let we = !1;
                    (0, x.Xf)(pe(X, lt++)).subscribe(
                      (0, te.x)(
                        ae,
                        nt => {
                          Ve?.(nt), Ue ? se(nt) : ae.next(nt);
                        },
                        () => {
                          we = !0;
                        },
                        void 0,
                        () => {
                          if (we)
                            try {
                              for (_t--; Le.length && _t < ie; ) {
                                const nt = Le.shift();
                                at ? (0, oe.f)(ae, at, () => ne(nt)) : ne(nt);
                              }
                              W();
                            } catch (nt) {
                              ae.error(nt);
                            }
                        },
                      ),
                    );
                  };
                return (
                  he.subscribe(
                    (0, te.x)(ae, se, () => {
                      (bt = !0), W();
                    }),
                  ),
                  () => {
                    vt?.();
                  }
                );
              })(ie, Ve, he, pe),
            ));
      }
    },
    5363: (Rt, Pe, C) => {
      C.d(Pe, { Q: () => oe });
      var s = C(9672),
        x = C(4482),
        L = C(5403);
      function oe(te, ue = 0) {
        return (0, x.e)((ve, le) => {
          ve.subscribe(
            (0, L.x)(
              le,
              he => (0, s.f)(le, te, () => le.next(he), ue),
              () => (0, s.f)(le, te, () => le.complete(), ue),
              he => (0, s.f)(le, te, () => le.error(he), ue),
            ),
          );
        });
      }
    },
    5026: (Rt, Pe, C) => {
      C.d(Pe, { R: () => oe });
      var s = C(4482),
        x = C(5403);
      function oe(te, ue) {
        return (0, s.e)(
          (function L(te, ue, ve, le, he) {
            return (ae, pe) => {
              let ie = ve,
                Ve = ue,
                Ue = 0;
              ae.subscribe(
                (0, x.x)(
                  pe,
                  at => {
                    const vt = Ue++;
                    (Ve = ie ? te(Ve, at, vt) : ((ie = !0), at)),
                      le && pe.next(Ve);
                  },
                  he &&
                    (() => {
                      ie && pe.next(Ve), pe.complete();
                    }),
                ),
              );
            };
          })(te, ue, arguments.length >= 2, !0),
        );
      }
    },
    3099: (Rt, Pe, C) => {
      C.d(Pe, { B: () => te });
      var s = C(8421),
        x = C(7579),
        L = C(930),
        oe = C(4482);
      function te(ve = {}) {
        const {
          connector: le = () => new x.x(),
          resetOnError: he = !0,
          resetOnComplete: ae = !0,
          resetOnRefCountZero: pe = !0,
        } = ve;
        return ie => {
          let Ve,
            Ue,
            at,
            vt = 0,
            Le = !1,
            _t = !1;
          const lt = () => {
              Ue?.unsubscribe(), (Ue = void 0);
            },
            bt = () => {
              lt(), (Ve = at = void 0), (Le = _t = !1);
            },
            W = () => {
              const se = Ve;
              bt(), se?.unsubscribe();
            };
          return (0, oe.e)((se, ne) => {
            vt++, !_t && !Le && lt();
            const X = (at = at ?? le());
            ne.add(() => {
              vt--, 0 === vt && !_t && !Le && (Ue = ue(W, pe));
            }),
              X.subscribe(ne),
              !Ve &&
                vt > 0 &&
                ((Ve = new L.Hp({
                  next: we => X.next(we),
                  error: we => {
                    (_t = !0), lt(), (Ue = ue(bt, he, we)), X.error(we);
                  },
                  complete: () => {
                    (Le = !0), lt(), (Ue = ue(bt, ae)), X.complete();
                  },
                })),
                (0, s.Xf)(se).subscribe(Ve));
          })(ie);
        };
      }
      function ue(ve, le, ...he) {
        if (!0 === le) return void ve();
        if (!1 === le) return;
        const ae = new L.Hp({
          next: () => {
            ae.unsubscribe(), ve();
          },
        });
        return (0, s.Xf)(le(...he)).subscribe(ae);
      }
    },
    5684: (Rt, Pe, C) => {
      C.d(Pe, { T: () => x });
      var s = C(9300);
      function x(L) {
        return (0, s.h)((oe, te) => L <= te);
      }
    },
    8675: (Rt, Pe, C) => {
      C.d(Pe, { O: () => oe });
      var s = C(7272),
        x = C(3269),
        L = C(4482);
      function oe(...te) {
        const ue = (0, x.yG)(te);
        return (0, L.e)((ve, le) => {
          (ue ? (0, s.z)(te, ve, ue) : (0, s.z)(te, ve)).subscribe(le);
        });
      }
    },
    3900: (Rt, Pe, C) => {
      C.d(Pe, { w: () => oe });
      var s = C(8421),
        x = C(4482),
        L = C(5403);
      function oe(te, ue) {
        return (0, x.e)((ve, le) => {
          let he = null,
            ae = 0,
            pe = !1;
          const ie = () => pe && !he && le.complete();
          ve.subscribe(
            (0, L.x)(
              le,
              Ve => {
                he?.unsubscribe();
                let Ue = 0;
                const at = ae++;
                (0, s.Xf)(te(Ve, at)).subscribe(
                  (he = (0, L.x)(
                    le,
                    vt => le.next(ue ? ue(Ve, vt, at, Ue++) : vt),
                    () => {
                      (he = null), ie();
                    },
                  )),
                );
              },
              () => {
                (pe = !0), ie();
              },
            ),
          );
        });
      }
    },
    5698: (Rt, Pe, C) => {
      C.d(Pe, { q: () => oe });
      var s = C(515),
        x = C(4482),
        L = C(5403);
      function oe(te) {
        return te <= 0
          ? () => s.E
          : (0, x.e)((ue, ve) => {
              let le = 0;
              ue.subscribe(
                (0, L.x)(ve, he => {
                  ++le <= te && (ve.next(he), te <= le && ve.complete());
                }),
              );
            });
      }
    },
    2722: (Rt, Pe, C) => {
      C.d(Pe, { R: () => te });
      var s = C(4482),
        x = C(5403),
        L = C(8421),
        oe = C(5032);
      function te(ue) {
        return (0, s.e)((ve, le) => {
          (0, L.Xf)(ue).subscribe((0, x.x)(le, () => le.complete(), oe.Z)),
            !le.closed && ve.subscribe(le);
        });
      }
    },
    2529: (Rt, Pe, C) => {
      C.d(Pe, { o: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, te = !1) {
        return (0, s.e)((ue, ve) => {
          let le = 0;
          ue.subscribe(
            (0, x.x)(ve, he => {
              const ae = oe(he, le++);
              (ae || te) && ve.next(he), !ae && ve.complete();
            }),
          );
        });
      }
    },
    8505: (Rt, Pe, C) => {
      C.d(Pe, { b: () => te });
      var s = C(576),
        x = C(4482),
        L = C(5403),
        oe = C(4671);
      function te(ue, ve, le) {
        const he =
          (0, s.m)(ue) || ve || le ? { next: ue, error: ve, complete: le } : ue;
        return he
          ? (0, x.e)((ae, pe) => {
              var ie;
              null === (ie = he.subscribe) || void 0 === ie || ie.call(he);
              let Ve = !0;
              ae.subscribe(
                (0, L.x)(
                  pe,
                  Ue => {
                    var at;
                    null === (at = he.next) || void 0 === at || at.call(he, Ue),
                      pe.next(Ue);
                  },
                  () => {
                    var Ue;
                    (Ve = !1),
                      null === (Ue = he.complete) ||
                        void 0 === Ue ||
                        Ue.call(he),
                      pe.complete();
                  },
                  Ue => {
                    var at;
                    (Ve = !1),
                      null === (at = he.error) ||
                        void 0 === at ||
                        at.call(he, Ue),
                      pe.error(Ue);
                  },
                  () => {
                    var Ue, at;
                    Ve &&
                      (null === (Ue = he.unsubscribe) ||
                        void 0 === Ue ||
                        Ue.call(he)),
                      null === (at = he.finalize) ||
                        void 0 === at ||
                        at.call(he);
                  },
                ),
              );
            })
          : oe.y;
      }
    },
    4408: (Rt, Pe, C) => {
      C.d(Pe, { o: () => te });
      var s = C(727);
      class x extends s.w0 {
        constructor(ve, le) {
          super();
        }
        schedule(ve, le = 0) {
          return this;
        }
      }
      const L = {
        setInterval(ue, ve, ...le) {
          const { delegate: he } = L;
          return he?.setInterval
            ? he.setInterval(ue, ve, ...le)
            : setInterval(ue, ve, ...le);
        },
        clearInterval(ue) {
          const { delegate: ve } = L;
          return (ve?.clearInterval || clearInterval)(ue);
        },
        delegate: void 0,
      };
      var oe = C(8737);
      class te extends x {
        constructor(ve, le) {
          super(ve, le),
            (this.scheduler = ve),
            (this.work = le),
            (this.pending = !1);
        }
        schedule(ve, le = 0) {
          var he;
          if (this.closed) return this;
          this.state = ve;
          const ae = this.id,
            pe = this.scheduler;
          return (
            null != ae && (this.id = this.recycleAsyncId(pe, ae, le)),
            (this.pending = !0),
            (this.delay = le),
            (this.id =
              null !== (he = this.id) && void 0 !== he
                ? he
                : this.requestAsyncId(pe, this.id, le)),
            this
          );
        }
        requestAsyncId(ve, le, he = 0) {
          return L.setInterval(ve.flush.bind(ve, this), he);
        }
        recycleAsyncId(ve, le, he = 0) {
          if (null != he && this.delay === he && !1 === this.pending) return le;
          null != le && L.clearInterval(le);
        }
        execute(ve, le) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const he = this._execute(ve, le);
          if (he) return he;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(ve, le) {
          let ae,
            he = !1;
          try {
            this.work(ve);
          } catch (pe) {
            (he = !0),
              (ae = pe || new Error('Scheduled action threw falsy error'));
          }
          if (he) return this.unsubscribe(), ae;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: ve, scheduler: le } = this,
              { actions: he } = le;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, oe.P)(he, this),
              null != ve && (this.id = this.recycleAsyncId(le, ve, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    640: (Rt, Pe, C) => {
      C.d(Pe, { v: () => L });
      const s = { now: () => (s.delegate || Date).now(), delegate: void 0 };
      class x {
        constructor(te, ue = x.now) {
          (this.schedulerActionCtor = te), (this.now = ue);
        }
        schedule(te, ue = 0, ve) {
          return new this.schedulerActionCtor(this, te).schedule(ve, ue);
        }
      }
      x.now = s.now;
      class L extends x {
        constructor(te, ue = x.now) {
          super(te, ue), (this.actions = []), (this._active = !1);
        }
        flush(te) {
          const { actions: ue } = this;
          if (this._active) return void ue.push(te);
          let ve;
          this._active = !0;
          do {
            if ((ve = te.execute(te.state, te.delay))) break;
          } while ((te = ue.shift()));
          if (((this._active = !1), ve)) {
            for (; (te = ue.shift()); ) te.unsubscribe();
            throw ve;
          }
        }
      }
    },
    3101: (Rt, Pe, C) => {
      C.d(Pe, { E: () => Ue });
      var s = C(4408);
      let L,
        x = 1;
      const oe = {};
      function te(vt) {
        return vt in oe && (delete oe[vt], !0);
      }
      const ue = {
          setImmediate(vt) {
            const Le = x++;
            return (
              (oe[Le] = !0),
              L || (L = Promise.resolve()),
              L.then(() => te(Le) && vt()),
              Le
            );
          },
          clearImmediate(vt) {
            te(vt);
          },
        },
        { setImmediate: le, clearImmediate: he } = ue,
        ae = {
          setImmediate(...vt) {
            const { delegate: Le } = ae;
            return (Le?.setImmediate || le)(...vt);
          },
          clearImmediate(vt) {
            const { delegate: Le } = ae;
            return (Le?.clearImmediate || he)(vt);
          },
          delegate: void 0,
        };
      var ie = C(640);
      const Ue = new (class Ve extends ie.v {
        flush(Le) {
          this._active = !0;
          const _t = this._scheduled;
          this._scheduled = void 0;
          const { actions: lt } = this;
          let bt;
          Le = Le || lt.shift();
          do {
            if ((bt = Le.execute(Le.state, Le.delay))) break;
          } while ((Le = lt[0]) && Le.id === _t && lt.shift());
          if (((this._active = !1), bt)) {
            for (; (Le = lt[0]) && Le.id === _t && lt.shift(); )
              Le.unsubscribe();
            throw bt;
          }
        }
      })(
        class pe extends s.o {
          constructor(Le, _t) {
            super(Le, _t), (this.scheduler = Le), (this.work = _t);
          }
          requestAsyncId(Le, _t, lt = 0) {
            return null !== lt && lt > 0
              ? super.requestAsyncId(Le, _t, lt)
              : (Le.actions.push(this),
                Le._scheduled ||
                  (Le._scheduled = ae.setImmediate(Le.flush.bind(Le, void 0))));
          }
          recycleAsyncId(Le, _t, lt = 0) {
            var bt;
            if (null != lt ? lt > 0 : this.delay > 0)
              return super.recycleAsyncId(Le, _t, lt);
            const { actions: W } = Le;
            null != _t &&
              (null === (bt = W[W.length - 1]) || void 0 === bt
                ? void 0
                : bt.id) !== _t &&
              (ae.clearImmediate(_t),
              Le._scheduled === _t && (Le._scheduled = void 0));
          }
        },
      );
    },
    4986: (Rt, Pe, C) => {
      C.d(Pe, { P: () => oe, z: () => L });
      var s = C(4408);
      const L = new (C(640).v)(s.o),
        oe = L;
    },
    3410: (Rt, Pe, C) => {
      C.d(Pe, { z: () => s });
      const s = {
        setTimeout(x, L, ...oe) {
          const { delegate: te } = s;
          return te?.setTimeout
            ? te.setTimeout(x, L, ...oe)
            : setTimeout(x, L, ...oe);
        },
        clearTimeout(x) {
          const { delegate: L } = s;
          return (L?.clearTimeout || clearTimeout)(x);
        },
        delegate: void 0,
      };
    },
    2202: (Rt, Pe, C) => {
      C.d(Pe, { h: () => x });
      const x = (function s() {
        return 'function' == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : '@@iterator';
      })();
    },
    8822: (Rt, Pe, C) => {
      C.d(Pe, { L: () => s });
      const s =
        ('function' == typeof Symbol && Symbol.observable) || '@@observable';
    },
    3269: (Rt, Pe, C) => {
      C.d(Pe, { _6: () => ue, jO: () => oe, yG: () => te });
      var s = C(576),
        x = C(3532);
      function L(ve) {
        return ve[ve.length - 1];
      }
      function oe(ve) {
        return (0, s.m)(L(ve)) ? ve.pop() : void 0;
      }
      function te(ve) {
        return (0, x.K)(L(ve)) ? ve.pop() : void 0;
      }
      function ue(ve, le) {
        return 'number' == typeof L(ve) ? ve.pop() : le;
      }
    },
    4742: (Rt, Pe, C) => {
      C.d(Pe, { D: () => te });
      const { isArray: s } = Array,
        { getPrototypeOf: x, prototype: L, keys: oe } = Object;
      function te(ve) {
        if (1 === ve.length) {
          const le = ve[0];
          if (s(le)) return { args: le, keys: null };
          if (
            (function ue(ve) {
              return ve && 'object' == typeof ve && x(ve) === L;
            })(le)
          ) {
            const he = oe(le);
            return { args: he.map(ae => le[ae]), keys: he };
          }
        }
        return { args: ve, keys: null };
      }
    },
    8737: (Rt, Pe, C) => {
      function s(x, L) {
        if (x) {
          const oe = x.indexOf(L);
          0 <= oe && x.splice(oe, 1);
        }
      }
      C.d(Pe, { P: () => s });
    },
    3888: (Rt, Pe, C) => {
      function s(x) {
        const oe = x(te => {
          Error.call(te), (te.stack = new Error().stack);
        });
        return (
          (oe.prototype = Object.create(Error.prototype)),
          (oe.prototype.constructor = oe),
          oe
        );
      }
      C.d(Pe, { d: () => s });
    },
    1810: (Rt, Pe, C) => {
      function s(x, L) {
        return x.reduce((oe, te, ue) => ((oe[te] = L[ue]), oe), {});
      }
      C.d(Pe, { n: () => s });
    },
    2806: (Rt, Pe, C) => {
      C.d(Pe, { O: () => oe, x: () => L });
      var s = C(2416);
      let x = null;
      function L(te) {
        if (s.v.useDeprecatedSynchronousErrorHandling) {
          const ue = !x;
          if ((ue && (x = { errorThrown: !1, error: null }), te(), ue)) {
            const { errorThrown: ve, error: le } = x;
            if (((x = null), ve)) throw le;
          }
        } else te();
      }
      function oe(te) {
        s.v.useDeprecatedSynchronousErrorHandling &&
          x &&
          ((x.errorThrown = !0), (x.error = te));
      }
    },
    9672: (Rt, Pe, C) => {
      function s(x, L, oe, te = 0, ue = !1) {
        const ve = L.schedule(function () {
          oe(), ue ? x.add(this.schedule(null, te)) : this.unsubscribe();
        }, te);
        if ((x.add(ve), !ue)) return ve;
      }
      C.d(Pe, { f: () => s });
    },
    4671: (Rt, Pe, C) => {
      function s(x) {
        return x;
      }
      C.d(Pe, { y: () => s });
    },
    1144: (Rt, Pe, C) => {
      C.d(Pe, { z: () => s });
      const s = x => x && 'number' == typeof x.length && 'function' != typeof x;
    },
    2206: (Rt, Pe, C) => {
      C.d(Pe, { D: () => x });
      var s = C(576);
      function x(L) {
        return Symbol.asyncIterator && (0, s.m)(L?.[Symbol.asyncIterator]);
      }
    },
    576: (Rt, Pe, C) => {
      function s(x) {
        return 'function' == typeof x;
      }
      C.d(Pe, { m: () => s });
    },
    3670: (Rt, Pe, C) => {
      C.d(Pe, { c: () => L });
      var s = C(8822),
        x = C(576);
      function L(oe) {
        return (0, x.m)(oe[s.L]);
      }
    },
    6495: (Rt, Pe, C) => {
      C.d(Pe, { T: () => L });
      var s = C(2202),
        x = C(576);
      function L(oe) {
        return (0, x.m)(oe?.[s.h]);
      }
    },
    8239: (Rt, Pe, C) => {
      C.d(Pe, { t: () => x });
      var s = C(576);
      function x(L) {
        return (0, s.m)(L?.then);
      }
    },
    3260: (Rt, Pe, C) => {
      C.d(Pe, { L: () => oe, Q: () => L });
      var s = C(655),
        x = C(576);
      function L(te) {
        return (0, s.FC)(this, arguments, function* () {
          const ve = te.getReader();
          try {
            for (;;) {
              const { value: le, done: he } = yield (0, s.qq)(ve.read());
              if (he) return yield (0, s.qq)(void 0);
              yield yield (0, s.qq)(le);
            }
          } finally {
            ve.releaseLock();
          }
        });
      }
      function oe(te) {
        return (0, x.m)(te?.getReader);
      }
    },
    3532: (Rt, Pe, C) => {
      C.d(Pe, { K: () => x });
      var s = C(576);
      function x(L) {
        return L && (0, s.m)(L.schedule);
      }
    },
    4482: (Rt, Pe, C) => {
      C.d(Pe, { A: () => x, e: () => L });
      var s = C(576);
      function x(oe) {
        return (0, s.m)(oe?.lift);
      }
      function L(oe) {
        return te => {
          if (x(te))
            return te.lift(function (ue) {
              try {
                return oe(ue, this);
              } catch (ve) {
                this.error(ve);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
    },
    3268: (Rt, Pe, C) => {
      C.d(Pe, { Z: () => oe });
      var s = C(4004);
      const { isArray: x } = Array;
      function oe(te) {
        return (0, s.U)(ue =>
          (function L(te, ue) {
            return x(ue) ? te(...ue) : te(ue);
          })(te, ue),
        );
      }
    },
    5032: (Rt, Pe, C) => {
      function s() {}
      C.d(Pe, { Z: () => s });
    },
    9635: (Rt, Pe, C) => {
      C.d(Pe, { U: () => L, z: () => x });
      var s = C(4671);
      function x(...oe) {
        return L(oe);
      }
      function L(oe) {
        return 0 === oe.length
          ? s.y
          : 1 === oe.length
          ? oe[0]
          : function (ue) {
              return oe.reduce((ve, le) => le(ve), ue);
            };
      }
    },
    7849: (Rt, Pe, C) => {
      C.d(Pe, { h: () => L });
      var s = C(2416),
        x = C(3410);
      function L(oe) {
        x.z.setTimeout(() => {
          const { onUnhandledError: te } = s.v;
          if (!te) throw oe;
          te(oe);
        });
      }
    },
    4532: (Rt, Pe, C) => {
      function s(x) {
        return new TypeError(
          `You provided ${
            null !== x && 'object' == typeof x ? 'an invalid object' : `'${x}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`,
        );
      }
      C.d(Pe, { z: () => s });
    },
    655: (Rt, Pe, C) => {
      function ie($e, He, De, je) {
        return new (De || (De = Promise))(function (Re, Ne) {
          function Ge(Wt) {
            try {
              Ke(je.next(Wt));
            } catch (pt) {
              Ne(pt);
            }
          }
          function ct(Wt) {
            try {
              Ke(je.throw(Wt));
            } catch (pt) {
              Ne(pt);
            }
          }
          function Ke(Wt) {
            Wt.done
              ? Re(Wt.value)
              : (function Ce(Re) {
                  return Re instanceof De
                    ? Re
                    : new De(function (Ne) {
                        Ne(Re);
                      });
                })(Wt.value).then(Ge, ct);
          }
          Ke((je = je.apply($e, He || [])).next());
        });
      }
      function W($e) {
        return this instanceof W ? ((this.v = $e), this) : new W($e);
      }
      function se($e, He, De) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var Ce,
          je = De.apply($e, He || []),
          Re = [];
        return (
          (Ce = {}),
          Ne('next'),
          Ne('throw'),
          Ne('return'),
          (Ce[Symbol.asyncIterator] = function () {
            return this;
          }),
          Ce
        );
        function Ne(l) {
          je[l] &&
            (Ce[l] = function (yn) {
              return new Promise(function (rt, ft) {
                Re.push([l, yn, rt, ft]) > 1 || Ge(l, yn);
              });
            });
        }
        function Ge(l, yn) {
          try {
            !(function ct(l) {
              l.value instanceof W
                ? Promise.resolve(l.value.v).then(Ke, Wt)
                : pt(Re[0][2], l);
            })(je[l](yn));
          } catch (rt) {
            pt(Re[0][3], rt);
          }
        }
        function Ke(l) {
          Ge('next', l);
        }
        function Wt(l) {
          Ge('throw', l);
        }
        function pt(l, yn) {
          l(yn), Re.shift(), Re.length && Ge(Re[0][0], Re[0][1]);
        }
      }
      function X($e) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var De,
          He = $e[Symbol.asyncIterator];
        return He
          ? He.call($e)
          : (($e = (function vt($e) {
              var He = 'function' == typeof Symbol && Symbol.iterator,
                De = He && $e[He],
                je = 0;
              if (De) return De.call($e);
              if ($e && 'number' == typeof $e.length)
                return {
                  next: function () {
                    return (
                      $e && je >= $e.length && ($e = void 0),
                      { value: $e && $e[je++], done: !$e }
                    );
                  },
                };
              throw new TypeError(
                He
                  ? 'Object is not iterable.'
                  : 'Symbol.iterator is not defined.',
              );
            })($e)),
            (De = {}),
            je('next'),
            je('throw'),
            je('return'),
            (De[Symbol.asyncIterator] = function () {
              return this;
            }),
            De);
        function je(Re) {
          De[Re] =
            $e[Re] &&
            function (Ne) {
              return new Promise(function (Ge, ct) {
                !(function Ce(Re, Ne, Ge, ct) {
                  Promise.resolve(ct).then(function (Ke) {
                    Re({ value: Ke, done: Ge });
                  }, Ne);
                })(Ge, ct, (Ne = $e[Re](Ne)).done, Ne.value);
              });
            };
        }
      }
      C.d(Pe, { FC: () => se, KL: () => X, mG: () => ie, qq: () => W });
    },
    7340: (Rt, Pe, C) => {
      C.d(Pe, {
        F4: () => ae,
        IO: () => at,
        LC: () => x,
        SB: () => he,
        X$: () => oe,
        ZE: () => lt,
        ZN: () => _t,
        _j: () => s,
        eR: () => pe,
        jt: () => te,
        k1: () => bt,
        l3: () => L,
        oB: () => le,
        pV: () => Ve,
        ru: () => ue,
        vP: () => ve,
      });
      class s {}
      class x {}
      const L = '*';
      function oe(W, se) {
        return { type: 7, name: W, definitions: se, options: {} };
      }
      function te(W, se = null) {
        return { type: 4, styles: se, timings: W };
      }
      function ue(W, se = null) {
        return { type: 3, steps: W, options: se };
      }
      function ve(W, se = null) {
        return { type: 2, steps: W, options: se };
      }
      function le(W) {
        return { type: 6, styles: W, offset: null };
      }
      function he(W, se, ne) {
        return { type: 0, name: W, styles: se, options: ne };
      }
      function ae(W) {
        return { type: 5, steps: W };
      }
      function pe(W, se, ne = null) {
        return { type: 1, expr: W, animation: se, options: ne };
      }
      function Ve(W = null) {
        return { type: 9, options: W };
      }
      function at(W, se, ne = null) {
        return { type: 11, selector: W, animation: se, options: ne };
      }
      function Le(W) {
        Promise.resolve().then(W);
      }
      class _t {
        constructor(se = 0, ne = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = se + ne);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(se => se()),
            (this._onDoneFns = []));
        }
        onStart(se) {
          this._originalOnStartFns.push(se), this._onStartFns.push(se);
        }
        onDone(se) {
          this._originalOnDoneFns.push(se), this._onDoneFns.push(se);
        }
        onDestroy(se) {
          this._onDestroyFns.push(se);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Le(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach(se => se()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach(se => se()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(se) {
          this._position = this.totalTime ? se * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(se) {
          const ne = 'start' == se ? this._onStartFns : this._onDoneFns;
          ne.forEach(X => X()), (ne.length = 0);
        }
      }
      class lt {
        constructor(se) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = se);
          let ne = 0,
            X = 0,
            we = 0;
          const nt = this.players.length;
          0 == nt
            ? Le(() => this._onFinish())
            : this.players.forEach(ut => {
                ut.onDone(() => {
                  ++ne == nt && this._onFinish();
                }),
                  ut.onDestroy(() => {
                    ++X == nt && this._onDestroy();
                  }),
                  ut.onStart(() => {
                    ++we == nt && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (ut, Ut) => Math.max(ut, Ut.totalTime),
              0,
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(se => se()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach(se => se.init());
        }
        onStart(se) {
          this._onStartFns.push(se);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach(se => se()),
            (this._onStartFns = []));
        }
        onDone(se) {
          this._onDoneFns.push(se);
        }
        onDestroy(se) {
          this._onDestroyFns.push(se);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach(se => se.play());
        }
        pause() {
          this.players.forEach(se => se.pause());
        }
        restart() {
          this.players.forEach(se => se.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach(se => se.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach(se => se.destroy()),
            this._onDestroyFns.forEach(se => se()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach(se => se.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(se) {
          const ne = se * this.totalTime;
          this.players.forEach(X => {
            const we = X.totalTime ? Math.min(1, ne / X.totalTime) : 1;
            X.setPosition(we);
          });
        }
        getPosition() {
          const se = this.players.reduce(
            (ne, X) => (null === ne || X.totalTime > ne.totalTime ? X : ne),
            null,
          );
          return null != se ? se.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach(se => {
            se.beforeDestroy && se.beforeDestroy();
          });
        }
        triggerCallback(se) {
          const ne = 'start' == se ? this._onStartFns : this._onDoneFns;
          ne.forEach(X => X()), (ne.length = 0);
        }
      }
      const bt = '!';
    },
    2687: (Rt, Pe, C) => {
      C.d(Pe, {
        Em: () => He,
        Kd: () => me,
        X6: () => Pn,
        ic: () => je,
        kH: () => wn,
        mK: () => ln,
        qV: () => mt,
        qm: () => St,
        rt: () => Te,
        s1: () => $e,
        tE: () => Pt,
        yG: () => ot,
      });
      var s = C(6895),
        x = C(4650),
        L = C(3353),
        oe = C(7579),
        te = C(727),
        ue = C(1135),
        ve = C(9646),
        le = C(9521),
        he = C(8505),
        ae = C(8372),
        pe = C(9300),
        ie = C(4004),
        Ve = C(5698),
        Ue = C(5684),
        at = C(1884),
        vt = C(2722),
        Le = C(1281),
        _t = C(9643),
        lt = C(2289);
      class At {
        constructor(b) {
          (this._items = b),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new oe.x()),
            (this._typeaheadSubscription = te.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = M => M.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new oe.x()),
            (this.change = new oe.x()),
            b instanceof x.n_E &&
              (this._itemChangesSubscription = b.changes.subscribe(M => {
                if (this._activeItem) {
                  const Q = M.toArray().indexOf(this._activeItem);
                  Q > -1 &&
                    Q !== this._activeItemIndex &&
                    (this._activeItemIndex = Q);
                }
              }));
        }
        skipPredicate(b) {
          return (this._skipPredicateFn = b), this;
        }
        withWrap(b = !0) {
          return (this._wrap = b), this;
        }
        withVerticalOrientation(b = !0) {
          return (this._vertical = b), this;
        }
        withHorizontalOrientation(b) {
          return (this._horizontal = b), this;
        }
        withAllowedModifierKeys(b) {
          return (this._allowedModifierKeys = b), this;
        }
        withTypeAhead(b = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, he.b)(M => this._pressedLetters.push(M)),
                (0, ae.b)(b),
                (0, pe.h)(() => this._pressedLetters.length > 0),
                (0, ie.U)(() => this._pressedLetters.join('')),
              )
              .subscribe(M => {
                const G = this._getItemsArray();
                for (let Q = 1; Q < G.length + 1; Q++) {
                  const Qe = (this._activeItemIndex + Q) % G.length,
                    Tt = G[Qe];
                  if (
                    !this._skipPredicateFn(Tt) &&
                    0 === Tt.getLabel().toUpperCase().trim().indexOf(M)
                  ) {
                    this.setActiveItem(Qe);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(b = !0) {
          return (this._homeAndEnd = b), this;
        }
        withPageUpDown(b = !0, M = 10) {
          return (this._pageUpAndDown = { enabled: b, delta: M }), this;
        }
        setActiveItem(b) {
          const M = this._activeItem;
          this.updateActiveItem(b),
            this._activeItem !== M && this.change.next(this._activeItemIndex);
        }
        onKeydown(b) {
          const M = b.keyCode,
            Q = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              Qe => !b[Qe] || this._allowedModifierKeys.indexOf(Qe) > -1,
            );
          switch (M) {
            case le.Mf:
              return void this.tabOut.next();
            case le.JH:
              if (this._vertical && Q) {
                this.setNextItemActive();
                break;
              }
              return;
            case le.LH:
              if (this._vertical && Q) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case le.SV:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case le.oh:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case le.Sd:
              if (this._homeAndEnd && Q) {
                this.setFirstItemActive();
                break;
              }
              return;
            case le.uR:
              if (this._homeAndEnd && Q) {
                this.setLastItemActive();
                break;
              }
              return;
            case le.Ku:
              if (this._pageUpAndDown.enabled && Q) {
                const Qe = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(Qe > 0 ? Qe : 0, 1);
                break;
              }
              return;
            case le.VM:
              if (this._pageUpAndDown.enabled && Q) {
                const Qe = this._activeItemIndex + this._pageUpAndDown.delta,
                  Tt = this._getItemsArray().length;
                this._setActiveItemByIndex(Qe < Tt ? Qe : Tt - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (Q || (0, le.Vb)(b, 'shiftKey')) &&
                (b.key && 1 === b.key.length
                  ? this._letterKeyStream.next(b.key.toLocaleUpperCase())
                  : ((M >= le.A && M <= le.Z) || (M >= le.xE && M <= le.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(M)))
              );
          }
          (this._pressedLetters = []), b.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(b) {
          const M = this._getItemsArray(),
            G = 'number' == typeof b ? b : M.indexOf(b);
          (this._activeItem = M[G] ?? null), (this._activeItemIndex = G);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(b) {
          this._wrap
            ? this._setActiveInWrapMode(b)
            : this._setActiveInDefaultMode(b);
        }
        _setActiveInWrapMode(b) {
          const M = this._getItemsArray();
          for (let G = 1; G <= M.length; G++) {
            const Q = (this._activeItemIndex + b * G + M.length) % M.length;
            if (!this._skipPredicateFn(M[Q])) return void this.setActiveItem(Q);
          }
        }
        _setActiveInDefaultMode(b) {
          this._setActiveItemByIndex(this._activeItemIndex + b, b);
        }
        _setActiveItemByIndex(b, M) {
          const G = this._getItemsArray();
          if (G[b]) {
            for (; this._skipPredicateFn(G[b]); ) if (!G[(b += M)]) return;
            this.setActiveItem(b);
          }
        }
        _getItemsArray() {
          return this._items instanceof x.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class $e extends At {
        setActiveItem(b) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(b),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class He extends At {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(b) {
          return (this._origin = b), this;
        }
        setActiveItem(b) {
          super.setActiveItem(b),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let je = (() => {
        class F {
          constructor(M) {
            this._platform = M;
          }
          isDisabled(M) {
            return M.hasAttribute('disabled');
          }
          isVisible(M) {
            return (
              (function Re(F) {
                return !!(
                  F.offsetWidth ||
                  F.offsetHeight ||
                  ('function' == typeof F.getClientRects &&
                    F.getClientRects().length)
                );
              })(M) && 'visible' === getComputedStyle(M).visibility
            );
          }
          isTabbable(M) {
            if (!this._platform.isBrowser) return !1;
            const G = (function Ce(F) {
              try {
                return F.frameElement;
              } catch {
                return null;
              }
            })(
              (function ft(F) {
                return (
                  (F.ownerDocument && F.ownerDocument.defaultView) || window
                );
              })(M),
            );
            if (G && (-1 === l(G) || !this.isVisible(G))) return !1;
            let Q = M.nodeName.toLowerCase(),
              Qe = l(M);
            return M.hasAttribute('contenteditable')
              ? -1 !== Qe
              : !(
                  'iframe' === Q ||
                  'object' === Q ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function yn(F) {
                      let b = F.nodeName.toLowerCase(),
                        M = 'input' === b && F.type;
                      return (
                        'text' === M ||
                        'password' === M ||
                        'select' === b ||
                        'textarea' === b
                      );
                    })(M))
                ) &&
                  ('audio' === Q
                    ? !!M.hasAttribute('controls') && -1 !== Qe
                    : 'video' === Q
                    ? -1 !== Qe &&
                      (null !== Qe ||
                        this._platform.FIREFOX ||
                        M.hasAttribute('controls'))
                    : M.tabIndex >= 0);
          }
          isFocusable(M, G) {
            return (
              (function rt(F) {
                return (
                  !(function Ge(F) {
                    return (
                      (function Ke(F) {
                        return 'input' == F.nodeName.toLowerCase();
                      })(F) && 'hidden' == F.type
                    );
                  })(F) &&
                  ((function Ne(F) {
                    let b = F.nodeName.toLowerCase();
                    return (
                      'input' === b ||
                      'select' === b ||
                      'button' === b ||
                      'textarea' === b
                    );
                  })(F) ||
                    (function ct(F) {
                      return (
                        (function Wt(F) {
                          return 'a' == F.nodeName.toLowerCase();
                        })(F) && F.hasAttribute('href')
                      );
                    })(F) ||
                    F.hasAttribute('contenteditable') ||
                    pt(F))
                );
              })(M) &&
              !this.isDisabled(M) &&
              (G?.ignoreVisibility || this.isVisible(M))
            );
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(L.t4));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac, providedIn: 'root' })),
          F
        );
      })();
      function pt(F) {
        if (!F.hasAttribute('tabindex') || void 0 === F.tabIndex) return !1;
        let b = F.getAttribute('tabindex');
        return !(!b || isNaN(parseInt(b, 10)));
      }
      function l(F) {
        if (!pt(F)) return null;
        const b = parseInt(F.getAttribute('tabindex') || '', 10);
        return isNaN(b) ? -1 : b;
      }
      class Et {
        get enabled() {
          return this._enabled;
        }
        set enabled(b) {
          (this._enabled = b),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(b, this._startAnchor),
              this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        constructor(b, M, G, Q, Qe = !1) {
          (this._element = b),
            (this._checker = M),
            (this._ngZone = G),
            (this._document = Q),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            Qe || this.attachAnchors();
        }
        destroy() {
          const b = this._startAnchor,
            M = this._endAnchor;
          b &&
            (b.removeEventListener('focus', this.startAnchorListener),
            b.remove()),
            M &&
              (M.removeEventListener('focus', this.endAnchorListener),
              M.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  'focus',
                  this.startAnchorListener,
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    'focus',
                    this.endAnchorListener,
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element,
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling,
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusInitialElement(b)));
          });
        }
        focusFirstTabbableElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusFirstTabbableElement(b)));
          });
        }
        focusLastTabbableElementWhenReady(b) {
          return new Promise(M => {
            this._executeOnStable(() => M(this.focusLastTabbableElement(b)));
          });
        }
        _getRegionBoundary(b) {
          const M = this._element.querySelectorAll(
            `[cdk-focus-region-${b}], [cdkFocusRegion${b}], [cdk-focus-${b}]`,
          );
          return 'start' == b
            ? M.length
              ? M[0]
              : this._getFirstTabbableElement(this._element)
            : M.length
            ? M[M.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(b) {
          const M = this._element.querySelector(
            '[cdk-focus-initial], [cdkFocusInitial]',
          );
          if (M) {
            if (!this._checker.isFocusable(M)) {
              const G = this._getFirstTabbableElement(M);
              return G?.focus(b), !!G;
            }
            return M.focus(b), !0;
          }
          return this.focusFirstTabbableElement(b);
        }
        focusFirstTabbableElement(b) {
          const M = this._getRegionBoundary('start');
          return M && M.focus(b), !!M;
        }
        focusLastTabbableElement(b) {
          const M = this._getRegionBoundary('end');
          return M && M.focus(b), !!M;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const M = b.children;
          for (let G = 0; G < M.length; G++) {
            const Q =
              M[G].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(M[G])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _getLastTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const M = b.children;
          for (let G = M.length - 1; G >= 0; G--) {
            const Q =
              M[G].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(M[G])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _createAnchor() {
          const b = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, b),
            b.classList.add('cdk-visually-hidden'),
            b.classList.add('cdk-focus-trap-anchor'),
            b.setAttribute('aria-hidden', 'true'),
            b
          );
        }
        _toggleAnchorTabIndex(b, M) {
          b ? M.setAttribute('tabindex', '0') : M.removeAttribute('tabindex');
        }
        toggleAnchors(b) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(b, this._startAnchor),
            this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        _executeOnStable(b) {
          this._ngZone.isStable
            ? b()
            : this._ngZone.onStable.pipe((0, Ve.q)(1)).subscribe(b);
        }
      }
      let mt = (() => {
          class F {
            constructor(M, G, Q) {
              (this._checker = M), (this._ngZone = G), (this._document = Q);
            }
            create(M, G = !1) {
              return new Et(M, this._checker, this._ngZone, this._document, G);
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(je), x.LFG(x.R0b), x.LFG(s.K0));
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        ln = (() => {
          class F {
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(M) {
              this.focusTrap.enabled = (0, Le.Ig)(M);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(M) {
              this._autoCapture = (0, Le.Ig)(M);
            }
            constructor(M, G, Q) {
              (this._elementRef = M),
                (this._focusTrapFactory = G),
                (this._previouslyFocusedElement = null),
                (this.focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                  !0,
                ));
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(),
                  (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture && this._captureFocus();
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
            ngOnChanges(M) {
              const G = M.autoCapture;
              G &&
                !G.firstChange &&
                this.autoCapture &&
                this.focusTrap.hasAttached() &&
                this._captureFocus();
            }
            _captureFocus() {
              (this._previouslyFocusedElement = (0, L.ht)()),
                this.focusTrap.focusInitialElementWhenReady();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.Y36(x.SBq), x.Y36(mt), x.Y36(s.K0));
            }),
            (F.ɵdir = x.lG2({
              type: F,
              selectors: [['', 'cdkTrapFocus', '']],
              inputs: {
                enabled: ['cdkTrapFocus', 'enabled'],
                autoCapture: ['cdkTrapFocusAutoCapture', 'autoCapture'],
              },
              exportAs: ['cdkTrapFocus'],
              features: [x.TTD],
            })),
            F
          );
        })();
      function Pn(F) {
        return 0 === F.buttons || (0 === F.offsetX && 0 === F.offsetY);
      }
      function ot(F) {
        const b =
          (F.touches && F.touches[0]) ||
          (F.changedTouches && F.changedTouches[0]);
        return !(
          !b ||
          -1 !== b.identifier ||
          (null != b.radiusX && 1 !== b.radiusX) ||
          (null != b.radiusY && 1 !== b.radiusY)
        );
      }
      const z = new x.OlP('cdk-input-modality-detector-options'),
        ee = { ignoreKeys: [le.zL, le.jx, le.b2, le.MW, le.JU] },
        ze = (0, L.i$)({ passive: !0, capture: !0 });
      let _e = (() => {
        class F {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(M, G, Q, Qe) {
            (this._platform = M),
              (this._mostRecentTarget = null),
              (this._modality = new ue.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = Tt => {
                this._options?.ignoreKeys?.some(Vt => Vt === Tt.keyCode) ||
                  (this._modality.next('keyboard'),
                  (this._mostRecentTarget = (0, L.sA)(Tt)));
              }),
              (this._onMousedown = Tt => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(Pn(Tt) ? 'keyboard' : 'mouse'),
                  (this._mostRecentTarget = (0, L.sA)(Tt)));
              }),
              (this._onTouchstart = Tt => {
                ot(Tt)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = (0, L.sA)(Tt)));
              }),
              (this._options = { ...ee, ...Qe }),
              (this.modalityDetected = this._modality.pipe((0, Ue.T)(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, at.x)())),
              M.isBrowser &&
                G.runOutsideAngular(() => {
                  Q.addEventListener('keydown', this._onKeydown, ze),
                    Q.addEventListener('mousedown', this._onMousedown, ze),
                    Q.addEventListener('touchstart', this._onTouchstart, ze);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, ze),
                document.removeEventListener(
                  'mousedown',
                  this._onMousedown,
                  ze,
                ),
                document.removeEventListener(
                  'touchstart',
                  this._onTouchstart,
                  ze,
                ));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(
              x.LFG(L.t4),
              x.LFG(x.R0b),
              x.LFG(s.K0),
              x.LFG(z, 8),
            );
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac, providedIn: 'root' })),
          F
        );
      })();
      const ye = new x.OlP('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function H() {
            return null;
          },
        }),
        ke = new x.OlP('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let de = 0,
        me = (() => {
          class F {
            constructor(M, G, Q, Qe) {
              (this._ngZone = G),
                (this._defaultOptions = Qe),
                (this._document = Q),
                (this._liveElement = M || this._createLiveElement());
            }
            announce(M, ...G) {
              const Q = this._defaultOptions;
              let Qe, Tt;
              return (
                1 === G.length && 'number' == typeof G[0]
                  ? (Tt = G[0])
                  : ([Qe, Tt] = G),
                this.clear(),
                clearTimeout(this._previousTimeout),
                Qe || (Qe = Q && Q.politeness ? Q.politeness : 'polite'),
                null == Tt && Q && (Tt = Q.duration),
                this._liveElement.setAttribute('aria-live', Qe),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        Vt => (this._currentResolve = Vt),
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = M),
                        'number' == typeof Tt &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            Tt,
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  ),
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const M = 'cdk-live-announcer-element',
                G = this._document.getElementsByClassName(M),
                Q = this._document.createElement('div');
              for (let Qe = 0; Qe < G.length; Qe++) G[Qe].remove();
              return (
                Q.classList.add(M),
                Q.classList.add('cdk-visually-hidden'),
                Q.setAttribute('aria-atomic', 'true'),
                Q.setAttribute('aria-live', 'polite'),
                (Q.id = 'cdk-live-announcer-' + de++),
                this._document.body.appendChild(Q),
                Q
              );
            }
            _exposeAnnouncerToModals(M) {
              const G = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              for (let Q = 0; Q < G.length; Q++) {
                const Qe = G[Q],
                  Tt = Qe.getAttribute('aria-owns');
                Tt
                  ? -1 === Tt.indexOf(M) &&
                    Qe.setAttribute('aria-owns', Tt + ' ' + M)
                  : Qe.setAttribute('aria-owns', M);
              }
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(
                x.LFG(ye, 8),
                x.LFG(x.R0b),
                x.LFG(s.K0),
                x.LFG(ke, 8),
              );
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })();
      const qe = new x.OlP('cdk-focus-monitor-default-options'),
        Mt = (0, L.i$)({ passive: !0, capture: !0 });
      let Pt = (() => {
          class F {
            constructor(M, G, Q, Qe, Tt) {
              (this._ngZone = M),
                (this._platform = G),
                (this._inputModalityDetector = Q),
                (this._origin = null),
                (this._windowFocused = !1),
                (this._originFromTouchInteraction = !1),
                (this._elementInfo = new Map()),
                (this._monitoredElementCount = 0),
                (this._rootNodeFocusListenerCount = new Map()),
                (this._windowFocusListener = () => {
                  (this._windowFocused = !0),
                    (this._windowFocusTimeoutId = window.setTimeout(
                      () => (this._windowFocused = !1),
                    ));
                }),
                (this._stopInputModalityDetector = new oe.x()),
                (this._rootNodeFocusAndBlurListener = Vt => {
                  for (let Ft = (0, L.sA)(Vt); Ft; Ft = Ft.parentElement)
                    'focus' === Vt.type
                      ? this._onFocus(Vt, Ft)
                      : this._onBlur(Vt, Ft);
                }),
                (this._document = Qe),
                (this._detectionMode = Tt?.detectionMode || 0);
            }
            monitor(M, G = !1) {
              const Q = (0, Le.fI)(M);
              if (!this._platform.isBrowser || 1 !== Q.nodeType)
                return (0, ve.of)(null);
              const Qe = (0, L.kV)(Q) || this._getDocument(),
                Tt = this._elementInfo.get(Q);
              if (Tt) return G && (Tt.checkChildren = !0), Tt.subject;
              const Vt = {
                checkChildren: G,
                subject: new oe.x(),
                rootNode: Qe,
              };
              return (
                this._elementInfo.set(Q, Vt),
                this._registerGlobalListeners(Vt),
                Vt.subject
              );
            }
            stopMonitoring(M) {
              const G = (0, Le.fI)(M),
                Q = this._elementInfo.get(G);
              Q &&
                (Q.subject.complete(),
                this._setClasses(G),
                this._elementInfo.delete(G),
                this._removeGlobalListeners(Q));
            }
            focusVia(M, G, Q) {
              const Qe = (0, Le.fI)(M);
              Qe === this._getDocument().activeElement
                ? this._getClosestElementsInfo(Qe).forEach(([Vt, Je]) =>
                    this._originChanged(Vt, G, Je),
                  )
                : (this._setOrigin(G),
                  'function' == typeof Qe.focus && Qe.focus(Q));
            }
            ngOnDestroy() {
              this._elementInfo.forEach((M, G) => this.stopMonitoring(G));
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _getFocusOrigin(M) {
              return this._origin
                ? this._originFromTouchInteraction
                  ? this._shouldBeAttributedToTouch(M)
                    ? 'touch'
                    : 'program'
                  : this._origin
                : this._windowFocused && this._lastFocusOrigin
                ? this._lastFocusOrigin
                : M && this._isLastInteractionFromInputLabel(M)
                ? 'mouse'
                : 'program';
            }
            _shouldBeAttributedToTouch(M) {
              return (
                1 === this._detectionMode ||
                !!M?.contains(this._inputModalityDetector._mostRecentTarget)
              );
            }
            _setClasses(M, G) {
              M.classList.toggle('cdk-focused', !!G),
                M.classList.toggle('cdk-touch-focused', 'touch' === G),
                M.classList.toggle('cdk-keyboard-focused', 'keyboard' === G),
                M.classList.toggle('cdk-mouse-focused', 'mouse' === G),
                M.classList.toggle('cdk-program-focused', 'program' === G);
            }
            _setOrigin(M, G = !1) {
              this._ngZone.runOutsideAngular(() => {
                (this._origin = M),
                  (this._originFromTouchInteraction = 'touch' === M && G),
                  0 === this._detectionMode &&
                    (clearTimeout(this._originTimeoutId),
                    (this._originTimeoutId = setTimeout(
                      () => (this._origin = null),
                      this._originFromTouchInteraction ? 650 : 1,
                    )));
              });
            }
            _onFocus(M, G) {
              const Q = this._elementInfo.get(G),
                Qe = (0, L.sA)(M);
              !Q ||
                (!Q.checkChildren && G !== Qe) ||
                this._originChanged(G, this._getFocusOrigin(Qe), Q);
            }
            _onBlur(M, G) {
              const Q = this._elementInfo.get(G);
              !Q ||
                (Q.checkChildren &&
                  M.relatedTarget instanceof Node &&
                  G.contains(M.relatedTarget)) ||
                (this._setClasses(G), this._emitOrigin(Q, null));
            }
            _emitOrigin(M, G) {
              M.subject.observers.length &&
                this._ngZone.run(() => M.subject.next(G));
            }
            _registerGlobalListeners(M) {
              if (!this._platform.isBrowser) return;
              const G = M.rootNode,
                Q = this._rootNodeFocusListenerCount.get(G) || 0;
              Q ||
                this._ngZone.runOutsideAngular(() => {
                  G.addEventListener(
                    'focus',
                    this._rootNodeFocusAndBlurListener,
                    Mt,
                  ),
                    G.addEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    );
                }),
                this._rootNodeFocusListenerCount.set(G, Q + 1),
                1 == ++this._monitoredElementCount &&
                  (this._ngZone.runOutsideAngular(() => {
                    this._getWindow().addEventListener(
                      'focus',
                      this._windowFocusListener,
                    );
                  }),
                  this._inputModalityDetector.modalityDetected
                    .pipe((0, vt.R)(this._stopInputModalityDetector))
                    .subscribe(Qe => {
                      this._setOrigin(Qe, !0);
                    }));
            }
            _removeGlobalListeners(M) {
              const G = M.rootNode;
              if (this._rootNodeFocusListenerCount.has(G)) {
                const Q = this._rootNodeFocusListenerCount.get(G);
                Q > 1
                  ? this._rootNodeFocusListenerCount.set(G, Q - 1)
                  : (G.removeEventListener(
                      'focus',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    ),
                    G.removeEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    ),
                    this._rootNodeFocusListenerCount.delete(G));
              }
              --this._monitoredElementCount ||
                (this._getWindow().removeEventListener(
                  'focus',
                  this._windowFocusListener,
                ),
                this._stopInputModalityDetector.next(),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._originTimeoutId));
            }
            _originChanged(M, G, Q) {
              this._setClasses(M, G),
                this._emitOrigin(Q, G),
                (this._lastFocusOrigin = G);
            }
            _getClosestElementsInfo(M) {
              const G = [];
              return (
                this._elementInfo.forEach((Q, Qe) => {
                  (Qe === M || (Q.checkChildren && Qe.contains(M))) &&
                    G.push([Qe, Q]);
                }),
                G
              );
            }
            _isLastInteractionFromInputLabel(M) {
              const { _mostRecentTarget: G, mostRecentModality: Q } =
                this._inputModalityDetector;
              if (
                'mouse' !== Q ||
                !G ||
                G === M ||
                ('INPUT' !== M.nodeName && 'TEXTAREA' !== M.nodeName) ||
                M.disabled
              )
                return !1;
              const Qe = M.labels;
              if (Qe)
                for (let Tt = 0; Tt < Qe.length; Tt++)
                  if (Qe[Tt].contains(G)) return !0;
              return !1;
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(
                x.LFG(x.R0b),
                x.LFG(L.t4),
                x.LFG(_e),
                x.LFG(s.K0, 8),
                x.LFG(qe, 8),
              );
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        wn = (() => {
          class F {
            constructor(M, G) {
              (this._elementRef = M),
                (this._focusMonitor = G),
                (this._focusOrigin = null),
                (this.cdkFocusChange = new x.vpe());
            }
            get focusOrigin() {
              return this._focusOrigin;
            }
            ngAfterViewInit() {
              const M = this._elementRef.nativeElement;
              this._monitorSubscription = this._focusMonitor
                .monitor(
                  M,
                  1 === M.nodeType && M.hasAttribute('cdkMonitorSubtreeFocus'),
                )
                .subscribe(G => {
                  (this._focusOrigin = G), this.cdkFocusChange.emit(G);
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._monitorSubscription &&
                  this._monitorSubscription.unsubscribe();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.Y36(x.SBq), x.Y36(Pt));
            }),
            (F.ɵdir = x.lG2({
              type: F,
              selectors: [
                ['', 'cdkMonitorElementFocus', ''],
                ['', 'cdkMonitorSubtreeFocus', ''],
              ],
              outputs: { cdkFocusChange: 'cdkFocusChange' },
              exportAs: ['cdkMonitorFocus'],
            })),
            F
          );
        })();
      const Ie = 'cdk-high-contrast-black-on-white',
        Dt = 'cdk-high-contrast-white-on-black',
        et = 'cdk-high-contrast-active';
      let St = (() => {
          class F {
            constructor(M, G) {
              (this._platform = M),
                (this._document = G),
                (this._breakpointSubscription = (0, x.f3M)(lt.Yg)
                  .observe('(forced-colors: active)')
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const M = this._document.createElement('div');
              (M.style.backgroundColor = 'rgb(1,2,3)'),
                (M.style.position = 'absolute'),
                this._document.body.appendChild(M);
              const G = this._document.defaultView || window,
                Q = G && G.getComputedStyle ? G.getComputedStyle(M) : null,
                Qe = ((Q && Q.backgroundColor) || '').replace(/ /g, '');
              switch ((M.remove(), Qe)) {
                case 'rgb(0,0,0)':
                case 'rgb(45,50,54)':
                case 'rgb(32,32,32)':
                  return 2;
                case 'rgb(255,255,255)':
                case 'rgb(255,250,239)':
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const M = this._document.body.classList;
                M.remove(et, Ie, Dt), (this._hasCheckedHighContrastMode = !0);
                const G = this.getHighContrastMode();
                1 === G ? M.add(et, Ie) : 2 === G && M.add(et, Dt);
              }
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(L.t4), x.LFG(s.K0));
            }),
            (F.ɵprov = x.Yz7({
              token: F,
              factory: F.ɵfac,
              providedIn: 'root',
            })),
            F
          );
        })(),
        Te = (() => {
          class F {
            constructor(M) {
              M._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (F.ɵfac = function (M) {
              return new (M || F)(x.LFG(St));
            }),
            (F.ɵmod = x.oAB({ type: F })),
            (F.ɵinj = x.cJS({ imports: [_t.Q8] })),
            F
          );
        })();
    },
    445: (Rt, Pe, C) => {
      C.d(Pe, { Is: () => ve, vT: () => he });
      var s = C(4650),
        x = C(6895);
      const L = new s.OlP('cdk-dir-doc', {
          providedIn: 'root',
          factory: function oe() {
            return (0, s.f3M)(x.K0);
          },
        }),
        te =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let ve = (() => {
          class ae {
            constructor(ie) {
              (this.value = 'ltr'),
                (this.change = new s.vpe()),
                ie &&
                  (this.value = (function ue(ae) {
                    const pe = ae?.toLowerCase() || '';
                    return 'auto' === pe &&
                      typeof navigator < 'u' &&
                      navigator?.language
                      ? te.test(navigator.language)
                        ? 'rtl'
                        : 'ltr'
                      : 'rtl' === pe
                      ? 'rtl'
                      : 'ltr';
                  })(
                    (ie.body ? ie.body.dir : null) ||
                      (ie.documentElement ? ie.documentElement.dir : null) ||
                      'ltr',
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)(s.LFG(L, 8));
            }),
            (ae.ɵprov = s.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        he = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)();
            }),
            (ae.ɵmod = s.oAB({ type: ae })),
            (ae.ɵinj = s.cJS({})),
            ae
          );
        })();
    },
    1281: (Rt, Pe, C) => {
      C.d(Pe, {
        Eq: () => te,
        HM: () => ue,
        Ig: () => x,
        du: () => le,
        fI: () => ve,
        su: () => L,
      });
      var s = C(4650);
      function x(he) {
        return null != he && 'false' != `${he}`;
      }
      function L(he, ae = 0) {
        return (function oe(he) {
          return !isNaN(parseFloat(he)) && !isNaN(Number(he));
        })(he)
          ? Number(he)
          : ae;
      }
      function te(he) {
        return Array.isArray(he) ? he : [he];
      }
      function ue(he) {
        return null == he ? '' : 'string' == typeof he ? he : `${he}px`;
      }
      function ve(he) {
        return he instanceof s.SBq ? he.nativeElement : he;
      }
      function le(he, ae = /\s+/) {
        const pe = [];
        if (null != he) {
          const ie = Array.isArray(he) ? he : `${he}`.split(ae);
          for (const Ve of ie) {
            const Ue = `${Ve}`.trim();
            Ue && pe.push(Ue);
          }
        }
        return pe;
      }
    },
    9521: (Rt, Pe, C) => {
      C.d(Pe, {
        A: () => Ge,
        JH: () => bt,
        JU: () => ue,
        K5: () => te,
        Ku: () => Ve,
        LH: () => _t,
        L_: () => ie,
        MW: () => ke,
        Mf: () => L,
        SV: () => lt,
        Sd: () => vt,
        VM: () => Ue,
        Vb: () => li,
        Z: () => H,
        aO: () => De,
        b2: () => Qn,
        hY: () => pe,
        jx: () => ve,
        oh: () => Le,
        uR: () => at,
        xE: () => we,
        zL: () => le,
      });
      const L = 9,
        te = 13,
        ue = 16,
        ve = 17,
        le = 18,
        pe = 27,
        ie = 32,
        Ve = 33,
        Ue = 34,
        at = 35,
        vt = 36,
        Le = 37,
        _t = 38,
        lt = 39,
        bt = 40,
        we = 48,
        De = 57,
        Ge = 65,
        H = 90,
        ke = 91,
        Qn = 224;
      function li(An, ...Mi) {
        return Mi.length
          ? Mi.some(ri => An[ri])
          : An.altKey || An.shiftKey || An.ctrlKey || An.metaKey;
      }
    },
    2289: (Rt, Pe, C) => {
      C.d(Pe, { Yg: () => bt, u3: () => se });
      var s = C(4650),
        x = C(1281),
        L = C(7579),
        oe = C(9841),
        te = C(7272),
        ue = C(9751),
        ve = C(5698),
        le = C(5684),
        he = C(8372),
        ae = C(4004),
        pe = C(8675),
        ie = C(2722),
        Ve = C(3353);
      const at = new Set();
      let vt,
        Le = (() => {
          class ne {
            constructor(we) {
              (this._platform = we),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : lt);
            }
            matchMedia(we) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function _t(ne) {
                    if (!at.has(ne))
                      try {
                        vt ||
                          ((vt = document.createElement('style')),
                          vt.setAttribute('type', 'text/css'),
                          document.head.appendChild(vt)),
                          vt.sheet &&
                            (vt.sheet.insertRule(`@media ${ne} {body{ }}`, 0),
                            at.add(ne));
                      } catch (X) {
                        console.error(X);
                      }
                  })(we),
                this._matchMedia(we)
              );
            }
          }
          return (
            (ne.ɵfac = function (we) {
              return new (we || ne)(s.LFG(Ve.t4));
            }),
            (ne.ɵprov = s.Yz7({
              token: ne,
              factory: ne.ɵfac,
              providedIn: 'root',
            })),
            ne
          );
        })();
      function lt(ne) {
        return {
          matches: 'all' === ne || '' === ne,
          media: ne,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let bt = (() => {
        class ne {
          constructor(we, nt) {
            (this._mediaMatcher = we),
              (this._zone = nt),
              (this._queries = new Map()),
              (this._destroySubject = new L.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(we) {
            return W((0, x.Eq)(we)).some(
              ut => this._registerQuery(ut).mql.matches,
            );
          }
          observe(we) {
            const ut = W((0, x.Eq)(we)).map(
              xt => this._registerQuery(xt).observable,
            );
            let Ut = (0, oe.a)(ut);
            return (
              (Ut = (0, te.z)(
                Ut.pipe((0, ve.q)(1)),
                Ut.pipe((0, le.T)(1), (0, he.b)(0)),
              )),
              Ut.pipe(
                (0, ae.U)(xt => {
                  const Kt = { matches: !1, breakpoints: {} };
                  return (
                    xt.forEach(({ matches: At, query: $e }) => {
                      (Kt.matches = Kt.matches || At),
                        (Kt.breakpoints[$e] = At);
                    }),
                    Kt
                  );
                }),
              )
            );
          }
          _registerQuery(we) {
            if (this._queries.has(we)) return this._queries.get(we);
            const nt = this._mediaMatcher.matchMedia(we),
              Ut = {
                observable: new ue.y(xt => {
                  const Kt = At => this._zone.run(() => xt.next(At));
                  return (
                    nt.addListener(Kt),
                    () => {
                      nt.removeListener(Kt);
                    }
                  );
                }).pipe(
                  (0, pe.O)(nt),
                  (0, ae.U)(({ matches: xt }) => ({ query: we, matches: xt })),
                  (0, ie.R)(this._destroySubject),
                ),
                mql: nt,
              };
            return this._queries.set(we, Ut), Ut;
          }
        }
        return (
          (ne.ɵfac = function (we) {
            return new (we || ne)(s.LFG(Le), s.LFG(s.R0b));
          }),
          (ne.ɵprov = s.Yz7({
            token: ne,
            factory: ne.ɵfac,
            providedIn: 'root',
          })),
          ne
        );
      })();
      function W(ne) {
        return ne
          .map(X => X.split(','))
          .reduce((X, we) => X.concat(we))
          .map(X => X.trim());
      }
      const se = {
        XSmall: '(max-width: 599.98px)',
        Small: '(min-width: 600px) and (max-width: 959.98px)',
        Medium: '(min-width: 960px) and (max-width: 1279.98px)',
        Large: '(min-width: 1280px) and (max-width: 1919.98px)',
        XLarge: '(min-width: 1920px)',
        Handset:
          '(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)',
        Tablet:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        Web: '(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)',
        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',
        TabletPortrait:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',
        WebPortrait: '(min-width: 840px) and (orientation: portrait)',
        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',
        TabletLandscape:
          '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',
      };
    },
    9643: (Rt, Pe, C) => {
      C.d(Pe, { Q8: () => he, wD: () => le });
      var s = C(1281),
        x = C(4650),
        L = C(9751),
        oe = C(7579),
        te = C(8372);
      let ue = (() => {
          class ae {
            create(ie) {
              return typeof MutationObserver > 'u'
                ? null
                : new MutationObserver(ie);
            }
          }
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)();
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        ve = (() => {
          class ae {
            constructor(ie) {
              (this._mutationObserverFactory = ie),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((ie, Ve) =>
                this._cleanupObserver(Ve),
              );
            }
            observe(ie) {
              const Ve = (0, s.fI)(ie);
              return new L.y(Ue => {
                const vt = this._observeElement(Ve).subscribe(Ue);
                return () => {
                  vt.unsubscribe(), this._unobserveElement(Ve);
                };
              });
            }
            _observeElement(ie) {
              if (this._observedElements.has(ie))
                this._observedElements.get(ie).count++;
              else {
                const Ve = new oe.x(),
                  Ue = this._mutationObserverFactory.create(at => Ve.next(at));
                Ue &&
                  Ue.observe(ie, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(ie, {
                    observer: Ue,
                    stream: Ve,
                    count: 1,
                  });
              }
              return this._observedElements.get(ie).stream;
            }
            _unobserveElement(ie) {
              this._observedElements.has(ie) &&
                (this._observedElements.get(ie).count--,
                this._observedElements.get(ie).count ||
                  this._cleanupObserver(ie));
            }
            _cleanupObserver(ie) {
              if (this._observedElements.has(ie)) {
                const { observer: Ve, stream: Ue } =
                  this._observedElements.get(ie);
                Ve && Ve.disconnect(),
                  Ue.complete(),
                  this._observedElements.delete(ie);
              }
            }
          }
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)(x.LFG(ue));
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        le = (() => {
          class ae {
            get disabled() {
              return this._disabled;
            }
            set disabled(ie) {
              (this._disabled = (0, s.Ig)(ie)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(ie) {
              (this._debounce = (0, s.su)(ie)), this._subscribe();
            }
            constructor(ie, Ve, Ue) {
              (this._contentObserver = ie),
                (this._elementRef = Ve),
                (this._ngZone = Ue),
                (this.event = new x.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const ie = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? ie.pipe((0, te.b)(this.debounce)) : ie
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)(x.Y36(ve), x.Y36(x.SBq), x.Y36(x.R0b));
            }),
            (ae.ɵdir = x.lG2({
              type: ae,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: {
                disabled: ['cdkObserveContentDisabled', 'disabled'],
                debounce: 'debounce',
              },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            ae
          );
        })(),
        he = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (ie) {
              return new (ie || ae)();
            }),
            (ae.ɵmod = x.oAB({ type: ae })),
            (ae.ɵinj = x.cJS({ providers: [ue] })),
            ae
          );
        })();
    },
    8184: (Rt, Pe, C) => {
      C.d(Pe, {
        Iu: () => je,
        U8: () => Lt,
        X_: () => we,
        Xj: () => De,
        _G: () => Ne,
        aV: () => Et,
        pI: () => dn,
        xu: () => mn,
      });
      var s = C(44),
        x = C(6895),
        L = C(4650),
        oe = C(1281),
        te = C(3353),
        ue = C(9300),
        ve = C(5698),
        le = C(2722),
        he = C(2529),
        ae = C(445),
        pe = C(4080),
        ie = C(7579),
        Ve = C(727),
        Ue = C(6451),
        at = C(9521);
      const vt = (0, te.Mq)();
      class Le {
        constructor(z, ee) {
          (this._viewportRuler = z),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = ee);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const z = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = z.style.left || ''),
              (this._previousHTMLStyles.top = z.style.top || ''),
              (z.style.left = (0, oe.HM)(-this._previousScrollPosition.left)),
              (z.style.top = (0, oe.HM)(-this._previousScrollPosition.top)),
              z.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const z = this._document.documentElement,
              Ae = z.style,
              ze = this._document.body.style,
              _e = Ae.scrollBehavior || '',
              ye = ze.scrollBehavior || '';
            (this._isEnabled = !1),
              (Ae.left = this._previousHTMLStyles.left),
              (Ae.top = this._previousHTMLStyles.top),
              z.classList.remove('cdk-global-scrollblock'),
              vt && (Ae.scrollBehavior = ze.scrollBehavior = 'auto'),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top,
              ),
              vt && ((Ae.scrollBehavior = _e), (ze.scrollBehavior = ye));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              'cdk-global-scrollblock',
            ) ||
            this._isEnabled
          )
            return !1;
          const ee = this._document.body,
            Ae = this._viewportRuler.getViewportSize();
          return ee.scrollHeight > Ae.height || ee.scrollWidth > Ae.width;
        }
      }
      class lt {
        constructor(z, ee, Ae, ze) {
          (this._scrollDispatcher = z),
            (this._ngZone = ee),
            (this._viewportRuler = Ae),
            (this._config = ze),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(z) {
          this._overlayRef = z;
        }
        enable() {
          if (this._scrollSubscription) return;
          const z = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              (0, ue.h)(
                ee =>
                  !ee ||
                  !this._overlayRef.overlayElement.contains(
                    ee.getElementRef().nativeElement,
                  ),
              ),
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = z.subscribe(() => {
                const ee = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(ee - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = z.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class bt {
        enable() {}
        disable() {}
        attach() {}
      }
      function W(ot, z) {
        return z.some(
          ee =>
            ot.bottom < ee.top ||
            ot.top > ee.bottom ||
            ot.right < ee.left ||
            ot.left > ee.right,
        );
      }
      function se(ot, z) {
        return z.some(
          ee =>
            ot.top < ee.top ||
            ot.bottom > ee.bottom ||
            ot.left < ee.left ||
            ot.right > ee.right,
        );
      }
      class ne {
        constructor(z, ee, Ae, ze) {
          (this._scrollDispatcher = z),
            (this._viewportRuler = ee),
            (this._ngZone = Ae),
            (this._config = ze),
            (this._scrollSubscription = null);
        }
        attach(z) {
          this._overlayRef = z;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const ee =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: Ae, height: ze } =
                      this._viewportRuler.getViewportSize();
                  W(ee, [
                    {
                      width: Ae,
                      height: ze,
                      bottom: ze,
                      right: Ae,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let X = (() => {
        class ot {
          constructor(ee, Ae, ze, _e) {
            (this._scrollDispatcher = ee),
              (this._viewportRuler = Ae),
              (this._ngZone = ze),
              (this.noop = () => new bt()),
              (this.close = ye =>
                new lt(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  ye,
                )),
              (this.block = () => new Le(this._viewportRuler, this._document)),
              (this.reposition = ye =>
                new ne(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  ye,
                )),
              (this._document = _e);
          }
        }
        return (
          (ot.ɵfac = function (ee) {
            return new (ee || ot)(
              L.LFG(s.mF),
              L.LFG(s.rL),
              L.LFG(L.R0b),
              L.LFG(x.K0),
            );
          }),
          (ot.ɵprov = L.Yz7({
            token: ot,
            factory: ot.ɵfac,
            providedIn: 'root',
          })),
          ot
        );
      })();
      class we {
        constructor(z) {
          if (
            ((this.scrollStrategy = new bt()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            z)
          ) {
            const ee = Object.keys(z);
            for (const Ae of ee) void 0 !== z[Ae] && (this[Ae] = z[Ae]);
          }
        }
      }
      class Ut {
        constructor(z, ee) {
          (this.connectionPair = z), (this.scrollableViewProperties = ee);
        }
      }
      let At = (() => {
          class ot {
            constructor(ee) {
              (this._attachedOverlays = []), (this._document = ee);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(ee) {
              this.remove(ee), this._attachedOverlays.push(ee);
            }
            remove(ee) {
              const Ae = this._attachedOverlays.indexOf(ee);
              Ae > -1 && this._attachedOverlays.splice(Ae, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(L.LFG(x.K0));
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })(),
        $e = (() => {
          class ot extends At {
            constructor(ee, Ae) {
              super(ee),
                (this._ngZone = Ae),
                (this._keydownListener = ze => {
                  const _e = this._attachedOverlays;
                  for (let ye = _e.length - 1; ye > -1; ye--)
                    if (_e[ye]._keydownEvents.observers.length > 0) {
                      const H = _e[ye]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => H.next(ze))
                        : H.next(ze);
                      break;
                    }
                });
            }
            add(ee) {
              super.add(ee),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          'keydown',
                          this._keydownListener,
                        ),
                      )
                    : this._document.body.addEventListener(
                        'keydown',
                        this._keydownListener,
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  'keydown',
                  this._keydownListener,
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(L.LFG(x.K0), L.LFG(L.R0b, 8));
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })(),
        He = (() => {
          class ot extends At {
            constructor(ee, Ae, ze) {
              super(ee),
                (this._platform = Ae),
                (this._ngZone = ze),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = _e => {
                  this._pointerDownEventTarget = (0, te.sA)(_e);
                }),
                (this._clickListener = _e => {
                  const ye = (0, te.sA)(_e),
                    H =
                      'click' === _e.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : ye;
                  this._pointerDownEventTarget = null;
                  const ke = this._attachedOverlays.slice();
                  for (let de = ke.length - 1; de > -1; de--) {
                    const me = ke[de];
                    if (
                      me._outsidePointerEvents.observers.length < 1 ||
                      !me.hasAttached()
                    )
                      continue;
                    if (
                      me.overlayElement.contains(ye) ||
                      me.overlayElement.contains(H)
                    )
                      break;
                    const fe = me._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => fe.next(_e))
                      : fe.next(_e);
                  }
                });
            }
            add(ee) {
              if ((super.add(ee), !this._isAttached)) {
                const Ae = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(Ae),
                    )
                  : this._addEventListeners(Ae),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = Ae.style.cursor),
                    (Ae.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const ee = this._document.body;
                ee.removeEventListener(
                  'pointerdown',
                  this._pointerDownListener,
                  !0,
                ),
                  ee.removeEventListener('click', this._clickListener, !0),
                  ee.removeEventListener('auxclick', this._clickListener, !0),
                  ee.removeEventListener(
                    'contextmenu',
                    this._clickListener,
                    !0,
                  ),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((ee.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(ee) {
              ee.addEventListener('pointerdown', this._pointerDownListener, !0),
                ee.addEventListener('click', this._clickListener, !0),
                ee.addEventListener('auxclick', this._clickListener, !0),
                ee.addEventListener('contextmenu', this._clickListener, !0);
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(L.LFG(x.K0), L.LFG(te.t4), L.LFG(L.R0b, 8));
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })(),
        De = (() => {
          class ot {
            constructor(ee, Ae) {
              (this._platform = Ae), (this._document = ee);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const ee = 'cdk-overlay-container';
              if (this._platform.isBrowser || (0, te.Oy)()) {
                const ze = this._document.querySelectorAll(
                  `.${ee}[platform="server"], .${ee}[platform="test"]`,
                );
                for (let _e = 0; _e < ze.length; _e++) ze[_e].remove();
              }
              const Ae = this._document.createElement('div');
              Ae.classList.add(ee),
                (0, te.Oy)()
                  ? Ae.setAttribute('platform', 'test')
                  : this._platform.isBrowser ||
                    Ae.setAttribute('platform', 'server'),
                this._document.body.appendChild(Ae),
                (this._containerElement = Ae);
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(L.LFG(x.K0), L.LFG(te.t4));
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })();
      class je {
        constructor(z, ee, Ae, ze, _e, ye, H, ke, de, me = !1) {
          (this._portalOutlet = z),
            (this._host = ee),
            (this._pane = Ae),
            (this._config = ze),
            (this._ngZone = _e),
            (this._keyboardDispatcher = ye),
            (this._document = H),
            (this._location = ke),
            (this._outsideClickDispatcher = de),
            (this._animationsDisabled = me),
            (this._backdropElement = null),
            (this._backdropClick = new ie.x()),
            (this._attachments = new ie.x()),
            (this._detachments = new ie.x()),
            (this._locationChanges = Ve.w0.EMPTY),
            (this._backdropClickHandler = fe => this._backdropClick.next(fe)),
            (this._backdropTransitionendHandler = fe => {
              this._disposeBackdrop(fe.target);
            }),
            (this._keydownEvents = new ie.x()),
            (this._outsidePointerEvents = new ie.x()),
            ze.scrollStrategy &&
              ((this._scrollStrategy = ze.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = ze.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(z) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const ee = this._portalOutlet.attach(z);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, ve.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose(),
              )),
            this._outsideClickDispatcher.add(this),
            'function' == typeof ee?.onDestroy &&
              ee.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach()),
                  );
              }),
            ee
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const z = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            z
          );
        }
        dispose() {
          const z = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            z && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(z) {
          z !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = z),
            this.hasAttached() && (z.attach(this), this.updatePosition()));
        }
        updateSize(z) {
          (this._config = { ...this._config, ...z }), this._updateElementSize();
        }
        setDirection(z) {
          (this._config = { ...this._config, direction: z }),
            this._updateElementDirection();
        }
        addPanelClass(z) {
          this._pane && this._toggleClasses(this._pane, z, !0);
        }
        removePanelClass(z) {
          this._pane && this._toggleClasses(this._pane, z, !1);
        }
        getDirection() {
          const z = this._config.direction;
          return z ? ('string' == typeof z ? z : z.value) : 'ltr';
        }
        updateScrollStrategy(z) {
          z !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = z),
            this.hasAttached() && (z.attach(this), z.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const z = this._pane.style;
          (z.width = (0, oe.HM)(this._config.width)),
            (z.height = (0, oe.HM)(this._config.height)),
            (z.minWidth = (0, oe.HM)(this._config.minWidth)),
            (z.minHeight = (0, oe.HM)(this._config.minHeight)),
            (z.maxWidth = (0, oe.HM)(this._config.maxWidth)),
            (z.maxHeight = (0, oe.HM)(this._config.maxHeight));
        }
        _togglePointerEvents(z) {
          this._pane.style.pointerEvents = z ? '' : 'none';
        }
        _attachBackdrop() {
          const z = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                'cdk-overlay-backdrop-noop-animation',
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0,
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host,
            ),
            this._backdropElement.addEventListener(
              'click',
              this._backdropClickHandler,
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < 'u'
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(z);
                  });
                })
              : this._backdropElement.classList.add(z);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const z = this._backdropElement;
          if (z) {
            if (this._animationsDisabled) return void this._disposeBackdrop(z);
            z.classList.remove('cdk-overlay-backdrop-showing'),
              this._ngZone.runOutsideAngular(() => {
                z.addEventListener(
                  'transitionend',
                  this._backdropTransitionendHandler,
                );
              }),
              (z.style.pointerEvents = 'none'),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(z);
                }, 500),
              ));
          }
        }
        _toggleClasses(z, ee, Ae) {
          const ze = (0, oe.Eq)(ee || []).filter(_e => !!_e);
          ze.length &&
            (Ae ? z.classList.add(...ze) : z.classList.remove(...ze));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const z = this._ngZone.onStable
              .pipe((0, le.R)((0, Ue.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1,
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  z.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const z = this._scrollStrategy;
          z && (z.disable(), z.detach && z.detach());
        }
        _disposeBackdrop(z) {
          z &&
            (z.removeEventListener('click', this._backdropClickHandler),
            z.removeEventListener(
              'transitionend',
              this._backdropTransitionendHandler,
            ),
            z.remove(),
            this._backdropElement === z && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const Ce = 'cdk-overlay-connected-position-bounding-box',
        Re = /([A-Za-z%]+)$/;
      class Ne {
        get positions() {
          return this._preferredPositions;
        }
        constructor(z, ee, Ae, ze, _e) {
          (this._viewportRuler = ee),
            (this._document = Ae),
            (this._platform = ze),
            (this._overlayContainer = _e),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new ie.x()),
            (this._resizeSubscription = Ve.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(z);
        }
        attach(z) {
          this._validatePositions(),
            z.hostElement.classList.add(Ce),
            (this._overlayRef = z),
            (this._boundingBox = z.hostElement),
            (this._pane = z.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const z = this._originRect,
            ee = this._overlayRect,
            Ae = this._viewportRect,
            ze = this._containerRect,
            _e = [];
          let ye;
          for (let H of this._preferredPositions) {
            let ke = this._getOriginPoint(z, ze, H),
              de = this._getOverlayPoint(ke, ee, H),
              me = this._getOverlayFit(de, ee, Ae, H);
            if (me.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(H, ke);
            this._canFitWithFlexibleDimensions(me, de, Ae)
              ? _e.push({
                  position: H,
                  origin: ke,
                  overlayRect: ee,
                  boundingBoxRect: this._calculateBoundingBoxRect(ke, H),
                })
              : (!ye || ye.overlayFit.visibleArea < me.visibleArea) &&
                (ye = {
                  overlayFit: me,
                  overlayPoint: de,
                  originPoint: ke,
                  position: H,
                  overlayRect: ee,
                });
          }
          if (_e.length) {
            let H = null,
              ke = -1;
            for (const de of _e) {
              const me =
                de.boundingBoxRect.width *
                de.boundingBoxRect.height *
                (de.position.weight || 1);
              me > ke && ((ke = me), (H = de));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(H.position, H.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(ye.position, ye.originPoint)
            );
          this._applyPosition(ye.position, ye.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Ge(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(Ce),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const z = this._lastPosition;
          if (z) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const ee = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              z,
            );
            this._applyPosition(z, ee);
          } else this.apply();
        }
        withScrollableContainers(z) {
          return (this._scrollables = z), this;
        }
        withPositions(z) {
          return (
            (this._preferredPositions = z),
            -1 === z.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(z) {
          return (this._viewportMargin = z), this;
        }
        withFlexibleDimensions(z = !0) {
          return (this._hasFlexibleDimensions = z), this;
        }
        withGrowAfterOpen(z = !0) {
          return (this._growAfterOpen = z), this;
        }
        withPush(z = !0) {
          return (this._canPush = z), this;
        }
        withLockedPosition(z = !0) {
          return (this._positionLocked = z), this;
        }
        setOrigin(z) {
          return (this._origin = z), this;
        }
        withDefaultOffsetX(z) {
          return (this._offsetX = z), this;
        }
        withDefaultOffsetY(z) {
          return (this._offsetY = z), this;
        }
        withTransformOriginOn(z) {
          return (this._transformOriginSelector = z), this;
        }
        _getOriginPoint(z, ee, Ae) {
          let ze, _e;
          if ('center' == Ae.originX) ze = z.left + z.width / 2;
          else {
            const ye = this._isRtl() ? z.right : z.left,
              H = this._isRtl() ? z.left : z.right;
            ze = 'start' == Ae.originX ? ye : H;
          }
          return (
            ee.left < 0 && (ze -= ee.left),
            (_e =
              'center' == Ae.originY
                ? z.top + z.height / 2
                : 'top' == Ae.originY
                ? z.top
                : z.bottom),
            ee.top < 0 && (_e -= ee.top),
            { x: ze, y: _e }
          );
        }
        _getOverlayPoint(z, ee, Ae) {
          let ze, _e;
          return (
            (ze =
              'center' == Ae.overlayX
                ? -ee.width / 2
                : 'start' === Ae.overlayX
                ? this._isRtl()
                  ? -ee.width
                  : 0
                : this._isRtl()
                ? 0
                : -ee.width),
            (_e =
              'center' == Ae.overlayY
                ? -ee.height / 2
                : 'top' == Ae.overlayY
                ? 0
                : -ee.height),
            { x: z.x + ze, y: z.y + _e }
          );
        }
        _getOverlayFit(z, ee, Ae, ze) {
          const _e = Ke(ee);
          let { x: ye, y: H } = z,
            ke = this._getOffset(ze, 'x'),
            de = this._getOffset(ze, 'y');
          ke && (ye += ke), de && (H += de);
          let qe = 0 - H,
            Mt = H + _e.height - Ae.height,
            Pt = this._subtractOverflows(
              _e.width,
              0 - ye,
              ye + _e.width - Ae.width,
            ),
            wn = this._subtractOverflows(_e.height, qe, Mt),
            Ie = Pt * wn;
          return {
            visibleArea: Ie,
            isCompletelyWithinViewport: _e.width * _e.height === Ie,
            fitsInViewportVertically: wn === _e.height,
            fitsInViewportHorizontally: Pt == _e.width,
          };
        }
        _canFitWithFlexibleDimensions(z, ee, Ae) {
          if (this._hasFlexibleDimensions) {
            const ze = Ae.bottom - ee.y,
              _e = Ae.right - ee.x,
              ye = ct(this._overlayRef.getConfig().minHeight),
              H = ct(this._overlayRef.getConfig().minWidth);
            return (
              (z.fitsInViewportVertically || (null != ye && ye <= ze)) &&
              (z.fitsInViewportHorizontally || (null != H && H <= _e))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(z, ee, Ae) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: z.x + this._previousPushAmount.x,
              y: z.y + this._previousPushAmount.y,
            };
          const ze = Ke(ee),
            _e = this._viewportRect,
            ye = Math.max(z.x + ze.width - _e.width, 0),
            H = Math.max(z.y + ze.height - _e.height, 0),
            ke = Math.max(_e.top - Ae.top - z.y, 0),
            de = Math.max(_e.left - Ae.left - z.x, 0);
          let me = 0,
            fe = 0;
          return (
            (me =
              ze.width <= _e.width
                ? de || -ye
                : z.x < this._viewportMargin
                ? _e.left - Ae.left - z.x
                : 0),
            (fe =
              ze.height <= _e.height
                ? ke || -H
                : z.y < this._viewportMargin
                ? _e.top - Ae.top - z.y
                : 0),
            (this._previousPushAmount = { x: me, y: fe }),
            { x: z.x + me, y: z.y + fe }
          );
        }
        _applyPosition(z, ee) {
          if (
            (this._setTransformOrigin(z),
            this._setOverlayElementStyles(ee, z),
            this._setBoundingBoxStyles(ee, z),
            z.panelClass && this._addPanelClasses(z.panelClass),
            (this._lastPosition = z),
            this._positionChanges.observers.length)
          ) {
            const Ae = this._getScrollVisibility(),
              ze = new Ut(z, Ae);
            this._positionChanges.next(ze);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(z) {
          if (!this._transformOriginSelector) return;
          const ee = this._boundingBox.querySelectorAll(
            this._transformOriginSelector,
          );
          let Ae,
            ze = z.overlayY;
          Ae =
            'center' === z.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === z.overlayX
                ? 'right'
                : 'left'
              : 'start' === z.overlayX
              ? 'left'
              : 'right';
          for (let _e = 0; _e < ee.length; _e++)
            ee[_e].style.transformOrigin = `${Ae} ${ze}`;
        }
        _calculateBoundingBoxRect(z, ee) {
          const Ae = this._viewportRect,
            ze = this._isRtl();
          let _e, ye, H, me, fe, qe;
          if ('top' === ee.overlayY)
            (ye = z.y), (_e = Ae.height - ye + this._viewportMargin);
          else if ('bottom' === ee.overlayY)
            (H = Ae.height - z.y + 2 * this._viewportMargin),
              (_e = Ae.height - H + this._viewportMargin);
          else {
            const Mt = Math.min(Ae.bottom - z.y + Ae.top, z.y),
              Pt = this._lastBoundingBoxSize.height;
            (_e = 2 * Mt),
              (ye = z.y - Mt),
              _e > Pt &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (ye = z.y - Pt / 2);
          }
          if (('end' === ee.overlayX && !ze) || ('start' === ee.overlayX && ze))
            (qe = Ae.width - z.x + this._viewportMargin),
              (me = z.x - this._viewportMargin);
          else if (
            ('start' === ee.overlayX && !ze) ||
            ('end' === ee.overlayX && ze)
          )
            (fe = z.x), (me = Ae.right - z.x);
          else {
            const Mt = Math.min(Ae.right - z.x + Ae.left, z.x),
              Pt = this._lastBoundingBoxSize.width;
            (me = 2 * Mt),
              (fe = z.x - Mt),
              me > Pt &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (fe = z.x - Pt / 2);
          }
          return {
            top: ye,
            left: fe,
            bottom: H,
            right: qe,
            width: me,
            height: _e,
          };
        }
        _setBoundingBoxStyles(z, ee) {
          const Ae = this._calculateBoundingBoxRect(z, ee);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((Ae.height = Math.min(
              Ae.height,
              this._lastBoundingBoxSize.height,
            )),
            (Ae.width = Math.min(Ae.width, this._lastBoundingBoxSize.width)));
          const ze = {};
          if (this._hasExactPosition())
            (ze.top = ze.left = '0'),
              (ze.bottom = ze.right = ze.maxHeight = ze.maxWidth = ''),
              (ze.width = ze.height = '100%');
          else {
            const _e = this._overlayRef.getConfig().maxHeight,
              ye = this._overlayRef.getConfig().maxWidth;
            (ze.height = (0, oe.HM)(Ae.height)),
              (ze.top = (0, oe.HM)(Ae.top)),
              (ze.bottom = (0, oe.HM)(Ae.bottom)),
              (ze.width = (0, oe.HM)(Ae.width)),
              (ze.left = (0, oe.HM)(Ae.left)),
              (ze.right = (0, oe.HM)(Ae.right)),
              (ze.alignItems =
                'center' === ee.overlayX
                  ? 'center'
                  : 'end' === ee.overlayX
                  ? 'flex-end'
                  : 'flex-start'),
              (ze.justifyContent =
                'center' === ee.overlayY
                  ? 'center'
                  : 'bottom' === ee.overlayY
                  ? 'flex-end'
                  : 'flex-start'),
              _e && (ze.maxHeight = (0, oe.HM)(_e)),
              ye && (ze.maxWidth = (0, oe.HM)(ye));
          }
          (this._lastBoundingBoxSize = Ae), Ge(this._boundingBox.style, ze);
        }
        _resetBoundingBoxStyles() {
          Ge(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          Ge(this._pane.style, {
            top: '',
            left: '',
            bottom: '',
            right: '',
            position: '',
            transform: '',
          });
        }
        _setOverlayElementStyles(z, ee) {
          const Ae = {},
            ze = this._hasExactPosition(),
            _e = this._hasFlexibleDimensions,
            ye = this._overlayRef.getConfig();
          if (ze) {
            const me = this._viewportRuler.getViewportScrollPosition();
            Ge(Ae, this._getExactOverlayY(ee, z, me)),
              Ge(Ae, this._getExactOverlayX(ee, z, me));
          } else Ae.position = 'static';
          let H = '',
            ke = this._getOffset(ee, 'x'),
            de = this._getOffset(ee, 'y');
          ke && (H += `translateX(${ke}px) `),
            de && (H += `translateY(${de}px)`),
            (Ae.transform = H.trim()),
            ye.maxHeight &&
              (ze
                ? (Ae.maxHeight = (0, oe.HM)(ye.maxHeight))
                : _e && (Ae.maxHeight = '')),
            ye.maxWidth &&
              (ze
                ? (Ae.maxWidth = (0, oe.HM)(ye.maxWidth))
                : _e && (Ae.maxWidth = '')),
            Ge(this._pane.style, Ae);
        }
        _getExactOverlayY(z, ee, Ae) {
          let ze = { top: '', bottom: '' },
            _e = this._getOverlayPoint(ee, this._overlayRect, z);
          return (
            this._isPushed &&
              (_e = this._pushOverlayOnScreen(_e, this._overlayRect, Ae)),
            'bottom' === z.overlayY
              ? (ze.bottom =
                  this._document.documentElement.clientHeight -
                  (_e.y + this._overlayRect.height) +
                  'px')
              : (ze.top = (0, oe.HM)(_e.y)),
            ze
          );
        }
        _getExactOverlayX(z, ee, Ae) {
          let ye,
            ze = { left: '', right: '' },
            _e = this._getOverlayPoint(ee, this._overlayRect, z);
          return (
            this._isPushed &&
              (_e = this._pushOverlayOnScreen(_e, this._overlayRect, Ae)),
            (ye = this._isRtl()
              ? 'end' === z.overlayX
                ? 'left'
                : 'right'
              : 'end' === z.overlayX
              ? 'right'
              : 'left'),
            'right' === ye
              ? (ze.right =
                  this._document.documentElement.clientWidth -
                  (_e.x + this._overlayRect.width) +
                  'px')
              : (ze.left = (0, oe.HM)(_e.x)),
            ze
          );
        }
        _getScrollVisibility() {
          const z = this._getOriginRect(),
            ee = this._pane.getBoundingClientRect(),
            Ae = this._scrollables.map(ze =>
              ze.getElementRef().nativeElement.getBoundingClientRect(),
            );
          return {
            isOriginClipped: se(z, Ae),
            isOriginOutsideView: W(z, Ae),
            isOverlayClipped: se(ee, Ae),
            isOverlayOutsideView: W(ee, Ae),
          };
        }
        _subtractOverflows(z, ...ee) {
          return ee.reduce((Ae, ze) => Ae - Math.max(ze, 0), z);
        }
        _getNarrowedViewportRect() {
          const z = this._document.documentElement.clientWidth,
            ee = this._document.documentElement.clientHeight,
            Ae = this._viewportRuler.getViewportScrollPosition();
          return {
            top: Ae.top + this._viewportMargin,
            left: Ae.left + this._viewportMargin,
            right: Ae.left + z - this._viewportMargin,
            bottom: Ae.top + ee - this._viewportMargin,
            width: z - 2 * this._viewportMargin,
            height: ee - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(z, ee) {
          return 'x' === ee
            ? null == z.offsetX
              ? this._offsetX
              : z.offsetX
            : null == z.offsetY
            ? this._offsetY
            : z.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(z) {
          this._pane &&
            (0, oe.Eq)(z).forEach(ee => {
              '' !== ee &&
                -1 === this._appliedPanelClasses.indexOf(ee) &&
                (this._appliedPanelClasses.push(ee),
                this._pane.classList.add(ee));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach(z => {
              this._pane.classList.remove(z);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const z = this._origin;
          if (z instanceof L.SBq)
            return z.nativeElement.getBoundingClientRect();
          if (z instanceof Element) return z.getBoundingClientRect();
          const ee = z.width || 0,
            Ae = z.height || 0;
          return {
            top: z.y,
            bottom: z.y + Ae,
            left: z.x,
            right: z.x + ee,
            height: Ae,
            width: ee,
          };
        }
      }
      function Ge(ot, z) {
        for (let ee in z) z.hasOwnProperty(ee) && (ot[ee] = z[ee]);
        return ot;
      }
      function ct(ot) {
        if ('number' != typeof ot && null != ot) {
          const [z, ee] = ot.split(Re);
          return ee && 'px' !== ee ? null : parseFloat(z);
        }
        return ot || null;
      }
      function Ke(ot) {
        return {
          top: Math.floor(ot.top),
          right: Math.floor(ot.right),
          bottom: Math.floor(ot.bottom),
          left: Math.floor(ot.left),
          width: Math.floor(ot.width),
          height: Math.floor(ot.height),
        };
      }
      const l = 'cdk-global-overlay-wrapper';
      class yn {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._alignItems = ''),
            (this._xPosition = ''),
            (this._xOffset = ''),
            (this._width = ''),
            (this._height = ''),
            (this._isDisposed = !1);
        }
        attach(z) {
          const ee = z.getConfig();
          (this._overlayRef = z),
            this._width && !ee.width && z.updateSize({ width: this._width }),
            this._height &&
              !ee.height &&
              z.updateSize({ height: this._height }),
            z.hostElement.classList.add(l),
            (this._isDisposed = !1);
        }
        top(z = '') {
          return (
            (this._bottomOffset = ''),
            (this._topOffset = z),
            (this._alignItems = 'flex-start'),
            this
          );
        }
        left(z = '') {
          return (this._xOffset = z), (this._xPosition = 'left'), this;
        }
        bottom(z = '') {
          return (
            (this._topOffset = ''),
            (this._bottomOffset = z),
            (this._alignItems = 'flex-end'),
            this
          );
        }
        right(z = '') {
          return (this._xOffset = z), (this._xPosition = 'right'), this;
        }
        start(z = '') {
          return (this._xOffset = z), (this._xPosition = 'start'), this;
        }
        end(z = '') {
          return (this._xOffset = z), (this._xPosition = 'end'), this;
        }
        width(z = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: z })
              : (this._width = z),
            this
          );
        }
        height(z = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: z })
              : (this._height = z),
            this
          );
        }
        centerHorizontally(z = '') {
          return this.left(z), (this._xPosition = 'center'), this;
        }
        centerVertically(z = '') {
          return this.top(z), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const z = this._overlayRef.overlayElement.style,
            ee = this._overlayRef.hostElement.style,
            Ae = this._overlayRef.getConfig(),
            { width: ze, height: _e, maxWidth: ye, maxHeight: H } = Ae,
            ke = !(
              ('100%' !== ze && '100vw' !== ze) ||
              (ye && '100%' !== ye && '100vw' !== ye)
            ),
            de = !(
              ('100%' !== _e && '100vh' !== _e) ||
              (H && '100%' !== H && '100vh' !== H)
            ),
            me = this._xPosition,
            fe = this._xOffset,
            qe = 'rtl' === this._overlayRef.getConfig().direction;
          let Mt = '',
            Pt = '',
            wn = '';
          ke
            ? (wn = 'flex-start')
            : 'center' === me
            ? ((wn = 'center'), qe ? (Pt = fe) : (Mt = fe))
            : qe
            ? 'left' === me || 'end' === me
              ? ((wn = 'flex-end'), (Mt = fe))
              : ('right' === me || 'start' === me) &&
                ((wn = 'flex-start'), (Pt = fe))
            : 'left' === me || 'start' === me
            ? ((wn = 'flex-start'), (Mt = fe))
            : ('right' === me || 'end' === me) &&
              ((wn = 'flex-end'), (Pt = fe)),
            (z.position = this._cssPosition),
            (z.marginLeft = ke ? '0' : Mt),
            (z.marginTop = de ? '0' : this._topOffset),
            (z.marginBottom = this._bottomOffset),
            (z.marginRight = ke ? '0' : Pt),
            (ee.justifyContent = wn),
            (ee.alignItems = de ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const z = this._overlayRef.overlayElement.style,
            ee = this._overlayRef.hostElement,
            Ae = ee.style;
          ee.classList.remove(l),
            (Ae.justifyContent =
              Ae.alignItems =
              z.marginTop =
              z.marginBottom =
              z.marginLeft =
              z.marginRight =
              z.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let rt = (() => {
          class ot {
            constructor(ee, Ae, ze, _e) {
              (this._viewportRuler = ee),
                (this._document = Ae),
                (this._platform = ze),
                (this._overlayContainer = _e);
            }
            global() {
              return new yn();
            }
            flexibleConnectedTo(ee) {
              return new Ne(
                ee,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer,
              );
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(
                L.LFG(s.rL),
                L.LFG(x.K0),
                L.LFG(te.t4),
                L.LFG(De),
              );
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })(),
        ft = 0,
        Et = (() => {
          class ot {
            constructor(ee, Ae, ze, _e, ye, H, ke, de, me, fe, qe, Mt) {
              (this.scrollStrategies = ee),
                (this._overlayContainer = Ae),
                (this._componentFactoryResolver = ze),
                (this._positionBuilder = _e),
                (this._keyboardDispatcher = ye),
                (this._injector = H),
                (this._ngZone = ke),
                (this._document = de),
                (this._directionality = me),
                (this._location = fe),
                (this._outsideClickDispatcher = qe),
                (this._animationsModuleType = Mt);
            }
            create(ee) {
              const Ae = this._createHostElement(),
                ze = this._createPaneElement(Ae),
                _e = this._createPortalOutlet(ze),
                ye = new we(ee);
              return (
                (ye.direction = ye.direction || this._directionality.value),
                new je(
                  _e,
                  Ae,
                  ze,
                  ye,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  'NoopAnimations' === this._animationsModuleType,
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(ee) {
              const Ae = this._document.createElement('div');
              return (
                (Ae.id = 'cdk-overlay-' + ft++),
                Ae.classList.add('cdk-overlay-pane'),
                ee.appendChild(Ae),
                Ae
              );
            }
            _createHostElement() {
              const ee = this._document.createElement('div');
              return (
                this._overlayContainer.getContainerElement().appendChild(ee), ee
              );
            }
            _createPortalOutlet(ee) {
              return (
                this._appRef || (this._appRef = this._injector.get(L.z2F)),
                new pe.u0(
                  ee,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document,
                )
              );
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(
                L.LFG(X),
                L.LFG(De),
                L.LFG(L._Vd),
                L.LFG(rt),
                L.LFG($e),
                L.LFG(L.zs3),
                L.LFG(L.R0b),
                L.LFG(x.K0),
                L.LFG(ae.Is),
                L.LFG(x.Ye),
                L.LFG(He),
                L.LFG(L.QbO, 8),
              );
            }),
            (ot.ɵprov = L.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: 'root',
            })),
            ot
          );
        })();
      const mt = [
          {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top',
          },
          {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'top',
            overlayX: 'end',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'bottom',
            overlayX: 'end',
            overlayY: 'top',
          },
        ],
        ln = new L.OlP('cdk-connected-overlay-scroll-strategy');
      let mn = (() => {
          class ot {
            constructor(ee) {
              this.elementRef = ee;
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(L.Y36(L.SBq));
            }),
            (ot.ɵdir = L.lG2({
              type: ot,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
              standalone: !0,
            })),
            ot
          );
        })(),
        dn = (() => {
          class ot {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(ee) {
              (this._offsetX = ee),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(ee) {
              (this._offsetY = ee),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(ee) {
              this._hasBackdrop = (0, oe.Ig)(ee);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(ee) {
              this._lockPosition = (0, oe.Ig)(ee);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(ee) {
              this._flexibleDimensions = (0, oe.Ig)(ee);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(ee) {
              this._growAfterOpen = (0, oe.Ig)(ee);
            }
            get push() {
              return this._push;
            }
            set push(ee) {
              this._push = (0, oe.Ig)(ee);
            }
            constructor(ee, Ae, ze, _e, ye) {
              (this._overlay = ee),
                (this._dir = ye),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Ve.w0.EMPTY),
                (this._attachSubscription = Ve.w0.EMPTY),
                (this._detachSubscription = Ve.w0.EMPTY),
                (this._positionSubscription = Ve.w0.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new L.vpe()),
                (this.positionChange = new L.vpe()),
                (this.attach = new L.vpe()),
                (this.detach = new L.vpe()),
                (this.overlayKeydown = new L.vpe()),
                (this.overlayOutsideClick = new L.vpe()),
                (this._templatePortal = new pe.UE(Ae, ze)),
                (this._scrollStrategyFactory = _e),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(ee) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                ee.origin && this.open && this._position.apply()),
                ee.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = mt);
              const ee = (this._overlayRef = this._overlay.create(
                this._buildConfig(),
              ));
              (this._attachSubscription = ee
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = ee
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                ee.keydownEvents().subscribe(Ae => {
                  this.overlayKeydown.next(Ae),
                    Ae.keyCode === at.hY &&
                      !this.disableClose &&
                      !(0, at.Vb)(Ae) &&
                      (Ae.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe(Ae => {
                  this.overlayOutsideClick.next(Ae);
                });
            }
            _buildConfig() {
              const ee = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                Ae = new we({
                  direction: this._dir,
                  positionStrategy: ee,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (Ae.width = this.width),
                (this.height || 0 === this.height) && (Ae.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (Ae.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (Ae.minHeight = this.minHeight),
                this.backdropClass && (Ae.backdropClass = this.backdropClass),
                this.panelClass && (Ae.panelClass = this.panelClass),
                Ae
              );
            }
            _updatePositionStrategy(ee) {
              const Ae = this.positions.map(ze => ({
                originX: ze.originX,
                originY: ze.originY,
                overlayX: ze.overlayX,
                overlayY: ze.overlayY,
                offsetX: ze.offsetX || this.offsetX,
                offsetY: ze.offsetY || this.offsetY,
                panelClass: ze.panelClass || void 0,
              }));
              return ee
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(Ae)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const ee = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin(),
                );
              return this._updatePositionStrategy(ee), ee;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof mn
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe(ee => {
                        this.backdropClick.emit(ee);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (0, he.o)(() => this.positionChange.observers.length > 0),
                    )
                    .subscribe(ee => {
                      this.positionChange.emit(ee),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (ot.ɵfac = function (ee) {
              return new (ee || ot)(
                L.Y36(Et),
                L.Y36(L.Rgc),
                L.Y36(L.s_b),
                L.Y36(ln),
                L.Y36(ae.Is, 8),
              );
            }),
            (ot.ɵdir = L.lG2({
              type: ot,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                positionStrategy: [
                  'cdkConnectedOverlayPositionStrategy',
                  'positionStrategy',
                ],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: [
                  'cdkConnectedOverlayBackdropClass',
                  'backdropClass',
                ],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                viewportMargin: [
                  'cdkConnectedOverlayViewportMargin',
                  'viewportMargin',
                ],
                scrollStrategy: [
                  'cdkConnectedOverlayScrollStrategy',
                  'scrollStrategy',
                ],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: [
                  'cdkConnectedOverlayDisableClose',
                  'disableClose',
                ],
                transformOriginSelector: [
                  'cdkConnectedOverlayTransformOriginOn',
                  'transformOriginSelector',
                ],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: [
                  'cdkConnectedOverlayLockPosition',
                  'lockPosition',
                ],
                flexibleDimensions: [
                  'cdkConnectedOverlayFlexibleDimensions',
                  'flexibleDimensions',
                ],
                growAfterOpen: [
                  'cdkConnectedOverlayGrowAfterOpen',
                  'growAfterOpen',
                ],
                push: ['cdkConnectedOverlayPush', 'push'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              standalone: !0,
              features: [L.TTD],
            })),
            ot
          );
        })();
      const Jt = {
        provide: ln,
        deps: [Et],
        useFactory: function Gn(ot) {
          return () => ot.scrollStrategies.reposition();
        },
      };
      let Lt = (() => {
        class ot {}
        return (
          (ot.ɵfac = function (ee) {
            return new (ee || ot)();
          }),
          (ot.ɵmod = L.oAB({ type: ot })),
          (ot.ɵinj = L.cJS({
            providers: [Et, Jt],
            imports: [ae.vT, pe.eL, s.Cl, s.Cl],
          })),
          ot
        );
      })();
    },
    3353: (Rt, Pe, C) => {
      C.d(Pe, {
        Mq: () => Ue,
        Oy: () => W,
        _i: () => at,
        ht: () => lt,
        i$: () => pe,
        kV: () => _t,
        qK: () => le,
        sA: () => bt,
        t4: () => oe,
      });
      var s = C(4650),
        x = C(6895);
      let L;
      try {
        L = typeof Intl < 'u' && Intl.v8BreakIterator;
      } catch {
        L = !1;
      }
      let ue,
        oe = (() => {
          class se {
            constructor(X) {
              (this._platformId = X),
                (this.isBrowser = this._platformId
                  ? (0, x.NF)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !L) &&
                  typeof CSS < 'u' &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !('MSStream' in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (se.ɵfac = function (X) {
              return new (X || se)(s.LFG(s.Lbi));
            }),
            (se.ɵprov = s.Yz7({
              token: se,
              factory: se.ɵfac,
              providedIn: 'root',
            })),
            se
          );
        })();
      const ve = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function le() {
        if (ue) return ue;
        if ('object' != typeof document || !document)
          return (ue = new Set(ve)), ue;
        let se = document.createElement('input');
        return (
          (ue = new Set(
            ve.filter(ne => (se.setAttribute('type', ne), se.type === ne)),
          )),
          ue
        );
      }
      let he, ie, Ve, vt;
      function pe(se) {
        return (function ae() {
          if (null == he && typeof window < 'u')
            try {
              window.addEventListener(
                'test',
                null,
                Object.defineProperty({}, 'passive', { get: () => (he = !0) }),
              );
            } finally {
              he = he || !1;
            }
          return he;
        })()
          ? se
          : !!se.capture;
      }
      function Ue() {
        if (null == Ve) {
          if (
            'object' != typeof document ||
            !document ||
            'function' != typeof Element ||
            !Element
          )
            return (Ve = !1), Ve;
          if ('scrollBehavior' in document.documentElement.style) Ve = !0;
          else {
            const se = Element.prototype.scrollTo;
            Ve = !!se && !/\{\s*\[native code\]\s*\}/.test(se.toString());
          }
        }
        return Ve;
      }
      function at() {
        if ('object' != typeof document || !document) return 0;
        if (null == ie) {
          const se = document.createElement('div'),
            ne = se.style;
          (se.dir = 'rtl'),
            (ne.width = '1px'),
            (ne.overflow = 'auto'),
            (ne.visibility = 'hidden'),
            (ne.pointerEvents = 'none'),
            (ne.position = 'absolute');
          const X = document.createElement('div'),
            we = X.style;
          (we.width = '2px'),
            (we.height = '1px'),
            se.appendChild(X),
            document.body.appendChild(se),
            (ie = 0),
            0 === se.scrollLeft &&
              ((se.scrollLeft = 1), (ie = 0 === se.scrollLeft ? 1 : 2)),
            se.remove();
        }
        return ie;
      }
      function _t(se) {
        if (
          (function Le() {
            if (null == vt) {
              const se = typeof document < 'u' ? document.head : null;
              vt = !(!se || (!se.createShadowRoot && !se.attachShadow));
            }
            return vt;
          })()
        ) {
          const ne = se.getRootNode ? se.getRootNode() : null;
          if (typeof ShadowRoot < 'u' && ShadowRoot && ne instanceof ShadowRoot)
            return ne;
        }
        return null;
      }
      function lt() {
        let se =
          typeof document < 'u' && document ? document.activeElement : null;
        for (; se && se.shadowRoot; ) {
          const ne = se.shadowRoot.activeElement;
          if (ne === se) break;
          se = ne;
        }
        return se;
      }
      function bt(se) {
        return se.composedPath ? se.composedPath()[0] : se.target;
      }
      function W() {
        return (
          (typeof __karma__ < 'u' && !!__karma__) ||
          (typeof jasmine < 'u' && !!jasmine) ||
          (typeof jest < 'u' && !!jest) ||
          (typeof Mocha < 'u' && !!Mocha)
        );
      }
    },
    4080: (Rt, Pe, C) => {
      C.d(Pe, {
        C5: () => ae,
        Pl: () => lt,
        UE: () => pe,
        eL: () => W,
        en: () => Ve,
        u0: () => at,
      });
      var s = C(4650),
        x = C(6895);
      class he {
        attach(X) {
          return (this._attachedHost = X), X.attach(this);
        }
        detach() {
          let X = this._attachedHost;
          null != X && ((this._attachedHost = null), X.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(X) {
          this._attachedHost = X;
        }
      }
      class ae extends he {
        constructor(X, we, nt, ut, Ut) {
          super(),
            (this.component = X),
            (this.viewContainerRef = we),
            (this.injector = nt),
            (this.componentFactoryResolver = ut),
            (this.projectableNodes = Ut);
        }
      }
      class pe extends he {
        constructor(X, we, nt, ut) {
          super(),
            (this.templateRef = X),
            (this.viewContainerRef = we),
            (this.context = nt),
            (this.injector = ut);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(X, we = this.context) {
          return (this.context = we), super.attach(X);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class ie extends he {
        constructor(X) {
          super(), (this.element = X instanceof s.SBq ? X.nativeElement : X);
        }
      }
      class Ve {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(X) {
          return X instanceof ae
            ? ((this._attachedPortal = X), this.attachComponentPortal(X))
            : X instanceof pe
            ? ((this._attachedPortal = X), this.attachTemplatePortal(X))
            : this.attachDomPortal && X instanceof ie
            ? ((this._attachedPortal = X), this.attachDomPortal(X))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(X) {
          this._disposeFn = X;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class at extends Ve {
        constructor(X, we, nt, ut, Ut) {
          super(),
            (this.outletElement = X),
            (this._componentFactoryResolver = we),
            (this._appRef = nt),
            (this._defaultInjector = ut),
            (this.attachDomPortal = xt => {
              const Kt = xt.element,
                At = this._document.createComment('dom-portal');
              Kt.parentNode.insertBefore(At, Kt),
                this.outletElement.appendChild(Kt),
                (this._attachedPortal = xt),
                super.setDisposeFn(() => {
                  At.parentNode && At.parentNode.replaceChild(Kt, At);
                });
            }),
            (this._document = Ut);
        }
        attachComponentPortal(X) {
          const nt = (
            X.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(X.component);
          let ut;
          return (
            X.viewContainerRef
              ? ((ut = X.viewContainerRef.createComponent(
                  nt,
                  X.viewContainerRef.length,
                  X.injector || X.viewContainerRef.injector,
                  X.projectableNodes || void 0,
                )),
                this.setDisposeFn(() => ut.destroy()))
              : ((ut = nt.create(
                  X.injector || this._defaultInjector || s.zs3.NULL,
                )),
                this._appRef.attachView(ut.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(ut.hostView),
                    ut.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(ut)),
            (this._attachedPortal = X),
            ut
          );
        }
        attachTemplatePortal(X) {
          let we = X.viewContainerRef,
            nt = we.createEmbeddedView(X.templateRef, X.context, {
              injector: X.injector,
            });
          return (
            nt.rootNodes.forEach(ut => this.outletElement.appendChild(ut)),
            nt.detectChanges(),
            this.setDisposeFn(() => {
              let ut = we.indexOf(nt);
              -1 !== ut && we.remove(ut);
            }),
            (this._attachedPortal = X),
            nt
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(X) {
          return X.hostView.rootNodes[0];
        }
      }
      let lt = (() => {
          class ne extends Ve {
            constructor(we, nt, ut) {
              super(),
                (this._componentFactoryResolver = we),
                (this._viewContainerRef = nt),
                (this._isInitialized = !1),
                (this.attached = new s.vpe()),
                (this.attachDomPortal = Ut => {
                  const xt = Ut.element,
                    Kt = this._document.createComment('dom-portal');
                  Ut.setAttachedHost(this),
                    xt.parentNode.insertBefore(Kt, xt),
                    this._getRootNode().appendChild(xt),
                    (this._attachedPortal = Ut),
                    super.setDisposeFn(() => {
                      Kt.parentNode && Kt.parentNode.replaceChild(xt, Kt);
                    });
                }),
                (this._document = ut);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(we) {
              (this.hasAttached() && !we && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                we && super.attach(we),
                (this._attachedPortal = we || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(we) {
              we.setAttachedHost(this);
              const nt =
                  null != we.viewContainerRef
                    ? we.viewContainerRef
                    : this._viewContainerRef,
                Ut = (
                  we.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(we.component),
                xt = nt.createComponent(
                  Ut,
                  nt.length,
                  we.injector || nt.injector,
                  we.projectableNodes || void 0,
                );
              return (
                nt !== this._viewContainerRef &&
                  this._getRootNode().appendChild(xt.hostView.rootNodes[0]),
                super.setDisposeFn(() => xt.destroy()),
                (this._attachedPortal = we),
                (this._attachedRef = xt),
                this.attached.emit(xt),
                xt
              );
            }
            attachTemplatePortal(we) {
              we.setAttachedHost(this);
              const nt = this._viewContainerRef.createEmbeddedView(
                we.templateRef,
                we.context,
                { injector: we.injector },
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = we),
                (this._attachedRef = nt),
                this.attached.emit(nt),
                nt
              );
            }
            _getRootNode() {
              const we = this._viewContainerRef.element.nativeElement;
              return we.nodeType === we.ELEMENT_NODE ? we : we.parentNode;
            }
          }
          return (
            (ne.ɵfac = function (we) {
              return new (we || ne)(s.Y36(s._Vd), s.Y36(s.s_b), s.Y36(x.K0));
            }),
            (ne.ɵdir = s.lG2({
              type: ne,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [s.qOj],
            })),
            ne
          );
        })(),
        W = (() => {
          class ne {}
          return (
            (ne.ɵfac = function (we) {
              return new (we || ne)();
            }),
            (ne.ɵmod = s.oAB({ type: ne })),
            (ne.ɵinj = s.cJS({})),
            ne
          );
        })();
    },
    44: (Rt, Pe, C) => {
      C.d(Pe, { ZD: () => Ae, mF: () => ft, Cl: () => ze, rL: () => ln });
      var s = C(1281),
        x = C(4650),
        L = C(7579),
        oe = C(9646),
        te = C(9751),
        ue = C(8421),
        ve = C(5577),
        le = C(1144),
        he = C(576),
        ae = C(3268);
      const pe = ['addListener', 'removeListener'],
        ie = ['addEventListener', 'removeEventListener'],
        Ve = ['on', 'off'];
      function Ue(_e, ye, H, ke) {
        if (((0, he.m)(H) && ((ke = H), (H = void 0)), ke))
          return Ue(_e, ye, H).pipe((0, ae.Z)(ke));
        const [de, me] = (function _t(_e) {
          return (
            (0, he.m)(_e.addEventListener) && (0, he.m)(_e.removeEventListener)
          );
        })(_e)
          ? ie.map(fe => qe => _e[fe](ye, qe, H))
          : (function vt(_e) {
              return (0, he.m)(_e.addListener) && (0, he.m)(_e.removeListener);
            })(_e)
          ? pe.map(at(_e, ye))
          : (function Le(_e) {
              return (0, he.m)(_e.on) && (0, he.m)(_e.off);
            })(_e)
          ? Ve.map(at(_e, ye))
          : [];
        if (!de && (0, le.z)(_e))
          return (0, ve.z)(fe => Ue(fe, ye, H))((0, ue.Xf)(_e));
        if (!de) throw new TypeError('Invalid event target');
        return new te.y(fe => {
          const qe = (...Mt) => fe.next(1 < Mt.length ? Mt : Mt[0]);
          return de(qe), () => me(qe);
        });
      }
      function at(_e, ye) {
        return H => ke => _e[H](ye, ke);
      }
      var lt = C(4408),
        bt = C(727);
      const W = {
        schedule(_e) {
          let ye = requestAnimationFrame,
            H = cancelAnimationFrame;
          const { delegate: ke } = W;
          ke &&
            ((ye = ke.requestAnimationFrame), (H = ke.cancelAnimationFrame));
          const de = ye(me => {
            (H = void 0), _e(me);
          });
          return new bt.w0(() => H?.(de));
        },
        requestAnimationFrame(..._e) {
          const { delegate: ye } = W;
          return (ye?.requestAnimationFrame || requestAnimationFrame)(..._e);
        },
        cancelAnimationFrame(..._e) {
          const { delegate: ye } = W;
          return (ye?.cancelAnimationFrame || cancelAnimationFrame)(..._e);
        },
        delegate: void 0,
      };
      var ne = C(640);
      const we = new (class X extends ne.v {
        flush(ye) {
          this._active = !0;
          const H = this._scheduled;
          this._scheduled = void 0;
          const { actions: ke } = this;
          let de;
          ye = ye || ke.shift();
          do {
            if ((de = ye.execute(ye.state, ye.delay))) break;
          } while ((ye = ke[0]) && ye.id === H && ke.shift());
          if (((this._active = !1), de)) {
            for (; (ye = ke[0]) && ye.id === H && ke.shift(); )
              ye.unsubscribe();
            throw de;
          }
        }
      })(
        class se extends lt.o {
          constructor(ye, H) {
            super(ye, H), (this.scheduler = ye), (this.work = H);
          }
          requestAsyncId(ye, H, ke = 0) {
            return null !== ke && ke > 0
              ? super.requestAsyncId(ye, H, ke)
              : (ye.actions.push(this),
                ye._scheduled ||
                  (ye._scheduled = W.requestAnimationFrame(() =>
                    ye.flush(void 0),
                  )));
          }
          recycleAsyncId(ye, H, ke = 0) {
            var de;
            if (null != ke ? ke > 0 : this.delay > 0)
              return super.recycleAsyncId(ye, H, ke);
            const { actions: me } = ye;
            null != H &&
              (null === (de = me[me.length - 1]) || void 0 === de
                ? void 0
                : de.id) !== H &&
              (W.cancelAnimationFrame(H), (ye._scheduled = void 0));
          }
        },
      );
      var ut = C(3101),
        Ut = C(4986),
        xt = C(4482),
        Kt = C(5403),
        $e = C(5963);
      function He(_e, ye = Ut.z) {
        return (function At(_e) {
          return (0, xt.e)((ye, H) => {
            let ke = !1,
              de = null,
              me = null,
              fe = !1;
            const qe = () => {
                if ((me?.unsubscribe(), (me = null), ke)) {
                  ke = !1;
                  const Pt = de;
                  (de = null), H.next(Pt);
                }
                fe && H.complete();
              },
              Mt = () => {
                (me = null), fe && H.complete();
              };
            ye.subscribe(
              (0, Kt.x)(
                H,
                Pt => {
                  (ke = !0),
                    (de = Pt),
                    me ||
                      (0, ue.Xf)(_e(Pt)).subscribe((me = (0, Kt.x)(H, qe, Mt)));
                },
                () => {
                  (fe = !0), (!ke || !me || me.closed) && H.complete();
                },
              ),
            );
          });
        })(() => (0, $e.H)(_e, ye));
      }
      var De = C(9300),
        je = C(2722),
        Ce = C(8675),
        Re = C(3353),
        Ne = C(6895),
        Ge = C(445);
      const ct = ['contentWrapper'],
        Ke = ['*'],
        Wt = new x.OlP('VIRTUAL_SCROLL_STRATEGY');
      let ft = (() => {
          class _e {
            constructor(H, ke, de) {
              (this._ngZone = H),
                (this._platform = ke),
                (this._scrolled = new L.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = de);
            }
            register(H) {
              this.scrollContainers.has(H) ||
                this.scrollContainers.set(
                  H,
                  H.elementScrolled().subscribe(() => this._scrolled.next(H)),
                );
            }
            deregister(H) {
              const ke = this.scrollContainers.get(H);
              ke && (ke.unsubscribe(), this.scrollContainers.delete(H));
            }
            scrolled(H = 20) {
              return this._platform.isBrowser
                ? new te.y(ke => {
                    this._globalSubscription || this._addGlobalListener();
                    const de =
                      H > 0
                        ? this._scrolled.pipe(He(H)).subscribe(ke)
                        : this._scrolled.subscribe(ke);
                    return (
                      this._scrolledCount++,
                      () => {
                        de.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, oe.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((H, ke) => this.deregister(ke)),
                this._scrolled.complete();
            }
            ancestorScrolled(H, ke) {
              const de = this.getAncestorScrollContainers(H);
              return this.scrolled(ke).pipe(
                (0, De.h)(me => !me || de.indexOf(me) > -1),
              );
            }
            getAncestorScrollContainers(H) {
              const ke = [];
              return (
                this.scrollContainers.forEach((de, me) => {
                  this._scrollableContainsElement(me, H) && ke.push(me);
                }),
                ke
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(H, ke) {
              let de = (0, s.fI)(ke),
                me = H.getElementRef().nativeElement;
              do {
                if (de == me) return !0;
              } while ((de = de.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Ue(this._getWindow().document, 'scroll').subscribe(() =>
                  this._scrolled.next(),
                ),
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)(x.LFG(x.R0b), x.LFG(Re.t4), x.LFG(Ne.K0, 8));
            }),
            (_e.ɵprov = x.Yz7({
              token: _e,
              factory: _e.ɵfac,
              providedIn: 'root',
            })),
            _e
          );
        })(),
        Et = (() => {
          class _e {
            constructor(H, ke, de, me) {
              (this.elementRef = H),
                (this.scrollDispatcher = ke),
                (this.ngZone = de),
                (this.dir = me),
                (this._destroyed = new L.x()),
                (this._elementScrolled = new te.y(fe =>
                  this.ngZone.runOutsideAngular(() =>
                    Ue(this.elementRef.nativeElement, 'scroll')
                      .pipe((0, je.R)(this._destroyed))
                      .subscribe(fe),
                  ),
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(H) {
              const ke = this.elementRef.nativeElement,
                de = this.dir && 'rtl' == this.dir.value;
              null == H.left && (H.left = de ? H.end : H.start),
                null == H.right && (H.right = de ? H.start : H.end),
                null != H.bottom &&
                  (H.top = ke.scrollHeight - ke.clientHeight - H.bottom),
                de && 0 != (0, Re._i)()
                  ? (null != H.left &&
                      (H.right = ke.scrollWidth - ke.clientWidth - H.left),
                    2 == (0, Re._i)()
                      ? (H.left = H.right)
                      : 1 == (0, Re._i)() &&
                        (H.left = H.right ? -H.right : H.right))
                  : null != H.right &&
                    (H.left = ke.scrollWidth - ke.clientWidth - H.right),
                this._applyScrollToOptions(H);
            }
            _applyScrollToOptions(H) {
              const ke = this.elementRef.nativeElement;
              (0, Re.Mq)()
                ? ke.scrollTo(H)
                : (null != H.top && (ke.scrollTop = H.top),
                  null != H.left && (ke.scrollLeft = H.left));
            }
            measureScrollOffset(H) {
              const ke = 'left',
                me = this.elementRef.nativeElement;
              if ('top' == H) return me.scrollTop;
              if ('bottom' == H)
                return me.scrollHeight - me.clientHeight - me.scrollTop;
              const fe = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == H
                  ? (H = fe ? 'right' : ke)
                  : 'end' == H && (H = fe ? ke : 'right'),
                fe && 2 == (0, Re._i)()
                  ? H == ke
                    ? me.scrollWidth - me.clientWidth - me.scrollLeft
                    : me.scrollLeft
                  : fe && 1 == (0, Re._i)()
                  ? H == ke
                    ? me.scrollLeft + me.scrollWidth - me.clientWidth
                    : -me.scrollLeft
                  : H == ke
                  ? me.scrollLeft
                  : me.scrollWidth - me.clientWidth - me.scrollLeft
              );
            }
          }
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)(
                x.Y36(x.SBq),
                x.Y36(ft),
                x.Y36(x.R0b),
                x.Y36(Ge.Is, 8),
              );
            }),
            (_e.ɵdir = x.lG2({
              type: _e,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
              standalone: !0,
            })),
            _e
          );
        })(),
        ln = (() => {
          class _e {
            constructor(H, ke, de) {
              (this._platform = H),
                (this._change = new L.x()),
                (this._changeListener = me => {
                  this._change.next(me);
                }),
                (this._document = de),
                ke.runOutsideAngular(() => {
                  if (H.isBrowser) {
                    const me = this._getWindow();
                    me.addEventListener('resize', this._changeListener),
                      me.addEventListener(
                        'orientationchange',
                        this._changeListener,
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const H = this._getWindow();
                H.removeEventListener('resize', this._changeListener),
                  H.removeEventListener(
                    'orientationchange',
                    this._changeListener,
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const H = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), H;
            }
            getViewportRect() {
              const H = this.getViewportScrollPosition(),
                { width: ke, height: de } = this.getViewportSize();
              return {
                top: H.top,
                left: H.left,
                bottom: H.top + de,
                right: H.left + ke,
                height: de,
                width: ke,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const H = this._document,
                ke = this._getWindow(),
                de = H.documentElement,
                me = de.getBoundingClientRect();
              return {
                top:
                  -me.top ||
                  H.body.scrollTop ||
                  ke.scrollY ||
                  de.scrollTop ||
                  0,
                left:
                  -me.left ||
                  H.body.scrollLeft ||
                  ke.scrollX ||
                  de.scrollLeft ||
                  0,
              };
            }
            change(H = 20) {
              return H > 0 ? this._change.pipe(He(H)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const H = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: H.innerWidth, height: H.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)(x.LFG(Re.t4), x.LFG(x.R0b), x.LFG(Ne.K0, 8));
            }),
            (_e.ɵprov = x.Yz7({
              token: _e,
              factory: _e.ɵfac,
              providedIn: 'root',
            })),
            _e
          );
        })();
      const mn = new x.OlP('VIRTUAL_SCROLLABLE');
      let dn = (() => {
        class _e extends Et {
          constructor(H, ke, de, me) {
            super(H, ke, de, me);
          }
          measureViewportSize(H) {
            const ke = this.elementRef.nativeElement;
            return 'horizontal' === H ? ke.clientWidth : ke.clientHeight;
          }
        }
        return (
          (_e.ɵfac = function (H) {
            return new (H || _e)(
              x.Y36(x.SBq),
              x.Y36(ft),
              x.Y36(x.R0b),
              x.Y36(Ge.Is, 8),
            );
          }),
          (_e.ɵdir = x.lG2({ type: _e, features: [x.qOj] })),
          _e
        );
      })();
      const Jt = typeof requestAnimationFrame < 'u' ? we : ut.E;
      let Lt = (() => {
          class _e extends dn {
            get orientation() {
              return this._orientation;
            }
            set orientation(H) {
              this._orientation !== H &&
                ((this._orientation = H), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(H) {
              this._appendOnly = (0, s.Ig)(H);
            }
            constructor(H, ke, de, me, fe, qe, Mt, Pt) {
              super(H, qe, de, fe),
                (this.elementRef = H),
                (this._changeDetectorRef = ke),
                (this._scrollStrategy = me),
                (this.scrollable = Pt),
                (this._platform = (0, x.f3M)(Re.t4)),
                (this._detachedSubject = new L.x()),
                (this._renderedRangeSubject = new L.x()),
                (this._orientation = 'vertical'),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new te.y(wn =>
                  this._scrollStrategy.scrolledIndexChange.subscribe(Ie =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => wn.next(Ie)),
                    ),
                  ),
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ''),
                (this._totalContentHeight = ''),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = bt.w0.EMPTY),
                (this._viewportChanges = Mt.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    'cdk-virtual-scrollable',
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe((0, Ce.O)(null), He(0, Jt))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled(),
                        ),
                      this._markChangeDetectionNeeded();
                  }),
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(H) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = H),
                  this._forOf.dataStream
                    .pipe((0, je.R)(this._detachedSubject))
                    .subscribe(ke => {
                      const de = ke.length;
                      de !== this._dataLength &&
                        ((this._dataLength = de),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(H) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                H
              ];
            }
            setTotalContentSize(H) {
              this._totalContentSize !== H &&
                ((this._totalContentSize = H),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(H) {
              (function Gn(_e, ye) {
                return _e.start == ye.start && _e.end == ye.end;
              })(this._renderedRange, H) ||
                (this.appendOnly &&
                  (H = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, H.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = H)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered(),
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(H, ke = 'to-start') {
              H = this.appendOnly && 'to-start' === ke ? 0 : H;
              const me = 'horizontal' == this.orientation,
                fe = me ? 'X' : 'Y';
              let Mt = `translate${fe}(${Number(
                (me && this.dir && 'rtl' == this.dir.value ? -1 : 1) * H,
              )}px)`;
              (this._renderedContentOffset = H),
                'to-end' === ke &&
                  ((Mt += ` translate${fe}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != Mt &&
                  ((this._renderedContentTransform = Mt),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset,
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(H, ke = 'auto') {
              const de = { behavior: ke };
              'horizontal' === this.orientation ? (de.start = H) : (de.top = H),
                this.scrollable.scrollTo(de);
            }
            scrollToIndex(H, ke = 'auto') {
              this._scrollStrategy.scrollToIndex(H, ke);
            }
            measureScrollOffset(H) {
              let ke;
              return (
                (ke =
                  this.scrollable == this
                    ? de => super.measureScrollOffset(de)
                    : de => this.scrollable.measureScrollOffset(de)),
                Math.max(
                  0,
                  ke(
                    H ?? ('horizontal' === this.orientation ? 'start' : 'top'),
                  ) - this.measureViewportOffset(),
                )
              );
            }
            measureViewportOffset(H) {
              let ke;
              const fe = 'rtl' == this.dir?.value;
              ke =
                'start' == H
                  ? fe
                    ? 'right'
                    : 'left'
                  : 'end' == H
                  ? fe
                    ? 'left'
                    : 'right'
                  : H || ('horizontal' === this.orientation ? 'left' : 'top');
              const qe =
                this.scrollable.measureBoundingClientRectWithScrollOffset(ke);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[ke] - qe
              );
            }
            measureRenderedContentSize() {
              const H = this._contentWrapper.nativeElement;
              return 'horizontal' === this.orientation
                ? H.offsetWidth
                : H.offsetHeight;
            }
            measureRangeSize(H) {
              return this._forOf
                ? this._forOf.measureRangeSize(H, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation,
              );
            }
            _markChangeDetectionNeeded(H) {
              H && this._runAfterChangeDetection.push(H),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    }),
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const H = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const ke of H) ke();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                'horizontal' === this.orientation
                  ? ''
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  'horizontal' === this.orientation
                    ? `${this._totalContentSize}px`
                    : '');
            }
          }
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)(
                x.Y36(x.SBq),
                x.Y36(x.sBO),
                x.Y36(x.R0b),
                x.Y36(Wt, 8),
                x.Y36(Ge.Is, 8),
                x.Y36(ft),
                x.Y36(ln),
                x.Y36(mn, 8),
              );
            }),
            (_e.ɵcmp = x.Xpm({
              type: _e,
              selectors: [['cdk-virtual-scroll-viewport']],
              viewQuery: function (H, ke) {
                if ((1 & H && x.Gf(ct, 7), 2 & H)) {
                  let de;
                  x.iGM((de = x.CRH())) && (ke._contentWrapper = de.first);
                }
              },
              hostAttrs: [1, 'cdk-virtual-scroll-viewport'],
              hostVars: 4,
              hostBindings: function (H, ke) {
                2 & H &&
                  x.ekj(
                    'cdk-virtual-scroll-orientation-horizontal',
                    'horizontal' === ke.orientation,
                  )(
                    'cdk-virtual-scroll-orientation-vertical',
                    'horizontal' !== ke.orientation,
                  );
              },
              inputs: { orientation: 'orientation', appendOnly: 'appendOnly' },
              outputs: { scrolledIndexChange: 'scrolledIndexChange' },
              standalone: !0,
              features: [
                x._Bn([
                  {
                    provide: Et,
                    useFactory: (ye, H) => ye || H,
                    deps: [[new x.FiY(), new x.tBr(mn)], _e],
                  },
                ]),
                x.qOj,
                x.jDz,
              ],
              ngContentSelectors: Ke,
              decls: 4,
              vars: 4,
              consts: [
                [1, 'cdk-virtual-scroll-content-wrapper'],
                ['contentWrapper', ''],
                [1, 'cdk-virtual-scroll-spacer'],
              ],
              template: function (H, ke) {
                1 & H &&
                  (x.F$t(),
                  x.TgZ(0, 'div', 0, 1),
                  x.Hsn(2),
                  x.qZA(),
                  x._UZ(3, 'div', 2)),
                  2 & H &&
                    (x.xp6(3),
                    x.Udp('width', ke._totalContentWidth)(
                      'height',
                      ke._totalContentHeight,
                    ));
              },
              styles: [
                'cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _e
          );
        })(),
        Ae = (() => {
          class _e {}
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)();
            }),
            (_e.ɵmod = x.oAB({ type: _e })),
            (_e.ɵinj = x.cJS({})),
            _e
          );
        })(),
        ze = (() => {
          class _e {}
          return (
            (_e.ɵfac = function (H) {
              return new (H || _e)();
            }),
            (_e.ɵmod = x.oAB({ type: _e })),
            (_e.ɵinj = x.cJS({ imports: [Ge.vT, Ae, Lt, Ge.vT, Ae] })),
            _e
          );
        })();
    },
    6895: (Rt, Pe, C) => {
      C.d(Pe, {
        Do: () => lt,
        ED: () => Xn,
        EM: () => xr,
        HT: () => oe,
        JF: () => qo,
        K0: () => ue,
        Mx: () => dr,
        NF: () => io,
        O5: () => ri,
        RF: () => ur,
        S$: () => vt,
        V_: () => he,
        Ye: () => bt,
        b0: () => _t,
        bD: () => Pr,
        ez: () => So,
        mk: () => hn,
        n9: () => Ai,
        q: () => L,
        sg: () => li,
        tP: () => or,
        w_: () => te,
      });
      var s = C(4650);
      let x = null;
      function L() {
        return x;
      }
      function oe(y) {
        x || (x = y);
      }
      class te {}
      const ue = new s.OlP('DocumentToken');
      let ve = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function le() {
                return (0, s.LFG)(ae);
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      const he = new s.OlP('Location Initialized');
      let ae = (() => {
        class y extends ve {
          constructor(A) {
            super(),
              (this._doc = A),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return L().getBaseHref(this._doc);
          }
          onPopState(A) {
            const j = L().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('popstate', A, !1),
              () => j.removeEventListener('popstate', A)
            );
          }
          onHashChange(A) {
            const j = L().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('hashchange', A, !1),
              () => j.removeEventListener('hashchange', A)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(A) {
            this._location.pathname = A;
          }
          pushState(A, j, ce) {
            pe()
              ? this._history.pushState(A, j, ce)
              : (this._location.hash = ce);
          }
          replaceState(A, j, ce) {
            pe()
              ? this._history.replaceState(A, j, ce)
              : (this._location.hash = ce);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(A = 0) {
            this._history.go(A);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.LFG(ue));
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function ie() {
                return new ae((0, s.LFG)(ue));
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      function pe() {
        return !!window.history.pushState;
      }
      function Ve(y, P) {
        if (0 == y.length) return P;
        if (0 == P.length) return y;
        let A = 0;
        return (
          y.endsWith('/') && A++,
          P.startsWith('/') && A++,
          2 == A ? y + P.substring(1) : 1 == A ? y + P : y + '/' + P
        );
      }
      function Ue(y) {
        const P = y.match(/#|\?|$/),
          A = (P && P.index) || y.length;
        return y.slice(0, A - ('/' === y[A - 1] ? 1 : 0)) + y.slice(A);
      }
      function at(y) {
        return y && '?' !== y[0] ? '?' + y : y;
      }
      let vt = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (0, s.f3M)(_t);
            },
            providedIn: 'root',
          })),
          y
        );
      })();
      const Le = new s.OlP('appBaseHref');
      let _t = (() => {
          class y extends vt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._removeListenerFns = []),
                (this._baseHref =
                  j ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, s.f3M)(ue).location?.origin ??
                  '');
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(A) {
              return Ve(this._baseHref, A);
            }
            path(A = !1) {
              const j =
                  this._platformLocation.pathname +
                  at(this._platformLocation.search),
                ce = this._platformLocation.hash;
              return ce && A ? `${j}${ce}` : j;
            }
            pushState(A, j, ce, it) {
              const yt = this.prepareExternalUrl(ce + at(it));
              this._platformLocation.pushState(A, j, yt);
            }
            replaceState(A, j, ce, it) {
              const yt = this.prepareExternalUrl(ce + at(it));
              this._platformLocation.replaceState(A, j, yt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ve), s.LFG(Le, 8));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: y.ɵfac,
              providedIn: 'root',
            })),
            y
          );
        })(),
        lt = (() => {
          class y extends vt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != j && (this._baseHref = j);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(A = !1) {
              let j = this._platformLocation.hash;
              return null == j && (j = '#'), j.length > 0 ? j.substring(1) : j;
            }
            prepareExternalUrl(A) {
              const j = Ve(this._baseHref, A);
              return j.length > 0 ? '#' + j : j;
            }
            pushState(A, j, ce, it) {
              let yt = this.prepareExternalUrl(ce + at(it));
              0 == yt.length && (yt = this._platformLocation.pathname),
                this._platformLocation.pushState(A, j, yt);
            }
            replaceState(A, j, ce, it) {
              let yt = this.prepareExternalUrl(ce + at(it));
              0 == yt.length && (yt = this._platformLocation.pathname),
                this._platformLocation.replaceState(A, j, yt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ve), s.LFG(Le, 8));
            }),
            (y.ɵprov = s.Yz7({ token: y, factory: y.ɵfac })),
            y
          );
        })(),
        bt = (() => {
          class y {
            constructor(A) {
              (this._subject = new s.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = A);
              const j = this._locationStrategy.getBaseHref();
              (this._basePath = (function X(y) {
                if (new RegExp('^(https?:)?//').test(y)) {
                  const [, A] = y.split(/\/\/[^\/]+/);
                  return A;
                }
                return y;
              })(Ue(ne(j)))),
                this._locationStrategy.onPopState(ce => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: ce.state,
                    type: ce.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(A = !1) {
              return this.normalize(this._locationStrategy.path(A));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(A, j = '') {
              return this.path() == this.normalize(A + at(j));
            }
            normalize(A) {
              return y.stripTrailingSlash(
                (function se(y, P) {
                  if (!y || !P.startsWith(y)) return P;
                  const A = P.substring(y.length);
                  return '' === A || ['/', ';', '?', '#'].includes(A[0])
                    ? A
                    : P;
                })(this._basePath, ne(A)),
              );
            }
            prepareExternalUrl(A) {
              return (
                A && '/' !== A[0] && (A = '/' + A),
                this._locationStrategy.prepareExternalUrl(A)
              );
            }
            go(A, j = '', ce = null) {
              this._locationStrategy.pushState(ce, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + at(j)),
                  ce,
                );
            }
            replaceState(A, j = '', ce = null) {
              this._locationStrategy.replaceState(ce, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + at(j)),
                  ce,
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(A = 0) {
              this._locationStrategy.historyGo?.(A);
            }
            onUrlChange(A) {
              return (
                this._urlChangeListeners.push(A),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe(j => {
                    this._notifyUrlChangeListeners(j.url, j.state);
                  })),
                () => {
                  const j = this._urlChangeListeners.indexOf(A);
                  this._urlChangeListeners.splice(j, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(A = '', j) {
              this._urlChangeListeners.forEach(ce => ce(A, j));
            }
            subscribe(A, j, ce) {
              return this._subject.subscribe({
                next: A,
                error: j,
                complete: ce,
              });
            }
          }
          return (
            (y.normalizeQueryParams = at),
            (y.joinWithSlash = Ve),
            (y.stripTrailingSlash = Ue),
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(vt));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: function () {
                return (function W() {
                  return new bt((0, s.LFG)(vt));
                })();
              },
              providedIn: 'root',
            })),
            y
          );
        })();
      function ne(y) {
        return y.replace(/\/index.html$/, '');
      }
      function dr(y, P) {
        P = encodeURIComponent(P);
        for (const A of y.split(';')) {
          const j = A.indexOf('='),
            [ce, it] = -1 == j ? [A, ''] : [A.slice(0, j), A.slice(j + 1)];
          if (ce.trim() === P) return decodeURIComponent(it);
        }
        return null;
      }
      const ui = /\s+/,
        jt = [];
      let hn = (() => {
        class y {
          constructor(A, j, ce, it) {
            (this._iterableDiffers = A),
              (this._keyValueDiffers = j),
              (this._ngEl = ce),
              (this._renderer = it),
              (this.initialClasses = jt),
              (this.stateMap = new Map());
          }
          set klass(A) {
            this.initialClasses = null != A ? A.trim().split(ui) : jt;
          }
          set ngClass(A) {
            this.rawClass = 'string' == typeof A ? A.trim().split(ui) : A;
          }
          ngDoCheck() {
            for (const j of this.initialClasses) this._updateState(j, !0);
            const A = this.rawClass;
            if (Array.isArray(A) || A instanceof Set)
              for (const j of A) this._updateState(j, !0);
            else if (null != A)
              for (const j of Object.keys(A))
                this._updateState(j, Boolean(A[j]));
            this._applyStateDiff();
          }
          _updateState(A, j) {
            const ce = this.stateMap.get(A);
            void 0 !== ce
              ? (ce.enabled !== j && ((ce.changed = !0), (ce.enabled = j)),
                (ce.touched = !0))
              : this.stateMap.set(A, { enabled: j, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const A of this.stateMap) {
              const j = A[0],
                ce = A[1];
              ce.changed
                ? (this._toggleClass(j, ce.enabled), (ce.changed = !1))
                : ce.touched ||
                  (ce.enabled && this._toggleClass(j, !1),
                  this.stateMap.delete(j)),
                (ce.touched = !1);
            }
          }
          _toggleClass(A, j) {
            (A = A.trim()).length > 0 &&
              A.split(ui).forEach(ce => {
                j
                  ? this._renderer.addClass(this._ngEl.nativeElement, ce)
                  : this._renderer.removeClass(this._ngEl.nativeElement, ce);
              });
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(
              s.Y36(s.ZZ4),
              s.Y36(s.aQg),
              s.Y36(s.SBq),
              s.Y36(s.Qsj),
            );
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            standalone: !0,
          })),
          y
        );
      })();
      class Qn {
        constructor(P, A, j, ce) {
          (this.$implicit = P),
            (this.ngForOf = A),
            (this.index = j),
            (this.count = ce);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let li = (() => {
        class y {
          set ngForOf(A) {
            (this._ngForOf = A), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(A) {
            this._trackByFn = A;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(A, j, ce) {
            (this._viewContainer = A),
              (this._template = j),
              (this._differs = ce),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(A) {
            A && (this._template = A);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const A = this._ngForOf;
              !this._differ &&
                A &&
                (this._differ = this._differs
                  .find(A)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const A = this._differ.diff(this._ngForOf);
              A && this._applyChanges(A);
            }
          }
          _applyChanges(A) {
            const j = this._viewContainer;
            A.forEachOperation((ce, it, yt) => {
              if (null == ce.previousIndex)
                j.createEmbeddedView(
                  this._template,
                  new Qn(ce.item, this._ngForOf, -1, -1),
                  null === yt ? void 0 : yt,
                );
              else if (null == yt) j.remove(null === it ? void 0 : it);
              else if (null !== it) {
                const tn = j.get(it);
                j.move(tn, yt), An(tn, ce);
              }
            });
            for (let ce = 0, it = j.length; ce < it; ce++) {
              const tn = j.get(ce).context;
              (tn.index = ce), (tn.count = it), (tn.ngForOf = this._ngForOf);
            }
            A.forEachIdentityChange(ce => {
              An(j.get(ce.currentIndex), ce);
            });
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(s.ZZ4));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: {
              ngForOf: 'ngForOf',
              ngForTrackBy: 'ngForTrackBy',
              ngForTemplate: 'ngForTemplate',
            },
            standalone: !0,
          })),
          y
        );
      })();
      function An(y, P) {
        y.context.$implicit = P.item;
      }
      let ri = (() => {
        class y {
          constructor(A, j) {
            (this._viewContainer = A),
              (this._context = new _n()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = j);
          }
          set ngIf(A) {
            (this._context.$implicit = this._context.ngIf = A),
              this._updateView();
          }
          set ngIfThen(A) {
            Ji('ngIfThen', A),
              (this._thenTemplateRef = A),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(A) {
            Ji('ngIfElse', A),
              (this._elseTemplateRef = A),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context,
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context,
                  )));
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngIf', '']],
            inputs: {
              ngIf: 'ngIf',
              ngIfThen: 'ngIfThen',
              ngIfElse: 'ngIfElse',
            },
            standalone: !0,
          })),
          y
        );
      })();
      class _n {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Ji(y, P) {
        if (P && !P.createEmbeddedView)
          throw new Error(
            `${y} must be a TemplateRef, but received '${(0, s.AaK)(P)}'.`,
          );
      }
      class zi {
        constructor(P, A) {
          (this._viewContainerRef = P),
            (this._templateRef = A),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(P) {
          P && !this._created
            ? this.create()
            : !P && this._created && this.destroy();
        }
      }
      let ur = (() => {
          class y {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(A) {
              (this._ngSwitch = A),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(A) {
              this._defaultViews.push(A);
            }
            _matchCase(A) {
              const j = A == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || j),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                j
              );
            }
            _updateDefaultCases(A) {
              if (this._defaultViews.length > 0 && A !== this._defaultUsed) {
                this._defaultUsed = A;
                for (const j of this._defaultViews) j.enforceState(A);
              }
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitch', '']],
              inputs: { ngSwitch: 'ngSwitch' },
              standalone: !0,
            })),
            y
          );
        })(),
        Ai = (() => {
          class y {
            constructor(A, j, ce) {
              (this.ngSwitch = ce), ce._addCase(), (this._view = new zi(A, j));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase),
              );
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(ur, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
              standalone: !0,
            })),
            y
          );
        })(),
        Xn = (() => {
          class y {
            constructor(A, j, ce) {
              ce._addDefault(new zi(A, j));
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(ur, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchDefault', '']],
              standalone: !0,
            })),
            y
          );
        })(),
        or = (() => {
          class y {
            constructor(A) {
              (this._viewContainerRef = A),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(A) {
              if (A.ngTemplateOutlet || A.ngTemplateOutletInjector) {
                const j = this._viewContainerRef;
                if (
                  (this._viewRef && j.remove(j.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: ce,
                    ngTemplateOutletContext: it,
                    ngTemplateOutletInjector: yt,
                  } = this;
                  this._viewRef = j.createEmbeddedView(
                    ce,
                    it,
                    yt ? { injector: yt } : void 0,
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  A.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: {
                ngTemplateOutletContext: 'ngTemplateOutletContext',
                ngTemplateOutlet: 'ngTemplateOutlet',
                ngTemplateOutletInjector: 'ngTemplateOutletInjector',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            y
          );
        })(),
        So = (() => {
          class y {}
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵmod = s.oAB({ type: y })),
            (y.ɵinj = s.cJS({})),
            y
          );
        })();
      const Pr = 'browser';
      function io(y) {
        return y === Pr;
      }
      let xr = (() => {
        class y {}
        return (
          (y.ɵprov = (0, s.Yz7)({
            token: y,
            providedIn: 'root',
            factory: () => new ro((0, s.LFG)(ue), window),
          })),
          y
        );
      })();
      class ro {
        constructor(P, A) {
          (this.document = P), (this.window = A), (this.offset = () => [0, 0]);
        }
        setOffset(P) {
          this.offset = Array.isArray(P) ? () => P : P;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(P) {
          this.supportsScrolling() && this.window.scrollTo(P[0], P[1]);
        }
        scrollToAnchor(P) {
          if (!this.supportsScrolling()) return;
          const A = (function ar(y, P) {
            const A = y.getElementById(P) || y.getElementsByName(P)[0];
            if (A) return A;
            if (
              'function' == typeof y.createTreeWalker &&
              y.body &&
              (y.body.createShadowRoot || y.body.attachShadow)
            ) {
              const j = y.createTreeWalker(y.body, NodeFilter.SHOW_ELEMENT);
              let ce = j.currentNode;
              for (; ce; ) {
                const it = ce.shadowRoot;
                if (it) {
                  const yt =
                    it.getElementById(P) || it.querySelector(`[name="${P}"]`);
                  if (yt) return yt;
                }
                ce = j.nextNode();
              }
            }
            return null;
          })(this.document, P);
          A && (this.scrollToElement(A), A.focus());
        }
        setHistoryScrollRestoration(P) {
          if (this.supportScrollRestoration()) {
            const A = this.window.history;
            A && A.scrollRestoration && (A.scrollRestoration = P);
          }
        }
        scrollToElement(P) {
          const A = P.getBoundingClientRect(),
            j = A.left + this.window.pageXOffset,
            ce = A.top + this.window.pageYOffset,
            it = this.offset();
          this.window.scrollTo(j - it[0], ce - it[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const P =
              $r(this.window.history) ||
              $r(Object.getPrototypeOf(this.window.history));
            return !(!P || (!P.writable && !P.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              'pageXOffset' in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function $r(y) {
        return Object.getOwnPropertyDescriptor(y, 'scrollRestoration');
      }
      class qo {}
    },
    529: (Rt, Pe, C) => {
      C.d(Pe, { JF: () => et, TP: () => Re, WM: () => ae, eN: () => He });
      var s = C(6895),
        x = C(4650),
        L = C(9646),
        oe = C(9751),
        te = C(4351),
        ue = C(9300),
        ve = C(4004);
      class le {}
      class he {}
      class ae {
        constructor(b) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            b
              ? (this.lazyInit =
                  'string' == typeof b
                    ? () => {
                        (this.headers = new Map()),
                          b.split('\n').forEach(M => {
                            const G = M.indexOf(':');
                            if (G > 0) {
                              const Q = M.slice(0, G),
                                Qe = Q.toLowerCase(),
                                Tt = M.slice(G + 1).trim();
                              this.maybeSetNormalizedName(Q, Qe),
                                this.headers.has(Qe)
                                  ? this.headers.get(Qe).push(Tt)
                                  : this.headers.set(Qe, [Tt]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.entries(b).forEach(([M, G]) => {
                            let Q;
                            if (
                              ((Q =
                                'string' == typeof G
                                  ? [G]
                                  : 'number' == typeof G
                                  ? [G.toString()]
                                  : G.map(Qe => Qe.toString())),
                              Q.length > 0)
                            ) {
                              const Qe = M.toLowerCase();
                              this.headers.set(Qe, Q),
                                this.maybeSetNormalizedName(M, Qe);
                            }
                          });
                      })
              : (this.headers = new Map());
        }
        has(b) {
          return this.init(), this.headers.has(b.toLowerCase());
        }
        get(b) {
          this.init();
          const M = this.headers.get(b.toLowerCase());
          return M && M.length > 0 ? M[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(b) {
          return this.init(), this.headers.get(b.toLowerCase()) || null;
        }
        append(b, M) {
          return this.clone({ name: b, value: M, op: 'a' });
        }
        set(b, M) {
          return this.clone({ name: b, value: M, op: 's' });
        }
        delete(b, M) {
          return this.clone({ name: b, value: M, op: 'd' });
        }
        maybeSetNormalizedName(b, M) {
          this.normalizedNames.has(M) || this.normalizedNames.set(M, b);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ae
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach(b => this.applyUpdate(b)),
              (this.lazyUpdate = null)));
        }
        copyFrom(b) {
          b.init(),
            Array.from(b.headers.keys()).forEach(M => {
              this.headers.set(M, b.headers.get(M)),
                this.normalizedNames.set(M, b.normalizedNames.get(M));
            });
        }
        clone(b) {
          const M = new ae();
          return (
            (M.lazyInit =
              this.lazyInit && this.lazyInit instanceof ae
                ? this.lazyInit
                : this),
            (M.lazyUpdate = (this.lazyUpdate || []).concat([b])),
            M
          );
        }
        applyUpdate(b) {
          const M = b.name.toLowerCase();
          switch (b.op) {
            case 'a':
            case 's':
              let G = b.value;
              if (('string' == typeof G && (G = [G]), 0 === G.length)) return;
              this.maybeSetNormalizedName(b.name, M);
              const Q = ('a' === b.op ? this.headers.get(M) : void 0) || [];
              Q.push(...G), this.headers.set(M, Q);
              break;
            case 'd':
              const Qe = b.value;
              if (Qe) {
                let Tt = this.headers.get(M);
                if (!Tt) return;
                (Tt = Tt.filter(Vt => -1 === Qe.indexOf(Vt))),
                  0 === Tt.length
                    ? (this.headers.delete(M), this.normalizedNames.delete(M))
                    : this.headers.set(M, Tt);
              } else this.headers.delete(M), this.normalizedNames.delete(M);
          }
        }
        forEach(b) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach(M =>
              b(this.normalizedNames.get(M), this.headers.get(M)),
            );
        }
      }
      class ie {
        encodeKey(b) {
          return vt(b);
        }
        encodeValue(b) {
          return vt(b);
        }
        decodeKey(b) {
          return decodeURIComponent(b);
        }
        decodeValue(b) {
          return decodeURIComponent(b);
        }
      }
      const Ue = /%(\d[a-f0-9])/gi,
        at = {
          40: '@',
          '3A': ':',
          24: '$',
          '2C': ',',
          '3B': ';',
          '3D': '=',
          '3F': '?',
          '2F': '/',
        };
      function vt(F) {
        return encodeURIComponent(F).replace(Ue, (b, M) => at[M] ?? b);
      }
      function Le(F) {
        return `${F}`;
      }
      class _t {
        constructor(b = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = b.encoder || new ie()),
            b.fromString)
          ) {
            if (b.fromObject)
              throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function Ve(F, b) {
              const M = new Map();
              return (
                F.length > 0 &&
                  F.replace(/^\?/, '')
                    .split('&')
                    .forEach(Q => {
                      const Qe = Q.indexOf('='),
                        [Tt, Vt] =
                          -1 == Qe
                            ? [b.decodeKey(Q), '']
                            : [
                                b.decodeKey(Q.slice(0, Qe)),
                                b.decodeValue(Q.slice(Qe + 1)),
                              ],
                        Je = M.get(Tt) || [];
                      Je.push(Vt), M.set(Tt, Je);
                    }),
                M
              );
            })(b.fromString, this.encoder);
          } else
            b.fromObject
              ? ((this.map = new Map()),
                Object.keys(b.fromObject).forEach(M => {
                  const G = b.fromObject[M],
                    Q = Array.isArray(G) ? G.map(Le) : [Le(G)];
                  this.map.set(M, Q);
                }))
              : (this.map = null);
        }
        has(b) {
          return this.init(), this.map.has(b);
        }
        get(b) {
          this.init();
          const M = this.map.get(b);
          return M ? M[0] : null;
        }
        getAll(b) {
          return this.init(), this.map.get(b) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(b, M) {
          return this.clone({ param: b, value: M, op: 'a' });
        }
        appendAll(b) {
          const M = [];
          return (
            Object.keys(b).forEach(G => {
              const Q = b[G];
              Array.isArray(Q)
                ? Q.forEach(Qe => {
                    M.push({ param: G, value: Qe, op: 'a' });
                  })
                : M.push({ param: G, value: Q, op: 'a' });
            }),
            this.clone(M)
          );
        }
        set(b, M) {
          return this.clone({ param: b, value: M, op: 's' });
        }
        delete(b, M) {
          return this.clone({ param: b, value: M, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map(b => {
                const M = this.encoder.encodeKey(b);
                return this.map
                  .get(b)
                  .map(G => M + '=' + this.encoder.encodeValue(G))
                  .join('&');
              })
              .filter(b => '' !== b)
              .join('&')
          );
        }
        clone(b) {
          const M = new _t({ encoder: this.encoder });
          return (
            (M.cloneFrom = this.cloneFrom || this),
            (M.updates = (this.updates || []).concat(b)),
            M
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach(b => this.map.set(b, this.cloneFrom.map.get(b))),
              this.updates.forEach(b => {
                switch (b.op) {
                  case 'a':
                  case 's':
                    const M =
                      ('a' === b.op ? this.map.get(b.param) : void 0) || [];
                    M.push(Le(b.value)), this.map.set(b.param, M);
                    break;
                  case 'd':
                    if (void 0 === b.value) {
                      this.map.delete(b.param);
                      break;
                    }
                    {
                      let G = this.map.get(b.param) || [];
                      const Q = G.indexOf(Le(b.value));
                      -1 !== Q && G.splice(Q, 1),
                        G.length > 0
                          ? this.map.set(b.param, G)
                          : this.map.delete(b.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class bt {
        constructor() {
          this.map = new Map();
        }
        set(b, M) {
          return this.map.set(b, M), this;
        }
        get(b) {
          return (
            this.map.has(b) || this.map.set(b, b.defaultValue()),
            this.map.get(b)
          );
        }
        delete(b) {
          return this.map.delete(b), this;
        }
        has(b) {
          return this.map.has(b);
        }
        keys() {
          return this.map.keys();
        }
      }
      function se(F) {
        return typeof ArrayBuffer < 'u' && F instanceof ArrayBuffer;
      }
      function ne(F) {
        return typeof Blob < 'u' && F instanceof Blob;
      }
      function X(F) {
        return typeof FormData < 'u' && F instanceof FormData;
      }
      class nt {
        constructor(b, M, G, Q) {
          let Qe;
          if (
            ((this.url = M),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = b.toUpperCase()),
            (function W(F) {
              switch (F) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || Q
              ? ((this.body = void 0 !== G ? G : null), (Qe = Q))
              : (Qe = G),
            Qe &&
              ((this.reportProgress = !!Qe.reportProgress),
              (this.withCredentials = !!Qe.withCredentials),
              Qe.responseType && (this.responseType = Qe.responseType),
              Qe.headers && (this.headers = Qe.headers),
              Qe.context && (this.context = Qe.context),
              Qe.params && (this.params = Qe.params)),
            this.headers || (this.headers = new ae()),
            this.context || (this.context = new bt()),
            this.params)
          ) {
            const Tt = this.params.toString();
            if (0 === Tt.length) this.urlWithParams = M;
            else {
              const Vt = M.indexOf('?');
              this.urlWithParams =
                M + (-1 === Vt ? '?' : Vt < M.length - 1 ? '&' : '') + Tt;
            }
          } else (this.params = new _t()), (this.urlWithParams = M);
        }
        serializeBody() {
          return null === this.body
            ? null
            : se(this.body) ||
              ne(this.body) ||
              X(this.body) ||
              (function we(F) {
                return (
                  typeof URLSearchParams < 'u' && F instanceof URLSearchParams
                );
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof _t
            ? this.body.toString()
            : 'object' == typeof this.body ||
              'boolean' == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || X(this.body)
            ? null
            : ne(this.body)
            ? this.body.type || null
            : se(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof _t
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body ||
              'number' == typeof this.body ||
              'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(b = {}) {
          const M = b.method || this.method,
            G = b.url || this.url,
            Q = b.responseType || this.responseType,
            Qe = void 0 !== b.body ? b.body : this.body,
            Tt =
              void 0 !== b.withCredentials
                ? b.withCredentials
                : this.withCredentials,
            Vt =
              void 0 !== b.reportProgress
                ? b.reportProgress
                : this.reportProgress;
          let Je = b.headers || this.headers,
            Ft = b.params || this.params;
          const en = b.context ?? this.context;
          return (
            void 0 !== b.setHeaders &&
              (Je = Object.keys(b.setHeaders).reduce(
                (Oe, be) => Oe.set(be, b.setHeaders[be]),
                Je,
              )),
            b.setParams &&
              (Ft = Object.keys(b.setParams).reduce(
                (Oe, be) => Oe.set(be, b.setParams[be]),
                Ft,
              )),
            new nt(M, G, Qe, {
              params: Ft,
              headers: Je,
              context: en,
              reportProgress: Vt,
              responseType: Q,
              withCredentials: Tt,
            })
          );
        }
      }
      var ut = (() => (
        ((ut = ut || {})[(ut.Sent = 0)] = 'Sent'),
        (ut[(ut.UploadProgress = 1)] = 'UploadProgress'),
        (ut[(ut.ResponseHeader = 2)] = 'ResponseHeader'),
        (ut[(ut.DownloadProgress = 3)] = 'DownloadProgress'),
        (ut[(ut.Response = 4)] = 'Response'),
        (ut[(ut.User = 5)] = 'User'),
        ut
      ))();
      class Ut {
        constructor(b, M = 200, G = 'OK') {
          (this.headers = b.headers || new ae()),
            (this.status = void 0 !== b.status ? b.status : M),
            (this.statusText = b.statusText || G),
            (this.url = b.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class xt extends Ut {
        constructor(b = {}) {
          super(b), (this.type = ut.ResponseHeader);
        }
        clone(b = {}) {
          return new xt({
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Kt extends Ut {
        constructor(b = {}) {
          super(b),
            (this.type = ut.Response),
            (this.body = void 0 !== b.body ? b.body : null);
        }
        clone(b = {}) {
          return new Kt({
            body: void 0 !== b.body ? b.body : this.body,
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class At extends Ut {
        constructor(b) {
          super(b, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${b.url || '(unknown url)'}`
                : `Http failure response for ${b.url || '(unknown url)'}: ${
                    b.status
                  } ${b.statusText}`),
            (this.error = b.error || null);
        }
      }
      function $e(F, b) {
        return {
          body: b,
          headers: F.headers,
          context: F.context,
          observe: F.observe,
          params: F.params,
          reportProgress: F.reportProgress,
          responseType: F.responseType,
          withCredentials: F.withCredentials,
        };
      }
      let He = (() => {
        class F {
          constructor(M) {
            this.handler = M;
          }
          request(M, G, Q = {}) {
            let Qe;
            if (M instanceof nt) Qe = M;
            else {
              let Je, Ft;
              (Je = Q.headers instanceof ae ? Q.headers : new ae(Q.headers)),
                Q.params &&
                  (Ft =
                    Q.params instanceof _t
                      ? Q.params
                      : new _t({ fromObject: Q.params })),
                (Qe = new nt(M, G, void 0 !== Q.body ? Q.body : null, {
                  headers: Je,
                  context: Q.context,
                  params: Ft,
                  reportProgress: Q.reportProgress,
                  responseType: Q.responseType || 'json',
                  withCredentials: Q.withCredentials,
                }));
            }
            const Tt = (0, L.of)(Qe).pipe(
              (0, te.b)(Je => this.handler.handle(Je)),
            );
            if (M instanceof nt || 'events' === Q.observe) return Tt;
            const Vt = Tt.pipe((0, ue.h)(Je => Je instanceof Kt));
            switch (Q.observe || 'body') {
              case 'body':
                switch (Qe.responseType) {
                  case 'arraybuffer':
                    return Vt.pipe(
                      (0, ve.U)(Je => {
                        if (
                          null !== Je.body &&
                          !(Je.body instanceof ArrayBuffer)
                        )
                          throw new Error('Response is not an ArrayBuffer.');
                        return Je.body;
                      }),
                    );
                  case 'blob':
                    return Vt.pipe(
                      (0, ve.U)(Je => {
                        if (null !== Je.body && !(Je.body instanceof Blob))
                          throw new Error('Response is not a Blob.');
                        return Je.body;
                      }),
                    );
                  case 'text':
                    return Vt.pipe(
                      (0, ve.U)(Je => {
                        if (null !== Je.body && 'string' != typeof Je.body)
                          throw new Error('Response is not a string.');
                        return Je.body;
                      }),
                    );
                  default:
                    return Vt.pipe((0, ve.U)(Je => Je.body));
                }
              case 'response':
                return Vt;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${Q.observe}}`,
                );
            }
          }
          delete(M, G = {}) {
            return this.request('DELETE', M, G);
          }
          get(M, G = {}) {
            return this.request('GET', M, G);
          }
          head(M, G = {}) {
            return this.request('HEAD', M, G);
          }
          jsonp(M, G) {
            return this.request('JSONP', M, {
              params: new _t().append(G, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(M, G = {}) {
            return this.request('OPTIONS', M, G);
          }
          patch(M, G, Q = {}) {
            return this.request('PATCH', M, $e(Q, G));
          }
          post(M, G, Q = {}) {
            return this.request('POST', M, $e(Q, G));
          }
          put(M, G, Q = {}) {
            return this.request('PUT', M, $e(Q, G));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(le));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      function De(F, b) {
        return b(F);
      }
      function je(F, b) {
        return (M, G) => b.intercept(M, { handle: Q => F(Q, G) });
      }
      const Re = new x.OlP('HTTP_INTERCEPTORS'),
        Ne = new x.OlP('HTTP_INTERCEPTOR_FNS');
      function Ge() {
        let F = null;
        return (b, M) => (
          null === F &&
            (F = ((0, x.f3M)(Re, { optional: !0 }) ?? []).reduceRight(je, De)),
          F(b, M)
        );
      }
      let ct = (() => {
        class F extends le {
          constructor(M, G) {
            super(),
              (this.backend = M),
              (this.injector = G),
              (this.chain = null);
          }
          handle(M) {
            if (null === this.chain) {
              const G = Array.from(new Set(this.injector.get(Ne)));
              this.chain = G.reduceRight(
                (Q, Qe) =>
                  (function Ce(F, b, M) {
                    return (G, Q) => M.runInContext(() => b(G, Qe => F(Qe, Q)));
                  })(Q, Qe, this.injector),
                De,
              );
            }
            return this.chain(M, G => this.backend.handle(G));
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(he), x.LFG(x.lqb));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      const dn = /^\)\]\}',?\n/;
      let Jt = (() => {
        class F {
          constructor(M) {
            this.xhrFactory = M;
          }
          handle(M) {
            if ('JSONP' === M.method)
              throw new Error(
                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.',
              );
            return new oe.y(G => {
              const Q = this.xhrFactory.build();
              if (
                (Q.open(M.method, M.urlWithParams),
                M.withCredentials && (Q.withCredentials = !0),
                M.headers.forEach((Z, Ee) =>
                  Q.setRequestHeader(Z, Ee.join(',')),
                ),
                M.headers.has('Accept') ||
                  Q.setRequestHeader(
                    'Accept',
                    'application/json, text/plain, */*',
                  ),
                !M.headers.has('Content-Type'))
              ) {
                const Z = M.detectContentTypeHeader();
                null !== Z && Q.setRequestHeader('Content-Type', Z);
              }
              if (M.responseType) {
                const Z = M.responseType.toLowerCase();
                Q.responseType = 'json' !== Z ? Z : 'text';
              }
              const Qe = M.serializeBody();
              let Tt = null;
              const Vt = () => {
                  if (null !== Tt) return Tt;
                  const Z = Q.statusText || 'OK',
                    Ee = new ae(Q.getAllResponseHeaders()),
                    dt =
                      (function Gn(F) {
                        return 'responseURL' in F && F.responseURL
                          ? F.responseURL
                          : /^X-Request-URL:/m.test(F.getAllResponseHeaders())
                          ? F.getResponseHeader('X-Request-URL')
                          : null;
                      })(Q) || M.url;
                  return (
                    (Tt = new xt({
                      headers: Ee,
                      status: Q.status,
                      statusText: Z,
                      url: dt,
                    })),
                    Tt
                  );
                },
                Je = () => {
                  let {
                      headers: Z,
                      status: Ee,
                      statusText: dt,
                      url: Bt,
                    } = Vt(),
                    qt = null;
                  204 !== Ee &&
                    (qt =
                      typeof Q.response > 'u' ? Q.responseText : Q.response),
                    0 === Ee && (Ee = qt ? 200 : 0);
                  let Dn = Ee >= 200 && Ee < 300;
                  if ('json' === M.responseType && 'string' == typeof qt) {
                    const Wn = qt;
                    qt = qt.replace(dn, '');
                    try {
                      qt = '' !== qt ? JSON.parse(qt) : null;
                    } catch (wi) {
                      (qt = Wn),
                        Dn && ((Dn = !1), (qt = { error: wi, text: qt }));
                    }
                  }
                  Dn
                    ? (G.next(
                        new Kt({
                          body: qt,
                          headers: Z,
                          status: Ee,
                          statusText: dt,
                          url: Bt || void 0,
                        }),
                      ),
                      G.complete())
                    : G.error(
                        new At({
                          error: qt,
                          headers: Z,
                          status: Ee,
                          statusText: dt,
                          url: Bt || void 0,
                        }),
                      );
                },
                Ft = Z => {
                  const { url: Ee } = Vt(),
                    dt = new At({
                      error: Z,
                      status: Q.status || 0,
                      statusText: Q.statusText || 'Unknown Error',
                      url: Ee || void 0,
                    });
                  G.error(dt);
                };
              let en = !1;
              const Oe = Z => {
                  en || (G.next(Vt()), (en = !0));
                  let Ee = { type: ut.DownloadProgress, loaded: Z.loaded };
                  Z.lengthComputable && (Ee.total = Z.total),
                    'text' === M.responseType &&
                      Q.responseText &&
                      (Ee.partialText = Q.responseText),
                    G.next(Ee);
                },
                be = Z => {
                  let Ee = { type: ut.UploadProgress, loaded: Z.loaded };
                  Z.lengthComputable && (Ee.total = Z.total), G.next(Ee);
                };
              return (
                Q.addEventListener('load', Je),
                Q.addEventListener('error', Ft),
                Q.addEventListener('timeout', Ft),
                Q.addEventListener('abort', Ft),
                M.reportProgress &&
                  (Q.addEventListener('progress', Oe),
                  null !== Qe &&
                    Q.upload &&
                    Q.upload.addEventListener('progress', be)),
                Q.send(Qe),
                G.next({ type: ut.Sent }),
                () => {
                  Q.removeEventListener('error', Ft),
                    Q.removeEventListener('abort', Ft),
                    Q.removeEventListener('load', Je),
                    Q.removeEventListener('timeout', Ft),
                    M.reportProgress &&
                      (Q.removeEventListener('progress', Oe),
                      null !== Qe &&
                        Q.upload &&
                        Q.upload.removeEventListener('progress', be)),
                    Q.readyState !== Q.DONE && Q.abort();
                }
              );
            });
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(s.JF));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      const Lt = new x.OlP('XSRF_ENABLED'),
        ot = new x.OlP('XSRF_COOKIE_NAME', {
          providedIn: 'root',
          factory: () => 'XSRF-TOKEN',
        }),
        ee = new x.OlP('XSRF_HEADER_NAME', {
          providedIn: 'root',
          factory: () => 'X-XSRF-TOKEN',
        });
      class Ae {}
      let ze = (() => {
        class F {
          constructor(M, G, Q) {
            (this.doc = M),
              (this.platform = G),
              (this.cookieName = Q),
              (this.lastCookieString = ''),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ('server' === this.platform) return null;
            const M = this.doc.cookie || '';
            return (
              M !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, s.Mx)(M, this.cookieName)),
                (this.lastCookieString = M)),
              this.lastToken
            );
          }
        }
        return (
          (F.ɵfac = function (M) {
            return new (M || F)(x.LFG(s.K0), x.LFG(x.Lbi), x.LFG(ot));
          }),
          (F.ɵprov = x.Yz7({ token: F, factory: F.ɵfac })),
          F
        );
      })();
      function _e(F, b) {
        const M = F.url.toLowerCase();
        if (
          !(0, x.f3M)(Lt) ||
          'GET' === F.method ||
          'HEAD' === F.method ||
          M.startsWith('http://') ||
          M.startsWith('https://')
        )
          return b(F);
        const G = (0, x.f3M)(Ae).getToken(),
          Q = (0, x.f3M)(ee);
        return (
          null != G &&
            !F.headers.has(Q) &&
            (F = F.clone({ headers: F.headers.set(Q, G) })),
          b(F)
        );
      }
      var H = (() => (
        ((H = H || {})[(H.Interceptors = 0)] = 'Interceptors'),
        (H[(H.LegacyInterceptors = 1)] = 'LegacyInterceptors'),
        (H[(H.CustomXsrfConfiguration = 2)] = 'CustomXsrfConfiguration'),
        (H[(H.NoXsrfProtection = 3)] = 'NoXsrfProtection'),
        (H[(H.JsonpSupport = 4)] = 'JsonpSupport'),
        (H[(H.RequestsMadeViaParent = 5)] = 'RequestsMadeViaParent'),
        H
      ))();
      function ke(F, b) {
        return { ɵkind: F, ɵproviders: b };
      }
      function de(...F) {
        const b = [
          He,
          Jt,
          ct,
          { provide: le, useExisting: ct },
          { provide: he, useExisting: Jt },
          { provide: Ne, useValue: _e, multi: !0 },
          { provide: Lt, useValue: !0 },
          { provide: Ae, useClass: ze },
        ];
        for (const M of F) b.push(...M.ɵproviders);
        return (0, x.MR2)(b);
      }
      const fe = new x.OlP('LEGACY_INTERCEPTOR_FN');
      let et = (() => {
        class F {}
        return (
          (F.ɵfac = function (M) {
            return new (M || F)();
          }),
          (F.ɵmod = x.oAB({ type: F })),
          (F.ɵinj = x.cJS({
            providers: [
              de(
                ke(H.LegacyInterceptors, [
                  { provide: fe, useFactory: Ge },
                  { provide: Ne, useExisting: fe, multi: !0 },
                ]),
              ),
            ],
          })),
          F
        );
      })();
    },
    4650: (Rt, Pe, C) => {
      C.d(Pe, {
        $8M: () => As,
        $WT: () => ai,
        $Z: () => Ch,
        AFp: () => Cm,
        ALo: () => zp,
        AaK: () => le,
        BQk: () => Fl,
        CHM: () => pr,
        CRH: () => Jp,
        CZH: () => Wl,
        CqO: () => nf,
        D6c: () => jD,
        EJc: () => rD,
        EiD: () => Uu,
        EpF: () => ef,
        F$t: () => cf,
        F4k: () => tf,
        FYo: () => th,
        FiY: () => rs,
        Gf: () => Qp,
        GfV: () => nh,
        Gpc: () => pe,
        Gre: () => jf,
        Hsn: () => df,
        Ikx: () => Dd,
        JOm: () => Xr,
        JVY: () => Vg,
        JZr: () => vt,
        KtG: () => go,
        L6k: () => Ug,
        LAX: () => jg,
        LFG: () => et,
        Lbi: () => eD,
        Lck: () => Qy,
        MAs: () => Xh,
        MMx: () => Td,
        MR2: () => o_,
        NdJ: () => ud,
        O4$: () => fn,
        OlP: () => ti,
        Oqu: () => yd,
        P3R: () => zu,
        PXZ: () => bD,
        Q6J: () => ad,
        QGY: () => dd,
        QbO: () => tD,
        Qsj: () => y_,
        R0b: () => Mo,
        RDi: () => Og,
        Rgc: () => Qa,
        SBq: () => La,
        Sil: () => sD,
        Suo: () => Xp,
        TTD: () => Cr,
        TgZ: () => Tl,
        Udp: () => _d,
        VKq: () => Np,
        W1O: () => im,
        WFA: () => hd,
        WLB: () => Lp,
        X6Q: () => ED,
        XFs: () => Lt,
        Xpm: () => Dn,
        Xts: () => kc,
        Y36: () => ra,
        YKP: () => Ap,
        YNc: () => Qh,
        Yjl: () => ni,
        Yz7: () => pt,
        Z0I: () => ft,
        ZZ4: () => nu,
        _Bn: () => Mp,
        _UZ: () => cd,
        _Vd: () => Na,
        _c5: () => UD,
        _uU: () => Rf,
        aQg: () => iu,
        c2e: () => nD,
        cJS: () => yn,
        cg1: () => xd,
        d8E: () => Cd,
        dDg: () => mD,
        dqk: () => ze,
        eBb: () => Hg,
        eFA: () => Pm,
        eJc: () => Ud,
        ekj: () => vd,
        eoX: () => Tm,
        f3M: () => Te,
        g9A: () => Em,
        h0i: () => va,
        hGG: () => HD,
        hij: () => Ll,
        iGM: () => qp,
        ifc: () => Je,
        ip1: () => Dm,
        jDz: () => Ip,
        kL8: () => Xf,
        kcU: () => Hn,
        lG2: () => Gt,
        lcZ: () => $p,
        lqb: () => Ns,
        lri: () => Im,
        mCW: () => _l,
        n5z: () => Ea,
        n_E: () => jl,
        oAB: () => cr,
        oxw: () => lf,
        pB0: () => zg,
        q3G: () => Wi,
        qLn: () => Ba,
        qOj: () => id,
        qZA: () => Ol,
        qzn: () => Js,
        rWj: () => km,
        sBO: () => wD,
        s_b: () => $l,
        soG: () => Kl,
        tBr: () => No,
        tb: () => Rm,
        tp0: () => Zs,
        uIk: () => sd,
        vHH: () => Le,
        vpe: () => Zo,
        wAp: () => En,
        xp6: () => ch,
        ynx: () => Rl,
        z2F: () => Zl,
        z3N: () => os,
        zSh: () => Fc,
        zs3: () => Ls,
      });
      var s = C(7579),
        x = C(727),
        L = C(9751),
        oe = C(6451),
        te = C(3099);
      function ue(e) {
        for (let t in e) if (e[t] === ue) return t;
        throw Error('Could not find renamed property on target object.');
      }
      function ve(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function le(e) {
        if ('string' == typeof e) return e;
        if (Array.isArray(e)) return '[' + e.map(le).join(', ') + ']';
        if (null == e) return '' + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const t = e.toString();
        if (null == t) return '' + t;
        const n = t.indexOf('\n');
        return -1 === n ? t : t.substring(0, n);
      }
      function he(e, t) {
        return null == e || '' === e
          ? null === t
            ? ''
            : t
          : null == t || '' === t
          ? e
          : e + ' ' + t;
      }
      const ae = ue({ __forward_ref__: ue });
      function pe(e) {
        return (
          (e.__forward_ref__ = pe),
          (e.toString = function () {
            return le(this());
          }),
          e
        );
      }
      function ie(e) {
        return Ve(e) ? e() : e;
      }
      function Ve(e) {
        return (
          'function' == typeof e &&
          e.hasOwnProperty(ae) &&
          e.__forward_ref__ === pe
        );
      }
      function Ue(e) {
        return e && !!e.ɵproviders;
      }
      const vt = 'https://g.co/ng/security#xss';
      class Le extends Error {
        constructor(t, n) {
          super(_t(t, n)), (this.code = t);
        }
      }
      function _t(e, t) {
        return `NG0${Math.abs(e)}${t ? ': ' + t.trim() : ''}`;
      }
      function lt(e) {
        return 'string' == typeof e ? e : null == e ? '' : String(e);
      }
      function X(e, t) {
        throw new Le(-201, !1);
      }
      function Ne(e, t) {
        null == e &&
          (function Ge(e, t, n, i) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == i ? '' : ` [Expected=> ${n} ${i} ${t} <=Actual]`),
            );
          })(t, e, null, '!=');
      }
      function pt(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function yn(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function rt(e) {
        return Et(e, mn) || Et(e, Gn);
      }
      function ft(e) {
        return null !== rt(e);
      }
      function Et(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function ln(e) {
        return e && (e.hasOwnProperty(dn) || e.hasOwnProperty(Jt))
          ? e[dn]
          : null;
      }
      const mn = ue({ ɵprov: ue }),
        dn = ue({ ɵinj: ue }),
        Gn = ue({ ngInjectableDef: ue }),
        Jt = ue({ ngInjectorDef: ue });
      var Lt = (() => (
        ((Lt = Lt || {})[(Lt.Default = 0)] = 'Default'),
        (Lt[(Lt.Host = 1)] = 'Host'),
        (Lt[(Lt.Self = 2)] = 'Self'),
        (Lt[(Lt.SkipSelf = 4)] = 'SkipSelf'),
        (Lt[(Lt.Optional = 8)] = 'Optional'),
        Lt
      ))();
      let Pn;
      function z(e) {
        const t = Pn;
        return (Pn = e), t;
      }
      function ee(e, t, n) {
        const i = rt(e);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : n & Lt.Optional
          ? null
          : void 0 !== t
          ? t
          : void X(le(e));
      }
      const ze = (() =>
          (typeof globalThis < 'u' && globalThis) ||
          (typeof global < 'u' && global) ||
          (typeof window < 'u' && window) ||
          (typeof self < 'u' &&
            typeof WorkerGlobalScope < 'u' &&
            self instanceof WorkerGlobalScope &&
            self))(),
        ke = {},
        de = '__NG_DI_FLAG__',
        me = 'ngTempTokenPath',
        fe = 'ngTokenPath',
        qe = /\n/gm,
        Mt = '\u0275',
        Pt = '__source';
      let wn;
      function Ie(e) {
        const t = wn;
        return (wn = e), t;
      }
      function Dt(e, t = Lt.Default) {
        if (void 0 === wn) throw new Le(-203, !1);
        return null === wn
          ? ee(e, void 0, t)
          : wn.get(e, t & Lt.Optional ? null : void 0, t);
      }
      function et(e, t = Lt.Default) {
        return (
          (function ot() {
            return Pn;
          })() || Dt
        )(ie(e), t);
      }
      function Te(e, t = Lt.Default) {
        return et(e, F(t));
      }
      function F(e) {
        return typeof e > 'u' || 'number' == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function b(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const i = ie(e[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Le(900, !1);
            let o,
              a = Lt.Default;
            for (let u = 0; u < i.length; u++) {
              const v = i[u],
                E = G(v);
              'number' == typeof E
                ? -1 === E
                  ? (o = v.token)
                  : (a |= E)
                : (o = v);
            }
            t.push(et(o, a));
          } else t.push(et(i));
        }
        return t;
      }
      function M(e, t) {
        return (e[de] = t), (e.prototype[de] = t), e;
      }
      function G(e) {
        return e[de];
      }
      function Tt(e) {
        return { toString: e }.toString();
      }
      var Vt = (() => (
          ((Vt = Vt || {})[(Vt.OnPush = 0)] = 'OnPush'),
          (Vt[(Vt.Default = 1)] = 'Default'),
          Vt
        ))(),
        Je = (() => {
          return (
            ((e = Je || (Je = {}))[(e.Emulated = 0)] = 'Emulated'),
            (e[(e.None = 2)] = 'None'),
            (e[(e.ShadowDom = 3)] = 'ShadowDom'),
            Je
          );
          var e;
        })();
      const Ft = {},
        en = [],
        Oe = ue({ ɵcmp: ue }),
        be = ue({ ɵdir: ue }),
        Z = ue({ ɵpipe: ue }),
        Ee = ue({ ɵmod: ue }),
        dt = ue({ ɵfac: ue }),
        Bt = ue({ __NG_ELEMENT_ID__: ue });
      let qt = 0;
      function Dn(e) {
        return Tt(() => {
          const t = eo(e),
            n = {
              ...t,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === Vt.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              data: e.data || {},
              encapsulation: e.encapsulation || Je.Emulated,
              id: 'c' + qt++,
              styles: e.styles || en,
              _: null,
              schemas: e.schemas || null,
              tView: null,
            };
          Ni(n);
          const i = e.dependencies;
          return (n.directiveDefs = dr(i, !1)), (n.pipeDefs = dr(i, !0)), n;
        });
      }
      function wi(e) {
        return nn(e) || Kn(e);
      }
      function _i(e) {
        return null !== e;
      }
      function cr(e) {
        return Tt(() => ({
          type: e.type,
          bootstrap: e.bootstrap || en,
          declarations: e.declarations || en,
          imports: e.imports || en,
          exports: e.exports || en,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function kn(e, t) {
        if (null == e) return Ft;
        const n = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let o = e[i],
              a = o;
            Array.isArray(o) && ((a = o[1]), (o = o[0])),
              (n[o] = i),
              t && (t[o] = a);
          }
        return n;
      }
      function Gt(e) {
        return Tt(() => {
          const t = eo(e);
          return Ni(t), t;
        });
      }
      function ni(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function nn(e) {
        return e[Oe] || null;
      }
      function Kn(e) {
        return e[be] || null;
      }
      function qn(e) {
        return e[Z] || null;
      }
      function ai(e) {
        const t = nn(e) || Kn(e) || qn(e);
        return null !== t && t.standalone;
      }
      function Di(e, t) {
        const n = e[Ee] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${le(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function eo(e) {
        const t = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: t,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          selectors: e.selectors || en,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: kn(e.inputs, t),
          outputs: kn(e.outputs),
        };
      }
      function Ni(e) {
        e.features?.forEach(t => t(e));
      }
      function dr(e, t) {
        if (!e) return null;
        const n = t ? qn : wi;
        return () =>
          ('function' == typeof e ? e() : e).map(i => n(i)).filter(_i);
      }
      const ui = 0,
        jt = 1,
        hn = 2,
        Nn = 3,
        hi = 4,
        fi = 5,
        Qn = 6,
        li = 7,
        An = 8,
        Mi = 9,
        ri = 10,
        _n = 11,
        Ji = 12,
        zi = 13,
        ur = 14,
        Ai = 15,
        Xn = 16,
        er = 17,
        Si = 18,
        Li = 19,
        hr = 20,
        or = 21,
        jn = 22,
        Zi = 1,
        vr = 2,
        Ci = 7,
        Ln = 8,
        Ti = 9,
        J = 10;
      function Se(e) {
        return Array.isArray(e) && 'object' == typeof e[Zi];
      }
      function We(e) {
        return Array.isArray(e) && !0 === e[Zi];
      }
      function It(e) {
        return 0 != (4 & e.flags);
      }
      function kt(e) {
        return e.componentOffset > -1;
      }
      function un(e) {
        return 1 == (1 & e.flags);
      }
      function bn(e) {
        return !!e.template;
      }
      function On(e) {
        return 0 != (256 & e[hn]);
      }
      function $i(e, t) {
        return e.hasOwnProperty(dt) ? e[dt] : null;
      }
      class xi {
        constructor(t, n, i) {
          (this.previousValue = t),
            (this.currentValue = n),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Cr() {
        return xr;
      }
      function xr(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = $r), ro;
      }
      function ro() {
        const e = oo(this),
          t = e?.current;
        if (t) {
          const n = e.previous;
          if (n === Ft) e.previous = t;
          else for (let i in t) n[i] = t[i];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function $r(e, t, n, i) {
        const o = this.declaredInputs[n],
          a =
            oo(e) ||
            (function qo(e, t) {
              return (e[ar] = t);
            })(e, { previous: Ft, current: null }),
          u = a.current || (a.current = {}),
          v = a.previous,
          E = v[o];
        (u[o] = new xi(E && E.currentValue, t, v === Ft)), (e[i] = t);
      }
      Cr.ngInherit = !0;
      const ar = '__ngSimpleChanges__';
      function oo(e) {
        return e[ar] || null;
      }
      const Oi = function (e, t, n) {},
        mo = 'svg';
      function oi(e) {
        for (; Array.isArray(e); ) e = e[ui];
        return e;
      }
      function zn(e, t) {
        return oi(t[e]);
      }
      function ci(e, t) {
        return oi(t[e.index]);
      }
      function Wr(e, t) {
        return e.data[t];
      }
      function Er(e, t) {
        return e[t];
      }
      function Ei(e, t) {
        const n = t[e];
        return Se(n) ? n : n[ui];
      }
      function Br(e) {
        return 64 == (64 & e[hn]);
      }
      function Ri(e, t) {
        return null == t ? null : e[t];
      }
      function Vr(e) {
        e[Si] = 0;
      }
      function so(e, t) {
        e[fi] += t;
        let n = e,
          i = e[Nn];
        for (
          ;
          null !== i && ((1 === t && 1 === n[fi]) || (-1 === t && 0 === n[fi]));

        )
          (i[fi] += t), (n = i), (i = i[Nn]);
      }
      const vn = { lFrame: q(null), bindingsEnabled: !0 };
      function tt() {
        return vn.bindingsEnabled;
      }
      function ht() {
        return vn.lFrame.lView;
      }
      function Sn() {
        return vn.lFrame.tView;
      }
      function pr(e) {
        return (vn.lFrame.contextLView = e), e[An];
      }
      function go(e) {
        return (vn.lFrame.contextLView = null), e;
      }
      function Zn() {
        let e = To();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function To() {
        return vn.lFrame.currentTNode;
      }
      function Yi(e, t) {
        const n = vn.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function Zr() {
        return vn.lFrame.isParent;
      }
      function ao() {
        vn.lFrame.isParent = !1;
      }
      function Vi() {
        const e = vn.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function Ar() {
        return vn.lFrame.bindingIndex++;
      }
      function mr(e) {
        const t = vn.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function ds(e, t) {
        const n = vn.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), Ho(t);
      }
      function Ho(e) {
        vn.lFrame.currentDirectiveIndex = e;
      }
      function Qr(e) {
        const t = vn.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function lo() {
        return vn.lFrame.currentQueryIndex;
      }
      function B(e) {
        vn.lFrame.currentQueryIndex = e;
      }
      function h(e) {
        const t = e[jt];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[Qn] : null;
      }
      function p(e, t, n) {
        if (n & Lt.SkipSelf) {
          let o = t,
            a = e;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              n & Lt.Host ||
              ((o = h(a)), null === o || ((a = a[Ai]), 10 & o.type)));

          );
          if (null === o) return !1;
          (t = o), (e = a);
        }
        const i = (vn.lFrame = V());
        return (i.currentTNode = t), (i.lView = e), !0;
      }
      function S(e) {
        const t = V(),
          n = e[jt];
        (vn.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function V() {
        const e = vn.lFrame,
          t = null === e ? null : e.child;
        return null === t ? q(e) : t;
      }
      function q(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function xe() {
        const e = vn.lFrame;
        return (
          (vn.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const Me = xe;
      function Xe() {
        const e = xe();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function zt() {
        return vn.lFrame.selectedIndex;
      }
      function Cn(e) {
        vn.lFrame.selectedIndex = e;
      }
      function sn() {
        const e = vn.lFrame;
        return Wr(e.tView, e.selectedIndex);
      }
      function fn() {
        vn.lFrame.currentNamespace = mo;
      }
      function Hn() {
        !(function Jn() {
          vn.lFrame.currentNamespace = null;
        })();
      }
      function ii(e, t) {
        for (let n = t.directiveStart, i = t.directiveEnd; n < i; n++) {
          const a = e.data[n].type.prototype,
            {
              ngAfterContentInit: u,
              ngAfterContentChecked: v,
              ngAfterViewInit: E,
              ngAfterViewChecked: N,
              ngOnDestroy: $,
            } = a;
          u && (e.contentHooks ?? (e.contentHooks = [])).push(-n, u),
            v &&
              ((e.contentHooks ?? (e.contentHooks = [])).push(n, v),
              (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, v)),
            E && (e.viewHooks ?? (e.viewHooks = [])).push(-n, E),
            N &&
              ((e.viewHooks ?? (e.viewHooks = [])).push(n, N),
              (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, N)),
            null != $ && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, $);
        }
      }
      function Sr(e, t, n) {
        P(e, t, 3, n);
      }
      function Gi(e, t, n, i) {
        (3 & e[hn]) === n && P(e, t, n, i);
      }
      function y(e, t) {
        let n = e[hn];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[hn] = n));
      }
      function P(e, t, n, i) {
        const a = i ?? -1,
          u = t.length - 1;
        let v = 0;
        for (let E = void 0 !== i ? 65535 & e[Si] : 0; E < u; E++)
          if ('number' == typeof t[E + 1]) {
            if (((v = t[E]), null != i && v >= i)) break;
          } else
            t[E] < 0 && (e[Si] += 65536),
              (v < a || -1 == a) &&
                (A(e, n, t, E), (e[Si] = (4294901760 & e[Si]) + E + 2)),
              E++;
      }
      function A(e, t, n, i) {
        const o = n[i] < 0,
          a = n[i + 1],
          v = e[o ? -n[i] : n[i]];
        if (o) {
          if (e[hn] >> 11 < e[Si] >> 16 && (3 & e[hn]) === t) {
            (e[hn] += 2048), Oi(4, v, a);
            try {
              a.call(v);
            } finally {
              Oi(5, v, a);
            }
          }
        } else {
          Oi(4, v, a);
          try {
            a.call(v);
          } finally {
            Oi(5, v, a);
          }
        }
      }
      const j = -1;
      class ce {
        constructor(t, n, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = n),
            (this.injectImpl = i);
        }
      }
      function gn(e, t, n) {
        let i = 0;
        for (; i < n.length; ) {
          const o = n[i];
          if ('number' == typeof o) {
            if (0 !== o) break;
            i++;
            const a = n[i++],
              u = n[i++],
              v = n[i++];
            e.setAttribute(t, u, v, a);
          } else {
            const a = o,
              u = n[++i];
            mi(a) ? e.setProperty(t, a, u) : e.setAttribute(t, a, u), i++;
          }
        }
        return i;
      }
      function $n(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function mi(e) {
        return 64 === e.charCodeAt(0);
      }
      function si(e, t) {
        if (null !== t && 0 !== t.length)
          if (null === e || 0 === e.length) e = t.slice();
          else {
            let n = -1;
            for (let i = 0; i < t.length; i++) {
              const o = t[i];
              'number' == typeof o
                ? (n = o)
                : 0 === n ||
                  Bn(e, n, o, null, -1 === n || 2 === n ? t[++i] : null);
            }
          }
        return e;
      }
      function Bn(e, t, n, i, o) {
        let a = 0,
          u = e.length;
        if (-1 === t) u = -1;
        else
          for (; a < e.length; ) {
            const v = e[a++];
            if ('number' == typeof v) {
              if (v === t) {
                u = -1;
                break;
              }
              if (v > t) {
                u = a - 1;
                break;
              }
            }
          }
        for (; a < e.length; ) {
          const v = e[a];
          if ('number' == typeof v) break;
          if (v === n) {
            if (null === i) return void (null !== o && (e[a + 1] = o));
            if (i === e[a + 1]) return void (e[a + 2] = o);
          }
          a++, null !== i && a++, null !== o && a++;
        }
        -1 !== u && (e.splice(u, 0, t), (a = u + 1)),
          e.splice(a++, 0, n),
          null !== i && e.splice(a++, 0, i),
          null !== o && e.splice(a++, 0, o);
      }
      function Qi(e) {
        return e !== j;
      }
      function Ur(e) {
        return 32767 & e;
      }
      function tr(e, t) {
        let n = (function yi(e) {
            return e >> 16;
          })(e),
          i = t;
        for (; n > 0; ) (i = i[Ai]), n--;
        return i;
      }
      let nr = !0;
      function _o(e) {
        const t = nr;
        return (nr = e), t;
      }
      const Da = 255,
        hs = 5;
      let Ca = 0;
      const co = {};
      function Cs(e, t) {
        const n = zs(e, t);
        if (-1 !== n) return n;
        const i = t[jt];
        i.firstCreatePass &&
          ((e.injectorIndex = t.length),
          xs(i.data, e),
          xs(t, null),
          xs(i.blueprint, null));
        const o = Es(e, t),
          a = e.injectorIndex;
        if (Qi(o)) {
          const u = Ur(o),
            v = tr(o, t),
            E = v[jt].data;
          for (let N = 0; N < 8; N++) t[a + N] = v[u + N] | E[u + N];
        }
        return (t[a + 8] = o), a;
      }
      function xs(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function zs(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Es(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          i = null,
          o = t;
        for (; null !== o; ) {
          if (((i = ps(o)), null === i)) return j;
          if ((n++, (o = o[Ai]), -1 !== i.injectorIndex))
            return i.injectorIndex | (n << 16);
        }
        return j;
      }
      function Xi(e, t, n) {
        !(function js(e, t, n) {
          let i;
          'string' == typeof n
            ? (i = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(Bt) && (i = n[Bt]),
            null == i && (i = n[Bt] = Ca++);
          const o = i & Da;
          t.data[e + (o >> hs)] |= 1 << o;
        })(e, t, n);
      }
      function Xo(e, t, n) {
        if (n & Lt.Optional || void 0 !== e) return e;
        X();
      }
      function $s(e, t, n, i) {
        if (
          (n & Lt.Optional && void 0 === i && (i = null),
          !(n & (Lt.Self | Lt.Host)))
        ) {
          const o = e[Mi],
            a = z(void 0);
          try {
            return o ? o.get(t, i, n & Lt.Optional) : ee(t, i, n & Lt.Optional);
          } finally {
            z(a);
          }
        }
        return Xo(i, 0, n);
      }
      function Ys(e, t, n, i = Lt.Default, o) {
        if (null !== e) {
          if (1024 & t[hn]) {
            const u = (function vo(e, t, n, i, o) {
              let a = e,
                u = t;
              for (
                ;
                null !== a && null !== u && 1024 & u[hn] && !(256 & u[hn]);

              ) {
                const v = ws(a, u, n, i | Lt.Self, co);
                if (v !== co) return v;
                let E = a.parent;
                if (!E) {
                  const N = u[or];
                  if (N) {
                    const $ = N.get(n, co, i);
                    if ($ !== co) return $;
                  }
                  (E = ps(u)), (u = u[Ai]);
                }
                a = E;
              }
              return o;
            })(e, t, n, i, co);
            if (u !== co) return u;
          }
          const a = ws(e, t, n, i, co);
          if (a !== co) return a;
        }
        return $s(t, n, i, o);
      }
      function ws(e, t, n, i, o) {
        const a = (function Gs(e) {
          if ('string' == typeof e) return e.charCodeAt(0) || 0;
          const t = e.hasOwnProperty(Bt) ? e[Bt] : void 0;
          return 'number' == typeof t ? (t >= 0 ? t & Da : zo) : t;
        })(n);
        if ('function' == typeof a) {
          if (!p(t, e, i)) return i & Lt.Host ? Xo(o, 0, i) : $s(t, n, i, o);
          try {
            const u = a(i);
            if (null != u || i & Lt.Optional) return u;
            X();
          } finally {
            Me();
          }
        } else if ('number' == typeof a) {
          let u = null,
            v = zs(e, t),
            E = j,
            N = i & Lt.Host ? t[Xn][Qn] : null;
          for (
            (-1 === v || i & Lt.SkipSelf) &&
            ((E = -1 === v ? Es(e, t) : t[v + 8]),
            E !== j && ir(i, !1)
              ? ((u = t[jt]), (v = Ur(E)), (t = tr(E, t)))
              : (v = -1));
            -1 !== v;

          ) {
            const $ = t[jt];
            if (Ws(a, v, $.data)) {
              const re = Ja(v, t, n, u, i, N);
              if (re !== co) return re;
            }
            (E = t[v + 8]),
              E !== j && ir(i, t[jt].data[v + 8] === N) && Ws(a, v, t)
                ? ((u = $), (v = Ur(E)), (t = tr(E, t)))
                : (v = -1);
          }
        }
        return o;
      }
      function Ja(e, t, n, i, o, a) {
        const u = t[jt],
          v = u.data[e + 8],
          $ = Ms(
            v,
            u,
            n,
            null == i ? kt(v) && nr : i != u && 0 != (3 & v.type),
            o & Lt.Host && a === v,
          );
        return null !== $ ? jo(t, u, $, v) : co;
      }
      function Ms(e, t, n, i, o) {
        const a = e.providerIndexes,
          u = t.data,
          v = 1048575 & a,
          E = e.directiveStart,
          $ = a >> 20,
          Fe = o ? v + $ : e.directiveEnd;
        for (let Ze = i ? v : v + $; Ze < Fe; Ze++) {
          const Ct = u[Ze];
          if ((Ze < E && n === Ct) || (Ze >= E && Ct.type === n)) return Ze;
        }
        if (o) {
          const Ze = u[E];
          if (Ze && bn(Ze) && Ze.type === n) return E;
        }
        return null;
      }
      function jo(e, t, n, i) {
        let o = e[n];
        const a = t.data;
        if (
          (function it(e) {
            return e instanceof ce;
          })(o)
        ) {
          const u = o;
          u.resolving &&
            (function W(e, t) {
              const n = t ? `. Dependency path: ${t.join(' > ')} > ${e}` : '';
              throw new Le(
                -200,
                `Circular dependency in DI detected for ${e}${n}`,
              );
            })(
              (function bt(e) {
                return 'function' == typeof e
                  ? e.name || e.toString()
                  : 'object' == typeof e &&
                    null != e &&
                    'function' == typeof e.type
                  ? e.type.name || e.type.toString()
                  : lt(e);
              })(a[n]),
            );
          const v = _o(u.canSeeViewProviders);
          u.resolving = !0;
          const E = u.injectImpl ? z(u.injectImpl) : null;
          p(e, i, Lt.Default);
          try {
            (o = e[n] = u.factory(void 0, a, e, i)),
              t.firstCreatePass &&
                n >= i.directiveStart &&
                (function Ui(e, t, n) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: a,
                  } = t.type.prototype;
                  if (i) {
                    const u = xr(t);
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, u),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, u);
                  }
                  o &&
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o),
                    a &&
                      ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, a),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, a));
                })(n, a[n], t);
          } finally {
            null !== E && z(E), _o(v), (u.resolving = !1), Me();
          }
        }
        return o;
      }
      function Ws(e, t, n) {
        return !!(n[t + (e >> hs)] & (1 << e));
      }
      function ir(e, t) {
        return !(e & Lt.Self || (e & Lt.Host && t));
      }
      class Ro {
        constructor(t, n) {
          (this._tNode = t), (this._lView = n);
        }
        get(t, n, i) {
          return Ys(this._tNode, this._lView, t, F(i), n);
        }
      }
      function zo() {
        return new Ro(Zn(), ht());
      }
      function Ea(e) {
        return Tt(() => {
          const t = e.prototype.constructor,
            n = t[dt] || fs(t),
            i = Object.prototype;
          let o = Object.getPrototypeOf(e.prototype).constructor;
          for (; o && o !== i; ) {
            const a = o[dt] || fs(o);
            if (a && a !== n) return a;
            o = Object.getPrototypeOf(o);
          }
          return a => new a();
        });
      }
      function fs(e) {
        return Ve(e)
          ? () => {
              const t = fs(ie(e));
              return t && t();
            }
          : $i(e);
      }
      function ps(e) {
        const t = e[jt],
          n = t.type;
        return 2 === n ? t.declTNode : 1 === n ? e[Qn] : null;
      }
      function As(e) {
        return (function xa(e, t) {
          if ('class' === t) return e.classes;
          if ('style' === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const i = n.length;
            let o = 0;
            for (; o < i; ) {
              const a = n[o];
              if ($n(a)) break;
              if (0 === a) o += 2;
              else if ('number' == typeof a)
                for (o++; o < i && 'string' == typeof n[o]; ) o++;
              else {
                if (a === t) return n[o + 1];
                o += 2;
              }
            }
          }
          return null;
        })(Zn(), e);
      }
      const ms = '__parameters__';
      function $o(e, t, n) {
        return Tt(() => {
          const i = (function es(e) {
            return function (...n) {
              if (e) {
                const i = e(...n);
                for (const o in i) this[o] = i[o];
              }
            };
          })(t);
          function o(...a) {
            if (this instanceof o) return i.apply(this, a), this;
            const u = new o(...a);
            return (v.annotation = u), v;
            function v(E, N, $) {
              const re = E.hasOwnProperty(ms)
                ? E[ms]
                : Object.defineProperty(E, ms, { value: [] })[ms];
              for (; re.length <= $; ) re.push(null);
              return (re[$] = re[$] || []).push(u), E;
            }
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      class ti {
        constructor(t, n) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof n
              ? (this.__NG_ELEMENT_ID__ = n)
              : void 0 !== n &&
                (this.ɵprov = pt({
                  token: this,
                  providedIn: n.providedIn || 'root',
                  factory: n.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function bo(e, t) {
        e.forEach(n => (Array.isArray(n) ? bo(n, t) : t(n)));
      }
      function Ks(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function is(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function f(e, t) {
        const n = [];
        for (let i = 0; i < e; i++) n.push(t);
        return n;
      }
      function U(e, t, n) {
        let i = Be(e, t);
        return (
          i >= 0
            ? (e[1 | i] = n)
            : ((i = ~i),
              (function D(e, t, n, i) {
                let o = e.length;
                if (o == t) e.push(n, i);
                else if (1 === o) e.push(i, e[0]), (e[0] = n);
                else {
                  for (o--, e.push(e[o - 1], e[o]); o > t; )
                    (e[o] = e[o - 2]), o--;
                  (e[t] = n), (e[t + 1] = i);
                }
              })(e, i, t, n)),
          i
        );
      }
      function K(e, t) {
        const n = Be(e, t);
        if (n >= 0) return e[1 | n];
      }
      function Be(e, t) {
        return (function Qt(e, t, n) {
          let i = 0,
            o = e.length >> n;
          for (; o !== i; ) {
            const a = i + ((o - i) >> 1),
              u = e[a << n];
            if (t === u) return a << n;
            u > t ? (o = a) : (i = a + 1);
          }
          return ~(o << n);
        })(e, t, 1);
      }
      const No = M(
          $o('Inject', e => ({ token: e })),
          -1,
        ),
        rs = M($o('Optional'), 8),
        Zs = M($o('SkipSelf'), 4);
      var Xr = (() => (
        ((Xr = Xr || {})[(Xr.Important = 1)] = 'Important'),
        (Xr[(Xr.DashCase = 2)] = 'DashCase'),
        Xr
      ))();
      const cc = new Map();
      let tg = 0;
      const uc = '__ngContext__';
      function kr(e, t) {
        Se(t)
          ? ((e[uc] = t[hr]),
            (function ig(e) {
              cc.set(e[hr], e);
            })(t))
          : (e[uc] = t);
      }
      let hc;
      function fc(e, t) {
        return hc(e, t);
      }
      function Oa(e) {
        const t = e[Nn];
        return We(t) ? t[Nn] : t;
      }
      function pc(e) {
        return pu(e[zi]);
      }
      function mc(e) {
        return pu(e[hi]);
      }
      function pu(e) {
        for (; null !== e && !We(e); ) e = e[hi];
        return e;
      }
      function Qs(e, t, n, i, o) {
        if (null != i) {
          let a,
            u = !1;
          We(i) ? (a = i) : Se(i) && ((u = !0), (i = i[ui]));
          const v = oi(i);
          0 === e && null !== n
            ? null == o
              ? yu(t, n, v)
              : Rs(t, n, v, o || null, !0)
            : 1 === e && null !== n
            ? Rs(t, n, v, o || null, !0)
            : 2 === e
            ? (function Cc(e, t, n) {
                const i = hl(e, t);
                i &&
                  (function xg(e, t, n, i) {
                    e.removeChild(t, n, i);
                  })(e, i, t, n);
              })(t, v, u)
            : 3 === e && t.destroyNode(v),
            null != a &&
              (function Mg(e, t, n, i, o) {
                const a = n[Ci];
                a !== oi(n) && Qs(t, e, i, a, o);
                for (let v = J; v < n.length; v++) {
                  const E = n[v];
                  Ra(E[jt], E, e, t, i, a);
                }
              })(t, e, a, n, o);
        }
      }
      function _c(e, t, n) {
        return e.createElement(t, n);
      }
      function gu(e, t) {
        const n = e[Ti],
          i = n.indexOf(t),
          o = t[Nn];
        512 & t[hn] && ((t[hn] &= -513), so(o, -1)), n.splice(i, 1);
      }
      function vc(e, t) {
        if (e.length <= J) return;
        const n = J + t,
          i = e[n];
        if (i) {
          const o = i[er];
          null !== o && o !== e && gu(o, i), t > 0 && (e[n - 1][hi] = i[hi]);
          const a = is(e, J + t);
          !(function mg(e, t) {
            Ra(e, t, t[_n], 2, null, null), (t[ui] = null), (t[Qn] = null);
          })(i[jt], i);
          const u = a[Li];
          null !== u && u.detachView(a[jt]),
            (i[Nn] = null),
            (i[hi] = null),
            (i[hn] &= -65);
        }
        return i;
      }
      function _u(e, t) {
        if (!(128 & t[hn])) {
          const n = t[_n];
          n.destroyNode && Ra(e, t, n, 3, null, null),
            (function vg(e) {
              let t = e[zi];
              if (!t) return bc(e[jt], e);
              for (; t; ) {
                let n = null;
                if (Se(t)) n = t[zi];
                else {
                  const i = t[J];
                  i && (n = i);
                }
                if (!n) {
                  for (; t && !t[hi] && t !== e; )
                    Se(t) && bc(t[jt], t), (t = t[Nn]);
                  null === t && (t = e),
                    Se(t) && bc(t[jt], t),
                    (n = t && t[hi]);
                }
                t = n;
              }
            })(t);
        }
      }
      function bc(e, t) {
        if (!(128 & t[hn])) {
          (t[hn] &= -65),
            (t[hn] |= 128),
            (function Cg(e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const o = t[n[i]];
                  if (!(o instanceof ce)) {
                    const a = n[i + 1];
                    if (Array.isArray(a))
                      for (let u = 0; u < a.length; u += 2) {
                        const v = o[a[u]],
                          E = a[u + 1];
                        Oi(4, v, E);
                        try {
                          E.call(v);
                        } finally {
                          Oi(5, v, E);
                        }
                      }
                    else {
                      Oi(4, o, a);
                      try {
                        a.call(o);
                      } finally {
                        Oi(5, o, a);
                      }
                    }
                  }
                }
            })(e, t),
            (function Dg(e, t) {
              const n = e.cleanup,
                i = t[li];
              let o = -1;
              if (null !== n)
                for (let a = 0; a < n.length - 1; a += 2)
                  if ('string' == typeof n[a]) {
                    const u = n[a + 3];
                    u >= 0 ? i[(o = u)]() : i[(o = -u)].unsubscribe(), (a += 2);
                  } else {
                    const u = i[(o = n[a + 1])];
                    n[a].call(u);
                  }
              if (null !== i) {
                for (let a = o + 1; a < i.length; a++) (0, i[a])();
                t[li] = null;
              }
            })(e, t),
            1 === t[jt].type && t[_n].destroy();
          const n = t[er];
          if (null !== n && We(t[Nn])) {
            n !== t[Nn] && gu(n, t);
            const i = t[Li];
            null !== i && i.detachView(e);
          }
          !(function rg(e) {
            cc.delete(e[hr]);
          })(t);
        }
      }
      function vu(e, t, n) {
        return (function bu(e, t, n) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return n[ui];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: a } = e.data[i.directiveStart + o];
              if (a === Je.None || a === Je.Emulated) return null;
            }
            return ci(i, n);
          }
        })(e, t.parent, n);
      }
      function Rs(e, t, n, i, o) {
        e.insertBefore(t, n, i, o);
      }
      function yu(e, t, n) {
        e.appendChild(t, n);
      }
      function Du(e, t, n, i, o) {
        null !== i ? Rs(e, t, n, i, o) : yu(e, t, n);
      }
      function hl(e, t) {
        return e.parentNode(t);
      }
      function Cu(e, t, n) {
        return Eu(e, t, n);
      }
      let yc,
        ml,
        wc,
        gl,
        Eu = function xu(e, t, n) {
          return 40 & e.type ? ci(e, n) : null;
        };
      function fl(e, t, n, i) {
        const o = vu(e, i, t),
          a = t[_n],
          v = Cu(i.parent || t[Qn], i, t);
        if (null != o)
          if (Array.isArray(n))
            for (let E = 0; E < n.length; E++) Du(a, o, n[E], v, !1);
          else Du(a, o, n, v, !1);
        void 0 !== yc && yc(a, i, t, n, o);
      }
      function pl(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return ci(t, e);
          if (4 & n) return Dc(-1, e[t.index]);
          if (8 & n) {
            const i = t.child;
            if (null !== i) return pl(e, i);
            {
              const o = e[t.index];
              return We(o) ? Dc(-1, o) : oi(o);
            }
          }
          if (32 & n) return fc(t, e)() || oi(e[t.index]);
          {
            const i = Mu(e, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : pl(Oa(e[Xn]), i)
              : pl(e, t.next);
          }
        }
        return null;
      }
      function Mu(e, t) {
        return null !== t ? e[Xn][Qn].projection[t.projection] : null;
      }
      function Dc(e, t) {
        const n = J + e + 1;
        if (n < t.length) {
          const i = t[n],
            o = i[jt].firstChild;
          if (null !== o) return pl(i, o);
        }
        return t[Ci];
      }
      function xc(e, t, n, i, o, a, u) {
        for (; null != n; ) {
          const v = i[n.index],
            E = n.type;
          if (
            (u && 0 === t && (v && kr(oi(v), i), (n.flags |= 2)),
            32 != (32 & n.flags))
          )
            if (8 & E) xc(e, t, n.child, i, o, a, !1), Qs(t, e, o, v, a);
            else if (32 & E) {
              const N = fc(n, i);
              let $;
              for (; ($ = N()); ) Qs(t, e, o, $, a);
              Qs(t, e, o, v, a);
            } else 16 & E ? Au(e, t, i, n, o, a) : Qs(t, e, o, v, a);
          n = u ? n.projectionNext : n.next;
        }
      }
      function Ra(e, t, n, i, o, a) {
        xc(n, i, e.firstChild, t, o, a, !1);
      }
      function Au(e, t, n, i, o, a) {
        const u = n[Xn],
          E = u[Qn].projection[i.projection];
        if (Array.isArray(E))
          for (let N = 0; N < E.length; N++) Qs(t, e, o, E[N], a);
        else xc(e, t, E, u[Nn], o, a, !0);
      }
      function Su(e, t, n) {
        '' === n
          ? e.removeAttribute(t, 'class')
          : e.setAttribute(t, 'class', n);
      }
      function Iu(e, t, n) {
        const { mergedAttrs: i, classes: o, styles: a } = n;
        null !== i && gn(e, t, i),
          null !== o && Su(e, t, o),
          null !== a &&
            (function Sg(e, t, n) {
              e.setAttribute(t, 'style', n);
            })(e, t, a);
      }
      function Xs(e) {
        return (
          (function Ec() {
            if (void 0 === ml && ((ml = null), ze.trustedTypes))
              try {
                ml = ze.trustedTypes.createPolicy('angular', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return ml;
          })()?.createHTML(e) || e
        );
      }
      function Og(e) {
        wc = e;
      }
      function Ru(e) {
        return (
          (function Mc() {
            if (void 0 === gl && ((gl = null), ze.trustedTypes))
              try {
                gl = ze.trustedTypes.createPolicy('angular#unsafe-bypass', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return gl;
          })()?.createScriptURL(e) || e
        );
      }
      class Fs {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${vt})`;
        }
      }
      class Rg extends Fs {
        getTypeName() {
          return 'HTML';
        }
      }
      class Fg extends Fs {
        getTypeName() {
          return 'Style';
        }
      }
      class Pg extends Fs {
        getTypeName() {
          return 'Script';
        }
      }
      class Ng extends Fs {
        getTypeName() {
          return 'URL';
        }
      }
      class Lg extends Fs {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function os(e) {
        return e instanceof Fs ? e.changingThisBreaksApplicationSecurity : e;
      }
      function Js(e, t) {
        const n = (function Bg(e) {
          return (e instanceof Fs && e.getTypeName()) || null;
        })(e);
        if (null != n && n !== t) {
          if ('ResourceURL' === n && 'URL' === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${n} (see ${vt})`);
        }
        return n === t;
      }
      function Vg(e) {
        return new Rg(e);
      }
      function Ug(e) {
        return new Fg(e);
      }
      function Hg(e) {
        return new Pg(e);
      }
      function jg(e) {
        return new Ng(e);
      }
      function zg(e) {
        return new Lg(e);
      }
      class $g {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const n = new window.DOMParser().parseFromString(
              Xs(t),
              'text/html',
            ).body;
            return null === n
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (n.removeChild(n.firstChild), n);
          } catch {
            return null;
          }
        }
      }
      class Yg {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                'sanitization-inert',
              ));
        }
        getInertBodyElement(t) {
          const n = this.inertDocument.createElement('template');
          return (n.innerHTML = Xs(t)), n;
        }
      }
      const Wg = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function _l(e) {
        return (e = String(e)).match(Wg) ? e : 'unsafe:' + e;
      }
      function ss(e) {
        const t = {};
        for (const n of e.split(',')) t[n] = !0;
        return t;
      }
      function Fa(...e) {
        const t = {};
        for (const n of e)
          for (const i in n) n.hasOwnProperty(i) && (t[i] = !0);
        return t;
      }
      const Pu = ss('area,br,col,hr,img,wbr'),
        Nu = ss('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Lu = ss('rp,rt'),
        Ac = Fa(
          Pu,
          Fa(
            Nu,
            ss(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul',
            ),
          ),
          Fa(
            Lu,
            ss(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video',
            ),
          ),
          Fa(Lu, Nu),
        ),
        Sc = ss('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        Bu = Fa(
          Sc,
          ss(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width',
          ),
          ss(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext',
          ),
        ),
        Kg = ss('script,style,template');
      class Zg {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let n = t.firstChild,
            i = !0;
          for (; n; )
            if (
              (n.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(n))
                : n.nodeType === Node.TEXT_NODE
                ? this.chars(n.nodeValue)
                : (this.sanitizedSomething = !0),
              i && n.firstChild)
            )
              n = n.firstChild;
            else
              for (; n; ) {
                n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                let o = this.checkClobberedElement(n, n.nextSibling);
                if (o) {
                  n = o;
                  break;
                }
                n = this.checkClobberedElement(n, n.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const n = t.nodeName.toLowerCase();
          if (!Ac.hasOwnProperty(n))
            return (this.sanitizedSomething = !0), !Kg.hasOwnProperty(n);
          this.buf.push('<'), this.buf.push(n);
          const i = t.attributes;
          for (let o = 0; o < i.length; o++) {
            const a = i.item(o),
              u = a.name,
              v = u.toLowerCase();
            if (!Bu.hasOwnProperty(v)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let E = a.value;
            Sc[v] && (E = _l(E)), this.buf.push(' ', u, '="', Vu(E), '"');
          }
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const n = t.nodeName.toLowerCase();
          Ac.hasOwnProperty(n) &&
            !Pu.hasOwnProperty(n) &&
            (this.buf.push('</'), this.buf.push(n), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(Vu(t));
        }
        checkClobberedElement(t, n) {
          if (
            n &&
            (t.compareDocumentPosition(n) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`,
            );
          return n;
        }
      }
      const qg = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Qg = /([^\#-~ |!])/g;
      function Vu(e) {
        return e
          .replace(/&/g, '&amp;')
          .replace(qg, function (t) {
            return (
              '&#' +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ';'
            );
          })
          .replace(Qg, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let vl;
      function Uu(e, t) {
        let n = null;
        try {
          vl =
            vl ||
            (function Fu(e) {
              const t = new Yg(e);
              return (function Gg() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Xs(''),
                    'text/html',
                  );
                } catch {
                  return !1;
                }
              })()
                ? new $g(t)
                : t;
            })(e);
          let i = t ? String(t) : '';
          n = vl.getInertBodyElement(i);
          let o = 5,
            a = i;
          do {
            if (0 === o)
              throw new Error(
                'Failed to sanitize html because the input is unstable',
              );
            o--, (i = a), (a = n.innerHTML), (n = vl.getInertBodyElement(i));
          } while (i !== a);
          return Xs(new Zg().sanitizeChildren(Ic(n) || n));
        } finally {
          if (n) {
            const i = Ic(n) || n;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function Ic(e) {
        return 'content' in e &&
          (function Xg(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Wi = (() => (
        ((Wi = Wi || {})[(Wi.NONE = 0)] = 'NONE'),
        (Wi[(Wi.HTML = 1)] = 'HTML'),
        (Wi[(Wi.STYLE = 2)] = 'STYLE'),
        (Wi[(Wi.SCRIPT = 3)] = 'SCRIPT'),
        (Wi[(Wi.URL = 4)] = 'URL'),
        (Wi[(Wi.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        Wi
      ))();
      function Hu(e) {
        const t = Pa();
        return t
          ? t.sanitize(Wi.URL, e) || ''
          : Js(e, 'URL')
          ? os(e)
          : _l(lt(e));
      }
      function ju(e) {
        const t = Pa();
        if (t) return Ru(t.sanitize(Wi.RESOURCE_URL, e) || '');
        if (Js(e, 'ResourceURL')) return Ru(os(e));
        throw new Le(904, !1);
      }
      function zu(e, t, n) {
        return (function r_(e, t) {
          return ('src' === t &&
            ('embed' === e ||
              'frame' === e ||
              'iframe' === e ||
              'media' === e ||
              'script' === e)) ||
            ('href' === t && ('base' === e || 'link' === e))
            ? ju
            : Hu;
        })(
          t,
          n,
        )(e);
      }
      function Pa() {
        const e = ht();
        return e && e[Ji];
      }
      const kc = new ti('ENVIRONMENT_INITIALIZER'),
        $u = new ti('INJECTOR', -1),
        Yu = new ti('INJECTOR_DEF_TYPES');
      class Gu {
        get(t, n = ke) {
          if (n === ke) {
            const i = new Error(`NullInjectorError: No provider for ${le(t)}!`);
            throw ((i.name = 'NullInjectorError'), i);
          }
          return n;
        }
      }
      function o_(e) {
        return { ɵproviders: e };
      }
      function s_(...e) {
        return { ɵproviders: Wu(0, e), ɵfromNgModule: !0 };
      }
      function Wu(e, ...t) {
        const n = [],
          i = new Set();
        let o;
        return (
          bo(t, a => {
            const u = a;
            Tc(u, n, [], i) && (o || (o = []), o.push(u));
          }),
          void 0 !== o && Ku(o, n),
          n
        );
      }
      function Ku(e, t) {
        for (let n = 0; n < e.length; n++) {
          const { providers: o } = e[n];
          Oc(o, a => {
            t.push(a);
          });
        }
      }
      function Tc(e, t, n, i) {
        if (!(e = ie(e))) return !1;
        let o = null,
          a = ln(e);
        const u = !a && nn(e);
        if (a || u) {
          if (u && !u.standalone) return !1;
          o = e;
        } else {
          const E = e.ngModule;
          if (((a = ln(E)), !a)) return !1;
          o = E;
        }
        const v = i.has(o);
        if (u) {
          if (v) return !1;
          if ((i.add(o), u.dependencies)) {
            const E =
              'function' == typeof u.dependencies
                ? u.dependencies()
                : u.dependencies;
            for (const N of E) Tc(N, t, n, i);
          }
        } else {
          if (!a) return !1;
          {
            if (null != a.imports && !v) {
              let N;
              i.add(o);
              try {
                bo(a.imports, $ => {
                  Tc($, t, n, i) && (N || (N = []), N.push($));
                });
              } finally {
              }
              void 0 !== N && Ku(N, t);
            }
            if (!v) {
              const N = $i(o) || (() => new o());
              t.push(
                { provide: o, useFactory: N, deps: en },
                { provide: Yu, useValue: o, multi: !0 },
                { provide: kc, useValue: () => et(o), multi: !0 },
              );
            }
            const E = a.providers;
            null == E ||
              v ||
              Oc(E, $ => {
                t.push($);
              });
          }
        }
        return o !== e && void 0 !== e.providers;
      }
      function Oc(e, t) {
        for (let n of e)
          Ue(n) && (n = n.ɵproviders), Array.isArray(n) ? Oc(n, t) : t(n);
      }
      const a_ = ue({ provide: String, useValue: ue });
      function Rc(e) {
        return null !== e && 'object' == typeof e && a_ in e;
      }
      function Ps(e) {
        return 'function' == typeof e;
      }
      const Fc = new ti('Set Injector scope.'),
        bl = {},
        c_ = {};
      let Pc;
      function yl() {
        return void 0 === Pc && (Pc = new Gu()), Pc;
      }
      class Ns {}
      class Qu extends Ns {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, n, i, o) {
          super(),
            (this.parent = n),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Lc(t, u => this.processProvider(u)),
            this.records.set($u, ea(void 0, this)),
            o.has('environment') && this.records.set(Ns, ea(void 0, this));
          const a = this.records.get(Fc);
          null != a && 'string' == typeof a.value && this.scopes.add(a.value),
            (this.injectorDefTypes = new Set(this.get(Yu.multi, en, Lt.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const n = Ie(this),
            i = z(void 0);
          try {
            return t();
          } finally {
            Ie(n), z(i);
          }
        }
        get(t, n = ke, i = Lt.Default) {
          this.assertNotDestroyed(), (i = F(i));
          const o = Ie(this),
            a = z(void 0);
          try {
            if (!(i & Lt.SkipSelf)) {
              let v = this.records.get(t);
              if (void 0 === v) {
                const E =
                  (function p_(e) {
                    return (
                      'function' == typeof e ||
                      ('object' == typeof e && e instanceof ti)
                    );
                  })(t) && rt(t);
                (v = E && this.injectableDefInScope(E) ? ea(Nc(t), bl) : null),
                  this.records.set(t, v);
              }
              if (null != v) return this.hydrate(t, v);
            }
            return (i & Lt.Self ? yl() : this.parent).get(
              t,
              (n = i & Lt.Optional && n === ke ? null : n),
            );
          } catch (u) {
            if ('NullInjectorError' === u.name) {
              if (((u[me] = u[me] || []).unshift(le(t)), o)) throw u;
              return (function Q(e, t, n, i) {
                const o = e[me];
                throw (
                  (t[Pt] && o.unshift(t[Pt]),
                  (e.message = (function Qe(e, t, n, i = null) {
                    e =
                      e && '\n' === e.charAt(0) && e.charAt(1) == Mt
                        ? e.slice(2)
                        : e;
                    let o = le(t);
                    if (Array.isArray(t)) o = t.map(le).join(' -> ');
                    else if ('object' == typeof t) {
                      let a = [];
                      for (let u in t)
                        if (t.hasOwnProperty(u)) {
                          let v = t[u];
                          a.push(
                            u +
                              ':' +
                              ('string' == typeof v
                                ? JSON.stringify(v)
                                : le(v)),
                          );
                        }
                      o = `{${a.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${o}]: ${e.replace(
                      qe,
                      '\n  ',
                    )}`;
                  })('\n' + e.message, o, n, i)),
                  (e[fe] = o),
                  (e[me] = null),
                  e)
                );
              })(u, t, 'R3InjectorError', this.source);
            }
            throw u;
          } finally {
            z(a), Ie(o);
          }
        }
        resolveInjectorInitializers() {
          const t = Ie(this),
            n = z(void 0);
          try {
            const i = this.get(kc.multi, en, Lt.Self);
            for (const o of i) o();
          } finally {
            Ie(t), z(n);
          }
        }
        toString() {
          const t = [],
            n = this.records;
          for (const i of n.keys()) t.push(le(i));
          return `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Le(205, !1);
        }
        processProvider(t) {
          let n = Ps((t = ie(t))) ? t : ie(t && t.provide);
          const i = (function u_(e) {
            return Rc(e) ? ea(void 0, e.useValue) : ea(Xu(e), bl);
          })(t);
          if (Ps(t) || !0 !== t.multi) this.records.get(n);
          else {
            let o = this.records.get(n);
            o ||
              ((o = ea(void 0, bl, !0)),
              (o.factory = () => b(o.multi)),
              this.records.set(n, o)),
              (n = t),
              o.multi.push(t);
          }
          this.records.set(n, i);
        }
        hydrate(t, n) {
          return (
            n.value === bl && ((n.value = c_), (n.value = n.factory())),
            'object' == typeof n.value &&
              n.value &&
              (function f_(e) {
                return (
                  null !== e &&
                  'object' == typeof e &&
                  'function' == typeof e.ngOnDestroy
                );
              })(n.value) &&
              this._ngOnDestroyHooks.add(n.value),
            n.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const n = ie(t.providedIn);
          return 'string' == typeof n
            ? 'any' === n || this.scopes.has(n)
            : this.injectorDefTypes.has(n);
        }
      }
      function Nc(e) {
        const t = rt(e),
          n = null !== t ? t.factory : $i(e);
        if (null !== n) return n;
        if (e instanceof ti) throw new Le(204, !1);
        if (e instanceof Function)
          return (function d_(e) {
            const t = e.length;
            if (t > 0) throw (f(t, '?'), new Le(204, !1));
            const n = (function mt(e) {
              return (e && (e[mn] || e[Gn])) || null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Le(204, !1);
      }
      function Xu(e, t, n) {
        let i;
        if (Ps(e)) {
          const o = ie(e);
          return $i(o) || Nc(o);
        }
        if (Rc(e)) i = () => ie(e.useValue);
        else if (
          (function qu(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          i = () => e.useFactory(...b(e.deps || []));
        else if (
          (function Zu(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => et(ie(e.useExisting));
        else {
          const o = ie(e && (e.useClass || e.provide));
          if (
            !(function h_(e) {
              return !!e.deps;
            })(e)
          )
            return $i(o) || Nc(o);
          i = () => new o(...b(e.deps));
        }
        return i;
      }
      function ea(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function Lc(e, t) {
        for (const n of e)
          Array.isArray(n) ? Lc(n, t) : n && Ue(n) ? Lc(n.ɵproviders, t) : t(n);
      }
      class m_ {}
      class Ju {}
      class __ {
        resolveComponentFactory(t) {
          throw (function g_(e) {
            const t = Error(
              `No component factory found for ${le(
                e,
              )}. Did you add it to @NgModule.entryComponents?`,
            );
            return (t.ngComponent = e), t;
          })(t);
        }
      }
      let Na = (() => {
        class e {}
        return (e.NULL = new __()), e;
      })();
      function v_() {
        return ta(Zn(), ht());
      }
      function ta(e, t) {
        return new La(ci(e, t));
      }
      let La = (() => {
        class e {
          constructor(n) {
            this.nativeElement = n;
          }
        }
        return (e.__NG_ELEMENT_ID__ = v_), e;
      })();
      function b_(e) {
        return e instanceof La ? e.nativeElement : e;
      }
      class th {}
      let y_ = (() => {
          class e {}
          return (
            (e.__NG_ELEMENT_ID__ = () =>
              (function D_() {
                const e = ht(),
                  n = Ei(Zn().index, e);
                return (Se(n) ? n : e)[_n];
              })()),
            e
          );
        })(),
        C_ = (() => {
          class e {}
          return (
            (e.ɵprov = pt({
              token: e,
              providedIn: 'root',
              factory: () => null,
            })),
            e
          );
        })();
      class nh {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const x_ = new nh('15.2.8'),
        Bc = {},
        Vc = 'ngOriginalError';
      function Uc(e) {
        return e[Vc];
      }
      class Ba {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const n = this._findOriginalError(t);
          this._console.error('ERROR', t),
            n && this._console.error('ORIGINAL ERROR', n);
        }
        _findOriginalError(t) {
          let n = t && Uc(t);
          for (; n && Uc(n); ) n = Uc(n);
          return n || null;
        }
      }
      function as(e) {
        return e instanceof Function ? e() : e;
      }
      function rh(e, t, n) {
        let i = e.length;
        for (;;) {
          const o = e.indexOf(t, n);
          if (-1 === o) return o;
          if (0 === o || e.charCodeAt(o - 1) <= 32) {
            const a = t.length;
            if (o + a === i || e.charCodeAt(o + a) <= 32) return o;
          }
          n = o + 1;
        }
      }
      const oh = 'ng-template';
      function F_(e, t, n) {
        let i = 0,
          o = !0;
        for (; i < e.length; ) {
          let a = e[i++];
          if ('string' == typeof a && o) {
            const u = e[i++];
            if (n && 'class' === a && -1 !== rh(u.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === a) {
              for (; i < e.length && 'string' == typeof (a = e[i++]); )
                if (a.toLowerCase() === t) return !0;
              return !1;
            }
            'number' == typeof a && (o = !1);
          }
        }
        return !1;
      }
      function sh(e) {
        return 4 === e.type && e.value !== oh;
      }
      function P_(e, t, n) {
        return t === (4 !== e.type || n ? e.value : oh);
      }
      function N_(e, t, n) {
        let i = 4;
        const o = e.attrs || [],
          a = (function V_(e) {
            for (let t = 0; t < e.length; t++) if ($n(e[t])) return t;
            return e.length;
          })(o);
        let u = !1;
        for (let v = 0; v < t.length; v++) {
          const E = t[v];
          if ('number' != typeof E) {
            if (!u)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ('' !== E && !P_(e, E, n)) || ('' === E && 1 === t.length))
                ) {
                  if (Lo(i)) return !1;
                  u = !0;
                }
              } else {
                const N = 8 & i ? E : t[++v];
                if (8 & i && null !== e.attrs) {
                  if (!F_(e.attrs, N, n)) {
                    if (Lo(i)) return !1;
                    u = !0;
                  }
                  continue;
                }
                const re = L_(8 & i ? 'class' : E, o, sh(e), n);
                if (-1 === re) {
                  if (Lo(i)) return !1;
                  u = !0;
                  continue;
                }
                if ('' !== N) {
                  let Fe;
                  Fe = re > a ? '' : o[re + 1].toLowerCase();
                  const Ze = 8 & i ? Fe : null;
                  if ((Ze && -1 !== rh(Ze, N, 0)) || (2 & i && N !== Fe)) {
                    if (Lo(i)) return !1;
                    u = !0;
                  }
                }
              }
          } else {
            if (!u && !Lo(i) && !Lo(E)) return !1;
            if (u && Lo(E)) continue;
            (u = !1), (i = E | (1 & i));
          }
        }
        return Lo(i) || u;
      }
      function Lo(e) {
        return 0 == (1 & e);
      }
      function L_(e, t, n, i) {
        if (null === t) return -1;
        let o = 0;
        if (i || !n) {
          let a = !1;
          for (; o < t.length; ) {
            const u = t[o];
            if (u === e) return o;
            if (3 === u || 6 === u) a = !0;
            else {
              if (1 === u || 2 === u) {
                let v = t[++o];
                for (; 'string' == typeof v; ) v = t[++o];
                continue;
              }
              if (4 === u) break;
              if (0 === u) {
                o += 4;
                continue;
              }
            }
            o += a ? 1 : 2;
          }
          return -1;
        }
        return (function U_(e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const i = e[n];
              if ('number' == typeof i) return -1;
              if (i === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function ah(e, t, n = !1) {
        for (let i = 0; i < t.length; i++) if (N_(e, t[i], n)) return !0;
        return !1;
      }
      function H_(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const i = t[n];
          if (e.length === i.length) {
            for (let o = 0; o < e.length; o++) if (e[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function lh(e, t) {
        return e ? ':not(' + t.trim() + ')' : t;
      }
      function j_(e) {
        let t = e[0],
          n = 1,
          i = 2,
          o = '',
          a = !1;
        for (; n < e.length; ) {
          let u = e[n];
          if ('string' == typeof u)
            if (2 & i) {
              const v = e[++n];
              o += '[' + u + (v.length > 0 ? '="' + v + '"' : '') + ']';
            } else 8 & i ? (o += '.' + u) : 4 & i && (o += ' ' + u);
          else
            '' !== o && !Lo(u) && ((t += lh(a, o)), (o = '')),
              (i = u),
              (a = a || !Lo(i));
          n++;
        }
        return '' !== o && (t += lh(a, o)), t;
      }
      const Fn = {};
      function ch(e) {
        dh(Sn(), ht(), zt() + e, !1);
      }
      function dh(e, t, n, i) {
        if (!i)
          if (3 == (3 & t[hn])) {
            const a = e.preOrderCheckHooks;
            null !== a && Sr(t, a, n);
          } else {
            const a = e.preOrderHooks;
            null !== a && Gi(t, a, 0, n);
          }
        Cn(n);
      }
      function ph(e, t = null, n = null, i) {
        const o = mh(e, t, n, i);
        return o.resolveInjectorInitializers(), o;
      }
      function mh(e, t = null, n = null, i, o = new Set()) {
        const a = [n || en, s_(e)];
        return (
          (i = i || ('object' == typeof e ? void 0 : le(e))),
          new Qu(a, t || yl(), i || null, o)
        );
      }
      let Ls = (() => {
        class e {
          static create(n, i) {
            if (Array.isArray(n)) return ph({ name: '' }, i, n, '');
            {
              const o = n.name ?? '';
              return ph({ name: o }, n.parent, n.providers, o);
            }
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = ke),
          (e.NULL = new Gu()),
          (e.ɵprov = pt({
            token: e,
            providedIn: 'any',
            factory: () => et($u),
          })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      function ra(e, t = Lt.Default) {
        const n = ht();
        return null === n ? et(e, t) : Ys(Zn(), n, ie(e), t);
      }
      function Ch() {
        throw new Error('invalid');
      }
      function xh(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const a = n[i + 1];
            if (-1 !== a) {
              const u = e.data[a];
              B(n[i]), u.contentQueries(2, t[a], a);
            }
          }
      }
      function Cl(e, t, n, i, o, a, u, v, E, N, $) {
        const re = t.blueprint.slice();
        return (
          (re[ui] = o),
          (re[hn] = 76 | i),
          (null !== $ || (e && 1024 & e[hn])) && (re[hn] |= 1024),
          Vr(re),
          (re[Nn] = re[Ai] = e),
          (re[An] = n),
          (re[ri] = u || (e && e[ri])),
          (re[_n] = v || (e && e[_n])),
          (re[Ji] = E || (e && e[Ji]) || null),
          (re[Mi] = N || (e && e[Mi]) || null),
          (re[Qn] = a),
          (re[hr] = (function ng() {
            return tg++;
          })()),
          (re[or] = $),
          (re[Xn] = 2 == t.type ? e[Xn] : re),
          re
        );
      }
      function oa(e, t, n, i, o) {
        let a = e.data[t];
        if (null === a)
          (a = (function Yc(e, t, n, i, o) {
            const a = To(),
              u = Zr(),
              E = (e.data[t] = (function pv(e, t, n, i, o, a) {
                return {
                  type: n,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: o,
                  attrs: a,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tView: null,
                  next: null,
                  prev: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, u ? a : a && a.parent, n, t, i, o));
            return (
              null === e.firstChild && (e.firstChild = E),
              null !== a &&
                (u
                  ? null == a.child && null !== E.parent && (a.child = E)
                  : null === a.next && ((a.next = E), (E.prev = a))),
              E
            );
          })(e, t, n, i, o)),
            (function Oo() {
              return vn.lFrame.inI18n;
            })() && (a.flags |= 32);
        else if (64 & a.type) {
          (a.type = n), (a.value = i), (a.attrs = o);
          const u = (function Kr() {
            const e = vn.lFrame,
              t = e.currentTNode;
            return e.isParent ? t : t.parent;
          })();
          a.injectorIndex = null === u ? -1 : u.injectorIndex;
        }
        return Yi(a, !0), a;
      }
      function Va(e, t, n, i) {
        if (0 === n) return -1;
        const o = t.length;
        for (let a = 0; a < n; a++)
          t.push(i), e.blueprint.push(i), e.data.push(null);
        return o;
      }
      function Gc(e, t, n) {
        S(t);
        try {
          const i = e.viewQuery;
          null !== i && td(1, i, n);
          const o = e.template;
          null !== o && Eh(e, t, o, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && xh(e, t),
            e.staticViewQueries && td(2, e.viewQuery, n);
          const a = e.components;
          null !== a &&
            (function uv(e, t) {
              for (let n = 0; n < t.length; n++) Fv(e, t[n]);
            })(t, a);
        } catch (i) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[hn] &= -5), Xe();
        }
      }
      function xl(e, t, n, i) {
        const o = t[hn];
        if (128 != (128 & o)) {
          S(t);
          try {
            Vr(t),
              (function qr(e) {
                return (vn.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== n && Eh(e, t, n, 2, i);
            const u = 3 == (3 & o);
            if (u) {
              const N = e.preOrderCheckHooks;
              null !== N && Sr(t, N, null);
            } else {
              const N = e.preOrderHooks;
              null !== N && Gi(t, N, 0, null), y(t, 0);
            }
            if (
              ((function Ov(e) {
                for (let t = pc(e); null !== t; t = mc(t)) {
                  if (!t[vr]) continue;
                  const n = t[Ti];
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    512 & o[hn] || so(o[Nn], 1), (o[hn] |= 512);
                  }
                }
              })(t),
              (function Tv(e) {
                for (let t = pc(e); null !== t; t = mc(t))
                  for (let n = J; n < t.length; n++) {
                    const i = t[n],
                      o = i[jt];
                    Br(i) && xl(o, i, o.template, i[An]);
                  }
              })(t),
              null !== e.contentQueries && xh(e, t),
              u)
            ) {
              const N = e.contentCheckHooks;
              null !== N && Sr(t, N);
            } else {
              const N = e.contentHooks;
              null !== N && Gi(t, N, 1), y(t, 1);
            }
            !(function cv(e, t) {
              const n = e.hostBindingOpCodes;
              if (null !== n)
                try {
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    if (o < 0) Cn(~o);
                    else {
                      const a = o,
                        u = n[++i],
                        v = n[++i];
                      ds(u, a), v(2, t[a]);
                    }
                  }
                } finally {
                  Cn(-1);
                }
            })(e, t);
            const v = e.components;
            null !== v &&
              (function dv(e, t) {
                for (let n = 0; n < t.length; n++) Rv(e, t[n]);
              })(t, v);
            const E = e.viewQuery;
            if ((null !== E && td(2, E, i), u)) {
              const N = e.viewCheckHooks;
              null !== N && Sr(t, N);
            } else {
              const N = e.viewHooks;
              null !== N && Gi(t, N, 2), y(t, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (t[hn] &= -41),
              512 & t[hn] && ((t[hn] &= -513), so(t[Nn], -1));
          } finally {
            Xe();
          }
        }
      }
      function Eh(e, t, n, i, o) {
        const a = zt(),
          u = 2 & i;
        try {
          Cn(-1),
            u && t.length > jn && dh(e, t, jn, !1),
            Oi(u ? 2 : 0, o),
            n(i, o);
        } finally {
          Cn(a), Oi(u ? 3 : 1, o);
        }
      }
      function Wc(e, t, n) {
        if (It(t)) {
          const o = t.directiveEnd;
          for (let a = t.directiveStart; a < o; a++) {
            const u = e.data[a];
            u.contentQueries && u.contentQueries(1, n[a], a);
          }
        }
      }
      function Kc(e, t, n) {
        tt() &&
          ((function Dv(e, t, n, i) {
            const o = n.directiveStart,
              a = n.directiveEnd;
            kt(n) &&
              (function Sv(e, t, n) {
                const i = ci(t, e),
                  o = wh(n),
                  a = e[ri],
                  u = El(
                    e,
                    Cl(
                      e,
                      o,
                      null,
                      n.onPush ? 32 : 16,
                      i,
                      t,
                      a,
                      a.createRenderer(i, n),
                      null,
                      null,
                      null,
                    ),
                  );
                e[t.index] = u;
              })(t, n, e.data[o + n.componentOffset]),
              e.firstCreatePass || Cs(n, t),
              kr(i, t);
            const u = n.initialInputs;
            for (let v = o; v < a; v++) {
              const E = e.data[v],
                N = jo(t, e, v, n);
              kr(N, t),
                null !== u && Iv(0, v - o, N, E, 0, u),
                bn(E) && (Ei(n.index, t)[An] = jo(t, e, v, n));
            }
          })(e, t, n, ci(n, t)),
          64 == (64 & n.flags) && kh(e, t, n));
      }
      function Zc(e, t, n = ci) {
        const i = t.localNames;
        if (null !== i) {
          let o = t.index + 1;
          for (let a = 0; a < i.length; a += 2) {
            const u = i[a + 1],
              v = -1 === u ? n(t, e) : e[u];
            e[o++] = v;
          }
        }
      }
      function wh(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = qc(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
            ))
          : t;
      }
      function qc(e, t, n, i, o, a, u, v, E, N) {
        const $ = jn + i,
          re = $ + o,
          Fe = (function hv(e, t) {
            const n = [];
            for (let i = 0; i < t; i++) n.push(i < e ? null : Fn);
            return n;
          })($, re),
          Ze = 'function' == typeof N ? N() : N;
        return (Fe[jt] = {
          type: e,
          blueprint: Fe,
          template: n,
          queries: null,
          viewQuery: v,
          declTNode: t,
          data: Fe.slice().fill(null, $),
          bindingStartIndex: $,
          expandoStartIndex: re,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof a ? a() : a,
          pipeRegistry: 'function' == typeof u ? u() : u,
          firstChild: null,
          schemas: E,
          consts: Ze,
          incompleteFirstPass: !1,
        });
      }
      function Mh(e, t, n, i) {
        const o = Oh(t);
        null === n
          ? o.push(i)
          : (o.push(n), e.firstCreatePass && Rh(e).push(i, o.length - 1));
      }
      function Ah(e, t, n, i) {
        for (let o in e)
          if (e.hasOwnProperty(o)) {
            n = null === n ? {} : n;
            const a = e[o];
            null === i
              ? Sh(n, t, o, a)
              : i.hasOwnProperty(o) && Sh(n, t, i[o], a);
          }
        return n;
      }
      function Sh(e, t, n, i) {
        e.hasOwnProperty(n) ? e[n].push(t, i) : (e[n] = [t, i]);
      }
      function ho(e, t, n, i, o, a, u, v) {
        const E = ci(t, n);
        let $,
          N = t.inputs;
        !v && null != N && ($ = N[i])
          ? (nd(e, n, $, i, o),
            kt(t) &&
              (function _v(e, t) {
                const n = Ei(t, e);
                16 & n[hn] || (n[hn] |= 32);
              })(n, t.index))
          : 3 & t.type &&
            ((i = (function gv(e) {
              return 'class' === e
                ? 'className'
                : 'for' === e
                ? 'htmlFor'
                : 'formaction' === e
                ? 'formAction'
                : 'innerHtml' === e
                ? 'innerHTML'
                : 'readonly' === e
                ? 'readOnly'
                : 'tabindex' === e
                ? 'tabIndex'
                : e;
            })(i)),
            (o = null != u ? u(o, t.value || '', i) : o),
            a.setProperty(E, i, o));
      }
      function Qc(e, t, n, i) {
        if (tt()) {
          const o = null === i ? null : { '': -1 },
            a = (function xv(e, t) {
              const n = e.directiveRegistry;
              let i = null,
                o = null;
              if (n)
                for (let a = 0; a < n.length; a++) {
                  const u = n[a];
                  if (ah(t, u.selectors, !1))
                    if ((i || (i = []), bn(u)))
                      if (null !== u.findHostDirectiveDefs) {
                        const v = [];
                        (o = o || new Map()),
                          u.findHostDirectiveDefs(u, v, o),
                          i.unshift(...v, u),
                          Xc(e, t, v.length);
                      } else i.unshift(u), Xc(e, t, 0);
                    else
                      (o = o || new Map()),
                        u.findHostDirectiveDefs?.(u, i, o),
                        i.push(u);
                }
              return null === i ? null : [i, o];
            })(e, n);
          let u, v;
          null === a ? (u = v = null) : ([u, v] = a),
            null !== u && Ih(e, t, n, u, o, v),
            o &&
              (function Ev(e, t, n) {
                if (t) {
                  const i = (e.localNames = []);
                  for (let o = 0; o < t.length; o += 2) {
                    const a = n[t[o + 1]];
                    if (null == a) throw new Le(-301, !1);
                    i.push(t[o], a);
                  }
                }
              })(n, i, o);
        }
        n.mergedAttrs = si(n.mergedAttrs, n.attrs);
      }
      function Ih(e, t, n, i, o, a) {
        for (let N = 0; N < i.length; N++) Xi(Cs(n, t), e, i[N].type);
        !(function Mv(e, t, n) {
          (e.flags |= 1),
            (e.directiveStart = t),
            (e.directiveEnd = t + n),
            (e.providerIndexes = t);
        })(n, e.data.length, i.length);
        for (let N = 0; N < i.length; N++) {
          const $ = i[N];
          $.providersResolver && $.providersResolver($);
        }
        let u = !1,
          v = !1,
          E = Va(e, t, i.length, null);
        for (let N = 0; N < i.length; N++) {
          const $ = i[N];
          (n.mergedAttrs = si(n.mergedAttrs, $.hostAttrs)),
            Av(e, n, t, E, $),
            wv(E, $, o),
            null !== $.contentQueries && (n.flags |= 4),
            (null !== $.hostBindings ||
              null !== $.hostAttrs ||
              0 !== $.hostVars) &&
              (n.flags |= 64);
          const re = $.type.prototype;
          !u &&
            (re.ngOnChanges || re.ngOnInit || re.ngDoCheck) &&
            ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index),
            (u = !0)),
            !v &&
              (re.ngOnChanges || re.ngDoCheck) &&
              ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(
                n.index,
              ),
              (v = !0)),
            E++;
        }
        !(function mv(e, t, n) {
          const o = t.directiveEnd,
            a = e.data,
            u = t.attrs,
            v = [];
          let E = null,
            N = null;
          for (let $ = t.directiveStart; $ < o; $++) {
            const re = a[$],
              Fe = n ? n.get(re) : null,
              Ct = Fe ? Fe.outputs : null;
            (E = Ah(re.inputs, $, E, Fe ? Fe.inputs : null)),
              (N = Ah(re.outputs, $, N, Ct));
            const Ht = null === E || null === u || sh(t) ? null : kv(E, $, u);
            v.push(Ht);
          }
          null !== E &&
            (E.hasOwnProperty('class') && (t.flags |= 8),
            E.hasOwnProperty('style') && (t.flags |= 16)),
            (t.initialInputs = v),
            (t.inputs = E),
            (t.outputs = N);
        })(e, n, a);
      }
      function kh(e, t, n) {
        const i = n.directiveStart,
          o = n.directiveEnd,
          a = n.index,
          u = (function us() {
            return vn.lFrame.currentDirectiveIndex;
          })();
        try {
          Cn(a);
          for (let v = i; v < o; v++) {
            const E = e.data[v],
              N = t[v];
            Ho(v),
              (null !== E.hostBindings ||
                0 !== E.hostVars ||
                null !== E.hostAttrs) &&
                Cv(E, N);
          }
        } finally {
          Cn(-1), Ho(u);
        }
      }
      function Cv(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function Xc(e, t, n) {
        (t.componentOffset = n),
          (e.components ?? (e.components = [])).push(t.index);
      }
      function wv(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) n[t.exportAs[i]] = e;
          bn(t) && (n[''] = e);
        }
      }
      function Av(e, t, n, i, o) {
        e.data[i] = o;
        const a = o.factory || (o.factory = $i(o.type)),
          u = new ce(a, bn(o), ra);
        (e.blueprint[i] = u),
          (n[i] = u),
          (function bv(e, t, n, i, o) {
            const a = o.hostBindings;
            if (a) {
              let u = e.hostBindingOpCodes;
              null === u && (u = e.hostBindingOpCodes = []);
              const v = ~t.index;
              (function yv(e) {
                let t = e.length;
                for (; t > 0; ) {
                  const n = e[--t];
                  if ('number' == typeof n && n < 0) return n;
                }
                return 0;
              })(u) != v && u.push(v),
                u.push(n, i, a);
            }
          })(e, t, i, Va(e, n, o.hostVars, Fn), o);
      }
      function Yo(e, t, n, i, o, a) {
        const u = ci(e, t);
        !(function Jc(e, t, n, i, o, a, u) {
          if (null == a) e.removeAttribute(t, o, n);
          else {
            const v = null == u ? lt(a) : u(a, i || '', o);
            e.setAttribute(t, o, v, n);
          }
        })(t[_n], u, a, e.value, n, i, o);
      }
      function Iv(e, t, n, i, o, a) {
        const u = a[t];
        if (null !== u) {
          const v = i.setInput;
          for (let E = 0; E < u.length; ) {
            const N = u[E++],
              $ = u[E++],
              re = u[E++];
            null !== v ? i.setInput(n, re, N, $) : (n[$] = re);
          }
        }
      }
      function kv(e, t, n) {
        let i = null,
          o = 0;
        for (; o < n.length; ) {
          const a = n[o];
          if (0 !== a)
            if (5 !== a) {
              if ('number' == typeof a) break;
              if (e.hasOwnProperty(a)) {
                null === i && (i = []);
                const u = e[a];
                for (let v = 0; v < u.length; v += 2)
                  if (u[v] === t) {
                    i.push(a, u[v + 1], n[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function Th(e, t, n, i) {
        return [e, !0, !1, t, null, 0, i, n, null, null];
      }
      function Rv(e, t) {
        const n = Ei(t, e);
        if (Br(n)) {
          const i = n[jt];
          48 & n[hn] ? xl(i, n, i.template, n[An]) : n[fi] > 0 && ed(n);
        }
      }
      function ed(e) {
        for (let i = pc(e); null !== i; i = mc(i))
          for (let o = J; o < i.length; o++) {
            const a = i[o];
            if (Br(a))
              if (512 & a[hn]) {
                const u = a[jt];
                xl(u, a, u.template, a[An]);
              } else a[fi] > 0 && ed(a);
          }
        const n = e[jt].components;
        if (null !== n)
          for (let i = 0; i < n.length; i++) {
            const o = Ei(n[i], e);
            Br(o) && o[fi] > 0 && ed(o);
          }
      }
      function Fv(e, t) {
        const n = Ei(t, e),
          i = n[jt];
        (function Pv(e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(i, n),
          Gc(i, n, n[An]);
      }
      function El(e, t) {
        return e[zi] ? (e[ur][hi] = t) : (e[zi] = t), (e[ur] = t), t;
      }
      function wl(e) {
        for (; e; ) {
          e[hn] |= 32;
          const t = Oa(e);
          if (On(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function Ml(e, t, n, i = !0) {
        const o = t[ri];
        o.begin && o.begin();
        try {
          xl(e, t, e.template, n);
        } catch (u) {
          throw (i && Ph(t, u), u);
        } finally {
          o.end && o.end();
        }
      }
      function td(e, t, n) {
        B(0), t(e, n);
      }
      function Oh(e) {
        return e[li] || (e[li] = []);
      }
      function Rh(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Fh(e, t, n) {
        return (
          (null === e || bn(e)) &&
            (n = (function pi(e) {
              for (; Array.isArray(e); ) {
                if ('object' == typeof e[Zi]) return e;
                e = e[ui];
              }
              return null;
            })(n[t.index])),
          n[_n]
        );
      }
      function Ph(e, t) {
        const n = e[Mi],
          i = n ? n.get(Ba, null) : null;
        i && i.handleError(t);
      }
      function nd(e, t, n, i, o) {
        for (let a = 0; a < n.length; ) {
          const u = n[a++],
            v = n[a++],
            E = t[u],
            N = e.data[u];
          null !== N.setInput ? N.setInput(E, o, i, v) : (E[v] = o);
        }
      }
      function Al(e, t, n) {
        let i = n ? e.styles : null,
          o = n ? e.classes : null,
          a = 0;
        if (null !== t)
          for (let u = 0; u < t.length; u++) {
            const v = t[u];
            'number' == typeof v
              ? (a = v)
              : 1 == a
              ? (o = he(o, v))
              : 2 == a && (i = he(i, v + ': ' + t[++u] + ';'));
          }
        n ? (e.styles = i) : (e.stylesWithoutHost = i),
          n ? (e.classes = o) : (e.classesWithoutHost = o);
      }
      function Sl(e, t, n, i, o = !1) {
        for (; null !== n; ) {
          const a = t[n.index];
          if ((null !== a && i.push(oi(a)), We(a)))
            for (let v = J; v < a.length; v++) {
              const E = a[v],
                N = E[jt].firstChild;
              null !== N && Sl(E[jt], E, N, i);
            }
          const u = n.type;
          if (8 & u) Sl(e, t, n.child, i);
          else if (32 & u) {
            const v = fc(n, t);
            let E;
            for (; (E = v()); ) i.push(E);
          } else if (16 & u) {
            const v = Mu(t, n);
            if (Array.isArray(v)) i.push(...v);
            else {
              const E = Oa(t[Xn]);
              Sl(E[jt], E, v, i, !0);
            }
          }
          n = o ? n.projectionNext : n.next;
        }
        return i;
      }
      class Ua {
        get rootNodes() {
          const t = this._lView,
            n = t[jt];
          return Sl(n, t, n.firstChild, []);
        }
        constructor(t, n) {
          (this._lView = t),
            (this._cdRefInjectingView = n),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[An];
        }
        set context(t) {
          this._lView[An] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[hn]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Nn];
            if (We(t)) {
              const n = t[Ln],
                i = n ? n.indexOf(this) : -1;
              i > -1 && (vc(t, i), is(n, i));
            }
            this._attachedToViewContainer = !1;
          }
          _u(this._lView[jt], this._lView);
        }
        onDestroy(t) {
          Mh(this._lView[jt], this._lView, null, t);
        }
        markForCheck() {
          wl(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[hn] &= -65;
        }
        reattach() {
          this._lView[hn] |= 64;
        }
        detectChanges() {
          Ml(this._lView[jt], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Le(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function _g(e, t) {
              Ra(e, t, t[_n], 2, null, null);
            })(this._lView[jt], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Le(902, !1);
          this._appRef = t;
        }
      }
      class Nv extends Ua {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          Ml(t[jt], t, t[An], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Nh extends Na {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const n = nn(t);
          return new Ha(n, this.ngModule);
        }
      }
      function Lh(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      class Bv {
        constructor(t, n) {
          (this.injector = t), (this.parentInjector = n);
        }
        get(t, n, i) {
          i = F(i);
          const o = this.injector.get(t, Bc, i);
          return o !== Bc || n === Bc ? o : this.parentInjector.get(t, n, i);
        }
      }
      class Ha extends Ju {
        get inputs() {
          return Lh(this.componentDef.inputs);
        }
        get outputs() {
          return Lh(this.componentDef.outputs);
        }
        constructor(t, n) {
          super(),
            (this.componentDef = t),
            (this.ngModule = n),
            (this.componentType = t.type),
            (this.selector = (function z_(e) {
              return e.map(j_).join(',');
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!n);
        }
        create(t, n, i, o) {
          let a = (o = o || this.ngModule) instanceof Ns ? o : o?.injector;
          a &&
            null !== this.componentDef.getStandaloneInjector &&
            (a = this.componentDef.getStandaloneInjector(a) || a);
          const u = a ? new Bv(t, a) : t,
            v = u.get(th, null);
          if (null === v) throw new Le(407, !1);
          const E = u.get(C_, null),
            N = v.createRenderer(null, this.componentDef),
            $ = this.componentDef.selectors[0][0] || 'div',
            re = i
              ? (function fv(e, t, n) {
                  return e.selectRootElement(t, n === Je.ShadowDom);
                })(N, i, this.componentDef.encapsulation)
              : _c(
                  N,
                  $,
                  (function Lv(e) {
                    const t = e.toLowerCase();
                    return 'svg' === t ? mo : 'math' === t ? 'math' : null;
                  })($),
                ),
            Fe = this.componentDef.onPush ? 288 : 272,
            Ze = qc(0, null, null, 1, 0, null, null, null, null, null),
            Ct = Cl(null, Ze, null, Fe, null, null, v, N, E, u, null);
          let Ht, Xt;
          S(Ct);
          try {
            const cn = this.componentDef;
            let Mn,
              Ot = null;
            cn.findHostDirectiveDefs
              ? ((Mn = []),
                (Ot = new Map()),
                cn.findHostDirectiveDefs(cn, Mn, Ot),
                Mn.push(cn))
              : (Mn = [cn]);
            const Tn = (function Uv(e, t) {
                const n = e[jt],
                  i = jn;
                return (e[i] = t), oa(n, i, 2, '#host', null);
              })(Ct, re),
              Ii = (function Hv(e, t, n, i, o, a, u, v) {
                const E = o[jt];
                !(function jv(e, t, n, i) {
                  for (const o of e)
                    t.mergedAttrs = si(t.mergedAttrs, o.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Al(t, t.mergedAttrs, !0), null !== n && Iu(i, n, t));
                })(i, e, t, u);
                const N = a.createRenderer(t, n),
                  $ = Cl(
                    o,
                    wh(n),
                    null,
                    n.onPush ? 32 : 16,
                    o[e.index],
                    e,
                    a,
                    N,
                    v || null,
                    null,
                    null,
                  );
                return (
                  E.firstCreatePass && Xc(E, e, i.length - 1),
                  El(o, $),
                  (o[e.index] = $)
                );
              })(Tn, re, cn, Mn, Ct, v, N);
            (Xt = Wr(Ze, jn)),
              re &&
                (function $v(e, t, n, i) {
                  if (i) gn(e, n, ['ng-version', x_.full]);
                  else {
                    const { attrs: o, classes: a } = (function $_(e) {
                      const t = [],
                        n = [];
                      let i = 1,
                        o = 2;
                      for (; i < e.length; ) {
                        let a = e[i];
                        if ('string' == typeof a)
                          2 === o
                            ? '' !== a && t.push(a, e[++i])
                            : 8 === o && n.push(a);
                        else {
                          if (!Lo(o)) break;
                          o = a;
                        }
                        i++;
                      }
                      return { attrs: t, classes: n };
                    })(t.selectors[0]);
                    o && gn(e, n, o),
                      a && a.length > 0 && Su(e, n, a.join(' '));
                  }
                })(N, cn, re, i),
              void 0 !== n &&
                (function Yv(e, t, n) {
                  const i = (e.projection = []);
                  for (let o = 0; o < t.length; o++) {
                    const a = n[o];
                    i.push(null != a ? Array.from(a) : null);
                  }
                })(Xt, this.ngContentSelectors, n),
              (Ht = (function zv(e, t, n, i, o, a) {
                const u = Zn(),
                  v = o[jt],
                  E = ci(u, o);
                Ih(v, o, u, n, null, i);
                for (let $ = 0; $ < n.length; $++)
                  kr(jo(o, v, u.directiveStart + $, u), o);
                kh(v, o, u), E && kr(E, o);
                const N = jo(o, v, u.directiveStart + u.componentOffset, u);
                if (((e[An] = o[An] = N), null !== a))
                  for (const $ of a) $(N, t);
                return Wc(v, u, e), N;
              })(Ii, cn, Mn, Ot, Ct, [Gv])),
              Gc(Ze, Ct, null);
          } finally {
            Xe();
          }
          return new Vv(this.componentType, Ht, ta(Xt, Ct), Ct, Xt);
        }
      }
      class Vv extends m_ {
        constructor(t, n, i, o, a) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = a),
            (this.instance = n),
            (this.hostView = this.changeDetectorRef = new Nv(o)),
            (this.componentType = t);
        }
        setInput(t, n) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[t])) {
            const a = this._rootLView;
            nd(a[jt], a, o, t, n), wl(Ei(this._tNode.index, a));
          }
        }
        get injector() {
          return new Ro(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function Gv() {
        const e = Zn();
        ii(ht()[jt], e);
      }
      function id(e) {
        let t = (function Bh(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          n = !0;
        const i = [e];
        for (; t; ) {
          let o;
          if (bn(e)) o = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Le(903, !1);
            o = t.ɵdir;
          }
          if (o) {
            if (n) {
              i.push(o);
              const u = e;
              (u.inputs = rd(e.inputs)),
                (u.declaredInputs = rd(e.declaredInputs)),
                (u.outputs = rd(e.outputs));
              const v = o.hostBindings;
              v && qv(e, v);
              const E = o.viewQuery,
                N = o.contentQueries;
              if (
                (E && Kv(e, E),
                N && Zv(e, N),
                ve(e.inputs, o.inputs),
                ve(e.declaredInputs, o.declaredInputs),
                ve(e.outputs, o.outputs),
                bn(o) && o.data.animation)
              ) {
                const $ = e.data;
                $.animation = ($.animation || []).concat(o.data.animation);
              }
            }
            const a = o.features;
            if (a)
              for (let u = 0; u < a.length; u++) {
                const v = a[u];
                v && v.ngInherit && v(e), v === id && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function Wv(e) {
          let t = 0,
            n = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const o = e[i];
            (o.hostVars = t += o.hostVars),
              (o.hostAttrs = si(o.hostAttrs, (n = si(n, o.hostAttrs))));
          }
        })(i);
      }
      function rd(e) {
        return e === Ft ? {} : e === en ? [] : e;
      }
      function Kv(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function Zv(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (i, o, a) => {
              t(i, o, a), n(i, o, a);
            }
          : t;
      }
      function qv(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function Il(e) {
        return (
          !!od(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function od(e) {
        return null !== e && ('function' == typeof e || 'object' == typeof e);
      }
      function Go(e, t, n) {
        return (e[t] = n);
      }
      function Tr(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function sd(e, t, n, i) {
        const o = ht();
        return Tr(o, Ar(), t) && (Sn(), Yo(sn(), o, e, t, n, i)), sd;
      }
      function aa(e, t, n, i) {
        return Tr(e, Ar(), n) ? t + lt(n) + i : Fn;
      }
      function Qh(e, t, n, i, o, a, u, v) {
        const E = ht(),
          N = Sn(),
          $ = e + jn,
          re = N.firstCreatePass
            ? (function sb(e, t, n, i, o, a, u, v, E) {
                const N = t.consts,
                  $ = oa(t, e, 4, u || null, Ri(N, v));
                Qc(t, n, $, Ri(N, E)), ii(t, $);
                const re = ($.tView = qc(
                  2,
                  $,
                  i,
                  o,
                  a,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  N,
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, $),
                    (re.queries = t.queries.embeddedTView($))),
                  $
                );
              })($, N, E, t, n, i, o, a, u)
            : N.data[$];
        Yi(re, !1);
        const Fe = E[_n].createComment('');
        fl(N, E, Fe, re),
          kr(Fe, E),
          El(E, (E[$] = Th(Fe, E, Fe, re))),
          un(re) && Kc(N, E, re),
          null != u && Zc(E, re, v);
      }
      function Xh(e) {
        return Er(
          (function Qo() {
            return vn.lFrame.contextLView;
          })(),
          jn + e,
        );
      }
      function ad(e, t, n) {
        const i = ht();
        return Tr(i, Ar(), t) && ho(Sn(), sn(), i, e, t, i[_n], n, !1), ad;
      }
      function ld(e, t, n, i, o) {
        const u = o ? 'class' : 'style';
        nd(e, n, t.inputs[u], u, i);
      }
      function Tl(e, t, n, i) {
        const o = ht(),
          a = Sn(),
          u = jn + e,
          v = o[_n],
          E = a.firstCreatePass
            ? (function lb(e, t, n, i, o, a) {
                const u = t.consts,
                  E = oa(t, e, 2, i, Ri(u, o));
                return (
                  Qc(t, n, E, Ri(u, a)),
                  null !== E.attrs && Al(E, E.attrs, !1),
                  null !== E.mergedAttrs && Al(E, E.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, E),
                  E
                );
              })(u, a, o, t, n, i)
            : a.data[u],
          N = (o[u] = _c(
            v,
            t,
            (function bi() {
              return vn.lFrame.currentNamespace;
            })(),
          )),
          $ = un(E);
        return (
          Yi(E, !0),
          Iu(v, N, E),
          32 != (32 & E.flags) && fl(a, o, N, E),
          0 ===
            (function I() {
              return vn.lFrame.elementDepthCount;
            })() && kr(N, o),
          (function w() {
            vn.lFrame.elementDepthCount++;
          })(),
          $ && (Kc(a, o, E), Wc(a, E, o)),
          null !== i && Zc(o, E),
          Tl
        );
      }
      function Ol() {
        let e = Zn();
        Zr() ? ao() : ((e = e.parent), Yi(e, !1));
        const t = e;
        !(function Y() {
          vn.lFrame.elementDepthCount--;
        })();
        const n = Sn();
        return (
          n.firstCreatePass && (ii(n, e), It(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function Nt(e) {
              return 0 != (8 & e.flags);
            })(t) &&
            ld(n, t, ht(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function Yt(e) {
              return 0 != (16 & e.flags);
            })(t) &&
            ld(n, t, ht(), t.stylesWithoutHost, !1),
          Ol
        );
      }
      function cd(e, t, n, i) {
        return Tl(e, t, n, i), Ol(), cd;
      }
      function Rl(e, t, n) {
        const i = ht(),
          o = Sn(),
          a = e + jn,
          u = o.firstCreatePass
            ? (function cb(e, t, n, i, o) {
                const a = t.consts,
                  u = Ri(a, i),
                  v = oa(t, e, 8, 'ng-container', u);
                return (
                  null !== u && Al(v, u, !0),
                  Qc(t, n, v, Ri(a, o)),
                  null !== t.queries && t.queries.elementStart(t, v),
                  v
                );
              })(a, o, i, t, n)
            : o.data[a];
        Yi(u, !0);
        const v = (i[a] = i[_n].createComment(''));
        return (
          fl(o, i, v, u),
          kr(v, i),
          un(u) && (Kc(o, i, u), Wc(o, u, i)),
          null != n && Zc(i, u),
          Rl
        );
      }
      function Fl() {
        let e = Zn();
        const t = Sn();
        return (
          Zr() ? ao() : ((e = e.parent), Yi(e, !1)),
          t.firstCreatePass && (ii(t, e), It(e) && t.queries.elementEnd(e)),
          Fl
        );
      }
      function ef() {
        return ht();
      }
      function dd(e) {
        return !!e && 'function' == typeof e.then;
      }
      function tf(e) {
        return !!e && 'function' == typeof e.subscribe;
      }
      const nf = tf;
      function ud(e, t, n, i) {
        const o = ht(),
          a = Sn(),
          u = Zn();
        return rf(a, o, o[_n], u, e, t, i), ud;
      }
      function hd(e, t) {
        const n = Zn(),
          i = ht(),
          o = Sn();
        return rf(o, i, Fh(Qr(o.data), n, i), n, e, t), hd;
      }
      function rf(e, t, n, i, o, a, u) {
        const v = un(i),
          N = e.firstCreatePass && Rh(e),
          $ = t[An],
          re = Oh(t);
        let Fe = !0;
        if (3 & i.type || u) {
          const Ht = ci(i, t),
            Xt = u ? u(Ht) : Ht,
            cn = re.length,
            Mn = u ? Tn => u(oi(Tn[i.index])) : i.index;
          let Ot = null;
          if (
            (!u &&
              v &&
              (Ot = (function db(e, t, n, i) {
                const o = e.cleanup;
                if (null != o)
                  for (let a = 0; a < o.length - 1; a += 2) {
                    const u = o[a];
                    if (u === n && o[a + 1] === i) {
                      const v = t[li],
                        E = o[a + 2];
                      return v.length > E ? v[E] : null;
                    }
                    'string' == typeof u && (a += 2);
                  }
                return null;
              })(e, t, o, i.index)),
            null !== Ot)
          )
            ((Ot.__ngLastListenerFn__ || Ot).__ngNextListenerFn__ = a),
              (Ot.__ngLastListenerFn__ = a),
              (Fe = !1);
          else {
            a = af(i, t, $, a, !1);
            const Tn = n.listen(Xt, o, a);
            re.push(a, Tn), N && N.push(o, Mn, cn, cn + 1);
          }
        } else a = af(i, t, $, a, !1);
        const Ze = i.outputs;
        let Ct;
        if (Fe && null !== Ze && (Ct = Ze[o])) {
          const Ht = Ct.length;
          if (Ht)
            for (let Xt = 0; Xt < Ht; Xt += 2) {
              const Ii = t[Ct[Xt]][Ct[Xt + 1]].subscribe(a),
                Ki = re.length;
              re.push(a, Ii), N && N.push(o, i.index, Ki, -(Ki + 1));
            }
        }
      }
      function sf(e, t, n, i) {
        try {
          return Oi(6, t, n), !1 !== n(i);
        } catch (o) {
          return Ph(e, o), !1;
        } finally {
          Oi(7, t, n);
        }
      }
      function af(e, t, n, i, o) {
        return function a(u) {
          if (u === Function) return i;
          wl(e.componentOffset > -1 ? Ei(e.index, t) : t);
          let E = sf(t, n, i, u),
            N = a.__ngNextListenerFn__;
          for (; N; ) (E = sf(t, n, N, u) && E), (N = N.__ngNextListenerFn__);
          return o && !1 === E && (u.preventDefault(), (u.returnValue = !1)), E;
        };
      }
      function lf(e = 1) {
        return (function gt(e) {
          return (vn.lFrame.contextLView = (function Zt(e, t) {
            for (; e > 0; ) (t = t[Ai]), e--;
            return t;
          })(e, vn.lFrame.contextLView))[An];
        })(e);
      }
      function ub(e, t) {
        let n = null;
        const i = (function B_(e) {
          const t = e.attrs;
          if (null != t) {
            const n = t.indexOf(5);
            if (!(1 & n)) return t[n + 1];
          }
          return null;
        })(e);
        for (let o = 0; o < t.length; o++) {
          const a = t[o];
          if ('*' !== a) {
            if (null === i ? ah(e, a, !0) : H_(i, a)) return o;
          } else n = o;
        }
        return n;
      }
      function cf(e) {
        const t = ht()[Xn][Qn];
        if (!t.projection) {
          const i = (t.projection = f(e ? e.length : 1, null)),
            o = i.slice();
          let a = t.child;
          for (; null !== a; ) {
            const u = e ? ub(a, e) : 0;
            null !== u &&
              (o[u] ? (o[u].projectionNext = a) : (i[u] = a), (o[u] = a)),
              (a = a.next);
          }
        }
      }
      function df(e, t = 0, n) {
        const i = ht(),
          o = Sn(),
          a = oa(o, jn + e, 16, null, n || null);
        null === a.projection && (a.projection = t),
          ao(),
          32 != (32 & a.flags) &&
            (function wg(e, t, n) {
              Au(t[_n], 0, t, n, vu(e, n, t), Cu(n.parent || t[Qn], n, t));
            })(o, i, a);
      }
      function Pl(e, t) {
        return (e << 17) | (t << 2);
      }
      function bs(e) {
        return (e >> 17) & 32767;
      }
      function pd(e) {
        return 2 | e;
      }
      function Vs(e) {
        return (131068 & e) >> 2;
      }
      function md(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function gd(e) {
        return 1 | e;
      }
      function yf(e, t, n, i, o) {
        const a = e[n + 1],
          u = null === t;
        let v = i ? bs(a) : Vs(a),
          E = !1;
        for (; 0 !== v && (!1 === E || u); ) {
          const $ = e[v + 1];
          _b(e[v], t) && ((E = !0), (e[v + 1] = i ? gd($) : pd($))),
            (v = i ? bs($) : Vs($));
        }
        E && (e[n + 1] = i ? pd(a) : gd(a));
      }
      function _b(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || 'string' != typeof t) && Be(e, t) >= 0)
        );
      }
      const rr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Df(e) {
        return e.substring(rr.key, rr.keyEnd);
      }
      function Cf(e, t) {
        const n = rr.textEnd;
        return n === t
          ? -1
          : ((t = rr.keyEnd =
              (function Db(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (rr.key = t), n)),
            ma(e, t, n));
      }
      function ma(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function _d(e, t, n) {
        return Bo(e, t, n, !1), _d;
      }
      function vd(e, t) {
        return Bo(e, t, null, !0), vd;
      }
      function Ko(e, t) {
        for (
          let n = (function bb(e) {
            return (
              (function Ef(e) {
                (rr.key = 0),
                  (rr.keyEnd = 0),
                  (rr.value = 0),
                  (rr.valueEnd = 0),
                  (rr.textEnd = e.length);
              })(e),
              Cf(e, ma(e, 0, rr.textEnd))
            );
          })(t);
          n >= 0;
          n = Cf(t, n)
        )
          U(e, Df(t), !0);
      }
      function Bo(e, t, n, i) {
        const o = ht(),
          a = Sn(),
          u = mr(2);
        a.firstUpdatePass && Sf(a, e, u, i),
          t !== Fn &&
            Tr(o, u, t) &&
            kf(
              a,
              a.data[zt()],
              o,
              o[_n],
              e,
              (o[u + 1] = (function Rb(e, t) {
                return (
                  null == e ||
                    '' === e ||
                    ('string' == typeof t
                      ? (e += t)
                      : 'object' == typeof e && (e = le(os(e)))),
                  e
                );
              })(t, n)),
              i,
              u,
            );
      }
      function Af(e, t) {
        return t >= e.expandoStartIndex;
      }
      function Sf(e, t, n, i) {
        const o = e.data;
        if (null === o[n + 1]) {
          const a = o[zt()],
            u = Af(e, n);
          Of(a, i) && null === t && !u && (t = !1),
            (t = (function Mb(e, t, n, i) {
              const o = Qr(e);
              let a = i ? t.residualClasses : t.residualStyles;
              if (null === o)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((n = za((n = bd(null, e, t, n, i)), t.attrs, i)),
                  (a = null));
              else {
                const u = t.directiveStylingLast;
                if (-1 === u || e[u] !== o)
                  if (((n = bd(o, e, t, n, i)), null === a)) {
                    let E = (function Ab(e, t, n) {
                      const i = n ? t.classBindings : t.styleBindings;
                      if (0 !== Vs(i)) return e[bs(i)];
                    })(e, t, i);
                    void 0 !== E &&
                      Array.isArray(E) &&
                      ((E = bd(null, e, t, E[1], i)),
                      (E = za(E, t.attrs, i)),
                      (function Sb(e, t, n, i) {
                        e[bs(n ? t.classBindings : t.styleBindings)] = i;
                      })(e, t, i, E));
                  } else
                    a = (function Ib(e, t, n) {
                      let i;
                      const o = t.directiveEnd;
                      for (let a = 1 + t.directiveStylingLast; a < o; a++)
                        i = za(i, e[a].hostAttrs, n);
                      return za(i, t.attrs, n);
                    })(e, t, i);
              }
              return (
                void 0 !== a &&
                  (i ? (t.residualClasses = a) : (t.residualStyles = a)),
                n
              );
            })(o, a, t, i)),
            (function mb(e, t, n, i, o, a) {
              let u = a ? t.classBindings : t.styleBindings,
                v = bs(u),
                E = Vs(u);
              e[i] = n;
              let $,
                N = !1;
              if (
                (Array.isArray(n)
                  ? (($ = n[1]), (null === $ || Be(n, $) > 0) && (N = !0))
                  : ($ = n),
                o)
              )
                if (0 !== E) {
                  const Fe = bs(e[v + 1]);
                  (e[i + 1] = Pl(Fe, v)),
                    0 !== Fe && (e[Fe + 1] = md(e[Fe + 1], i)),
                    (e[v + 1] = (function fb(e, t) {
                      return (131071 & e) | (t << 17);
                    })(e[v + 1], i));
                } else
                  (e[i + 1] = Pl(v, 0)),
                    0 !== v && (e[v + 1] = md(e[v + 1], i)),
                    (v = i);
              else
                (e[i + 1] = Pl(E, 0)),
                  0 === v ? (v = i) : (e[E + 1] = md(e[E + 1], i)),
                  (E = i);
              N && (e[i + 1] = pd(e[i + 1])),
                yf(e, $, i, !0),
                yf(e, $, i, !1),
                (function gb(e, t, n, i, o) {
                  const a = o ? e.residualClasses : e.residualStyles;
                  null != a &&
                    'string' == typeof t &&
                    Be(a, t) >= 0 &&
                    (n[i + 1] = gd(n[i + 1]));
                })(t, $, e, i, a),
                (u = Pl(v, E)),
                a ? (t.classBindings = u) : (t.styleBindings = u);
            })(o, a, t, n, u, i);
        }
      }
      function bd(e, t, n, i, o) {
        let a = null;
        const u = n.directiveEnd;
        let v = n.directiveStylingLast;
        for (
          -1 === v ? (v = n.directiveStart) : v++;
          v < u && ((a = t[v]), (i = za(i, a.hostAttrs, o)), a !== e);

        )
          v++;
        return null !== e && (n.directiveStylingLast = v), i;
      }
      function za(e, t, n) {
        const i = n ? 1 : 2;
        let o = -1;
        if (null !== t)
          for (let a = 0; a < t.length; a++) {
            const u = t[a];
            'number' == typeof u
              ? (o = u)
              : o === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ['', e]),
                U(e, u, !!n || t[++a]));
          }
        return void 0 === e ? null : e;
      }
      function kf(e, t, n, i, o, a, u, v) {
        if (!(3 & t.type)) return;
        const E = e.data,
          N = E[v + 1],
          $ = (function pb(e) {
            return 1 == (1 & e);
          })(N)
            ? Tf(E, t, n, o, Vs(N), u)
            : void 0;
        Nl($) ||
          (Nl(a) ||
            ((function hb(e) {
              return 2 == (2 & e);
            })(N) &&
              (a = Tf(E, null, n, o, v, u))),
          (function Ag(e, t, n, i, o) {
            if (t) o ? e.addClass(n, i) : e.removeClass(n, i);
            else {
              let a = -1 === i.indexOf('-') ? void 0 : Xr.DashCase;
              null == o
                ? e.removeStyle(n, i, a)
                : ('string' == typeof o &&
                    o.endsWith('!important') &&
                    ((o = o.slice(0, -10)), (a |= Xr.Important)),
                  e.setStyle(n, i, o, a));
            }
          })(i, u, zn(zt(), n), o, a));
      }
      function Tf(e, t, n, i, o, a) {
        const u = null === t;
        let v;
        for (; o > 0; ) {
          const E = e[o],
            N = Array.isArray(E),
            $ = N ? E[1] : E,
            re = null === $;
          let Fe = n[o + 1];
          Fe === Fn && (Fe = re ? en : void 0);
          let Ze = re ? K(Fe, i) : $ === i ? Fe : void 0;
          if ((N && !Nl(Ze) && (Ze = K(E, i)), Nl(Ze) && ((v = Ze), u)))
            return v;
          const Ct = e[o + 1];
          o = u ? bs(Ct) : Vs(Ct);
        }
        if (null !== t) {
          let E = a ? t.residualClasses : t.residualStyles;
          null != E && (v = K(E, i));
        }
        return v;
      }
      function Nl(e) {
        return void 0 !== e;
      }
      function Of(e, t) {
        return 0 != (e.flags & (t ? 8 : 16));
      }
      function Rf(e, t = '') {
        const n = ht(),
          i = Sn(),
          o = e + jn,
          a = i.firstCreatePass ? oa(i, o, 1, t, null) : i.data[o],
          u = (n[o] = (function gc(e, t) {
            return e.createText(t);
          })(n[_n], t));
        fl(i, n, u, a), Yi(a, !1);
      }
      function yd(e) {
        return Ll('', e, ''), yd;
      }
      function Ll(e, t, n) {
        const i = ht(),
          o = aa(i, e, t, n);
        return (
          o !== Fn &&
            (function ls(e, t, n) {
              const i = zn(t, e);
              !(function mu(e, t, n) {
                e.setValue(t, n);
              })(e[_n], i, n);
            })(i, zt(), o),
          Ll
        );
      }
      function jf(e, t, n) {
        !(function Vo(e, t, n, i) {
          const o = Sn(),
            a = mr(2);
          o.firstUpdatePass && Sf(o, null, a, i);
          const u = ht();
          if (n !== Fn && Tr(u, a, n)) {
            const v = o.data[zt()];
            if (Of(v, i) && !Af(o, a)) {
              let E = i ? v.classesWithoutHost : v.stylesWithoutHost;
              null !== E && (n = he(E, n || '')), ld(o, v, u, n, i);
            } else
              !(function Ob(e, t, n, i, o, a, u, v) {
                o === Fn && (o = en);
                let E = 0,
                  N = 0,
                  $ = 0 < o.length ? o[0] : null,
                  re = 0 < a.length ? a[0] : null;
                for (; null !== $ || null !== re; ) {
                  const Fe = E < o.length ? o[E + 1] : void 0,
                    Ze = N < a.length ? a[N + 1] : void 0;
                  let Ht,
                    Ct = null;
                  $ === re
                    ? ((E += 2), (N += 2), Fe !== Ze && ((Ct = re), (Ht = Ze)))
                    : null === re || (null !== $ && $ < re)
                    ? ((E += 2), (Ct = $))
                    : ((N += 2), (Ct = re), (Ht = Ze)),
                    null !== Ct && kf(e, t, n, i, Ct, Ht, u, v),
                    ($ = E < o.length ? o[E] : null),
                    (re = N < a.length ? a[N] : null);
                }
              })(
                o,
                v,
                u,
                u[_n],
                u[a + 1],
                (u[a + 1] = (function kb(e, t, n) {
                  if (null == n || '' === n) return en;
                  const i = [],
                    o = os(n);
                  if (Array.isArray(o))
                    for (let a = 0; a < o.length; a++) e(i, o[a], !0);
                  else if ('object' == typeof o)
                    for (const a in o) o.hasOwnProperty(a) && e(i, a, o[a]);
                  else 'string' == typeof o && t(i, o);
                  return i;
                })(e, t, n)),
                i,
                a,
              );
          }
        })(U, Ko, aa(ht(), e, t, n), !0);
      }
      function Dd(e, t, n) {
        const i = ht();
        return Tr(i, Ar(), t) && ho(Sn(), sn(), i, e, t, i[_n], n, !0), Dd;
      }
      function Cd(e, t, n) {
        const i = ht();
        if (Tr(i, Ar(), t)) {
          const a = Sn(),
            u = sn();
          ho(a, u, i, e, t, Fh(Qr(a.data), u, i), n, !0);
        }
        return Cd;
      }
      const Us = void 0;
      var Xb = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Us],
        [['AM', 'PM'], Us, Us],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
          ],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Us,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',
          ],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Us,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Us, "{1} 'at' {0}", Us],
        [
          '.',
          ',',
          ';',
          '%',
          '+',
          '-',
          'E',
          '\xd7',
          '\u2030',
          '\u221e',
          'NaN',
          ':',
        ],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function Qb(e) {
          const n = Math.floor(Math.abs(e)),
            i = e.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === n && 0 === i ? 1 : 5;
        },
      ];
      let ga = {};
      function xd(e) {
        const t = (function Jb(e) {
          return e.toLowerCase().replace(/_/g, '-');
        })(e);
        let n = Jf(t);
        if (n) return n;
        const i = t.split('-')[0];
        if (((n = Jf(i)), n)) return n;
        if ('en' === i) return Xb;
        throw new Le(701, !1);
      }
      function Xf(e) {
        return xd(e)[En.PluralCase];
      }
      function Jf(e) {
        return (
          e in ga ||
            (ga[e] =
              ze.ng &&
              ze.ng.common &&
              ze.ng.common.locales &&
              ze.ng.common.locales[e]),
          ga[e]
        );
      }
      var En = (() => (
        ((En = En || {})[(En.LocaleId = 0)] = 'LocaleId'),
        (En[(En.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (En[(En.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (En[(En.DaysFormat = 3)] = 'DaysFormat'),
        (En[(En.DaysStandalone = 4)] = 'DaysStandalone'),
        (En[(En.MonthsFormat = 5)] = 'MonthsFormat'),
        (En[(En.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (En[(En.Eras = 7)] = 'Eras'),
        (En[(En.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (En[(En.WeekendRange = 9)] = 'WeekendRange'),
        (En[(En.DateFormat = 10)] = 'DateFormat'),
        (En[(En.TimeFormat = 11)] = 'TimeFormat'),
        (En[(En.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (En[(En.NumberSymbols = 13)] = 'NumberSymbols'),
        (En[(En.NumberFormats = 14)] = 'NumberFormats'),
        (En[(En.CurrencyCode = 15)] = 'CurrencyCode'),
        (En[(En.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (En[(En.CurrencyName = 17)] = 'CurrencyName'),
        (En[(En.Currencies = 18)] = 'Currencies'),
        (En[(En.Directionality = 19)] = 'Directionality'),
        (En[(En.PluralCase = 20)] = 'PluralCase'),
        (En[(En.ExtraData = 21)] = 'ExtraData'),
        En
      ))();
      const _a = 'en-US';
      let ep = _a;
      function Md(e, t, n, i, o) {
        if (((e = ie(e)), Array.isArray(e)))
          for (let a = 0; a < e.length; a++) Md(e[a], t, n, i, o);
        else {
          const a = Sn(),
            u = ht();
          let v = Ps(e) ? e : ie(e.provide),
            E = Xu(e);
          const N = Zn(),
            $ = 1048575 & N.providerIndexes,
            re = N.directiveStart,
            Fe = N.providerIndexes >> 20;
          if (Ps(e) || !e.multi) {
            const Ze = new ce(E, o, ra),
              Ct = Sd(v, t, o ? $ : $ + Fe, re);
            -1 === Ct
              ? (Xi(Cs(N, u), a, v),
                Ad(a, e, t.length),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(Ze),
                u.push(Ze))
              : ((n[Ct] = Ze), (u[Ct] = Ze));
          } else {
            const Ze = Sd(v, t, $ + Fe, re),
              Ct = Sd(v, t, $, $ + Fe),
              Xt = Ct >= 0 && n[Ct];
            if ((o && !Xt) || (!o && !(Ze >= 0 && n[Ze]))) {
              Xi(Cs(N, u), a, v);
              const cn = (function qy(e, t, n, i, o) {
                const a = new ce(e, n, ra);
                return (
                  (a.multi = []),
                  (a.index = t),
                  (a.componentProviders = 0),
                  wp(a, o, i && !n),
                  a
                );
              })(o ? Zy : Ky, n.length, o, i, E);
              !o && Xt && (n[Ct].providerFactory = cn),
                Ad(a, e, t.length, 0),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(cn),
                u.push(cn);
            } else Ad(a, e, Ze > -1 ? Ze : Ct, wp(n[o ? Ct : Ze], E, !o && i));
            !o && i && Xt && n[Ct].componentProviders++;
          }
        }
      }
      function Ad(e, t, n, i) {
        const o = Ps(t),
          a = (function l_(e) {
            return !!e.useClass;
          })(t);
        if (o || a) {
          const E = (a ? ie(t.useClass) : t).prototype.ngOnDestroy;
          if (E) {
            const N = e.destroyHooks || (e.destroyHooks = []);
            if (!o && t.multi) {
              const $ = N.indexOf(n);
              -1 === $ ? N.push(n, [i, E]) : N[$ + 1].push(i, E);
            } else N.push(n, E);
          }
        }
      }
      function wp(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function Sd(e, t, n, i) {
        for (let o = n; o < i; o++) if (t[o] === e) return o;
        return -1;
      }
      function Ky(e, t, n, i) {
        return Id(this.multi, []);
      }
      function Zy(e, t, n, i) {
        const o = this.multi;
        let a;
        if (this.providerFactory) {
          const u = this.providerFactory.componentProviders,
            v = jo(n, n[jt], this.providerFactory.index, i);
          (a = v.slice(0, u)), Id(o, a);
          for (let E = u; E < v.length; E++) a.push(v[E]);
        } else (a = []), Id(o, a);
        return a;
      }
      function Id(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function Mp(e, t = []) {
        return n => {
          n.providersResolver = (i, o) =>
            (function Wy(e, t, n) {
              const i = Sn();
              if (i.firstCreatePass) {
                const o = bn(e);
                Md(n, i.data, i.blueprint, o, !0),
                  Md(t, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(e) : e, t);
        };
      }
      class va {}
      class Ap {}
      function Qy(e, t) {
        return new Sp(e, t ?? null);
      }
      class Sp extends va {
        constructor(t, n) {
          super(),
            (this._parent = n),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Nh(this));
          const i = Di(t);
          (this._bootstrapComponents = as(i.bootstrap)),
            (this._r3Injector = mh(
              t,
              n,
              [
                { provide: va, useValue: this },
                { provide: Na, useValue: this.componentFactoryResolver },
              ],
              le(t),
              new Set(['environment']),
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach(n => n()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class kd extends Ap {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new Sp(this.moduleType, t);
        }
      }
      class Xy extends va {
        constructor(t, n, i) {
          super(),
            (this.componentFactoryResolver = new Nh(this)),
            (this.instance = null);
          const o = new Qu(
            [
              ...t,
              { provide: va, useValue: this },
              { provide: Na, useValue: this.componentFactoryResolver },
            ],
            n || yl(),
            i,
            new Set(['environment']),
          );
          (this.injector = o), o.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function Td(e, t, n = null) {
        return new Xy(e, t, n).injector;
      }
      let Jy = (() => {
        class e {
          constructor(n) {
            (this._injector = n), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(n) {
            if (!n.standalone) return null;
            if (!this.cachedInjectors.has(n.id)) {
              const i = Wu(0, n.type),
                o =
                  i.length > 0
                    ? Td([i], this._injector, `Standalone[${n.type.name}]`)
                    : null;
              this.cachedInjectors.set(n.id, o);
            }
            return this.cachedInjectors.get(n.id);
          }
          ngOnDestroy() {
            try {
              for (const n of this.cachedInjectors.values())
                null !== n && n.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (e.ɵprov = pt({
            token: e,
            providedIn: 'environment',
            factory: () => new e(et(Ns)),
          })),
          e
        );
      })();
      function Ip(e) {
        e.getStandaloneInjector = t =>
          t.get(Jy).getOrCreateStandaloneInjector(e);
      }
      function Np(e, t, n, i) {
        return Bp(ht(), Vi(), e, t, n, i);
      }
      function Lp(e, t, n, i, o) {
        return (function Vp(e, t, n, i, o, a, u) {
          const v = t + n;
          return (function Bs(e, t, n, i) {
            const o = Tr(e, t, n);
            return Tr(e, t + 1, i) || o;
          })(e, v, o, a)
            ? Go(e, v + 2, u ? i.call(u, o, a) : i(o, a))
            : Za(e, v + 2);
        })(ht(), Vi(), e, t, n, i, o);
      }
      function Za(e, t) {
        const n = e[t];
        return n === Fn ? void 0 : n;
      }
      function Bp(e, t, n, i, o, a) {
        const u = t + n;
        return Tr(e, u, o)
          ? Go(e, u + 1, a ? i.call(a, o) : i(o))
          : Za(e, u + 1);
      }
      function zp(e, t) {
        const n = Sn();
        let i;
        const o = e + jn;
        n.firstCreatePass
          ? ((i = (function _0(e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const i = t[n];
                  if (e === i.name) return i;
                }
            })(t, n.pipeRegistry)),
            (n.data[o] = i),
            i.onDestroy &&
              (n.destroyHooks ?? (n.destroyHooks = [])).push(o, i.onDestroy))
          : (i = n.data[o]);
        const a = i.factory || (i.factory = $i(i.type)),
          u = z(ra);
        try {
          const v = _o(!1),
            E = a();
          return (
            _o(v),
            (function ab(e, t, n, i) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = i);
            })(n, ht(), o, E),
            E
          );
        } finally {
          z(u);
        }
      }
      function $p(e, t, n) {
        const i = e + jn,
          o = ht(),
          a = Er(o, i);
        return (function qa(e, t) {
          return e[jt].data[t].pure;
        })(o, i)
          ? Bp(o, Vi(), t, a.transform, n, a)
          : a.transform(n);
      }
      function Rd(e) {
        return t => {
          setTimeout(e, void 0, t);
        };
      }
      const Zo = class C0 extends s.x {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, n, i) {
          let o = t,
            a = n || (() => null),
            u = i;
          if (t && 'object' == typeof t) {
            const E = t;
            (o = E.next?.bind(E)),
              (a = E.error?.bind(E)),
              (u = E.complete?.bind(E));
          }
          this.__isAsync && ((a = Rd(a)), o && (o = Rd(o)), u && (u = Rd(u)));
          const v = super.subscribe({ next: o, error: a, complete: u });
          return t instanceof x.w0 && t.add(v), v;
        }
      };
      function x0() {
        return this._results[Symbol.iterator]();
      }
      class jl {
        get changes() {
          return this._changes || (this._changes = new Zo());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const n = jl.prototype;
          n[Symbol.iterator] || (n[Symbol.iterator] = x0);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, n) {
          return this._results.reduce(t, n);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, n) {
          const i = this;
          i.dirty = !1;
          const o = (function Ir(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function Aa(e, t, n) {
            if (e.length !== t.length) return !1;
            for (let i = 0; i < e.length; i++) {
              let o = e[i],
                a = t[i];
              if ((n && ((o = n(o)), (a = n(a))), a !== o)) return !1;
            }
            return !0;
          })(i._results, o, n)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let Qa = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = M0), e;
      })();
      const E0 = Qa,
        w0 = class extends E0 {
          constructor(t, n, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = n),
              (this.elementRef = i);
          }
          createEmbeddedView(t, n) {
            const i = this._declarationTContainer.tView,
              o = Cl(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                n || null,
              );
            o[er] = this._declarationLView[this._declarationTContainer.index];
            const u = this._declarationLView[Li];
            return (
              null !== u && (o[Li] = u.createEmbeddedView(i)),
              Gc(i, o, t),
              new Ua(o)
            );
          }
        };
      function M0() {
        return zl(Zn(), ht());
      }
      function zl(e, t) {
        return 4 & e.type ? new w0(t, e, ta(e, t)) : null;
      }
      let $l = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = A0), e;
      })();
      function A0() {
        return Wp(Zn(), ht());
      }
      const S0 = $l,
        Yp = class extends S0 {
          constructor(t, n, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = n),
              (this._hostLView = i);
          }
          get element() {
            return ta(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ro(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Es(this._hostTNode, this._hostLView);
            if (Qi(t)) {
              const n = tr(t, this._hostLView),
                i = Ur(t);
              return new Ro(n[jt].data[i + 8], n);
            }
            return new Ro(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const n = Gp(this._lContainer);
            return (null !== n && n[t]) || null;
          }
          get length() {
            return this._lContainer.length - J;
          }
          createEmbeddedView(t, n, i) {
            let o, a;
            'number' == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (a = i.injector));
            const u = t.createEmbeddedView(n || {}, a);
            return this.insert(u, o), u;
          }
          createComponent(t, n, i, o, a) {
            const u =
              t &&
              !(function ns(e) {
                return 'function' == typeof e;
              })(t);
            let v;
            if (u) v = n;
            else {
              const re = n || {};
              (v = re.index),
                (i = re.injector),
                (o = re.projectableNodes),
                (a = re.environmentInjector || re.ngModuleRef);
            }
            const E = u ? t : new Ha(nn(t)),
              N = i || this.parentInjector;
            if (!a && null == E.ngModule) {
              const Fe = (u ? N : this.parentInjector).get(Ns, null);
              Fe && (a = Fe);
            }
            const $ = E.create(N, o, void 0, a);
            return this.insert($.hostView, v), $;
          }
          insert(t, n) {
            const i = t._lView,
              o = i[jt];
            if (
              (function ko(e) {
                return We(e[Nn]);
              })(i)
            ) {
              const $ = this.indexOf(t);
              if (-1 !== $) this.detach($);
              else {
                const re = i[Nn],
                  Fe = new Yp(re, re[Qn], re[Nn]);
                Fe.detach(Fe.indexOf(t));
              }
            }
            const a = this._adjustIndex(n),
              u = this._lContainer;
            !(function bg(e, t, n, i) {
              const o = J + i,
                a = n.length;
              i > 0 && (n[o - 1][hi] = t),
                i < a - J
                  ? ((t[hi] = n[o]), Ks(n, J + i, t))
                  : (n.push(t), (t[hi] = null)),
                (t[Nn] = n);
              const u = t[er];
              null !== u &&
                n !== u &&
                (function yg(e, t) {
                  const n = e[Ti];
                  t[Xn] !== t[Nn][Nn][Xn] && (e[vr] = !0),
                    null === n ? (e[Ti] = [t]) : n.push(t);
                })(u, t);
              const v = t[Li];
              null !== v && v.insertView(e), (t[hn] |= 64);
            })(o, i, u, a);
            const v = Dc(a, u),
              E = i[_n],
              N = hl(E, u[Ci]);
            return (
              null !== N &&
                (function gg(e, t, n, i, o, a) {
                  (i[ui] = o), (i[Qn] = t), Ra(e, i, n, 1, o, a);
                })(o, u[Qn], E, i, N, v),
              t.attachToViewContainerRef(),
              Ks(Fd(u), a, t),
              t
            );
          }
          move(t, n) {
            return this.insert(t, n);
          }
          indexOf(t) {
            const n = Gp(this._lContainer);
            return null !== n ? n.indexOf(t) : -1;
          }
          remove(t) {
            const n = this._adjustIndex(t, -1),
              i = vc(this._lContainer, n);
            i && (is(Fd(this._lContainer), n), _u(i[jt], i));
          }
          detach(t) {
            const n = this._adjustIndex(t, -1),
              i = vc(this._lContainer, n);
            return i && null != is(Fd(this._lContainer), n) ? new Ua(i) : null;
          }
          _adjustIndex(t, n = 0) {
            return t ?? this.length + n;
          }
        };
      function Gp(e) {
        return e[Ln];
      }
      function Fd(e) {
        return e[Ln] || (e[Ln] = []);
      }
      function Wp(e, t) {
        let n;
        const i = t[e.index];
        if (We(i)) n = i;
        else {
          let o;
          if (8 & e.type) o = oi(i);
          else {
            const a = t[_n];
            o = a.createComment('');
            const u = ci(e, t);
            Rs(
              a,
              hl(a, u),
              o,
              (function Eg(e, t) {
                return e.nextSibling(t);
              })(a, u),
              !1,
            );
          }
          (t[e.index] = n = Th(i, t, o, e)), El(t, n);
        }
        return new Yp(n, e, t);
      }
      class Pd {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Pd(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Nd {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const n = t.queries;
          if (null !== n) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : n.length,
              o = [];
            for (let a = 0; a < i; a++) {
              const u = n.getByIndex(a);
              o.push(this.queries[u.indexInDeclarationView].clone());
            }
            return new Nd(o);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let n = 0; n < this.queries.length; n++)
            null !== nm(t, n).matches && this.queries[n].setDirty();
        }
      }
      class Kp {
        constructor(t, n, i = null) {
          (this.predicate = t), (this.flags = n), (this.read = i);
        }
      }
      class Ld {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, n);
        }
        elementEnd(t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementEnd(t);
        }
        embeddedTView(t) {
          let n = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== n ? n.length : 0,
              a = this.getByIndex(i).embeddedTView(t, o);
            a &&
              ((a.indexInDeclarationView = i),
              null !== n ? n.push(a) : (n = [a]));
          }
          return null !== n ? new Ld(n) : null;
        }
        template(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, n);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Bd {
        constructor(t, n = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = n);
        }
        elementStart(t, n) {
          this.isApplyingToNode(n) && this.matchTNode(t, n);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, n) {
          this.elementStart(t, n);
        }
        embeddedTView(t, n) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, n),
              new Bd(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const n = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== n; ) i = i.parent;
            return n === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, n) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const a = i[o];
              this.matchTNodeWithReadOption(t, n, I0(n, a)),
                this.matchTNodeWithReadOption(t, n, Ms(n, t, a, !1, !1));
            }
          else
            i === Qa
              ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1)
              : this.matchTNodeWithReadOption(t, n, Ms(n, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, n, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === La || o === $l || (o === Qa && 4 & n.type))
                this.addMatch(n.index, -2);
              else {
                const a = Ms(n, t, o, !1, !1);
                null !== a && this.addMatch(n.index, a);
              }
            else this.addMatch(n.index, i);
          }
        }
        addMatch(t, n) {
          null === this.matches
            ? (this.matches = [t, n])
            : this.matches.push(t, n);
        }
      }
      function I0(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) if (n[i] === t) return n[i + 1];
        return null;
      }
      function T0(e, t, n, i) {
        return -1 === n
          ? (function k0(e, t) {
              return 11 & e.type ? ta(e, t) : 4 & e.type ? zl(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function O0(e, t, n) {
              return n === La
                ? ta(t, e)
                : n === Qa
                ? zl(t, e)
                : n === $l
                ? Wp(t, e)
                : void 0;
            })(e, t, i)
          : jo(e, e[jt], n, t);
      }
      function Zp(e, t, n, i) {
        const o = t[Li].queries[i];
        if (null === o.matches) {
          const a = e.data,
            u = n.matches,
            v = [];
          for (let E = 0; E < u.length; E += 2) {
            const N = u[E];
            v.push(N < 0 ? null : T0(t, a[N], u[E + 1], n.metadata.read));
          }
          o.matches = v;
        }
        return o.matches;
      }
      function Vd(e, t, n, i) {
        const o = e.queries.getByIndex(n),
          a = o.matches;
        if (null !== a) {
          const u = Zp(e, t, o, n);
          for (let v = 0; v < a.length; v += 2) {
            const E = a[v];
            if (E > 0) i.push(u[v / 2]);
            else {
              const N = a[v + 1],
                $ = t[-E];
              for (let re = J; re < $.length; re++) {
                const Fe = $[re];
                Fe[er] === Fe[Nn] && Vd(Fe[jt], Fe, N, i);
              }
              if (null !== $[Ti]) {
                const re = $[Ti];
                for (let Fe = 0; Fe < re.length; Fe++) {
                  const Ze = re[Fe];
                  Vd(Ze[jt], Ze, N, i);
                }
              }
            }
          }
        }
        return i;
      }
      function qp(e) {
        const t = ht(),
          n = Sn(),
          i = lo();
        B(i + 1);
        const o = nm(n, i);
        if (
          e.dirty &&
          (function wr(e) {
            return 4 == (4 & e[hn]);
          })(t) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) e.reset([]);
          else {
            const a = o.crossesNgTemplate ? Vd(n, t, i, []) : Zp(n, t, o, i);
            e.reset(a, b_), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Qp(e, t, n) {
        const i = Sn();
        i.firstCreatePass &&
          (tm(i, new Kp(e, t, n), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          em(i, ht(), t);
      }
      function Xp(e, t, n, i) {
        const o = Sn();
        if (o.firstCreatePass) {
          const a = Zn();
          tm(o, new Kp(t, n, i), a.index),
            (function F0(e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (n.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(o, e),
            2 == (2 & n) && (o.staticContentQueries = !0);
        }
        em(o, ht(), n);
      }
      function Jp() {
        return (function R0(e, t) {
          return e[Li].queries[t].queryList;
        })(ht(), lo());
      }
      function em(e, t, n) {
        const i = new jl(4 == (4 & n));
        Mh(e, t, i, i.destroy),
          null === t[Li] && (t[Li] = new Nd()),
          t[Li].queries.push(new Pd(i));
      }
      function tm(e, t, n) {
        null === e.queries && (e.queries = new Ld()),
          e.queries.track(new Bd(t, n));
      }
      function nm(e, t) {
        return e.queries.getByIndex(t);
      }
      function im(e, t) {
        return zl(e, t);
      }
      function Ud(e) {
        return !!Di(e);
      }
      function Gl(...e) {}
      const Dm = new ti('Application Initializer');
      let Wl = (() => {
        class e {
          constructor(n) {
            (this.appInits = n),
              (this.resolve = Gl),
              (this.reject = Gl),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, o) => {
                (this.resolve = i), (this.reject = o);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const n = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let o = 0; o < this.appInits.length; o++) {
                const a = this.appInits[o]();
                if (dd(a)) n.push(a);
                else if (nf(a)) {
                  const u = new Promise((v, E) => {
                    a.subscribe({ complete: v, error: E });
                  });
                  n.push(u);
                }
              }
            Promise.all(n)
              .then(() => {
                i();
              })
              .catch(o => {
                this.reject(o);
              }),
              0 === n.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(et(Dm, 8));
          }),
          (e.ɵprov = pt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const Cm = new ti('AppId', {
        providedIn: 'root',
        factory: function xm() {
          return `${Yd()}${Yd()}${Yd()}`;
        },
      });
      function Yd() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Em = new ti('Platform Initializer'),
        eD = new ti('Platform ID', {
          providedIn: 'platform',
          factory: () => 'unknown',
        }),
        tD = new ti('AnimationModuleType');
      let nD = (() => {
        class e {
          log(n) {
            console.log(n);
          }
          warn(n) {
            console.warn(n);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = pt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      const Kl = new ti('LocaleId', {
          providedIn: 'root',
          factory: () =>
            Te(Kl, Lt.Optional | Lt.SkipSelf) ||
            (function iD() {
              return (typeof $localize < 'u' && $localize.locale) || _a;
            })(),
        }),
        rD = new ti('DefaultCurrencyCode', {
          providedIn: 'root',
          factory: () => 'USD',
        });
      class oD {
        constructor(t, n) {
          (this.ngModuleFactory = t), (this.componentFactories = n);
        }
      }
      let sD = (() => {
        class e {
          compileModuleSync(n) {
            return new kd(n);
          }
          compileModuleAsync(n) {
            return Promise.resolve(this.compileModuleSync(n));
          }
          compileModuleAndAllComponentsSync(n) {
            const i = this.compileModuleSync(n),
              a = as(Di(n).declarations).reduce((u, v) => {
                const E = nn(v);
                return E && u.push(new Ha(E)), u;
              }, []);
            return new oD(i, a);
          }
          compileModuleAndAllComponentsAsync(n) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(n));
          }
          clearCache() {}
          clearCacheFor(n) {}
          getModuleId(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = pt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const cD = (() => Promise.resolve(0))();
      function Gd(e) {
        typeof Zone > 'u'
          ? cD.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
      }
      class Mo {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: n = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Zo(!1)),
            (this.onMicrotaskEmpty = new Zo(!1)),
            (this.onStable = new Zo(!1)),
            (this.onError = new Zo(!1)),
            typeof Zone > 'u')
          )
            throw new Le(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && n),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function dD() {
              let e = ze.requestAnimationFrame,
                t = ze.cancelAnimationFrame;
              if (typeof Zone < 'u' && e && t) {
                const n = e[Zone.__symbol__('OriginalDelegate')];
                n && (e = n);
                const i = t[Zone.__symbol__('OriginalDelegate')];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function fD(e) {
              const t = () => {
                !(function hD(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(ze, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            'fakeTopEventTask',
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                Kd(e),
                                (e.isCheckStableRunning = !0),
                                Wd(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {},
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    Kd(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, i, o, a, u, v) => {
                  try {
                    return Am(e), n.invokeTask(o, a, u, v);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      'eventTask' === a.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      t(),
                      Sm(e);
                  }
                },
                onInvoke: (n, i, o, a, u, v, E) => {
                  try {
                    return Am(e), n.invoke(o, a, u, v, E);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && t(), Sm(e);
                  }
                },
                onHasTask: (n, i, o, a) => {
                  n.hasTask(o, a),
                    i === o &&
                      ('microTask' == a.change
                        ? ((e._hasPendingMicrotasks = a.microTask),
                          Kd(e),
                          Wd(e))
                        : 'macroTask' == a.change &&
                          (e.hasPendingMacrotasks = a.macroTask));
                },
                onHandleError: (n, i, o, a) => (
                  n.handleError(o, a),
                  e.runOutsideAngular(() => e.onError.emit(a)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < 'u' && !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Mo.isInAngularZone()) throw new Le(909, !1);
        }
        static assertNotInAngularZone() {
          if (Mo.isInAngularZone()) throw new Le(909, !1);
        }
        run(t, n, i) {
          return this._inner.run(t, n, i);
        }
        runTask(t, n, i, o) {
          const a = this._inner,
            u = a.scheduleEventTask('NgZoneEvent: ' + o, t, uD, Gl, Gl);
          try {
            return a.runTask(u, n, i);
          } finally {
            a.cancelTask(u);
          }
        }
        runGuarded(t, n, i) {
          return this._inner.runGuarded(t, n, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const uD = {};
      function Wd(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function Kd(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function Am(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function Sm(e) {
        e._nesting--, Wd(e);
      }
      class pD {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Zo()),
            (this.onMicrotaskEmpty = new Zo()),
            (this.onStable = new Zo()),
            (this.onError = new Zo());
        }
        run(t, n, i) {
          return t.apply(n, i);
        }
        runGuarded(t, n, i) {
          return t.apply(n, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, n, i, o) {
          return t.apply(n, i);
        }
      }
      const Im = new ti(''),
        km = new ti('');
      let Zd,
        mD = (() => {
          class e {
            constructor(n, i, o) {
              (this._ngZone = n),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Zd ||
                  ((function gD(e) {
                    Zd = e;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                n.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > 'u'
                      ? null
                      : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Mo.assertNotInAngularZone(),
                        Gd(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Gd(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let n = this._callbacks.pop();
                    clearTimeout(n.timeoutId), n.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let n = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  i =>
                    !i.updateCb ||
                    !i.updateCb(n) ||
                    (clearTimeout(i.timeoutId), !1),
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map(n => ({
                    source: n.source,
                    creationLocation: n.creationLocation,
                    data: n.data,
                  }))
                : [];
            }
            addCallback(n, i, o) {
              let a = -1;
              i &&
                i > 0 &&
                (a = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    u => u.timeoutId !== a,
                  )),
                    n(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: n, timeoutId: a, updateCb: o });
            }
            whenStable(n, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?',
                );
              this.addCallback(n, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(n) {
              this.registry.registerApplication(n, this);
            }
            unregisterApplication(n) {
              this.registry.unregisterApplication(n);
            }
            findProviders(n, i, o) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)(et(Mo), et(Tm), et(km));
            }),
            (e.ɵprov = pt({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Tm = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(n, i) {
              this._applications.set(n, i);
            }
            unregisterApplication(n) {
              this._applications.delete(n);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(n) {
              return this._applications.get(n) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(n, i = !0) {
              return Zd?.findTestabilityInTree(this, n, i) ?? null;
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)();
            }),
            (e.ɵprov = pt({
              token: e,
              factory: e.ɵfac,
              providedIn: 'platform',
            })),
            e
          );
        })();
      const cs = !1;
      let ys = null;
      const Om = new ti('AllowMultipleToken'),
        qd = new ti('PlatformDestroyListeners'),
        Rm = new ti('appBootstrapListener');
      class bD {
        constructor(t, n) {
          (this.name = t), (this.token = n);
        }
      }
      function Pm(e, t, n = []) {
        const i = `Platform: ${t}`,
          o = new ti(i);
        return (a = []) => {
          let u = Qd();
          if (!u || u.injector.get(Om, !1)) {
            const v = [...n, ...a, { provide: o, useValue: !0 }];
            e
              ? e(v)
              : (function yD(e) {
                  if (ys && !ys.get(Om, !1)) throw new Le(400, !1);
                  ys = e;
                  const t = e.get(Lm);
                  (function Fm(e) {
                    const t = e.get(Em, null);
                    t && t.forEach(n => n());
                  })(e);
                })(
                  (function Nm(e = [], t) {
                    return Ls.create({
                      name: t,
                      providers: [
                        { provide: Fc, useValue: 'platform' },
                        { provide: qd, useValue: new Set([() => (ys = null)]) },
                        ...e,
                      ],
                    });
                  })(v, i),
                );
          }
          return (function CD(e) {
            const t = Qd();
            if (!t) throw new Le(401, !1);
            return t;
          })();
        };
      }
      function Qd() {
        return ys?.get(Lm) ?? null;
      }
      let Lm = (() => {
        class e {
          constructor(n) {
            (this._injector = n),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(n, i) {
            const o = (function Vm(e, t) {
                let n;
                return (
                  (n =
                    'noop' === e
                      ? new pD()
                      : ('zone.js' === e ? void 0 : e) || new Mo(t)),
                  n
                );
              })(
                i?.ngZone,
                (function Bm(e) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!e || !e.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!e || !e.ngZoneRunCoalescing) || !1,
                  };
                })(i),
              ),
              a = [{ provide: Mo, useValue: o }];
            return o.run(() => {
              const u = Ls.create({
                  providers: a,
                  parent: this.injector,
                  name: n.moduleType.name,
                }),
                v = n.create(u),
                E = v.injector.get(Ba, null);
              if (!E) throw new Le(402, !1);
              return (
                o.runOutsideAngular(() => {
                  const N = o.onError.subscribe({
                    next: $ => {
                      E.handleError($);
                    },
                  });
                  v.onDestroy(() => {
                    ql(this._modules, v), N.unsubscribe();
                  });
                }),
                (function Um(e, t, n) {
                  try {
                    const i = n();
                    return dd(i)
                      ? i.catch(o => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(E, o, () => {
                  const N = v.injector.get(Wl);
                  return (
                    N.runInitializers(),
                    N.donePromise.then(
                      () => (
                        (function tp(e) {
                          Ne(e, 'Expected localeId to be defined'),
                            'string' == typeof e &&
                              (ep = e.toLowerCase().replace(/_/g, '-'));
                        })(v.injector.get(Kl, _a) || _a),
                        this._moduleDoBootstrap(v),
                        v
                      ),
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(n, i = []) {
            const o = Hm({}, i);
            return (function _D(e, t, n) {
              const i = new kd(n);
              return Promise.resolve(i);
            })(0, 0, n).then(a => this.bootstrapModuleFactory(a, o));
          }
          _moduleDoBootstrap(n) {
            const i = n.injector.get(Zl);
            if (n._bootstrapComponents.length > 0)
              n._bootstrapComponents.forEach(o => i.bootstrap(o));
            else {
              if (!n.instance.ngDoBootstrap) throw new Le(-403, !1);
              n.instance.ngDoBootstrap(i);
            }
            this._modules.push(n);
          }
          onDestroy(n) {
            this._destroyListeners.push(n);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Le(404, !1);
            this._modules.slice().forEach(i => i.destroy()),
              this._destroyListeners.forEach(i => i());
            const n = this._injector.get(qd, null);
            n && (n.forEach(i => i()), n.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(et(Ls));
          }),
          (e.ɵprov = pt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      function Hm(e, t) {
        return Array.isArray(t) ? t.reduce(Hm, e) : { ...e, ...t };
      }
      let Zl = (() => {
        class e {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(n, i, o) {
            (this._zone = n),
              (this._injector = i),
              (this._exceptionHandler = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const a = new L.y(v => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    v.next(this._stable), v.complete();
                  });
              }),
              u = new L.y(v => {
                let E;
                this._zone.runOutsideAngular(() => {
                  E = this._zone.onStable.subscribe(() => {
                    Mo.assertNotInAngularZone(),
                      Gd(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), v.next(!0));
                      });
                  });
                });
                const N = this._zone.onUnstable.subscribe(() => {
                  Mo.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        v.next(!1);
                      }));
                });
                return () => {
                  E.unsubscribe(), N.unsubscribe();
                };
              });
            this.isStable = (0, oe.T)(a, u.pipe((0, te.B)()));
          }
          bootstrap(n, i) {
            const o = n instanceof Ju;
            if (!this._injector.get(Wl).done) {
              !o && ai(n);
              throw new Le(405, cs);
            }
            let u;
            (u = o ? n : this._injector.get(Na).resolveComponentFactory(n)),
              this.componentTypes.push(u.componentType);
            const v = (function vD(e) {
                return e.isBoundToModule;
              })(u)
                ? void 0
                : this._injector.get(va),
              N = u.create(Ls.NULL, [], i || u.selector, v),
              $ = N.location.nativeElement,
              re = N.injector.get(Im, null);
            return (
              re?.registerApplication($),
              N.onDestroy(() => {
                this.detachView(N.hostView),
                  ql(this.components, N),
                  re?.unregisterApplication($);
              }),
              this._loadComponent(N),
              N
            );
          }
          tick() {
            if (this._runningTick) throw new Le(101, !1);
            try {
              this._runningTick = !0;
              for (let n of this._views) n.detectChanges();
            } catch (n) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(n),
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(n) {
            const i = n;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(n) {
            const i = n;
            ql(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(n) {
            this.attachView(n.hostView), this.tick(), this.components.push(n);
            const i = this._injector.get(Rm, []);
            i.push(...this._bootstrapListeners), i.forEach(o => o(n));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach(n => n()),
                  this._views.slice().forEach(n => n.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(n) {
            return (
              this._destroyListeners.push(n),
              () => ql(this._destroyListeners, n)
            );
          }
          destroy() {
            if (this._destroyed) throw new Le(406, !1);
            const n = this._injector;
            n.destroy && !n.destroyed && n.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(et(Mo), et(Ns), et(Ba));
          }),
          (e.ɵprov = pt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      function ql(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function ED() {
        return !1;
      }
      let wD = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = MD), e;
      })();
      function MD(e) {
        return (function AD(e, t, n) {
          if (kt(e) && !n) {
            const i = Ei(e.index, t);
            return new Ua(i, i);
          }
          return 47 & e.type ? new Ua(t[Xn], t) : null;
        })(Zn(), ht(), 16 == (16 & e));
      }
      class Gm {
        constructor() {}
        supports(t) {
          return Il(t);
        }
        create(t) {
          return new RD(t);
        }
      }
      const OD = (e, t) => t;
      class RD {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || OD);
        }
        forEachItem(t) {
          let n;
          for (n = this._itHead; null !== n; n = n._next) t(n);
        }
        forEachOperation(t) {
          let n = this._itHead,
            i = this._removalsHead,
            o = 0,
            a = null;
          for (; n || i; ) {
            const u = !i || (n && n.currentIndex < Km(i, o, a)) ? n : i,
              v = Km(u, o, a),
              E = u.currentIndex;
            if (u === i) o--, (i = i._nextRemoved);
            else if (((n = n._next), null == u.previousIndex)) o++;
            else {
              a || (a = []);
              const N = v - o,
                $ = E - o;
              if (N != $) {
                for (let Fe = 0; Fe < N; Fe++) {
                  const Ze = Fe < a.length ? a[Fe] : (a[Fe] = 0),
                    Ct = Ze + Fe;
                  $ <= Ct && Ct < N && (a[Fe] = Ze + 1);
                }
                a[u.previousIndex] = $ - N;
              }
            }
            v !== E && t(u, v, E);
          }
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousItHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachMovedItem(t) {
          let n;
          for (n = this._movesHead; null !== n; n = n._nextMoved) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        forEachIdentityChange(t) {
          let n;
          for (
            n = this._identityChangesHead;
            null !== n;
            n = n._nextIdentityChange
          )
            t(n);
        }
        diff(t) {
          if ((null == t && (t = []), !Il(t))) throw new Le(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let o,
            a,
            u,
            n = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let v = 0; v < this.length; v++)
              (a = t[v]),
                (u = this._trackByFn(v, a)),
                null !== n && Object.is(n.trackById, u)
                  ? (i && (n = this._verifyReinsertion(n, a, u, v)),
                    Object.is(n.item, a) || this._addIdentityChange(n, a))
                  : ((n = this._mismatch(n, a, u, v)), (i = !0)),
                (n = n._next);
          } else
            (o = 0),
              (function ib(e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Symbol.iterator]();
                  let i;
                  for (; !(i = n.next()).done; ) t(i.value);
                }
              })(t, v => {
                (u = this._trackByFn(o, v)),
                  null !== n && Object.is(n.trackById, u)
                    ? (i && (n = this._verifyReinsertion(n, v, u, o)),
                      Object.is(n.item, v) || this._addIdentityChange(n, v))
                    : ((n = this._mismatch(n, v, u, o)), (i = !0)),
                  (n = n._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(n), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, n, i, o) {
          let a;
          return (
            null === t ? (a = this._itTail) : ((a = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, a, o))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, a, o))
              : (t = this._addAfter(new FD(n, i), a, o)),
            t
          );
        }
        _verifyReinsertion(t, n, i, o) {
          let a =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== a
              ? (t = this._reinsertAfter(a, t._prev, o))
              : t.currentIndex != o &&
                ((t.currentIndex = o), this._addToMoves(t, o)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const n = t._next;
            this._addToRemovals(this._unlink(t)), (t = n);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, n, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const o = t._prevRemoved,
            a = t._nextRemoved;
          return (
            null === o ? (this._removalsHead = a) : (o._nextRemoved = a),
            null === a ? (this._removalsTail = o) : (a._prevRemoved = o),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, n, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, n, i) {
          return (
            this._insertAfter(t, n, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, n, i) {
          const o = null === n ? this._itHead : n._next;
          return (
            (t._next = o),
            (t._prev = n),
            null === o ? (this._itTail = t) : (o._prev = t),
            null === n ? (this._itHead = t) : (n._next = t),
            null === this._linkedRecords && (this._linkedRecords = new Wm()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const n = t._prev,
            i = t._next;
          return (
            null === n ? (this._itHead = i) : (n._next = i),
            null === i ? (this._itTail = n) : (i._prev = n),
            t
          );
        }
        _addToMoves(t, n) {
          return (
            t.previousIndex === n ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Wm()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, n) {
          return (
            (t.item = n),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class FD {
        constructor(t, n) {
          (this.item = t),
            (this.trackById = n),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class PD {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, n) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === n || n <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const n = t._prevDup,
            i = t._nextDup;
          return (
            null === n ? (this._head = i) : (n._nextDup = i),
            null === i ? (this._tail = n) : (i._prevDup = n),
            null === this._head
          );
        }
      }
      class Wm {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const n = t.trackById;
          let i = this.map.get(n);
          i || ((i = new PD()), this.map.set(n, i)), i.add(t);
        }
        get(t, n) {
          const o = this.map.get(t);
          return o ? o.get(t, n) : null;
        }
        remove(t) {
          const n = t.trackById;
          return this.map.get(n).remove(t) && this.map.delete(n), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Km(e, t, n) {
        const i = e.previousIndex;
        if (null === i) return i;
        let o = 0;
        return n && i < n.length && (o = n[i]), i + t + o;
      }
      class Zm {
        constructor() {}
        supports(t) {
          return t instanceof Map || od(t);
        }
        create() {
          return new ND();
        }
      }
      class ND {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let n;
          for (n = this._mapHead; null !== n; n = n._next) t(n);
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousMapHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachChangedItem(t) {
          let n;
          for (n = this._changesHead; null !== n; n = n._nextChanged) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || od(t))) throw new Le(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let n = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, o) => {
              if (n && n.key === o)
                this._maybeAddToChanges(n, i),
                  (this._appendAfter = n),
                  (n = n._next);
              else {
                const a = this._getOrCreateRecordForKey(o, i);
                n = this._insertBeforeOrAppend(n, a);
              }
            }),
            n)
          ) {
            n._prev && (n._prev._next = null), (this._removalsHead = n);
            for (let i = n; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, n) {
          if (t) {
            const i = t._prev;
            return (
              (n._next = t),
              (n._prev = i),
              (t._prev = n),
              i && (i._next = n),
              t === this._mapHead && (this._mapHead = n),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = n), (n._prev = this._appendAfter))
              : (this._mapHead = n),
            (this._appendAfter = n),
            null
          );
        }
        _getOrCreateRecordForKey(t, n) {
          if (this._records.has(t)) {
            const o = this._records.get(t);
            this._maybeAddToChanges(o, n);
            const a = o._prev,
              u = o._next;
            return (
              a && (a._next = u),
              u && (u._prev = a),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new LD(t);
          return (
            this._records.set(t, i),
            (i.currentValue = n),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, n) {
          Object.is(n, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = n),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, n) {
          t instanceof Map
            ? t.forEach(n)
            : Object.keys(t).forEach(i => n(t[i], i));
        }
      }
      class LD {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function qm() {
        return new nu([new Gm()]);
      }
      let nu = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (null != i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || qm()),
              deps: [[e, new Zs(), new rs()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (null != i) return i;
            throw new Le(901, !1);
          }
        }
        return (e.ɵprov = pt({ token: e, providedIn: 'root', factory: qm })), e;
      })();
      function Qm() {
        return new iu([new Zm()]);
      }
      let iu = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || Qm()),
              deps: [[e, new Zs(), new rs()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (i) return i;
            throw new Le(901, !1);
          }
        }
        return (e.ɵprov = pt({ token: e, providedIn: 'root', factory: Qm })), e;
      })();
      const UD = Pm(null, 'core', []);
      let HD = (() => {
        class e {
          constructor(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(et(Zl));
          }),
          (e.ɵmod = cr({ type: e })),
          (e.ɵinj = yn({})),
          e
        );
      })();
      function jD(e) {
        return 'boolean' == typeof e ? e : null != e && 'false' !== e;
      }
    },
    4006: (Rt, Pe, C) => {
      C.d(Pe, {
        Cf: () => _t,
        F: () => Qn,
        Fj: () => Ue,
        JJ: () => Jt,
        JL: () => Lt,
        JU: () => le,
        On: () => or,
        Q7: () => ar,
        UX: () => fr,
        Zs: () => oo,
        _Y: () => jn,
        a5: () => ln,
        kI: () => W,
        oH: () => kt,
        qu: () => ko,
        sg: () => bn,
        u5: () => vn,
      });
      var s = C(4650),
        x = C(6895),
        L = C(457),
        oe = C(4128),
        te = C(4004);
      let ue = (() => {
          class T {
            constructor(w, Y) {
              (this._renderer = w),
                (this._elementRef = Y),
                (this.onChange = tt => {}),
                (this.onTouched = () => {});
            }
            setProperty(w, Y) {
              this._renderer.setProperty(this._elementRef.nativeElement, w, Y);
            }
            registerOnTouched(w) {
              this.onTouched = w;
            }
            registerOnChange(w) {
              this.onChange = w;
            }
            setDisabledState(w) {
              this.setProperty('disabled', w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(s.Qsj), s.Y36(s.SBq));
            }),
            (T.ɵdir = s.lG2({ type: T })),
            T
          );
        })(),
        ve = (() => {
          class T extends ue {}
          return (
            (T.ɵfac = (function () {
              let I;
              return function (Y) {
                return (I || (I = s.n5z(T)))(Y || T);
              };
            })()),
            (T.ɵdir = s.lG2({ type: T, features: [s.qOj] })),
            T
          );
        })();
      const le = new s.OlP('NgValueAccessor'),
        pe = { provide: le, useExisting: (0, s.Gpc)(() => Ue), multi: !0 },
        Ve = new s.OlP('CompositionEventMode');
      let Ue = (() => {
        class T extends ue {
          constructor(w, Y, tt) {
            super(w, Y),
              (this._compositionMode = tt),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function ie() {
                  const T = (0, x.q)() ? (0, x.q)().getUserAgent() : '';
                  return /android (\d+)/.test(T.toLowerCase());
                })());
          }
          writeValue(w) {
            this.setProperty('value', w ?? '');
          }
          _handleInput(w) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(w);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(w) {
            (this._composing = !1), this._compositionMode && this.onChange(w);
          }
        }
        return (
          (T.ɵfac = function (w) {
            return new (w || T)(s.Y36(s.Qsj), s.Y36(s.SBq), s.Y36(Ve, 8));
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (w, Y) {
              1 & w &&
                s.NdJ('input', function (on) {
                  return Y._handleInput(on.target.value);
                })('blur', function () {
                  return Y.onTouched();
                })('compositionstart', function () {
                  return Y._compositionStart();
                })('compositionend', function (on) {
                  return Y._compositionEnd(on.target.value);
                });
            },
            features: [s._Bn([pe]), s.qOj],
          })),
          T
        );
      })();
      const at = !1;
      function vt(T) {
        return (
          null == T ||
          (('string' == typeof T || Array.isArray(T)) && 0 === T.length)
        );
      }
      function Le(T) {
        return null != T && 'number' == typeof T.length;
      }
      const _t = new s.OlP('NgValidators'),
        lt = new s.OlP('NgAsyncValidators'),
        bt =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class W {
        static min(I) {
          return (function se(T) {
            return I => {
              if (vt(I.value) || vt(T)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w < T
                ? { min: { min: T, actual: I.value } }
                : null;
            };
          })(I);
        }
        static max(I) {
          return (function ne(T) {
            return I => {
              if (vt(I.value) || vt(T)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w > T
                ? { max: { max: T, actual: I.value } }
                : null;
            };
          })(I);
        }
        static required(I) {
          return X(I);
        }
        static requiredTrue(I) {
          return we(I);
        }
        static email(I) {
          return (function nt(T) {
            return vt(T.value) || bt.test(T.value) ? null : { email: !0 };
          })(I);
        }
        static minLength(I) {
          return (function ut(T) {
            return I =>
              vt(I.value) || !Le(I.value)
                ? null
                : I.value.length < T
                ? {
                    minlength: {
                      requiredLength: T,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static maxLength(I) {
          return (function Ut(T) {
            return I =>
              Le(I.value) && I.value.length > T
                ? {
                    maxlength: {
                      requiredLength: T,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static pattern(I) {
          return (function xt(T) {
            if (!T) return Kt;
            let I, w;
            return (
              'string' == typeof T
                ? ((w = ''),
                  '^' !== T.charAt(0) && (w += '^'),
                  (w += T),
                  '$' !== T.charAt(T.length - 1) && (w += '$'),
                  (I = new RegExp(w)))
                : ((w = T.toString()), (I = T)),
              Y => {
                if (vt(Y.value)) return null;
                const tt = Y.value;
                return I.test(tt)
                  ? null
                  : { pattern: { requiredPattern: w, actualValue: tt } };
              }
            );
          })(I);
        }
        static nullValidator(I) {
          return null;
        }
        static compose(I) {
          return Re(I);
        }
        static composeAsync(I) {
          return Ge(I);
        }
      }
      function X(T) {
        return vt(T.value) ? { required: !0 } : null;
      }
      function we(T) {
        return !0 === T.value ? null : { required: !0 };
      }
      function Kt(T) {
        return null;
      }
      function At(T) {
        return null != T;
      }
      function $e(T) {
        const I = (0, s.QGY)(T) ? (0, L.D)(T) : T;
        if (at && !(0, s.CqO)(I)) {
          let w = 'Expected async validator to return Promise or Observable.';
          throw (
            ('object' == typeof T &&
              (w +=
                ' Are you using a synchronous validator where an async validator is expected?'),
            new s.vHH(-1101, w))
          );
        }
        return I;
      }
      function He(T) {
        let I = {};
        return (
          T.forEach(w => {
            I = null != w ? { ...I, ...w } : I;
          }),
          0 === Object.keys(I).length ? null : I
        );
      }
      function De(T, I) {
        return I.map(w => w(T));
      }
      function Ce(T) {
        return T.map(I =>
          (function je(T) {
            return !T.validate;
          })(I)
            ? I
            : w => I.validate(w),
        );
      }
      function Re(T) {
        if (!T) return null;
        const I = T.filter(At);
        return 0 == I.length
          ? null
          : function (w) {
              return He(De(w, I));
            };
      }
      function Ne(T) {
        return null != T ? Re(Ce(T)) : null;
      }
      function Ge(T) {
        if (!T) return null;
        const I = T.filter(At);
        return 0 == I.length
          ? null
          : function (w) {
              const Y = De(w, I).map($e);
              return (0, oe.D)(Y).pipe((0, te.U)(He));
            };
      }
      function ct(T) {
        return null != T ? Ge(Ce(T)) : null;
      }
      function Ke(T, I) {
        return null === T ? [I] : Array.isArray(T) ? [...T, I] : [T, I];
      }
      function Wt(T) {
        return T._rawValidators;
      }
      function pt(T) {
        return T._rawAsyncValidators;
      }
      function l(T) {
        return T ? (Array.isArray(T) ? T : [T]) : [];
      }
      function yn(T, I) {
        return Array.isArray(T) ? T.includes(I) : T === I;
      }
      function rt(T, I) {
        const w = l(I);
        return (
          l(T).forEach(tt => {
            yn(w, tt) || w.push(tt);
          }),
          w
        );
      }
      function ft(T, I) {
        return l(I).filter(w => !yn(T, w));
      }
      class Et {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(I) {
          (this._rawValidators = I || []),
            (this._composedValidatorFn = Ne(this._rawValidators));
        }
        _setAsyncValidators(I) {
          (this._rawAsyncValidators = I || []),
            (this._composedAsyncValidatorFn = ct(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(I) {
          this._onDestroyCallbacks.push(I);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach(I => I()),
            (this._onDestroyCallbacks = []);
        }
        reset(I) {
          this.control && this.control.reset(I);
        }
        hasError(I, w) {
          return !!this.control && this.control.hasError(I, w);
        }
        getError(I, w) {
          return this.control ? this.control.getError(I, w) : null;
        }
      }
      class mt extends Et {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class ln extends Et {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class mn {
        constructor(I) {
          this._cd = I;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let Jt = (() => {
          class T extends mn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(ln, 2));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (w, Y) {
                2 & w &&
                  s.ekj('ng-untouched', Y.isUntouched)(
                    'ng-touched',
                    Y.isTouched,
                  )('ng-pristine', Y.isPristine)('ng-dirty', Y.isDirty)(
                    'ng-valid',
                    Y.isValid,
                  )('ng-invalid', Y.isInvalid)('ng-pending', Y.isPending);
              },
              features: [s.qOj],
            })),
            T
          );
        })(),
        Lt = (() => {
          class T extends mn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(mt, 10));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (w, Y) {
                2 & w &&
                  s.ekj('ng-untouched', Y.isUntouched)(
                    'ng-touched',
                    Y.isTouched,
                  )('ng-pristine', Y.isPristine)('ng-dirty', Y.isDirty)(
                    'ng-valid',
                    Y.isValid,
                  )('ng-invalid', Y.isInvalid)('ng-pending', Y.isPending)(
                    'ng-submitted',
                    Y.isSubmitted,
                  );
              },
              features: [s.qOj],
            })),
            T
          );
        })();
      function qe(T, I) {
        return T ? `with name: '${I}'` : `at index: ${I}`;
      }
      const Ie = !1,
        Dt = 'VALID',
        et = 'INVALID',
        St = 'PENDING',
        Te = 'DISABLED';
      function F(T) {
        return (Q(T) ? T.validators : T) || null;
      }
      function M(T, I) {
        return (Q(I) ? I.asyncValidators : T) || null;
      }
      function Q(T) {
        return null != T && !Array.isArray(T) && 'object' == typeof T;
      }
      function Qe(T, I, w) {
        const Y = T.controls;
        if (!(I ? Object.keys(Y) : Y).length)
          throw new s.vHH(
            1e3,
            Ie
              ? (function Mt(T) {
                  return `\n    There are no form controls registered with this ${
                    T ? 'group' : 'array'
                  } yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;
                })(I)
              : '',
          );
        if (!Y[w])
          throw new s.vHH(
            1001,
            Ie
              ? (function Pt(T, I) {
                  return `Cannot find form control ${qe(T, I)}`;
                })(I, w)
              : '',
          );
      }
      function Tt(T, I, w) {
        T._forEachChild((Y, tt) => {
          if (void 0 === w[tt])
            throw new s.vHH(
              1002,
              Ie
                ? (function wn(T, I) {
                    return `Must supply a value for form control ${qe(T, I)}`;
                  })(I, tt)
                : '',
            );
        });
      }
      class Vt {
        constructor(I, w) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(I),
            this._assignAsyncValidators(w);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(I) {
          this._rawValidators = this._composedValidatorFn = I;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(I) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = I;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Dt;
        }
        get invalid() {
          return this.status === et;
        }
        get pending() {
          return this.status == St;
        }
        get disabled() {
          return this.status === Te;
        }
        get enabled() {
          return this.status !== Te;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : 'change';
        }
        setValidators(I) {
          this._assignValidators(I);
        }
        setAsyncValidators(I) {
          this._assignAsyncValidators(I);
        }
        addValidators(I) {
          this.setValidators(rt(I, this._rawValidators));
        }
        addAsyncValidators(I) {
          this.setAsyncValidators(rt(I, this._rawAsyncValidators));
        }
        removeValidators(I) {
          this.setValidators(ft(I, this._rawValidators));
        }
        removeAsyncValidators(I) {
          this.setAsyncValidators(ft(I, this._rawAsyncValidators));
        }
        hasValidator(I) {
          return yn(this._rawValidators, I);
        }
        hasAsyncValidator(I) {
          return yn(this._rawAsyncValidators, I);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(I = {}) {
          (this.touched = !0),
            this._parent && !I.onlySelf && this._parent.markAsTouched(I);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild(I => I.markAllAsTouched());
        }
        markAsUntouched(I = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild(w => {
              w.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        markAsDirty(I = {}) {
          (this.pristine = !1),
            this._parent && !I.onlySelf && this._parent.markAsDirty(I);
        }
        markAsPristine(I = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild(w => {
              w.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        markAsPending(I = {}) {
          (this.status = St),
            !1 !== I.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !I.onlySelf && this._parent.markAsPending(I);
        }
        disable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = Te),
            (this.errors = null),
            this._forEachChild(Y => {
              Y.disable({ ...I, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach(Y => Y(!0));
        }
        enable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = Dt),
            this._forEachChild(Y => {
              Y.enable({ ...I, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            }),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach(Y => Y(!1));
        }
        _updateAncestors(I) {
          this._parent &&
            !I.onlySelf &&
            (this._parent.updateValueAndValidity(I),
            I.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(I) {
          this._parent = I;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(I = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Dt || this.status === St) &&
                this._runAsyncValidator(I.emitEvent)),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !I.onlySelf &&
              this._parent.updateValueAndValidity(I);
        }
        _updateTreeValidity(I = { emitEvent: !0 }) {
          this._forEachChild(w => w._updateTreeValidity(I)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Te : Dt;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(I) {
          if (this.asyncValidator) {
            (this.status = St), (this._hasOwnPendingAsyncValidator = !0);
            const w = $e(this.asyncValidator(this));
            this._asyncValidationSubscription = w.subscribe(Y => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(Y, { emitEvent: I });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(I, w = {}) {
          (this.errors = I), this._updateControlsErrors(!1 !== w.emitEvent);
        }
        get(I) {
          let w = I;
          return null == w ||
            (Array.isArray(w) || (w = w.split('.')), 0 === w.length)
            ? null
            : w.reduce((Y, tt) => Y && Y._find(tt), this);
        }
        getError(I, w) {
          const Y = w ? this.get(w) : this;
          return Y && Y.errors ? Y.errors[I] : null;
        }
        hasError(I, w) {
          return !!this.getError(I, w);
        }
        get root() {
          let I = this;
          for (; I._parent; ) I = I._parent;
          return I;
        }
        _updateControlsErrors(I) {
          (this.status = this._calculateStatus()),
            I && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(I);
        }
        _initObservables() {
          (this.valueChanges = new s.vpe()), (this.statusChanges = new s.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Te
            : this.errors
            ? et
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(St)
            ? St
            : this._anyControlsHaveStatus(et)
            ? et
            : Dt;
        }
        _anyControlsHaveStatus(I) {
          return this._anyControls(w => w.status === I);
        }
        _anyControlsDirty() {
          return this._anyControls(I => I.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls(I => I.touched);
        }
        _updatePristine(I = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        _updateTouched(I = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        _registerOnCollectionChange(I) {
          this._onCollectionChange = I;
        }
        _setUpdateStrategy(I) {
          Q(I) && null != I.updateOn && (this._updateOn = I.updateOn);
        }
        _parentMarkedDirty(I) {
          return (
            !I &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(I) {
          return null;
        }
        _assignValidators(I) {
          (this._rawValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedValidatorFn = (function b(T) {
              return Array.isArray(T) ? Ne(T) : T || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(I) {
          (this._rawAsyncValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedAsyncValidatorFn = (function G(T) {
              return Array.isArray(T) ? ct(T) : T || null;
            })(this._rawAsyncValidators));
        }
      }
      class Je extends Vt {
        constructor(I, w, Y) {
          super(F(w), M(Y, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(I, w) {
          return this.controls[I]
            ? this.controls[I]
            : ((this.controls[I] = w),
              w.setParent(this),
              w._registerOnCollectionChange(this._onCollectionChange),
              w);
        }
        addControl(I, w, Y = {}) {
          this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: Y.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(I, w = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        setControl(I, w, Y = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            w && this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: Y.emitEvent }),
            this._onCollectionChange();
        }
        contains(I) {
          return this.controls.hasOwnProperty(I) && this.controls[I].enabled;
        }
        setValue(I, w = {}) {
          Tt(this, !0, I),
            Object.keys(I).forEach(Y => {
              Qe(this, !0, Y),
                this.controls[Y].setValue(I[Y], {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (Object.keys(I).forEach(Y => {
              const tt = this.controls[Y];
              tt &&
                tt.patchValue(I[Y], { onlySelf: !0, emitEvent: w.emitEvent });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = {}, w = {}) {
          this._forEachChild((Y, tt) => {
            Y.reset(I[tt], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (I, w, Y) => ((I[Y] = w.getRawValue()), I),
          );
        }
        _syncPendingControls() {
          let I = this._reduceChildren(
            !1,
            (w, Y) => !!Y._syncPendingControls() || w,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          Object.keys(this.controls).forEach(w => {
            const Y = this.controls[w];
            Y && I(Y, w);
          });
        }
        _setUpControls() {
          this._forEachChild(I => {
            I.setParent(this),
              I._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(I) {
          for (const [w, Y] of Object.entries(this.controls))
            if (this.contains(w) && I(Y)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (w, Y, tt) => (
              (Y.enabled || this.disabled) && (w[tt] = Y.value), w
            ),
          );
        }
        _reduceChildren(I, w) {
          let Y = I;
          return (
            this._forEachChild((tt, on) => {
              Y = w(Y, tt, on);
            }),
            Y
          );
        }
        _allControlsDisabled() {
          for (const I of Object.keys(this.controls))
            if (this.controls[I].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(I) {
          return this.controls.hasOwnProperty(I) ? this.controls[I] : null;
        }
      }
      class Oe extends Je {}
      const Z = new s.OlP('CallSetDisabledState', {
          providedIn: 'root',
          factory: () => Ee,
        }),
        Ee = 'always';
      function Bt(T, I, w = Ee) {
        wi(T, I),
          I.valueAccessor.writeValue(T.value),
          (T.disabled || 'always' === w) &&
            I.valueAccessor.setDisabledState?.(T.disabled),
          (function cr(T, I) {
            I.valueAccessor.registerOnChange(w => {
              (T._pendingValue = w),
                (T._pendingChange = !0),
                (T._pendingDirty = !0),
                'change' === T.updateOn && kn(T, I);
            });
          })(T, I),
          (function Gt(T, I) {
            const w = (Y, tt) => {
              I.valueAccessor.writeValue(Y), tt && I.viewToModelUpdate(Y);
            };
            T.registerOnChange(w),
              I._registerOnDestroy(() => {
                T._unregisterOnChange(w);
              });
          })(T, I),
          (function Or(T, I) {
            I.valueAccessor.registerOnTouched(() => {
              (T._pendingTouched = !0),
                'blur' === T.updateOn && T._pendingChange && kn(T, I),
                'submit' !== T.updateOn && T.markAsTouched();
            });
          })(T, I),
          (function Wn(T, I) {
            if (I.valueAccessor.setDisabledState) {
              const w = Y => {
                I.valueAccessor.setDisabledState(Y);
              };
              T.registerOnDisabledChange(w),
                I._registerOnDestroy(() => {
                  T._unregisterOnDisabledChange(w);
                });
            }
          })(T, I);
      }
      function qt(T, I, w = !0) {
        const Y = () => {};
        I.valueAccessor &&
          (I.valueAccessor.registerOnChange(Y),
          I.valueAccessor.registerOnTouched(Y)),
          _i(T, I),
          T &&
            (I._invokeOnDestroyCallbacks(),
            T._registerOnCollectionChange(() => {}));
      }
      function Dn(T, I) {
        T.forEach(w => {
          w.registerOnValidatorChange && w.registerOnValidatorChange(I);
        });
      }
      function wi(T, I) {
        const w = Wt(T);
        null !== I.validator
          ? T.setValidators(Ke(w, I.validator))
          : 'function' == typeof w && T.setValidators([w]);
        const Y = pt(T);
        null !== I.asyncValidator
          ? T.setAsyncValidators(Ke(Y, I.asyncValidator))
          : 'function' == typeof Y && T.setAsyncValidators([Y]);
        const tt = () => T.updateValueAndValidity();
        Dn(I._rawValidators, tt), Dn(I._rawAsyncValidators, tt);
      }
      function _i(T, I) {
        let w = !1;
        if (null !== T) {
          if (null !== I.validator) {
            const tt = Wt(T);
            if (Array.isArray(tt) && tt.length > 0) {
              const on = tt.filter(di => di !== I.validator);
              on.length !== tt.length && ((w = !0), T.setValidators(on));
            }
          }
          if (null !== I.asyncValidator) {
            const tt = pt(T);
            if (Array.isArray(tt) && tt.length > 0) {
              const on = tt.filter(di => di !== I.asyncValidator);
              on.length !== tt.length && ((w = !0), T.setAsyncValidators(on));
            }
          }
        }
        const Y = () => {};
        return Dn(I._rawValidators, Y), Dn(I._rawAsyncValidators, Y), w;
      }
      function kn(T, I) {
        T._pendingDirty && T.markAsDirty(),
          T.setValue(T._pendingValue, { emitModelToViewChange: !1 }),
          I.viewToModelUpdate(T._pendingValue),
          (T._pendingChange = !1);
      }
      function ni(T, I) {
        wi(T, I);
      }
      function Ni(T, I) {
        if (!T.hasOwnProperty('model')) return !1;
        const w = T.model;
        return !!w.isFirstChange() || !Object.is(I, w.currentValue);
      }
      function ui(T, I) {
        T._syncPendingControls(),
          I.forEach(w => {
            const Y = w.control;
            'submit' === Y.updateOn &&
              Y._pendingChange &&
              (w.viewToModelUpdate(Y._pendingValue), (Y._pendingChange = !1));
          });
      }
      function jt(T, I) {
        if (!I) return null;
        let w, Y, tt;
        return (
          Array.isArray(I),
          I.forEach(on => {
            on.constructor === Ue
              ? (w = on)
              : (function dr(T) {
                  return Object.getPrototypeOf(T.constructor) === ve;
                })(on)
              ? (Y = on)
              : (tt = on);
          }),
          tt || Y || w || null
        );
      }
      const hi = { provide: mt, useExisting: (0, s.Gpc)(() => Qn) },
        fi = (() => Promise.resolve())();
      let Qn = (() => {
        class T extends mt {
          constructor(w, Y, tt) {
            super(),
              (this.callSetDisabledState = tt),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new s.vpe()),
              (this.form = new Je({}, Ne(w), ct(Y)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(w) {
            fi.then(() => {
              const Y = this._findContainer(w.path);
              (w.control = Y.registerControl(w.name, w.control)),
                Bt(w.control, w, this.callSetDisabledState),
                w.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(w);
            });
          }
          getControl(w) {
            return this.form.get(w.path);
          }
          removeControl(w) {
            fi.then(() => {
              const Y = this._findContainer(w.path);
              Y && Y.removeControl(w.name), this._directives.delete(w);
            });
          }
          addFormGroup(w) {
            fi.then(() => {
              const Y = this._findContainer(w.path),
                tt = new Je({});
              ni(tt, w),
                Y.registerControl(w.name, tt),
                tt.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(w) {
            fi.then(() => {
              const Y = this._findContainer(w.path);
              Y && Y.removeControl(w.name);
            });
          }
          getFormGroup(w) {
            return this.form.get(w.path);
          }
          updateModel(w, Y) {
            fi.then(() => {
              this.form.get(w.path).setValue(Y);
            });
          }
          setValue(w) {
            this.control.setValue(w);
          }
          onSubmit(w) {
            return (
              (this.submitted = !0),
              ui(this.form, this._directives),
              this.ngSubmit.emit(w),
              'dialog' === w?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(w) {
            this.form.reset(w), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(w) {
            return w.pop(), w.length ? this.form.get(w) : this.form;
          }
        }
        return (
          (T.ɵfac = function (w) {
            return new (w || T)(s.Y36(_t, 10), s.Y36(lt, 10), s.Y36(Z, 8));
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [
              ['form', 3, 'ngNoForm', '', 3, 'formGroup', ''],
              ['ng-form'],
              ['', 'ngForm', ''],
            ],
            hostBindings: function (w, Y) {
              1 & w &&
                s.NdJ('submit', function (on) {
                  return Y.onSubmit(on);
                })('reset', function () {
                  return Y.onReset();
                });
            },
            inputs: { options: ['ngFormOptions', 'options'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [s._Bn([hi]), s.qOj],
          })),
          T
        );
      })();
      function li(T, I) {
        const w = T.indexOf(I);
        w > -1 && T.splice(w, 1);
      }
      function An(T) {
        return (
          'object' == typeof T &&
          null !== T &&
          2 === Object.keys(T).length &&
          'value' in T &&
          'disabled' in T
        );
      }
      const Mi = class extends Vt {
          constructor(I = null, w, Y) {
            super(F(w), M(Y, w)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(I),
              this._setUpdateStrategy(w),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Q(w) &&
                (w.nonNullable || w.initialValueIsDefault) &&
                (this.defaultValue = An(I) ? I.value : I);
          }
          setValue(I, w = {}) {
            (this.value = this._pendingValue = I),
              this._onChange.length &&
                !1 !== w.emitModelToViewChange &&
                this._onChange.forEach(Y =>
                  Y(this.value, !1 !== w.emitViewToModelChange),
                ),
              this.updateValueAndValidity(w);
          }
          patchValue(I, w = {}) {
            this.setValue(I, w);
          }
          reset(I = this.defaultValue, w = {}) {
            this._applyFormState(I),
              this.markAsPristine(w),
              this.markAsUntouched(w),
              this.setValue(this.value, w),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(I) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(I) {
            this._onChange.push(I);
          }
          _unregisterOnChange(I) {
            li(this._onChange, I);
          }
          registerOnDisabledChange(I) {
            this._onDisabledChange.push(I);
          }
          _unregisterOnDisabledChange(I) {
            li(this._onDisabledChange, I);
          }
          _forEachChild(I) {}
          _syncPendingControls() {
            return !(
              'submit' !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(I) {
            An(I)
              ? ((this.value = this._pendingValue = I.value),
                I.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = I);
          }
        },
        Li = { provide: ln, useExisting: (0, s.Gpc)(() => or) },
        hr = (() => Promise.resolve())();
      let or = (() => {
          class T extends ln {
            constructor(w, Y, tt, on, di, ht) {
              super(),
                (this._changeDetectorRef = di),
                (this.callSetDisabledState = ht),
                (this.control = new Mi()),
                (this._registered = !1),
                (this.update = new s.vpe()),
                (this._parent = w),
                this._setValidators(Y),
                this._setAsyncValidators(tt),
                (this.valueAccessor = jt(0, on));
            }
            ngOnChanges(w) {
              if ((this._checkForErrors(), !this._registered || 'name' in w)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const Y = w.name.previousValue;
                  this.formDirective.removeControl({
                    name: Y,
                    path: this._getPath(Y),
                  });
                }
                this._setUpControl();
              }
              'isDisabled' in w && this._updateDisabled(w),
                Ni(w, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(w) {
              (this.viewModel = w), this.update.emit(w);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Bt(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(w) {
              hr.then(() => {
                this.control.setValue(w, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(w) {
              const Y = w.isDisabled.currentValue,
                tt = 0 !== Y && (0, s.D6c)(Y);
              hr.then(() => {
                tt && !this.control.disabled
                  ? this.control.disable()
                  : !tt && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(w) {
              return this._parent
                ? (function dt(T, I) {
                    return [...I.path, T];
                  })(w, this._parent)
                : [w];
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(
                s.Y36(mt, 9),
                s.Y36(_t, 10),
                s.Y36(lt, 10),
                s.Y36(le, 10),
                s.Y36(s.sBO, 8),
                s.Y36(Z, 8),
              );
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  '',
                  'ngModel',
                  '',
                  3,
                  'formControlName',
                  '',
                  3,
                  'formControl',
                  '',
                ],
              ],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [s._Bn([Li]), s.qOj, s.TTD],
            })),
            T
          );
        })(),
        jn = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                ['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', ''],
              ],
              hostAttrs: ['novalidate', ''],
            })),
            T
          );
        })(),
        Ln = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({})),
            T
          );
        })();
      const We = new s.OlP('NgModelWithFormControlWarning'),
        It = { provide: ln, useExisting: (0, s.Gpc)(() => kt) };
      let kt = (() => {
        class T extends ln {
          set isDisabled(w) {}
          constructor(w, Y, tt, on, di) {
            super(),
              (this._ngModelWarningConfig = on),
              (this.callSetDisabledState = di),
              (this.update = new s.vpe()),
              (this._ngModelWarningSent = !1),
              this._setValidators(w),
              this._setAsyncValidators(Y),
              (this.valueAccessor = jt(0, tt));
          }
          ngOnChanges(w) {
            if (this._isControlChanged(w)) {
              const Y = w.form.previousValue;
              Y && qt(Y, this, !1),
                Bt(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Ni(w, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && qt(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(w) {
            (this.viewModel = w), this.update.emit(w);
          }
          _isControlChanged(w) {
            return w.hasOwnProperty('form');
          }
        }
        return (
          (T._ngModelWarningSentOnce = !1),
          (T.ɵfac = function (w) {
            return new (w || T)(
              s.Y36(_t, 10),
              s.Y36(lt, 10),
              s.Y36(le, 10),
              s.Y36(We, 8),
              s.Y36(Z, 8),
            );
          }),
          (T.ɵdir = s.lG2({
            type: T,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [s._Bn([It]), s.qOj, s.TTD],
          })),
          T
        );
      })();
      const un = { provide: mt, useExisting: (0, s.Gpc)(() => bn) };
      let bn = (() => {
          class T extends mt {
            constructor(w, Y, tt) {
              super(),
                (this.callSetDisabledState = tt),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new s.vpe()),
                this._setValidators(w),
                this._setAsyncValidators(Y);
            }
            ngOnChanges(w) {
              this._checkFormPresent(),
                w.hasOwnProperty('form') &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (_i(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(w) {
              const Y = this.form.get(w.path);
              return (
                Bt(Y, w, this.callSetDisabledState),
                Y.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(w),
                Y
              );
            }
            getControl(w) {
              return this.form.get(w.path);
            }
            removeControl(w) {
              qt(w.control || null, w, !1),
                (function hn(T, I) {
                  const w = T.indexOf(I);
                  w > -1 && T.splice(w, 1);
                })(this.directives, w);
            }
            addFormGroup(w) {
              this._setUpFormContainer(w);
            }
            removeFormGroup(w) {
              this._cleanUpFormContainer(w);
            }
            getFormGroup(w) {
              return this.form.get(w.path);
            }
            addFormArray(w) {
              this._setUpFormContainer(w);
            }
            removeFormArray(w) {
              this._cleanUpFormContainer(w);
            }
            getFormArray(w) {
              return this.form.get(w.path);
            }
            updateModel(w, Y) {
              this.form.get(w.path).setValue(Y);
            }
            onSubmit(w) {
              return (
                (this.submitted = !0),
                ui(this.form, this.directives),
                this.ngSubmit.emit(w),
                'dialog' === w?.target?.method
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(w) {
              this.form.reset(w), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach(w => {
                const Y = w.control,
                  tt = this.form.get(w.path);
                Y !== tt &&
                  (qt(Y || null, w),
                  (T => T instanceof Mi)(tt) &&
                    (Bt(tt, w, this.callSetDisabledState), (w.control = tt)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(w) {
              const Y = this.form.get(w.path);
              ni(Y, w), Y.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(w) {
              if (this.form) {
                const Y = this.form.get(w.path);
                Y &&
                  (function nn(T, I) {
                    return _i(T, I);
                  })(Y, w) &&
                  Y.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              wi(this.form, this), this._oldForm && _i(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)(s.Y36(_t, 10), s.Y36(lt, 10), s.Y36(Z, 8));
            }),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [['', 'formGroup', '']],
              hostBindings: function (w, Y) {
                1 & w &&
                  s.NdJ('submit', function (on) {
                    return Y.onSubmit(on);
                  })('reset', function () {
                    return Y.onReset();
                  });
              },
              inputs: { form: ['formGroup', 'form'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [s._Bn([un]), s.qOj, s.TTD],
            })),
            T
          );
        })(),
        Dr = (() => {
          class T {
            constructor() {
              this._validator = Kt;
            }
            ngOnChanges(w) {
              if (this.inputName in w) {
                const Y = this.normalizeInput(w[this.inputName].currentValue);
                (this._enabled = this.enabled(Y)),
                  (this._validator = this._enabled
                    ? this.createValidator(Y)
                    : Kt),
                  this._onChange && this._onChange();
              }
            }
            validate(w) {
              return this._validator(w);
            }
            registerOnValidatorChange(w) {
              this._onChange = w;
            }
            enabled(w) {
              return null != w;
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵdir = s.lG2({ type: T, features: [s.TTD] })),
            T
          );
        })();
      const ro = { provide: _t, useExisting: (0, s.Gpc)(() => ar), multi: !0 },
        $r = { provide: _t, useExisting: (0, s.Gpc)(() => oo), multi: !0 };
      let ar = (() => {
          class T extends Dr {
            constructor() {
              super(...arguments),
                (this.inputName = 'required'),
                (this.normalizeInput = s.D6c),
                (this.createValidator = w => X);
            }
            enabled(w) {
              return w;
            }
          }
          return (
            (T.ɵfac = (function () {
              let I;
              return function (Y) {
                return (I || (I = s.n5z(T)))(Y || T);
              };
            })()),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  '',
                  'required',
                  '',
                  'formControlName',
                  '',
                  3,
                  'type',
                  'checkbox',
                ],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (w, Y) {
                2 & w && s.uIk('required', Y._enabled ? '' : null);
              },
              inputs: { required: 'required' },
              features: [s._Bn([ro]), s.qOj],
            })),
            T
          );
        })(),
        oo = (() => {
          class T extends ar {
            constructor() {
              super(...arguments), (this.createValidator = w => we);
            }
          }
          return (
            (T.ɵfac = (function () {
              let I;
              return function (Y) {
                return (I || (I = s.n5z(T)))(Y || T);
              };
            })()),
            (T.ɵdir = s.lG2({
              type: T,
              selectors: [
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControlName',
                  '',
                ],
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControl',
                  '',
                ],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (w, Y) {
                2 & w && s.uIk('required', Y._enabled ? '' : null);
              },
              features: [s._Bn([$r]), s.qOj],
            })),
            T
          );
        })(),
        Wr = (() => {
          class T {}
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [Ln] })),
            T
          );
        })();
      class Er extends Vt {
        constructor(I, w, Y) {
          super(F(w), M(Y, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(I) {
          return this.controls[this._adjustIndex(I)];
        }
        push(I, w = {}) {
          this.controls.push(I),
            this._registerControl(I),
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        insert(I, w, Y = {}) {
          this.controls.splice(I, 0, w),
            this._registerControl(w),
            this.updateValueAndValidity({ emitEvent: Y.emitEvent });
        }
        removeAt(I, w = {}) {
          let Y = this._adjustIndex(I);
          Y < 0 && (Y = 0),
            this.controls[Y] &&
              this.controls[Y]._registerOnCollectionChange(() => {}),
            this.controls.splice(Y, 1),
            this.updateValueAndValidity({ emitEvent: w.emitEvent });
        }
        setControl(I, w, Y = {}) {
          let tt = this._adjustIndex(I);
          tt < 0 && (tt = 0),
            this.controls[tt] &&
              this.controls[tt]._registerOnCollectionChange(() => {}),
            this.controls.splice(tt, 1),
            w && (this.controls.splice(tt, 0, w), this._registerControl(w)),
            this.updateValueAndValidity({ emitEvent: Y.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(I, w = {}) {
          Tt(this, !1, I),
            I.forEach((Y, tt) => {
              Qe(this, !1, tt),
                this.at(tt).setValue(Y, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (I.forEach((Y, tt) => {
              this.at(tt) &&
                this.at(tt).patchValue(Y, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = [], w = {}) {
          this._forEachChild((Y, tt) => {
            Y.reset(I[tt], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this.controls.map(I => I.getRawValue());
        }
        clear(I = {}) {
          this.controls.length < 1 ||
            (this._forEachChild(w => w._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: I.emitEvent }));
        }
        _adjustIndex(I) {
          return I < 0 ? I + this.length : I;
        }
        _syncPendingControls() {
          let I = this.controls.reduce(
            (w, Y) => !!Y._syncPendingControls() || w,
            !1,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          this.controls.forEach((w, Y) => {
            I(w, Y);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter(I => I.enabled || this.disabled)
            .map(I => I.value);
        }
        _anyControls(I) {
          return this.controls.some(w => w.enabled && I(w));
        }
        _setUpControls() {
          this._forEachChild(I => this._registerControl(I));
        }
        _allControlsDisabled() {
          for (const I of this.controls) if (I.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(I) {
          I.setParent(this),
            I._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(I) {
          return this.at(I) ?? null;
        }
      }
      function Br(T) {
        return (
          !!T &&
          (void 0 !== T.asyncValidators ||
            void 0 !== T.validators ||
            void 0 !== T.updateOn)
        );
      }
      let ko = (() => {
          class T {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const w = new T();
              return (w.useNonNullable = !0), w;
            }
            group(w, Y = null) {
              const tt = this._reduceControls(w);
              let on = {};
              return (
                Br(Y)
                  ? (on = Y)
                  : null !== Y &&
                    ((on.validators = Y.validator),
                    (on.asyncValidators = Y.asyncValidator)),
                new Je(tt, on)
              );
            }
            record(w, Y = null) {
              const tt = this._reduceControls(w);
              return new Oe(tt, Y);
            }
            control(w, Y, tt) {
              let on = {};
              return this.useNonNullable
                ? (Br(Y)
                    ? (on = Y)
                    : ((on.validators = Y), (on.asyncValidators = tt)),
                  new Mi(w, { ...on, nonNullable: !0 }))
                : new Mi(w, Y, tt);
            }
            array(w, Y, tt) {
              const on = w.map(di => this._createControl(di));
              return new Er(on, Y, tt);
            }
            _reduceControls(w) {
              const Y = {};
              return (
                Object.keys(w).forEach(tt => {
                  Y[tt] = this._createControl(w[tt]);
                }),
                Y
              );
            }
            _createControl(w) {
              return w instanceof Mi || w instanceof Vt
                ? w
                : Array.isArray(w)
                ? this.control(
                    w[0],
                    w.length > 1 ? w[1] : null,
                    w.length > 2 ? w[2] : null,
                  )
                : this.control(w);
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵprov = s.Yz7({
              token: T,
              factory: T.ɵfac,
              providedIn: 'root',
            })),
            T
          );
        })(),
        vn = (() => {
          class T {
            static withConfig(w) {
              return {
                ngModule: T,
                providers: [
                  { provide: Z, useValue: w.callSetDisabledState ?? Ee },
                ],
              };
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [Wr] })),
            T
          );
        })(),
        fr = (() => {
          class T {
            static withConfig(w) {
              return {
                ngModule: T,
                providers: [
                  {
                    provide: We,
                    useValue: w.warnOnNgModelWithFormControl ?? 'always',
                  },
                  { provide: Z, useValue: w.callSetDisabledState ?? Ee },
                ],
              };
            }
          }
          return (
            (T.ɵfac = function (w) {
              return new (w || T)();
            }),
            (T.ɵmod = s.oAB({ type: T })),
            (T.ɵinj = s.cJS({ imports: [Wr] })),
            T
          );
        })();
    },
    4859: (Rt, Pe, C) => {
      C.d(Pe, {
        RK: () => je,
        cs: () => At,
        lW: () => we,
        nh: () => $e,
        ot: () => Re,
      });
      var s = C(3353),
        x = C(4650),
        L = C(2687),
        oe = C(3238),
        te = C(1281);
      const ue = ['mat-button', ''],
        ve = [
          [
            ['', 8, 'material-icons', 3, 'iconPositionEnd', ''],
            ['mat-icon', 3, 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 3, 'iconPositionEnd', ''],
          ],
          '*',
          [
            ['', 'iconPositionEnd', '', 8, 'material-icons'],
            ['mat-icon', 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 'iconPositionEnd', ''],
          ],
        ],
        le = [
          '.material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])',
          '*',
          '.material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]',
        ],
        pe = ['mat-fab', ''],
        ie = ['mat-mini-fab', ''],
        Ue = ['mat-icon-button', ''],
        at = ['*'],
        lt = [
          {
            selector: 'mat-button',
            mdcClasses: ['mdc-button', 'mat-mdc-button'],
          },
          {
            selector: 'mat-flat-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--unelevated',
              'mat-mdc-unelevated-button',
            ],
          },
          {
            selector: 'mat-raised-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--raised',
              'mat-mdc-raised-button',
            ],
          },
          {
            selector: 'mat-stroked-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--outlined',
              'mat-mdc-outlined-button',
            ],
          },
          { selector: 'mat-fab', mdcClasses: ['mdc-fab', 'mat-mdc-fab'] },
          {
            selector: 'mat-mini-fab',
            mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],
          },
          {
            selector: 'mat-icon-button',
            mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],
          },
        ],
        bt = (0, oe.pj)(
          (0, oe.Id)(
            (0, oe.Kr)(
              class {
                constructor(Ne) {
                  this._elementRef = Ne;
                }
              },
            ),
          ),
        );
      let W = (() => {
          class Ne extends bt {
            constructor(ct, Ke, Wt, pt) {
              super(ct),
                (this._platform = Ke),
                (this._ngZone = Wt),
                (this._animationMode = pt),
                (this._focusMonitor = (0, x.f3M)(L.tE)),
                (this._isFab = !1);
              const l = ct.nativeElement.classList;
              for (const yn of lt)
                this._hasHostAttributes(yn.selector) &&
                  yn.mdcClasses.forEach(rt => {
                    l.add(rt);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(ct = 'program', Ke) {
              ct
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    ct,
                    Ke,
                  )
                : this._elementRef.nativeElement.focus(Ke);
            }
            _hasHostAttributes(...ct) {
              return ct.some(Ke =>
                this._elementRef.nativeElement.hasAttribute(Ke),
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (Ne.ɵfac = function (ct) {
              x.$Z();
            }),
            (Ne.ɵdir = x.lG2({
              type: Ne,
              viewQuery: function (ct, Ke) {
                if ((1 & ct && x.Gf(oe.wG, 5), 2 & ct)) {
                  let Wt;
                  x.iGM((Wt = x.CRH())) && (Ke.ripple = Wt.first);
                }
              },
              features: [x.qOj],
            })),
            Ne
          );
        })(),
        we = (() => {
          class Ne extends W {
            constructor(ct, Ke, Wt, pt) {
              super(ct, Ke, Wt, pt);
            }
          }
          return (
            (Ne.ɵfac = function (ct) {
              return new (ct || Ne)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Ne.ɵcmp = x.Xpm({
              type: Ne,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-flat-button', ''],
                ['button', 'mat-stroked-button', ''],
              ],
              hostVars: 7,
              hostBindings: function (ct, Ke) {
                2 & ct &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: ue,
              ngContentSelectors: le,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ct, Ke) {
                1 & ct &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ct &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ne
          );
        })();
      const ut = new x.OlP('mat-mdc-fab-default-options', {
        providedIn: 'root',
        factory: Ut,
      });
      function Ut() {
        return { color: 'accent' };
      }
      const xt = Ut();
      let At = (() => {
          class Ne extends W {
            get extended() {
              return this._extended;
            }
            set extended(ct) {
              this._extended = (0, te.Ig)(ct);
            }
            constructor(ct, Ke, Wt, pt, l) {
              super(ct, Ke, Wt, pt),
                (this._options = l),
                (this._isFab = !0),
                (this._options = this._options || xt),
                (this.color = this.defaultColor =
                  this._options.color || xt.color);
            }
          }
          return (
            (Ne.ɵfac = function (ct) {
              return new (ct || Ne)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(ut, 8),
              );
            }),
            (Ne.ɵcmp = x.Xpm({
              type: Ne,
              selectors: [['button', 'mat-fab', '']],
              hostVars: 11,
              hostBindings: function (ct, Ke) {
                2 & ct &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0)(
                    'mdc-fab--extended',
                    Ke.extended,
                  )('mat-mdc-extended-fab', Ke.extended));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                extended: 'extended',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: pe,
              ngContentSelectors: le,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ct, Ke) {
                1 & ct &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ct &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ne
          );
        })(),
        $e = (() => {
          class Ne extends W {
            constructor(ct, Ke, Wt, pt, l) {
              super(ct, Ke, Wt, pt),
                (this._options = l),
                (this._isFab = !0),
                (this._options = this._options || xt),
                (this.color = this.defaultColor =
                  this._options.color || xt.color);
            }
          }
          return (
            (Ne.ɵfac = function (ct) {
              return new (ct || Ne)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(ut, 8),
              );
            }),
            (Ne.ɵcmp = x.Xpm({
              type: Ne,
              selectors: [['button', 'mat-mini-fab', '']],
              hostVars: 7,
              hostBindings: function (ct, Ke) {
                2 & ct &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: ie,
              ngContentSelectors: le,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ct, Ke) {
                1 & ct &&
                  (x.F$t(ve),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ct &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ne
          );
        })(),
        je = (() => {
          class Ne extends W {
            constructor(ct, Ke, Wt, pt) {
              super(ct, Ke, Wt, pt);
            }
          }
          return (
            (Ne.ɵfac = function (ct) {
              return new (ct || Ne)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Ne.ɵcmp = x.Xpm({
              type: Ne,
              selectors: [['button', 'mat-icon-button', '']],
              hostVars: 7,
              hostBindings: function (ct, Ke) {
                2 & ct &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: Ue,
              ngContentSelectors: at,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  'mat-mdc-button-persistent-ripple',
                  'mdc-icon-button__ripple',
                ],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ct, Ke) {
                1 & ct &&
                  (x.F$t(),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x._UZ(2, 'span', 1)(3, 'span', 2)(4, 'span', 3)),
                  2 & ct &&
                    (x.xp6(3),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleCentered',
                      !0,
                    )('matRippleTrigger', Ke._elementRef.nativeElement));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ne
          );
        })(),
        Re = (() => {
          class Ne {}
          return (
            (Ne.ɵfac = function (ct) {
              return new (ct || Ne)();
            }),
            (Ne.ɵmod = x.oAB({ type: Ne })),
            (Ne.ɵinj = x.cJS({ imports: [oe.BQ, oe.si, oe.BQ] })),
            Ne
          );
        })();
    },
    3238: (Rt, Pe, C) => {
      C.d(Pe, {
        _A: () => je,
        rD: () => l,
        sG: () => Ce,
        Ad: () => He,
        K7: () => fe,
        HF: () => H,
        BQ: () => ne,
        XK: () => Wt,
        ey: () => Ie,
        Ng: () => St,
        wG: () => Ae,
        si: () => ze,
        hu: () => pt,
        CB: () => Dt,
        jH: () => et,
        pj: () => Ut,
        Kr: () => xt,
        Id: () => ut,
        FD: () => At,
        sb: () => Kt,
      });
      var s = C(4650),
        x = C(2687),
        L = C(445),
        te = C(6895),
        ue = C(3353),
        ve = C(1281),
        le = C(7579),
        he = C(9521);
      const ie = ['text'];
      function Ve(Te, F) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 6), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('state', b.selected ? 'checked' : 'unchecked')(
            'disabled',
            b.disabled,
          );
        }
      }
      function Ue(Te, F) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 7), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('disabled', b.disabled);
        }
      }
      function at(Te, F) {
        if ((1 & Te && (s.TgZ(0, 'span', 8), s._uU(1), s.qZA()), 2 & Te)) {
          const b = s.oxw();
          s.xp6(1), s.hij('(', b.group.label, ')');
        }
      }
      const vt = [[['mat-icon']], '*'],
        Le = ['mat-icon', '*'],
        se = new s.OlP('mat-sanity-checks', {
          providedIn: 'root',
          factory: function W() {
            return !0;
          },
        });
      let ne = (() => {
        class Te {
          constructor(b, M, G) {
            (this._sanityChecks = M),
              (this._document = G),
              (this._hasDoneGlobalChecks = !1),
              b._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(b) {
            return (
              !(0, ue.Oy)() &&
              ('boolean' == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[b])
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG(x.qm), s.LFG(se, 8), s.LFG(te.K0));
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [L.vT, L.vT] })),
          Te
        );
      })();
      function ut(Te) {
        return class extends Te {
          get disabled() {
            return this._disabled;
          }
          set disabled(F) {
            this._disabled = (0, ve.Ig)(F);
          }
          constructor(...F) {
            super(...F), (this._disabled = !1);
          }
        };
      }
      function Ut(Te, F) {
        return class extends Te {
          get color() {
            return this._color;
          }
          set color(b) {
            const M = b || this.defaultColor;
            M !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`,
                ),
              M && this._elementRef.nativeElement.classList.add(`mat-${M}`),
              (this._color = M));
          }
          constructor(...b) {
            super(...b), (this.defaultColor = F), (this.color = F);
          }
        };
      }
      function xt(Te) {
        return class extends Te {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(F) {
            this._disableRipple = (0, ve.Ig)(F);
          }
          constructor(...F) {
            super(...F), (this._disableRipple = !1);
          }
        };
      }
      function Kt(Te, F = 0) {
        return class extends Te {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(b) {
            this._tabIndex = null != b ? (0, ve.su)(b) : this.defaultTabIndex;
          }
          constructor(...b) {
            super(...b), (this._tabIndex = F), (this.defaultTabIndex = F);
          }
        };
      }
      function At(Te) {
        return class extends Te {
          updateErrorState() {
            const F = this.errorState,
              Q = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm,
              );
            Q !== F && ((this.errorState = Q), this.stateChanges.next());
          }
          constructor(...F) {
            super(...F), (this.errorState = !1);
          }
        };
      }
      const He = new s.OlP('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function De() {
          return (0, s.f3M)(s.soG);
        },
      });
      class je {
        constructor() {
          (this._localeChanges = new le.x()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(F) {
          return this.isDateInstance(F) && this.isValid(F) ? F : null;
        }
        deserialize(F) {
          return null == F || (this.isDateInstance(F) && this.isValid(F))
            ? F
            : this.invalid();
        }
        setLocale(F) {
          (this.locale = F), this._localeChanges.next();
        }
        compareDate(F, b) {
          return (
            this.getYear(F) - this.getYear(b) ||
            this.getMonth(F) - this.getMonth(b) ||
            this.getDate(F) - this.getDate(b)
          );
        }
        sameDate(F, b) {
          if (F && b) {
            let M = this.isValid(F),
              G = this.isValid(b);
            return M && G ? !this.compareDate(F, b) : M == G;
          }
          return F == b;
        }
        clampDate(F, b, M) {
          return b && this.compareDate(F, b) < 0
            ? b
            : M && this.compareDate(F, M) > 0
            ? M
            : F;
        }
      }
      const Ce = new s.OlP('mat-date-formats'),
        Re =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function Ne(Te, F) {
        const b = Array(Te);
        for (let M = 0; M < Te; M++) b[M] = F(M);
        return b;
      }
      let Ge = (() => {
        class Te extends je {
          constructor(b, M) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(b);
          }
          getYear(b) {
            return b.getFullYear();
          }
          getMonth(b) {
            return b.getMonth();
          }
          getDate(b) {
            return b.getDate();
          }
          getDayOfWeek(b) {
            return b.getDay();
          }
          getMonthNames(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              month: b,
              timeZone: 'utc',
            });
            return Ne(12, G => this._format(M, new Date(2017, G, 1)));
          }
          getDateNames() {
            const b = new Intl.DateTimeFormat(this.locale, {
              day: 'numeric',
              timeZone: 'utc',
            });
            return Ne(31, M => this._format(b, new Date(2017, 0, M + 1)));
          }
          getDayOfWeekNames(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              weekday: b,
              timeZone: 'utc',
            });
            return Ne(7, G => this._format(M, new Date(2017, 0, G + 1)));
          }
          getYearName(b) {
            const M = new Intl.DateTimeFormat(this.locale, {
              year: 'numeric',
              timeZone: 'utc',
            });
            return this._format(M, b);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(b) {
            return this.getDate(
              this._createDateWithOverflow(
                this.getYear(b),
                this.getMonth(b) + 1,
                0,
              ),
            );
          }
          clone(b) {
            return new Date(b.getTime());
          }
          createDate(b, M, G) {
            let Q = this._createDateWithOverflow(b, M, G);
            return Q.getMonth(), Q;
          }
          today() {
            return new Date();
          }
          parse(b, M) {
            return 'number' == typeof b
              ? new Date(b)
              : b
              ? new Date(Date.parse(b))
              : null;
          }
          format(b, M) {
            if (!this.isValid(b))
              throw Error('NativeDateAdapter: Cannot format invalid date.');
            const G = new Intl.DateTimeFormat(this.locale, {
              ...M,
              timeZone: 'utc',
            });
            return this._format(G, b);
          }
          addCalendarYears(b, M) {
            return this.addCalendarMonths(b, 12 * M);
          }
          addCalendarMonths(b, M) {
            let G = this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b) + M,
              this.getDate(b),
            );
            return (
              this.getMonth(G) != (((this.getMonth(b) + M) % 12) + 12) % 12 &&
                (G = this._createDateWithOverflow(
                  this.getYear(G),
                  this.getMonth(G),
                  0,
                )),
              G
            );
          }
          addCalendarDays(b, M) {
            return this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b),
              this.getDate(b) + M,
            );
          }
          toIso8601(b) {
            return [
              b.getUTCFullYear(),
              this._2digit(b.getUTCMonth() + 1),
              this._2digit(b.getUTCDate()),
            ].join('-');
          }
          deserialize(b) {
            if ('string' == typeof b) {
              if (!b) return null;
              if (Re.test(b)) {
                let M = new Date(b);
                if (this.isValid(M)) return M;
              }
            }
            return super.deserialize(b);
          }
          isDateInstance(b) {
            return b instanceof Date;
          }
          isValid(b) {
            return !isNaN(b.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(b, M, G) {
            const Q = new Date();
            return Q.setFullYear(b, M, G), Q.setHours(0, 0, 0, 0), Q;
          }
          _2digit(b) {
            return ('00' + b).slice(-2);
          }
          _format(b, M) {
            const G = new Date();
            return (
              G.setUTCFullYear(M.getFullYear(), M.getMonth(), M.getDate()),
              G.setUTCHours(
                M.getHours(),
                M.getMinutes(),
                M.getSeconds(),
                M.getMilliseconds(),
              ),
              b.format(G)
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG(He, 8), s.LFG(ue.t4));
          }),
          (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
          Te
        );
      })();
      const ct = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let Ke = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ providers: [{ provide: je, useClass: Ge }] })),
            Te
          );
        })(),
        Wt = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({
              providers: [{ provide: Ce, useValue: ct }],
              imports: [Ke],
            })),
            Te
          );
        })(),
        pt = (() => {
          class Te {
            isErrorState(b, M) {
              return !!(b && b.invalid && (b.dirty || (M && M.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
            Te
          );
        })(),
        l = (() => {
          class Te {
            isErrorState(b, M) {
              return !!(b && b.invalid && (b.touched || (M && M.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({
              token: Te,
              factory: Te.ɵfac,
              providedIn: 'root',
            })),
            Te
          );
        })();
      class mt {
        constructor(F, b, M, G = !1) {
          (this._renderer = F),
            (this.element = b),
            (this.config = M),
            (this._animationForciblyDisabledThroughCss = G),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const ln = (0, ue.i$)({ passive: !0, capture: !0 });
      class mn {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = F => {
              const b = (0, ue.sA)(F);
              b &&
                this._events.get(F.type)?.forEach((M, G) => {
                  (G === b || G.contains(b)) &&
                    M.forEach(Q => Q.handleEvent(F));
                });
            });
        }
        addHandler(F, b, M, G) {
          const Q = this._events.get(b);
          if (Q) {
            const Qe = Q.get(M);
            Qe ? Qe.add(G) : Q.set(M, new Set([G]));
          } else
            this._events.set(b, new Map([[M, new Set([G])]])),
              F.runOutsideAngular(() => {
                document.addEventListener(b, this._delegateEventHandler, ln);
              });
        }
        removeHandler(F, b, M) {
          const G = this._events.get(F);
          if (!G) return;
          const Q = G.get(b);
          Q &&
            (Q.delete(M),
            0 === Q.size && G.delete(b),
            0 === G.size &&
              (this._events.delete(F),
              document.removeEventListener(F, this._delegateEventHandler, ln)));
        }
      }
      const dn = { enterDuration: 225, exitDuration: 150 },
        Jt = (0, ue.i$)({ passive: !0, capture: !0 }),
        Lt = ['mousedown', 'touchstart'],
        Pn = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class ot {
        constructor(F, b, M, G) {
          (this._target = F),
            (this._ngZone = b),
            (this._platform = G),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            G.isBrowser && (this._containerElement = (0, ve.fI)(M));
        }
        fadeInRipple(F, b, M = {}) {
          const G = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            Q = { ...dn, ...M.animation };
          M.centered &&
            ((F = G.left + G.width / 2), (b = G.top + G.height / 2));
          const Qe =
              M.radius ||
              (function z(Te, F, b) {
                const M = Math.max(
                    Math.abs(Te - b.left),
                    Math.abs(Te - b.right),
                  ),
                  G = Math.max(Math.abs(F - b.top), Math.abs(F - b.bottom));
                return Math.sqrt(M * M + G * G);
              })(F, b, G),
            Tt = F - G.left,
            Vt = b - G.top,
            Je = Q.enterDuration,
            Ft = document.createElement('div');
          Ft.classList.add('mat-ripple-element'),
            (Ft.style.left = Tt - Qe + 'px'),
            (Ft.style.top = Vt - Qe + 'px'),
            (Ft.style.height = 2 * Qe + 'px'),
            (Ft.style.width = 2 * Qe + 'px'),
            null != M.color && (Ft.style.backgroundColor = M.color),
            (Ft.style.transitionDuration = `${Je}ms`),
            this._containerElement.appendChild(Ft);
          const en = window.getComputedStyle(Ft),
            be = en.transitionDuration,
            Z =
              'none' === en.transitionProperty ||
              '0s' === be ||
              '0s, 0s' === be ||
              (0 === G.width && 0 === G.height),
            Ee = new mt(this, Ft, M, Z);
          (Ft.style.transform = 'scale3d(1, 1, 1)'),
            (Ee.state = 0),
            M.persistent || (this._mostRecentTransientRipple = Ee);
          let dt = null;
          return (
            !Z &&
              (Je || Q.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const Bt = () => this._finishRippleTransition(Ee),
                  qt = () => this._destroyRipple(Ee);
                Ft.addEventListener('transitionend', Bt),
                  Ft.addEventListener('transitioncancel', qt),
                  (dt = { onTransitionEnd: Bt, onTransitionCancel: qt });
              }),
            this._activeRipples.set(Ee, dt),
            (Z || !Je) && this._finishRippleTransition(Ee),
            Ee
          );
        }
        fadeOutRipple(F) {
          if (2 === F.state || 3 === F.state) return;
          const b = F.element,
            M = { ...dn, ...F.config.animation };
          (b.style.transitionDuration = `${M.exitDuration}ms`),
            (b.style.opacity = '0'),
            (F.state = 2),
            (F._animationForciblyDisabledThroughCss || !M.exitDuration) &&
              this._finishRippleTransition(F);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach(F => F.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach(F => {
            F.config.persistent || F.fadeOut();
          });
        }
        setupTriggerEvents(F) {
          const b = (0, ve.fI)(F);
          !this._platform.isBrowser ||
            !b ||
            b === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = b),
            Lt.forEach(M => {
              ot._eventManager.addHandler(this._ngZone, M, b, this);
            }));
        }
        handleEvent(F) {
          'mousedown' === F.type
            ? this._onMousedown(F)
            : 'touchstart' === F.type
            ? this._onTouchStart(F)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                Pn.forEach(b => {
                  this._triggerElement.addEventListener(b, this, Jt);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(F) {
          0 === F.state
            ? this._startFadeOutTransition(F)
            : 2 === F.state && this._destroyRipple(F);
        }
        _startFadeOutTransition(F) {
          const b = F === this._mostRecentTransientRipple,
            { persistent: M } = F.config;
          (F.state = 1), !M && (!b || !this._isPointerDown) && F.fadeOut();
        }
        _destroyRipple(F) {
          const b = this._activeRipples.get(F) ?? null;
          this._activeRipples.delete(F),
            this._activeRipples.size || (this._containerRect = null),
            F === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (F.state = 3),
            null !== b &&
              (F.element.removeEventListener(
                'transitionend',
                b.onTransitionEnd,
              ),
              F.element.removeEventListener(
                'transitioncancel',
                b.onTransitionCancel,
              )),
            F.element.remove();
        }
        _onMousedown(F) {
          const b = (0, x.X6)(F),
            M =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !b &&
            !M &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(F.clientX, F.clientY, this._target.rippleConfig));
        }
        _onTouchStart(F) {
          if (!this._target.rippleDisabled && !(0, x.yG)(F)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const b = F.changedTouches;
            for (let M = 0; M < b.length; M++)
              this.fadeInRipple(
                b[M].clientX,
                b[M].clientY,
                this._target.rippleConfig,
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach(F => {
              !F.config.persistent &&
                (1 === F.state ||
                  (F.config.terminateOnPointerUp && 0 === F.state)) &&
                F.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const F = this._triggerElement;
          F &&
            (Lt.forEach(b => ot._eventManager.removeHandler(b, F, this)),
            this._pointerUpEventsRegistered &&
              Pn.forEach(b => F.removeEventListener(b, this, Jt)));
        }
      }
      ot._eventManager = new mn();
      const ee = new s.OlP('mat-ripple-global-options');
      let Ae = (() => {
          class Te {
            get disabled() {
              return this._disabled;
            }
            set disabled(b) {
              b && this.fadeOutAllNonPersistent(),
                (this._disabled = b),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(b) {
              (this._trigger = b), this._setupTriggerEventsIfEnabled();
            }
            constructor(b, M, G, Q, Qe) {
              (this._elementRef = b),
                (this._animationMode = Qe),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = Q || {}),
                (this._rippleRenderer = new ot(this, M, b, G));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...('NoopAnimations' === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(b, M = 0, G) {
              return 'number' == typeof b
                ? this._rippleRenderer.fadeInRipple(b, M, {
                    ...this.rippleConfig,
                    ...G,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...b,
                  });
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(ue.t4),
                s.Y36(ee, 8),
                s.Y36(s.QbO, 8),
              );
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (b, M) {
                2 & b && s.ekj('mat-ripple-unbounded', M.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            Te
          );
        })(),
        ze = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [ne, ne] })),
            Te
          );
        })(),
        _e = (() => {
          class Te {
            constructor(b) {
              (this._animationMode = b),
                (this.state = 'unchecked'),
                (this.disabled = !1),
                (this.appearance = 'full');
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(s.Y36(s.QbO, 8));
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 12,
              hostBindings: function (b, M) {
                2 & b &&
                  s.ekj(
                    'mat-pseudo-checkbox-indeterminate',
                    'indeterminate' === M.state,
                  )('mat-pseudo-checkbox-checked', 'checked' === M.state)(
                    'mat-pseudo-checkbox-disabled',
                    M.disabled,
                  )('mat-pseudo-checkbox-minimal', 'minimal' === M.appearance)(
                    'mat-pseudo-checkbox-full',
                    'full' === M.appearance,
                  )(
                    '_mat-animation-noopable',
                    'NoopAnimations' === M._animationMode,
                  );
              },
              inputs: {
                state: 'state',
                disabled: 'disabled',
                appearance: 'appearance',
              },
              decls: 0,
              vars: 0,
              template: function (b, M) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })(),
        ye = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [ne] })),
            Te
          );
        })();
      const H = new s.OlP('MAT_OPTION_PARENT_COMPONENT'),
        fe = new s.OlP('MatOptgroup');
      let Mt = 0;
      class Pt {
        constructor(F, b = !1) {
          (this.source = F), (this.isUserInput = b);
        }
      }
      let wn = (() => {
          class Te {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(b) {
              this._disabled = (0, ve.Ig)(b);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(b, M, G, Q) {
              (this._element = b),
                (this._changeDetectorRef = M),
                (this._parent = G),
                (this.group = Q),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + Mt++),
                (this.onSelectionChange = new s.vpe()),
                (this._stateChanges = new le.x());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(b, M) {
              const G = this._getHostElement();
              'function' == typeof G.focus && G.focus(M);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(b) {
              (b.keyCode === he.K5 || b.keyCode === he.L_) &&
                !(0, he.Vb)(b) &&
                (this._selectViaInteraction(), b.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const b = this.viewValue;
                b !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = b));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(b = !1) {
              this.onSelectionChange.emit(new Pt(this, b));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              s.$Z();
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              viewQuery: function (b, M) {
                if ((1 & b && s.Gf(ie, 7), 2 & b)) {
                  let G;
                  s.iGM((G = s.CRH())) && (M._text = G.first);
                }
              },
              inputs: { value: 'value', id: 'id', disabled: 'disabled' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            Te
          );
        })(),
        Ie = (() => {
          class Te extends wn {
            constructor(b, M, G, Q) {
              super(b, M, G, Q);
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(H, 8),
                s.Y36(fe, 8),
              );
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-option']],
              hostAttrs: [
                'role',
                'option',
                1,
                'mat-mdc-option',
                'mdc-list-item',
              ],
              hostVars: 11,
              hostBindings: function (b, M) {
                1 & b &&
                  s.NdJ('click', function () {
                    return M._selectViaInteraction();
                  })('keydown', function (Q) {
                    return M._handleKeydown(Q);
                  }),
                  2 & b &&
                    (s.Ikx('id', M.id),
                    s.uIk('aria-selected', M.selected)(
                      'aria-disabled',
                      M.disabled.toString(),
                    ),
                    s.ekj('mdc-list-item--selected', M.selected)(
                      'mat-mdc-option-multiple',
                      M.multiple,
                    )('mat-mdc-option-active', M.active)(
                      'mdc-list-item--disabled',
                      M.disabled,
                    ));
              },
              exportAs: ['matOption'],
              features: [s.qOj],
              ngContentSelectors: Le,
              decls: 8,
              vars: 5,
              consts: [
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'state',
                  'disabled',
                  4,
                  'ngIf',
                ],
                [1, 'mdc-list-item__primary-text'],
                ['text', ''],
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  3,
                  'disabled',
                  4,
                  'ngIf',
                ],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-option-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                ],
                [1, 'mat-mdc-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  1,
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'disabled',
                ],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (b, M) {
                1 & b &&
                  (s.F$t(vt),
                  s.YNc(0, Ve, 1, 2, 'mat-pseudo-checkbox', 0),
                  s.Hsn(1),
                  s.TgZ(2, 'span', 1, 2),
                  s.Hsn(4, 1),
                  s.qZA(),
                  s.YNc(5, Ue, 1, 1, 'mat-pseudo-checkbox', 3),
                  s.YNc(6, at, 2, 1, 'span', 4),
                  s._UZ(7, 'div', 5)),
                  2 & b &&
                    (s.Q6J('ngIf', M.multiple),
                    s.xp6(5),
                    s.Q6J(
                      'ngIf',
                      !M.multiple &&
                        M.selected &&
                        !M.hideSingleSelectionIndicator,
                    ),
                    s.xp6(1),
                    s.Q6J('ngIf', M.group && M.group._inert),
                    s.xp6(1),
                    s.Q6J('matRippleTrigger', M._getHostElement())(
                      'matRippleDisabled',
                      M.disabled || M.disableRipple,
                    ));
              },
              dependencies: [Ae, te.O5, _e],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })();
      function Dt(Te, F, b) {
        if (b.length) {
          let M = F.toArray(),
            G = b.toArray(),
            Q = 0;
          for (let Qe = 0; Qe < Te + 1; Qe++)
            M[Qe].group && M[Qe].group === G[Q] && Q++;
          return Q;
        }
        return 0;
      }
      function et(Te, F, b, M) {
        return Te < b ? Te : Te + F > b + M ? Math.max(0, Te - M + F) : b;
      }
      let St = (() => {
        class Te {}
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)();
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [ze, te.ez, ne, ye] })),
          Te
        );
      })();
    },
    9549: (Rt, Pe, C) => {
      C.d(Pe, {
        Eo: () => Gn,
        G_: () => ot,
        KE: () => H,
        R9: () => yn,
        hX: () => Ce,
        lN: () => ke,
        o2: () => z,
      });
      var s = C(4650),
        x = C(445),
        L = C(3353),
        oe = C(7579),
        te = C(6451),
        ue = C(2722),
        ve = C(6895),
        le = C(1281),
        he = C(7340),
        ae = C(9643),
        pe = C(3238);
      const ie = ['matFormFieldNotchedOutline', ''],
        Ve = ['*'],
        Ue = ['textField'],
        at = ['iconPrefixContainer'],
        vt = ['textPrefixContainer'];
      function Le(de, me) {
        1 & de && s._UZ(0, 'span', 19);
      }
      function _t(de, me) {
        if (1 & de) {
          const fe = s.EpF();
          s.TgZ(0, 'label', 17),
            s.NdJ('cdkObserveContent', function () {
              s.CHM(fe);
              const Mt = s.oxw(2);
              return s.KtG(Mt._refreshOutlineNotchWidth());
            }),
            s.Hsn(1, 1),
            s.YNc(2, Le, 1, 0, 'span', 18),
            s.qZA();
        }
        if (2 & de) {
          const fe = s.oxw(2);
          s.Q6J('floating', fe._shouldLabelFloat())(
            'cdkObserveContentDisabled',
            !fe._hasOutline(),
          )('id', fe._labelId),
            s.uIk('for', fe._control.id)('aria-owns', fe._control.id),
            s.xp6(2),
            s.Q6J('ngIf', !fe.hideRequiredMarker && fe._control.required);
        }
      }
      function lt(de, me) {
        if ((1 & de && s.YNc(0, _t, 3, 6, 'label', 16), 2 & de)) {
          const fe = s.oxw();
          s.Q6J('ngIf', fe._hasFloatingLabel());
        }
      }
      function bt(de, me) {
        1 & de && s._UZ(0, 'div', 20);
      }
      function W(de, me) {}
      function se(de, me) {
        if ((1 & de && s.YNc(0, W, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw(2);
          const fe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', fe);
        }
      }
      function ne(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 21),
            s.YNc(1, se, 1, 1, 'ng-template', 9),
            s.qZA()),
          2 & de)
        ) {
          const fe = s.oxw();
          s.Q6J('matFormFieldNotchedOutlineOpen', fe._shouldLabelFloat())(
            'matFormFieldNotchedOutlineLabelWidth',
            fe._labelWidth,
          ),
            s.xp6(1),
            s.Q6J('ngIf', !fe._forceDisplayInfixLabel());
        }
      }
      function X(de, me) {
        1 & de && (s.TgZ(0, 'div', 23, 24), s.Hsn(2, 2), s.qZA());
      }
      function we(de, me) {
        1 & de && (s.TgZ(0, 'div', 25, 26), s.Hsn(2, 3), s.qZA());
      }
      function nt(de, me) {}
      function ut(de, me) {
        if ((1 & de && s.YNc(0, nt, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw();
          const fe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', fe);
        }
      }
      function Ut(de, me) {
        1 & de && (s.TgZ(0, 'div', 27), s.Hsn(1, 4), s.qZA());
      }
      function xt(de, me) {
        1 & de && (s.TgZ(0, 'div', 28), s.Hsn(1, 5), s.qZA());
      }
      function Kt(de, me) {
        1 & de && s._UZ(0, 'div', 29);
      }
      function At(de, me) {
        if ((1 & de && (s.TgZ(0, 'div', 30), s.Hsn(1, 6), s.qZA()), 2 & de)) {
          const fe = s.oxw();
          s.Q6J('@transitionMessages', fe._subscriptAnimationState);
        }
      }
      function $e(de, me) {
        if ((1 & de && (s.TgZ(0, 'mat-hint', 34), s._uU(1), s.qZA()), 2 & de)) {
          const fe = s.oxw(2);
          s.Q6J('id', fe._hintLabelId), s.xp6(1), s.Oqu(fe.hintLabel);
        }
      }
      function He(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 31),
            s.YNc(1, $e, 2, 2, 'mat-hint', 32),
            s.Hsn(2, 7),
            s._UZ(3, 'div', 33),
            s.Hsn(4, 8),
            s.qZA()),
          2 & de)
        ) {
          const fe = s.oxw();
          s.Q6J('@transitionMessages', fe._subscriptAnimationState),
            s.xp6(1),
            s.Q6J('ngIf', fe.hintLabel);
        }
      }
      const De = [
          '*',
          [['mat-label']],
          [
            ['', 'matPrefix', ''],
            ['', 'matIconPrefix', ''],
          ],
          [['', 'matTextPrefix', '']],
          [['', 'matTextSuffix', '']],
          [
            ['', 'matSuffix', ''],
            ['', 'matIconSuffix', ''],
          ],
          [['mat-error'], ['', 'matError', '']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        je = [
          '*',
          'mat-label',
          '[matPrefix], [matIconPrefix]',
          '[matTextPrefix]',
          '[matTextSuffix]',
          '[matSuffix], [matIconSuffix]',
          'mat-error, [matError]',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let Ce = (() => {
        class de {}
        return (
          (de.ɵfac = function (fe) {
            return new (fe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de, selectors: [['mat-label']] })),
          de
        );
      })();
      const Ne = new s.OlP('MatError');
      let ct = 0,
        Ke = (() => {
          class de {
            constructor() {
              (this.align = 'start'), (this.id = 'mat-mdc-hint-' + ct++);
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['mat-hint']],
              hostAttrs: [
                1,
                'mat-mdc-form-field-hint',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 4,
              hostBindings: function (fe, qe) {
                2 & fe &&
                  (s.Ikx('id', qe.id),
                  s.uIk('align', null),
                  s.ekj('mat-mdc-form-field-hint-end', 'end' === qe.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            de
          );
        })();
      const Wt = new s.OlP('MatPrefix'),
        l = new s.OlP('MatSuffix');
      let yn = (() => {
          class de {
            constructor() {
              this._isText = !1;
            }
            set _isTextSelector(fe) {
              this._isText = !0;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [
                ['', 'matSuffix', ''],
                ['', 'matIconSuffix', ''],
                ['', 'matTextSuffix', ''],
              ],
              inputs: { _isTextSelector: ['matTextSuffix', '_isTextSelector'] },
              features: [s._Bn([{ provide: l, useExisting: de }])],
            })),
            de
          );
        })(),
        rt = (() => {
          class de {
            constructor(fe) {
              (this._elementRef = fe), (this.floating = !1);
            }
            getWidth() {
              return (function ft(de) {
                if (null !== de.offsetParent) return de.scrollWidth;
                const fe = de.cloneNode(!0);
                fe.style.setProperty('position', 'absolute'),
                  fe.style.setProperty(
                    'transform',
                    'translate(-9999px, -9999px)',
                  ),
                  document.documentElement.appendChild(fe);
                const qe = fe.scrollWidth;
                return fe.remove(), qe;
              })(this._elementRef.nativeElement);
            }
            get element() {
              return this._elementRef.nativeElement;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['label', 'matFormFieldFloatingLabel', '']],
              hostAttrs: [1, 'mdc-floating-label', 'mat-mdc-floating-label'],
              hostVars: 2,
              hostBindings: function (fe, qe) {
                2 & fe && s.ekj('mdc-floating-label--float-above', qe.floating);
              },
              inputs: { floating: 'floating' },
            })),
            de
          );
        })();
      const Et = 'mdc-line-ripple--active',
        mt = 'mdc-line-ripple--deactivating';
      let ln = (() => {
          class de {
            constructor(fe, qe) {
              (this._elementRef = fe),
                (this._handleTransitionEnd = Mt => {
                  const Pt = this._elementRef.nativeElement.classList,
                    wn = Pt.contains(mt);
                  'opacity' === Mt.propertyName && wn && Pt.remove(Et, mt);
                }),
                qe.runOutsideAngular(() => {
                  fe.nativeElement.addEventListener(
                    'transitionend',
                    this._handleTransitionEnd,
                  );
                });
            }
            activate() {
              const fe = this._elementRef.nativeElement.classList;
              fe.remove(mt), fe.add(Et);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(mt);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                'transitionend',
                this._handleTransitionEnd,
              );
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['div', 'matFormFieldLineRipple', '']],
              hostAttrs: [1, 'mdc-line-ripple'],
            })),
            de
          );
        })(),
        mn = (() => {
          class de {
            constructor(fe, qe) {
              (this._elementRef = fe),
                (this._ngZone = qe),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const fe = this._elementRef.nativeElement.querySelector(
                '.mdc-floating-label',
              );
              fe
                ? (this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--upgraded',
                  ),
                  'function' == typeof requestAnimationFrame &&
                    ((fe.style.transitionDuration = '0s'),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (fe.style.transitionDuration = ''),
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--no-label',
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : '0px'
                : null;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['div', 'matFormFieldNotchedOutline', '']],
              hostAttrs: [1, 'mdc-notched-outline'],
              hostVars: 2,
              hostBindings: function (fe, qe) {
                2 & fe && s.ekj('mdc-notched-outline--notched', qe.open);
              },
              inputs: {
                labelWidth: [
                  'matFormFieldNotchedOutlineLabelWidth',
                  'labelWidth',
                ],
                open: ['matFormFieldNotchedOutlineOpen', 'open'],
              },
              attrs: ie,
              ngContentSelectors: Ve,
              decls: 4,
              vars: 2,
              consts: [
                [1, 'mdc-notched-outline__leading'],
                [1, 'mdc-notched-outline__notch'],
                [1, 'mdc-notched-outline__trailing'],
              ],
              template: function (fe, qe) {
                1 & fe &&
                  (s.F$t(),
                  s._UZ(0, 'div', 0),
                  s.TgZ(1, 'div', 1),
                  s.Hsn(2),
                  s.qZA(),
                  s._UZ(3, 'div', 2)),
                  2 & fe && (s.xp6(1), s.Udp('width', qe._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            de
          );
        })();
      const dn = {
        transitionMessages: (0, he.X$)('transitionMessages', [
          (0, he.SB)(
            'enter',
            (0, he.oB)({ opacity: 1, transform: 'translateY(0%)' }),
          ),
          (0, he.eR)('void => enter', [
            (0, he.oB)({ opacity: 0, transform: 'translateY(-5px)' }),
            (0, he.jt)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Gn = (() => {
        class de {}
        return (
          (de.ɵfac = function (fe) {
            return new (fe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de })),
          de
        );
      })();
      const ot = new s.OlP('MatFormField'),
        z = new s.OlP('MAT_FORM_FIELD_DEFAULT_OPTIONS');
      let ee = 0,
        H = (() => {
          class de {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(fe) {
              this._hideRequiredMarker = (0, le.Ig)(fe);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || 'auto';
            }
            set floatLabel(fe) {
              fe !== this._floatLabel &&
                ((this._floatLabel = fe),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(fe) {
              const qe = this._appearance;
              (this._appearance = fe || this._defaults?.appearance || 'fill'),
                'outline' === this._appearance &&
                  this._appearance !== qe &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                'fixed'
              );
            }
            set subscriptSizing(fe) {
              this._subscriptSizing =
                fe || this._defaults?.subscriptSizing || 'fixed';
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(fe) {
              (this._hintLabel = fe), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(fe) {
              this._explicitFormFieldControl = fe;
            }
            constructor(fe, qe, Mt, Pt, wn, Ie, Dt, et) {
              (this._elementRef = fe),
                (this._changeDetectorRef = qe),
                (this._ngZone = Mt),
                (this._dir = Pt),
                (this._platform = wn),
                (this._defaults = Ie),
                (this._animationMode = Dt),
                (this._document = et),
                (this._hideRequiredMarker = !1),
                (this.color = 'primary'),
                (this._appearance = 'fill'),
                (this._subscriptSizing = null),
                (this._hintLabel = ''),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = 'mat-mdc-form-field-label-' + ee++),
                (this._hintLabelId = 'mat-mdc-hint-' + ee++),
                (this._subscriptAnimationState = ''),
                (this._labelWidth = 0),
                (this._destroyed = new oe.x()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                Ie &&
                  (Ie.appearance && (this.appearance = Ie.appearance),
                  (this._hideRequiredMarker = Boolean(Ie?.hideRequiredMarker)),
                  Ie.color && (this.color = Ie.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = 'enter'),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = 'always');
            }
            _initializeControl() {
              const fe = this._control;
              fe.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${fe.controlType}`,
                ),
                fe.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                fe.ngControl &&
                  fe.ngControl.valueChanges &&
                  fe.ngControl.valueChanges
                    .pipe((0, ue.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                fe => !fe._isText,
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  fe => fe._isText,
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  fe => !fe._isText,
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  fe => fe._isText,
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                (0, te.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes,
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  'mdc-text-field--focused',
                  this._control.focused,
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe((0, ue.R)(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe((0, ue.R)(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
                  );
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel;
            }
            _hasOutline() {
              return 'outline' === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(fe) {
              const qe = this._control ? this._control.ngControl : null;
              return qe && qe[fe];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? 'error'
                : 'hint';
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let fe = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    fe.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const qe = this._hintChildren
                      ? this._hintChildren.find(Pt => 'start' === Pt.align)
                      : null,
                    Mt = this._hintChildren
                      ? this._hintChildren.find(Pt => 'end' === Pt.align)
                      : null;
                  qe
                    ? fe.push(qe.id)
                    : this._hintLabel && fe.push(this._hintLabelId),
                    Mt && fe.push(Mt.id);
                } else
                  this._errorChildren &&
                    fe.push(...this._errorChildren.map(qe => qe.id));
                this._control.setDescribedByIds(fe);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const fe = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (fe.style.transform = '');
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const qe = this._iconPrefixContainer?.nativeElement,
                Mt = this._textPrefixContainer?.nativeElement,
                Pt = qe?.getBoundingClientRect().width ?? 0,
                wn = Mt?.getBoundingClientRect().width ?? 0;
              fe.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                'rtl' === this._dir.value ? '-1' : '1'
              } * (${
                Pt + wn
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const fe = this._elementRef.nativeElement;
              if (fe.getRootNode) {
                const qe = fe.getRootNode();
                return qe && qe !== fe;
              }
              return document.documentElement.contains(fe);
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(L.t4),
                s.Y36(z, 8),
                s.Y36(s.QbO, 8),
                s.Y36(ve.K0),
              );
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['mat-form-field']],
              contentQueries: function (fe, qe, Mt) {
                if (
                  (1 & fe &&
                    (s.Suo(Mt, Ce, 5),
                    s.Suo(Mt, Ce, 7),
                    s.Suo(Mt, Gn, 5),
                    s.Suo(Mt, Wt, 5),
                    s.Suo(Mt, l, 5),
                    s.Suo(Mt, Ne, 5),
                    s.Suo(Mt, Ke, 5)),
                  2 & fe)
                ) {
                  let Pt;
                  s.iGM((Pt = s.CRH())) && (qe._labelChildNonStatic = Pt.first),
                    s.iGM((Pt = s.CRH())) && (qe._labelChildStatic = Pt.first),
                    s.iGM((Pt = s.CRH())) && (qe._formFieldControl = Pt.first),
                    s.iGM((Pt = s.CRH())) && (qe._prefixChildren = Pt),
                    s.iGM((Pt = s.CRH())) && (qe._suffixChildren = Pt),
                    s.iGM((Pt = s.CRH())) && (qe._errorChildren = Pt),
                    s.iGM((Pt = s.CRH())) && (qe._hintChildren = Pt);
                }
              },
              viewQuery: function (fe, qe) {
                if (
                  (1 & fe &&
                    (s.Gf(Ue, 5),
                    s.Gf(at, 5),
                    s.Gf(vt, 5),
                    s.Gf(rt, 5),
                    s.Gf(mn, 5),
                    s.Gf(ln, 5)),
                  2 & fe)
                ) {
                  let Mt;
                  s.iGM((Mt = s.CRH())) && (qe._textField = Mt.first),
                    s.iGM((Mt = s.CRH())) &&
                      (qe._iconPrefixContainer = Mt.first),
                    s.iGM((Mt = s.CRH())) &&
                      (qe._textPrefixContainer = Mt.first),
                    s.iGM((Mt = s.CRH())) && (qe._floatingLabel = Mt.first),
                    s.iGM((Mt = s.CRH())) && (qe._notchedOutline = Mt.first),
                    s.iGM((Mt = s.CRH())) && (qe._lineRipple = Mt.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-form-field'],
              hostVars: 42,
              hostBindings: function (fe, qe) {
                2 & fe &&
                  s.ekj(
                    'mat-mdc-form-field-label-always-float',
                    qe._shouldAlwaysFloat(),
                  )('mat-mdc-form-field-has-icon-prefix', qe._hasIconPrefix)(
                    'mat-mdc-form-field-has-icon-suffix',
                    qe._hasIconSuffix,
                  )('mat-form-field-invalid', qe._control.errorState)(
                    'mat-form-field-disabled',
                    qe._control.disabled,
                  )('mat-form-field-autofilled', qe._control.autofilled)(
                    'mat-form-field-no-animations',
                    'NoopAnimations' === qe._animationMode,
                  )('mat-form-field-appearance-fill', 'fill' == qe.appearance)(
                    'mat-form-field-appearance-outline',
                    'outline' == qe.appearance,
                  )(
                    'mat-form-field-hide-placeholder',
                    qe._hasFloatingLabel() && !qe._shouldLabelFloat(),
                  )('mat-focused', qe._control.focused)(
                    'mat-primary',
                    'accent' !== qe.color && 'warn' !== qe.color,
                  )('mat-accent', 'accent' === qe.color)(
                    'mat-warn',
                    'warn' === qe.color,
                  )('ng-untouched', qe._shouldForward('untouched'))(
                    'ng-touched',
                    qe._shouldForward('touched'),
                  )('ng-pristine', qe._shouldForward('pristine'))(
                    'ng-dirty',
                    qe._shouldForward('dirty'),
                  )('ng-valid', qe._shouldForward('valid'))(
                    'ng-invalid',
                    qe._shouldForward('invalid'),
                  )('ng-pending', qe._shouldForward('pending'));
              },
              inputs: {
                hideRequiredMarker: 'hideRequiredMarker',
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                subscriptSizing: 'subscriptSizing',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [s._Bn([{ provide: ot, useExisting: de }])],
              ngContentSelectors: je,
              decls: 18,
              vars: 23,
              consts: [
                ['labelTemplate', ''],
                [1, 'mat-mdc-text-field-wrapper', 'mdc-text-field', 3, 'click'],
                ['textField', ''],
                ['class', 'mat-mdc-form-field-focus-overlay', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-flex'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-form-field-icon-prefix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-prefix', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-infix'],
                [3, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-suffix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-icon-suffix', 4, 'ngIf'],
                ['matFormFieldLineRipple', '', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-form-field-subscript-wrapper',
                  'mat-mdc-form-field-bottom-align',
                  3,
                  'ngSwitch',
                ],
                [
                  'class',
                  'mat-mdc-form-field-error-wrapper',
                  4,
                  'ngSwitchCase',
                ],
                ['class', 'mat-mdc-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                ],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-mdc-form-field-required-marker mdc-floating-label--required',
                  4,
                  'ngIf',
                ],
                [
                  'aria-hidden',
                  'true',
                  1,
                  'mat-mdc-form-field-required-marker',
                  'mdc-floating-label--required',
                ],
                [1, 'mat-mdc-form-field-focus-overlay'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                ],
                [3, 'ngTemplateOutlet'],
                [1, 'mat-mdc-form-field-icon-prefix'],
                ['iconPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-prefix'],
                ['textPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-suffix'],
                [1, 'mat-mdc-form-field-icon-suffix'],
                ['matFormFieldLineRipple', ''],
                [1, 'mat-mdc-form-field-error-wrapper'],
                [1, 'mat-mdc-form-field-hint-wrapper'],
                [3, 'id', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-hint-spacer'],
                [3, 'id'],
              ],
              template: function (fe, qe) {
                1 & fe &&
                  (s.F$t(De),
                  s.YNc(0, lt, 1, 1, 'ng-template', null, 0, s.W1O),
                  s.TgZ(2, 'div', 1, 2),
                  s.NdJ('click', function (Pt) {
                    return (
                      qe._control.onContainerClick &&
                      qe._control.onContainerClick(Pt)
                    );
                  }),
                  s.YNc(4, bt, 1, 0, 'div', 3),
                  s.TgZ(5, 'div', 4),
                  s.YNc(6, ne, 2, 3, 'div', 5),
                  s.YNc(7, X, 3, 0, 'div', 6),
                  s.YNc(8, we, 3, 0, 'div', 7),
                  s.TgZ(9, 'div', 8),
                  s.YNc(10, ut, 1, 1, 'ng-template', 9),
                  s.Hsn(11),
                  s.qZA(),
                  s.YNc(12, Ut, 2, 0, 'div', 10),
                  s.YNc(13, xt, 2, 0, 'div', 11),
                  s.qZA(),
                  s.YNc(14, Kt, 1, 0, 'div', 12),
                  s.qZA(),
                  s.TgZ(15, 'div', 13),
                  s.YNc(16, At, 2, 1, 'div', 14),
                  s.YNc(17, He, 5, 2, 'div', 15),
                  s.qZA()),
                  2 & fe &&
                    (s.xp6(2),
                    s.ekj('mdc-text-field--filled', !qe._hasOutline())(
                      'mdc-text-field--outlined',
                      qe._hasOutline(),
                    )('mdc-text-field--no-label', !qe._hasFloatingLabel())(
                      'mdc-text-field--disabled',
                      qe._control.disabled,
                    )('mdc-text-field--invalid', qe._control.errorState),
                    s.xp6(2),
                    s.Q6J('ngIf', !qe._hasOutline() && !qe._control.disabled),
                    s.xp6(2),
                    s.Q6J('ngIf', qe._hasOutline()),
                    s.xp6(1),
                    s.Q6J('ngIf', qe._hasIconPrefix),
                    s.xp6(1),
                    s.Q6J('ngIf', qe._hasTextPrefix),
                    s.xp6(2),
                    s.Q6J(
                      'ngIf',
                      !qe._hasOutline() || qe._forceDisplayInfixLabel(),
                    ),
                    s.xp6(2),
                    s.Q6J('ngIf', qe._hasTextSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', qe._hasIconSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', !qe._hasOutline()),
                    s.xp6(1),
                    s.ekj(
                      'mat-mdc-form-field-subscript-dynamic-size',
                      'dynamic' === qe.subscriptSizing,
                    ),
                    s.Q6J('ngSwitch', qe._getDisplayedMessages()),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'error'),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'hint'));
              },
              dependencies: [ve.O5, ve.tP, ve.RF, ve.n9, ae.wD, Ke, rt, mn, ln],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [dn.transitionMessages] },
              changeDetection: 0,
            })),
            de
          );
        })(),
        ke = (() => {
          class de {}
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵmod = s.oAB({ type: de })),
            (de.ɵinj = s.cJS({ imports: [pe.BQ, ve.ez, ae.Q8, pe.BQ] })),
            de
          );
        })();
    },
    4144: (Rt, Pe, C) => {
      C.d(Pe, { Jk: () => at, Nt: () => lt, c: () => bt });
      var s = C(1281),
        x = C(3353),
        L = C(4650),
        oe = C(515),
        te = C(7579);
      const ue = (0, x.i$)({ passive: !0 });
      let ve = (() => {
          class W {
            constructor(ne, X) {
              (this._platform = ne),
                (this._ngZone = X),
                (this._monitoredElements = new Map());
            }
            monitor(ne) {
              if (!this._platform.isBrowser) return oe.E;
              const X = (0, s.fI)(ne),
                we = this._monitoredElements.get(X);
              if (we) return we.subject;
              const nt = new te.x(),
                ut = 'cdk-text-field-autofilled',
                Ut = xt => {
                  'cdk-text-field-autofill-start' !== xt.animationName ||
                  X.classList.contains(ut)
                    ? 'cdk-text-field-autofill-end' === xt.animationName &&
                      X.classList.contains(ut) &&
                      (X.classList.remove(ut),
                      this._ngZone.run(() =>
                        nt.next({ target: xt.target, isAutofilled: !1 }),
                      ))
                    : (X.classList.add(ut),
                      this._ngZone.run(() =>
                        nt.next({ target: xt.target, isAutofilled: !0 }),
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  X.addEventListener('animationstart', Ut, ue),
                    X.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(X, {
                  subject: nt,
                  unlisten: () => {
                    X.removeEventListener('animationstart', Ut, ue);
                  },
                }),
                nt
              );
            }
            stopMonitoring(ne) {
              const X = (0, s.fI)(ne),
                we = this._monitoredElements.get(X);
              we &&
                (we.unlisten(),
                we.subject.complete(),
                X.classList.remove('cdk-text-field-autofill-monitored'),
                X.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(X));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((ne, X) =>
                this.stopMonitoring(X),
              );
            }
          }
          return (
            (W.ɵfac = function (ne) {
              return new (ne || W)(L.LFG(x.t4), L.LFG(L.R0b));
            }),
            (W.ɵprov = L.Yz7({
              token: W,
              factory: W.ɵfac,
              providedIn: 'root',
            })),
            W
          );
        })(),
        ae = (() => {
          class W {}
          return (
            (W.ɵfac = function (ne) {
              return new (ne || W)();
            }),
            (W.ɵmod = L.oAB({ type: W })),
            (W.ɵinj = L.cJS({})),
            W
          );
        })();
      var pe = C(4006),
        ie = C(3238),
        Ve = C(9549);
      const at = new L.OlP('MAT_INPUT_VALUE_ACCESSOR'),
        vt = [
          'button',
          'checkbox',
          'file',
          'hidden',
          'image',
          'radio',
          'range',
          'reset',
          'submit',
        ];
      let Le = 0;
      const _t = (0, ie.FD)(
        class {
          constructor(W, se, ne, X) {
            (this._defaultErrorStateMatcher = W),
              (this._parentForm = se),
              (this._parentFormGroup = ne),
              (this.ngControl = X),
              (this.stateChanges = new te.x());
          }
        },
      );
      let lt = (() => {
          class W extends _t {
            get disabled() {
              return this._disabled;
            }
            set disabled(ne) {
              (this._disabled = (0, s.Ig)(ne)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(ne) {
              this._id = ne || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(pe.kI.required) ??
                !1
              );
            }
            set required(ne) {
              this._required = (0, s.Ig)(ne);
            }
            get type() {
              return this._type;
            }
            set type(ne) {
              (this._type = ne || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  (0, x.qK)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(ne) {
              ne !== this.value &&
                ((this._inputValueAccessor.value = ne),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(ne) {
              this._readonly = (0, s.Ig)(ne);
            }
            constructor(ne, X, we, nt, ut, Ut, xt, Kt, At, $e) {
              super(Ut, nt, ut, we),
                (this._elementRef = ne),
                (this._platform = X),
                (this._autofillMonitor = Kt),
                (this._formField = $e),
                (this._uid = 'mat-input-' + Le++),
                (this.focused = !1),
                (this.stateChanges = new te.x()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter(je => (0, x.qK)().has(je))),
                (this._iOSKeyupListener = je => {
                  const Ce = je.target;
                  !Ce.value &&
                    0 === Ce.selectionStart &&
                    0 === Ce.selectionEnd &&
                    (Ce.setSelectionRange(1, 1), Ce.setSelectionRange(0, 0));
                });
              const He = this._elementRef.nativeElement,
                De = He.nodeName.toLowerCase();
              (this._inputValueAccessor = xt || He),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                X.IOS &&
                  At.runOutsideAngular(() => {
                    ne.nativeElement.addEventListener(
                      'keyup',
                      this._iOSKeyupListener,
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === De),
                (this._isTextarea = 'textarea' === De),
                (this._isInFormField = !!$e),
                this._isNativeSelect &&
                  (this.controlType = He.multiple
                    ? 'mat-native-select-multiple'
                    : 'mat-native-select');
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe(ne => {
                    (this.autofilled = ne.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement,
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    'keyup',
                    this._iOSKeyupListener,
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(ne) {
              this._elementRef.nativeElement.focus(ne);
            }
            _focusChanged(ne) {
              ne !== this.focused &&
                ((this.focused = ne), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const ne = this._elementRef.nativeElement.value;
              this._previousNativeValue !== ne &&
                ((this._previousNativeValue = ne), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const ne = this._getPlaceholder();
              if (ne !== this._previousPlaceholder) {
                const X = this._elementRef.nativeElement;
                (this._previousPlaceholder = ne),
                  ne
                    ? X.setAttribute('placeholder', ne)
                    : X.removeAttribute('placeholder');
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              vt.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let ne = this._elementRef.nativeElement.validity;
              return ne && ne.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const ne = this._elementRef.nativeElement,
                  X = ne.options[0];
                return (
                  this.focused ||
                  ne.multiple ||
                  !this.empty ||
                  !!(ne.selectedIndex > -1 && X && X.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(ne) {
              ne.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    ne.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const ne = this._elementRef.nativeElement;
              return this._isNativeSelect && (ne.multiple || ne.size > 1);
            }
          }
          return (
            (W.ɵfac = function (ne) {
              return new (ne || W)(
                L.Y36(L.SBq),
                L.Y36(x.t4),
                L.Y36(pe.a5, 10),
                L.Y36(pe.F, 8),
                L.Y36(pe.sg, 8),
                L.Y36(ie.rD),
                L.Y36(at, 10),
                L.Y36(ve),
                L.Y36(L.R0b),
                L.Y36(Ve.G_, 8),
              );
            }),
            (W.ɵdir = L.lG2({
              type: W,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-mdc-input-element'],
              hostVars: 18,
              hostBindings: function (ne, X) {
                1 & ne &&
                  L.NdJ('focus', function () {
                    return X._focusChanged(!0);
                  })('blur', function () {
                    return X._focusChanged(!1);
                  })('input', function () {
                    return X._onInput();
                  }),
                  2 & ne &&
                    (L.Ikx('id', X.id)('disabled', X.disabled)(
                      'required',
                      X.required,
                    ),
                    L.uIk('name', X.name || null)(
                      'readonly',
                      (X.readonly && !X._isNativeSelect) || null,
                    )(
                      'aria-invalid',
                      X.empty && X.required ? null : X.errorState,
                    )('aria-required', X.required)('id', X.id),
                    L.ekj('mat-input-server', X._isServer)(
                      'mat-mdc-form-field-textarea-control',
                      X._isInFormField && X._isTextarea,
                    )('mat-mdc-form-field-input-control', X._isInFormField)(
                      'mdc-text-field__input',
                      X._isInFormField,
                    )('mat-mdc-native-select-inline', X._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [
                L._Bn([{ provide: Ve.Eo, useExisting: W }]),
                L.qOj,
                L.TTD,
              ],
            })),
            W
          );
        })(),
        bt = (() => {
          class W {}
          return (
            (W.ɵfac = function (ne) {
              return new (ne || W)();
            }),
            (W.ɵmod = L.oAB({ type: W })),
            (W.ɵinj = L.cJS({ imports: [ie.BQ, Ve.lN, Ve.lN, ae, ie.BQ] })),
            W
          );
        })();
    },
    7009: (Rt, Pe, C) => {
      C.d(Pe, { ZX: () => xt, ux: () => He });
      var s = C(4650),
        x = C(7579),
        L = C(6895),
        oe = C(4859),
        te = C(7340),
        ue = C(4080),
        ve = C(3353),
        le = C(5698),
        he = C(2722),
        ae = C(2687),
        pe = C(2289),
        ie = C(8184),
        Ve = C(3238);
      function Ue(De, je) {
        if (1 & De) {
          const Ce = s.EpF();
          s.TgZ(0, 'div', 2)(1, 'button', 3),
            s.NdJ('click', function () {
              s.CHM(Ce);
              const Ne = s.oxw();
              return s.KtG(Ne.action());
            }),
            s._uU(2),
            s.qZA()();
        }
        if (2 & De) {
          const Ce = s.oxw();
          s.xp6(2), s.hij(' ', Ce.data.action, ' ');
        }
      }
      const at = ['label'];
      function vt(De, je) {}
      const Le = Math.pow(2, 31) - 1;
      class _t {
        constructor(je, Ce) {
          (this._overlayRef = Ce),
            (this._afterDismissed = new x.x()),
            (this._afterOpened = new x.x()),
            (this._onAction = new x.x()),
            (this._dismissedByAction = !1),
            (this.containerInstance = je),
            je._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(je) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(je, Le),
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const lt = new s.OlP('MatSnackBarData');
      class bt {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      let W = (() => {
          class De {}
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)();
            }),
            (De.ɵdir = s.lG2({
              type: De,
              selectors: [['', 'matSnackBarLabel', '']],
              hostAttrs: [1, 'mat-mdc-snack-bar-label', 'mdc-snackbar__label'],
            })),
            De
          );
        })(),
        se = (() => {
          class De {}
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)();
            }),
            (De.ɵdir = s.lG2({
              type: De,
              selectors: [['', 'matSnackBarActions', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-actions',
                'mdc-snackbar__actions',
              ],
            })),
            De
          );
        })(),
        ne = (() => {
          class De {}
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)();
            }),
            (De.ɵdir = s.lG2({
              type: De,
              selectors: [['', 'matSnackBarAction', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-action',
                'mdc-snackbar__action',
              ],
            })),
            De
          );
        })(),
        X = (() => {
          class De {
            constructor(Ce, Re) {
              (this.snackBarRef = Ce), (this.data = Re);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)(s.Y36(_t), s.Y36(lt));
            }),
            (De.ɵcmp = s.Xpm({
              type: De,
              selectors: [['simple-snack-bar']],
              hostAttrs: [1, 'mat-mdc-simple-snack-bar'],
              exportAs: ['matSnackBar'],
              decls: 3,
              vars: 2,
              consts: [
                ['matSnackBarLabel', ''],
                ['matSnackBarActions', '', 4, 'ngIf'],
                ['matSnackBarActions', ''],
                ['mat-button', '', 'matSnackBarAction', '', 3, 'click'],
              ],
              template: function (Ce, Re) {
                1 & Ce &&
                  (s.TgZ(0, 'div', 0),
                  s._uU(1),
                  s.qZA(),
                  s.YNc(2, Ue, 3, 1, 'div', 1)),
                  2 & Ce &&
                    (s.xp6(1),
                    s.hij(' ', Re.data.message, '\n'),
                    s.xp6(1),
                    s.Q6J('ngIf', Re.hasAction));
              },
              dependencies: [L.O5, oe.lW, W, se, ne],
              styles: ['.mat-mdc-simple-snack-bar{display:flex}'],
              encapsulation: 2,
              changeDetection: 0,
            })),
            De
          );
        })();
      const we = {
        snackBarState: (0, te.X$)('state', [
          (0, te.SB)(
            'void, hidden',
            (0, te.oB)({ transform: 'scale(0.8)', opacity: 0 }),
          ),
          (0, te.SB)(
            'visible',
            (0, te.oB)({ transform: 'scale(1)', opacity: 1 }),
          ),
          (0, te.eR)(
            '* => visible',
            (0, te.jt)('150ms cubic-bezier(0, 0, 0.2, 1)'),
          ),
          (0, te.eR)(
            '* => void, * => hidden',
            (0, te.jt)(
              '75ms cubic-bezier(0.4, 0.0, 1, 1)',
              (0, te.oB)({ opacity: 0 }),
            ),
          ),
        ]),
      };
      let nt = 0,
        ut = (() => {
          class De extends ue.en {
            constructor(Ce, Re, Ne, Ge, ct) {
              super(),
                (this._ngZone = Ce),
                (this._elementRef = Re),
                (this._changeDetectorRef = Ne),
                (this._platform = Ge),
                (this.snackBarConfig = ct),
                (this._document = (0, s.f3M)(L.K0)),
                (this._trackedModals = new Set()),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new x.x()),
                (this._onExit = new x.x()),
                (this._onEnter = new x.x()),
                (this._animationState = 'void'),
                (this._liveElementId = 'mat-snack-bar-container-live-' + nt++),
                (this.attachDomPortal = Ke => {
                  this._assertNotAttached();
                  const Wt = this._portalOutlet.attachDomPortal(Ke);
                  return this._afterPortalAttached(), Wt;
                }),
                (this._live =
                  'assertive' !== ct.politeness || ct.announcementMessage
                    ? 'off' === ct.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(Ce) {
              this._assertNotAttached();
              const Re = this._portalOutlet.attachComponentPortal(Ce);
              return this._afterPortalAttached(), Re;
            }
            attachTemplatePortal(Ce) {
              this._assertNotAttached();
              const Re = this._portalOutlet.attachTemplatePortal(Ce);
              return this._afterPortalAttached(), Re;
            }
            onAnimationEnd(Ce) {
              const { fromState: Re, toState: Ne } = Ce;
              if (
                ((('void' === Ne && 'void' !== Re) || 'hidden' === Ne) &&
                  this._completeExit(),
                'visible' === Ne)
              ) {
                const Ge = this._onEnter;
                this._ngZone.run(() => {
                  Ge.next(), Ge.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = 'hidden'),
                    this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0),
                this._clearFromModals(),
                this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe((0, le.q)(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const Ce = this._elementRef.nativeElement,
                Re = this.snackBarConfig.panelClass;
              Re &&
                (Array.isArray(Re)
                  ? Re.forEach(Ne => Ce.classList.add(Ne))
                  : Ce.classList.add(Re)),
                this._exposeToModals();
            }
            _exposeToModals() {
              const Ce = this._liveElementId,
                Re = this._document.querySelectorAll(
                  'body > .cdk-overlay-container [aria-modal="true"]',
                );
              for (let Ne = 0; Ne < Re.length; Ne++) {
                const Ge = Re[Ne],
                  ct = Ge.getAttribute('aria-owns');
                this._trackedModals.add(Ge),
                  ct
                    ? -1 === ct.indexOf(Ce) &&
                      Ge.setAttribute('aria-owns', ct + ' ' + Ce)
                    : Ge.setAttribute('aria-owns', Ce);
              }
            }
            _clearFromModals() {
              this._trackedModals.forEach(Ce => {
                const Re = Ce.getAttribute('aria-owns');
                if (Re) {
                  const Ne = Re.replace(this._liveElementId, '').trim();
                  Ne.length > 0
                    ? Ce.setAttribute('aria-owns', Ne)
                    : Ce.removeAttribute('aria-owns');
                }
              }),
                this._trackedModals.clear();
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const Ce =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-hidden]',
                        ),
                      Re =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-live]',
                        );
                    if (Ce && Re) {
                      let Ne = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        Ce.contains(document.activeElement) &&
                        (Ne = document.activeElement),
                        Ce.removeAttribute('aria-hidden'),
                        Re.appendChild(Ce),
                        Ne?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)(
                s.Y36(s.R0b),
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(ve.t4),
                s.Y36(bt),
              );
            }),
            (De.ɵdir = s.lG2({
              type: De,
              viewQuery: function (Ce, Re) {
                if ((1 & Ce && s.Gf(ue.Pl, 7), 2 & Ce)) {
                  let Ne;
                  s.iGM((Ne = s.CRH())) && (Re._portalOutlet = Ne.first);
                }
              },
              features: [s.qOj],
            })),
            De
          );
        })(),
        Ut = (() => {
          class De extends ut {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const Ce = this._label.nativeElement,
                Re = 'mdc-snackbar__label';
              Ce.classList.toggle(Re, !Ce.querySelector(`.${Re}`));
            }
          }
          return (
            (De.ɵfac = (function () {
              let je;
              return function (Re) {
                return (je || (je = s.n5z(De)))(Re || De);
              };
            })()),
            (De.ɵcmp = s.Xpm({
              type: De,
              selectors: [['mat-snack-bar-container']],
              viewQuery: function (Ce, Re) {
                if ((1 & Ce && s.Gf(at, 7), 2 & Ce)) {
                  let Ne;
                  s.iGM((Ne = s.CRH())) && (Re._label = Ne.first);
                }
              },
              hostAttrs: [
                1,
                'mdc-snackbar',
                'mat-mdc-snack-bar-container',
                'mdc-snackbar--open',
              ],
              hostVars: 1,
              hostBindings: function (Ce, Re) {
                1 & Ce &&
                  s.WFA('@state.done', function (Ge) {
                    return Re.onAnimationEnd(Ge);
                  }),
                  2 & Ce && s.d8E('@state', Re._animationState);
              },
              features: [s.qOj],
              decls: 6,
              vars: 3,
              consts: [
                [1, 'mdc-snackbar__surface'],
                [1, 'mat-mdc-snack-bar-label'],
                ['label', ''],
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (Ce, Re) {
                1 & Ce &&
                  (s.TgZ(0, 'div', 0)(1, 'div', 1, 2)(3, 'div', 3),
                  s.YNc(4, vt, 0, 0, 'ng-template', 4),
                  s.qZA(),
                  s._UZ(5, 'div'),
                  s.qZA()()),
                  2 & Ce &&
                    (s.xp6(5),
                    s.uIk('aria-live', Re._live)('role', Re._role)(
                      'id',
                      Re._liveElementId,
                    ));
              },
              dependencies: [ue.Pl],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [we.snackBarState] },
            })),
            De
          );
        })(),
        xt = (() => {
          class De {}
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)();
            }),
            (De.ɵmod = s.oAB({ type: De })),
            (De.ɵinj = s.cJS({
              imports: [ie.U8, ue.eL, L.ez, oe.ot, Ve.BQ, Ve.BQ],
            })),
            De
          );
        })();
      const At = new s.OlP('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function Kt() {
          return new bt();
        },
      });
      let $e = (() => {
          class De {
            get _openedSnackBarRef() {
              const Ce = this._parentSnackBar;
              return Ce ? Ce._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(Ce) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = Ce)
                : (this._snackBarRefAtThisLevel = Ce);
            }
            constructor(Ce, Re, Ne, Ge, ct, Ke) {
              (this._overlay = Ce),
                (this._live = Re),
                (this._injector = Ne),
                (this._breakpointObserver = Ge),
                (this._parentSnackBar = ct),
                (this._defaultConfig = Ke),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(Ce, Re) {
              return this._attach(Ce, Re);
            }
            openFromTemplate(Ce, Re) {
              return this._attach(Ce, Re);
            }
            open(Ce, Re = '', Ne) {
              const Ge = { ...this._defaultConfig, ...Ne };
              return (
                (Ge.data = { message: Ce, action: Re }),
                Ge.announcementMessage === Ce &&
                  (Ge.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, Ge)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(Ce, Re) {
              const Ge = s.zs3.create({
                  parent:
                    (Re &&
                      Re.viewContainerRef &&
                      Re.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: bt, useValue: Re }],
                }),
                ct = new ue.C5(
                  this.snackBarContainerComponent,
                  Re.viewContainerRef,
                  Ge,
                ),
                Ke = Ce.attach(ct);
              return (Ke.instance.snackBarConfig = Re), Ke.instance;
            }
            _attach(Ce, Re) {
              const Ne = { ...new bt(), ...this._defaultConfig, ...Re },
                Ge = this._createOverlay(Ne),
                ct = this._attachSnackBarContainer(Ge, Ne),
                Ke = new _t(ct, Ge);
              if (Ce instanceof s.Rgc) {
                const Wt = new ue.UE(Ce, null, {
                  $implicit: Ne.data,
                  snackBarRef: Ke,
                });
                Ke.instance = ct.attachTemplatePortal(Wt);
              } else {
                const Wt = this._createInjector(Ne, Ke),
                  pt = new ue.C5(Ce, void 0, Wt),
                  l = ct.attachComponentPortal(pt);
                Ke.instance = l.instance;
              }
              return (
                this._breakpointObserver
                  .observe(pe.u3.HandsetPortrait)
                  .pipe((0, he.R)(Ge.detachments()))
                  .subscribe(Wt => {
                    Ge.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      Wt.matches,
                    );
                  }),
                Ne.announcementMessage &&
                  ct._onAnnounce.subscribe(() => {
                    this._live.announce(Ne.announcementMessage, Ne.politeness);
                  }),
                this._animateSnackBar(Ke, Ne),
                (this._openedSnackBarRef = Ke),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(Ce, Re) {
              Ce.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == Ce &&
                  (this._openedSnackBarRef = null),
                  Re.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      Ce.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : Ce.containerInstance.enter(),
                Re.duration &&
                  Re.duration > 0 &&
                  Ce.afterOpened().subscribe(() =>
                    Ce._dismissAfter(Re.duration),
                  );
            }
            _createOverlay(Ce) {
              const Re = new ie.X_();
              Re.direction = Ce.direction;
              let Ne = this._overlay.position().global();
              const Ge = 'rtl' === Ce.direction,
                ct =
                  'left' === Ce.horizontalPosition ||
                  ('start' === Ce.horizontalPosition && !Ge) ||
                  ('end' === Ce.horizontalPosition && Ge),
                Ke = !ct && 'center' !== Ce.horizontalPosition;
              return (
                ct
                  ? Ne.left('0')
                  : Ke
                  ? Ne.right('0')
                  : Ne.centerHorizontally(),
                'top' === Ce.verticalPosition ? Ne.top('0') : Ne.bottom('0'),
                (Re.positionStrategy = Ne),
                this._overlay.create(Re)
              );
            }
            _createInjector(Ce, Re) {
              return s.zs3.create({
                parent:
                  (Ce && Ce.viewContainerRef && Ce.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: _t, useValue: Re },
                  { provide: lt, useValue: Ce.data },
                ],
              });
            }
          }
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)(
                s.LFG(ie.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(pe.Yg),
                s.LFG(De, 12),
                s.LFG(At),
              );
            }),
            (De.ɵprov = s.Yz7({ token: De, factory: De.ɵfac })),
            De
          );
        })(),
        He = (() => {
          class De extends $e {
            constructor(Ce, Re, Ne, Ge, ct, Ke) {
              super(Ce, Re, Ne, Ge, ct, Ke),
                (this.simpleSnackBarComponent = X),
                (this.snackBarContainerComponent = Ut),
                (this.handsetCssClass = 'mat-mdc-snack-bar-handset');
            }
          }
          return (
            (De.ɵfac = function (Ce) {
              return new (Ce || De)(
                s.LFG(ie.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(pe.Yg),
                s.LFG(De, 12),
                s.LFG(At),
              );
            }),
            (De.ɵprov = s.Yz7({ token: De, factory: De.ɵfac, providedIn: xt })),
            De
          );
        })();
    },
    1481: (Rt, Pe, C) => {
      C.d(Pe, {
        Dx: () => _e,
        H7: () => Vt,
        b2: () => ot,
        q6: () => Gn,
        se: () => At,
      });
      var s = C(6895),
        x = C(4650);
      class L extends s.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class oe extends L {
        static makeCurrent() {
          (0, s.HT)(new oe());
        }
        onAndCancel(be, Z, Ee) {
          return (
            be.addEventListener(Z, Ee, !1),
            () => {
              be.removeEventListener(Z, Ee, !1);
            }
          );
        }
        dispatchEvent(be, Z) {
          be.dispatchEvent(Z);
        }
        remove(be) {
          be.parentNode && be.parentNode.removeChild(be);
        }
        createElement(be, Z) {
          return (Z = Z || this.getDefaultDocument()).createElement(be);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(be) {
          return be.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(be) {
          return be instanceof DocumentFragment;
        }
        getGlobalEventTarget(be, Z) {
          return 'window' === Z
            ? window
            : 'document' === Z
            ? be
            : 'body' === Z
            ? be.body
            : null;
        }
        getBaseHref(be) {
          const Z = (function ue() {
            return (
              (te = te || document.querySelector('base')),
              te ? te.getAttribute('href') : null
            );
          })();
          return null == Z
            ? null
            : (function le(Oe) {
                (ve = ve || document.createElement('a')),
                  ve.setAttribute('href', Oe);
                const be = ve.pathname;
                return '/' === be.charAt(0) ? be : `/${be}`;
              })(Z);
        }
        resetBaseElement() {
          te = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(be) {
          return (0, s.Mx)(document.cookie, be);
        }
      }
      let ve,
        te = null;
      const he = new x.OlP('TRANSITION_ID'),
        pe = [
          {
            provide: x.ip1,
            useFactory: function ae(Oe, be, Z) {
              return () => {
                Z.get(x.CZH).donePromise.then(() => {
                  const Ee = (0, s.q)(),
                    dt = be.querySelectorAll(`style[ng-transition="${Oe}"]`);
                  for (let Bt = 0; Bt < dt.length; Bt++) Ee.remove(dt[Bt]);
                });
              };
            },
            deps: [he, s.K0, x.zs3],
            multi: !0,
          },
        ];
      let Ve = (() => {
        class Oe {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (Oe.ɵfac = function (Z) {
            return new (Z || Oe)();
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const Ue = new x.OlP('EventManagerPlugins');
      let at = (() => {
        class Oe {
          constructor(Z, Ee) {
            (this._zone = Ee),
              (this._eventNameToPlugin = new Map()),
              Z.forEach(dt => {
                dt.manager = this;
              }),
              (this._plugins = Z.slice().reverse());
          }
          addEventListener(Z, Ee, dt) {
            return this._findPluginFor(Ee).addEventListener(Z, Ee, dt);
          }
          addGlobalEventListener(Z, Ee, dt) {
            return this._findPluginFor(Ee).addGlobalEventListener(Z, Ee, dt);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(Z) {
            const Ee = this._eventNameToPlugin.get(Z);
            if (Ee) return Ee;
            const dt = this._plugins;
            for (let Bt = 0; Bt < dt.length; Bt++) {
              const qt = dt[Bt];
              if (qt.supports(Z)) return this._eventNameToPlugin.set(Z, qt), qt;
            }
            throw new Error(`No event manager plugin found for event ${Z}`);
          }
        }
        return (
          (Oe.ɵfac = function (Z) {
            return new (Z || Oe)(x.LFG(Ue), x.LFG(x.R0b));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      class vt {
        constructor(be) {
          this._doc = be;
        }
        addGlobalEventListener(be, Z, Ee) {
          const dt = (0, s.q)().getGlobalEventTarget(this._doc, be);
          if (!dt)
            throw new Error(`Unsupported event target ${dt} for event ${Z}`);
          return this.addEventListener(dt, Z, Ee);
        }
      }
      let Le = (() => {
          class Oe {
            constructor() {
              this.usageCount = new Map();
            }
            addStyles(Z) {
              for (const Ee of Z)
                1 === this.changeUsageCount(Ee, 1) && this.onStyleAdded(Ee);
            }
            removeStyles(Z) {
              for (const Ee of Z)
                0 === this.changeUsageCount(Ee, -1) && this.onStyleRemoved(Ee);
            }
            onStyleRemoved(Z) {}
            onStyleAdded(Z) {}
            getAllStyles() {
              return this.usageCount.keys();
            }
            changeUsageCount(Z, Ee) {
              const dt = this.usageCount;
              let Bt = dt.get(Z) ?? 0;
              return (Bt += Ee), Bt > 0 ? dt.set(Z, Bt) : dt.delete(Z), Bt;
            }
            ngOnDestroy() {
              for (const Z of this.getAllStyles()) this.onStyleRemoved(Z);
              this.usageCount.clear();
            }
          }
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)();
            }),
            (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
            Oe
          );
        })(),
        _t = (() => {
          class Oe extends Le {
            constructor(Z) {
              super(),
                (this.doc = Z),
                (this.styleRef = new Map()),
                (this.hostNodes = new Set()),
                this.resetHostNodes();
            }
            onStyleAdded(Z) {
              for (const Ee of this.hostNodes) this.addStyleToHost(Ee, Z);
            }
            onStyleRemoved(Z) {
              const Ee = this.styleRef;
              Ee.get(Z)?.forEach(Bt => Bt.remove()), Ee.delete(Z);
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes();
            }
            addHost(Z) {
              this.hostNodes.add(Z);
              for (const Ee of this.getAllStyles()) this.addStyleToHost(Z, Ee);
            }
            removeHost(Z) {
              this.hostNodes.delete(Z);
            }
            addStyleToHost(Z, Ee) {
              const dt = this.doc.createElement('style');
              (dt.textContent = Ee), Z.appendChild(dt);
              const Bt = this.styleRef.get(Ee);
              Bt ? Bt.push(dt) : this.styleRef.set(Ee, [dt]);
            }
            resetHostNodes() {
              const Z = this.hostNodes;
              Z.clear(), Z.add(this.doc.head);
            }
          }
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
            Oe
          );
        })();
      const lt = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          math: 'http://www.w3.org/1998/MathML/',
        },
        bt = /%COMP%/g,
        nt = new x.OlP('RemoveStylesOnCompDestory', {
          providedIn: 'root',
          factory: () => !1,
        });
      function xt(Oe, be) {
        return be.flat(100).map(Z => Z.replace(bt, Oe));
      }
      function Kt(Oe) {
        return be => {
          if ('__ngUnwrap__' === be) return Oe;
          !1 === Oe(be) && (be.preventDefault(), (be.returnValue = !1));
        };
      }
      let At = (() => {
        class Oe {
          constructor(Z, Ee, dt, Bt) {
            (this.eventManager = Z),
              (this.sharedStylesHost = Ee),
              (this.appId = dt),
              (this.removeStylesOnCompDestory = Bt),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new $e(Z));
          }
          createRenderer(Z, Ee) {
            if (!Z || !Ee) return this.defaultRenderer;
            const dt = this.getOrCreateRenderer(Z, Ee);
            return (
              dt instanceof Ne
                ? dt.applyToHost(Z)
                : dt instanceof Re && dt.applyStyles(),
              dt
            );
          }
          getOrCreateRenderer(Z, Ee) {
            const dt = this.rendererByCompId;
            let Bt = dt.get(Ee.id);
            if (!Bt) {
              const qt = this.eventManager,
                Dn = this.sharedStylesHost,
                Wn = this.removeStylesOnCompDestory;
              switch (Ee.encapsulation) {
                case x.ifc.Emulated:
                  Bt = new Ne(qt, Dn, Ee, this.appId, Wn);
                  break;
                case x.ifc.ShadowDom:
                  return new Ce(qt, Dn, Z, Ee);
                default:
                  Bt = new Re(qt, Dn, Ee, Wn);
              }
              (Bt.onDestroy = () => dt.delete(Ee.id)), dt.set(Ee.id, Bt);
            }
            return Bt;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          begin() {}
          end() {}
        }
        return (
          (Oe.ɵfac = function (Z) {
            return new (Z || Oe)(x.LFG(at), x.LFG(_t), x.LFG(x.AFp), x.LFG(nt));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      class $e {
        constructor(be) {
          (this.eventManager = be),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(be, Z) {
          return Z
            ? document.createElementNS(lt[Z] || Z, be)
            : document.createElement(be);
        }
        createComment(be) {
          return document.createComment(be);
        }
        createText(be) {
          return document.createTextNode(be);
        }
        appendChild(be, Z) {
          (je(be) ? be.content : be).appendChild(Z);
        }
        insertBefore(be, Z, Ee) {
          be && (je(be) ? be.content : be).insertBefore(Z, Ee);
        }
        removeChild(be, Z) {
          be && be.removeChild(Z);
        }
        selectRootElement(be, Z) {
          let Ee = 'string' == typeof be ? document.querySelector(be) : be;
          if (!Ee)
            throw new Error(`The selector "${be}" did not match any elements`);
          return Z || (Ee.textContent = ''), Ee;
        }
        parentNode(be) {
          return be.parentNode;
        }
        nextSibling(be) {
          return be.nextSibling;
        }
        setAttribute(be, Z, Ee, dt) {
          if (dt) {
            Z = dt + ':' + Z;
            const Bt = lt[dt];
            Bt ? be.setAttributeNS(Bt, Z, Ee) : be.setAttribute(Z, Ee);
          } else be.setAttribute(Z, Ee);
        }
        removeAttribute(be, Z, Ee) {
          if (Ee) {
            const dt = lt[Ee];
            dt ? be.removeAttributeNS(dt, Z) : be.removeAttribute(`${Ee}:${Z}`);
          } else be.removeAttribute(Z);
        }
        addClass(be, Z) {
          be.classList.add(Z);
        }
        removeClass(be, Z) {
          be.classList.remove(Z);
        }
        setStyle(be, Z, Ee, dt) {
          dt & (x.JOm.DashCase | x.JOm.Important)
            ? be.style.setProperty(
                Z,
                Ee,
                dt & x.JOm.Important ? 'important' : '',
              )
            : (be.style[Z] = Ee);
        }
        removeStyle(be, Z, Ee) {
          Ee & x.JOm.DashCase ? be.style.removeProperty(Z) : (be.style[Z] = '');
        }
        setProperty(be, Z, Ee) {
          be[Z] = Ee;
        }
        setValue(be, Z) {
          be.nodeValue = Z;
        }
        listen(be, Z, Ee) {
          return 'string' == typeof be
            ? this.eventManager.addGlobalEventListener(be, Z, Kt(Ee))
            : this.eventManager.addEventListener(be, Z, Kt(Ee));
        }
      }
      function je(Oe) {
        return 'TEMPLATE' === Oe.tagName && void 0 !== Oe.content;
      }
      class Ce extends $e {
        constructor(be, Z, Ee, dt) {
          super(be),
            (this.sharedStylesHost = Z),
            (this.hostEl = Ee),
            (this.shadowRoot = Ee.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const Bt = xt(dt.id, dt.styles);
          for (const qt of Bt) {
            const Dn = document.createElement('style');
            (Dn.textContent = qt), this.shadowRoot.appendChild(Dn);
          }
        }
        nodeOrShadowRoot(be) {
          return be === this.hostEl ? this.shadowRoot : be;
        }
        appendChild(be, Z) {
          return super.appendChild(this.nodeOrShadowRoot(be), Z);
        }
        insertBefore(be, Z, Ee) {
          return super.insertBefore(this.nodeOrShadowRoot(be), Z, Ee);
        }
        removeChild(be, Z) {
          return super.removeChild(this.nodeOrShadowRoot(be), Z);
        }
        parentNode(be) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(be)),
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Re extends $e {
        constructor(be, Z, Ee, dt, Bt = Ee.id) {
          super(be),
            (this.sharedStylesHost = Z),
            (this.removeStylesOnCompDestory = dt),
            (this.rendererUsageCount = 0),
            (this.styles = xt(Bt, Ee.styles));
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles),
            this.rendererUsageCount++;
        }
        destroy() {
          this.removeStylesOnCompDestory &&
            (this.sharedStylesHost.removeStyles(this.styles),
            this.rendererUsageCount--,
            0 === this.rendererUsageCount && this.onDestroy?.());
        }
      }
      class Ne extends Re {
        constructor(be, Z, Ee, dt, Bt) {
          const qt = dt + '-' + Ee.id;
          super(be, Z, Ee, Bt, qt),
            (this.contentAttr = (function ut(Oe) {
              return '_ngcontent-%COMP%'.replace(bt, Oe);
            })(qt)),
            (this.hostAttr = (function Ut(Oe) {
              return '_nghost-%COMP%'.replace(bt, Oe);
            })(qt));
        }
        applyToHost(be) {
          this.applyStyles(), this.setAttribute(be, this.hostAttr, '');
        }
        createElement(be, Z) {
          const Ee = super.createElement(be, Z);
          return super.setAttribute(Ee, this.contentAttr, ''), Ee;
        }
      }
      let Ge = (() => {
        class Oe extends vt {
          constructor(Z) {
            super(Z);
          }
          supports(Z) {
            return !0;
          }
          addEventListener(Z, Ee, dt) {
            return (
              Z.addEventListener(Ee, dt, !1),
              () => this.removeEventListener(Z, Ee, dt)
            );
          }
          removeEventListener(Z, Ee, dt) {
            return Z.removeEventListener(Ee, dt);
          }
        }
        return (
          (Oe.ɵfac = function (Z) {
            return new (Z || Oe)(x.LFG(s.K0));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const ct = ['alt', 'control', 'meta', 'shift'],
        Ke = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        Wt = {
          alt: Oe => Oe.altKey,
          control: Oe => Oe.ctrlKey,
          meta: Oe => Oe.metaKey,
          shift: Oe => Oe.shiftKey,
        };
      let pt = (() => {
        class Oe extends vt {
          constructor(Z) {
            super(Z);
          }
          supports(Z) {
            return null != Oe.parseEventName(Z);
          }
          addEventListener(Z, Ee, dt) {
            const Bt = Oe.parseEventName(Ee),
              qt = Oe.eventCallback(Bt.fullKey, dt, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, s.q)().onAndCancel(Z, Bt.domEventName, qt),
              );
          }
          static parseEventName(Z) {
            const Ee = Z.toLowerCase().split('.'),
              dt = Ee.shift();
            if (0 === Ee.length || ('keydown' !== dt && 'keyup' !== dt))
              return null;
            const Bt = Oe._normalizeKey(Ee.pop());
            let qt = '',
              Dn = Ee.indexOf('code');
            if (
              (Dn > -1 && (Ee.splice(Dn, 1), (qt = 'code.')),
              ct.forEach(wi => {
                const _i = Ee.indexOf(wi);
                _i > -1 && (Ee.splice(_i, 1), (qt += wi + '.'));
              }),
              (qt += Bt),
              0 != Ee.length || 0 === Bt.length)
            )
              return null;
            const Wn = {};
            return (Wn.domEventName = dt), (Wn.fullKey = qt), Wn;
          }
          static matchEventFullKeyCode(Z, Ee) {
            let dt = Ke[Z.key] || Z.key,
              Bt = '';
            return (
              Ee.indexOf('code.') > -1 && ((dt = Z.code), (Bt = 'code.')),
              !(null == dt || !dt) &&
                ((dt = dt.toLowerCase()),
                ' ' === dt ? (dt = 'space') : '.' === dt && (dt = 'dot'),
                ct.forEach(qt => {
                  qt !== dt && (0, Wt[qt])(Z) && (Bt += qt + '.');
                }),
                (Bt += dt),
                Bt === Ee)
            );
          }
          static eventCallback(Z, Ee, dt) {
            return Bt => {
              Oe.matchEventFullKeyCode(Bt, Z) && dt.runGuarded(() => Ee(Bt));
            };
          }
          static _normalizeKey(Z) {
            return 'esc' === Z ? 'escape' : Z;
          }
        }
        return (
          (Oe.ɵfac = function (Z) {
            return new (Z || Oe)(x.LFG(s.K0));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const Gn = (0, x.eFA)(x._c5, 'browser', [
          { provide: x.Lbi, useValue: s.bD },
          {
            provide: x.g9A,
            useValue: function mt() {
              oe.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: s.K0,
            useFactory: function mn() {
              return (0, x.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        Jt = new x.OlP(''),
        Lt = [
          {
            provide: x.rWj,
            useClass: class ie {
              addToWindow(be) {
                (x.dqk.getAngularTestability = (Ee, dt = !0) => {
                  const Bt = be.findTestabilityInTree(Ee, dt);
                  if (null == Bt)
                    throw new Error('Could not find testability for element.');
                  return Bt;
                }),
                  (x.dqk.getAllAngularTestabilities = () =>
                    be.getAllTestabilities()),
                  (x.dqk.getAllAngularRootElements = () =>
                    be.getAllRootElements()),
                  x.dqk.frameworkStabilizers ||
                    (x.dqk.frameworkStabilizers = []),
                  x.dqk.frameworkStabilizers.push(Ee => {
                    const dt = x.dqk.getAllAngularTestabilities();
                    let Bt = dt.length,
                      qt = !1;
                    const Dn = function (Wn) {
                      (qt = qt || Wn), Bt--, 0 == Bt && Ee(qt);
                    };
                    dt.forEach(function (Wn) {
                      Wn.whenStable(Dn);
                    });
                  });
              }
              findTestabilityInTree(be, Z, Ee) {
                return null == Z
                  ? null
                  : be.getTestability(Z) ??
                      (Ee
                        ? (0, s.q)().isShadowRoot(Z)
                          ? this.findTestabilityInTree(be, Z.host, !0)
                          : this.findTestabilityInTree(be, Z.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: x.lri, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
          { provide: x.dDg, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
        ],
        Pn = [
          { provide: x.zSh, useValue: 'root' },
          {
            provide: x.qLn,
            useFactory: function ln() {
              return new x.qLn();
            },
            deps: [],
          },
          { provide: Ue, useClass: Ge, multi: !0, deps: [s.K0, x.R0b, x.Lbi] },
          { provide: Ue, useClass: pt, multi: !0, deps: [s.K0] },
          { provide: At, useClass: At, deps: [at, _t, x.AFp, nt] },
          { provide: x.FYo, useExisting: At },
          { provide: Le, useExisting: _t },
          { provide: _t, useClass: _t, deps: [s.K0] },
          { provide: at, useClass: at, deps: [Ue, x.R0b] },
          { provide: s.JF, useClass: Ve, deps: [] },
          [],
        ];
      let ot = (() => {
          class Oe {
            constructor(Z) {}
            static withServerTransition(Z) {
              return {
                ngModule: Oe,
                providers: [
                  { provide: x.AFp, useValue: Z.appId },
                  { provide: he, useExisting: x.AFp },
                  pe,
                ],
              };
            }
          }
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)(x.LFG(Jt, 12));
            }),
            (Oe.ɵmod = x.oAB({ type: Oe })),
            (Oe.ɵinj = x.cJS({
              providers: [...Pn, ...Lt],
              imports: [s.ez, x.hGG],
            })),
            Oe
          );
        })(),
        _e = (() => {
          class Oe {
            constructor(Z) {
              this._doc = Z;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(Z) {
              this._doc.title = Z || '';
            }
          }
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Z) {
                let Ee = null;
                return (
                  (Ee = Z
                    ? new Z()
                    : (function ze() {
                        return new _e((0, x.LFG)(s.K0));
                      })()),
                  Ee
                );
              },
              providedIn: 'root',
            })),
            Oe
          );
        })();
      typeof window < 'u' && window;
      let Vt = (() => {
          class Oe {}
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)();
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Z) {
                let Ee = null;
                return (Ee = Z ? new (Z || Oe)() : x.LFG(Ft)), Ee;
              },
              providedIn: 'root',
            })),
            Oe
          );
        })(),
        Ft = (() => {
          class Oe extends Vt {
            constructor(Z) {
              super(), (this._doc = Z);
            }
            sanitize(Z, Ee) {
              if (null == Ee) return null;
              switch (Z) {
                case x.q3G.NONE:
                  return Ee;
                case x.q3G.HTML:
                  return (0, x.qzn)(Ee, 'HTML')
                    ? (0, x.z3N)(Ee)
                    : (0, x.EiD)(this._doc, String(Ee)).toString();
                case x.q3G.STYLE:
                  return (0, x.qzn)(Ee, 'Style') ? (0, x.z3N)(Ee) : Ee;
                case x.q3G.SCRIPT:
                  if ((0, x.qzn)(Ee, 'Script')) return (0, x.z3N)(Ee);
                  throw new Error('unsafe value used in a script context');
                case x.q3G.URL:
                  return (0, x.qzn)(Ee, 'URL')
                    ? (0, x.z3N)(Ee)
                    : (0, x.mCW)(String(Ee));
                case x.q3G.RESOURCE_URL:
                  if ((0, x.qzn)(Ee, 'ResourceURL')) return (0, x.z3N)(Ee);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${x.JZr})`,
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${Z} (see ${x.JZr})`,
                  );
              }
            }
            bypassSecurityTrustHtml(Z) {
              return (0, x.JVY)(Z);
            }
            bypassSecurityTrustStyle(Z) {
              return (0, x.L6k)(Z);
            }
            bypassSecurityTrustScript(Z) {
              return (0, x.eBb)(Z);
            }
            bypassSecurityTrustUrl(Z) {
              return (0, x.LAX)(Z);
            }
            bypassSecurityTrustResourceUrl(Z) {
              return (0, x.pB0)(Z);
            }
          }
          return (
            (Oe.ɵfac = function (Z) {
              return new (Z || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Z) {
                let Ee = null;
                return (
                  (Ee = Z
                    ? new Z()
                    : (function Je(Oe) {
                        return new Ft(Oe.get(s.K0));
                      })(x.LFG(x.zs3))),
                  Ee
                );
              },
              providedIn: 'root',
            })),
            Oe
          );
        })();
    },
    8252: (Rt, Pe, C) => {
      C.d(Pe, {
        gz: () => Rn,
        F0: () => Xi,
        rH: () => Xo,
        Bz: () => Ma,
        lC: () => Cr,
      });
      var s = C(4650),
        x = C(457),
        L = C(9646),
        oe = C(1135);
      const ue = (0, C(3888).d)(
        f =>
          function () {
            f(this),
              (this.name = 'EmptyError'),
              (this.message = 'no elements in sequence');
          },
      );
      var ve = C(9841),
        le = C(7272),
        he = C(9770),
        ae = C(9635),
        pe = C(2843),
        ie = C(9751),
        Ve = C(515),
        Ue = C(727),
        at = C(4482),
        vt = C(5403);
      function Le() {
        return (0, at.e)((f, m) => {
          let d = null;
          f._refCount++;
          const D = (0, vt.x)(m, void 0, void 0, void 0, () => {
            if (!f || f._refCount <= 0 || 0 < --f._refCount)
              return void (d = null);
            const O = f._connection,
              U = d;
            (d = null),
              O && (!U || O === U) && O.unsubscribe(),
              m.unsubscribe();
          });
          f.subscribe(D), D.closed || (d = f.connect());
        });
      }
      class _t extends ie.y {
        constructor(m, d) {
          super(),
            (this.source = m),
            (this.subjectFactory = d),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, at.A)(m) && (this.lift = m.lift);
        }
        _subscribe(m) {
          return this.getSubject().subscribe(m);
        }
        getSubject() {
          const m = this._subject;
          return (
            (!m || m.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: m } = this;
          (this._subject = this._connection = null), m?.unsubscribe();
        }
        connect() {
          let m = this._connection;
          if (!m) {
            m = this._connection = new Ue.w0();
            const d = this.getSubject();
            m.add(
              this.source.subscribe(
                (0, vt.x)(
                  d,
                  void 0,
                  () => {
                    this._teardown(), d.complete();
                  },
                  D => {
                    this._teardown(), d.error(D);
                  },
                  () => this._teardown(),
                ),
              ),
            ),
              m.closed && ((this._connection = null), (m = Ue.w0.EMPTY));
          }
          return m;
        }
        refCount() {
          return Le()(this);
        }
      }
      var lt = C(7579),
        bt = C(6895),
        W = C(4004),
        se = C(3900),
        ne = C(5698),
        X = C(8675),
        we = C(9300),
        nt = C(5577);
      function ut(f) {
        return (0, at.e)((m, d) => {
          let D = !1;
          m.subscribe(
            (0, vt.x)(
              d,
              O => {
                (D = !0), d.next(O);
              },
              () => {
                D || d.next(f), d.complete();
              },
            ),
          );
        });
      }
      function Ut(f = xt) {
        return (0, at.e)((m, d) => {
          let D = !1;
          m.subscribe(
            (0, vt.x)(
              d,
              O => {
                (D = !0), d.next(O);
              },
              () => (D ? d.complete() : d.error(f())),
            ),
          );
        });
      }
      function xt() {
        return new ue();
      }
      var Kt = C(4671);
      function At(f, m) {
        const d = arguments.length >= 2;
        return D =>
          D.pipe(
            f ? (0, we.h)((O, U) => f(O, U, D)) : Kt.y,
            (0, ne.q)(1),
            d ? ut(m) : Ut(() => new ue()),
          );
      }
      var $e = C(4351),
        He = C(8505),
        De = C(262),
        je = C(5026);
      function Ce(f) {
        return f <= 0
          ? () => Ve.E
          : (0, at.e)((m, d) => {
              let D = [];
              m.subscribe(
                (0, vt.x)(
                  d,
                  O => {
                    D.push(O), f < D.length && D.shift();
                  },
                  () => {
                    for (const O of D) d.next(O);
                    d.complete();
                  },
                  void 0,
                  () => {
                    D = null;
                  },
                ),
              );
            });
      }
      function Re(f, m) {
        const d = arguments.length >= 2;
        return D =>
          D.pipe(
            f ? (0, we.h)((O, U) => f(O, U, D)) : Kt.y,
            Ce(1),
            d ? ut(m) : Ut(() => new ue()),
          );
      }
      var Ne = C(2529),
        Ge = C(9718),
        ct = C(8746),
        Ke = C(8189),
        Wt = C(1481);
      const pt = 'primary',
        l = Symbol('RouteTitle');
      class yn {
        constructor(m) {
          this.params = m || {};
        }
        has(m) {
          return Object.prototype.hasOwnProperty.call(this.params, m);
        }
        get(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d[0] : d;
          }
          return null;
        }
        getAll(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d : [d];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function rt(f) {
        return new yn(f);
      }
      function ft(f, m, d) {
        const D = d.path.split('/');
        if (
          D.length > f.length ||
          ('full' === d.pathMatch && (m.hasChildren() || D.length < f.length))
        )
          return null;
        const O = {};
        for (let U = 0; U < D.length; U++) {
          const K = D[U],
            Be = f[U];
          if (K.startsWith(':')) O[K.substring(1)] = Be;
          else if (K !== Be.path) return null;
        }
        return { consumed: f.slice(0, D.length), posParams: O };
      }
      function mt(f, m) {
        const d = f ? Object.keys(f) : void 0,
          D = m ? Object.keys(m) : void 0;
        if (!d || !D || d.length != D.length) return !1;
        let O;
        for (let U = 0; U < d.length; U++)
          if (((O = d[U]), !ln(f[O], m[O]))) return !1;
        return !0;
      }
      function ln(f, m) {
        if (Array.isArray(f) && Array.isArray(m)) {
          if (f.length !== m.length) return !1;
          const d = [...f].sort(),
            D = [...m].sort();
          return d.every((O, U) => D[U] === O);
        }
        return f === m;
      }
      function mn(f) {
        return Array.prototype.concat.apply([], f);
      }
      function dn(f) {
        return f.length > 0 ? f[f.length - 1] : null;
      }
      function Jt(f, m) {
        for (const d in f) f.hasOwnProperty(d) && m(f[d], d);
      }
      function Lt(f) {
        return (0, s.CqO)(f)
          ? f
          : (0, s.QGY)(f)
          ? (0, x.D)(Promise.resolve(f))
          : (0, L.of)(f);
      }
      const Pn = !1,
        ot = {
          exact: function ze(f, m, d) {
            if (
              !Mt(f.segments, m.segments) ||
              !ke(f.segments, m.segments, d) ||
              f.numberOfChildren !== m.numberOfChildren
            )
              return !1;
            for (const D in m.children)
              if (!f.children[D] || !ze(f.children[D], m.children[D], d))
                return !1;
            return !0;
          },
          subset: ye,
        },
        z = {
          exact: function Ae(f, m) {
            return mt(f, m);
          },
          subset: function _e(f, m) {
            return (
              Object.keys(m).length <= Object.keys(f).length &&
              Object.keys(m).every(d => ln(f[d], m[d]))
            );
          },
          ignored: () => !0,
        };
      function ee(f, m, d) {
        return (
          ot[d.paths](f.root, m.root, d.matrixParams) &&
          z[d.queryParams](f.queryParams, m.queryParams) &&
          !('exact' === d.fragment && f.fragment !== m.fragment)
        );
      }
      function ye(f, m, d) {
        return H(f, m, m.segments, d);
      }
      function H(f, m, d, D) {
        if (f.segments.length > d.length) {
          const O = f.segments.slice(0, d.length);
          return !(!Mt(O, d) || m.hasChildren() || !ke(O, d, D));
        }
        if (f.segments.length === d.length) {
          if (!Mt(f.segments, d) || !ke(f.segments, d, D)) return !1;
          for (const O in m.children)
            if (!f.children[O] || !ye(f.children[O], m.children[O], D))
              return !1;
          return !0;
        }
        {
          const O = d.slice(0, f.segments.length),
            U = d.slice(f.segments.length);
          return (
            !!(Mt(f.segments, O) && ke(f.segments, O, D) && f.children[pt]) &&
            H(f.children[pt], m, U, D)
          );
        }
      }
      function ke(f, m, d) {
        return m.every((D, O) => z[d](f[O].parameters, D.parameters));
      }
      class de {
        constructor(m = new me([], {}), d = {}, D = null) {
          (this.root = m), (this.queryParams = d), (this.fragment = D);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = rt(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return Dt.serialize(this);
        }
      }
      class me {
        constructor(m, d) {
          (this.segments = m),
            (this.children = d),
            (this.parent = null),
            Jt(d, (D, O) => (D.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return et(this);
        }
      }
      class fe {
        constructor(m, d) {
          (this.path = m), (this.parameters = d);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = rt(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Qe(this);
        }
      }
      function Mt(f, m) {
        return f.length === m.length && f.every((d, D) => d.path === m[D].path);
      }
      let wn = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({
            token: f,
            factory: function () {
              return new Ie();
            },
            providedIn: 'root',
          })),
          f
        );
      })();
      class Ie {
        parse(m) {
          const d = new Ee(m);
          return new de(
            d.parseRootSegment(),
            d.parseQueryParams(),
            d.parseFragment(),
          );
        }
        serialize(m) {
          const d = `/${St(m.root, !0)}`,
            D = (function Vt(f) {
              const m = Object.keys(f)
                .map(d => {
                  const D = f[d];
                  return Array.isArray(D)
                    ? D.map(O => `${F(d)}=${F(O)}`).join('&')
                    : `${F(d)}=${F(D)}`;
                })
                .filter(d => !!d);
              return m.length ? `?${m.join('&')}` : '';
            })(m.queryParams);
          return `${d}${D}${
            'string' == typeof m.fragment
              ? `#${(function b(f) {
                  return encodeURI(f);
                })(m.fragment)}`
              : ''
          }`;
        }
      }
      const Dt = new Ie();
      function et(f) {
        return f.segments.map(m => Qe(m)).join('/');
      }
      function St(f, m) {
        if (!f.hasChildren()) return et(f);
        if (m) {
          const d = f.children[pt] ? St(f.children[pt], !1) : '',
            D = [];
          return (
            Jt(f.children, (O, U) => {
              U !== pt && D.push(`${U}:${St(O, !1)}`);
            }),
            D.length > 0 ? `${d}(${D.join('//')})` : d
          );
        }
        {
          const d = (function Pt(f, m) {
            let d = [];
            return (
              Jt(f.children, (D, O) => {
                O === pt && (d = d.concat(m(D, O)));
              }),
              Jt(f.children, (D, O) => {
                O !== pt && (d = d.concat(m(D, O)));
              }),
              d
            );
          })(f, (D, O) =>
            O === pt ? [St(f.children[pt], !1)] : [`${O}:${St(D, !1)}`],
          );
          return 1 === Object.keys(f.children).length && null != f.children[pt]
            ? `${et(f)}/${d[0]}`
            : `${et(f)}/(${d.join('//')})`;
        }
      }
      function Te(f) {
        return encodeURIComponent(f)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function F(f) {
        return Te(f).replace(/%3B/gi, ';');
      }
      function M(f) {
        return Te(f)
          .replace(/\(/g, '%28')
          .replace(/\)/g, '%29')
          .replace(/%26/gi, '&');
      }
      function G(f) {
        return decodeURIComponent(f);
      }
      function Q(f) {
        return G(f.replace(/\+/g, '%20'));
      }
      function Qe(f) {
        return `${M(f.path)}${(function Tt(f) {
          return Object.keys(f)
            .map(m => `;${M(m)}=${M(f[m])}`)
            .join('');
        })(f.parameters)}`;
      }
      const Je = /^[^\/()?;=#]+/;
      function Ft(f) {
        const m = f.match(Je);
        return m ? m[0] : '';
      }
      const en = /^[^=?&#]+/,
        be = /^[^&#]+/;
      class Ee {
        constructor(m) {
          (this.url = m), (this.remaining = m);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining ||
            this.peekStartsWith('?') ||
            this.peekStartsWith('#')
              ? new me([], {})
              : new me([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const m = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(m);
            } while (this.consumeOptional('&'));
          return m;
        }
        parseFragment() {
          return this.consumeOptional('#')
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const m = [];
          for (
            this.peekStartsWith('(') || m.push(this.parseSegment());
            this.peekStartsWith('/') &&
            !this.peekStartsWith('//') &&
            !this.peekStartsWith('/(');

          )
            this.capture('/'), m.push(this.parseSegment());
          let d = {};
          this.peekStartsWith('/(') &&
            (this.capture('/'), (d = this.parseParens(!0)));
          let D = {};
          return (
            this.peekStartsWith('(') && (D = this.parseParens(!1)),
            (m.length > 0 || Object.keys(d).length > 0) &&
              (D[pt] = new me(m, d)),
            D
          );
        }
        parseSegment() {
          const m = Ft(this.remaining);
          if ('' === m && this.peekStartsWith(';')) throw new s.vHH(4009, Pn);
          return this.capture(m), new fe(G(m), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const m = {};
          for (; this.consumeOptional(';'); ) this.parseParam(m);
          return m;
        }
        parseParam(m) {
          const d = Ft(this.remaining);
          if (!d) return;
          this.capture(d);
          let D = '';
          if (this.consumeOptional('=')) {
            const O = Ft(this.remaining);
            O && ((D = O), this.capture(D));
          }
          m[G(d)] = G(D);
        }
        parseQueryParam(m) {
          const d = (function Oe(f) {
            const m = f.match(en);
            return m ? m[0] : '';
          })(this.remaining);
          if (!d) return;
          this.capture(d);
          let D = '';
          if (this.consumeOptional('=')) {
            const K = (function Z(f) {
              const m = f.match(be);
              return m ? m[0] : '';
            })(this.remaining);
            K && ((D = K), this.capture(D));
          }
          const O = Q(d),
            U = Q(D);
          if (m.hasOwnProperty(O)) {
            let K = m[O];
            Array.isArray(K) || ((K = [K]), (m[O] = K)), K.push(U);
          } else m[O] = U;
        }
        parseParens(m) {
          const d = {};
          for (
            this.capture('(');
            !this.consumeOptional(')') && this.remaining.length > 0;

          ) {
            const D = Ft(this.remaining),
              O = this.remaining[D.length];
            if ('/' !== O && ')' !== O && ';' !== O) throw new s.vHH(4010, Pn);
            let U;
            D.indexOf(':') > -1
              ? ((U = D.slice(0, D.indexOf(':'))),
                this.capture(U),
                this.capture(':'))
              : m && (U = pt);
            const K = this.parseChildren();
            (d[U] = 1 === Object.keys(K).length ? K[pt] : new me([], K)),
              this.consumeOptional('//');
          }
          return d;
        }
        peekStartsWith(m) {
          return this.remaining.startsWith(m);
        }
        consumeOptional(m) {
          return (
            !!this.peekStartsWith(m) &&
            ((this.remaining = this.remaining.substring(m.length)), !0)
          );
        }
        capture(m) {
          if (!this.consumeOptional(m)) throw new s.vHH(4011, Pn);
        }
      }
      function dt(f) {
        return f.segments.length > 0 ? new me([], { [pt]: f }) : f;
      }
      function Bt(f) {
        const m = {};
        for (const D of Object.keys(f.children)) {
          const U = Bt(f.children[D]);
          (U.segments.length > 0 || U.hasChildren()) && (m[D] = U);
        }
        return (function qt(f) {
          if (1 === f.numberOfChildren && f.children[pt]) {
            const m = f.children[pt];
            return new me(f.segments.concat(m.segments), m.children);
          }
          return f;
        })(new me(f.segments, m));
      }
      function Dn(f) {
        return f instanceof de;
      }
      const Wn = !1;
      function Or(f, m, d, D, O) {
        if (0 === d.length) return ni(m.root, m.root, m.root, D, O);
        const U = (function qn(f) {
          if ('string' == typeof f[0] && 1 === f.length && '/' === f[0])
            return new Kn(!0, 0, f);
          let m = 0,
            d = !1;
          const D = f.reduce((O, U, K) => {
            if ('object' == typeof U && null != U) {
              if (U.outlets) {
                const Be = {};
                return (
                  Jt(U.outlets, (wt, Qt) => {
                    Be[Qt] = 'string' == typeof wt ? wt.split('/') : wt;
                  }),
                  [...O, { outlets: Be }]
                );
              }
              if (U.segmentPath) return [...O, U.segmentPath];
            }
            return 'string' != typeof U
              ? [...O, U]
              : 0 === K
              ? (U.split('/').forEach((Be, wt) => {
                  (0 == wt && '.' === Be) ||
                    (0 == wt && '' === Be
                      ? (d = !0)
                      : '..' === Be
                      ? m++
                      : '' != Be && O.push(Be));
                }),
                O)
              : [...O, U];
          }, []);
          return new Kn(d, m, D);
        })(d);
        return U.toRoot()
          ? ni(m.root, m.root, new me([], {}), D, O)
          : (function K(wt) {
              const Qt = (function eo(f, m, d, D) {
                  if (f.isAbsolute) return new ai(m.root, !0, 0);
                  if (-1 === D) return new ai(d, d === m.root, 0);
                  return (function Ni(f, m, d) {
                    let D = f,
                      O = m,
                      U = d;
                    for (; U > O; ) {
                      if (((U -= O), (D = D.parent), !D))
                        throw new s.vHH(4005, Wn && "Invalid number of '../'");
                      O = D.segments.length;
                    }
                    return new ai(D, !1, O - U);
                  })(d, D + (kn(f.commands[0]) ? 0 : 1), f.numberOfDoubleDots);
                })(U, m, f.snapshot?._urlSegment, wt),
                rn = Qt.processChildren
                  ? jt(Qt.segmentGroup, Qt.index, U.commands)
                  : ui(Qt.segmentGroup, Qt.index, U.commands);
              return ni(m.root, Qt.segmentGroup, rn, D, O);
            })(f.snapshot?._lastPathIndex);
      }
      function kn(f) {
        return (
          'object' == typeof f && null != f && !f.outlets && !f.segmentPath
        );
      }
      function Gt(f) {
        return 'object' == typeof f && null != f && f.outlets;
      }
      function ni(f, m, d, D, O) {
        let K,
          U = {};
        D &&
          Jt(D, (wt, Qt) => {
            U[Qt] = Array.isArray(wt) ? wt.map(rn => `${rn}`) : `${wt}`;
          }),
          (K = f === m ? d : nn(f, m, d));
        const Be = dt(Bt(K));
        return new de(Be, U, O);
      }
      function nn(f, m, d) {
        const D = {};
        return (
          Jt(f.children, (O, U) => {
            D[U] = O === m ? d : nn(O, m, d);
          }),
          new me(f.segments, D)
        );
      }
      class Kn {
        constructor(m, d, D) {
          if (
            ((this.isAbsolute = m),
            (this.numberOfDoubleDots = d),
            (this.commands = D),
            m && D.length > 0 && kn(D[0]))
          )
            throw new s.vHH(
              4003,
              Wn && 'Root segment cannot have matrix parameters',
            );
          const O = D.find(Gt);
          if (O && O !== dn(D))
            throw new s.vHH(
              4004,
              Wn && '{outlets:{}} has to be the last command',
            );
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            '/' == this.commands[0]
          );
        }
      }
      class ai {
        constructor(m, d, D) {
          (this.segmentGroup = m), (this.processChildren = d), (this.index = D);
        }
      }
      function ui(f, m, d) {
        if (
          (f || (f = new me([], {})),
          0 === f.segments.length && f.hasChildren())
        )
          return jt(f, m, d);
        const D = (function hn(f, m, d) {
            let D = 0,
              O = m;
            const U = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; O < f.segments.length; ) {
              if (D >= d.length) return U;
              const K = f.segments[O],
                Be = d[D];
              if (Gt(Be)) break;
              const wt = `${Be}`,
                Qt = D < d.length - 1 ? d[D + 1] : null;
              if (O > 0 && void 0 === wt) break;
              if (wt && Qt && 'object' == typeof Qt && void 0 === Qt.outlets) {
                if (!Qn(wt, Qt, K)) return U;
                D += 2;
              } else {
                if (!Qn(wt, {}, K)) return U;
                D++;
              }
              O++;
            }
            return { match: !0, pathIndex: O, commandIndex: D };
          })(f, m, d),
          O = d.slice(D.commandIndex);
        if (D.match && D.pathIndex < f.segments.length) {
          const U = new me(f.segments.slice(0, D.pathIndex), {});
          return (
            (U.children[pt] = new me(
              f.segments.slice(D.pathIndex),
              f.children,
            )),
            jt(U, 0, O)
          );
        }
        return D.match && 0 === O.length
          ? new me(f.segments, {})
          : D.match && !f.hasChildren()
          ? Nn(f, m, d)
          : D.match
          ? jt(f, 0, O)
          : Nn(f, m, d);
      }
      function jt(f, m, d) {
        if (0 === d.length) return new me(f.segments, {});
        {
          const D = (function dr(f) {
              return Gt(f[0]) ? f[0].outlets : { [pt]: f };
            })(d),
            O = {};
          if (
            !D[pt] &&
            f.children[pt] &&
            1 === f.numberOfChildren &&
            0 === f.children[pt].segments.length
          ) {
            const U = jt(f.children[pt], m, d);
            return new me(f.segments, U.children);
          }
          return (
            Jt(D, (U, K) => {
              'string' == typeof U && (U = [U]),
                null !== U && (O[K] = ui(f.children[K], m, U));
            }),
            Jt(f.children, (U, K) => {
              void 0 === D[K] && (O[K] = U);
            }),
            new me(f.segments, O)
          );
        }
      }
      function Nn(f, m, d) {
        const D = f.segments.slice(0, m);
        let O = 0;
        for (; O < d.length; ) {
          const U = d[O];
          if (Gt(U)) {
            const wt = hi(U.outlets);
            return new me(D, wt);
          }
          if (0 === O && kn(d[0])) {
            D.push(new fe(f.segments[m].path, fi(d[0]))), O++;
            continue;
          }
          const K = Gt(U) ? U.outlets[pt] : `${U}`,
            Be = O < d.length - 1 ? d[O + 1] : null;
          K && Be && kn(Be)
            ? (D.push(new fe(K, fi(Be))), (O += 2))
            : (D.push(new fe(K, {})), O++);
        }
        return new me(D, {});
      }
      function hi(f) {
        const m = {};
        return (
          Jt(f, (d, D) => {
            'string' == typeof d && (d = [d]),
              null !== d && (m[D] = Nn(new me([], {}), 0, d));
          }),
          m
        );
      }
      function fi(f) {
        const m = {};
        return Jt(f, (d, D) => (m[D] = `${d}`)), m;
      }
      function Qn(f, m, d) {
        return f == d.path && mt(m, d.parameters);
      }
      const li = 'imperative';
      class An {
        constructor(m, d) {
          (this.id = m), (this.url = d);
        }
      }
      class Mi extends An {
        constructor(m, d, D = 'imperative', O = null) {
          super(m, d),
            (this.type = 0),
            (this.navigationTrigger = D),
            (this.restoredState = O);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class ri extends An {
        constructor(m, d, D) {
          super(m, d), (this.urlAfterRedirects = D), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class _n extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.reason = D), (this.code = O), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Ji extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.reason = D), (this.code = O), (this.type = 16);
        }
      }
      class zi extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.error = D), (this.target = O), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class ur extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Ai extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Xn extends An {
        constructor(m, d, D, O, U) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.shouldActivate = U),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class er extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Si extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Li {
        constructor(m) {
          (this.route = m), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class hr {
        constructor(m) {
          (this.route = m), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class or {
        constructor(m) {
          (this.snapshot = m), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class jn {
        constructor(m) {
          (this.snapshot = m), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class ki {
        constructor(m) {
          (this.snapshot = m), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Zi {
        constructor(m) {
          (this.snapshot = m), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class vr {
        constructor(m, d, D) {
          (this.routerEvent = m),
            (this.position = d),
            (this.anchor = D),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let Ti = (() => {
          class f {
            createUrlTree(d, D, O, U, K, Be) {
              return Or(d || D.root, O, U, K, Be);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
            f
          );
        })(),
        Ye = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function (m) {
                return Ti.ɵfac(m);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class Se {
        constructor(m) {
          this._root = m;
        }
        get root() {
          return this._root.value;
        }
        parent(m) {
          const d = this.pathFromRoot(m);
          return d.length > 1 ? d[d.length - 2] : null;
        }
        children(m) {
          const d = We(m, this._root);
          return d ? d.children.map(D => D.value) : [];
        }
        firstChild(m) {
          const d = We(m, this._root);
          return d && d.children.length > 0 ? d.children[0].value : null;
        }
        siblings(m) {
          const d = It(m, this._root);
          return d.length < 2
            ? []
            : d[d.length - 2].children.map(O => O.value).filter(O => O !== m);
        }
        pathFromRoot(m) {
          return It(m, this._root).map(d => d.value);
        }
      }
      function We(f, m) {
        if (f === m.value) return m;
        for (const d of m.children) {
          const D = We(f, d);
          if (D) return D;
        }
        return null;
      }
      function It(f, m) {
        if (f === m.value) return [m];
        for (const d of m.children) {
          const D = It(f, d);
          if (D.length) return D.unshift(m), D;
        }
        return [];
      }
      class kt {
        constructor(m, d) {
          (this.value = m), (this.children = d);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function un(f) {
        const m = {};
        return f && f.children.forEach(d => (m[d.value.outlet] = d)), m;
      }
      class bn extends Se {
        constructor(m, d) {
          super(m), (this.snapshot = d), Fr(this, m);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function On(f, m) {
        const d = (function ei(f, m) {
            const K = new br([], {}, {}, '', {}, pt, m, null, f.root, -1, {});
            return new yr('', new kt(K, []));
          })(f, m),
          D = new oe.X([new fe('', {})]),
          O = new oe.X({}),
          U = new oe.X({}),
          K = new oe.X({}),
          Be = new oe.X(''),
          wt = new Rn(D, O, K, Be, U, pt, m, d.root);
        return (wt.snapshot = d.root), new bn(new kt(wt, []), d);
      }
      class Rn {
        constructor(m, d, D, O, U, K, Be, wt) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = D),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = K),
            (this.component = Be),
            (this.title =
              this.data?.pipe((0, W.U)(Qt => Qt[l])) ?? (0, L.of)(void 0)),
            (this._futureSnapshot = wt);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, W.U)(m => rt(m)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, W.U)(m => rt(m)),
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function vi(f, m = 'emptyOnly') {
        const d = f.pathFromRoot;
        let D = 0;
        if ('always' !== m)
          for (D = d.length - 1; D >= 1; ) {
            const O = d[D],
              U = d[D - 1];
            if (O.routeConfig && '' === O.routeConfig.path) D--;
            else {
              if (U.component) break;
              D--;
            }
          }
        return (function Rr(f) {
          return f.reduce(
            (m, d) => ({
              params: { ...m.params, ...d.params },
              data: { ...m.data, ...d.data },
              resolve: {
                ...d.data,
                ...m.resolve,
                ...d.routeConfig?.data,
                ...d._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} },
          );
        })(d.slice(D));
      }
      class br {
        get title() {
          return this.data?.[l];
        }
        constructor(m, d, D, O, U, K, Be, wt, Qt, rn, Yn) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = D),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = K),
            (this.component = Be),
            (this.routeConfig = wt),
            (this._urlSegment = Qt),
            (this._lastPathIndex = rn),
            (this._resolve = Yn);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = rt(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = rt(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map(D => D.toString())
            .join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class yr extends Se {
        constructor(m, d) {
          super(d), (this.url = m), Fr(this, d);
        }
        toString() {
          return jr(this._root);
        }
      }
      function Fr(f, m) {
        (m.value._routerState = f), m.children.forEach(d => Fr(f, d));
      }
      function jr(f) {
        const m =
          f.children.length > 0 ? ` { ${f.children.map(jr).join(', ')} } ` : '';
        return `${f.value}${m}`;
      }
      function to(f) {
        if (f.snapshot) {
          const m = f.snapshot,
            d = f._futureSnapshot;
          (f.snapshot = d),
            mt(m.queryParams, d.queryParams) ||
              f.queryParams.next(d.queryParams),
            m.fragment !== d.fragment && f.fragment.next(d.fragment),
            mt(m.params, d.params) || f.params.next(d.params),
            (function Et(f, m) {
              if (f.length !== m.length) return !1;
              for (let d = 0; d < f.length; ++d) if (!mt(f[d], m[d])) return !1;
              return !0;
            })(m.url, d.url) || f.url.next(d.url),
            mt(m.data, d.data) || f.data.next(d.data);
        } else
          (f.snapshot = f._futureSnapshot), f.data.next(f._futureSnapshot.data);
      }
      function sr(f, m) {
        const d =
          mt(f.params, m.params) &&
          (function qe(f, m) {
            return (
              Mt(f, m) && f.every((d, D) => mt(d.parameters, m[D].parameters))
            );
          })(f.url, m.url);
        return (
          d &&
          !(!f.parent != !m.parent) &&
          (!f.parent || sr(f.parent, m.parent))
        );
      }
      function no(f, m, d) {
        if (d && f.shouldReuseRoute(m.value, d.value.snapshot)) {
          const D = d.value;
          D._futureSnapshot = m.value;
          const O = (function Ao(f, m, d) {
            return m.children.map(D => {
              for (const O of d.children)
                if (f.shouldReuseRoute(D.value, O.value.snapshot))
                  return no(f, D, O);
              return no(f, D);
            });
          })(f, m, d);
          return new kt(D, O);
        }
        {
          if (f.shouldAttach(m.value)) {
            const U = f.retrieve(m.value);
            if (null !== U) {
              const K = U.route;
              return (
                (K.value._futureSnapshot = m.value),
                (K.children = m.children.map(Be => no(f, Be))),
                K
              );
            }
          }
          const D = (function So(f) {
              return new Rn(
                new oe.X(f.url),
                new oe.X(f.params),
                new oe.X(f.queryParams),
                new oe.X(f.fragment),
                new oe.X(f.data),
                f.outlet,
                f.component,
                f,
              );
            })(m.value),
            O = m.children.map(U => no(f, U));
          return new kt(D, O);
        }
      }
      const Pr = 'ngNavigationCancelingError';
      function Nr(f, m) {
        const { redirectTo: d, navigationBehaviorOptions: D } = Dn(m)
            ? { redirectTo: m, navigationBehaviorOptions: void 0 }
            : m,
          O = zr(!1, 0, m);
        return (O.url = d), (O.navigationBehaviorOptions = D), O;
      }
      function zr(f, m, d) {
        const D = new Error('NavigationCancelingError: ' + (f || ''));
        return (D[Pr] = !0), (D.cancellationCode = m), d && (D.url = d), D;
      }
      function po(f) {
        return io(f) && Dn(f.url);
      }
      function io(f) {
        return f && f[Pr];
      }
      class Dr {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new $i()),
            (this.attachRef = null);
        }
      }
      let $i = (() => {
        class f {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(d, D) {
            const O = this.getOrCreateContext(d);
            (O.outlet = D), this.contexts.set(d, O);
          }
          onChildOutletDestroyed(d) {
            const D = this.getContext(d);
            D && ((D.outlet = null), (D.attachRef = null));
          }
          onOutletDeactivated() {
            const d = this.contexts;
            return (this.contexts = new Map()), d;
          }
          onOutletReAttached(d) {
            this.contexts = d;
          }
          getOrCreateContext(d) {
            let D = this.getContext(d);
            return D || ((D = new Dr()), this.contexts.set(d, D)), D;
          }
          getContext(d) {
            return this.contexts.get(d) || null;
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const xi = !1;
      let Cr = (() => {
        class f {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = pt),
              (this.activateEvents = new s.vpe()),
              (this.deactivateEvents = new s.vpe()),
              (this.attachEvents = new s.vpe()),
              (this.detachEvents = new s.vpe()),
              (this.parentContexts = (0, s.f3M)($i)),
              (this.location = (0, s.f3M)(s.s_b)),
              (this.changeDetector = (0, s.f3M)(s.sBO)),
              (this.environmentInjector = (0, s.f3M)(s.lqb));
          }
          ngOnChanges(d) {
            if (d.name) {
              const { firstChange: D, previousValue: O } = d.name;
              if (D) return;
              this.isTrackedInParentContexts(O) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(O)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(d) {
            return this.parentContexts.getContext(d)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const d = this.parentContexts.getContext(this.name);
            d?.route &&
              (d.attachRef
                ? this.attach(d.attachRef, d.route)
                : this.activateWith(d.route, d.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new s.vHH(4012, xi);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new s.vHH(4012, xi);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new s.vHH(4012, xi);
            this.location.detach();
            const d = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(d.instance),
              d
            );
          }
          attach(d, D) {
            (this.activated = d),
              (this._activatedRoute = D),
              this.location.insert(d.hostView),
              this.attachEvents.emit(d.instance);
          }
          deactivate() {
            if (this.activated) {
              const d = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(d);
            }
          }
          activateWith(d, D) {
            if (this.isActivated) throw new s.vHH(4013, xi);
            this._activatedRoute = d;
            const O = this.location,
              K = d.snapshot.component,
              Be = this.parentContexts.getOrCreateContext(this.name).children,
              wt = new xr(d, Be, O.injector);
            if (
              D &&
              (function ro(f) {
                return !!f.resolveComponentFactory;
              })(D)
            ) {
              const Qt = D.resolveComponentFactory(K);
              this.activated = O.createComponent(Qt, O.length, wt);
            } else
              this.activated = O.createComponent(K, {
                index: O.length,
                injector: wt,
                environmentInjector: D ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵdir = s.lG2({
            type: f,
            selectors: [['router-outlet']],
            inputs: { name: 'name' },
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
            standalone: !0,
            features: [s.TTD],
          })),
          f
        );
      })();
      class xr {
        constructor(m, d, D) {
          (this.route = m), (this.childContexts = d), (this.parent = D);
        }
        get(m, d) {
          return m === Rn
            ? this.route
            : m === $i
            ? this.childContexts
            : this.parent.get(m, d);
        }
      }
      let $r = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵcmp = s.Xpm({
            type: f,
            selectors: [['ng-component']],
            standalone: !0,
            features: [s.jDz],
            decls: 1,
            vars: 0,
            template: function (d, D) {
              1 & d && s._UZ(0, 'router-outlet');
            },
            dependencies: [Cr],
            encapsulation: 2,
          })),
          f
        );
      })();
      function ar(f, m) {
        return (
          f.providers &&
            !f._injector &&
            (f._injector = (0, s.MMx)(f.providers, m, `Route: ${f.path}`)),
          f._injector ?? m
        );
      }
      function pi(f) {
        const m = f.children && f.children.map(pi),
          d = m ? { ...f, children: m } : { ...f };
        return (
          !d.component &&
            !d.loadComponent &&
            (m || d.loadChildren) &&
            d.outlet &&
            d.outlet !== pt &&
            (d.component = $r),
          d
        );
      }
      function zn(f) {
        return f.outlet || pt;
      }
      function ci(f, m) {
        const d = f.filter(D => zn(D) === m);
        return d.push(...f.filter(D => zn(D) !== m)), d;
      }
      function Gr(f) {
        if (!f) return null;
        if (f.routeConfig?._injector) return f.routeConfig._injector;
        for (let m = f.parent; m; m = m.parent) {
          const d = m.routeConfig;
          if (d?._loadedInjector) return d._loadedInjector;
          if (d?._injector) return d._injector;
        }
        return null;
      }
      class Er {
        constructor(m, d, D, O) {
          (this.routeReuseStrategy = m),
            (this.futureState = d),
            (this.currState = D),
            (this.forwardEvent = O);
        }
        activate(m) {
          const d = this.futureState._root,
            D = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(d, D, m),
            to(this.futureState.root),
            this.activateChildRoutes(d, D, m);
        }
        deactivateChildRoutes(m, d, D) {
          const O = un(d);
          m.children.forEach(U => {
            const K = U.value.outlet;
            this.deactivateRoutes(U, O[K], D), delete O[K];
          }),
            Jt(O, (U, K) => {
              this.deactivateRouteAndItsChildren(U, D);
            });
        }
        deactivateRoutes(m, d, D) {
          const O = m.value,
            U = d ? d.value : null;
          if (O === U)
            if (O.component) {
              const K = D.getContext(O.outlet);
              K && this.deactivateChildRoutes(m, d, K.children);
            } else this.deactivateChildRoutes(m, d, D);
          else U && this.deactivateRouteAndItsChildren(d, D);
        }
        deactivateRouteAndItsChildren(m, d) {
          m.value.component &&
          this.routeReuseStrategy.shouldDetach(m.value.snapshot)
            ? this.detachAndStoreRouteSubtree(m, d)
            : this.deactivateRouteAndOutlet(m, d);
        }
        detachAndStoreRouteSubtree(m, d) {
          const D = d.getContext(m.value.outlet),
            O = D && m.value.component ? D.children : d,
            U = un(m);
          for (const K of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[K], O);
          if (D && D.outlet) {
            const K = D.outlet.detach(),
              Be = D.children.onOutletDeactivated();
            this.routeReuseStrategy.store(m.value.snapshot, {
              componentRef: K,
              route: m,
              contexts: Be,
            });
          }
        }
        deactivateRouteAndOutlet(m, d) {
          const D = d.getContext(m.value.outlet),
            O = D && m.value.component ? D.children : d,
            U = un(m);
          for (const K of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[K], O);
          D &&
            (D.outlet &&
              (D.outlet.deactivate(), D.children.onOutletDeactivated()),
            (D.attachRef = null),
            (D.resolver = null),
            (D.route = null));
        }
        activateChildRoutes(m, d, D) {
          const O = un(d);
          m.children.forEach(U => {
            this.activateRoutes(U, O[U.value.outlet], D),
              this.forwardEvent(new Zi(U.value.snapshot));
          }),
            m.children.length && this.forwardEvent(new jn(m.value.snapshot));
        }
        activateRoutes(m, d, D) {
          const O = m.value,
            U = d ? d.value : null;
          if ((to(O), O === U))
            if (O.component) {
              const K = D.getOrCreateContext(O.outlet);
              this.activateChildRoutes(m, d, K.children);
            } else this.activateChildRoutes(m, d, D);
          else if (O.component) {
            const K = D.getOrCreateContext(O.outlet);
            if (this.routeReuseStrategy.shouldAttach(O.snapshot)) {
              const Be = this.routeReuseStrategy.retrieve(O.snapshot);
              this.routeReuseStrategy.store(O.snapshot, null),
                K.children.onOutletReAttached(Be.contexts),
                (K.attachRef = Be.componentRef),
                (K.route = Be.route.value),
                K.outlet && K.outlet.attach(Be.componentRef, Be.route.value),
                to(Be.route.value),
                this.activateChildRoutes(m, null, K.children);
            } else {
              const Be = Gr(O.snapshot),
                wt = Be?.get(s._Vd) ?? null;
              (K.attachRef = null),
                (K.route = O),
                (K.resolver = wt),
                (K.injector = Be),
                K.outlet && K.outlet.activateWith(O, K.injector),
                this.activateChildRoutes(m, null, K.children);
            }
          } else this.activateChildRoutes(m, null, D);
        }
      }
      class Ei {
        constructor(m) {
          (this.path = m), (this.route = this.path[this.path.length - 1]);
        }
      }
      class wr {
        constructor(m, d) {
          (this.component = m), (this.route = d);
        }
      }
      function Br(f, m, d) {
        const D = f._root;
        return Vr(D, m ? m._root : null, d, [D.value]);
      }
      function Ri(f, m) {
        const d = Symbol(),
          D = m.get(f, d);
        return D === d
          ? 'function' != typeof f || (0, s.Z0I)(f)
            ? m.get(f)
            : f
          : D;
      }
      function Vr(
        f,
        m,
        d,
        D,
        O = { canDeactivateChecks: [], canActivateChecks: [] },
      ) {
        const U = un(m);
        return (
          f.children.forEach(K => {
            (function so(
              f,
              m,
              d,
              D,
              O = { canDeactivateChecks: [], canActivateChecks: [] },
            ) {
              const U = f.value,
                K = m ? m.value : null,
                Be = d ? d.getContext(f.value.outlet) : null;
              if (K && U.routeConfig === K.routeConfig) {
                const wt = (function vn(f, m, d) {
                  if ('function' == typeof d) return d(f, m);
                  switch (d) {
                    case 'pathParamsChange':
                      return !Mt(f.url, m.url);
                    case 'pathParamsOrQueryParamsChange':
                      return (
                        !Mt(f.url, m.url) || !mt(f.queryParams, m.queryParams)
                      );
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !sr(f, m) || !mt(f.queryParams, m.queryParams);
                    default:
                      return !sr(f, m);
                  }
                })(K, U, U.routeConfig.runGuardsAndResolvers);
                wt
                  ? O.canActivateChecks.push(new Ei(D))
                  : ((U.data = K.data), (U._resolvedData = K._resolvedData)),
                  Vr(f, m, U.component ? (Be ? Be.children : null) : d, D, O),
                  wt &&
                    Be &&
                    Be.outlet &&
                    Be.outlet.isActivated &&
                    O.canDeactivateChecks.push(new wr(Be.outlet.component, K));
              } else
                K && fr(m, Be, O),
                  O.canActivateChecks.push(new Ei(D)),
                  Vr(
                    f,
                    null,
                    U.component ? (Be ? Be.children : null) : d,
                    D,
                    O,
                  );
            })(K, U[K.value.outlet], d, D.concat([K.value]), O),
              delete U[K.value.outlet];
          }),
          Jt(U, (K, Be) => fr(K, d.getContext(Be), O)),
          O
        );
      }
      function fr(f, m, d) {
        const D = un(f),
          O = f.value;
        Jt(D, (U, K) => {
          fr(U, O.component ? (m ? m.children.getContext(K) : null) : m, d);
        }),
          d.canDeactivateChecks.push(
            new wr(
              O.component && m && m.outlet && m.outlet.isActivated
                ? m.outlet.component
                : null,
              O,
            ),
          );
      }
      function T(f) {
        return 'function' == typeof f;
      }
      function pr(f) {
        return f instanceof ue || 'EmptyError' === f?.name;
      }
      const go = Symbol('INITIAL_VALUE');
      function Zn() {
        return (0, se.w)(f =>
          (0, ve.a)(f.map(m => m.pipe((0, ne.q)(1), (0, X.O)(go)))).pipe(
            (0, W.U)(m => {
              for (const d of m)
                if (!0 !== d) {
                  if (d === go) return go;
                  if (!1 === d || d instanceof de) return d;
                }
              return !0;
            }),
            (0, we.h)(m => m !== go),
            (0, ne.q)(1),
          ),
        );
      }
      function qi(f) {
        return (0, ae.z)(
          (0, He.b)(m => {
            if (Dn(m)) throw Nr(0, m);
          }),
          (0, W.U)(m => !0 === m),
        );
      }
      const Ar = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function mr(f, m, d, D, O) {
        const U = Oo(f, m, d);
        return U.matched
          ? (function qr(f, m, d, D) {
              const O = m.canMatch;
              if (!O || 0 === O.length) return (0, L.of)(!0);
              const U = O.map(K => {
                const Be = Ri(K, f);
                return Lt(
                  (function di(f) {
                    return f && T(f.canMatch);
                  })(Be)
                    ? Be.canMatch(m, d)
                    : f.runInContext(() => Be(m, d)),
                );
              });
              return (0, L.of)(U).pipe(Zn(), qi());
            })((D = ar(m, D)), m, d).pipe(
              (0, W.U)(K => (!0 === K ? U : { ...Ar })),
            )
          : (0, L.of)(U);
      }
      function Oo(f, m, d) {
        if ('' === m.path)
          return 'full' === m.pathMatch && (f.hasChildren() || d.length > 0)
            ? { ...Ar }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: d,
                parameters: {},
                positionalParamSegments: {},
              };
        const O = (m.matcher || ft)(d, f, m);
        if (!O) return { ...Ar };
        const U = {};
        Jt(O.posParams, (Be, wt) => {
          U[wt] = Be.path;
        });
        const K =
          O.consumed.length > 0
            ? { ...U, ...O.consumed[O.consumed.length - 1].parameters }
            : U;
        return {
          matched: !0,
          consumedSegments: O.consumed,
          remainingSegments: d.slice(O.consumed.length),
          parameters: K,
          positionalParamSegments: O.posParams ?? {},
        };
      }
      function gr(f, m, d, D) {
        if (
          d.length > 0 &&
          (function Ho(f, m, d) {
            return d.some(D => lo(f, m, D) && zn(D) !== pt);
          })(f, d, D)
        ) {
          const U = new me(
            m,
            (function us(f, m, d, D) {
              const O = {};
              (O[pt] = D),
                (D._sourceSegment = f),
                (D._segmentIndexShift = m.length);
              for (const U of d)
                if ('' === U.path && zn(U) !== pt) {
                  const K = new me([], {});
                  (K._sourceSegment = f),
                    (K._segmentIndexShift = m.length),
                    (O[zn(U)] = K);
                }
              return O;
            })(f, m, D, new me(d, f.children)),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: [] }
          );
        }
        if (
          0 === d.length &&
          (function Qr(f, m, d) {
            return d.some(D => lo(f, m, D));
          })(f, d, D)
        ) {
          const U = new me(
            f.segments,
            (function ds(f, m, d, D, O) {
              const U = {};
              for (const K of D)
                if (lo(f, d, K) && !O[zn(K)]) {
                  const Be = new me([], {});
                  (Be._sourceSegment = f),
                    (Be._segmentIndexShift = m.length),
                    (U[zn(K)] = Be);
                }
              return { ...O, ...U };
            })(f, m, d, D, f.children),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: d }
          );
        }
        const O = new me(f.segments, f.children);
        return (
          (O._sourceSegment = f),
          (O._segmentIndexShift = m.length),
          { segmentGroup: O, slicedSegments: d }
        );
      }
      function lo(f, m, d) {
        return (
          (!(f.hasChildren() || m.length > 0) || 'full' !== d.pathMatch) &&
          '' === d.path
        );
      }
      function B(f, m, d, D) {
        return (
          !!(zn(f) === D || (D !== pt && lo(m, d, f))) &&
          ('**' === f.path || Oo(m, f, d).matched)
        );
      }
      function h(f, m, d) {
        return 0 === m.length && !f.children[d];
      }
      const p = !1;
      class S {
        constructor(m) {
          this.segmentGroup = m || null;
        }
      }
      class V {
        constructor(m) {
          this.urlTree = m;
        }
      }
      function q(f) {
        return (0, pe._)(new S(f));
      }
      function xe(f) {
        return (0, pe._)(new V(f));
      }
      class Zt {
        constructor(m, d, D, O, U) {
          (this.injector = m),
            (this.configLoader = d),
            (this.urlSerializer = D),
            (this.urlTree = O),
            (this.config = U),
            (this.allowRedirects = !0);
        }
        apply() {
          const m = gr(this.urlTree.root, [], [], this.config).segmentGroup,
            d = new me(m.segments, m.children);
          return this.expandSegmentGroup(this.injector, this.config, d, pt)
            .pipe(
              (0, W.U)(U =>
                this.createUrlTree(
                  Bt(U),
                  this.urlTree.queryParams,
                  this.urlTree.fragment,
                ),
              ),
            )
            .pipe(
              (0, De.K)(U => {
                if (U instanceof V)
                  return (this.allowRedirects = !1), this.match(U.urlTree);
                throw U instanceof S ? this.noMatchError(U) : U;
              }),
            );
        }
        match(m) {
          return this.expandSegmentGroup(this.injector, this.config, m.root, pt)
            .pipe(
              (0, W.U)(O =>
                this.createUrlTree(Bt(O), m.queryParams, m.fragment),
              ),
            )
            .pipe(
              (0, De.K)(O => {
                throw O instanceof S ? this.noMatchError(O) : O;
              }),
            );
        }
        noMatchError(m) {
          return new s.vHH(4002, p);
        }
        createUrlTree(m, d, D) {
          const O = dt(m);
          return new de(O, d, D);
        }
        expandSegmentGroup(m, d, D, O) {
          return 0 === D.segments.length && D.hasChildren()
            ? this.expandChildren(m, d, D).pipe((0, W.U)(U => new me([], U)))
            : this.expandSegment(m, D, d, D.segments, O, !0);
        }
        expandChildren(m, d, D) {
          const O = [];
          for (const U of Object.keys(D.children))
            'primary' === U ? O.unshift(U) : O.push(U);
          return (0, x.D)(O).pipe(
            (0, $e.b)(U => {
              const K = D.children[U],
                Be = ci(d, U);
              return this.expandSegmentGroup(m, Be, K, U).pipe(
                (0, W.U)(wt => ({ segment: wt, outlet: U })),
              );
            }),
            (0, je.R)((U, K) => ((U[K.outlet] = K.segment), U), {}),
            Re(),
          );
        }
        expandSegment(m, d, D, O, U, K) {
          return (0, x.D)(D).pipe(
            (0, $e.b)(Be =>
              this.expandSegmentAgainstRoute(m, d, D, Be, O, U, K).pipe(
                (0, De.K)(Qt => {
                  if (Qt instanceof S) return (0, L.of)(null);
                  throw Qt;
                }),
              ),
            ),
            At(Be => !!Be),
            (0, De.K)((Be, wt) => {
              if (pr(Be)) return h(d, O, U) ? (0, L.of)(new me([], {})) : q(d);
              throw Be;
            }),
          );
        }
        expandSegmentAgainstRoute(m, d, D, O, U, K, Be) {
          return B(O, d, U, K)
            ? void 0 === O.redirectTo
              ? this.matchSegmentAgainstRoute(m, d, O, U, K)
              : Be && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(m, d, D, O, U, K)
              : q(d)
            : q(d);
        }
        expandSegmentAgainstRouteUsingRedirect(m, d, D, O, U, K) {
          return '**' === O.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(m, D, O, K)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                m,
                d,
                D,
                O,
                U,
                K,
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(m, d, D, O) {
          const U = this.applyRedirectCommands([], D.redirectTo, {});
          return D.redirectTo.startsWith('/')
            ? xe(U)
            : this.lineralizeSegments(D, U).pipe(
                (0, nt.z)(K => {
                  const Be = new me(K, {});
                  return this.expandSegment(m, Be, d, K, O, !1);
                }),
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(m, d, D, O, U, K) {
          const {
            matched: Be,
            consumedSegments: wt,
            remainingSegments: Qt,
            positionalParamSegments: rn,
          } = Oo(d, O, U);
          if (!Be) return q(d);
          const Yn = this.applyRedirectCommands(wt, O.redirectTo, rn);
          return O.redirectTo.startsWith('/')
            ? xe(Yn)
            : this.lineralizeSegments(O, Yn).pipe(
                (0, nt.z)(Hi =>
                  this.expandSegment(m, d, D, Hi.concat(Qt), K, !1),
                ),
              );
        }
        matchSegmentAgainstRoute(m, d, D, O, U) {
          return '**' === D.path
            ? ((m = ar(D, m)),
              D.loadChildren
                ? (D._loadedRoutes
                    ? (0, L.of)({
                        routes: D._loadedRoutes,
                        injector: D._loadedInjector,
                      })
                    : this.configLoader.loadChildren(m, D)
                  ).pipe(
                    (0, W.U)(
                      Be => (
                        (D._loadedRoutes = Be.routes),
                        (D._loadedInjector = Be.injector),
                        new me(O, {})
                      ),
                    ),
                  )
                : (0, L.of)(new me(O, {})))
            : mr(d, D, O, m).pipe(
                (0, se.w)(
                  ({
                    matched: K,
                    consumedSegments: Be,
                    remainingSegments: wt,
                  }) =>
                    K
                      ? this.getChildConfig((m = D._injector ?? m), D, O).pipe(
                          (0, nt.z)(rn => {
                            const Yn = rn.injector ?? m,
                              Hi = rn.routes,
                              { segmentGroup: yo, slicedSegments: uo } = gr(
                                d,
                                Be,
                                wt,
                                Hi,
                              ),
                              Po = new me(yo.segments, yo.children);
                            if (0 === uo.length && Po.hasChildren())
                              return this.expandChildren(Yn, Hi, Po).pipe(
                                (0, W.U)(rs => new me(Be, rs)),
                              );
                            if (0 === Hi.length && 0 === uo.length)
                              return (0, L.of)(new me(Be, {}));
                            const _r = zn(D) === U;
                            return this.expandSegment(
                              Yn,
                              Po,
                              Hi,
                              uo,
                              _r ? pt : U,
                              !0,
                            ).pipe(
                              (0, W.U)(
                                No =>
                                  new me(Be.concat(No.segments), No.children),
                              ),
                            );
                          }),
                        )
                      : q(d),
                ),
              );
        }
        getChildConfig(m, d, D) {
          return d.children
            ? (0, L.of)({ routes: d.children, injector: m })
            : d.loadChildren
            ? void 0 !== d._loadedRoutes
              ? (0, L.of)({
                  routes: d._loadedRoutes,
                  injector: d._loadedInjector,
                })
              : (function Vi(f, m, d, D) {
                  const O = m.canLoad;
                  if (void 0 === O || 0 === O.length) return (0, L.of)(!0);
                  const U = O.map(K => {
                    const Be = Ri(K, f);
                    return Lt(
                      (function w(f) {
                        return f && T(f.canLoad);
                      })(Be)
                        ? Be.canLoad(m, d)
                        : f.runInContext(() => Be(m, d)),
                    );
                  });
                  return (0, L.of)(U).pipe(Zn(), qi());
                })(m, d, D).pipe(
                  (0, nt.z)(O =>
                    O
                      ? this.configLoader.loadChildren(m, d).pipe(
                          (0, He.b)(U => {
                            (d._loadedRoutes = U.routes),
                              (d._loadedInjector = U.injector);
                          }),
                        )
                      : (function Xe(f) {
                          return (0, pe._)(zr(p, 3));
                        })(),
                  ),
                )
            : (0, L.of)({ routes: [], injector: m });
        }
        lineralizeSegments(m, d) {
          let D = [],
            O = d.root;
          for (;;) {
            if (((D = D.concat(O.segments)), 0 === O.numberOfChildren))
              return (0, L.of)(D);
            if (O.numberOfChildren > 1 || !O.children[pt])
              return m.redirectTo, (0, pe._)(new s.vHH(4e3, p));
            O = O.children[pt];
          }
        }
        applyRedirectCommands(m, d, D) {
          return this.applyRedirectCreateUrlTree(
            d,
            this.urlSerializer.parse(d),
            m,
            D,
          );
        }
        applyRedirectCreateUrlTree(m, d, D, O) {
          const U = this.createSegmentGroup(m, d.root, D, O);
          return new de(
            U,
            this.createQueryParams(d.queryParams, this.urlTree.queryParams),
            d.fragment,
          );
        }
        createQueryParams(m, d) {
          const D = {};
          return (
            Jt(m, (O, U) => {
              if ('string' == typeof O && O.startsWith(':')) {
                const Be = O.substring(1);
                D[U] = d[Be];
              } else D[U] = O;
            }),
            D
          );
        }
        createSegmentGroup(m, d, D, O) {
          const U = this.createSegments(m, d.segments, D, O);
          let K = {};
          return (
            Jt(d.children, (Be, wt) => {
              K[wt] = this.createSegmentGroup(m, Be, D, O);
            }),
            new me(U, K)
          );
        }
        createSegments(m, d, D, O) {
          return d.map(U =>
            U.path.startsWith(':')
              ? this.findPosParam(m, U, O)
              : this.findOrReturn(U, D),
          );
        }
        findPosParam(m, d, D) {
          const O = D[d.path.substring(1)];
          if (!O) throw new s.vHH(4001, p);
          return O;
        }
        findOrReturn(m, d) {
          let D = 0;
          for (const O of d) {
            if (O.path === m.path) return d.splice(D), O;
            D++;
          }
          return m;
        }
      }
      class sn {}
      class Hn {
        constructor(m, d, D, O, U, K, Be) {
          (this.injector = m),
            (this.rootComponentType = d),
            (this.config = D),
            (this.urlTree = O),
            (this.url = U),
            (this.paramsInheritanceStrategy = K),
            (this.urlSerializer = Be);
        }
        recognize() {
          const m = gr(
            this.urlTree.root,
            [],
            [],
            this.config.filter(d => void 0 === d.redirectTo),
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            m,
            pt,
          ).pipe(
            (0, W.U)(d => {
              if (null === d) return null;
              const D = new br(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  pt,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {},
                ),
                O = new kt(D, d),
                U = new yr(this.url, O);
              return this.inheritParamsAndData(U._root), U;
            }),
          );
        }
        inheritParamsAndData(m) {
          const d = m.value,
            D = vi(d, this.paramsInheritanceStrategy);
          (d.params = Object.freeze(D.params)),
            (d.data = Object.freeze(D.data)),
            m.children.forEach(O => this.inheritParamsAndData(O));
        }
        processSegmentGroup(m, d, D, O) {
          return 0 === D.segments.length && D.hasChildren()
            ? this.processChildren(m, d, D)
            : this.processSegment(m, d, D, D.segments, O);
        }
        processChildren(m, d, D) {
          return (0, x.D)(Object.keys(D.children)).pipe(
            (0, $e.b)(O => {
              const U = D.children[O],
                K = ci(d, O);
              return this.processSegmentGroup(m, K, U, O);
            }),
            (0, je.R)((O, U) => (O && U ? (O.push(...U), O) : null)),
            (0, Ne.o)(O => null !== O),
            ut(null),
            Re(),
            (0, W.U)(O => {
              if (null === O) return null;
              const U = ii(O);
              return (
                (function Jn(f) {
                  f.sort((m, d) =>
                    m.value.outlet === pt
                      ? -1
                      : d.value.outlet === pt
                      ? 1
                      : m.value.outlet.localeCompare(d.value.outlet),
                  );
                })(U),
                U
              );
            }),
          );
        }
        processSegment(m, d, D, O, U) {
          return (0, x.D)(d).pipe(
            (0, $e.b)(K =>
              this.processSegmentAgainstRoute(K._injector ?? m, K, D, O, U),
            ),
            At(K => !!K),
            (0, De.K)(K => {
              if (pr(K)) return h(D, O, U) ? (0, L.of)([]) : (0, L.of)(null);
              throw K;
            }),
          );
        }
        processSegmentAgainstRoute(m, d, D, O, U) {
          if (d.redirectTo || !B(d, D, O, U)) return (0, L.of)(null);
          let K;
          if ('**' === d.path) {
            const Be = O.length > 0 ? dn(O).parameters : {},
              wt = y(D) + O.length,
              Qt = new br(
                O,
                Be,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                A(d),
                zn(d),
                d.component ?? d._loadedComponent ?? null,
                d,
                Gi(D),
                wt,
                j(d),
              );
            K = (0, L.of)({
              snapshot: Qt,
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            K = mr(D, d, O, m).pipe(
              (0, W.U)(
                ({
                  matched: Be,
                  consumedSegments: wt,
                  remainingSegments: Qt,
                  parameters: rn,
                }) => {
                  if (!Be) return null;
                  const Yn = y(D) + wt.length;
                  return {
                    snapshot: new br(
                      wt,
                      rn,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      A(d),
                      zn(d),
                      d.component ?? d._loadedComponent ?? null,
                      d,
                      Gi(D),
                      Yn,
                      j(d),
                    ),
                    consumedSegments: wt,
                    remainingSegments: Qt,
                  };
                },
              ),
            );
          return K.pipe(
            (0, se.w)(Be => {
              if (null === Be) return (0, L.of)(null);
              const {
                snapshot: wt,
                consumedSegments: Qt,
                remainingSegments: rn,
              } = Be;
              m = d._injector ?? m;
              const Yn = d._loadedInjector ?? m,
                Hi = (function bi(f) {
                  return f.children
                    ? f.children
                    : f.loadChildren
                    ? f._loadedRoutes
                    : [];
                })(d),
                { segmentGroup: yo, slicedSegments: uo } = gr(
                  D,
                  Qt,
                  rn,
                  Hi.filter(_r => void 0 === _r.redirectTo),
                );
              if (0 === uo.length && yo.hasChildren())
                return this.processChildren(Yn, Hi, yo).pipe(
                  (0, W.U)(_r => (null === _r ? null : [new kt(wt, _r)])),
                );
              if (0 === Hi.length && 0 === uo.length)
                return (0, L.of)([new kt(wt, [])]);
              const Po = zn(d) === U;
              return this.processSegment(Yn, Hi, yo, uo, Po ? pt : U).pipe(
                (0, W.U)(_r => (null === _r ? null : [new kt(wt, _r)])),
              );
            }),
          );
        }
      }
      function Ui(f) {
        const m = f.value.routeConfig;
        return m && '' === m.path && void 0 === m.redirectTo;
      }
      function ii(f) {
        const m = [],
          d = new Set();
        for (const D of f) {
          if (!Ui(D)) {
            m.push(D);
            continue;
          }
          const O = m.find(U => D.value.routeConfig === U.value.routeConfig);
          void 0 !== O ? (O.children.push(...D.children), d.add(O)) : m.push(D);
        }
        for (const D of d) {
          const O = ii(D.children);
          m.push(new kt(D.value, O));
        }
        return m.filter(D => !d.has(D));
      }
      function Gi(f) {
        let m = f;
        for (; m._sourceSegment; ) m = m._sourceSegment;
        return m;
      }
      function y(f) {
        let m = f,
          d = m._segmentIndexShift ?? 0;
        for (; m._sourceSegment; )
          (m = m._sourceSegment), (d += m._segmentIndexShift ?? 0);
        return d - 1;
      }
      function A(f) {
        return f.data || {};
      }
      function j(f) {
        return f.resolve || {};
      }
      function Yt(f) {
        return 'string' == typeof f.title || null === f.title;
      }
      function $t(f) {
        return (0, se.w)(m => {
          const d = f(m);
          return d ? (0, x.D)(d).pipe((0, W.U)(() => m)) : (0, L.of)(m);
        });
      }
      const gn = new s.OlP('ROUTES');
      let $n = (() => {
        class f {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, s.f3M)(s.Sil));
          }
          loadComponent(d) {
            if (this.componentLoaders.get(d))
              return this.componentLoaders.get(d);
            if (d._loadedComponent) return (0, L.of)(d._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(d);
            const D = Lt(d.loadComponent()).pipe(
                (0, W.U)(si),
                (0, He.b)(U => {
                  this.onLoadEndListener && this.onLoadEndListener(d),
                    (d._loadedComponent = U);
                }),
                (0, ct.x)(() => {
                  this.componentLoaders.delete(d);
                }),
              ),
              O = new _t(D, () => new lt.x()).pipe(Le());
            return this.componentLoaders.set(d, O), O;
          }
          loadChildren(d, D) {
            if (this.childrenLoaders.get(D)) return this.childrenLoaders.get(D);
            if (D._loadedRoutes)
              return (0, L.of)({
                routes: D._loadedRoutes,
                injector: D._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(D);
            const U = this.loadModuleFactoryOrRoutes(D.loadChildren).pipe(
                (0, W.U)(Be => {
                  this.onLoadEndListener && this.onLoadEndListener(D);
                  let wt,
                    Qt,
                    rn = !1;
                  Array.isArray(Be)
                    ? (Qt = Be)
                    : ((wt = Be.create(d).injector),
                      (Qt = mn(wt.get(gn, [], s.XFs.Self | s.XFs.Optional))));
                  return { routes: Qt.map(pi), injector: wt };
                }),
                (0, ct.x)(() => {
                  this.childrenLoaders.delete(D);
                }),
              ),
              K = new _t(U, () => new lt.x()).pipe(Le());
            return this.childrenLoaders.set(D, K), K;
          }
          loadModuleFactoryOrRoutes(d) {
            return Lt(d()).pipe(
              (0, W.U)(si),
              (0, nt.z)(D =>
                D instanceof s.YKP || Array.isArray(D)
                  ? (0, L.of)(D)
                  : (0, x.D)(this.compiler.compileModuleAsync(D)),
              ),
            );
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function si(f) {
        return (function mi(f) {
          return f && 'object' == typeof f && 'default' in f;
        })(f)
          ? f.default
          : f;
      }
      let Qi = (() => {
        class f {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new lt.x()),
              (this.configLoader = (0, s.f3M)($n)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.urlSerializer = (0, s.f3M)(wn)),
              (this.rootContexts = (0, s.f3M)($i)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, L.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = O =>
                this.events.next(new hr(O))),
              (this.configLoader.onLoadStartListener = O =>
                this.events.next(new Li(O)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(d) {
            const D = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...d, id: D });
          }
          setupNavigations(d) {
            return (
              (this.transitions = new oe.X({
                id: 0,
                targetPageId: 0,
                currentUrlTree: d.currentUrlTree,
                currentRawUrl: d.currentUrlTree,
                extractedUrl: d.urlHandlingStrategy.extract(d.currentUrlTree),
                urlAfterRedirects: d.urlHandlingStrategy.extract(
                  d.currentUrlTree,
                ),
                rawUrl: d.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: li,
                restoredState: null,
                currentSnapshot: d.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: d.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, we.h)(D => 0 !== D.id),
                (0, W.U)(D => ({
                  ...D,
                  extractedUrl: d.urlHandlingStrategy.extract(D.rawUrl),
                })),
                (0, se.w)(D => {
                  let O = !1,
                    U = !1;
                  return (0, L.of)(D).pipe(
                    (0, He.b)(K => {
                      this.currentNavigation = {
                        id: K.id,
                        initialUrl: K.rawUrl,
                        extractedUrl: K.extractedUrl,
                        trigger: K.source,
                        extras: K.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, se.w)(K => {
                      const Be = d.browserUrlTree.toString(),
                        wt =
                          !d.navigated ||
                          K.extractedUrl.toString() !== Be ||
                          Be !== d.currentUrlTree.toString();
                      if (
                        !wt &&
                        'reload' !==
                          (K.extras.onSameUrlNavigation ??
                            d.onSameUrlNavigation)
                      ) {
                        const rn = '';
                        return (
                          this.events.next(
                            new Ji(K.id, d.serializeUrl(D.rawUrl), rn, 0),
                          ),
                          (d.rawUrlTree = K.rawUrl),
                          K.resolve(null),
                          Ve.E
                        );
                      }
                      if (d.urlHandlingStrategy.shouldProcessUrl(K.rawUrl))
                        return (
                          Ur(K.source) && (d.browserUrlTree = K.extractedUrl),
                          (0, L.of)(K).pipe(
                            (0, se.w)(rn => {
                              const Yn = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new Mi(
                                    rn.id,
                                    this.urlSerializer.serialize(
                                      rn.extractedUrl,
                                    ),
                                    rn.source,
                                    rn.restoredState,
                                  ),
                                ),
                                Yn !== this.transitions?.getValue()
                                  ? Ve.E
                                  : Promise.resolve(rn)
                              );
                            }),
                            (function zt(f, m, d, D) {
                              return (0, se.w)(O =>
                                (function gt(f, m, d, D, O) {
                                  return new Zt(f, m, d, D, O).apply();
                                })(f, m, d, O.extractedUrl, D).pipe(
                                  (0, W.U)(U => ({
                                    ...O,
                                    urlAfterRedirects: U,
                                  })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              d.config,
                            ),
                            (0, He.b)(rn => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: rn.urlAfterRedirects,
                              }),
                                (D.urlAfterRedirects = rn.urlAfterRedirects);
                            }),
                            (function ce(f, m, d, D, O) {
                              return (0, nt.z)(U =>
                                (function xn(
                                  f,
                                  m,
                                  d,
                                  D,
                                  O,
                                  U,
                                  K = 'emptyOnly',
                                ) {
                                  return new Hn(f, m, d, D, O, K, U)
                                    .recognize()
                                    .pipe(
                                      (0, se.w)(Be =>
                                        null === Be
                                          ? (function fn(f) {
                                              return new ie.y(m => m.error(f));
                                            })(new sn())
                                          : (0, L.of)(Be),
                                      ),
                                    );
                                })(
                                  f,
                                  m,
                                  d,
                                  U.urlAfterRedirects,
                                  D.serialize(U.urlAfterRedirects),
                                  D,
                                  O,
                                ).pipe(
                                  (0, W.U)(K => ({ ...U, targetSnapshot: K })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              d.config,
                              this.urlSerializer,
                              d.paramsInheritanceStrategy,
                            ),
                            (0, He.b)(rn => {
                              if (
                                ((D.targetSnapshot = rn.targetSnapshot),
                                'eager' === d.urlUpdateStrategy)
                              ) {
                                if (!rn.extras.skipLocationChange) {
                                  const Hi = d.urlHandlingStrategy.merge(
                                    rn.urlAfterRedirects,
                                    rn.rawUrl,
                                  );
                                  d.setBrowserUrl(Hi, rn);
                                }
                                d.browserUrlTree = rn.urlAfterRedirects;
                              }
                              const Yn = new ur(
                                rn.id,
                                this.urlSerializer.serialize(rn.extractedUrl),
                                this.urlSerializer.serialize(
                                  rn.urlAfterRedirects,
                                ),
                                rn.targetSnapshot,
                              );
                              this.events.next(Yn);
                            }),
                          )
                        );
                      if (
                        wt &&
                        d.urlHandlingStrategy.shouldProcessUrl(d.rawUrlTree)
                      ) {
                        const {
                            id: rn,
                            extractedUrl: Yn,
                            source: Hi,
                            restoredState: yo,
                            extras: uo,
                          } = K,
                          Po = new Mi(
                            rn,
                            this.urlSerializer.serialize(Yn),
                            Hi,
                            yo,
                          );
                        this.events.next(Po);
                        const _r = On(Yn, this.rootComponentType).snapshot;
                        return (
                          (D = {
                            ...K,
                            targetSnapshot: _r,
                            urlAfterRedirects: Yn,
                            extras: {
                              ...uo,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          }),
                          (0, L.of)(D)
                        );
                      }
                      {
                        const rn = '';
                        return (
                          this.events.next(
                            new Ji(K.id, d.serializeUrl(D.extractedUrl), rn, 1),
                          ),
                          (d.rawUrlTree = K.rawUrl),
                          K.resolve(null),
                          Ve.E
                        );
                      }
                    }),
                    (0, He.b)(K => {
                      const Be = new Ai(
                        K.id,
                        this.urlSerializer.serialize(K.extractedUrl),
                        this.urlSerializer.serialize(K.urlAfterRedirects),
                        K.targetSnapshot,
                      );
                      this.events.next(Be);
                    }),
                    (0, W.U)(
                      K =>
                        (D = {
                          ...K,
                          guards: Br(
                            K.targetSnapshot,
                            K.currentSnapshot,
                            this.rootContexts,
                          ),
                        }),
                    ),
                    (function To(f, m) {
                      return (0, nt.z)(d => {
                        const {
                          targetSnapshot: D,
                          currentSnapshot: O,
                          guards: {
                            canActivateChecks: U,
                            canDeactivateChecks: K,
                          },
                        } = d;
                        return 0 === K.length && 0 === U.length
                          ? (0, L.of)({ ...d, guardsResult: !0 })
                          : (function Kr(f, m, d, D) {
                              return (0, x.D)(f).pipe(
                                (0, nt.z)(O =>
                                  (function Mr(f, m, d, D, O) {
                                    const U =
                                      m && m.routeConfig
                                        ? m.routeConfig.canDeactivate
                                        : null;
                                    if (!U || 0 === U.length)
                                      return (0, L.of)(!0);
                                    const K = U.map(Be => {
                                      const wt = Gr(m) ?? O,
                                        Qt = Ri(Be, wt);
                                      return Lt(
                                        (function on(f) {
                                          return f && T(f.canDeactivate);
                                        })(Qt)
                                          ? Qt.canDeactivate(f, m, d, D)
                                          : wt.runInContext(() =>
                                              Qt(f, m, d, D),
                                            ),
                                      ).pipe(At());
                                    });
                                    return (0, L.of)(K).pipe(Zn());
                                  })(O.component, O.route, d, m, D),
                                ),
                                At(O => !0 !== O, !0),
                              );
                            })(K, D, O, f).pipe(
                              (0, nt.z)(Be =>
                                Be &&
                                (function I(f) {
                                  return 'boolean' == typeof f;
                                })(Be)
                                  ? (function Yi(f, m, d, D) {
                                      return (0, x.D)(m).pipe(
                                        (0, $e.b)(O =>
                                          (0, le.z)(
                                            (function ao(f, m) {
                                              return (
                                                null !== f && m && m(new or(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route.parent, D),
                                            (function Zr(f, m) {
                                              return (
                                                null !== f && m && m(new ki(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route, D),
                                            (function Bi(f, m, d) {
                                              const D = m[m.length - 1],
                                                U = m
                                                  .slice(0, m.length - 1)
                                                  .reverse()
                                                  .map(K =>
                                                    (function ko(f) {
                                                      const m = f.routeConfig
                                                        ? f.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return m && 0 !== m.length
                                                        ? { node: f, guards: m }
                                                        : null;
                                                    })(K),
                                                  )
                                                  .filter(K => null !== K)
                                                  .map(K =>
                                                    (0, he.P)(() => {
                                                      const Be = K.guards.map(
                                                        wt => {
                                                          const Qt =
                                                              Gr(K.node) ?? d,
                                                            rn = Ri(wt, Qt);
                                                          return Lt(
                                                            (function tt(f) {
                                                              return (
                                                                f &&
                                                                T(
                                                                  f.canActivateChild,
                                                                )
                                                              );
                                                            })(rn)
                                                              ? rn.canActivateChild(
                                                                  D,
                                                                  f,
                                                                )
                                                              : Qt.runInContext(
                                                                  () =>
                                                                    rn(D, f),
                                                                ),
                                                          ).pipe(At());
                                                        },
                                                      );
                                                      return (0, L.of)(Be).pipe(
                                                        Zn(),
                                                      );
                                                    }),
                                                  );
                                              return (0, L.of)(U).pipe(Zn());
                                            })(f, O.path, d),
                                            (function Qo(f, m, d) {
                                              const D = m.routeConfig
                                                ? m.routeConfig.canActivate
                                                : null;
                                              if (!D || 0 === D.length)
                                                return (0, L.of)(!0);
                                              const O = D.map(U =>
                                                (0, he.P)(() => {
                                                  const K = Gr(m) ?? d,
                                                    Be = Ri(U, K);
                                                  return Lt(
                                                    (function Y(f) {
                                                      return (
                                                        f && T(f.canActivate)
                                                      );
                                                    })(Be)
                                                      ? Be.canActivate(m, f)
                                                      : K.runInContext(() =>
                                                          Be(m, f),
                                                        ),
                                                  ).pipe(At());
                                                }),
                                              );
                                              return (0, L.of)(O).pipe(Zn());
                                            })(f, O.route, d),
                                          ),
                                        ),
                                        At(O => !0 !== O, !0),
                                      );
                                    })(D, U, f, m)
                                  : (0, L.of)(Be),
                              ),
                              (0, W.U)(Be => ({ ...d, guardsResult: Be })),
                            );
                      });
                    })(this.environmentInjector, K => this.events.next(K)),
                    (0, He.b)(K => {
                      if (
                        ((D.guardsResult = K.guardsResult), Dn(K.guardsResult))
                      )
                        throw Nr(0, K.guardsResult);
                      const Be = new Xn(
                        K.id,
                        this.urlSerializer.serialize(K.extractedUrl),
                        this.urlSerializer.serialize(K.urlAfterRedirects),
                        K.targetSnapshot,
                        !!K.guardsResult,
                      );
                      this.events.next(Be);
                    }),
                    (0, we.h)(
                      K =>
                        !!K.guardsResult ||
                        (d.restoreHistory(K),
                        this.cancelNavigationTransition(K, '', 3),
                        !1),
                    ),
                    $t(K => {
                      if (K.guards.canActivateChecks.length)
                        return (0, L.of)(K).pipe(
                          (0, He.b)(Be => {
                            const wt = new er(
                              Be.id,
                              this.urlSerializer.serialize(Be.extractedUrl),
                              this.urlSerializer.serialize(
                                Be.urlAfterRedirects,
                              ),
                              Be.targetSnapshot,
                            );
                            this.events.next(wt);
                          }),
                          (0, se.w)(Be => {
                            let wt = !1;
                            return (0, L.of)(Be).pipe(
                              (function it(f, m) {
                                return (0, nt.z)(d => {
                                  const {
                                    targetSnapshot: D,
                                    guards: { canActivateChecks: O },
                                  } = d;
                                  if (!O.length) return (0, L.of)(d);
                                  let U = 0;
                                  return (0, x.D)(O).pipe(
                                    (0, $e.b)(K =>
                                      (function yt(f, m, d, D) {
                                        const O = f.routeConfig,
                                          U = f._resolve;
                                        return (
                                          void 0 !== O?.title &&
                                            !Yt(O) &&
                                            (U[l] = O.title),
                                          (function tn(f, m, d, D) {
                                            const O = (function Vn(f) {
                                              return [
                                                ...Object.keys(f),
                                                ...Object.getOwnPropertySymbols(
                                                  f,
                                                ),
                                              ];
                                            })(f);
                                            if (0 === O.length)
                                              return (0, L.of)({});
                                            const U = {};
                                            return (0, x.D)(O).pipe(
                                              (0, nt.z)(K =>
                                                (function Nt(f, m, d, D) {
                                                  const O = Gr(m) ?? D,
                                                    U = Ri(f, O);
                                                  return Lt(
                                                    U.resolve
                                                      ? U.resolve(m, d)
                                                      : O.runInContext(() =>
                                                          U(m, d),
                                                        ),
                                                  );
                                                })(f[K], m, d, D).pipe(
                                                  At(),
                                                  (0, He.b)(Be => {
                                                    U[K] = Be;
                                                  }),
                                                ),
                                              ),
                                              Ce(1),
                                              (0, Ge.h)(U),
                                              (0, De.K)(K =>
                                                pr(K) ? Ve.E : (0, pe._)(K),
                                              ),
                                            );
                                          })(U, f, m, D).pipe(
                                            (0, W.U)(
                                              K => (
                                                (f._resolvedData = K),
                                                (f.data = vi(f, d).resolve),
                                                O &&
                                                  Yt(O) &&
                                                  (f.data[l] = O.title),
                                                null
                                              ),
                                            ),
                                          )
                                        );
                                      })(K.route, D, f, m),
                                    ),
                                    (0, He.b)(() => U++),
                                    Ce(1),
                                    (0, nt.z)(K =>
                                      U === O.length ? (0, L.of)(d) : Ve.E,
                                    ),
                                  );
                                });
                              })(
                                d.paramsInheritanceStrategy,
                                this.environmentInjector,
                              ),
                              (0, He.b)({
                                next: () => (wt = !0),
                                complete: () => {
                                  wt ||
                                    (d.restoreHistory(Be),
                                    this.cancelNavigationTransition(Be, '', 2));
                                },
                              }),
                            );
                          }),
                          (0, He.b)(Be => {
                            const wt = new Si(
                              Be.id,
                              this.urlSerializer.serialize(Be.extractedUrl),
                              this.urlSerializer.serialize(
                                Be.urlAfterRedirects,
                              ),
                              Be.targetSnapshot,
                            );
                            this.events.next(wt);
                          }),
                        );
                    }),
                    $t(K => {
                      const Be = wt => {
                        const Qt = [];
                        wt.routeConfig?.loadComponent &&
                          !wt.routeConfig._loadedComponent &&
                          Qt.push(
                            this.configLoader
                              .loadComponent(wt.routeConfig)
                              .pipe(
                                (0, He.b)(rn => {
                                  wt.component = rn;
                                }),
                                (0, W.U)(() => {}),
                              ),
                          );
                        for (const rn of wt.children) Qt.push(...Be(rn));
                        return Qt;
                      };
                      return (0, ve.a)(Be(K.targetSnapshot.root)).pipe(
                        ut(),
                        (0, ne.q)(1),
                      );
                    }),
                    $t(() => this.afterPreactivation()),
                    (0, W.U)(K => {
                      const Be = (function fo(f, m, d) {
                        const D = no(f, m._root, d ? d._root : void 0);
                        return new bn(D, m);
                      })(
                        d.routeReuseStrategy,
                        K.targetSnapshot,
                        K.currentRouterState,
                      );
                      return (D = { ...K, targetRouterState: Be });
                    }),
                    (0, He.b)(K => {
                      (d.currentUrlTree = K.urlAfterRedirects),
                        (d.rawUrlTree = d.urlHandlingStrategy.merge(
                          K.urlAfterRedirects,
                          K.rawUrl,
                        )),
                        (d.routerState = K.targetRouterState),
                        'deferred' === d.urlUpdateStrategy &&
                          (K.extras.skipLocationChange ||
                            d.setBrowserUrl(d.rawUrlTree, K),
                          (d.browserUrlTree = K.urlAfterRedirects));
                    }),
                    ((f, m, d) =>
                      (0, W.U)(
                        D => (
                          new Er(
                            m,
                            D.targetRouterState,
                            D.currentRouterState,
                            d,
                          ).activate(f),
                          D
                        ),
                      ))(this.rootContexts, d.routeReuseStrategy, K =>
                      this.events.next(K),
                    ),
                    (0, ne.q)(1),
                    (0, He.b)({
                      next: K => {
                        (O = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (d.navigated = !0),
                          this.events.next(
                            new ri(
                              K.id,
                              this.urlSerializer.serialize(K.extractedUrl),
                              this.urlSerializer.serialize(d.currentUrlTree),
                            ),
                          ),
                          d.titleStrategy?.updateTitle(
                            K.targetRouterState.snapshot,
                          ),
                          K.resolve(!0);
                      },
                      complete: () => {
                        O = !0;
                      },
                    }),
                    (0, ct.x)(() => {
                      O || U || this.cancelNavigationTransition(D, '', 1),
                        this.currentNavigation?.id === D.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, De.K)(K => {
                      if (((U = !0), io(K))) {
                        po(K) || ((d.navigated = !0), d.restoreHistory(D, !0));
                        const Be = new _n(
                          D.id,
                          this.urlSerializer.serialize(D.extractedUrl),
                          K.message,
                          K.cancellationCode,
                        );
                        if ((this.events.next(Be), po(K))) {
                          const wt = d.urlHandlingStrategy.merge(
                              K.url,
                              d.rawUrlTree,
                            ),
                            Qt = {
                              skipLocationChange: D.extras.skipLocationChange,
                              replaceUrl:
                                'eager' === d.urlUpdateStrategy || Ur(D.source),
                            };
                          d.scheduleNavigation(wt, li, null, Qt, {
                            resolve: D.resolve,
                            reject: D.reject,
                            promise: D.promise,
                          });
                        } else D.resolve(!1);
                      } else {
                        d.restoreHistory(D, !0);
                        const Be = new zi(
                          D.id,
                          this.urlSerializer.serialize(D.extractedUrl),
                          K,
                          D.targetSnapshot ?? void 0,
                        );
                        this.events.next(Be);
                        try {
                          D.resolve(d.errorHandler(K));
                        } catch (wt) {
                          D.reject(wt);
                        }
                      }
                      return Ve.E;
                    }),
                  );
                }),
              )
            );
          }
          cancelNavigationTransition(d, D, O) {
            const U = new _n(
              d.id,
              this.urlSerializer.serialize(d.extractedUrl),
              D,
              O,
            );
            this.events.next(U), d.resolve(!1);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function Ur(f) {
        return f !== li;
      }
      let yi = (() => {
          class f {
            buildTitle(d) {
              let D,
                O = d.root;
              for (; void 0 !== O; )
                (D = this.getResolvedTitleForRoute(O) ?? D),
                  (O = O.children.find(U => U.outlet === pt));
              return D;
            }
            getResolvedTitleForRoute(d) {
              return d.data[l];
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(tr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        tr = (() => {
          class f extends yi {
            constructor(d) {
              super(), (this.title = d);
            }
            updateTitle(d) {
              const D = this.buildTitle(d);
              void 0 !== D && this.title.setTitle(D);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(s.LFG(Wt.Dx));
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        nr = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(Ds);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class _o {
        shouldDetach(m) {
          return !1;
        }
        store(m, d) {}
        shouldAttach(m) {
          return !1;
        }
        retrieve(m) {
          return null;
        }
        shouldReuseRoute(m, d) {
          return m.routeConfig === d.routeConfig;
        }
      }
      let Ds = (() => {
        class f extends _o {}
        return (
          (f.ɵfac = (function () {
            let m;
            return function (D) {
              return (m || (m = s.n5z(f)))(D || f);
            };
          })()),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const hs = new s.OlP('', { providedIn: 'root', factory: () => ({}) });
      let Ca = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(co);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        co = (() => {
          class f {
            shouldProcessUrl(d) {
              return !0;
            }
            extract(d) {
              return d;
            }
            merge(d, D) {
              return d;
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })();
      function Cs(f) {
        throw f;
      }
      function xs(f, m, d) {
        return m.parse('/');
      }
      const zs = {
          paths: 'exact',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'exact',
        },
        Es = {
          paths: 'subset',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'subset',
        };
      let Xi = (() => {
          class f {
            get navigationId() {
              return this.navigationTransitions.navigationId;
            }
            get browserPageId() {
              if ('computed' === this.canceledNavigationResolution)
                return this.location.getState()?.ɵrouterPageId;
            }
            get events() {
              return this.navigationTransitions.events;
            }
            constructor() {
              (this.disposed = !1),
                (this.currentPageId = 0),
                (this.console = (0, s.f3M)(s.c2e)),
                (this.isNgZoneEnabled = !1),
                (this.options = (0, s.f3M)(hs, { optional: !0 }) || {}),
                (this.errorHandler = this.options.errorHandler || Cs),
                (this.malformedUriErrorHandler =
                  this.options.malformedUriErrorHandler || xs),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.urlHandlingStrategy = (0, s.f3M)(Ca)),
                (this.routeReuseStrategy = (0, s.f3M)(nr)),
                (this.urlCreationStrategy = (0, s.f3M)(Ye)),
                (this.titleStrategy = (0, s.f3M)(yi)),
                (this.onSameUrlNavigation =
                  this.options.onSameUrlNavigation || 'ignore'),
                (this.paramsInheritanceStrategy =
                  this.options.paramsInheritanceStrategy || 'emptyOnly'),
                (this.urlUpdateStrategy =
                  this.options.urlUpdateStrategy || 'deferred'),
                (this.canceledNavigationResolution =
                  this.options.canceledNavigationResolution || 'replace'),
                (this.config = mn((0, s.f3M)(gn, { optional: !0 }) ?? [])),
                (this.navigationTransitions = (0, s.f3M)(Qi)),
                (this.urlSerializer = (0, s.f3M)(wn)),
                (this.location = (0, s.f3M)(bt.Ye)),
                (this.isNgZoneEnabled =
                  (0, s.f3M)(s.R0b) instanceof s.R0b &&
                  s.R0b.isInAngularZone()),
                this.resetConfig(this.config),
                (this.currentUrlTree = new de()),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.routerState = On(this.currentUrlTree, null)),
                this.navigationTransitions.setupNavigations(this).subscribe(
                  d => {
                    (this.lastSuccessfulId = d.id),
                      (this.currentPageId = this.browserPageId ?? 0);
                  },
                  d => {
                    this.console.warn(`Unhandled Navigation Error: ${d}`);
                  },
                );
            }
            resetRootComponentType(d) {
              (this.routerState.root.component = d),
                (this.navigationTransitions.rootComponentType = d);
            }
            initialNavigation() {
              if (
                (this.setUpLocationChangeListener(),
                !this.navigationTransitions.hasRequestedNavigation)
              ) {
                const d = this.location.getState();
                this.navigateToSyncWithBrowser(this.location.path(!0), li, d);
              }
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe(d => {
                  const D = 'popstate' === d.type ? 'popstate' : 'hashchange';
                  'popstate' === D &&
                    setTimeout(() => {
                      this.navigateToSyncWithBrowser(d.url, D, d.state);
                    }, 0);
                }));
            }
            navigateToSyncWithBrowser(d, D, O) {
              const U = { replaceUrl: !0 },
                K = O?.navigationId ? O : null;
              if (O) {
                const wt = { ...O };
                delete wt.navigationId,
                  delete wt.ɵrouterPageId,
                  0 !== Object.keys(wt).length && (U.state = wt);
              }
              const Be = this.parseUrl(d);
              this.scheduleNavigation(Be, D, K, U);
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.navigationTransitions.currentNavigation;
            }
            resetConfig(d) {
              (this.config = d.map(pi)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.navigationTransitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(),
                  (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(d, D = {}) {
              const {
                  relativeTo: O,
                  queryParams: U,
                  fragment: K,
                  queryParamsHandling: Be,
                  preserveFragment: wt,
                } = D,
                Qt = wt ? this.currentUrlTree.fragment : K;
              let rn = null;
              switch (Be) {
                case 'merge':
                  rn = { ...this.currentUrlTree.queryParams, ...U };
                  break;
                case 'preserve':
                  rn = this.currentUrlTree.queryParams;
                  break;
                default:
                  rn = U || null;
              }
              return (
                null !== rn && (rn = this.removeEmptyProps(rn)),
                this.urlCreationStrategy.createUrlTree(
                  O,
                  this.routerState,
                  this.currentUrlTree,
                  d,
                  rn,
                  Qt ?? null,
                )
              );
            }
            navigateByUrl(d, D = { skipLocationChange: !1 }) {
              const O = Dn(d) ? d : this.parseUrl(d),
                U = this.urlHandlingStrategy.merge(O, this.rawUrlTree);
              return this.scheduleNavigation(U, li, null, D);
            }
            navigate(d, D = { skipLocationChange: !1 }) {
              return (
                (function xa(f) {
                  for (let m = 0; m < f.length; m++) {
                    const d = f[m];
                    if (null == d) throw new s.vHH(4008, false);
                  }
                })(d),
                this.navigateByUrl(this.createUrlTree(d, D), D)
              );
            }
            serializeUrl(d) {
              return this.urlSerializer.serialize(d);
            }
            parseUrl(d) {
              let D;
              try {
                D = this.urlSerializer.parse(d);
              } catch (O) {
                D = this.malformedUriErrorHandler(O, this.urlSerializer, d);
              }
              return D;
            }
            isActive(d, D) {
              let O;
              if (
                ((O = !0 === D ? { ...zs } : !1 === D ? { ...Es } : D), Dn(d))
              )
                return ee(this.currentUrlTree, d, O);
              const U = this.parseUrl(d);
              return ee(this.currentUrlTree, U, O);
            }
            removeEmptyProps(d) {
              return Object.keys(d).reduce((D, O) => {
                const U = d[O];
                return null != U && (D[O] = U), D;
              }, {});
            }
            scheduleNavigation(d, D, O, U, K) {
              if (this.disposed) return Promise.resolve(!1);
              let Be, wt, Qt, rn;
              return (
                K
                  ? ((Be = K.resolve), (wt = K.reject), (Qt = K.promise))
                  : (Qt = new Promise((Yn, Hi) => {
                      (Be = Yn), (wt = Hi);
                    })),
                (rn =
                  'computed' === this.canceledNavigationResolution
                    ? O && O.ɵrouterPageId
                      ? O.ɵrouterPageId
                      : (this.browserPageId ?? 0) + 1
                    : 0),
                this.navigationTransitions.handleNavigationRequest({
                  targetPageId: rn,
                  source: D,
                  restoredState: O,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  rawUrl: d,
                  extras: U,
                  resolve: Be,
                  reject: wt,
                  promise: Qt,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                Qt.catch(Yn => Promise.reject(Yn))
              );
            }
            setBrowserUrl(d, D) {
              const O = this.urlSerializer.serialize(d);
              if (
                this.location.isCurrentPathEqualTo(O) ||
                D.extras.replaceUrl
              ) {
                const K = {
                  ...D.extras.state,
                  ...this.generateNgRouterState(D.id, this.browserPageId),
                };
                this.location.replaceState(O, '', K);
              } else {
                const U = {
                  ...D.extras.state,
                  ...this.generateNgRouterState(D.id, D.targetPageId),
                };
                this.location.go(O, '', U);
              }
            }
            restoreHistory(d, D = !1) {
              if ('computed' === this.canceledNavigationResolution) {
                const U =
                  this.currentPageId -
                  (this.browserPageId ?? this.currentPageId);
                0 !== U
                  ? this.location.historyGo(U)
                  : this.currentUrlTree ===
                      this.getCurrentNavigation()?.finalUrl &&
                    0 === U &&
                    (this.resetState(d),
                    (this.browserUrlTree = d.currentUrlTree),
                    this.resetUrlToCurrentUrlTree());
              } else
                'replace' === this.canceledNavigationResolution &&
                  (D && this.resetState(d), this.resetUrlToCurrentUrlTree());
            }
            resetState(d) {
              (this.routerState = d.currentRouterState),
                (this.currentUrlTree = d.currentUrlTree),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  d.rawUrl,
                ));
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                '',
                this.generateNgRouterState(
                  this.lastSuccessfulId,
                  this.currentPageId,
                ),
              );
            }
            generateNgRouterState(d, D) {
              return 'computed' === this.canceledNavigationResolution
                ? { navigationId: d, ɵrouterPageId: D }
                : { navigationId: d };
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        Xo = (() => {
          class f {
            constructor(d, D, O, U, K, Be) {
              (this.router = d),
                (this.route = D),
                (this.tabIndexAttribute = O),
                (this.renderer = U),
                (this.el = K),
                (this.locationStrategy = Be),
                (this._preserveFragment = !1),
                (this._skipLocationChange = !1),
                (this._replaceUrl = !1),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new lt.x());
              const wt = K.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = 'a' === wt || 'area' === wt),
                this.isAnchorElement
                  ? (this.subscription = d.events.subscribe(Qt => {
                      Qt instanceof ri && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl('0');
            }
            set preserveFragment(d) {
              this._preserveFragment = (0, s.D6c)(d);
            }
            get preserveFragment() {
              return this._preserveFragment;
            }
            set skipLocationChange(d) {
              this._skipLocationChange = (0, s.D6c)(d);
            }
            get skipLocationChange() {
              return this._skipLocationChange;
            }
            set replaceUrl(d) {
              this._replaceUrl = (0, s.D6c)(d);
            }
            get replaceUrl() {
              return this._replaceUrl;
            }
            setTabIndexIfNotOnNativeEl(d) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue('tabindex', d);
            }
            ngOnChanges(d) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(d) {
              null != d
                ? ((this.commands = Array.isArray(d) ? d : [d]),
                  this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(d, D, O, U, K) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== d ||
                      D ||
                      O ||
                      U ||
                      K ||
                      ('string' == typeof this.target &&
                        '_self' != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree),
                    )
                  : null;
              const d =
                null === this.href
                  ? null
                  : (0, s.P3R)(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      'href',
                    );
              this.applyAttributeValue('href', d);
            }
            applyAttributeValue(d, D) {
              const O = this.renderer,
                U = this.el.nativeElement;
              null !== D ? O.setAttribute(U, d, D) : O.removeAttribute(U, d);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(
                s.Y36(Xi),
                s.Y36(Rn),
                s.$8M('tabindex'),
                s.Y36(s.Qsj),
                s.Y36(s.SBq),
                s.Y36(bt.S$),
              );
            }),
            (f.ɵdir = s.lG2({
              type: f,
              selectors: [['', 'routerLink', '']],
              hostVars: 1,
              hostBindings: function (d, D) {
                1 & d &&
                  s.NdJ('click', function (U) {
                    return D.onClick(
                      U.button,
                      U.ctrlKey,
                      U.shiftKey,
                      U.altKey,
                      U.metaKey,
                    );
                  }),
                  2 & d && s.uIk('target', D.target);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                state: 'state',
                relativeTo: 'relativeTo',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                routerLink: 'routerLink',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            f
          );
        })();
      class ws {}
      let jo = (() => {
        class f {
          constructor(d, D, O, U, K) {
            (this.router = d),
              (this.injector = O),
              (this.preloadingStrategy = U),
              (this.loader = K);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, we.h)(d => d instanceof ri),
                (0, $e.b)(() => this.preload()),
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(d, D) {
            const O = [];
            for (const U of D) {
              U.providers &&
                !U._injector &&
                (U._injector = (0, s.MMx)(U.providers, d, `Route: ${U.path}`));
              const K = U._injector ?? d,
                Be = U._loadedInjector ?? K;
              ((U.loadChildren && !U._loadedRoutes && void 0 === U.canLoad) ||
                (U.loadComponent && !U._loadedComponent)) &&
                O.push(this.preloadConfig(K, U)),
                (U.children || U._loadedRoutes) &&
                  O.push(this.processRoutes(Be, U.children ?? U._loadedRoutes));
            }
            return (0, x.D)(O).pipe((0, Ke.J)());
          }
          preloadConfig(d, D) {
            return this.preloadingStrategy.preload(D, () => {
              let O;
              O =
                D.loadChildren && void 0 === D.canLoad
                  ? this.loader.loadChildren(d, D)
                  : (0, L.of)(null);
              const U = O.pipe(
                (0, nt.z)(K =>
                  null === K
                    ? (0, L.of)(void 0)
                    : ((D._loadedRoutes = K.routes),
                      (D._loadedInjector = K.injector),
                      this.processRoutes(K.injector ?? d, K.routes)),
                ),
              );
              if (D.loadComponent && !D._loadedComponent) {
                const K = this.loader.loadComponent(D);
                return (0, x.D)([U, K]).pipe((0, Ke.J)());
              }
              return U;
            });
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(
              s.LFG(Xi),
              s.LFG(s.Sil),
              s.LFG(s.lqb),
              s.LFG(ws),
              s.LFG($n),
            );
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const Gs = new s.OlP('');
      let Ws = (() => {
        class f {
          constructor(d, D, O, U, K = {}) {
            (this.urlSerializer = d),
              (this.transitions = D),
              (this.viewportScroller = O),
              (this.zone = U),
              (this.options = K),
              (this.lastId = 0),
              (this.lastSource = 'imperative'),
              (this.restoredId = 0),
              (this.store = {}),
              (K.scrollPositionRestoration =
                K.scrollPositionRestoration || 'disabled'),
              (K.anchorScrolling = K.anchorScrolling || 'disabled');
          }
          init() {
            'disabled' !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration('manual'),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof Mi
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = d.navigationTrigger),
                  (this.restoredId = d.restoredState
                    ? d.restoredState.navigationId
                    : 0))
                : d instanceof ri &&
                  ((this.lastId = d.id),
                  this.scheduleScrollEvent(
                    d,
                    this.urlSerializer.parse(d.urlAfterRedirects).fragment,
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof vr &&
                (d.position
                  ? 'top' === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : 'enabled' === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(d.position)
                  : d.anchor && 'enabled' === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(d.anchor)
                  : 'disabled' !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(d, D) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new vr(
                      d,
                      'popstate' === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      D,
                    ),
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (f.ɵfac = function (d) {
            s.$Z();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
          f
        );
      })();
      var ir = (() => (
        ((ir = ir || {})[(ir.COMPLETE = 0)] = 'COMPLETE'),
        (ir[(ir.FAILED = 1)] = 'FAILED'),
        (ir[(ir.REDIRECTING = 2)] = 'REDIRECTING'),
        ir
      ))();
      const zo = !1;
      function vo(f, m) {
        return { ɵkind: f, ɵproviders: m };
      }
      const ps = new s.OlP('', { providedIn: 'root', factory: () => !1 });
      function Fo() {
        const f = (0, s.f3M)(s.zs3);
        return m => {
          const d = f.get(s.z2F);
          if (m !== d.components[0]) return;
          const D = f.get(Xi),
            O = f.get(Ss);
          1 === f.get(es) && D.initialNavigation(),
            f.get(ti, null, s.XFs.Optional)?.setUpPreloading(),
            f.get(Gs, null, s.XFs.Optional)?.init(),
            D.resetRootComponentType(d.componentTypes[0]),
            O.closed || (O.next(), O.complete(), O.unsubscribe());
        };
      }
      const Ss = new s.OlP(zo ? 'bootstrap done indicator' : '', {
          factory: () => new lt.x(),
        }),
        es = new s.OlP(zo ? 'initial navigation' : '', {
          providedIn: 'root',
          factory: () => 1,
        });
      function wa() {
        let f = [];
        return (
          (f = zo
            ? [
                {
                  provide: s.Xts,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(Xi);
                    return () =>
                      m.events.subscribe(d => {
                        console.group?.(`Router Event: ${d.constructor.name}`),
                          console.log(
                            (function Ci(f) {
                              if (!('type' in f))
                                return `Unknown Router Event: ${f.constructor.name}`;
                              switch (f.type) {
                                case 14:
                                  return `ActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 13:
                                  return `ActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 12:
                                  return `ChildActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 11:
                                  return `ChildActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 8:
                                  return `GuardsCheckEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state}, shouldActivate: ${f.shouldActivate})`;
                                case 7:
                                  return `GuardsCheckStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 2:
                                  return `NavigationCancel(id: ${f.id}, url: '${f.url}')`;
                                case 16:
                                  return `NavigationSkipped(id: ${f.id}, url: '${f.url}')`;
                                case 1:
                                  return `NavigationEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}')`;
                                case 3:
                                  return `NavigationError(id: ${f.id}, url: '${f.url}', error: ${f.error})`;
                                case 0:
                                  return `NavigationStart(id: ${f.id}, url: '${f.url}')`;
                                case 6:
                                  return `ResolveEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 5:
                                  return `ResolveStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 10:
                                  return `RouteConfigLoadEnd(path: ${f.route.path})`;
                                case 9:
                                  return `RouteConfigLoadStart(path: ${f.route.path})`;
                                case 4:
                                  return `RoutesRecognized(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 15:
                                  return `Scroll(anchor: '${
                                    f.anchor
                                  }', position: '${
                                    f.position
                                      ? `${f.position[0]}, ${f.position[1]}`
                                      : null
                                  }')`;
                              }
                            })(d),
                          ),
                          console.log(d),
                          console.groupEnd?.();
                      });
                  },
                },
              ]
            : []),
          vo(1, f)
        );
      }
      const ti = new s.OlP(zo ? 'router preloader' : '');
      function tl(f) {
        return vo(0, [
          { provide: ti, useExisting: jo },
          { provide: ws, useExisting: f },
        ]);
      }
      const gs = !1,
        Is = new s.OlP(
          gs ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD',
        ),
        ts = [
          bt.Ye,
          { provide: wn, useClass: Ie },
          Xi,
          $i,
          {
            provide: Rn,
            useFactory: function fs(f) {
              return f.routerState.root;
            },
            deps: [Xi],
          },
          $n,
          gs ? { provide: ps, useValue: !0 } : [],
        ];
      function il() {
        return new s.PXZ('Router', Xi);
      }
      let Ma = (() => {
        class f {
          constructor(d) {}
          static forRoot(d, D) {
            return {
              ngModule: f,
              providers: [
                ts,
                gs && D?.enableTracing ? wa().ɵproviders : [],
                { provide: gn, multi: !0, useValue: d },
                {
                  provide: Is,
                  useFactory: Aa,
                  deps: [[Xi, new s.FiY(), new s.tp0()]],
                },
                { provide: hs, useValue: D || {} },
                D?.useHash
                  ? { provide: bt.S$, useClass: bt.Do }
                  : { provide: bt.S$, useClass: bt.b0 },
                {
                  provide: Gs,
                  useFactory: () => {
                    const f = (0, s.f3M)(bt.EM),
                      m = (0, s.f3M)(s.R0b),
                      d = (0, s.f3M)(hs),
                      D = (0, s.f3M)(Qi),
                      O = (0, s.f3M)(wn);
                    return (
                      d.scrollOffset && f.setOffset(d.scrollOffset),
                      new Ws(O, D, f, m, d)
                    );
                  },
                },
                D?.preloadingStrategy
                  ? tl(D.preloadingStrategy).ɵproviders
                  : [],
                { provide: s.PXZ, multi: !0, useFactory: il },
                D?.initialNavigation ? Ir(D) : [],
                [
                  { provide: bo, useFactory: Fo },
                  { provide: s.tb, multi: !0, useExisting: bo },
                ],
              ],
            };
          }
          static forChild(d) {
            return {
              ngModule: f,
              providers: [{ provide: gn, multi: !0, useValue: d }],
            };
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(s.LFG(Is, 8));
          }),
          (f.ɵmod = s.oAB({ type: f })),
          (f.ɵinj = s.cJS({ imports: [$r] })),
          f
        );
      })();
      function Aa(f) {
        if (gs && f)
          throw new s.vHH(
            4007,
            "The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead.",
          );
        return 'guarded';
      }
      function Ir(f) {
        return [
          'disabled' === f.initialNavigation
            ? vo(3, [
                {
                  provide: s.ip1,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(Xi);
                    return () => {
                      m.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: es, useValue: 2 },
              ]).ɵproviders
            : [],
          'enabledBlocking' === f.initialNavigation
            ? vo(2, [
                { provide: es, useValue: 0 },
                {
                  provide: s.ip1,
                  multi: !0,
                  deps: [s.zs3],
                  useFactory: m => {
                    const d = m.get(bt.V_, Promise.resolve());
                    return () =>
                      d.then(
                        () =>
                          new Promise(D => {
                            const O = m.get(Xi),
                              U = m.get(Ss);
                            (function Ro(f, m) {
                              f.events
                                .pipe(
                                  (0, we.h)(
                                    d =>
                                      d instanceof ri ||
                                      d instanceof _n ||
                                      d instanceof zi ||
                                      d instanceof Ji,
                                  ),
                                  (0, W.U)(d =>
                                    d instanceof ri || d instanceof Ji
                                      ? ir.COMPLETE
                                      : d instanceof _n &&
                                        (0 === d.code || 1 === d.code)
                                      ? ir.REDIRECTING
                                      : ir.FAILED,
                                  ),
                                  (0, we.h)(d => d !== ir.REDIRECTING),
                                  (0, ne.q)(1),
                                )
                                .subscribe(() => {
                                  m();
                                });
                            })(O, () => {
                              D(!0);
                            }),
                              (m.get(Qi).afterPreactivation = () => (
                                D(!0), U.closed ? (0, L.of)(void 0) : U
                              )),
                              O.initialNavigation();
                          }),
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const bo = new s.OlP(gs ? 'Router Initializer' : '');
    },
    8776: (Rt, Pe, C) => {
      C.d(Pe, { eX: () => Ge, sQ: () => me, GW: () => Ut, l4: () => ct });
      var s = C(6451),
        x = C(9751),
        L = C(7579),
        oe = C(8502),
        te = C(515),
        ue = C(9646),
        ve = C(2843),
        le = C(576);
      class ae {
        constructor(Dt, et, St) {
          (this.kind = Dt),
            (this.value = et),
            (this.error = St),
            (this.hasValue = 'N' === Dt);
        }
        observe(Dt) {
          return pe(this, Dt);
        }
        do(Dt, et, St) {
          const { kind: Te, value: F, error: b } = this;
          return 'N' === Te ? Dt?.(F) : 'E' === Te ? et?.(b) : St?.();
        }
        accept(Dt, et, St) {
          var Te;
          return (0, le.m)(
            null === (Te = Dt) || void 0 === Te ? void 0 : Te.next,
          )
            ? this.observe(Dt)
            : this.do(Dt, et, St);
        }
        toObservable() {
          const { kind: Dt, value: et, error: St } = this,
            Te =
              'N' === Dt
                ? (0, ue.of)(et)
                : 'E' === Dt
                ? (0, ve._)(() => St)
                : 'C' === Dt
                ? te.E
                : 0;
          if (!Te) throw new TypeError(`Unexpected notification kind ${Dt}`);
          return Te;
        }
        static createNext(Dt) {
          return new ae('N', Dt);
        }
        static createError(Dt) {
          return new ae('E', void 0, Dt);
        }
        static createComplete() {
          return ae.completeNotification;
        }
      }
      function pe(Ie, Dt) {
        var et, St, Te;
        const { kind: F, value: b, error: M } = Ie;
        if ('string' != typeof F)
          throw new TypeError('Invalid notification, missing "kind"');
        'N' === F
          ? null === (et = Dt.next) || void 0 === et || et.call(Dt, b)
          : 'E' === F
          ? null === (St = Dt.error) || void 0 === St || St.call(Dt, M)
          : null === (Te = Dt.complete) || void 0 === Te || Te.call(Dt);
      }
      ae.completeNotification = new ae('C');
      var ie = C(4482),
        Ve = C(5403),
        at = C(4004),
        vt = C(262),
        Le = C(9300),
        _t = C(8421);
      function lt(Ie, Dt, et, St) {
        return (0, ie.e)((Te, F) => {
          let b;
          Dt && 'function' != typeof Dt
            ? ({ duration: et, element: b, connector: St } = Dt)
            : (b = Dt);
          const M = new Map(),
            G = Ft => {
              M.forEach(Ft), Ft(F);
            },
            Q = Ft => G(en => en.error(Ft));
          let Qe = 0,
            Tt = !1;
          const Vt = new Ve.Q(
            F,
            Ft => {
              try {
                const en = Ie(Ft);
                let Oe = M.get(en);
                if (!Oe) {
                  M.set(en, (Oe = St ? St() : new L.x()));
                  const be = (function Je(Ft, en) {
                    const Oe = new x.y(be => {
                      Qe++;
                      const Z = en.subscribe(be);
                      return () => {
                        Z.unsubscribe(), 0 == --Qe && Tt && Vt.unsubscribe();
                      };
                    });
                    return (Oe.key = Ft), Oe;
                  })(en, Oe);
                  if ((F.next(be), et)) {
                    const Z = (0, Ve.x)(
                      Oe,
                      () => {
                        Oe.complete(), Z?.unsubscribe();
                      },
                      void 0,
                      void 0,
                      () => M.delete(en),
                    );
                    Vt.add((0, _t.Xf)(et(be)).subscribe(Z));
                  }
                }
                Oe.next(b ? b(Ft) : Ft);
              } catch (en) {
                Q(en);
              }
            },
            () => G(Ft => Ft.complete()),
            Q,
            () => M.clear(),
            () => ((Tt = !0), 0 === Qe),
          );
          Te.subscribe(Vt);
        });
      }
      var bt = C(5577),
        W = C(6129),
        ne = C(5698),
        X = C(4650),
        we = C(1831);
      const nt = { dispatch: !0, functional: !1, useEffectsErrorHandler: !0 },
        ut = '__@ngrx/effects_create__';
      function Ut(Ie, Dt = {}) {
        const et = Dt.functional ? Ie : Ie(),
          St = { ...nt, ...Dt };
        return Object.defineProperty(et, ut, { value: St }), et;
      }
      function $e(Ie) {
        return Object.getPrototypeOf(Ie);
      }
      function De(Ie) {
        return 'function' == typeof Ie;
      }
      function je(Ie) {
        return Ie.filter(De);
      }
      function Ce(Ie, Dt, et) {
        const St = $e(Ie).constructor.name,
          Te = (function At(Ie) {
            return (function xt(Ie) {
              return Object.getOwnPropertyNames(Ie)
                .filter(
                  St =>
                    !(!Ie[St] || !Ie[St].hasOwnProperty(ut)) &&
                    Ie[St][ut].hasOwnProperty('dispatch'),
                )
                .map(St => ({ propertyName: St, ...Ie[St][ut] }));
            })(Ie);
          })(Ie).map(
            ({ propertyName: F, dispatch: b, useEffectsErrorHandler: M }) => {
              const G = 'function' == typeof Ie[F] ? Ie[F]() : Ie[F],
                Q = M ? et(G, Dt) : G;
              return !1 === b
                ? Q.pipe((0, oe.l)())
                : Q.pipe(
                    (function Ue() {
                      return (0, ie.e)((Ie, Dt) => {
                        Ie.subscribe(
                          (0, Ve.x)(
                            Dt,
                            et => {
                              Dt.next(ae.createNext(et));
                            },
                            () => {
                              Dt.next(ae.createComplete()), Dt.complete();
                            },
                            et => {
                              Dt.next(ae.createError(et)), Dt.complete();
                            },
                          ),
                        );
                      });
                    })(),
                  ).pipe(
                    (0, at.U)(Tt => ({
                      effect: Ie[F],
                      notification: Tt,
                      propertyName: F,
                      sourceName: St,
                      sourceInstance: Ie,
                    })),
                  );
            },
          );
        return (0, s.T)(...Te);
      }
      const Re = 10;
      function Ne(Ie, Dt, et = Re) {
        return Ie.pipe(
          (0, vt.K)(
            St => (Dt && Dt.handleError(St), et <= 1 ? Ie : Ne(Ie, Dt, et - 1)),
          ),
        );
      }
      let Ge = (() => {
        class Ie extends x.y {
          constructor(et) {
            super(), et && (this.source = et);
          }
          lift(et) {
            const St = new Ie();
            return (St.source = this), (St.operator = et), St;
          }
        }
        return (
          (Ie.ɵfac = function (et) {
            return new (et || Ie)(X.LFG(we.Y$));
          }),
          (Ie.ɵprov = X.Yz7({
            token: Ie,
            factory: Ie.ɵfac,
            providedIn: 'root',
          })),
          Ie
        );
      })();
      function ct(...Ie) {
        return (0, Le.h)(Dt =>
          Ie.some(et =>
            'string' == typeof et ? et === Dt.type : et.type === Dt.type,
          ),
        );
      }
      const Ke = new X.OlP('@ngrx/effects Internal Root Guard'),
        Wt = new X.OlP('@ngrx/effects User Provided Effects'),
        pt = new X.OlP('@ngrx/effects Internal Root Effects'),
        l = new X.OlP('@ngrx/effects Internal Root Effects Instances'),
        yn = new X.OlP('@ngrx/effects Internal Feature Effects'),
        rt = new X.OlP(
          '@ngrx/effects Internal Feature Effects Instance Groups',
        ),
        ft = new X.OlP('@ngrx/effects Effects Error Handler', {
          providedIn: 'root',
          factory: () => Ne,
        }),
        Et = '@ngrx/effects/init';
      (0, we.PH)(Et);
      const Jt = 'ngrxOnIdentifyEffects',
        z = 'ngrxOnInitEffects';
      function ee(Ie) {
        return Ae(Ie, z);
      }
      function Ae(Ie, Dt) {
        return Ie && Dt in Ie && 'function' == typeof Ie[Dt];
      }
      let ze = (() => {
        class Ie extends L.x {
          constructor(et, St) {
            super(), (this.errorHandler = et), (this.effectsErrorHandler = St);
          }
          addEffects(et) {
            this.next(et);
          }
          toActions() {
            return this.pipe(
              lt(et =>
                (function He(Ie) {
                  return (
                    'Object' !== Ie.constructor.name &&
                    'Function' !== Ie.constructor.name
                  );
                })(et)
                  ? $e(et)
                  : et,
              ),
              (0, bt.z)(et => et.pipe(lt(_e))),
              (0, bt.z)(et => {
                const St = et.pipe(
                    (0, W.z)(F =>
                      (function ye(Ie, Dt) {
                        return et => {
                          const St = Ce(et, Ie, Dt);
                          return (function ot(Ie) {
                            return Ae(Ie, 'ngrxOnRunEffects');
                          })(et)
                            ? et.ngrxOnRunEffects(St)
                            : St;
                        };
                      })(
                        this.errorHandler,
                        this.effectsErrorHandler,
                      )(F),
                    ),
                    (0, at.U)(
                      F => (
                        (function ln(Ie, Dt) {
                          if ('N' === Ie.notification.kind) {
                            const et = Ie.notification.value;
                            !(function mn(Ie) {
                              return (
                                'function' != typeof Ie &&
                                Ie &&
                                Ie.type &&
                                'string' == typeof Ie.type
                              );
                            })(et) &&
                              Dt.handleError(
                                new Error(
                                  `Effect ${(function dn({
                                    propertyName: Ie,
                                    sourceInstance: Dt,
                                    sourceName: et,
                                  }) {
                                    const St = 'function' == typeof Dt[Ie];
                                    return `"${et}.${String(Ie)}${
                                      St ? '()' : ''
                                    }"`;
                                  })(
                                    Ie,
                                  )} dispatched an invalid action: ${(function Gn(
                                    Ie,
                                  ) {
                                    try {
                                      return JSON.stringify(Ie);
                                    } catch {
                                      return Ie;
                                    }
                                  })(et)}`,
                                ),
                              );
                          }
                        })(F, this.errorHandler),
                        F.notification
                      ),
                    ),
                    (0, Le.h)(F => 'N' === F.kind && null != F.value),
                    (function se() {
                      return (0, ie.e)((Ie, Dt) => {
                        Ie.subscribe((0, Ve.x)(Dt, et => pe(et, Dt)));
                      });
                    })(),
                  ),
                  Te = et.pipe(
                    (0, ne.q)(1),
                    (0, Le.h)(ee),
                    (0, at.U)(F => F.ngrxOnInitEffects()),
                  );
                return (0, s.T)(St, Te);
              }),
            );
          }
        }
        return (
          (Ie.ɵfac = function (et) {
            return new (et || Ie)(X.LFG(X.qLn), X.LFG(ft));
          }),
          (Ie.ɵprov = X.Yz7({
            token: Ie,
            factory: Ie.ɵfac,
            providedIn: 'root',
          })),
          Ie
        );
      })();
      function _e(Ie) {
        return (function Lt(Ie) {
          return Ae(Ie, Jt);
        })(Ie)
          ? Ie.ngrxOnIdentifyEffects()
          : '';
      }
      let H = (() => {
          class Ie {
            constructor(et, St) {
              (this.effectSources = et),
                (this.store = St),
                (this.effectsSubscription = null);
            }
            get isStarted() {
              return !!this.effectsSubscription;
            }
            start() {
              this.effectsSubscription ||
                (this.effectsSubscription = this.effectSources
                  .toActions()
                  .subscribe(this.store));
            }
            ngOnDestroy() {
              this.effectsSubscription &&
                (this.effectsSubscription.unsubscribe(),
                (this.effectsSubscription = null));
            }
          }
          return (
            (Ie.ɵfac = function (et) {
              return new (et || Ie)(X.LFG(ze), X.LFG(we.yh));
            }),
            (Ie.ɵprov = X.Yz7({
              token: Ie,
              factory: Ie.ɵfac,
              providedIn: 'root',
            })),
            Ie
          );
        })(),
        ke = (() => {
          class Ie {
            constructor(et, St, Te, F, b, M, G) {
              (this.sources = et), St.start();
              for (const Q of F) et.addEffects(Q);
              Te.dispatch({ type: Et });
            }
            addEffects(et) {
              this.sources.addEffects(et);
            }
          }
          return (
            (Ie.ɵfac = function (et) {
              return new (et || Ie)(
                X.LFG(ze),
                X.LFG(H),
                X.LFG(we.yh),
                X.LFG(l),
                X.LFG(we.cr, 8),
                X.LFG(we.CK, 8),
                X.LFG(Ke, 8),
              );
            }),
            (Ie.ɵmod = X.oAB({ type: Ie })),
            (Ie.ɵinj = X.cJS({})),
            Ie
          );
        })(),
        de = (() => {
          class Ie {
            constructor(et, St, Te, F) {
              const b = St.flat();
              for (const M of b) et.addEffects(M);
            }
          }
          return (
            (Ie.ɵfac = function (et) {
              return new (et || Ie)(
                X.LFG(ke),
                X.LFG(rt),
                X.LFG(we.cr, 8),
                X.LFG(we.CK, 8),
              );
            }),
            (Ie.ɵmod = X.oAB({ type: Ie })),
            (Ie.ɵinj = X.cJS({})),
            Ie
          );
        })(),
        me = (() => {
          class Ie {
            static forFeature(...et) {
              const St = et.flat(),
                Te = je(St);
              return {
                ngModule: de,
                providers: [
                  Te,
                  { provide: yn, multi: !0, useValue: St },
                  { provide: Wt, multi: !0, useValue: [] },
                  { provide: rt, multi: !0, useFactory: fe, deps: [yn, Wt] },
                ],
              };
            }
            static forRoot(...et) {
              const St = et.flat(),
                Te = je(St);
              return {
                ngModule: ke,
                providers: [
                  Te,
                  { provide: pt, useValue: [St] },
                  { provide: Ke, useFactory: qe },
                  { provide: Wt, multi: !0, useValue: [] },
                  { provide: l, useFactory: fe, deps: [pt, Wt] },
                ],
              };
            }
          }
          return (
            (Ie.ɵfac = function (et) {
              return new (et || Ie)();
            }),
            (Ie.ɵmod = X.oAB({ type: Ie })),
            (Ie.ɵinj = X.cJS({})),
            Ie
          );
        })();
      function fe(Ie, Dt) {
        const et = [];
        for (const St of Ie) et.push(...St);
        for (const St of Dt) et.push(...St);
        return et.map(St => (De(St) ? (0, X.f3M)(St) : St));
      }
      function qe() {
        const Ie = (0, X.f3M)(H, { optional: !0, skipSelf: !0 }),
          Dt = (0, X.f3M)(pt, { self: !0 });
        if ((1 !== Dt.length || 0 !== Dt[0].length) && Ie)
          throw new TypeError(
            'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.',
          );
        return 'guarded';
      }
    },
    1831: (Rt, Pe, C) => {
      C.d(Pe, {
        Y$: () => Mt,
        yh: () => St,
        CK: () => vr,
        Aw: () => Ci,
        cr: () => Zi,
        PH: () => we,
        Lq: () => Ti,
        P1: () => _i,
        on: () => Ln,
        Ky: () => nt,
      });
      var s = C(4650),
        x = C(1135),
        L = C(9751),
        oe = C(7579),
        te = C(4408),
        ve = C(640);
      const he = new (class le extends ve.v {})(
        class ue extends te.o {
          constructor(Ye, Se) {
            super(Ye, Se), (this.scheduler = Ye), (this.work = Se);
          }
          schedule(Ye, Se = 0) {
            return Se > 0
              ? super.schedule(Ye, Se)
              : ((this.delay = Se),
                (this.state = Ye),
                this.scheduler.flush(this),
                this);
          }
          execute(Ye, Se) {
            return Se > 0 || this.closed
              ? super.execute(Ye, Se)
              : this._execute(Ye, Se);
          }
          requestAsyncId(Ye, Se, We = 0) {
            return (null != We && We > 0) || (null == We && this.delay > 0)
              ? super.requestAsyncId(Ye, Se, We)
              : (Ye.flush(this), 0);
          }
        },
      );
      var pe = C(5363),
        ie = C(4482),
        Ve = C(5403),
        Ue = C(8421),
        at = C(4671),
        vt = C(5032),
        Le = C(3269),
        lt = C(5026),
        bt = C(4004),
        se = C(1884);
      const ne = {};
      function we(J, Ye) {
        if (((ne[J] = (ne[J] || 0) + 1), 'function' == typeof Ye))
          return Ut(J, (...We) => ({ ...Ye(...We), type: J }));
        switch (Ye ? Ye._as : 'empty') {
          case 'empty':
            return Ut(J, () => ({ type: J }));
          case 'props':
            return Ut(J, We => ({ ...We, type: J }));
          default:
            throw new Error('Unexpected config.');
        }
      }
      function nt() {
        return { _as: 'props', _p: void 0 };
      }
      function Ut(J, Ye) {
        return Object.defineProperty(Ye, 'type', { value: J, writable: !1 });
      }
      const De = '@ngrx/store/init';
      let je = (() => {
        class J extends x.X {
          constructor() {
            super({ type: De });
          }
          next(Se) {
            if ('function' == typeof Se)
              throw new TypeError(
                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().",
              );
            if (typeof Se > 'u') throw new TypeError('Actions must be objects');
            if (typeof Se.type > 'u')
              throw new TypeError('Actions must have a type property');
            super.next(Se);
          }
          complete() {}
          ngOnDestroy() {
            super.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)();
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Ce = [je],
        Re = new s.OlP('@ngrx/store Internal Root Guard'),
        Ne = new s.OlP('@ngrx/store Internal Initial State'),
        Ge = new s.OlP('@ngrx/store Initial State'),
        ct = new s.OlP('@ngrx/store Reducer Factory'),
        Ke = new s.OlP('@ngrx/store Internal Reducer Factory Provider'),
        Wt = new s.OlP('@ngrx/store Initial Reducers'),
        pt = new s.OlP('@ngrx/store Internal Initial Reducers'),
        l = new s.OlP('@ngrx/store Store Features'),
        yn = new s.OlP('@ngrx/store Internal Store Reducers'),
        rt = new s.OlP('@ngrx/store Internal Feature Reducers'),
        ft = new s.OlP('@ngrx/store Internal Feature Configs'),
        Et = new s.OlP('@ngrx/store Internal Store Features'),
        mt = new s.OlP('@ngrx/store Internal Feature Reducers Token'),
        ln = new s.OlP('@ngrx/store Feature Reducers'),
        mn = new s.OlP('@ngrx/store User Provided Meta Reducers'),
        dn = new s.OlP('@ngrx/store Meta Reducers'),
        Gn = new s.OlP('@ngrx/store Internal Resolved Meta Reducers'),
        Jt = new s.OlP('@ngrx/store User Runtime Checks Config'),
        Lt = new s.OlP('@ngrx/store Internal User Runtime Checks Config'),
        Pn = new s.OlP('@ngrx/store Internal Runtime Checks'),
        ot = new s.OlP('@ngrx/store Check if Action types are unique');
      function Ae(J, Ye = {}) {
        const Se = Object.keys(J),
          We = {};
        for (let kt = 0; kt < Se.length; kt++) {
          const un = Se[kt];
          'function' == typeof J[un] && (We[un] = J[un]);
        }
        const It = Object.keys(We);
        return function (un, bn) {
          un = void 0 === un ? Ye : un;
          let On = !1;
          const ei = {};
          for (let Rn = 0; Rn < It.length; Rn++) {
            const vi = It[Rn],
              br = un[vi],
              yr = (0, We[vi])(br, bn);
            (ei[vi] = yr), (On = On || yr !== br);
          }
          return On ? ei : un;
        };
      }
      function _e(...J) {
        return function (Ye) {
          if (0 === J.length) return Ye;
          const Se = J[J.length - 1];
          return J.slice(0, -1).reduceRight((It, kt) => kt(It), Se(Ye));
        };
      }
      function ye(J, Ye) {
        return (
          Array.isArray(Ye) &&
            Ye.length > 0 &&
            (J = _e.apply(null, [...Ye, J])),
          (Se, We) => {
            const It = J(Se);
            return (kt, un) => It((kt = void 0 === kt ? We : kt), un);
          }
        );
      }
      new s.OlP('@ngrx/store Root Store Provider'),
        new s.OlP('@ngrx/store Feature State Provider');
      class ke extends L.y {}
      class de extends je {}
      let fe = (() => {
        class J extends x.X {
          constructor(Se, We, It, kt) {
            super(kt(It, We)),
              (this.dispatcher = Se),
              (this.initialState = We),
              (this.reducers = It),
              (this.reducerFactory = kt);
          }
          get currentReducers() {
            return this.reducers;
          }
          addFeature(Se) {
            this.addFeatures([Se]);
          }
          addFeatures(Se) {
            const We = Se.reduce(
              (
                It,
                {
                  reducers: kt,
                  reducerFactory: un,
                  metaReducers: bn,
                  initialState: On,
                  key: ei,
                },
              ) => {
                const Rn =
                  'function' == typeof kt
                    ? (function H(J) {
                        const Ye =
                          Array.isArray(J) && J.length > 0
                            ? _e(...J)
                            : Se => Se;
                        return (Se, We) => (
                          (Se = Ye(Se)),
                          (It, kt) => Se((It = void 0 === It ? We : It), kt)
                        );
                      })(bn)(kt, On)
                    : ye(un, bn)(kt, On);
                return (It[ei] = Rn), It;
              },
              {},
            );
            this.addReducers(We);
          }
          removeFeature(Se) {
            this.removeFeatures([Se]);
          }
          removeFeatures(Se) {
            this.removeReducers(Se.map(We => We.key));
          }
          addReducer(Se, We) {
            this.addReducers({ [Se]: We });
          }
          addReducers(Se) {
            (this.reducers = { ...this.reducers, ...Se }),
              this.updateReducers(Object.keys(Se));
          }
          removeReducer(Se) {
            this.removeReducers([Se]);
          }
          removeReducers(Se) {
            Se.forEach(We => {
              this.reducers = (function ze(J, Ye) {
                return Object.keys(J)
                  .filter(Se => Se !== Ye)
                  .reduce((Se, We) => Object.assign(Se, { [We]: J[We] }), {});
              })(this.reducers, We);
            }),
              this.updateReducers(Se);
          }
          updateReducers(Se) {
            this.next(this.reducerFactory(this.reducers, this.initialState)),
              this.dispatcher.next({
                type: '@ngrx/store/update-reducers',
                features: Se,
              });
          }
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(de), s.LFG(Ge), s.LFG(Wt), s.LFG(ct));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const qe = [
        fe,
        { provide: ke, useExisting: fe },
        { provide: de, useExisting: je },
      ];
      let Mt = (() => {
        class J extends oe.x {
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = (function () {
            let Ye;
            return function (We) {
              return (Ye || (Ye = s.n5z(J)))(We || J);
            };
          })()),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Pt = [Mt];
      class wn extends L.y {}
      let Ie = (() => {
        class J extends x.X {
          constructor(Se, We, It, kt) {
            super(kt);
            const bn = Se.pipe((0, pe.Q)(he)).pipe(
                (function _t(...J) {
                  const Ye = (0, Le.jO)(J);
                  return (0, ie.e)((Se, We) => {
                    const It = J.length,
                      kt = new Array(It);
                    let un = J.map(() => !1),
                      bn = !1;
                    for (let On = 0; On < It; On++)
                      (0, Ue.Xf)(J[On]).subscribe(
                        (0, Ve.x)(
                          We,
                          ei => {
                            (kt[On] = ei),
                              !bn &&
                                !un[On] &&
                                ((un[On] = !0),
                                (bn = un.every(at.y)) && (un = null));
                          },
                          vt.Z,
                        ),
                      );
                    Se.subscribe(
                      (0, Ve.x)(We, On => {
                        if (bn) {
                          const ei = [On, ...kt];
                          We.next(Ye ? Ye(...ei) : ei);
                        }
                      }),
                    );
                  });
                })(We),
              ),
              ei = bn.pipe((0, lt.R)(Dt, { state: kt }));
            this.stateSubscription = ei.subscribe(
              ({ state: Rn, action: vi }) => {
                this.next(Rn), It.next(vi);
              },
            );
          }
          ngOnDestroy() {
            this.stateSubscription.unsubscribe(), this.complete();
          }
        }
        return (
          (J.INIT = De),
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(je), s.LFG(ke), s.LFG(Mt), s.LFG(Ge));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      function Dt(J = { state: void 0 }, [Ye, Se]) {
        const { state: We } = J;
        return { state: Se(We, Ye), action: Ye };
      }
      const et = [Ie, { provide: wn, useExisting: Ie }];
      let St = (() => {
        class J extends L.y {
          constructor(Se, We, It) {
            super(),
              (this.actionsObserver = We),
              (this.reducerManager = It),
              (this.source = Se);
          }
          select(Se, ...We) {
            return F.call(null, Se, ...We)(this);
          }
          lift(Se) {
            const We = new J(this, this.actionsObserver, this.reducerManager);
            return (We.operator = Se), We;
          }
          dispatch(Se) {
            this.actionsObserver.next(Se);
          }
          next(Se) {
            this.actionsObserver.next(Se);
          }
          error(Se) {
            this.actionsObserver.error(Se);
          }
          complete() {
            this.actionsObserver.complete();
          }
          addReducer(Se, We) {
            this.reducerManager.addReducer(Se, We);
          }
          removeReducer(Se) {
            this.reducerManager.removeReducer(Se);
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(wn), s.LFG(je), s.LFG(fe));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Te = [St];
      function F(J, Ye, ...Se) {
        return function (It) {
          let kt;
          if ('string' == typeof J) {
            const un = [Ye, ...Se].filter(Boolean);
            kt = It.pipe(
              (function W(...J) {
                const Ye = J.length;
                if (0 === Ye)
                  throw new Error('list of properties cannot be empty.');
                return (0, bt.U)(Se => {
                  let We = Se;
                  for (let It = 0; It < Ye; It++) {
                    const kt = We?.[J[It]];
                    if (!(typeof kt < 'u')) return;
                    We = kt;
                  }
                  return We;
                });
              })(J, ...un),
            );
          } else {
            if ('function' != typeof J)
              throw new TypeError(
                `Unexpected type '${typeof J}' in select operator, expected 'string' or 'function'`,
              );
            kt = It.pipe((0, bt.U)(un => J(un, Ye)));
          }
          return kt.pipe((0, se.x)());
        };
      }
      const b = 'https://ngrx.io/guide/store/configuration/runtime-checks';
      function M(J) {
        return void 0 === J;
      }
      function G(J) {
        return null === J;
      }
      function Q(J) {
        return Array.isArray(J);
      }
      function Je(J) {
        return 'object' == typeof J && null !== J;
      }
      function Oe(J) {
        return 'function' == typeof J;
      }
      function qt(J, Ye) {
        return J === Ye;
      }
      function wi(J, Ye = qt, Se = qt) {
        let kt,
          We = null,
          It = null;
        return {
          memoized: function ei() {
            if (void 0 !== kt) return kt.result;
            if (!We)
              return (It = J.apply(null, arguments)), (We = arguments), It;
            if (
              !(function Dn(J, Ye, Se) {
                for (let We = 0; We < J.length; We++)
                  if (!Se(J[We], Ye[We])) return !0;
                return !1;
              })(arguments, We, Ye)
            )
              return It;
            const Rn = J.apply(null, arguments);
            return (We = arguments), Se(It, Rn) ? It : ((It = Rn), Rn);
          },
          reset: function un() {
            (We = null), (It = null);
          },
          setResult: function bn(Rn) {
            kt = { result: Rn };
          },
          clearResult: function On() {
            kt = void 0;
          },
        };
      }
      function _i(...J) {
        return (function Or(J, Ye = { stateFn: cr }) {
          return function (...Se) {
            let We = Se;
            if (Array.isArray(We[0])) {
              const [Rn, ...vi] = We;
              We = [...Rn, ...vi];
            } else
              1 === We.length &&
                (function Gt(J) {
                  return (
                    !!J &&
                    'object' == typeof J &&
                    Object.values(J).every(Ye => 'function' == typeof Ye)
                  );
                })(We[0]) &&
                (We = (function ni(J) {
                  const Ye = Object.values(J),
                    Se = Object.keys(J);
                  return [
                    ...Ye,
                    (...It) =>
                      Se.reduce((kt, un, bn) => ({ ...kt, [un]: It[bn] }), {}),
                  ];
                })(We[0]));
            const It = We.slice(0, We.length - 1),
              kt = We[We.length - 1],
              un = It.filter(
                Rn => Rn.release && 'function' == typeof Rn.release,
              ),
              bn = J(function (...Rn) {
                return kt.apply(null, Rn);
              }),
              On = wi(function (Rn, vi) {
                return Ye.stateFn.apply(null, [Rn, It, vi, bn]);
              });
            return Object.assign(On.memoized, {
              release: function ei() {
                On.reset(), bn.reset(), un.forEach(Rn => Rn.release());
              },
              projector: bn.memoized,
              setResult: On.setResult,
              clearResult: On.clearResult,
            });
          };
        })(wi)(...J);
      }
      function cr(J, Ye, Se, We) {
        if (void 0 === Se) {
          const kt = Ye.map(un => un(J));
          return We.memoized.apply(null, kt);
        }
        const It = Ye.map(kt => kt(J, Se));
        return We.memoized.apply(null, [...It, Se]);
      }
      function ai(J) {
        return J instanceof s.OlP ? (0, s.f3M)(J) : J;
      }
      function Di(J, Ye) {
        return Ye.map((Se, We) => {
          if (J[We] instanceof s.OlP) {
            const It = (0, s.f3M)(J[We]);
            return {
              key: Se.key,
              reducerFactory: It.reducerFactory ? It.reducerFactory : Ae,
              metaReducers: It.metaReducers ? It.metaReducers : [],
              initialState: It.initialState,
            };
          }
          return Se;
        });
      }
      function eo(J) {
        return J.map(Ye => (Ye instanceof s.OlP ? (0, s.f3M)(Ye) : Ye));
      }
      function Ni(J) {
        return 'function' == typeof J ? J() : J;
      }
      function dr(J, Ye) {
        return J.concat(Ye);
      }
      function ui() {
        if ((0, s.f3M)(St, { optional: !0, skipSelf: !0 }))
          throw new TypeError(
            'The root Store has been provided more than once. Feature modules should provide feature states instead.',
          );
        return 'guarded';
      }
      function hn(J) {
        Object.freeze(J);
        const Ye = Oe(J);
        return (
          Object.getOwnPropertyNames(J).forEach(Se => {
            if (
              !Se.startsWith('\u0275') &&
              (function Z(J, Ye) {
                return Object.prototype.hasOwnProperty.call(J, Ye);
              })(J, Se) &&
              (!Ye ||
                ('caller' !== Se && 'callee' !== Se && 'arguments' !== Se))
            ) {
              const We = J[Se];
              (Je(We) || Oe(We)) && !Object.isFrozen(We) && hn(We);
            }
          }),
          J
        );
      }
      function hi(J, Ye = []) {
        return (M(J) || G(J)) && 0 === Ye.length
          ? { path: ['root'], value: J }
          : Object.keys(J).reduce((We, It) => {
              if (We) return We;
              const kt = J[It];
              return (function be(J) {
                return Oe(J) && J.hasOwnProperty('\u0275cmp');
              })(kt)
                ? We
                : !(
                    M(kt) ||
                    G(kt) ||
                    (function Vt(J) {
                      return 'number' == typeof J;
                    })(kt) ||
                    (function Tt(J) {
                      return 'boolean' == typeof J;
                    })(kt) ||
                    (function Qe(J) {
                      return 'string' == typeof J;
                    })(kt) ||
                    Q(kt)
                  ) &&
                    ((function en(J) {
                      if (
                        !(function Ft(J) {
                          return Je(J) && !Q(J);
                        })(J)
                      )
                        return !1;
                      const Ye = Object.getPrototypeOf(J);
                      return Ye === Object.prototype || null === Ye;
                    })(kt)
                      ? hi(kt, [...Ye, It])
                      : { path: [...Ye, It], value: kt });
            }, !1);
      }
      function fi(J, Ye) {
        if (!1 === J) return;
        const Se = J.path.join('.'),
          We = new Error(
            `Detected unserializable ${Ye} at "${Se}". ${b}#strict${Ye}serializability`,
          );
        throw ((We.value = J.value), (We.unserializablePath = Se), We);
      }
      function li(J) {
        return (0, s.X6Q)()
          ? {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !0,
              strictActionImmutability: !0,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
              ...J,
            }
          : {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !1,
              strictActionImmutability: !1,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
            };
      }
      function An({
        strictActionSerializability: J,
        strictStateSerializability: Ye,
      }) {
        return Se =>
          J || Ye
            ? (function Nn(J, Ye) {
                return function (Se, We) {
                  Ye.action(We) && fi(hi(We), 'action');
                  const It = J(Se, We);
                  return Ye.state() && fi(hi(It), 'state'), It;
                };
              })(Se, { action: We => J && !ri(We), state: () => Ye })
            : Se;
      }
      function Mi({
        strictActionImmutability: J,
        strictStateImmutability: Ye,
      }) {
        return Se =>
          J || Ye
            ? (function jt(J, Ye) {
                return function (Se, We) {
                  const It = Ye.action(We) ? hn(We) : We,
                    kt = J(Se, It);
                  return Ye.state() ? hn(kt) : kt;
                };
              })(Se, { action: We => J && !ri(We), state: () => Ye })
            : Se;
      }
      function ri(J) {
        return J.type.startsWith('@ngrx');
      }
      function _n({ strictActionWithinNgZone: J }) {
        return Ye =>
          J
            ? (function Qn(J, Ye) {
                return function (Se, We) {
                  if (Ye.action(We) && !s.R0b.isInAngularZone())
                    throw new Error(
                      `Action '${We.type}' running outside NgZone. ${b}#strictactionwithinngzone`,
                    );
                  return J(Se, We);
                };
              })(Ye, { action: Se => J && !ri(Se) })
            : Ye;
      }
      function Ji(J) {
        return [
          { provide: Lt, useValue: J },
          { provide: Jt, useFactory: ur, deps: [Lt] },
          { provide: Pn, deps: [Jt], useFactory: li },
          { provide: dn, multi: !0, deps: [Pn], useFactory: Mi },
          { provide: dn, multi: !0, deps: [Pn], useFactory: An },
          { provide: dn, multi: !0, deps: [Pn], useFactory: _n },
        ];
      }
      function zi() {
        return [{ provide: ot, multi: !0, deps: [Pn], useFactory: Ai }];
      }
      function ur(J) {
        return J;
      }
      function Ai(J) {
        if (!J.strictActionTypeUniqueness) return;
        const Ye = Object.entries(ne)
          .filter(([, Se]) => Se > 1)
          .map(([Se]) => Se);
        if (Ye.length)
          throw new Error(
            `Action types are registered more than once, ${Ye.map(
              Se => `"${Se}"`,
            ).join(', ')}. ${b}#strictactiontypeuniqueness`,
          );
      }
      function er(J = {}, Ye = {}) {
        return [
          { provide: Re, useFactory: ui },
          { provide: Ne, useValue: Ye.initialState },
          { provide: Ge, useFactory: Ni, deps: [Ne] },
          { provide: pt, useValue: J },
          { provide: yn, useExisting: J instanceof s.OlP ? J : pt },
          { provide: Wt, deps: [pt, [new s.tBr(yn)]], useFactory: ai },
          { provide: mn, useValue: Ye.metaReducers ? Ye.metaReducers : [] },
          { provide: Gn, deps: [dn, mn], useFactory: dr },
          { provide: Ke, useValue: Ye.reducerFactory ? Ye.reducerFactory : Ae },
          { provide: ct, deps: [Ke, Gn], useFactory: ye },
          Ce,
          qe,
          Pt,
          et,
          Te,
          Ji(Ye.runtimeChecks),
          zi(),
        ];
      }
      function ki(J, Ye, Se = {}) {
        return [
          { provide: ft, multi: !0, useValue: J instanceof Object ? {} : Se },
          {
            provide: l,
            multi: !0,
            useValue: {
              key: J instanceof Object ? J.name : J,
              reducerFactory:
                Se instanceof s.OlP || !Se.reducerFactory
                  ? Ae
                  : Se.reducerFactory,
              metaReducers:
                Se instanceof s.OlP || !Se.metaReducers ? [] : Se.metaReducers,
              initialState:
                Se instanceof s.OlP || !Se.initialState
                  ? void 0
                  : Se.initialState,
            },
          },
          { provide: Et, deps: [ft, l], useFactory: Di },
          {
            provide: rt,
            multi: !0,
            useValue: J instanceof Object ? J.reducer : Ye,
          },
          {
            provide: mt,
            multi: !0,
            useExisting: Ye instanceof s.OlP ? Ye : rt,
          },
          {
            provide: ln,
            multi: !0,
            deps: [rt, [new s.tBr(mt)]],
            useFactory: eo,
          },
          zi(),
        ];
      }
      let Zi = (() => {
          class J {
            constructor(Se, We, It, kt, un, bn) {}
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(je),
                s.LFG(ke),
                s.LFG(Mt),
                s.LFG(St),
                s.LFG(Re, 8),
                s.LFG(ot, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        vr = (() => {
          class J {
            constructor(Se, We, It, kt, un) {
              (this.features = Se),
                (this.featureReducers = We),
                (this.reducerManager = It);
              const bn = Se.map((On, ei) => {
                const vi = We.shift()[ei];
                return {
                  ...On,
                  reducers: vi,
                  initialState: Ni(On.initialState),
                };
              });
              It.addFeatures(bn);
            }
            ngOnDestroy() {
              this.reducerManager.removeFeatures(this.features);
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(Et),
                s.LFG(ln),
                s.LFG(fe),
                s.LFG(Zi),
                s.LFG(ot, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        Ci = (() => {
          class J {
            static forRoot(Se, We) {
              return { ngModule: Zi, providers: [...er(Se, We)] };
            }
            static forFeature(Se, We, It = {}) {
              return { ngModule: vr, providers: [...ki(Se, We, It)] };
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)();
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })();
      function Ln(...J) {
        return { reducer: J.pop(), types: J.map(We => We.type) };
      }
      function Ti(J, ...Ye) {
        const Se = new Map();
        for (const We of Ye)
          for (const It of We.types) {
            const kt = Se.get(It);
            Se.set(
              It,
              kt ? (bn, On) => We.reducer(kt(bn, On), On) : We.reducer,
            );
          }
        return function (We = J, It) {
          const kt = Se.get(It.type);
          return kt ? kt(We, It) : We;
        };
      }
    },
  },
  Rt => {
    Rt((Rt.s = 4044));
  },
]);
