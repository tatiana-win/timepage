'use strict';
(self.webpackChunktimepage = self.webpackChunktimepage || []).push([
  [179],
  {
    2561: (Ot, Ne, C) => {
      C.r(Ne), C.d(Ne, { AuthModule: () => wn });
      var s = C(6895),
        x = C(8252),
        L = C(4006);
      class oe {
        constructor(Jt, xt, ht) {
          (this.name = Jt), (this.description = xt), (this.rules = ht);
        }
      }
      const ge = /^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/,
        ue = {
          LOGIN: [L.kI.required, L.kI.minLength(6)],
          PASS: [L.kI.required, L.kI.minLength(6)],
          EMAIL: [L.kI.pattern(ge)],
          EMAIL_REQUIRED: [L.kI.required, L.kI.pattern(ge)],
        },
        le = ['dirty'],
        ae = {
          required: new oe('required', 'Required field', [...le]),
          email: new oe('pattern', 'Email is incorrect', [...le]),
          repass: new oe('repass', "Passwords don't match", ['dirty']),
          minLength: Dt =>
            new oe('minlength', `Minimal length is ${Dt} symbols`, [...le]),
          maxLength: Dt =>
            new oe('maxlength', `Maximum length of ${Dt} symbols is exceeded`, [
              ...le,
            ]),
          pattern: Dt =>
            new oe('pattern', `Field must satisfy to pattern: ${Dt}`, [...le]),
        },
        pe = {
          LOGIN: [ae.required, ae.minLength(6)],
          EMAIL: [ae.email],
          EMAIL_REQUIRED: [ae.required, ae.email],
          PASS: [ae.required, ae.minLength(6)],
          REPASS: [
            ae.required,
            ae.pattern('\u0441\u0442\u0440\u043e\u043a\u0438'),
            ae.repass,
          ],
        };
      function se(Dt) {
        const { pass: Jt, repass: xt } = Dt.controls;
        return (
          Jt.value && xt.value && Jt.value !== xt.value
            ? xt.setErrors({ repass: !0, ...xt.errors })
            : xt.errors &&
              'repass' in xt.errors &&
              xt.setErrors(
                Object.keys(xt.errors).length > 0 ? xt.errors : null,
              ),
          null
        );
      }
      var Be = C(1831);
      const ze = (0, Be.PH)('[Auth] SignIn', (0, Be.Ky)()),
        st = (0, Be.PH)('[Auth] SignUp', (0, Be.Ky)()),
        gt = (0, Be.PH)('[Auth] Error', (0, Be.Ky)()),
        Le = (0, Be.PH)('[Auth] Register Success', (0, Be.Ky)()),
        pt = (0, Be.PH)('[Auth] Login Success'),
        at = (0, Be.PH)('[Auth] Clear Registration Login'),
        vt = (0, Be.PH)('[Auth] Clear Auth'),
        xe = Dt => Dt.auth,
        ne = (0, Be.P1)(xe, Dt => Dt.loading),
        te = (0, Be.P1)(xe, Dt => Dt.registrationLogin),
        X = (0, Be.P1)(xe, Dt => Dt.isAuth),
        Se = (0, Be.P1)(xe, Dt => Dt.error);
      var tt = C(9300),
        re = C(4650),
        At = C(7009),
        mt = C(9549),
        Yt = C(4144),
        Et = C(4859);
      function Ge(Dt, Jt) {
        if ((1 & Dt && (re.TgZ(0, 'span', 3), re._uU(1), re.qZA()), 2 & Dt)) {
          const xt = re.oxw().$implicit;
          re.xp6(1), re.hij(' ', xt.description, ' ');
        }
      }
      function $e(Dt, Jt) {
        if (
          (1 & Dt && (re.ynx(0), re.YNc(1, Ge, 2, 1, 'span', 2), re.BQk()),
          2 & Dt)
        ) {
          const xt = Jt.$implicit,
            ht = re.oxw();
          re.xp6(1),
            re.Q6J(
              'ngIf',
              ht.control.hasError(xt.name) && ht.isRulesApplied(xt),
            );
        }
      }
      let Me = (() => {
        class Dt {
          isRulesApplied(xt) {
            return xt.rules.every(ht => this.control[ht]);
          }
        }
        return (
          (Dt.ɵfac = function (xt) {
            return new (xt || Dt)();
          }),
          (Dt.ɵcmp = re.Xpm({
            type: Dt,
            selectors: [['app-input-error']],
            inputs: { form: 'form', control: 'control', errors: 'errors' },
            decls: 2,
            vars: 2,
            consts: [
              [1, 'error', 3, 'formGroup'],
              [4, 'ngFor', 'ngForOf'],
              ['class', 'error', 4, 'ngIf'],
              [1, 'error'],
            ],
            template: function (xt, ht) {
              1 & xt &&
                (re.ynx(0, 0),
                re.YNc(1, $e, 2, 1, 'ng-container', 1),
                re.BQk()),
                2 & xt &&
                  (re.Q6J('formGroup', ht.form),
                  re.xp6(1),
                  re.Q6J('ngForOf', ht.errors));
            },
            dependencies: [s.sg, s.O5, L.JL, L.sg],
            styles: [
              '[_nghost-%COMP%]{display:block;margin-bottom:11px;margin-top:-22px;height:14px}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{font-size:11px;color:#e00052}',
            ],
          })),
          Dt
        );
      })();
      const Pe = [
        {
          path: 'signup',
          component: (() => {
            class Dt {
              constructor(xt, ht, hn, Xe) {
                (this.fb = xt),
                  (this.store = ht),
                  (this.router = hn),
                  (this.snackBar = Xe),
                  (this.loading = !1),
                  (this.regForm = this.fb.group(
                    {
                      username: ['', ue.LOGIN],
                      email: ['', ue.EMAIL_REQUIRED],
                      pass: ['', ue.PASS],
                      repass: ['', ue.PASS],
                    },
                    { validators: se, updateOn: 'change' },
                  )),
                  (this.errors = {
                    username: pe.LOGIN,
                    email: pe.EMAIL_REQUIRED,
                    pass: pe.PASS,
                    repass: pe.REPASS,
                  }),
                  this.store.select(ne).subscribe($ => (this.loading = $)),
                  this.store
                    .select(te)
                    .pipe((0, tt.h)(Boolean))
                    .subscribe(() => {
                      this.snackBar.open(
                        'Account has been successfully created',
                        void 0,
                        { duration: 3e3 },
                      ),
                        this.router.navigate(['/auth/signin']);
                    }),
                  this.store
                    .select(Se)
                    .pipe((0, tt.h)(Boolean))
                    .subscribe($ => {
                      this.snackBar.open($, void 0, { duration: 5e3 });
                    });
              }
              ngOnDestroy() {
                this.store.dispatch(at());
              }
              get isDisabled() {
                return this.loading || this.regForm.invalid;
              }
              onRegistration() {
                const {
                  username: xt,
                  email: ht,
                  pass: hn,
                } = this.regForm.value;
                xt &&
                  ht &&
                  hn &&
                  this.store.dispatch(
                    st({ username: xt, email: ht, password: hn }),
                  );
              }
            }
            return (
              (Dt.ɵfac = function (xt) {
                return new (xt || Dt)(
                  re.Y36(L.qu),
                  re.Y36(Be.yh),
                  re.Y36(x.F0),
                  re.Y36(At.ux),
                );
              }),
              (Dt.ɵcmp = re.Xpm({
                type: Dt,
                selectors: [['app-signup']],
                decls: 32,
                vars: 18,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'data-testid',
                    'username-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'email',
                    'data-testid',
                    'email',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'email-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'password-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'repass',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'repass-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signup',
                    1,
                    'signup-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'signup-block'],
                  [
                    'routerLink',
                    '/auth/signin',
                    'data-testid',
                    'signin',
                    1,
                    'signup-login',
                    'link',
                  ],
                ],
                template: function (xt, ht) {
                  1 & xt &&
                    (re.TgZ(0, 'div', 0)(1, 'header', 1),
                    re._uU(2, 'Sign Up'),
                    re.qZA(),
                    re.TgZ(3, 'form', 2),
                    re.NdJ('keydown.enter', function () {
                      return !ht.isDisabled && ht.onRegistration();
                    }),
                    re.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    re._uU(6, 'Username'),
                    re.qZA(),
                    re._UZ(7, 'input', 3),
                    re.qZA(),
                    re._UZ(8, 'app-input-error', 4),
                    re.TgZ(9, 'mat-form-field')(10, 'mat-label'),
                    re._uU(11, 'Email'),
                    re.qZA(),
                    re._UZ(12, 'input', 5),
                    re.qZA(),
                    re._UZ(13, 'app-input-error', 6),
                    re.TgZ(14, 'mat-form-field')(15, 'mat-label'),
                    re._uU(16, 'Password'),
                    re.qZA(),
                    re._UZ(17, 'input', 7),
                    re.qZA(),
                    re._UZ(18, 'app-input-error', 8),
                    re.TgZ(19, 'mat-form-field')(20, 'mat-label'),
                    re._uU(21, 'Repeat password'),
                    re.qZA(),
                    re._UZ(22, 'input', 9),
                    re.qZA(),
                    re._UZ(23, 'app-input-error', 10),
                    re.TgZ(24, 'button', 11),
                    re.NdJ('click', function () {
                      return ht.onRegistration();
                    }),
                    re._uU(25, ' Sign Up '),
                    re.qZA(),
                    re._UZ(26, 'div', 12),
                    re.TgZ(27, 'div', 13)(28, 'span'),
                    re._uU(29, 'Do you have an account?'),
                    re.qZA(),
                    re.TgZ(30, 'a', 14),
                    re._uU(31, 'Sign In'),
                    re.qZA()()()()),
                    2 & xt &&
                      (re.xp6(3),
                      re.Q6J('formGroup', ht.regForm),
                      re.xp6(4),
                      re.Q6J('formControl', ht.regForm.controls.username),
                      re.xp6(1),
                      re.Q6J('form', ht.regForm)(
                        'control',
                        ht.regForm.controls.username,
                      )('errors', ht.errors.username),
                      re.xp6(4),
                      re.Q6J('formControl', ht.regForm.controls.email),
                      re.xp6(1),
                      re.Q6J('form', ht.regForm)(
                        'control',
                        ht.regForm.controls.email,
                      )('errors', ht.errors.email),
                      re.xp6(4),
                      re.Q6J('formControl', ht.regForm.controls.pass),
                      re.xp6(1),
                      re.Q6J('form', ht.regForm)(
                        'control',
                        ht.regForm.controls.pass,
                      )('errors', ht.errors.pass),
                      re.xp6(4),
                      re.Q6J('formControl', ht.regForm.controls.repass),
                      re.xp6(1),
                      re.Q6J('form', ht.regForm)(
                        'control',
                        ht.regForm.controls.repass,
                      )('errors', ht.errors.repass),
                      re.xp6(1),
                      re.Q6J('disabled', ht.isDisabled));
                },
                dependencies: [
                  x.rH,
                  mt.KE,
                  mt.hX,
                  Yt.Nt,
                  Et.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                  Me,
                ],
                styles: [
                  '.signup-button[_ngcontent-%COMP%]{display:flex}.signup-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.signup-login[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              Dt
            );
          })(),
        },
        {
          path: 'signin',
          component: (() => {
            class Dt {
              constructor(xt, ht, hn, Xe) {
                (this.fb = xt),
                  (this.store = ht),
                  (this.router = hn),
                  (this.snackBar = Xe),
                  (this.loading = !1),
                  (this.logInForm = this.fb.group({
                    username: ['', [L.kI.required]],
                    pass: ['', [L.kI.required]],
                  })),
                  (this.loading$ = this.store.select(ne)),
                  this.loading$.subscribe($ => (this.loading = $)),
                  this.store
                    .select(Se)
                    .pipe((0, tt.h)(Boolean))
                    .subscribe($ => {
                      this.snackBar.open($, void 0, { duration: 5e3 });
                    }),
                  this.store
                    .select(X)
                    .pipe((0, tt.h)(Boolean))
                    .subscribe($ => {
                      this.router.navigate(['/calendar']);
                    });
              }
              ngOnDestroy() {
                this.store.dispatch(vt());
              }
              get isDisabled() {
                return this.loading || this.logInForm.invalid;
              }
              onLogin() {
                const { username: xt, pass: ht } = this.logInForm.value;
                xt &&
                  ht &&
                  this.store.dispatch(ze({ username: xt, password: ht }));
              }
            }
            return (
              (Dt.ɵfac = function (xt) {
                return new (xt || Dt)(
                  re.Y36(L.qu),
                  re.Y36(Be.yh),
                  re.Y36(x.F0),
                  re.Y36(At.ux),
                );
              }),
              (Dt.ɵcmp = re.Xpm({
                type: Dt,
                selectors: [['app-signin']],
                decls: 20,
                vars: 4,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signin',
                    1,
                    'login-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'login-block'],
                  [
                    'routerLink',
                    '/auth/signup',
                    'data-testid',
                    'signup',
                    1,
                    'login-registration',
                    'link',
                  ],
                ],
                template: function (xt, ht) {
                  1 & xt &&
                    (re.TgZ(0, 'div', 0)(1, 'header', 1),
                    re._uU(2, 'Sign In'),
                    re.qZA(),
                    re.TgZ(3, 'form', 2),
                    re.NdJ('keydown.enter', function () {
                      return !ht.isDisabled && ht.onLogin();
                    }),
                    re.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    re._uU(6, 'Username'),
                    re.qZA(),
                    re._UZ(7, 'input', 3),
                    re.qZA(),
                    re.TgZ(8, 'mat-form-field')(9, 'mat-label'),
                    re._uU(10, 'Password'),
                    re.qZA(),
                    re._UZ(11, 'input', 4),
                    re.qZA(),
                    re.TgZ(12, 'button', 5),
                    re.NdJ('click', function () {
                      return ht.onLogin();
                    }),
                    re._uU(13, ' Sign In '),
                    re.qZA(),
                    re._UZ(14, 'div', 6),
                    re.TgZ(15, 'div', 7)(16, 'span'),
                    re._uU(17, "Don't have an account?"),
                    re.qZA(),
                    re.TgZ(18, 'a', 8),
                    re._uU(19, 'Sign Up'),
                    re.qZA()()()()),
                    2 & xt &&
                      (re.xp6(3),
                      re.Q6J('formGroup', ht.logInForm),
                      re.xp6(4),
                      re.Q6J('formControl', ht.logInForm.controls.username),
                      re.xp6(4),
                      re.Q6J('formControl', ht.logInForm.controls.pass),
                      re.xp6(1),
                      re.Q6J('disabled', ht.isDisabled));
                },
                dependencies: [
                  x.rH,
                  mt.KE,
                  mt.hX,
                  Yt.Nt,
                  Et.lW,
                  L._Y,
                  L.Fj,
                  L.JJ,
                  L.JL,
                  L.oH,
                  L.sg,
                ],
                styles: [
                  '.login-button[_ngcontent-%COMP%]{display:flex}.login-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.login-registration[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              Dt
            );
          })(),
        },
      ];
      let a = (() => {
        class Dt {}
        return (
          (Dt.ɵfac = function (xt) {
            return new (xt || Dt)();
          }),
          (Dt.ɵmod = re.oAB({ type: Dt })),
          (Dt.ɵinj = re.cJS({ imports: [x.Bz.forChild(Pe), x.Bz] })),
          Dt
        );
      })();
      var Ye = C(2542),
        rt = C(8776),
        je = C(4004),
        ut = C(9646),
        nt = C(6129),
        Lt = C(262);
      let Mn = (() => {
        class Dt {
          constructor(xt, ht) {
            (this.actions$ = xt),
              (this.authService = ht),
              (this.signUp$ = (0, rt.GW)(() =>
                this.actions$.pipe(
                  (0, rt.l4)(st.type),
                  (0, nt.z)(({ username: hn, email: Xe, password: $ }) =>
                    this.authService.register(hn, Xe, $).pipe(
                      (0, je.U)(() => Le({ login: hn })),
                      (0, Lt.K)(J =>
                        (0, ut.of)(
                          gt({ error: J?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.login$ = (0, rt.GW)(() =>
                this.actions$.pipe(
                  (0, rt.l4)(ze.type),
                  (0, nt.z)(({ username: hn, password: Xe }) =>
                    this.authService.login(hn, Xe).pipe(
                      (0, je.U)(({}) => pt()),
                      (0, Lt.K)($ =>
                        (0, ut.of)(
                          gt({ error: $?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (Dt.ɵfac = function (xt) {
            return new (xt || Dt)(re.LFG(rt.eX), re.LFG(Ye.e));
          }),
          (Dt.ɵprov = re.Yz7({ token: Dt, factory: Dt.ɵfac })),
          Dt
        );
      })();
      const an = (0, Be.Lq)(
        { loading: !1, registrationLogin: '', isAuth: !1 },
        (0, Be.on)(st, Dt => ({ ...Dt, error: void 0, loading: !0 })),
        (0, Be.on)(ze, Dt => ({ ...Dt, error: void 0, loading: !0 })),
        (0, Be.on)(gt, (Dt, { error: Jt }) => ({
          ...Dt,
          error: Jt,
          loading: !1,
        })),
        (0, Be.on)(Le, (Dt, { login: Jt }) => ({
          ...Dt,
          error: void 0,
          loading: !1,
          registrationLogin: Jt,
        })),
        (0, Be.on)(pt, Dt => ({
          ...Dt,
          error: void 0,
          loading: !1,
          isAuth: !0,
        })),
        (0, Be.on)(at, Dt => ({
          ...Dt,
          error: void 0,
          loading: !1,
          registrationLogin: '',
        })),
        (0, Be.on)(vt, Dt => ({
          ...Dt,
          error: void 0,
          loading: !1,
          isAuth: !1,
        })),
      );
      var Dn = C(529);
      let Kt = (() => {
        class Dt {}
        return (
          (Dt.ɵfac = function (xt) {
            return new (xt || Dt)();
          }),
          (Dt.ɵmod = re.oAB({ type: Dt })),
          (Dt.ɵinj = re.cJS({ imports: [s.ez, L.u5, L.UX, mt.lN, Yt.c] })),
          Dt
        );
      })();
      var mn = C(3238);
      let wn = (() => {
        class Dt {}
        return (
          (Dt.ɵfac = function (xt) {
            return new (xt || Dt)();
          }),
          (Dt.ɵmod = re.oAB({ type: Dt })),
          (Dt.ɵinj = re.cJS({
            providers: [Ye.e, { provide: mn.rD, useClass: mn.hu }],
            imports: [
              s.ez,
              a,
              mt.lN,
              Yt.c,
              Et.ot,
              L.u5,
              L.UX,
              rt.sQ.forFeature([Mn]),
              Be.Aw.forFeature('auth', an),
              Dn.JF,
              At.ZX,
              Kt,
            ],
          })),
          Dt
        );
      })();
    },
    2542: (Ot, Ne, C) => {
      C.d(Ne, { e: () => he });
      var s = C(529),
        x = C(4004),
        L = C(3835),
        oe = C(4650);
      const ee = { headers: new s.WM({ 'Content-Type': 'application/json' }) };
      let he = (() => {
        class ge {
          constructor(le) {
            this.http = le;
          }
          register(le, ae, pe) {
            return this.http.post(
              `${L.k.apiUrl}/auth/signup`,
              { username: le, email: ae, password: pe },
              ee,
            );
          }
          login(le, ae) {
            return this.http
              .post(
                `${L.k.apiUrl}/auth/signin`,
                { username: le, password: ae },
                ee,
              )
              .pipe(
                (0, x.U)(
                  ({ accessToken: pe }) => (
                    localStorage.setItem('token', pe), pe
                  ),
                ),
              );
          }
          logout() {
            return this.http.post(`${L.k.apiUrl}/auth/signout`, {}).pipe(
              (0, x.U)(() => {
                localStorage.removeItem('token');
              }),
            );
          }
        }
        return (
          (ge.ɵfac = function (le) {
            return new (le || ge)(oe.LFG(s.eN));
          }),
          (ge.ɵprov = oe.Yz7({
            token: ge,
            factory: ge.ɵfac,
            providedIn: 'root',
          })),
          ge
        );
      })();
    },
    4653: (Ot, Ne, C) => {
      C.r(Ne), C.d(Ne, { CalendarModule: () => rl });
      var s = C(6895),
        x = C(8252),
        L = C(1831);
      const oe = (0, L.PH)('[Calendar] Load Calendar Notes', (0, L.Ky)()),
        ee = (0, L.PH)('[Calendar] Load Todo Notes'),
        he = (0, L.PH)('[Calendar] Calendar Notes Loaded', (0, L.Ky)()),
        ge = (0, L.PH)('[Calendar] Todo Notes Loaded', (0, L.Ky)()),
        ue = (0, L.PH)('[Calendar] Load Notes Error', (0, L.Ky)()),
        le = (0, L.PH)('[Calendar] Create Note', (0, L.Ky)()),
        ae = (0, L.PH)('[Calendar] Update Note', (0, L.Ky)()),
        pe = (0, L.PH)('[Calendar] Delete Note', (0, L.Ky)()),
        se = (0, L.PH)('[Calendar] Request Succeded'),
        Be = (0, L.PH)('[Calendar] Reset Request Succeded'),
        ze = (0, L.PH)('[Calendar] Update Min Rows Count', (0, L.Ky)()),
        st = g => {
          const F = g.getDay(),
            r = new Date(g);
          return r.setDate(g.getDate() - F + 1), r;
        },
        gt = g => {
          const F = st(g),
            r = new Date(F);
          return r.setDate(F.getDate() + 6), r;
        },
        Le = (g, F) => {
          const r = new Date(g);
          return r.setDate(g.getDate() - F), r;
        },
        pt = (g, F) => {
          const r = new Date(g);
          return r.setDate(g.getDate() + F), r;
        },
        vt = [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        xe = ['San', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        ne = g => (g < 10 ? `0${g}` : g),
        te = g =>
          `${g.getFullYear()}-${ne(g.getMonth() + 1)}-${ne(g.getDate())}`,
        re = g =>
          `${g.getFullYear()}-${ne(g.getMonth() + 1)}-${ne(
            g.getDate(),
          )}T01:00:00.000Z`;
      var At = C(9300);
      const mt = g => g.calendar,
        Ge =
          ((0, L.P1)(mt, g => g.loading),
          (0, L.P1)(mt, g => g.calendarNotes),
          (0, L.P1)(mt, g => g.todoNotes)),
        $e = (0, L.P1)(mt, g => g.error),
        Ue =
          ((0, L.P1)(mt, g => g.loaded), (0, L.P1)(mt, g => g.requestSuccess)),
        De = (0, L.P1)(mt, (g, F) => g.calendarNotes && g.calendarNotes[F]),
        Pe = (0, L.P1)(mt, g => g.minRowsCount);
      var a = C(4650),
        Ye = C(7009),
        rt = C(2542),
        je = C(4859),
        ut = C(3238),
        nt = C(1281),
        Lt = C(9646),
        Mn = C(2843),
        un = C(4128),
        an = C(727),
        Dn = C(8505),
        Kt = C(4004),
        mn = C(262),
        wn = C(8746),
        Dt = C(3099),
        Jt = C(5698),
        xt = C(529),
        ht = C(1481);
      const hn = ['*'];
      let Xe;
      function J(g) {
        return (
          (function $() {
            if (void 0 === Xe && ((Xe = null), typeof window < 'u')) {
              const g = window;
              void 0 !== g.trustedTypes &&
                (Xe = g.trustedTypes.createPolicy('angular#components', {
                  createHTML: F => F,
                }));
            }
            return Xe;
          })()?.createHTML(g) || g
        );
      }
      function Ae(g) {
        return Error(`Unable to find icon with the name "${g}"`);
      }
      function ve(g) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${g}".`,
        );
      }
      function be(g) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${g}".`,
        );
      }
      class j {
        constructor(F, r, c) {
          (this.url = F), (this.svgText = r), (this.options = c);
        }
      }
      let ke = (() => {
        class g {
          constructor(r, c, _, T) {
            (this._httpClient = r),
              (this._sanitizer = c),
              (this._errorHandler = T),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                'material-icons',
                'mat-ligature-font',
              ]),
              (this._document = _);
          }
          addSvgIcon(r, c, _) {
            return this.addSvgIconInNamespace('', r, c, _);
          }
          addSvgIconLiteral(r, c, _) {
            return this.addSvgIconLiteralInNamespace('', r, c, _);
          }
          addSvgIconInNamespace(r, c, _, T) {
            return this._addSvgIconConfig(r, c, new j(_, null, T));
          }
          addSvgIconResolver(r) {
            return this._resolvers.push(r), this;
          }
          addSvgIconLiteralInNamespace(r, c, _, T) {
            const _e = this._sanitizer.sanitize(a.q3G.HTML, _);
            if (!_e) throw be(_);
            const dt = J(_e);
            return this._addSvgIconConfig(r, c, new j('', dt, T));
          }
          addSvgIconSet(r, c) {
            return this.addSvgIconSetInNamespace('', r, c);
          }
          addSvgIconSetLiteral(r, c) {
            return this.addSvgIconSetLiteralInNamespace('', r, c);
          }
          addSvgIconSetInNamespace(r, c, _) {
            return this._addSvgIconSetConfig(r, new j(c, null, _));
          }
          addSvgIconSetLiteralInNamespace(r, c, _) {
            const T = this._sanitizer.sanitize(a.q3G.HTML, c);
            if (!T) throw be(c);
            const _e = J(T);
            return this._addSvgIconSetConfig(r, new j('', _e, _));
          }
          registerFontClassAlias(r, c = r) {
            return this._fontCssClassesByAlias.set(r, c), this;
          }
          classNameForFontAlias(r) {
            return this._fontCssClassesByAlias.get(r) || r;
          }
          setDefaultFontSetClass(...r) {
            return (this._defaultFontSetClass = r), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(r) {
            const c = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, r);
            if (!c) throw ve(r);
            const _ = this._cachedIconsByUrl.get(c);
            return _
              ? (0, Lt.of)(fe(_))
              : this._loadSvgIconFromConfig(new j(r, null)).pipe(
                  (0, Dn.b)(T => this._cachedIconsByUrl.set(c, T)),
                  (0, Kt.U)(T => fe(T)),
                );
          }
          getNamedSvgIcon(r, c = '') {
            const _ = et(c, r);
            let T = this._svgIconConfigs.get(_);
            if (T) return this._getSvgFromConfig(T);
            if (((T = this._getIconConfigFromResolvers(c, r)), T))
              return this._svgIconConfigs.set(_, T), this._getSvgFromConfig(T);
            const _e = this._iconSetConfigs.get(c);
            return _e
              ? this._getSvgFromIconSetConfigs(r, _e)
              : (0, Mn._)(Ae(_));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(r) {
            return r.svgText
              ? (0, Lt.of)(fe(this._svgElementFromConfig(r)))
              : this._loadSvgIconFromConfig(r).pipe((0, Kt.U)(c => fe(c)));
          }
          _getSvgFromIconSetConfigs(r, c) {
            const _ = this._extractIconWithNameFromAnySet(r, c);
            if (_) return (0, Lt.of)(_);
            const T = c
              .filter(_e => !_e.svgText)
              .map(_e =>
                this._loadSvgIconSetFromConfig(_e).pipe(
                  (0, mn.K)(dt => {
                    const On = `Loading icon set URL: ${this._sanitizer.sanitize(
                      a.q3G.RESOURCE_URL,
                      _e.url,
                    )} failed: ${dt.message}`;
                    return (
                      this._errorHandler.handleError(new Error(On)),
                      (0, Lt.of)(null)
                    );
                  }),
                ),
              );
            return (0, un.D)(T).pipe(
              (0, Kt.U)(() => {
                const _e = this._extractIconWithNameFromAnySet(r, c);
                if (!_e) throw Ae(r);
                return _e;
              }),
            );
          }
          _extractIconWithNameFromAnySet(r, c) {
            for (let _ = c.length - 1; _ >= 0; _--) {
              const T = c[_];
              if (T.svgText && T.svgText.toString().indexOf(r) > -1) {
                const _e = this._svgElementFromConfig(T),
                  dt = this._extractSvgIconFromSet(_e, r, T.options);
                if (dt) return dt;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(r) {
            return this._fetchIcon(r).pipe(
              (0, Dn.b)(c => (r.svgText = c)),
              (0, Kt.U)(() => this._svgElementFromConfig(r)),
            );
          }
          _loadSvgIconSetFromConfig(r) {
            return r.svgText
              ? (0, Lt.of)(null)
              : this._fetchIcon(r).pipe((0, Dn.b)(c => (r.svgText = c)));
          }
          _extractSvgIconFromSet(r, c, _) {
            const T = r.querySelector(`[id="${c}"]`);
            if (!T) return null;
            const _e = T.cloneNode(!0);
            if ((_e.removeAttribute('id'), 'svg' === _e.nodeName.toLowerCase()))
              return this._setSvgAttributes(_e, _);
            if ('symbol' === _e.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(_e), _);
            const dt = this._svgElementFromString(J('<svg></svg>'));
            return dt.appendChild(_e), this._setSvgAttributes(dt, _);
          }
          _svgElementFromString(r) {
            const c = this._document.createElement('DIV');
            c.innerHTML = r;
            const _ = c.querySelector('svg');
            if (!_) throw Error('<svg> tag not found');
            return _;
          }
          _toSvgElement(r) {
            const c = this._svgElementFromString(J('<svg></svg>')),
              _ = r.attributes;
            for (let T = 0; T < _.length; T++) {
              const { name: _e, value: dt } = _[T];
              'id' !== _e && c.setAttribute(_e, dt);
            }
            for (let T = 0; T < r.childNodes.length; T++)
              r.childNodes[T].nodeType === this._document.ELEMENT_NODE &&
                c.appendChild(r.childNodes[T].cloneNode(!0));
            return c;
          }
          _setSvgAttributes(r, c) {
            return (
              r.setAttribute('fit', ''),
              r.setAttribute('height', '100%'),
              r.setAttribute('width', '100%'),
              r.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              r.setAttribute('focusable', 'false'),
              c && c.viewBox && r.setAttribute('viewBox', c.viewBox),
              r
            );
          }
          _fetchIcon(r) {
            const { url: c, options: _ } = r,
              T = _?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function He() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.',
                );
              })();
            if (null == c) throw Error(`Cannot fetch icon from URL "${c}".`);
            const _e = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, c);
            if (!_e) throw ve(c);
            const dt = this._inProgressUrlFetches.get(_e);
            if (dt) return dt;
            const rn = this._httpClient
              .get(_e, { responseType: 'text', withCredentials: T })
              .pipe(
                (0, Kt.U)(On => J(On)),
                (0, wn.x)(() => this._inProgressUrlFetches.delete(_e)),
                (0, Dt.B)(),
              );
            return this._inProgressUrlFetches.set(_e, rn), rn;
          }
          _addSvgIconConfig(r, c, _) {
            return this._svgIconConfigs.set(et(r, c), _), this;
          }
          _addSvgIconSetConfig(r, c) {
            const _ = this._iconSetConfigs.get(r);
            return _ ? _.push(c) : this._iconSetConfigs.set(r, [c]), this;
          }
          _svgElementFromConfig(r) {
            if (!r.svgElement) {
              const c = this._svgElementFromString(r.svgText);
              this._setSvgAttributes(c, r.options), (r.svgElement = c);
            }
            return r.svgElement;
          }
          _getIconConfigFromResolvers(r, c) {
            for (let _ = 0; _ < this._resolvers.length; _++) {
              const T = this._resolvers[_](c, r);
              if (T)
                return Mt(T) ? new j(T.url, null, T.options) : new j(T, null);
            }
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.LFG(xt.eN, 8),
              a.LFG(ht.H7),
              a.LFG(s.K0, 8),
              a.LFG(a.qLn),
            );
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      function fe(g) {
        return g.cloneNode(!0);
      }
      function et(g, F) {
        return g + ':' + F;
      }
      function Mt(g) {
        return !(!g.url || !g.options);
      }
      const Rt = (0, ut.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        ),
        Cn = new a.OlP('MAT_ICON_DEFAULT_OPTIONS'),
        Oe = new a.OlP('mat-icon-location', {
          providedIn: 'root',
          factory: function bt() {
            const g = (0, a.f3M)(s.K0),
              F = g ? g.location : null;
            return { getPathname: () => (F ? F.pathname + F.search : '') };
          },
        }),
        Je = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        wt = Je.map(g => `[${g}]`).join(', '),
        Te = /^url\(['"]?#(.*?)['"]?\)$/;
      let R = (() => {
          class g extends Rt {
            get inline() {
              return this._inline;
            }
            set inline(r) {
              this._inline = (0, nt.Ig)(r);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(r) {
              r !== this._svgIcon &&
                (r
                  ? this._updateSvgIcon(r)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = r));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontSet &&
                ((this._fontSet = c), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontIcon &&
                ((this._fontIcon = c), this._updateFontIconClasses());
            }
            constructor(r, c, _, T, _e, dt) {
              super(r),
                (this._iconRegistry = c),
                (this._location = T),
                (this._errorHandler = _e),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = an.w0.EMPTY),
                dt &&
                  (dt.color && (this.color = this.defaultColor = dt.color),
                  dt.fontSet && (this.fontSet = dt.fontSet)),
                _ || r.nativeElement.setAttribute('aria-hidden', 'true');
            }
            _splitIconName(r) {
              if (!r) return ['', ''];
              const c = r.split(':');
              switch (c.length) {
                case 1:
                  return ['', c[0]];
                case 2:
                  return c;
                default:
                  throw Error(`Invalid icon name: "${r}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const r = this._elementsWithExternalReferences;
              if (r && r.size) {
                const c = this._location.getPathname();
                c !== this._previousPath &&
                  ((this._previousPath = c), this._prependPathToReferences(c));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(r) {
              this._clearSvgElement();
              const c = this._location.getPathname();
              (this._previousPath = c),
                this._cacheChildrenWithExternalReferences(r),
                this._prependPathToReferences(c),
                this._elementRef.nativeElement.appendChild(r);
            }
            _clearSvgElement() {
              const r = this._elementRef.nativeElement;
              let c = r.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                c--;

              ) {
                const _ = r.childNodes[c];
                (1 !== _.nodeType || 'svg' === _.nodeName.toLowerCase()) &&
                  _.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const r = this._elementRef.nativeElement,
                c = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter(_ => _.length > 0);
              this._previousFontSetClass.forEach(_ => r.classList.remove(_)),
                c.forEach(_ => r.classList.add(_)),
                (this._previousFontSetClass = c),
                this.fontIcon !== this._previousFontIconClass &&
                  !c.includes('mat-ligature-font') &&
                  (this._previousFontIconClass &&
                    r.classList.remove(this._previousFontIconClass),
                  this.fontIcon && r.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(r) {
              return 'string' == typeof r ? r.trim().split(' ')[0] : r;
            }
            _prependPathToReferences(r) {
              const c = this._elementsWithExternalReferences;
              c &&
                c.forEach((_, T) => {
                  _.forEach(_e => {
                    T.setAttribute(_e.name, `url('${r}#${_e.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(r) {
              const c = r.querySelectorAll(wt),
                _ = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let T = 0; T < c.length; T++)
                Je.forEach(_e => {
                  const dt = c[T],
                    rn = dt.getAttribute(_e),
                    On = rn ? rn.match(Te) : null;
                  if (On) {
                    let jn = _.get(dt);
                    jn || ((jn = []), _.set(dt, jn)),
                      jn.push({ name: _e, value: On[1] });
                  }
                });
            }
            _updateSvgIcon(r) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                r)
              ) {
                const [c, _] = this._splitIconName(r);
                c && (this._svgNamespace = c),
                  _ && (this._svgName = _),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(_, c)
                    .pipe((0, Jt.q)(1))
                    .subscribe(
                      T => this._setSvgElement(T),
                      T => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${c}:${_}! ${T.message}`,
                          ),
                        );
                      },
                    ));
              }
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(ke),
                a.$8M('aria-hidden'),
                a.Y36(Oe),
                a.Y36(a.qLn),
                a.Y36(Cn, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 8,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.uIk(
                    'data-mat-icon-type',
                    c._usingFontIcon() ? 'font' : 'svg',
                  )('data-mat-icon-name', c._svgName || c.fontIcon)(
                    'data-mat-icon-namespace',
                    c._svgNamespace || c.fontSet,
                  )('fontIcon', c._usingFontIcon() ? c.fontIcon : null),
                  a.ekj('mat-icon-inline', c.inline)(
                    'mat-icon-no-color',
                    'primary' !== c.color &&
                      'accent' !== c.color &&
                      'warn' !== c.color,
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [a.qOj],
              ngContentSelectors: hn,
              decls: 1,
              vars: 0,
              template: function (r, c) {
                1 & r && (a.F$t(), a.Hsn(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        b = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({ imports: [ut.BQ, ut.BQ] })),
            g
          );
        })();
      var E = C(2687),
        V = C(9521),
        Q = C(7579),
        We = C(6451),
        St = C(3101),
        Gt = C(8675),
        zt = C(3900),
        Bt = C(2722),
        on = C(4986),
        Re = C(7272),
        Ce = C(8502),
        K = C(9718),
        we = C(5577),
        ct = C(8421);
      function Ft(g, F) {
        return F
          ? r => (0, Re.z)(F.pipe((0, Jt.q)(1), (0, Ce.l)()), r.pipe(Ft(g)))
          : (0, we.z)((r, c) =>
              (0, ct.Xf)(g(r, c)).pipe((0, Jt.q)(1), (0, K.h)(r)),
            );
      }
      var Zt = C(5963);
      function _n(g, F = on.z) {
        const r = (0, Zt.H)(g, F);
        return Ft(() => r);
      }
      var In = C(4080),
        Ut = C(7340),
        qn = C(445),
        Pn = C(8184),
        ir = C(3353),
        Wn = C(44);
      const Hi = ['mat-menu-item', ''];
      function Si(g, F) {
        1 & g && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'polygon', 4), a.qZA());
      }
      const Tn = [[['mat-icon'], ['', 'matMenuItemIcon', '']], '*'],
        ri = ['mat-icon, [matMenuItemIcon]', '*'];
      function ti(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'div', 0),
            a.NdJ('keydown', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._handleKeydown(_));
            })('click', function () {
              a.CHM(r);
              const _ = a.oxw();
              return a.KtG(_.closed.emit('click'));
            })('@transformMenu.start', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._onAnimationStart(_));
            })('@transformMenu.done', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._onAnimationDone(_));
            }),
            a.TgZ(1, 'div', 1),
            a.Hsn(2),
            a.qZA()();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('id', r.panelId)('ngClass', r._classList)(
            '@transformMenu',
            r._panelAnimationState,
          ),
            a.uIk('aria-label', r.ariaLabel || null)(
              'aria-labelledby',
              r.ariaLabelledby || null,
            )('aria-describedby', r.ariaDescribedby || null);
        }
      }
      const ai = ['*'],
        hi = new a.OlP('MAT_MENU_PANEL'),
        Xr = (0, ut.Kr)((0, ut.Id)(class {}));
      let xi = (() => {
        class g extends Xr {
          constructor(r, c, _, T, _e) {
            super(),
              (this._elementRef = r),
              (this._document = c),
              (this._focusMonitor = _),
              (this._parentMenu = T),
              (this._changeDetectorRef = _e),
              (this.role = 'menuitem'),
              (this._hovered = new Q.x()),
              (this._focused = new Q.x()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              T?.addItem?.(this);
          }
          focus(r, c) {
            this._focusMonitor && r
              ? this._focusMonitor.focusVia(this._getHostElement(), r, c)
              : this._getHostElement().focus(c),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(r) {
            this.disabled && (r.preventDefault(), r.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const r = this._elementRef.nativeElement.cloneNode(!0),
              c = r.querySelectorAll('mat-icon, .material-icons');
            for (let _ = 0; _ < c.length; _++) c[_].remove();
            return r.textContent?.trim() || '';
          }
          _setHighlighted(r) {
            (this._highlighted = r), this._changeDetectorRef?.markForCheck();
          }
          _setTriggersSubmenu(r) {
            (this._triggersSubmenu = r),
              this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(s.K0),
              a.Y36(E.tE),
              a.Y36(hi, 8),
              a.Y36(a.sBO),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [
              1,
              'mat-mdc-menu-item',
              'mat-mdc-focus-indicator',
              'mdc-list-item',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              1 & r &&
                a.NdJ('click', function (T) {
                  return c._checkDisabled(T);
                })('mouseenter', function () {
                  return c._handleMouseEnter();
                }),
                2 & r &&
                  (a.uIk('role', c.role)('tabindex', c._getTabIndex())(
                    'aria-disabled',
                    c.disabled,
                  )('disabled', c.disabled || null),
                  a.ekj('mat-mdc-menu-item-highlighted', c._highlighted)(
                    'mat-mdc-menu-item-submenu-trigger',
                    c._triggersSubmenu,
                  ));
            },
            inputs: {
              disabled: 'disabled',
              disableRipple: 'disableRipple',
              role: 'role',
            },
            exportAs: ['matMenuItem'],
            features: [a.qOj],
            attrs: Hi,
            ngContentSelectors: ri,
            decls: 5,
            vars: 3,
            consts: [
              [1, 'mdc-list-item__primary-text'],
              [
                'matRipple',
                '',
                1,
                'mat-mdc-menu-ripple',
                3,
                'matRippleDisabled',
                'matRippleTrigger',
              ],
              [
                'class',
                'mat-mdc-menu-submenu-icon',
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                4,
                'ngIf',
              ],
              [
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                1,
                'mat-mdc-menu-submenu-icon',
              ],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.F$t(Tn),
                a.Hsn(0),
                a.TgZ(1, 'span', 0),
                a.Hsn(2, 1),
                a.qZA(),
                a._UZ(3, 'div', 1),
                a.YNc(4, Si, 2, 0, 'svg', 2)),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('matRippleDisabled', c.disableRipple || c.disabled)(
                    'matRippleTrigger',
                    c._getHostElement(),
                  ),
                  a.xp6(1),
                  a.Q6J('ngIf', c._triggersSubmenu));
            },
            dependencies: [s.O5, ut.wG],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const dn = new a.OlP('MatMenuContent'),
        Xn = {
          transformMenu: (0, Ut.X$)('transformMenu', [
            (0, Ut.SB)(
              'void',
              (0, Ut.oB)({ opacity: 0, transform: 'scale(0.8)' }),
            ),
            (0, Ut.eR)(
              'void => enter',
              (0, Ut.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1)' }),
              ),
            ),
            (0, Ut.eR)(
              '* => void',
              (0, Ut.jt)('100ms 25ms linear', (0, Ut.oB)({ opacity: 0 })),
            ),
          ]),
          fadeInItems: (0, Ut.X$)('fadeInItems', [
            (0, Ut.SB)('showing', (0, Ut.oB)({ opacity: 1 })),
            (0, Ut.eR)('void => *', [
              (0, Ut.oB)({ opacity: 0 }),
              (0, Ut.jt)('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        };
      let An = 0;
      const gi = new a.OlP('mat-menu-default-options', {
        providedIn: 'root',
        factory: function _i() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let fn = (() => {
          class g {
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(r) {
              (this._xPosition = r), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(r) {
              (this._yPosition = r), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(r) {
              this._overlapTrigger = (0, nt.Ig)(r);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(r) {
              this._hasBackdrop = (0, nt.Ig)(r);
            }
            set panelClass(r) {
              const c = this._previousPanelClass;
              c &&
                c.length &&
                c.split(' ').forEach(_ => {
                  this._classList[_] = !1;
                }),
                (this._previousPanelClass = r),
                r &&
                  r.length &&
                  (r.split(' ').forEach(_ => {
                    this._classList[_] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(r) {
              this.panelClass = r;
            }
            constructor(r, c, _, T) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._defaultOptions = _),
                (this._changeDetectorRef = T),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new a.n_E()),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new Q.x()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new a.vpe()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + An++);
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new E.Em(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit('tab'),
                ),
                this._directDescendantItems.changes
                  .pipe(
                    (0, Gt.O)(this._directDescendantItems),
                    (0, zt.w)(r => (0, We.T)(...r.map(c => c._focused))),
                  )
                  .subscribe(r => this._keyManager.updateActiveItem(r)),
                this._directDescendantItems.changes.subscribe(r => {
                  const c = this._keyManager;
                  if (
                    'enter' === this._panelAnimationState &&
                    c.activeItem?._hasFocus()
                  ) {
                    const _ = r.toArray(),
                      T = Math.max(
                        0,
                        Math.min(_.length - 1, c.activeItemIndex || 0),
                      );
                    _[T] && !_[T].disabled
                      ? c.setActiveItem(T)
                      : c.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._directDescendantItems.destroy(),
                this.closed.complete(),
                this._firstItemFocusSubscription?.unsubscribe();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                (0, Gt.O)(this._directDescendantItems),
                (0, zt.w)(c => (0, We.T)(...c.map(_ => _._hovered))),
              );
            }
            addItem(r) {}
            removeItem(r) {}
            _handleKeydown(r) {
              const c = r.keyCode,
                _ = this._keyManager;
              switch (c) {
                case V.hY:
                  (0, V.Vb)(r) ||
                    (r.preventDefault(), this.closed.emit('keydown'));
                  break;
                case V.oh:
                  this.parentMenu &&
                    'ltr' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                case V.SV:
                  this.parentMenu &&
                    'rtl' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                default:
                  return (
                    (c === V.LH || c === V.JH) && _.setFocusOrigin('keyboard'),
                    void _.onKeydown(r)
                  );
              }
              r.stopPropagation();
            }
            focusFirstItem(r = 'program') {
              this._firstItemFocusSubscription?.unsubscribe(),
                (this._firstItemFocusSubscription = this._ngZone.onStable
                  .pipe((0, Jt.q)(1))
                  .subscribe(() => {
                    let c = null;
                    if (
                      (this._directDescendantItems.length &&
                        (c = this._directDescendantItems.first
                          ._getHostElement()
                          .closest('[role="menu"]')),
                      !c || !c.contains(document.activeElement))
                    ) {
                      const _ = this._keyManager;
                      _.setFocusOrigin(r).setFirstItemActive(),
                        !_.activeItem && c && c.focus();
                    }
                  }));
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(r) {
              const c = Math.min(this._baseElevation + r, 24),
                _ = `${this._elevationPrefix}${c}`,
                T = Object.keys(this._classList).find(_e =>
                  _e.startsWith(this._elevationPrefix),
                );
              (!T || T === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[_] = !0),
                (this._previousElevation = _));
            }
            setPositionClasses(r = this.xPosition, c = this.yPosition) {
              const _ = this._classList;
              (_['mat-menu-before'] = 'before' === r),
                (_['mat-menu-after'] = 'after' === r),
                (_['mat-menu-above'] = 'above' === c),
                (_['mat-menu-below'] = 'below' === c),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(r) {
              this._animationDone.next(r), (this._isAnimating = !1);
            }
            _onAnimationStart(r) {
              (this._isAnimating = !0),
                'enter' === r.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (r.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes
                .pipe((0, Gt.O)(this._allItems))
                .subscribe(r => {
                  this._directDescendantItems.reset(
                    r.filter(c => c._parentMenu === this),
                  ),
                    this._directDescendantItems.notifyOnChanges();
                });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(gi),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              contentQueries: function (r, c, _) {
                if (
                  (1 & r && (a.Suo(_, dn, 5), a.Suo(_, xi, 5), a.Suo(_, xi, 4)),
                  2 & r)
                ) {
                  let T;
                  a.iGM((T = a.CRH())) && (c.lazyContent = T.first),
                    a.iGM((T = a.CRH())) && (c._allItems = T),
                    a.iGM((T = a.CRH())) && (c.items = T);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(a.Rgc, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.templateRef = _.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            g
          );
        })(),
        qi = (() => {
          class g extends fn {
            constructor(r, c, _, T) {
              super(r, c, _, T),
                (this._elevationPrefix = 'mat-elevation-z'),
                (this._baseElevation = 8);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(gi),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (r, c) {
                2 & r &&
                  a.uIk('aria-label', null)('aria-labelledby', null)(
                    'aria-describedby',
                    null,
                  );
              },
              exportAs: ['matMenu'],
              features: [a._Bn([{ provide: hi, useExisting: g }]), a.qOj],
              ngContentSelectors: ai,
              decls: 1,
              vars: 0,
              consts: [
                [
                  'tabindex',
                  '-1',
                  'role',
                  'menu',
                  1,
                  'mat-mdc-menu-panel',
                  'mdc-menu-surface',
                  'mdc-menu-surface--open',
                  'mat-mdc-elevation-specific',
                  3,
                  'id',
                  'ngClass',
                  'keydown',
                  'click',
                ],
                [1, 'mat-mdc-menu-content', 'mdc-list'],
              ],
              template: function (r, c) {
                1 & r && (a.F$t(), a.YNc(0, ti, 3, 6, 'ng-template'));
              },
              dependencies: [s.mk],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;position:relative}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item.mdc-list-item{align-items:center}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item .mdc-list-item__primary-text{white-space:normal}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [Xn.transformMenu, Xn.fadeInItems] },
              changeDetection: 0,
            })),
            g
          );
        })();
      const Ui = new a.OlP('mat-menu-scroll-strategy'),
        Ii = {
          provide: Ui,
          deps: [Pn.aV],
          useFactory: function _r(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        ni = (0, ir.i$)({ passive: !0 });
      let Pi = (() => {
          class g {
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(r) {
              this.menu = r;
            }
            get menu() {
              return this._menu;
            }
            set menu(r) {
              r !== this._menu &&
                ((this._menu = r),
                this._menuCloseSubscription.unsubscribe(),
                r &&
                  (this._menuCloseSubscription = r.close.subscribe(c => {
                    this._destroyMenu(c),
                      ('click' === c || 'tab' === c) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(c);
                  })),
                this._menuItemInstance?._setTriggersSubmenu(
                  this.triggersSubmenu(),
                ));
            }
            constructor(r, c, _, T, _e, dt, rn, On, jn) {
              (this._overlay = r),
                (this._element = c),
                (this._viewContainerRef = _),
                (this._menuItemInstance = dt),
                (this._dir = rn),
                (this._focusMonitor = On),
                (this._ngZone = jn),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = an.w0.EMPTY),
                (this._hoverSubscription = an.w0.EMPTY),
                (this._menuCloseSubscription = an.w0.EMPTY),
                (this._changeDetectorRef = (0, a.f3M)(a.sBO)),
                (this._handleTouchStart = Ri => {
                  (0, E.yG)(Ri) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new a.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new a.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = T),
                (this._parentMaterialMenu = _e instanceof fn ? _e : void 0),
                c.nativeElement.addEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  ni,
                );
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  ni,
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !!(
                this._menuItemInstance &&
                this._parentMaterialMenu &&
                this.menu
              );
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const r = this.menu;
              if (this._menuOpen || !r) return;
              const c = this._createOverlay(r),
                _ = c.getConfig(),
                T = _.positionStrategy;
              this._setPosition(r, T),
                (_.hasBackdrop =
                  null == r.hasBackdrop
                    ? !this.triggersSubmenu()
                    : r.hasBackdrop),
                c.attach(this._getPortal(r)),
                r.lazyContent && r.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(r),
                r instanceof fn &&
                  (r._startAnimation(),
                  r._directDescendantItems.changes
                    .pipe((0, Bt.R)(r.close))
                    .subscribe(() => {
                      T.withLockedPosition(!1).reapplyLastPosition(),
                        T.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(r, c) {
              this._focusMonitor && r
                ? this._focusMonitor.focusVia(this._element, r, c)
                : this._element.nativeElement.focus(c);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(r) {
              if (!this._overlayRef || !this.menuOpen) return;
              const c = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === r ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                c instanceof fn
                  ? (c._resetAnimation(),
                    c.lazyContent
                      ? c._animationDone
                          .pipe(
                            (0, At.h)(_ => 'void' === _.toState),
                            (0, Jt.q)(1),
                            (0, Bt.R)(c.lazyContent._attached),
                          )
                          .subscribe({
                            next: () => c.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), c?.lazyContent?.detach());
            }
            _initMenu(r) {
              (r.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (r.direction = this.dir),
                this._setMenuElevation(r),
                r.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(r) {
              if (r.setElevation) {
                let c = 0,
                  _ = r.parentMenu;
                for (; _; ) c++, (_ = _.parentMenu);
                r.setElevation(c);
              }
            }
            _setIsMenuOpen(r) {
              r !== this._menuOpen &&
                ((this._menuOpen = r),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(r),
                this._changeDetectorRef.markForCheck());
            }
            _createOverlay(r) {
              if (!this._overlayRef) {
                const c = this._getOverlayConfig(r);
                this._subscribeToPositions(r, c.positionStrategy),
                  (this._overlayRef = this._overlay.create(c)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(r) {
              return new Pn.X_({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    '.mat-menu-panel, .mat-mdc-menu-panel',
                  ),
                backdropClass:
                  r.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: r.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(r, c) {
              r.setPositionClasses &&
                c.positionChanges.subscribe(_ => {
                  const T =
                      'start' === _.connectionPair.overlayX
                        ? 'after'
                        : 'before',
                    _e =
                      'top' === _.connectionPair.overlayY ? 'below' : 'above';
                  this._ngZone
                    ? this._ngZone.run(() => r.setPositionClasses(T, _e))
                    : r.setPositionClasses(T, _e);
                });
            }
            _setPosition(r, c) {
              let [_, T] =
                  'before' === r.xPosition
                    ? ['end', 'start']
                    : ['start', 'end'],
                [_e, dt] =
                  'above' === r.yPosition
                    ? ['bottom', 'top']
                    : ['top', 'bottom'],
                [rn, On] = [_e, dt],
                [jn, Ri] = [_, T],
                Oo = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((Ri = _ = 'before' === r.xPosition ? 'start' : 'end'),
                  (T = jn = 'end' === _ ? 'start' : 'end'),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const Ks = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = Ks
                      ? Ks._getHostElement().offsetTop
                      : 0;
                  }
                  Oo =
                    'bottom' === _e
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                r.overlapTrigger ||
                  ((rn = 'top' === _e ? 'bottom' : 'top'),
                  (On = 'top' === dt ? 'bottom' : 'top'));
              c.withPositions([
                {
                  originX: _,
                  originY: rn,
                  overlayX: jn,
                  overlayY: _e,
                  offsetY: Oo,
                },
                {
                  originX: T,
                  originY: rn,
                  overlayX: Ri,
                  overlayY: _e,
                  offsetY: Oo,
                },
                {
                  originX: _,
                  originY: On,
                  overlayX: jn,
                  overlayY: dt,
                  offsetY: -Oo,
                },
                {
                  originX: T,
                  originY: On,
                  overlayX: Ri,
                  overlayY: dt,
                  offsetY: -Oo,
                },
              ]);
            }
            _menuClosingActions() {
              const r = this._overlayRef.backdropClick(),
                c = this._overlayRef.detachments(),
                _ = this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : (0, Lt.of)(),
                T = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      (0, At.h)(_e => _e !== this._menuItemInstance),
                      (0, At.h)(() => this._menuOpen),
                    )
                  : (0, Lt.of)();
              return (0, We.T)(r, _, T, c);
            }
            _handleMousedown(r) {
              (0, E.X6)(r) ||
                ((this._openedBy = 0 === r.button ? 'mouse' : void 0),
                this.triggersSubmenu() && r.preventDefault());
            }
            _handleKeydown(r) {
              const c = r.keyCode;
              (c === V.K5 || c === V.L_) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((c === V.SV && 'ltr' === this.dir) ||
                    (c === V.oh && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(r) {
              this.triggersSubmenu()
                ? (r.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    (0, At.h)(r => r === this._menuItemInstance && !r.disabled),
                    _n(0, St.E),
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof fn && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              (0, Jt.q)(1),
                              _n(0, St.E),
                              (0, Bt.R)(this._parentMaterialMenu._hovered()),
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(r) {
              return (
                (!this._portal || this._portal.templateRef !== r.templateRef) &&
                  (this._portal = new In.UE(
                    r.templateRef,
                    this._viewContainerRef,
                  )),
                this._portal
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(Pn.aV),
                a.Y36(a.SBq),
                a.Y36(a.s_b),
                a.Y36(Ui),
                a.Y36(hi, 8),
                a.Y36(xi, 10),
                a.Y36(qn.Is, 8),
                a.Y36(E.tE),
                a.Y36(a.R0b),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (T) {
                    return c._handleClick(T);
                  })('mousedown', function (T) {
                    return c._handleMousedown(T);
                  })('keydown', function (T) {
                    return c._handleKeydown(T);
                  }),
                  2 & r &&
                    a.uIk('aria-haspopup', c.menu ? 'menu' : null)(
                      'aria-expanded',
                      c.menuOpen,
                    )('aria-controls', c.menuOpen ? c.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  'mat-menu-trigger-for',
                  '_deprecatedMatMenuTriggerFor',
                ],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            g
          );
        })(),
        ji = (() => {
          class g extends Pi {}
          return (
            (g.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-mdc-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [a.qOj],
            })),
            g
          );
        })(),
        fr = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [Ii],
              imports: [s.ez, ut.si, ut.BQ, Pn.U8, Wn.ZD, ut.BQ],
            })),
            g
          );
        })();
      var Bn = C(4006),
        Hn = C(9770);
      function Ni(g, F) {}
      class Li {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let rr = (() => {
        class g extends In.en {
          constructor(r, c, _, T, _e, dt, rn, On) {
            super(),
              (this._elementRef = r),
              (this._focusTrapFactory = c),
              (this._config = T),
              (this._interactivityChecker = _e),
              (this._ngZone = dt),
              (this._overlayRef = rn),
              (this._focusMonitor = On),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = jn => {
                this._portalOutlet.hasAttached();
                const Ri = this._portalOutlet.attachDomPortal(jn);
                return this._contentAttached(), Ri;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = _);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachComponentPortal(r);
            return this._contentAttached(), c;
          }
          attachTemplatePortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachTemplatePortal(r);
            return this._contentAttached(), c;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(r, c) {
            this._interactivityChecker.isFocusable(r) ||
              ((r.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const _ = () => {
                  r.removeEventListener('blur', _),
                    r.removeEventListener('mousedown', _),
                    r.removeAttribute('tabindex');
                };
                r.addEventListener('blur', _),
                  r.addEventListener('mousedown', _);
              })),
              r.focus(c);
          }
          _focusByCssSelector(r, c) {
            let _ = this._elementRef.nativeElement.querySelector(r);
            _ && this._forceFocus(_, c);
          }
          _trapFocus() {
            const r = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case 'dialog':
                this._containsFocus() || r.focus();
                break;
              case !0:
              case 'first-tabbable':
                this._focusTrap.focusInitialElementWhenReady().then(c => {
                  c || this._focusDialogContainer();
                });
                break;
              case 'first-heading':
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]',
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const r = this._config.restoreFocus;
            let c = null;
            if (
              ('string' == typeof r
                ? (c = this._document.querySelector(r))
                : 'boolean' == typeof r
                ? (c = r ? this._elementFocusedBeforeDialogWasOpened : null)
                : r && (c = r),
              this._config.restoreFocus && c && 'function' == typeof c.focus)
            ) {
              const _ = (0, ir.ht)(),
                T = this._elementRef.nativeElement;
              (!_ || _ === this._document.body || _ === T || T.contains(_)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(c, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : c.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const r = this._elementRef.nativeElement,
              c = (0, ir.ht)();
            return r === c || r.contains(c);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = (0, ir.ht)());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(E.qV),
              a.Y36(s.K0, 8),
              a.Y36(Li),
              a.Y36(E.ic),
              a.Y36(a.R0b),
              a.Y36(Pn.Iu),
              a.Y36(E.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['cdk-dialog-container']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(In.Pl, 7), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._portalOutlet = _.first);
              }
            },
            hostAttrs: ['tabindex', '-1', 1, 'cdk-dialog-container'],
            hostVars: 6,
            hostBindings: function (r, c) {
              2 & r &&
                a.uIk('id', c._config.id || null)('role', c._config.role)(
                  'aria-modal',
                  c._config.ariaModal,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                );
            },
            features: [a.qOj],
            decls: 1,
            vars: 0,
            consts: [['cdkPortalOutlet', '']],
            template: function (r, c) {
              1 & r && a.YNc(0, Ni, 0, 0, 'ng-template', 0);
            },
            dependencies: [In.Pl],
            styles: [
              '.cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class Ki {
        constructor(F, r) {
          (this.overlayRef = F),
            (this.config = r),
            (this.closed = new Q.x()),
            (this.disableClose = r.disableClose),
            (this.backdropClick = F.backdropClick()),
            (this.keydownEvents = F.keydownEvents()),
            (this.outsidePointerEvents = F.outsidePointerEvents()),
            (this.id = r.id),
            this.keydownEvents.subscribe(c => {
              c.keyCode === V.hY &&
                !this.disableClose &&
                !(0, V.Vb)(c) &&
                (c.preventDefault(),
                this.close(void 0, { focusOrigin: 'keyboard' }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: 'mouse' });
            }),
            (this._detachSubscription = F.detachments().subscribe(() => {
              !1 !== r.closeOnOverlayDetachments && this.close();
            }));
        }
        close(F, r) {
          if (this.containerInstance) {
            const c = this.closed;
            (this.containerInstance._closeInteractionType =
              r?.focusOrigin || 'program'),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              c.next(F),
              c.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(F = '', r = '') {
          return this.overlayRef.updateSize({ width: F, height: r }), this;
        }
        addPanelClass(F) {
          return this.overlayRef.addPanelClass(F), this;
        }
        removePanelClass(F) {
          return this.overlayRef.removePanelClass(F), this;
        }
      }
      const zi = new a.OlP('DialogScrollStrategy'),
        q = new a.OlP('DialogData'),
        Ke = new a.OlP('DefaultDialogConfig'),
        Ze = {
          provide: zi,
          deps: [Pn.aV],
          useFactory: function Ie(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let kt = 0,
        It = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(r, c, _, T, _e, dt) {
              (this._overlay = r),
                (this._injector = c),
                (this._defaultOptions = _),
                (this._parentDialog = T),
                (this._overlayContainer = _e),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Q.x()),
                (this._afterOpenedAtThisLevel = new Q.x()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = (0, Hn.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Gt.O)(void 0)),
                )),
                (this._scrollStrategy = dt);
            }
            open(r, c) {
              ((c = { ...(this._defaultOptions || new Li()), ...c }).id =
                c.id || 'cdk-dialog-' + kt++),
                c.id && this.getDialogById(c.id);
              const T = this._getOverlayConfig(c),
                _e = this._overlay.create(T),
                dt = new Ki(_e, c),
                rn = this._attachContainer(_e, dt, c);
              return (
                (dt.containerInstance = rn),
                this._attachDialogContent(r, dt, rn, c),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(dt),
                dt.closed.subscribe(() => this._removeOpenDialog(dt, !0)),
                this.afterOpened.next(dt),
                dt
              );
            }
            closeAll() {
              ln(this.openDialogs, r => r.close());
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              ln(this._openDialogsAtThisLevel, r => {
                !1 === r.config.closeOnDestroy && this._removeOpenDialog(r, !1);
              }),
                ln(this._openDialogsAtThisLevel, r => r.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(r) {
              const c = new Pn.X_({
                positionStrategy:
                  r.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: r.scrollStrategy || this._scrollStrategy(),
                panelClass: r.panelClass,
                hasBackdrop: r.hasBackdrop,
                direction: r.direction,
                minWidth: r.minWidth,
                minHeight: r.minHeight,
                maxWidth: r.maxWidth,
                maxHeight: r.maxHeight,
                width: r.width,
                height: r.height,
                disposeOnNavigation: r.closeOnNavigation,
              });
              return r.backdropClass && (c.backdropClass = r.backdropClass), c;
            }
            _attachContainer(r, c, _) {
              const T = _.injector || _.viewContainerRef?.injector,
                _e = [
                  { provide: Li, useValue: _ },
                  { provide: Ki, useValue: c },
                  { provide: Pn.Iu, useValue: r },
                ];
              let dt;
              _.container
                ? 'function' == typeof _.container
                  ? (dt = _.container)
                  : ((dt = _.container.type),
                    _e.push(..._.container.providers(_)))
                : (dt = rr);
              const rn = new In.C5(
                dt,
                _.viewContainerRef,
                a.zs3.create({ parent: T || this._injector, providers: _e }),
                _.componentFactoryResolver,
              );
              return r.attach(rn).instance;
            }
            _attachDialogContent(r, c, _, T) {
              if (r instanceof a.Rgc) {
                const _e = this._createInjector(T, c, _, void 0);
                let dt = { $implicit: T.data, dialogRef: c };
                T.templateContext &&
                  (dt = {
                    ...dt,
                    ...('function' == typeof T.templateContext
                      ? T.templateContext()
                      : T.templateContext),
                  }),
                  _.attachTemplatePortal(new In.UE(r, null, dt, _e));
              } else {
                const _e = this._createInjector(T, c, _, this._injector),
                  dt = _.attachComponentPortal(
                    new In.C5(
                      r,
                      T.viewContainerRef,
                      _e,
                      T.componentFactoryResolver,
                    ),
                  );
                c.componentInstance = dt.instance;
              }
            }
            _createInjector(r, c, _, T) {
              const _e = r.injector || r.viewContainerRef?.injector,
                dt = [
                  { provide: q, useValue: r.data },
                  { provide: Ki, useValue: c },
                ];
              return (
                r.providers &&
                  ('function' == typeof r.providers
                    ? dt.push(...r.providers(c, r, _))
                    : dt.push(...r.providers)),
                r.direction &&
                  (!_e || !_e.get(qn.Is, null, { optional: !0 })) &&
                  dt.push({
                    provide: qn.Is,
                    useValue: { value: r.direction, change: (0, Lt.of)() },
                  }),
                a.zs3.create({ parent: _e || T, providers: dt })
              );
            }
            _removeOpenDialog(r, c) {
              const _ = this.openDialogs.indexOf(r);
              _ > -1 &&
                (this.openDialogs.splice(_, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((T, _e) => {
                    T
                      ? _e.setAttribute('aria-hidden', T)
                      : _e.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  c && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const r = this._overlayContainer.getContainerElement();
              if (r.parentElement) {
                const c = r.parentElement.children;
                for (let _ = c.length - 1; _ > -1; _--) {
                  const T = c[_];
                  T !== r &&
                    'SCRIPT' !== T.nodeName &&
                    'STYLE' !== T.nodeName &&
                    !T.hasAttribute('aria-live') &&
                    (this._ariaHiddenElements.set(
                      T,
                      T.getAttribute('aria-hidden'),
                    ),
                    T.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.LFG(Pn.aV),
                a.LFG(a.zs3),
                a.LFG(Ke, 8),
                a.LFG(g, 12),
                a.LFG(Pn.Xj),
                a.LFG(zi),
              );
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      function ln(g, F) {
        let r = g.length;
        for (; r--; ) F(g[r]);
      }
      let vn = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({
            providers: [It, Ze],
            imports: [Pn.U8, In.eL, E.rt, In.eL],
          })),
          g
        );
      })();
      function Nn(g, F) {}
      class Kn {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const Rn = 'mdc-dialog--open',
        vi = 'mdc-dialog--opening',
        Hr = 'mdc-dialog--closing';
      let fo = (() => {
        class g extends rr {
          constructor(r, c, _, T, _e, dt, rn, On) {
            super(r, c, _, T, _e, dt, rn, On),
              (this._animationStateChanged = new a.vpe());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(r) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: 'opened',
                totalTime: r,
              });
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(E.qV),
              a.Y36(s.K0, 8),
              a.Y36(Kn),
              a.Y36(E.ic),
              a.Y36(a.R0b),
              a.Y36(Pn.Iu),
              a.Y36(E.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['ng-component']],
            features: [a.qOj],
            decls: 0,
            vars: 0,
            template: function (r, c) {},
            encapsulation: 2,
          })),
          g
        );
      })();
      const Jr = '--mat-dialog-transition-duration';
      function eo(g) {
        return null == g
          ? null
          : 'number' == typeof g
          ? g
          : g.endsWith('ms')
          ? (0, nt.su)(g.substring(0, g.length - 2))
          : g.endsWith('s')
          ? 1e3 * (0, nt.su)(g.substring(0, g.length - 1))
          : '0' === g
          ? 0
          : null;
      }
      let pr = (() => {
        class g extends fo {
          constructor(r, c, _, T, _e, dt, rn, On, jn) {
            super(r, c, _, T, _e, dt, rn, jn),
              (this._animationMode = On),
              (this._animationsEnabled =
                'NoopAnimations' !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._openAnimationDuration = this._animationsEnabled
                ? eo(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._closeAnimationDuration = this._animationsEnabled
                ? eo(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._openAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: 'closed',
                    totalTime: this._closeAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: 'opening',
              totalTime: this._openAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Jr,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(vi),
                  this._hostElement.classList.add(Rn),
                  this._waitForAnimationToComplete(
                    this._openAnimationDuration,
                    this._finishDialogOpen,
                  ))
                : (this._hostElement.classList.add(Rn),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: 'closing',
              totalTime: this._closeAnimationDuration,
            }),
              this._hostElement.classList.remove(Rn),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Jr,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(Hr),
                  this._waitForAnimationToComplete(
                    this._closeAnimationDuration,
                    this._finishDialogClose,
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(vi),
              this._hostElement.classList.remove(Hr);
          }
          _waitForAnimationToComplete(r, c) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(c, r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.SBq),
              a.Y36(E.qV),
              a.Y36(s.K0, 8),
              a.Y36(Kn),
              a.Y36(E.ic),
              a.Y36(a.R0b),
              a.Y36(Pn.Iu),
              a.Y36(a.QbO, 8),
              a.Y36(E.tE),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-dialog-container']],
            hostAttrs: [
              'tabindex',
              '-1',
              1,
              'mat-mdc-dialog-container',
              'mdc-dialog',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              2 & r &&
                (a.Ikx('id', c._config.id),
                a.uIk('aria-modal', c._config.ariaModal)(
                  'role',
                  c._config.role,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                ),
                a.ekj('_mat-animation-noopable', !c._animationsEnabled));
            },
            features: [a.qOj],
            decls: 3,
            vars: 0,
            consts: [
              [1, 'mdc-dialog__container'],
              [1, 'mat-mdc-dialog-surface', 'mdc-dialog__surface'],
              ['cdkPortalOutlet', ''],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1),
                a.YNc(2, Nn, 0, 0, 'ng-template', 2),
                a.qZA()());
            },
            dependencies: [In.Pl],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          })),
          g
        );
      })();
      class to {
        constructor(F, r, c) {
          (this._ref = F),
            (this._containerInstance = c),
            (this._afterOpened = new Q.x()),
            (this._beforeClosed = new Q.x()),
            (this._state = 0),
            (this.disableClose = r.disableClose),
            (this.id = F.id),
            c._animationStateChanged
              .pipe(
                (0, At.h)(_ => 'opened' === _.state),
                (0, Jt.q)(1),
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            c._animationStateChanged
              .pipe(
                (0, At.h)(_ => 'closed' === _.state),
                (0, Jt.q)(1),
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            F.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            (0, We.T)(
              this.backdropClick(),
              this.keydownEvents().pipe(
                (0, At.h)(
                  _ =>
                    _.keyCode === V.hY && !this.disableClose && !(0, V.Vb)(_),
                ),
              ),
            ).subscribe(_ => {
              this.disableClose ||
                (_.preventDefault(),
                (function no(g, F, r) {
                  (g._closeInteractionType = F), g.close(r);
                })(this, 'keydown' === _.type ? 'keyboard' : 'mouse'));
            });
        }
        close(F) {
          (this._result = F),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, At.h)(r => 'closing' === r.state),
                (0, Jt.q)(1),
              )
              .subscribe(r => {
                this._beforeClosed.next(F),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    r.totalTime + 100,
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(F) {
          let r = this._ref.config.positionStrategy;
          return (
            F && (F.left || F.right)
              ? F.left
                ? r.left(F.left)
                : r.right(F.right)
              : r.centerHorizontally(),
            F && (F.top || F.bottom)
              ? F.top
                ? r.top(F.top)
                : r.bottom(F.bottom)
              : r.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(F = '', r = '') {
          return this._ref.updateSize(F, r), this;
        }
        addPanelClass(F) {
          return this._ref.addPanelClass(F), this;
        }
        removePanelClass(F) {
          return this._ref.removePanelClass(F), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const po = new a.OlP('MatMdcDialogData'),
        Bo = new a.OlP('mat-mdc-dialog-default-options'),
        Tr = new a.OlP('mat-mdc-dialog-scroll-strategy'),
        io = {
          provide: Tr,
          deps: [Pn.aV],
          useFactory: function Or(g) {
            return () => g.scrollStrategies.block();
          },
        };
      let mo = 0,
        yr = (() => {
          class g {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(r, c, _, T, _e, dt, rn, On, jn, Ri) {
              (this._overlay = r),
                (this._defaultOptions = _),
                (this._parentDialog = T),
                (this._dialogRefConstructor = rn),
                (this._dialogContainerType = On),
                (this._dialogDataToken = jn),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Q.x()),
                (this._afterOpenedAtThisLevel = new Q.x()),
                (this._idPrefix = 'mat-dialog-'),
                (this.dialogConfigClass = Kn),
                (this.afterAllClosed = (0, Hn.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Gt.O)(void 0)),
                )),
                (this._scrollStrategy = dt),
                (this._dialog = c.get(It));
            }
            open(r, c) {
              let _;
              ((c = { ...(this._defaultOptions || new Kn()), ...c }).id =
                c.id || `${this._idPrefix}${mo++}`),
                (c.scrollStrategy = c.scrollStrategy || this._scrollStrategy());
              const T = this._dialog.open(r, {
                ...c,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: c },
                    { provide: Li, useValue: c },
                  ],
                },
                templateContext: () => ({ dialogRef: _ }),
                providers: (_e, dt, rn) => (
                  (_ = new this._dialogRefConstructor(_e, c, rn)),
                  _.updatePosition(c?.position),
                  [
                    { provide: this._dialogContainerType, useValue: rn },
                    { provide: this._dialogDataToken, useValue: dt.data },
                    { provide: this._dialogRefConstructor, useValue: _ },
                  ]
                ),
              });
              return (
                (_.componentInstance = T.componentInstance),
                this.openDialogs.push(_),
                this.afterOpened.next(_),
                _.afterClosed().subscribe(() => {
                  const _e = this.openDialogs.indexOf(_);
                  _e > -1 &&
                    (this.openDialogs.splice(_e, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                _
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(r) {
              let c = r.length;
              for (; c--; ) r[c].close();
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        $i = (() => {
          class g extends yr {
            constructor(r, c, _, T, _e, dt, rn, On) {
              super(r, c, T, dt, rn, _e, to, pr, po, On),
                (this._idPrefix = 'mat-mdc-dialog-');
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.LFG(Pn.aV),
                a.LFG(a.zs3),
                a.LFG(s.Ye, 8),
                a.LFG(Bo, 8),
                a.LFG(Tr),
                a.LFG(g, 12),
                a.LFG(Pn.Xj),
                a.LFG(a.QbO, 8),
              );
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        ro = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [
                ['', 'mat-dialog-content', ''],
                ['mat-dialog-content'],
                ['', 'matDialogContent', ''],
              ],
              hostAttrs: [1, 'mat-mdc-dialog-content', 'mdc-dialog__content'],
            })),
            g
          );
        })(),
        Ur = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [$i, io],
              imports: [vn, Pn.U8, In.eL, ut.BQ, ut.BQ],
            })),
            g
          );
        })();
      var Yi = C(9549),
        bi = C(4144);
      const so = ['mat-calendar-body', ''];
      function jr(g, F) {
        if (
          (1 & g && (a.TgZ(0, 'tr', 3)(1, 'td', 4), a._uU(2), a.qZA()()), 2 & g)
        ) {
          const r = a.oxw();
          a.xp6(1),
            a.Udp('padding-top', r._cellPadding)(
              'padding-bottom',
              r._cellPadding,
            ),
            a.uIk('colspan', r.numCols),
            a.xp6(1),
            a.hij(' ', r.label, ' ');
        }
      }
      function li(g, F) {
        if ((1 & g && (a.TgZ(0, 'td', 4), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw(2);
          a.Udp('padding-top', r._cellPadding)(
            'padding-bottom',
            r._cellPadding,
          ),
            a.uIk('colspan', r._firstRowOffset),
            a.xp6(1),
            a.hij(
              ' ',
              r._firstRowOffset >= r.labelMinRequiredCells ? r.label : '',
              ' ',
            );
        }
      }
      function ci(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'td', 8)(1, 'button', 9),
            a.NdJ('click', function (_) {
              const _e = a.CHM(r).$implicit,
                dt = a.oxw(2);
              return a.KtG(dt._cellClicked(_e, _));
            })('focus', function (_) {
              const _e = a.CHM(r).$implicit,
                dt = a.oxw(2);
              return a.KtG(dt._emitActiveDateChange(_e, _));
            }),
            a.TgZ(2, 'span', 10),
            a._uU(3),
            a.qZA(),
            a._UZ(4, 'span', 11),
            a.qZA()();
        }
        if (2 & g) {
          const r = F.$implicit,
            c = F.index,
            _ = a.oxw().index,
            T = a.oxw();
          a.Udp('width', T._cellWidth)('padding-top', T._cellPadding)(
            'padding-bottom',
            T._cellPadding,
          ),
            a.uIk('data-mat-row', _)('data-mat-col', c),
            a.xp6(1),
            a.ekj('mat-calendar-body-disabled', !r.enabled)(
              'mat-calendar-body-active',
              T._isActiveCell(_, c),
            )('mat-calendar-body-range-start', T._isRangeStart(r.compareValue))(
              'mat-calendar-body-range-end',
              T._isRangeEnd(r.compareValue),
            )('mat-calendar-body-in-range', T._isInRange(r.compareValue))(
              'mat-calendar-body-comparison-bridge-start',
              T._isComparisonBridgeStart(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-bridge-end',
              T._isComparisonBridgeEnd(r.compareValue, _, c),
            )(
              'mat-calendar-body-comparison-start',
              T._isComparisonStart(r.compareValue),
            )(
              'mat-calendar-body-comparison-end',
              T._isComparisonEnd(r.compareValue),
            )(
              'mat-calendar-body-in-comparison-range',
              T._isInComparisonRange(r.compareValue),
            )(
              'mat-calendar-body-preview-start',
              T._isPreviewStart(r.compareValue),
            )('mat-calendar-body-preview-end', T._isPreviewEnd(r.compareValue))(
              'mat-calendar-body-in-preview',
              T._isInPreview(r.compareValue),
            ),
            a.Q6J('ngClass', r.cssClasses)(
              'tabindex',
              T._isActiveCell(_, c) ? 0 : -1,
            ),
            a.uIk('aria-label', r.ariaLabel)(
              'aria-disabled',
              !r.enabled || null,
            )('aria-pressed', T._isSelected(r.compareValue))(
              'aria-current',
              T.todayValue === r.compareValue ? 'date' : null,
            )('aria-describedby', T._getDescribedby(r.compareValue)),
            a.xp6(1),
            a.ekj('mat-calendar-body-selected', T._isSelected(r.compareValue))(
              'mat-calendar-body-comparison-identical',
              T._isComparisonIdentical(r.compareValue),
            )('mat-calendar-body-today', T.todayValue === r.compareValue),
            a.xp6(1),
            a.hij(' ', r.displayValue, ' ');
        }
      }
      function oi(g, F) {
        if (
          (1 & g &&
            (a.TgZ(0, 'tr', 5),
            a.YNc(1, li, 2, 6, 'td', 6),
            a.YNc(2, ci, 5, 48, 'td', 7),
            a.qZA()),
          2 & g)
        ) {
          const r = F.$implicit,
            c = F.index,
            _ = a.oxw();
          a.xp6(1),
            a.Q6J('ngIf', 0 === c && _._firstRowOffset),
            a.xp6(1),
            a.Q6J('ngForOf', r);
        }
      }
      function yi(g, F) {
        if (
          (1 & g &&
            (a.TgZ(0, 'th', 5)(1, 'span', 6),
            a._uU(2),
            a.qZA(),
            a.TgZ(3, 'span', 7),
            a._uU(4),
            a.qZA()()),
          2 & g)
        ) {
          const r = F.$implicit;
          a.xp6(2), a.Oqu(r.long), a.xp6(2), a.Oqu(r.narrow);
        }
      }
      const zr = ['*'];
      function $r(g, F) {}
      function Cr(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-month-view', 5),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = _));
            })('_userSelection', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dateSelected(_));
            })('dragStarted', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dragStarted(_));
            })('dragEnded', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dragEnded(_));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          )('comparisonStart', r.comparisonStart)(
            'comparisonEnd',
            r.comparisonEnd,
          )('startDateAccessibleName', r.startDateAccessibleName)(
            'endDateAccessibleName',
            r.endDateAccessibleName,
          )('activeDrag', r._activeDrag);
        }
      }
      function Ei(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-year-view', 6),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = _));
            })('monthSelected', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._monthSelectedInYearView(_));
            })('selectedChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._goToDateInView(_, 'month'));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function xr(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-multi-year-view', 7),
            a.NdJ('activeDateChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = _));
            })('yearSelected', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._yearSelectedInMultiYearView(_));
            })('selectedChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._goToDateInView(_, 'year'));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function Pr(g, F) {}
      const Ao = ['button'];
      function Bi(g, F) {
        1 & g && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'path', 4), a.qZA());
      }
      const Nr = [[['', 'matDatepickerToggleIcon', '']]],
        ao = ['[matDatepickerToggleIcon]'];
      let w = (() => {
        class g {
          constructor() {
            (this.changes = new Q.x()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.closeCalendarLabel = 'Close calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 24 years'),
              (this.nextMultiYearLabel = 'Next 24 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year'),
              (this.startDateLabel = 'Start date'),
              (this.endDateLabel = 'End date');
          }
          formatYearRange(r, c) {
            return `${r} \u2013 ${c}`;
          }
          formatYearRangeLabel(r, c) {
            return `${r} to ${c}`;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      class G {
        constructor(F, r, c, _, T = {}, _e = F, dt) {
          (this.value = F),
            (this.displayValue = r),
            (this.ariaLabel = c),
            (this.enabled = _),
            (this.cssClasses = T),
            (this.compareValue = _e),
            (this.rawValue = dt);
        }
      }
      let it = 1,
        Qt = (() => {
          class g {
            ngAfterViewChecked() {
              this._focusActiveCellAfterViewChecked &&
                (this._focusActiveCell(),
                (this._focusActiveCellAfterViewChecked = !1));
            }
            constructor(r, c) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._platform = (0, a.f3M)(ir.t4)),
                (this._focusActiveCellAfterViewChecked = !1),
                (this.numCols = 7),
                (this.activeCell = 0),
                (this.isRange = !1),
                (this.cellAspectRatio = 1),
                (this.previewStart = null),
                (this.previewEnd = null),
                (this.selectedValueChange = new a.vpe()),
                (this.previewChange = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this.dragStarted = new a.vpe()),
                (this.dragEnded = new a.vpe()),
                (this._didDragSinceMouseDown = !1),
                (this._enterHandler = _ => {
                  if (this._skipNextFocus && 'focus' === _.type)
                    this._skipNextFocus = !1;
                  else if (_.target && this.isRange) {
                    const T = this._getCellFromElement(_.target);
                    T &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({
                          value: T.enabled ? T : null,
                          event: _,
                        }),
                      );
                  }
                }),
                (this._touchmoveHandler = _ => {
                  if (!this.isRange) return;
                  const T = ii(_),
                    _e = T ? this._getCellFromElement(T) : null;
                  T !== _.target && (this._didDragSinceMouseDown = !0),
                    lt(_.target) && _.preventDefault(),
                    this._ngZone.run(() =>
                      this.previewChange.emit({
                        value: _e?.enabled ? _e : null,
                        event: _,
                      }),
                    );
                }),
                (this._leaveHandler = _ => {
                  null !== this.previewEnd &&
                    this.isRange &&
                    ('blur' !== _.type && (this._didDragSinceMouseDown = !0),
                    _.target &&
                      this._getCellFromElement(_.target) &&
                      (!_.relatedTarget ||
                        !this._getCellFromElement(_.relatedTarget)) &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({ value: null, event: _ }),
                      ));
                }),
                (this._mousedownHandler = _ => {
                  if (!this.isRange) return;
                  this._didDragSinceMouseDown = !1;
                  const T = _.target && this._getCellFromElement(_.target);
                  !T ||
                    !this._isInRange(T.rawValue) ||
                    this._ngZone.run(() => {
                      this.dragStarted.emit({ value: T.rawValue, event: _ });
                    });
                }),
                (this._mouseupHandler = _ => {
                  if (!this.isRange) return;
                  const T = lt(_.target);
                  T
                    ? T.closest('.mat-calendar-body') ===
                        this._elementRef.nativeElement &&
                      this._ngZone.run(() => {
                        const _e = this._getCellFromElement(T);
                        this.dragEnded.emit({
                          value: _e?.rawValue ?? null,
                          event: _,
                        });
                      })
                    : this._ngZone.run(() => {
                        this.dragEnded.emit({ value: null, event: _ });
                      });
                }),
                (this._touchendHandler = _ => {
                  const T = ii(_);
                  T && this._mouseupHandler({ target: T });
                }),
                (this._id = 'mat-calendar-body-' + it++),
                (this._startDateLabelId = `${this._id}-start-date`),
                (this._endDateLabelId = `${this._id}-end-date`),
                c.runOutsideAngular(() => {
                  const _ = r.nativeElement;
                  _.addEventListener('mouseenter', this._enterHandler, !0),
                    _.addEventListener('touchmove', this._touchmoveHandler, !0),
                    _.addEventListener('focus', this._enterHandler, !0),
                    _.addEventListener('mouseleave', this._leaveHandler, !0),
                    _.addEventListener('blur', this._leaveHandler, !0),
                    _.addEventListener('mousedown', this._mousedownHandler),
                    _.addEventListener('touchstart', this._mousedownHandler),
                    this._platform.isBrowser &&
                      (window.addEventListener('mouseup', this._mouseupHandler),
                      window.addEventListener(
                        'touchend',
                        this._touchendHandler,
                      ));
                });
            }
            _cellClicked(r, c) {
              this._didDragSinceMouseDown ||
                (r.enabled &&
                  this.selectedValueChange.emit({ value: r.value, event: c }));
            }
            _emitActiveDateChange(r, c) {
              r.enabled &&
                this.activeDateChange.emit({ value: r.value, event: c });
            }
            _isSelected(r) {
              return this.startValue === r || this.endValue === r;
            }
            ngOnChanges(r) {
              const c = r.numCols,
                { rows: _, numCols: T } = this;
              (r.rows || c) &&
                (this._firstRowOffset =
                  _ && _.length && _[0].length ? T - _[0].length : 0),
                (r.cellAspectRatio || c || !this._cellPadding) &&
                  (this._cellPadding = (50 * this.cellAspectRatio) / T + '%'),
                (c || !this._cellWidth) && (this._cellWidth = 100 / T + '%');
            }
            ngOnDestroy() {
              const r = this._elementRef.nativeElement;
              r.removeEventListener('mouseenter', this._enterHandler, !0),
                r.removeEventListener('touchmove', this._touchmoveHandler, !0),
                r.removeEventListener('focus', this._enterHandler, !0),
                r.removeEventListener('mouseleave', this._leaveHandler, !0),
                r.removeEventListener('blur', this._leaveHandler, !0),
                r.removeEventListener('mousedown', this._mousedownHandler),
                r.removeEventListener('touchstart', this._mousedownHandler),
                this._platform.isBrowser &&
                  (window.removeEventListener('mouseup', this._mouseupHandler),
                  window.removeEventListener(
                    'touchend',
                    this._touchendHandler,
                  ));
            }
            _isActiveCell(r, c) {
              let _ = r * this.numCols + c;
              return r && (_ -= this._firstRowOffset), _ == this.activeCell;
            }
            _focusActiveCell(r = !0) {
              this._ngZone.runOutsideAngular(() => {
                this._ngZone.onStable.pipe((0, Jt.q)(1)).subscribe(() => {
                  setTimeout(() => {
                    const c = this._elementRef.nativeElement.querySelector(
                      '.mat-calendar-body-active',
                    );
                    c && (r || (this._skipNextFocus = !0), c.focus());
                  });
                });
              });
            }
            _scheduleFocusActiveCellAfterViewChecked() {
              this._focusActiveCellAfterViewChecked = !0;
            }
            _isRangeStart(r) {
              return kn(r, this.startValue, this.endValue);
            }
            _isRangeEnd(r) {
              return mr(r, this.startValue, this.endValue);
            }
            _isInRange(r) {
              return Yr(r, this.startValue, this.endValue, this.isRange);
            }
            _isComparisonStart(r) {
              return kn(r, this.comparisonStart, this.comparisonEnd);
            }
            _isComparisonBridgeStart(r, c, _) {
              if (
                !this._isComparisonStart(r) ||
                this._isRangeStart(r) ||
                !this._isInRange(r)
              )
                return !1;
              let T = this.rows[c][_ - 1];
              if (!T) {
                const _e = this.rows[c - 1];
                T = _e && _e[_e.length - 1];
              }
              return T && !this._isRangeEnd(T.compareValue);
            }
            _isComparisonBridgeEnd(r, c, _) {
              if (
                !this._isComparisonEnd(r) ||
                this._isRangeEnd(r) ||
                !this._isInRange(r)
              )
                return !1;
              let T = this.rows[c][_ + 1];
              if (!T) {
                const _e = this.rows[c + 1];
                T = _e && _e[0];
              }
              return T && !this._isRangeStart(T.compareValue);
            }
            _isComparisonEnd(r) {
              return mr(r, this.comparisonStart, this.comparisonEnd);
            }
            _isInComparisonRange(r) {
              return Yr(
                r,
                this.comparisonStart,
                this.comparisonEnd,
                this.isRange,
              );
            }
            _isComparisonIdentical(r) {
              return (
                this.comparisonStart === this.comparisonEnd &&
                r === this.comparisonStart
              );
            }
            _isPreviewStart(r) {
              return kn(r, this.previewStart, this.previewEnd);
            }
            _isPreviewEnd(r) {
              return mr(r, this.previewStart, this.previewEnd);
            }
            _isInPreview(r) {
              return Yr(r, this.previewStart, this.previewEnd, this.isRange);
            }
            _getDescribedby(r) {
              return this.isRange
                ? this.startValue === r && this.endValue === r
                  ? `${this._startDateLabelId} ${this._endDateLabelId}`
                  : this.startValue === r
                  ? this._startDateLabelId
                  : this.endValue === r
                  ? this._endDateLabelId
                  : null
                : null;
            }
            _getCellFromElement(r) {
              const c = lt(r);
              if (c) {
                const _ = c.getAttribute('data-mat-row'),
                  T = c.getAttribute('data-mat-col');
                if (_ && T) return this.rows[parseInt(_)][parseInt(T)];
              }
              return null;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36(a.SBq), a.Y36(a.R0b));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['', 'mat-calendar-body', '']],
              hostAttrs: [1, 'mat-calendar-body'],
              inputs: {
                label: 'label',
                rows: 'rows',
                todayValue: 'todayValue',
                startValue: 'startValue',
                endValue: 'endValue',
                labelMinRequiredCells: 'labelMinRequiredCells',
                numCols: 'numCols',
                activeCell: 'activeCell',
                isRange: 'isRange',
                cellAspectRatio: 'cellAspectRatio',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                previewStart: 'previewStart',
                previewEnd: 'previewEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedValueChange: 'selectedValueChange',
                previewChange: 'previewChange',
                activeDateChange: 'activeDateChange',
                dragStarted: 'dragStarted',
                dragEnded: 'dragEnded',
              },
              exportAs: ['matCalendarBody'],
              features: [a.TTD],
              attrs: so,
              decls: 6,
              vars: 6,
              consts: [
                ['aria-hidden', 'true', 4, 'ngIf'],
                ['role', 'row', 4, 'ngFor', 'ngForOf'],
                [1, 'mat-calendar-body-hidden-label', 3, 'id'],
                ['aria-hidden', 'true'],
                [1, 'mat-calendar-body-label'],
                ['role', 'row'],
                [
                  'class',
                  'mat-calendar-body-label',
                  3,
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngIf',
                ],
                [
                  'role',
                  'gridcell',
                  'class',
                  'mat-calendar-body-cell-container',
                  3,
                  'width',
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                ['role', 'gridcell', 1, 'mat-calendar-body-cell-container'],
                [
                  'type',
                  'button',
                  1,
                  'mat-calendar-body-cell',
                  3,
                  'ngClass',
                  'tabindex',
                  'click',
                  'focus',
                ],
                [1, 'mat-calendar-body-cell-content', 'mat-focus-indicator'],
                ['aria-hidden', 'true', 1, 'mat-calendar-body-cell-preview'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, jr, 3, 6, 'tr', 0),
                  a.YNc(1, oi, 3, 2, 'tr', 1),
                  a.TgZ(2, 'label', 2),
                  a._uU(3),
                  a.qZA(),
                  a.TgZ(4, 'label', 2),
                  a._uU(5),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngIf', c._firstRowOffset < c.labelMinRequiredCells),
                    a.xp6(1),
                    a.Q6J('ngForOf', c.rows),
                    a.xp6(1),
                    a.Q6J('id', c._startDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.startDateAccessibleName, '\n'),
                    a.xp6(1),
                    a.Q6J('id', c._endDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.endDateAccessibleName, '\n'));
              },
              dependencies: [s.mk, s.sg, s.O5],
              styles: [
                '.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      function Jn(g) {
        return 'TD' === g?.nodeName;
      }
      function lt(g) {
        let F;
        return (
          Jn(g)
            ? (F = g)
            : Jn(g.parentNode)
            ? (F = g.parentNode)
            : Jn(g.parentNode?.parentNode) && (F = g.parentNode.parentNode),
          null != F?.getAttribute('data-mat-row') ? F : null
        );
      }
      function kn(g, F, r) {
        return null !== r && F !== r && g < r && g === F;
      }
      function mr(g, F, r) {
        return null !== F && F !== r && g >= F && g === r;
      }
      function Yr(g, F, r, c) {
        return c && null !== F && null !== r && F !== r && g >= F && g <= r;
      }
      function ii(g) {
        const F = g.changedTouches[0];
        return document.elementFromPoint(F.clientX, F.clientY);
      }
      class Vi {
        constructor(F, r) {
          (this.start = F), (this.end = r);
        }
      }
      let or = (() => {
          class g {
            constructor(r, c) {
              (this.selection = r),
                (this._adapter = c),
                (this._selectionChanged = new Q.x()),
                (this.selectionChanged = this._selectionChanged),
                (this.selection = r);
            }
            updateSelection(r, c) {
              const _ = this.selection;
              (this.selection = r),
                this._selectionChanged.next({
                  selection: r,
                  source: c,
                  oldValue: _,
                });
            }
            ngOnDestroy() {
              this._selectionChanged.complete();
            }
            _isValidDateInstance(r) {
              return (
                this._adapter.isDateInstance(r) && this._adapter.isValid(r)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })(),
        sr = (() => {
          class g extends or {
            constructor(r) {
              super(null, r);
            }
            add(r) {
              super.updateSelection(r, this);
            }
            isValid() {
              return (
                null != this.selection &&
                this._isValidDateInstance(this.selection)
              );
            }
            isComplete() {
              return null != this.selection;
            }
            clone() {
              const r = new g(this._adapter);
              return r.updateSelection(this.selection, this), r;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.LFG(ut._A));
            }),
            (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
            g
          );
        })();
      const qo = {
          provide: or,
          deps: [[new a.FiY(), new a.tp0(), or], ut._A],
          useFactory: function So(g, F) {
            return g || new sr(F);
          },
        },
        Mi = new a.OlP('MAT_DATE_RANGE_SELECTION_STRATEGY');
      let lo = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            const c = this._activeDate,
              _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              this._hasSameMonthAndYear(c, this._activeDate) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof Vi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setRanges(this._selected);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _, T, _e) {
            (this._changeDetectorRef = r),
              (this._dateFormats = c),
              (this._dateAdapter = _),
              (this._dir = T),
              (this._rangeStrategy = _e),
              (this._rerenderSubscription = an.w0.EMPTY),
              (this.activeDrag = null),
              (this.selectedChange = new a.vpe()),
              (this._userSelection = new a.vpe()),
              (this.dragStarted = new a.vpe()),
              (this.dragEnded = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Gt.O)(null))
              .subscribe(() => this._init());
          }
          ngOnChanges(r) {
            const c = r.comparisonStart || r.comparisonEnd;
            c && !c.firstChange && this._setRanges(this.selected),
              r.activeDrag && !this.activeDrag && this._clearPreview();
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _dateSelected(r) {
            const c = r.value,
              _ = this._getDateFromDayOfMonth(c);
            let T, _e;
            this._selected instanceof Vi
              ? ((T = this._getDateInCurrentMonth(this._selected.start)),
                (_e = this._getDateInCurrentMonth(this._selected.end)))
              : (T = _e = this._getDateInCurrentMonth(this._selected)),
              (T !== c || _e !== c) && this.selectedChange.emit(_),
              this._userSelection.emit({ value: _, event: r.event }),
              this._clearPreview(),
              this._changeDetectorRef.markForCheck();
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromDayOfMonth(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this._activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case V.oh:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case V.SV:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case V.LH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  -7,
                );
                break;
              case V.JH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  7,
                );
                break;
              case V.Sd:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  1 - this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case V.uR:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                    this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case V.Ku:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                break;
              case V.VM:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                break;
              case V.K5:
              case V.L_:
                return (
                  (this._selectionKeyPressed = !0),
                  void (this._canSelect(this._activeDate) && r.preventDefault())
                );
              case V.hY:
                return void (
                  null != this._previewEnd &&
                  !(0, V.Vb)(r) &&
                  (this._clearPreview(),
                  this.activeDrag
                    ? this.dragEnded.emit({ value: null, event: r })
                    : (this.selectedChange.emit(null),
                      this._userSelection.emit({ value: null, event: r })),
                  r.preventDefault(),
                  r.stopPropagation())
                );
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              (this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked()),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === V.L_ || r.keyCode === V.K5) &&
              (this._selectionKeyPressed &&
                this._canSelect(this._activeDate) &&
                this._dateSelected({
                  value: this._dateAdapter.getDate(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _init() {
            this._setRanges(this.selected),
              (this._todayDate = this._getCellCompareValue(
                this._dateAdapter.today(),
              )),
              (this._monthLabel = this._dateFormats.display.monthLabel
                ? this._dateAdapter.format(
                    this.activeDate,
                    this._dateFormats.display.monthLabel,
                  )
                : this._dateAdapter
                    .getMonthNames('short')
                    [
                      this._dateAdapter.getMonth(this.activeDate)
                    ].toLocaleUpperCase());
            let r = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              1,
            );
            (this._firstWeekOffset =
              (7 +
                this._dateAdapter.getDayOfWeek(r) -
                this._dateAdapter.getFirstDayOfWeek()) %
              7),
              this._initWeekdays(),
              this._createWeekCells(),
              this._changeDetectorRef.markForCheck();
          }
          _focusActiveCell(r) {
            this._matCalendarBody._focusActiveCell(r);
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _previewChanged({ event: r, value: c }) {
            if (this._rangeStrategy) {
              const _ = c ? c.rawValue : null,
                T = this._rangeStrategy.createPreview(_, this.selected, r);
              if (
                ((this._previewStart = this._getCellCompareValue(T.start)),
                (this._previewEnd = this._getCellCompareValue(T.end)),
                this.activeDrag && _)
              ) {
                const _e = this._rangeStrategy.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  _,
                  r,
                );
                _e &&
                  ((this._previewStart = this._getCellCompareValue(_e.start)),
                  (this._previewEnd = this._getCellCompareValue(_e.end)));
              }
              this._changeDetectorRef.detectChanges();
            }
          }
          _dragEnded(r) {
            if (this.activeDrag)
              if (r.value) {
                const c = this._rangeStrategy?.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  r.value,
                  r.event,
                );
                this.dragEnded.emit({ value: c ?? null, event: r.event });
              } else this.dragEnded.emit({ value: null, event: r.event });
          }
          _getDateFromDayOfMonth(r) {
            return this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r,
            );
          }
          _initWeekdays() {
            const r = this._dateAdapter.getFirstDayOfWeek(),
              c = this._dateAdapter.getDayOfWeekNames('narrow');
            let T = this._dateAdapter
              .getDayOfWeekNames('long')
              .map((_e, dt) => ({ long: _e, narrow: c[dt] }));
            this._weekdays = T.slice(r).concat(T.slice(0, r));
          }
          _createWeekCells() {
            const r = this._dateAdapter.getNumDaysInMonth(this.activeDate),
              c = this._dateAdapter.getDateNames();
            this._weeks = [[]];
            for (let _ = 0, T = this._firstWeekOffset; _ < r; _++, T++) {
              7 == T && (this._weeks.push([]), (T = 0));
              const _e = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  this._dateAdapter.getMonth(this.activeDate),
                  _ + 1,
                ),
                dt = this._shouldEnableDate(_e),
                rn = this._dateAdapter.format(
                  _e,
                  this._dateFormats.display.dateA11yLabel,
                ),
                On = this.dateClass ? this.dateClass(_e, 'month') : void 0;
              this._weeks[this._weeks.length - 1].push(
                new G(
                  _ + 1,
                  c[_],
                  rn,
                  dt,
                  On,
                  this._getCellCompareValue(_e),
                  _e,
                ),
              );
            }
          }
          _shouldEnableDate(r) {
            return (
              !!r &&
              (!this.minDate ||
                this._dateAdapter.compareDate(r, this.minDate) >= 0) &&
              (!this.maxDate ||
                this._dateAdapter.compareDate(r, this.maxDate) <= 0) &&
              (!this.dateFilter || this.dateFilter(r))
            );
          }
          _getDateInCurrentMonth(r) {
            return r && this._hasSameMonthAndYear(r, this.activeDate)
              ? this._dateAdapter.getDate(r)
              : null;
          }
          _hasSameMonthAndYear(r, c) {
            return !(
              !r ||
              !c ||
              this._dateAdapter.getMonth(r) != this._dateAdapter.getMonth(c) ||
              this._dateAdapter.getYear(r) != this._dateAdapter.getYear(c)
            );
          }
          _getCellCompareValue(r) {
            if (r) {
              const c = this._dateAdapter.getYear(r),
                _ = this._dateAdapter.getMonth(r),
                T = this._dateAdapter.getDate(r);
              return new Date(c, _, T).getTime();
            }
            return null;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setRanges(r) {
            r instanceof Vi
              ? ((this._rangeStart = this._getCellCompareValue(r.start)),
                (this._rangeEnd = this._getCellCompareValue(r.end)),
                (this._isRange = !0))
              : ((this._rangeStart = this._rangeEnd =
                  this._getCellCompareValue(r)),
                (this._isRange = !1)),
              (this._comparisonRangeStart = this._getCellCompareValue(
                this.comparisonStart,
              )),
              (this._comparisonRangeEnd = this._getCellCompareValue(
                this.comparisonEnd,
              ));
          }
          _canSelect(r) {
            return !this.dateFilter || this.dateFilter(r);
          }
          _clearPreview() {
            this._previewStart = this._previewEnd = null;
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(a.sBO),
              a.Y36(ut.sG, 8),
              a.Y36(ut._A, 8),
              a.Y36(qn.Is, 8),
              a.Y36(Mi, 8),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-month-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(Qt, 5), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
              comparisonStart: 'comparisonStart',
              comparisonEnd: 'comparisonEnd',
              startDateAccessibleName: 'startDateAccessibleName',
              endDateAccessibleName: 'endDateAccessibleName',
              activeDrag: 'activeDrag',
            },
            outputs: {
              selectedChange: 'selectedChange',
              _userSelection: '_userSelection',
              dragStarted: 'dragStarted',
              dragEnded: 'dragEnded',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMonthView'],
            features: [a.TTD],
            decls: 7,
            vars: 15,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              [1, 'mat-calendar-table-header'],
              ['scope', 'col', 4, 'ngFor', 'ngForOf'],
              [
                'aria-hidden',
                'true',
                'colspan',
                '7',
                1,
                'mat-calendar-table-header-divider',
              ],
              [
                'mat-calendar-body',
                '',
                3,
                'label',
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'comparisonStart',
                'comparisonEnd',
                'previewStart',
                'previewEnd',
                'isRange',
                'labelMinRequiredCells',
                'activeCell',
                'startDateAccessibleName',
                'endDateAccessibleName',
                'selectedValueChange',
                'activeDateChange',
                'previewChange',
                'dragStarted',
                'dragEnded',
                'keyup',
                'keydown',
              ],
              ['scope', 'col'],
              [1, 'cdk-visually-hidden'],
              ['aria-hidden', 'true'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a.YNc(3, yi, 5, 2, 'th', 2),
                a.qZA(),
                a.TgZ(4, 'tr'),
                a._UZ(5, 'th', 3),
                a.qZA()(),
                a.TgZ(6, 'tbody', 4),
                a.NdJ('selectedValueChange', function (T) {
                  return c._dateSelected(T);
                })('activeDateChange', function (T) {
                  return c._updateActiveDate(T);
                })('previewChange', function (T) {
                  return c._previewChanged(T);
                })('dragStarted', function (T) {
                  return c.dragStarted.emit(T);
                })('dragEnded', function (T) {
                  return c._dragEnded(T);
                })('keyup', function (T) {
                  return c._handleCalendarBodyKeyup(T);
                })('keydown', function (T) {
                  return c._handleCalendarBodyKeydown(T);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('ngForOf', c._weekdays),
                  a.xp6(3),
                  a.Q6J('label', c._monthLabel)('rows', c._weeks)(
                    'todayValue',
                    c._todayDate,
                  )('startValue', c._rangeStart)('endValue', c._rangeEnd)(
                    'comparisonStart',
                    c._comparisonRangeStart,
                  )('comparisonEnd', c._comparisonRangeEnd)(
                    'previewStart',
                    c._previewStart,
                  )('previewEnd', c._previewEnd)('isRange', c._isRange)(
                    'labelMinRequiredCells',
                    3,
                  )('activeCell', c._dateAdapter.getDate(c.activeDate) - 1)(
                    'startDateAccessibleName',
                    c.startDateAccessibleName,
                  )('endDateAccessibleName', c.endDateAccessibleName));
            },
            dependencies: [s.sg, Qt],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      const Di = 24;
      let Xo = (() => {
        class g {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            let c = this._activeDate;
            const _ =
              this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              _,
              this.minDate,
              this.maxDate,
            )),
              _o(
                this._dateAdapter,
                c,
                this._activeDate,
                this.minDate,
                this.maxDate,
              ) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof Vi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setSelectedYear(r);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, _) {
            (this._changeDetectorRef = r),
              (this._dateAdapter = c),
              (this._dir = _),
              (this._rerenderSubscription = an.w0.EMPTY),
              (this.selectedChange = new a.vpe()),
              (this.yearSelected = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Gt.O)(null))
              .subscribe(() => this._init());
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _init() {
            this._todayYear = this._dateAdapter.getYear(
              this._dateAdapter.today(),
            );
            const c =
              this._dateAdapter.getYear(this._activeDate) -
              Mr(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate,
              );
            this._years = [];
            for (let _ = 0, T = []; _ < Di; _++)
              T.push(c + _),
                4 == T.length &&
                  (this._years.push(T.map(_e => this._createCellForYear(_e))),
                  (T = []));
            this._changeDetectorRef.markForCheck();
          }
          _yearSelected(r) {
            const c = r.value,
              _ = this._dateAdapter.createDate(c, 0, 1),
              T = this._getDateFromYear(c);
            this.yearSelected.emit(_), this.selectedChange.emit(T);
          }
          _updateActiveDate(r) {
            const _ = this._activeDate;
            (this.activeDate = this._getDateFromYear(r.value)),
              this._dateAdapter.compareDate(_, this.activeDate) &&
                this.activeDateChange.emit(this.activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              _ = this._isRtl();
            switch (r.keyCode) {
              case V.oh:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? 1 : -1,
                );
                break;
              case V.SV:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  _ ? -1 : 1,
                );
                break;
              case V.LH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -4,
                );
                break;
              case V.JH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  4,
                );
                break;
              case V.Sd:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -Mr(
                    this._dateAdapter,
                    this.activeDate,
                    this.minDate,
                    this.maxDate,
                  ),
                );
                break;
              case V.uR:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  Di -
                    Mr(
                      this._dateAdapter,
                      this.activeDate,
                      this.minDate,
                      this.maxDate,
                    ) -
                    1,
                );
                break;
              case V.Ku:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * -Di : -Di,
                );
                break;
              case V.VM:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * Di : Di,
                );
                break;
              case V.K5:
              case V.L_:
                this._selectionKeyPressed = !0;
                break;
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked(),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === V.L_ || r.keyCode === V.K5) &&
              (this._selectionKeyPressed &&
                this._yearSelected({
                  value: this._dateAdapter.getYear(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _getActiveCell() {
            return Mr(
              this._dateAdapter,
              this.activeDate,
              this.minDate,
              this.maxDate,
            );
          }
          _focusActiveCell() {
            this._matCalendarBody._focusActiveCell();
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _getDateFromYear(r) {
            const c = this._dateAdapter.getMonth(this.activeDate),
              _ = this._dateAdapter.getNumDaysInMonth(
                this._dateAdapter.createDate(r, c, 1),
              );
            return this._dateAdapter.createDate(
              r,
              c,
              Math.min(this._dateAdapter.getDate(this.activeDate), _),
            );
          }
          _createCellForYear(r) {
            const c = this._dateAdapter.createDate(r, 0, 1),
              _ = this._dateAdapter.getYearName(c),
              T = this.dateClass ? this.dateClass(c, 'multi-year') : void 0;
            return new G(r, _, _, this._shouldEnableYear(r), T);
          }
          _shouldEnableYear(r) {
            if (
              null == r ||
              (this.maxDate && r > this._dateAdapter.getYear(this.maxDate)) ||
              (this.minDate && r < this._dateAdapter.getYear(this.minDate))
            )
              return !1;
            if (!this.dateFilter) return !0;
            for (
              let _ = this._dateAdapter.createDate(r, 0, 1);
              this._dateAdapter.getYear(_) == r;
              _ = this._dateAdapter.addCalendarDays(_, 1)
            )
              if (this.dateFilter(_)) return !0;
            return !1;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setSelectedYear(r) {
            if (((this._selectedYear = null), r instanceof Vi)) {
              const c = r.start || r.end;
              c && (this._selectedYear = this._dateAdapter.getYear(c));
            } else r && (this._selectedYear = this._dateAdapter.getYear(r));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(a.sBO), a.Y36(ut._A, 8), a.Y36(qn.Is, 8));
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['mat-multi-year-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(Qt, 5), 2 & r)) {
                let _;
                a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
            },
            outputs: {
              selectedChange: 'selectedChange',
              yearSelected: 'yearSelected',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMultiYearView'],
            decls: 5,
            vars: 7,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
              ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
              [
                'mat-calendar-body',
                '',
                3,
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'numCols',
                'cellAspectRatio',
                'activeCell',
                'selectedValueChange',
                'activeDateChange',
                'keyup',
                'keydown',
              ],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a._UZ(3, 'th', 2),
                a.qZA()(),
                a.TgZ(4, 'tbody', 3),
                a.NdJ('selectedValueChange', function (T) {
                  return c._yearSelected(T);
                })('activeDateChange', function (T) {
                  return c._updateActiveDate(T);
                })('keyup', function (T) {
                  return c._handleCalendarBodyKeyup(T);
                })('keydown', function (T) {
                  return c._handleCalendarBodyKeydown(T);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(4),
                  a.Q6J('rows', c._years)('todayValue', c._todayYear)(
                    'startValue',
                    c._selectedYear,
                  )('endValue', c._selectedYear)('numCols', 4)(
                    'cellAspectRatio',
                    4 / 7,
                  )('activeCell', c._getActiveCell()));
            },
            dependencies: [Qt],
            encapsulation: 2,
            changeDetection: 0,
          })),
          g
        );
      })();
      function _o(g, F, r, c, _) {
        const T = g.getYear(F),
          _e = g.getYear(r),
          dt = co(g, c, _);
        return Math.floor((T - dt) / Di) === Math.floor((_e - dt) / Di);
      }
      function Mr(g, F, r, c) {
        return (function B(g, F) {
          return ((g % F) + F) % F;
        })(g.getYear(F) - co(g, r, c), Di);
      }
      function co(g, F, r) {
        let c = 0;
        return r ? (c = g.getYear(r) - Di + 1) : F && (c = g.getYear(F)), c;
      }
      let h = (() => {
          class g {
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(r) {
              let c = this._activeDate;
              const _ =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(
                _,
                this.minDate,
                this.maxDate,
              )),
                this._dateAdapter.getYear(c) !==
                  this._dateAdapter.getYear(this._activeDate) && this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              (this._selected =
                r instanceof Vi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    )),
                this._setSelectedMonth(r);
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            constructor(r, c, _, T) {
              (this._changeDetectorRef = r),
                (this._dateFormats = c),
                (this._dateAdapter = _),
                (this._dir = T),
                (this._rerenderSubscription = an.w0.EMPTY),
                (this.selectedChange = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this._activeDate = this._dateAdapter.today());
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe((0, Gt.O)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _monthSelected(r) {
              const c = r.value,
                _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  c,
                  1,
                );
              this.monthSelected.emit(_);
              const T = this._getDateFromMonth(c);
              this.selectedChange.emit(T);
            }
            _updateActiveDate(r) {
              const _ = this._activeDate;
              (this.activeDate = this._getDateFromMonth(r.value)),
                this._dateAdapter.compareDate(_, this.activeDate) &&
                  this.activeDateChange.emit(this.activeDate);
            }
            _handleCalendarBodyKeydown(r) {
              const c = this._activeDate,
                _ = this._isRtl();
              switch (r.keyCode) {
                case V.oh:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? 1 : -1,
                  );
                  break;
                case V.SV:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    _ ? -1 : 1,
                  );
                  break;
                case V.LH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -4,
                  );
                  break;
                case V.JH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    4,
                  );
                  break;
                case V.Sd:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case V.uR:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    11 - this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case V.Ku:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? -10 : -1,
                  );
                  break;
                case V.VM:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? 10 : 1,
                  );
                  break;
                case V.K5:
                case V.L_:
                  this._selectionKeyPressed = !0;
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(c, this.activeDate) &&
                (this.activeDateChange.emit(this.activeDate),
                this._focusActiveCellAfterViewChecked()),
                r.preventDefault();
            }
            _handleCalendarBodyKeyup(r) {
              (r.keyCode === V.L_ || r.keyCode === V.K5) &&
                (this._selectionKeyPressed &&
                  this._monthSelected({
                    value: this._dateAdapter.getMonth(this._activeDate),
                    event: r,
                  }),
                (this._selectionKeyPressed = !1));
            }
            _init() {
              this._setSelectedMonth(this.selected),
                (this._todayMonth = this._getMonthInCurrentYear(
                  this._dateAdapter.today(),
                )),
                (this._yearLabel = this._dateAdapter.getYearName(
                  this.activeDate,
                ));
              let r = this._dateAdapter.getMonthNames('short');
              (this._months = [
                [0, 1, 2, 3],
                [4, 5, 6, 7],
                [8, 9, 10, 11],
              ].map(c => c.map(_ => this._createCellForMonth(_, r[_])))),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _focusActiveCellAfterViewChecked() {
              this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
            }
            _getMonthInCurrentYear(r) {
              return r &&
                this._dateAdapter.getYear(r) ==
                  this._dateAdapter.getYear(this.activeDate)
                ? this._dateAdapter.getMonth(r)
                : null;
            }
            _getDateFromMonth(r) {
              const c = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                _ = this._dateAdapter.getNumDaysInMonth(c);
              return this._dateAdapter.createDate(
                this._dateAdapter.getYear(this.activeDate),
                r,
                Math.min(this._dateAdapter.getDate(this.activeDate), _),
              );
            }
            _createCellForMonth(r, c) {
              const _ = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                T = this._dateAdapter.format(
                  _,
                  this._dateFormats.display.monthYearA11yLabel,
                ),
                _e = this.dateClass ? this.dateClass(_, 'year') : void 0;
              return new G(
                r,
                c.toLocaleUpperCase(),
                T,
                this._shouldEnableMonth(r),
                _e,
              );
            }
            _shouldEnableMonth(r) {
              const c = this._dateAdapter.getYear(this.activeDate);
              if (
                null == r ||
                this._isYearAndMonthAfterMaxDate(c, r) ||
                this._isYearAndMonthBeforeMinDate(c, r)
              )
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let T = this._dateAdapter.createDate(c, r, 1);
                this._dateAdapter.getMonth(T) == r;
                T = this._dateAdapter.addCalendarDays(T, 1)
              )
                if (this.dateFilter(T)) return !0;
              return !1;
            }
            _isYearAndMonthAfterMaxDate(r, c) {
              if (this.maxDate) {
                const _ = this._dateAdapter.getYear(this.maxDate),
                  T = this._dateAdapter.getMonth(this.maxDate);
                return r > _ || (r === _ && c > T);
              }
              return !1;
            }
            _isYearAndMonthBeforeMinDate(r, c) {
              if (this.minDate) {
                const _ = this._dateAdapter.getYear(this.minDate),
                  T = this._dateAdapter.getMonth(this.minDate);
                return r < _ || (r === _ && c < T);
              }
              return !1;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
            _setSelectedMonth(r) {
              this._selectedMonth =
                r instanceof Vi
                  ? this._getMonthInCurrentYear(r.start) ||
                    this._getMonthInCurrentYear(r.end)
                  : this._getMonthInCurrentYear(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.sBO),
                a.Y36(ut.sG, 8),
                a.Y36(ut._A, 8),
                a.Y36(qn.Is, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-year-view']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(Qt, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._matCalendarBody = _.first);
                }
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                monthSelected: 'monthSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matYearView'],
              decls: 5,
              vars: 9,
              consts: [
                ['role', 'grid', 1, 'mat-calendar-table'],
                ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'startValue',
                  'endValue',
                  'labelMinRequiredCells',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'activeDateChange',
                  'keyup',
                  'keydown',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                  a._UZ(3, 'th', 2),
                  a.qZA()(),
                  a.TgZ(4, 'tbody', 3),
                  a.NdJ('selectedValueChange', function (T) {
                    return c._monthSelected(T);
                  })('activeDateChange', function (T) {
                    return c._updateActiveDate(T);
                  })('keyup', function (T) {
                    return c._handleCalendarBodyKeyup(T);
                  })('keydown', function (T) {
                    return c._handleCalendarBodyKeydown(T);
                  }),
                  a.qZA()()),
                  2 & r &&
                    (a.xp6(4),
                    a.Q6J('label', c._yearLabel)('rows', c._months)(
                      'todayValue',
                      c._todayMonth,
                    )('startValue', c._selectedMonth)(
                      'endValue',
                      c._selectedMonth,
                    )('labelMinRequiredCells', 2)('numCols', 4)(
                      'cellAspectRatio',
                      4 / 7,
                    )('activeCell', c._dateAdapter.getMonth(c.activeDate)));
              },
              dependencies: [Qt],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        p = 1,
        S = (() => {
          class g {
            constructor(r, c, _, T, _e) {
              (this._intl = r),
                (this.calendar = c),
                (this._dateAdapter = _),
                (this._dateFormats = T),
                (this._id = 'mat-calendar-header-' + p++),
                (this._periodButtonLabelId = `${this._id}-period-label`),
                this.calendar.stateChanges.subscribe(() => _e.markForCheck());
            }
            get periodButtonText() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRange(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonDescription() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRangeLabel(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonLabel() {
              return 'month' == this.calendar.currentView
                ? this._intl.switchToMultiYearViewLabel
                : this._intl.switchToMonthViewLabel;
            }
            get prevButtonLabel() {
              return {
                month: this._intl.prevMonthLabel,
                year: this._intl.prevYearLabel,
                'multi-year': this._intl.prevMultiYearLabel,
              }[this.calendar.currentView];
            }
            get nextButtonLabel() {
              return {
                month: this._intl.nextMonthLabel,
                year: this._intl.nextYearLabel,
                'multi-year': this._intl.nextMultiYearLabel,
              }[this.calendar.currentView];
            }
            currentPeriodClicked() {
              this.calendar.currentView =
                'month' == this.calendar.currentView ? 'multi-year' : 'month';
            }
            previousClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      -1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? -1 : -Di,
                    );
            }
            nextClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? 1 : Di,
                    );
            }
            previousEnabled() {
              return (
                !this.calendar.minDate ||
                !this.calendar.minDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.minDate,
                )
              );
            }
            nextEnabled() {
              return (
                !this.calendar.maxDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.maxDate,
                )
              );
            }
            _isSameView(r, c) {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) ==
                    this._dateAdapter.getYear(c) &&
                    this._dateAdapter.getMonth(r) ==
                      this._dateAdapter.getMonth(c)
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) == this._dateAdapter.getYear(c)
                : _o(
                    this._dateAdapter,
                    r,
                    c,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  );
            }
            _formatMinAndMaxYearLabels() {
              const c =
                  this._dateAdapter.getYear(this.calendar.activeDate) -
                  Mr(
                    this._dateAdapter,
                    this.calendar.activeDate,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  ),
                _ = c + Di - 1;
              return [
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(c, 0, 1),
                ),
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(_, 0, 1),
                ),
              ];
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(w),
                a.Y36((0, a.Gpc)(() => H)),
                a.Y36(ut._A, 8),
                a.Y36(ut.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-calendar-header']],
              exportAs: ['matCalendarHeader'],
              ngContentSelectors: zr,
              decls: 13,
              vars: 11,
              consts: [
                [1, 'mat-calendar-header'],
                [1, 'mat-calendar-controls'],
                [
                  'mat-button',
                  '',
                  'type',
                  'button',
                  'aria-live',
                  'polite',
                  1,
                  'mat-calendar-period-button',
                  3,
                  'click',
                ],
                ['aria-hidden', 'true'],
                [
                  'viewBox',
                  '0 0 10 5',
                  'focusable',
                  'false',
                  'aria-hidden',
                  'true',
                  1,
                  'mat-calendar-arrow',
                ],
                ['points', '0,0 5,5 10,0'],
                [1, 'mat-calendar-spacer'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-previous-button',
                  3,
                  'disabled',
                  'click',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-next-button',
                  3,
                  'disabled',
                  'click',
                ],
                [1, 'mat-calendar-hidden-label', 3, 'id'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(),
                  a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'button', 2),
                  a.NdJ('click', function () {
                    return c.currentPeriodClicked();
                  }),
                  a.TgZ(3, 'span', 3),
                  a._uU(4),
                  a.qZA(),
                  a.O4$(),
                  a.TgZ(5, 'svg', 4),
                  a._UZ(6, 'polygon', 5),
                  a.qZA()(),
                  a.kcU(),
                  a._UZ(7, 'div', 6),
                  a.Hsn(8),
                  a.TgZ(9, 'button', 7),
                  a.NdJ('click', function () {
                    return c.previousClicked();
                  }),
                  a.qZA(),
                  a.TgZ(10, 'button', 8),
                  a.NdJ('click', function () {
                    return c.nextClicked();
                  }),
                  a.qZA()()(),
                  a.TgZ(11, 'label', 9),
                  a._uU(12),
                  a.qZA()),
                  2 & r &&
                    (a.xp6(2),
                    a.uIk('aria-label', c.periodButtonLabel)(
                      'aria-describedby',
                      c._periodButtonLabelId,
                    ),
                    a.xp6(2),
                    a.Oqu(c.periodButtonText),
                    a.xp6(1),
                    a.ekj(
                      'mat-calendar-invert',
                      'month' !== c.calendar.currentView,
                    ),
                    a.xp6(4),
                    a.Q6J('disabled', !c.previousEnabled()),
                    a.uIk('aria-label', c.prevButtonLabel),
                    a.xp6(1),
                    a.Q6J('disabled', !c.nextEnabled()),
                    a.uIk('aria-label', c.nextButtonLabel),
                    a.xp6(1),
                    a.Q6J('id', c._periodButtonLabelId),
                    a.xp6(1),
                    a.Oqu(c.periodButtonDescription));
              },
              dependencies: [je.lW, je.RK],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        H = (() => {
          class g {
            get startAt() {
              return this._startAt;
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              this._selected =
                r instanceof Vi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    );
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get activeDate() {
              return this._clampedActiveDate;
            }
            set activeDate(r) {
              (this._clampedActiveDate = this._dateAdapter.clampDate(
                r,
                this.minDate,
                this.maxDate,
              )),
                this.stateChanges.next(),
                this._changeDetectorRef.markForCheck();
            }
            get currentView() {
              return this._currentView;
            }
            set currentView(r) {
              const c = this._currentView !== r ? r : null;
              (this._currentView = r),
                (this._moveFocusOnNextTick = !0),
                this._changeDetectorRef.markForCheck(),
                c && this.viewChanged.emit(c);
            }
            constructor(r, c, _, T) {
              (this._dateAdapter = c),
                (this._dateFormats = _),
                (this._changeDetectorRef = T),
                (this._moveFocusOnNextTick = !1),
                (this.startView = 'month'),
                (this.selectedChange = new a.vpe()),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this._userSelection = new a.vpe()),
                (this._userDragDrop = new a.vpe()),
                (this._activeDrag = null),
                (this.stateChanges = new Q.x()),
                (this._intlChanges = r.changes.subscribe(() => {
                  T.markForCheck(), this.stateChanges.next();
                }));
            }
            ngAfterContentInit() {
              (this._calendarHeaderPortal = new In.C5(
                this.headerComponent || S,
              )),
                (this.activeDate = this.startAt || this._dateAdapter.today()),
                (this._currentView = this.startView);
            }
            ngAfterViewChecked() {
              this._moveFocusOnNextTick &&
                ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe(), this.stateChanges.complete();
            }
            ngOnChanges(r) {
              const c =
                  r.minDate &&
                  !this._dateAdapter.sameDate(
                    r.minDate.previousValue,
                    r.minDate.currentValue,
                  )
                    ? r.minDate
                    : void 0,
                _ =
                  r.maxDate &&
                  !this._dateAdapter.sameDate(
                    r.maxDate.previousValue,
                    r.maxDate.currentValue,
                  )
                    ? r.maxDate
                    : void 0,
                T = c || _ || r.dateFilter;
              if (T && !T.firstChange) {
                const _e = this._getCurrentViewComponent();
                _e && (this._changeDetectorRef.detectChanges(), _e._init());
              }
              this.stateChanges.next();
            }
            focusActiveCell() {
              this._getCurrentViewComponent()._focusActiveCell(!1);
            }
            updateTodaysDate() {
              this._getCurrentViewComponent()._init();
            }
            _dateSelected(r) {
              const c = r.value;
              (this.selected instanceof Vi ||
                (c && !this._dateAdapter.sameDate(c, this.selected))) &&
                this.selectedChange.emit(c),
                this._userSelection.emit(r);
            }
            _yearSelectedInMultiYearView(r) {
              this.yearSelected.emit(r);
            }
            _monthSelectedInYearView(r) {
              this.monthSelected.emit(r);
            }
            _goToDateInView(r, c) {
              (this.activeDate = r), (this.currentView = c);
            }
            _dragStarted(r) {
              this._activeDrag = r;
            }
            _dragEnded(r) {
              this._activeDrag &&
                (r.value && this._userDragDrop.emit(r),
                (this._activeDrag = null));
            }
            _getCurrentViewComponent() {
              return this.monthView || this.yearView || this.multiYearView;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(w),
                a.Y36(ut._A, 8),
                a.Y36(ut.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-calendar']],
              viewQuery: function (r, c) {
                if ((1 & r && (a.Gf(lo, 5), a.Gf(h, 5), a.Gf(Xo, 5)), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.monthView = _.first),
                    a.iGM((_ = a.CRH())) && (c.yearView = _.first),
                    a.iGM((_ = a.CRH())) && (c.multiYearView = _.first);
                }
              },
              hostAttrs: [1, 'mat-calendar'],
              inputs: {
                headerComponent: 'headerComponent',
                startAt: 'startAt',
                startView: 'startView',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                _userSelection: '_userSelection',
                _userDragDrop: '_userDragDrop',
              },
              exportAs: ['matCalendar'],
              features: [a._Bn([qo]), a.TTD],
              decls: 5,
              vars: 5,
              consts: [
                [3, 'cdkPortalOutlet'],
                [
                  'cdkMonitorSubtreeFocus',
                  '',
                  'tabindex',
                  '-1',
                  1,
                  'mat-calendar-content',
                  3,
                  'ngSwitch',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, $r, 0, 0, 'ng-template', 0),
                  a.TgZ(1, 'div', 1),
                  a.YNc(2, Cr, 1, 11, 'mat-month-view', 2),
                  a.YNc(3, Ei, 1, 6, 'mat-year-view', 3),
                  a.YNc(4, xr, 1, 6, 'mat-multi-year-view', 4),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('cdkPortalOutlet', c._calendarHeaderPortal),
                    a.xp6(1),
                    a.Q6J('ngSwitch', c.currentView),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'month'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'year'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'multi-year'));
              },
              dependencies: [s.RF, s.n9, E.kH, In.Pl, lo, h, Xo],
              styles: [
                '.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}.mat-calendar-hidden-label{display:none}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      const Z = {
        transformPanel: (0, Ut.X$)('transformPanel', [
          (0, Ut.eR)(
            'void => enter-dropdown',
            (0, Ut.jt)(
              '120ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Ut.F4)([
                (0, Ut.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ]),
            ),
          ),
          (0, Ut.eR)(
            'void => enter-dialog',
            (0, Ut.jt)(
              '150ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Ut.F4)([
                (0, Ut.oB)({ opacity: 0, transform: 'scale(0.7)' }),
                (0, Ut.oB)({ transform: 'none', opacity: 1 }),
              ]),
            ),
          ),
          (0, Ut.eR)(
            '* => void',
            (0, Ut.jt)('100ms linear', (0, Ut.oB)({ opacity: 0 })),
          ),
        ]),
        fadeInCalendar: (0, Ut.X$)('fadeInCalendar', [
          (0, Ut.SB)('void', (0, Ut.oB)({ opacity: 0 })),
          (0, Ut.SB)('enter', (0, Ut.oB)({ opacity: 1 })),
          (0, Ut.eR)(
            'void => *',
            (0, Ut.jt)('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ),
        ]),
      };
      let ye = 0;
      const Ee = new a.OlP('mat-datepicker-scroll-strategy'),
        ft = {
          provide: Ee,
          deps: [Pn.aV],
          useFactory: function qe(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        Wt = (0, ut.pj)(
          class {
            constructor(g) {
              this._elementRef = g;
            }
          },
        );
      let Ht = (() => {
          class g extends Wt {
            constructor(r, c, _, T, _e, dt) {
              super(r),
                (this._changeDetectorRef = c),
                (this._globalModel = _),
                (this._dateAdapter = T),
                (this._rangeSelectionStrategy = _e),
                (this._subscriptions = new an.w0()),
                (this._animationDone = new Q.x()),
                (this._isAnimating = !1),
                (this._actionsPortal = null),
                (this._closeButtonText = dt.closeCalendarLabel);
            }
            ngOnInit() {
              this._animationState = this.datepicker.touchUi
                ? 'enter-dialog'
                : 'enter-dropdown';
            }
            ngAfterViewInit() {
              this._subscriptions.add(
                this.datepicker.stateChanges.subscribe(() => {
                  this._changeDetectorRef.markForCheck();
                }),
              ),
                this._calendar.focusActiveCell();
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(), this._animationDone.complete();
            }
            _handleUserSelection(r) {
              const c = this._model.selection,
                _ = r.value,
                T = c instanceof Vi;
              if (T && this._rangeSelectionStrategy) {
                const _e = this._rangeSelectionStrategy.selectionFinished(
                  _,
                  c,
                  r.event,
                );
                this._model.updateSelection(_e, this);
              } else
                _ &&
                  (T || !this._dateAdapter.sameDate(_, c)) &&
                  this._model.add(_);
              (!this._model || this._model.isComplete()) &&
                !this._actionsPortal &&
                this.datepicker.close();
            }
            _handleUserDragDrop(r) {
              this._model.updateSelection(r.value, this);
            }
            _startExitAnimation() {
              (this._animationState = 'void'),
                this._changeDetectorRef.markForCheck();
            }
            _handleAnimationEvent(r) {
              (this._isAnimating = 'start' === r.phaseName),
                this._isAnimating || this._animationDone.next();
            }
            _getSelected() {
              return this._model.selection;
            }
            _applyPendingSelection() {
              this._model !== this._globalModel &&
                this._globalModel.updateSelection(this._model.selection, this);
            }
            _assignActions(r, c) {
              (this._model = r ? this._globalModel.clone() : this._globalModel),
                (this._actionsPortal = r),
                c && this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(or),
                a.Y36(ut._A),
                a.Y36(Mi, 8),
                a.Y36(w),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker-content']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(H, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._calendar = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-content'],
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.WFA('@transformPanel.start', function (T) {
                    return c._handleAnimationEvent(T);
                  })('@transformPanel.done', function (T) {
                    return c._handleAnimationEvent(T);
                  }),
                  2 & r &&
                    (a.d8E('@transformPanel', c._animationState),
                    a.ekj(
                      'mat-datepicker-content-touch',
                      c.datepicker.touchUi,
                    ));
              },
              inputs: { color: 'color' },
              exportAs: ['matDatepickerContent'],
              features: [a.qOj],
              decls: 5,
              vars: 26,
              consts: [
                [
                  'cdkTrapFocus',
                  '',
                  'role',
                  'dialog',
                  1,
                  'mat-datepicker-content-container',
                ],
                [
                  3,
                  'id',
                  'ngClass',
                  'startAt',
                  'startView',
                  'minDate',
                  'maxDate',
                  'dateFilter',
                  'headerComponent',
                  'selected',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'yearSelected',
                  'monthSelected',
                  'viewChanged',
                  '_userSelection',
                  '_userDragDrop',
                ],
                [3, 'cdkPortalOutlet'],
                [
                  'type',
                  'button',
                  'mat-raised-button',
                  '',
                  1,
                  'mat-datepicker-close-button',
                  3,
                  'color',
                  'focus',
                  'blur',
                  'click',
                ],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.TgZ(0, 'div', 0)(1, 'mat-calendar', 1),
                    a.NdJ('yearSelected', function (T) {
                      return c.datepicker._selectYear(T);
                    })('monthSelected', function (T) {
                      return c.datepicker._selectMonth(T);
                    })('viewChanged', function (T) {
                      return c.datepicker._viewChanged(T);
                    })('_userSelection', function (T) {
                      return c._handleUserSelection(T);
                    })('_userDragDrop', function (T) {
                      return c._handleUserDragDrop(T);
                    }),
                    a.qZA(),
                    a.YNc(2, Pr, 0, 0, 'ng-template', 2),
                    a.TgZ(3, 'button', 3),
                    a.NdJ('focus', function () {
                      return (c._closeButtonFocused = !0);
                    })('blur', function () {
                      return (c._closeButtonFocused = !1);
                    })('click', function () {
                      return c.datepicker.close();
                    }),
                    a._uU(4),
                    a.qZA()()),
                  2 & r)
                ) {
                  let _;
                  a.ekj(
                    'mat-datepicker-content-container-with-custom-header',
                    c.datepicker.calendarHeaderComponent,
                  )(
                    'mat-datepicker-content-container-with-actions',
                    c._actionsPortal,
                  ),
                    a.uIk('aria-modal', !0)(
                      'aria-labelledby',
                      null !== (_ = c._dialogLabelId) && void 0 !== _
                        ? _
                        : void 0,
                    ),
                    a.xp6(1),
                    a.Q6J('id', c.datepicker.id)(
                      'ngClass',
                      c.datepicker.panelClass,
                    )('startAt', c.datepicker.startAt)(
                      'startView',
                      c.datepicker.startView,
                    )('minDate', c.datepicker._getMinDate())(
                      'maxDate',
                      c.datepicker._getMaxDate(),
                    )('dateFilter', c.datepicker._getDateFilter())(
                      'headerComponent',
                      c.datepicker.calendarHeaderComponent,
                    )('selected', c._getSelected())(
                      'dateClass',
                      c.datepicker.dateClass,
                    )('comparisonStart', c.comparisonStart)(
                      'comparisonEnd',
                      c.comparisonEnd,
                    )('@fadeInCalendar', 'enter')(
                      'startDateAccessibleName',
                      c.startDateAccessibleName,
                    )('endDateAccessibleName', c.endDateAccessibleName),
                    a.xp6(1),
                    a.Q6J('cdkPortalOutlet', c._actionsPortal),
                    a.xp6(1),
                    a.ekj('cdk-visually-hidden', !c._closeButtonFocused),
                    a.Q6J('color', c.color || 'primary'),
                    a.xp6(1),
                    a.Oqu(c._closeButtonText);
                }
              },
              dependencies: [s.mk, je.lW, E.mK, In.Pl, H],
              styles: [
                '.mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}',
              ],
              encapsulation: 2,
              data: { animation: [Z.transformPanel, Z.fadeInCalendar] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        yn = (() => {
          class g {
            get startAt() {
              return (
                this._startAt ||
                (this.datepickerInput
                  ? this.datepickerInput.getStartValue()
                  : null)
              );
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get color() {
              return (
                this._color ||
                (this.datepickerInput
                  ? this.datepickerInput.getThemePalette()
                  : void 0)
              );
            }
            set color(r) {
              this._color = r;
            }
            get touchUi() {
              return this._touchUi;
            }
            set touchUi(r) {
              this._touchUi = (0, nt.Ig)(r);
            }
            get disabled() {
              return void 0 === this._disabled && this.datepickerInput
                ? this.datepickerInput.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              const c = (0, nt.Ig)(r);
              c !== this._disabled &&
                ((this._disabled = c), this.stateChanges.next(void 0));
            }
            get restoreFocus() {
              return this._restoreFocus;
            }
            set restoreFocus(r) {
              this._restoreFocus = (0, nt.Ig)(r);
            }
            get panelClass() {
              return this._panelClass;
            }
            set panelClass(r) {
              this._panelClass = (0, nt.du)(r);
            }
            get opened() {
              return this._opened;
            }
            set opened(r) {
              (0, nt.Ig)(r) ? this.open() : this.close();
            }
            _getMinDate() {
              return this.datepickerInput && this.datepickerInput.min;
            }
            _getMaxDate() {
              return this.datepickerInput && this.datepickerInput.max;
            }
            _getDateFilter() {
              return this.datepickerInput && this.datepickerInput.dateFilter;
            }
            constructor(r, c, _, T, _e, dt, rn) {
              (this._overlay = r),
                (this._ngZone = c),
                (this._viewContainerRef = _),
                (this._dateAdapter = _e),
                (this._dir = dt),
                (this._model = rn),
                (this._inputStateChanges = an.w0.EMPTY),
                (this._document = (0, a.f3M)(s.K0)),
                (this.startView = 'month'),
                (this._touchUi = !1),
                (this.xPosition = 'start'),
                (this.yPosition = 'below'),
                (this._restoreFocus = !0),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this.openedStream = new a.vpe()),
                (this.closedStream = new a.vpe()),
                (this._opened = !1),
                (this.id = 'mat-datepicker-' + ye++),
                (this._focusedElementBeforeOpen = null),
                (this._backdropHarnessClass = `${this.id}-backdrop`),
                (this.stateChanges = new Q.x()),
                (this._scrollStrategy = T);
            }
            ngOnChanges(r) {
              const c = r.xPosition || r.yPosition;
              if (c && !c.firstChange && this._overlayRef) {
                const _ = this._overlayRef.getConfig().positionStrategy;
                _ instanceof Pn._G &&
                  (this._setConnectedPositions(_),
                  this.opened && this._overlayRef.updatePosition());
              }
              this.stateChanges.next(void 0);
            }
            ngOnDestroy() {
              this._destroyOverlay(),
                this.close(),
                this._inputStateChanges.unsubscribe(),
                this.stateChanges.complete();
            }
            select(r) {
              this._model.add(r);
            }
            _selectYear(r) {
              this.yearSelected.emit(r);
            }
            _selectMonth(r) {
              this.monthSelected.emit(r);
            }
            _viewChanged(r) {
              this.viewChanged.emit(r);
            }
            registerInput(r) {
              return (
                this._inputStateChanges.unsubscribe(),
                (this.datepickerInput = r),
                (this._inputStateChanges = r.stateChanges.subscribe(() =>
                  this.stateChanges.next(void 0),
                )),
                this._model
              );
            }
            registerActions(r) {
              (this._actionsPortal = r),
                this._componentRef?.instance._assignActions(r, !0);
            }
            removeActions(r) {
              r === this._actionsPortal &&
                ((this._actionsPortal = null),
                this._componentRef?.instance._assignActions(null, !0));
            }
            open() {
              this._opened ||
                this.disabled ||
                this._componentRef?.instance._isAnimating ||
                ((this._focusedElementBeforeOpen = (0, ir.ht)()),
                this._openOverlay(),
                (this._opened = !0),
                this.openedStream.emit());
            }
            close() {
              if (!this._opened || this._componentRef?.instance._isAnimating)
                return;
              const r =
                  this._restoreFocus &&
                  this._focusedElementBeforeOpen &&
                  'function' == typeof this._focusedElementBeforeOpen.focus,
                c = () => {
                  this._opened &&
                    ((this._opened = !1), this.closedStream.emit());
                };
              if (this._componentRef) {
                const { instance: _, location: T } = this._componentRef;
                _._startExitAnimation(),
                  _._animationDone.pipe((0, Jt.q)(1)).subscribe(() => {
                    const _e = this._document.activeElement;
                    r &&
                      (!_e ||
                        _e === this._document.activeElement ||
                        T.nativeElement.contains(_e)) &&
                      this._focusedElementBeforeOpen.focus(),
                      (this._focusedElementBeforeOpen = null),
                      this._destroyOverlay();
                  });
              }
              r ? setTimeout(c) : c();
            }
            _applyPendingSelection() {
              this._componentRef?.instance?._applyPendingSelection();
            }
            _forwardContentValues(r) {
              (r.datepicker = this),
                (r.color = this.color),
                (r._dialogLabelId = this.datepickerInput.getOverlayLabelId()),
                r._assignActions(this._actionsPortal, !1);
            }
            _openOverlay() {
              this._destroyOverlay();
              const r = this.touchUi,
                c = new In.C5(Ht, this._viewContainerRef),
                _ = (this._overlayRef = this._overlay.create(
                  new Pn.X_({
                    positionStrategy: r
                      ? this._getDialogStrategy()
                      : this._getDropdownStrategy(),
                    hasBackdrop: !0,
                    backdropClass: [
                      r
                        ? 'cdk-overlay-dark-backdrop'
                        : 'mat-overlay-transparent-backdrop',
                      this._backdropHarnessClass,
                    ],
                    direction: this._dir,
                    scrollStrategy: r
                      ? this._overlay.scrollStrategies.block()
                      : this._scrollStrategy(),
                    panelClass: 'mat-datepicker-' + (r ? 'dialog' : 'popup'),
                  }),
                ));
              this._getCloseStream(_).subscribe(T => {
                T && T.preventDefault(), this.close();
              }),
                _.keydownEvents().subscribe(T => {
                  const _e = T.keyCode;
                  (_e === V.LH ||
                    _e === V.JH ||
                    _e === V.oh ||
                    _e === V.SV ||
                    _e === V.Ku ||
                    _e === V.VM) &&
                    T.preventDefault();
                }),
                (this._componentRef = _.attach(c)),
                this._forwardContentValues(this._componentRef.instance),
                r ||
                  this._ngZone.onStable
                    .pipe((0, Jt.q)(1))
                    .subscribe(() => _.updatePosition());
            }
            _destroyOverlay() {
              this._overlayRef &&
                (this._overlayRef.dispose(),
                (this._overlayRef = this._componentRef = null));
            }
            _getDialogStrategy() {
              return this._overlay
                .position()
                .global()
                .centerHorizontally()
                .centerVertically();
            }
            _getDropdownStrategy() {
              const r = this._overlay
                .position()
                .flexibleConnectedTo(
                  this.datepickerInput.getConnectedOverlayOrigin(),
                )
                .withTransformOriginOn('.mat-datepicker-content')
                .withFlexibleDimensions(!1)
                .withViewportMargin(8)
                .withLockedPosition();
              return this._setConnectedPositions(r);
            }
            _setConnectedPositions(r) {
              const c = 'end' === this.xPosition ? 'end' : 'start',
                _ = 'start' === c ? 'end' : 'start',
                T = 'above' === this.yPosition ? 'bottom' : 'top',
                _e = 'top' === T ? 'bottom' : 'top';
              return r.withPositions([
                { originX: c, originY: _e, overlayX: c, overlayY: T },
                { originX: c, originY: T, overlayX: c, overlayY: _e },
                { originX: _, originY: _e, overlayX: _, overlayY: T },
                { originX: _, originY: T, overlayX: _, overlayY: _e },
              ]);
            }
            _getCloseStream(r) {
              const c = ['ctrlKey', 'shiftKey', 'metaKey'];
              return (0, We.T)(
                r.backdropClick(),
                r.detachments(),
                r
                  .keydownEvents()
                  .pipe(
                    (0, At.h)(
                      _ =>
                        (_.keyCode === V.hY && !(0, V.Vb)(_)) ||
                        (this.datepickerInput &&
                          (0, V.Vb)(_, 'altKey') &&
                          _.keyCode === V.LH &&
                          c.every(T => !(0, V.Vb)(_, T))),
                    ),
                  ),
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(Pn.aV),
                a.Y36(a.R0b),
                a.Y36(a.s_b),
                a.Y36(Ee),
                a.Y36(ut._A, 8),
                a.Y36(qn.Is, 8),
                a.Y36(or),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              inputs: {
                calendarHeaderComponent: 'calendarHeaderComponent',
                startAt: 'startAt',
                startView: 'startView',
                color: 'color',
                touchUi: 'touchUi',
                disabled: 'disabled',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                restoreFocus: 'restoreFocus',
                dateClass: 'dateClass',
                panelClass: 'panelClass',
                opened: 'opened',
              },
              outputs: {
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                openedStream: 'opened',
                closedStream: 'closed',
              },
              features: [a.TTD],
            })),
            g
          );
        })(),
        nn = (() => {
          class g extends yn {}
          return (
            (g.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker']],
              exportAs: ['matDatepicker'],
              features: [a._Bn([qo, { provide: yn, useExisting: g }]), a.qOj],
              decls: 0,
              vars: 0,
              template: function (r, c) {},
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })();
      class cn {
        constructor(F, r) {
          (this.target = F),
            (this.targetElement = r),
            (this.value = this.target.value);
        }
      }
      let xn = (() => {
        class g {
          get value() {
            return this._model
              ? this._getValueFromModel(this._model.selection)
              : this._pendingValue;
          }
          set value(r) {
            this._assignValueProgrammatically(r);
          }
          get disabled() {
            return !!this._disabled || this._parentDisabled();
          }
          set disabled(r) {
            const c = (0, nt.Ig)(r),
              _ = this._elementRef.nativeElement;
            this._disabled !== c &&
              ((this._disabled = c), this.stateChanges.next(void 0)),
              c && this._isInitialized && _.blur && _.blur();
          }
          _getValidators() {
            return [
              this._parseValidator,
              this._minValidator,
              this._maxValidator,
              this._filterValidator,
            ];
          }
          _registerModel(r) {
            (this._model = r),
              this._valueChangesSubscription.unsubscribe(),
              this._pendingValue && this._assignValue(this._pendingValue),
              (this._valueChangesSubscription =
                this._model.selectionChanged.subscribe(c => {
                  if (this._shouldHandleChangeEvent(c)) {
                    const _ = this._getValueFromModel(c.selection);
                    (this._lastValueValid = this._isValidValue(_)),
                      this._cvaOnChange(_),
                      this._onTouched(),
                      this._formatValue(_),
                      this.dateInput.emit(
                        new cn(this, this._elementRef.nativeElement),
                      ),
                      this.dateChange.emit(
                        new cn(this, this._elementRef.nativeElement),
                      );
                  }
                }));
          }
          constructor(r, c, _) {
            (this._elementRef = r),
              (this._dateAdapter = c),
              (this._dateFormats = _),
              (this.dateChange = new a.vpe()),
              (this.dateInput = new a.vpe()),
              (this.stateChanges = new Q.x()),
              (this._onTouched = () => {}),
              (this._validatorOnChange = () => {}),
              (this._cvaOnChange = () => {}),
              (this._valueChangesSubscription = an.w0.EMPTY),
              (this._localeSubscription = an.w0.EMPTY),
              (this._parseValidator = () =>
                this._lastValueValid
                  ? null
                  : {
                      matDatepickerParse: {
                        text: this._elementRef.nativeElement.value,
                      },
                    }),
              (this._filterValidator = T => {
                const _e = this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(T.value),
                );
                return !_e || this._matchesFilter(_e)
                  ? null
                  : { matDatepickerFilter: !0 };
              }),
              (this._minValidator = T => {
                const _e = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(T.value),
                  ),
                  dt = this._getMinDate();
                return !dt || !_e || this._dateAdapter.compareDate(dt, _e) <= 0
                  ? null
                  : { matDatepickerMin: { min: dt, actual: _e } };
              }),
              (this._maxValidator = T => {
                const _e = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(T.value),
                  ),
                  dt = this._getMaxDate();
                return !dt || !_e || this._dateAdapter.compareDate(dt, _e) >= 0
                  ? null
                  : { matDatepickerMax: { max: dt, actual: _e } };
              }),
              (this._lastValueValid = !1),
              (this._localeSubscription = c.localeChanges.subscribe(() => {
                this._assignValueProgrammatically(this.value);
              }));
          }
          ngAfterViewInit() {
            this._isInitialized = !0;
          }
          ngOnChanges(r) {
            (function zn(g, F) {
              const r = Object.keys(g);
              for (let c of r) {
                const { previousValue: _, currentValue: T } = g[c];
                if (!F.isDateInstance(_) || !F.isDateInstance(T)) return !0;
                if (!F.sameDate(_, T)) return !0;
              }
              return !1;
            })(r, this._dateAdapter) && this.stateChanges.next(void 0);
          }
          ngOnDestroy() {
            this._valueChangesSubscription.unsubscribe(),
              this._localeSubscription.unsubscribe(),
              this.stateChanges.complete();
          }
          registerOnValidatorChange(r) {
            this._validatorOnChange = r;
          }
          validate(r) {
            return this._validator ? this._validator(r) : null;
          }
          writeValue(r) {
            this._assignValueProgrammatically(r);
          }
          registerOnChange(r) {
            this._cvaOnChange = r;
          }
          registerOnTouched(r) {
            this._onTouched = r;
          }
          setDisabledState(r) {
            this.disabled = r;
          }
          _onKeydown(r) {
            (0, V.Vb)(r, 'altKey') &&
              r.keyCode === V.JH &&
              ['ctrlKey', 'shiftKey', 'metaKey'].every(T => !(0, V.Vb)(r, T)) &&
              !this._elementRef.nativeElement.readOnly &&
              (this._openPopup(), r.preventDefault());
          }
          _onInput(r) {
            const c = this._lastValueValid;
            let _ = this._dateAdapter.parse(
              r,
              this._dateFormats.parse.dateInput,
            );
            (this._lastValueValid = this._isValidValue(_)),
              (_ = this._dateAdapter.getValidDateOrNull(_));
            const T = !this._dateAdapter.sameDate(_, this.value);
            !_ || T
              ? this._cvaOnChange(_)
              : (r && !this.value && this._cvaOnChange(_),
                c !== this._lastValueValid && this._validatorOnChange()),
              T &&
                (this._assignValue(_),
                this.dateInput.emit(
                  new cn(this, this._elementRef.nativeElement),
                ));
          }
          _onChange() {
            this.dateChange.emit(new cn(this, this._elementRef.nativeElement));
          }
          _onBlur() {
            this.value && this._formatValue(this.value), this._onTouched();
          }
          _formatValue(r) {
            this._elementRef.nativeElement.value =
              null != r
                ? this._dateAdapter.format(
                    r,
                    this._dateFormats.display.dateInput,
                  )
                : '';
          }
          _assignValue(r) {
            this._model
              ? (this._assignValueToModel(r), (this._pendingValue = null))
              : (this._pendingValue = r);
          }
          _isValidValue(r) {
            return !r || this._dateAdapter.isValid(r);
          }
          _parentDisabled() {
            return !1;
          }
          _assignValueProgrammatically(r) {
            (r = this._dateAdapter.deserialize(r)),
              (this._lastValueValid = this._isValidValue(r)),
              (r = this._dateAdapter.getValidDateOrNull(r)),
              this._assignValue(r),
              this._formatValue(r);
          }
          _matchesFilter(r) {
            const c = this._getDateFilter();
            return !c || c(r);
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36(a.SBq), a.Y36(ut._A, 8), a.Y36(ut.sG, 8));
          }),
          (g.ɵdir = a.lG2({
            type: g,
            inputs: { value: 'value', disabled: 'disabled' },
            outputs: { dateChange: 'dateChange', dateInput: 'dateInput' },
            features: [a.TTD],
          })),
          g
        );
      })();
      const Qn = {
          provide: Bn.JU,
          useExisting: (0, a.Gpc)(() => Ti),
          multi: !0,
        },
        wi = { provide: Bn.Cf, useExisting: (0, a.Gpc)(() => Ti), multi: !0 };
      let Ti = (() => {
          class g extends xn {
            set matDatepicker(r) {
              r &&
                ((this._datepicker = r),
                (this._closedSubscription = r.closedStream.subscribe(() =>
                  this._onTouched(),
                )),
                this._registerModel(r.registerInput(this)));
            }
            get min() {
              return this._min;
            }
            set min(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._min) ||
                ((this._min = c), this._validatorOnChange());
            }
            get max() {
              return this._max;
            }
            set max(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._max) ||
                ((this._max = c), this._validatorOnChange());
            }
            get dateFilter() {
              return this._dateFilter;
            }
            set dateFilter(r) {
              const c = this._matchesFilter(this.value);
              (this._dateFilter = r),
                this._matchesFilter(this.value) !== c &&
                  this._validatorOnChange();
            }
            constructor(r, c, _, T) {
              super(r, c, _),
                (this._formField = T),
                (this._closedSubscription = an.w0.EMPTY),
                (this._validator = Bn.kI.compose(super._getValidators()));
            }
            getConnectedOverlayOrigin() {
              return this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._elementRef;
            }
            getOverlayLabelId() {
              return this._formField
                ? this._formField.getLabelId()
                : this._elementRef.nativeElement.getAttribute(
                    'aria-labelledby',
                  );
            }
            getThemePalette() {
              return this._formField ? this._formField.color : void 0;
            }
            getStartValue() {
              return this.value;
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this._closedSubscription.unsubscribe();
            }
            _openPopup() {
              this._datepicker && this._datepicker.open();
            }
            _getValueFromModel(r) {
              return r;
            }
            _assignValueToModel(r) {
              this._model && this._model.updateSelection(r, this);
            }
            _getMinDate() {
              return this._min;
            }
            _getMaxDate() {
              return this._max;
            }
            _getDateFilter() {
              return this._dateFilter;
            }
            _shouldHandleChangeEvent(r) {
              return r.source !== this;
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(ut._A, 8),
                a.Y36(ut.sG, 8),
                a.Y36(Yi.G_, 8),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [['input', 'matDatepicker', '']],
              hostAttrs: [1, 'mat-datepicker-input'],
              hostVars: 6,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('input', function (T) {
                    return c._onInput(T.target.value);
                  })('change', function () {
                    return c._onChange();
                  })('blur', function () {
                    return c._onBlur();
                  })('keydown', function (T) {
                    return c._onKeydown(T);
                  }),
                  2 & r &&
                    (a.Ikx('disabled', c.disabled),
                    a.uIk('aria-haspopup', c._datepicker ? 'dialog' : null)(
                      'aria-owns',
                      ((null == c._datepicker ? null : c._datepicker.opened) &&
                        c._datepicker.id) ||
                        null,
                    )('min', c.min ? c._dateAdapter.toIso8601(c.min) : null)(
                      'max',
                      c.max ? c._dateAdapter.toIso8601(c.max) : null,
                    )(
                      'data-mat-calendar',
                      c._datepicker ? c._datepicker.id : null,
                    ));
              },
              inputs: {
                matDatepicker: 'matDatepicker',
                min: 'min',
                max: 'max',
                dateFilter: ['matDatepickerFilter', 'dateFilter'],
              },
              exportAs: ['matDatepickerInput'],
              features: [
                a._Bn([Qn, wi, { provide: bi.Jk, useExisting: g }]),
                a.qOj,
              ],
            })),
            g
          );
        })(),
        di = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              selectors: [['', 'matDatepickerToggleIcon', '']],
            })),
            g
          );
        })(),
        wr = (() => {
          class g {
            get disabled() {
              return void 0 === this._disabled && this.datepicker
                ? this.datepicker.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              this._disabled = (0, nt.Ig)(r);
            }
            constructor(r, c, _) {
              (this._intl = r),
                (this._changeDetectorRef = c),
                (this._stateChanges = an.w0.EMPTY);
              const T = Number(_);
              this.tabIndex = T || 0 === T ? T : null;
            }
            ngOnChanges(r) {
              r.datepicker && this._watchStateChanges();
            }
            ngOnDestroy() {
              this._stateChanges.unsubscribe();
            }
            ngAfterContentInit() {
              this._watchStateChanges();
            }
            _open(r) {
              this.datepicker &&
                !this.disabled &&
                (this.datepicker.open(), r.stopPropagation());
            }
            _watchStateChanges() {
              const r = this.datepicker
                  ? this.datepicker.stateChanges
                  : (0, Lt.of)(),
                c =
                  this.datepicker && this.datepicker.datepickerInput
                    ? this.datepicker.datepickerInput.stateChanges
                    : (0, Lt.of)(),
                _ = this.datepicker
                  ? (0, We.T)(
                      this.datepicker.openedStream,
                      this.datepicker.closedStream,
                    )
                  : (0, Lt.of)();
              this._stateChanges.unsubscribe(),
                (this._stateChanges = (0, We.T)(
                  this._intl.changes,
                  r,
                  c,
                  _,
                ).subscribe(() => this._changeDetectorRef.markForCheck()));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36(w), a.Y36(a.sBO), a.$8M('tabindex'));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-datepicker-toggle']],
              contentQueries: function (r, c, _) {
                if ((1 & r && a.Suo(_, di, 5), 2 & r)) {
                  let T;
                  a.iGM((T = a.CRH())) && (c._customIcon = T.first);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(Ao, 5), 2 & r)) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._button = _.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-toggle'],
              hostVars: 8,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (T) {
                    return c._open(T);
                  }),
                  2 & r &&
                    (a.uIk('tabindex', null)(
                      'data-mat-calendar',
                      c.datepicker ? c.datepicker.id : null,
                    ),
                    a.ekj(
                      'mat-datepicker-toggle-active',
                      c.datepicker && c.datepicker.opened,
                    )(
                      'mat-accent',
                      c.datepicker && 'accent' === c.datepicker.color,
                    )(
                      'mat-warn',
                      c.datepicker && 'warn' === c.datepicker.color,
                    ));
              },
              inputs: {
                datepicker: ['for', 'datepicker'],
                tabIndex: 'tabIndex',
                ariaLabel: ['aria-label', 'ariaLabel'],
                disabled: 'disabled',
                disableRipple: 'disableRipple',
              },
              exportAs: ['matDatepickerToggle'],
              features: [a.TTD],
              ngContentSelectors: ao,
              decls: 4,
              vars: 6,
              consts: [
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  3,
                  'disabled',
                  'disableRipple',
                ],
                ['button', ''],
                [
                  'class',
                  'mat-datepicker-toggle-default-icon',
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  4,
                  'ngIf',
                ],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  1,
                  'mat-datepicker-toggle-default-icon',
                ],
                [
                  'd',
                  'M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(Nr),
                  a.TgZ(0, 'button', 0, 1),
                  a.YNc(2, Bi, 2, 0, 'svg', 2),
                  a.Hsn(3),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('disabled', c.disabled)(
                      'disableRipple',
                      c.disableRipple,
                    ),
                    a.uIk('aria-haspopup', c.datepicker ? 'dialog' : null)(
                      'aria-label',
                      c.ariaLabel || c._intl.openCalendarLabel,
                    )('tabindex', c.disabled ? -1 : c.tabIndex),
                    a.xp6(2),
                    a.Q6J('ngIf', !c._customIcon));
              },
              dependencies: [s.O5, je.RK],
              styles: [
                '.mat-datepicker-toggle{pointer-events:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        ui = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [w, ft],
              imports: [s.ez, je.ot, Pn.U8, E.rt, In.eL, ut.BQ, Wn.ZD],
            })),
            g
          );
        })();
      class lr {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(F = !1, r, c = !0, _) {
          (this._multiple = F),
            (this._emitChanges = c),
            (this.compareWith = _),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new Q.x()),
            r &&
              r.length &&
              (F
                ? r.forEach(T => this._markSelected(T))
                : this._markSelected(r[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...F) {
          this._verifyValueAssignment(F), F.forEach(c => this._markSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        deselect(...F) {
          this._verifyValueAssignment(F),
            F.forEach(c => this._unmarkSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        setSelection(...F) {
          this._verifyValueAssignment(F);
          const r = this.selected,
            c = new Set(F);
          F.forEach(T => this._markSelected(T)),
            r.filter(T => !c.has(T)).forEach(T => this._unmarkSelected(T));
          const _ = this._hasQueuedChanges();
          return this._emitChangeEvent(), _;
        }
        toggle(F) {
          return this.isSelected(F) ? this.deselect(F) : this.select(F);
        }
        clear(F = !0) {
          this._unmarkAll();
          const r = this._hasQueuedChanges();
          return F && this._emitChangeEvent(), r;
        }
        isSelected(F) {
          return this._selection.has(this._getConcreteValue(F));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(F) {
          this._multiple && this.selected && this._selected.sort(F);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(F) {
          (F = this._getConcreteValue(F)),
            this.isSelected(F) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(F) || this._selection.add(F),
              this._emitChanges && this._selectedToEmit.push(F));
        }
        _unmarkSelected(F) {
          (F = this._getConcreteValue(F)),
            this.isSelected(F) &&
              (this._selection.delete(F),
              this._emitChanges && this._deselectedToEmit.push(F));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach(F => this._unmarkSelected(F));
        }
        _verifyValueAssignment(F) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(F) {
          if (this.compareWith) {
            for (let r of this._selection) if (this.compareWith(F, r)) return r;
            return F;
          }
          return F;
        }
      }
      var zs = C(1884);
      const Jo = ['trigger'],
        ba = ['panel'];
      function Kr(g, F) {
        if ((1 & g && (a.TgZ(0, 'span', 10), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw();
          a.xp6(1), a.Oqu(r.placeholder);
        }
      }
      function Ds(g, F) {
        if ((1 & g && (a.TgZ(0, 'span', 14), a._uU(1), a.qZA()), 2 & g)) {
          const r = a.oxw(2);
          a.xp6(1), a.Oqu(r.triggerValue);
        }
      }
      function us(g, F) {
        1 & g && a.Hsn(0, 0, ['*ngSwitchCase', 'true']);
      }
      function Cs(g, F) {
        if (
          (1 & g &&
            (a.TgZ(0, 'span', 11),
            a.YNc(1, Ds, 2, 1, 'span', 12),
            a.YNc(2, us, 1, 0, 'ng-content', 13),
            a.qZA()),
          2 & g)
        ) {
          const r = a.oxw();
          a.Q6J('ngSwitch', !!r.customTrigger),
            a.xp6(2),
            a.Q6J('ngSwitchCase', !0);
        }
      }
      function $s(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.O4$(),
            a.kcU(),
            a.TgZ(0, 'div', 15, 16),
            a.NdJ('@transformPanel.done', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._panelDoneAnimatingStream.next(_.toState));
            })('keydown', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._handleKeydown(_));
            }),
            a.Hsn(2, 1),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Gre(
            'mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ',
            r._getPanelTheme(),
            '',
          ),
            a.Q6J('ngClass', r.panelClass)('@transformPanel', 'showing'),
            a.uIk('id', r.id + '-panel')('aria-multiselectable', r.multiple)(
              'aria-label',
              r.ariaLabel || null,
            )('aria-labelledby', r._getPanelAriaLabelledby());
        }
      }
      const xs = [[['mat-select-trigger']], '*'],
        tr = ['mat-select-trigger', '*'],
        ya = {
          transformPanelWrap: (0, Ut.X$)('transformPanelWrap', [
            (0, Ut.eR)(
              '* => void',
              (0, Ut.IO)('@transformPanel', [(0, Ut.pV)()], { optional: !0 }),
            ),
          ]),
          transformPanel: (0, Ut.X$)('transformPanel', [
            (0, Ut.SB)(
              'void',
              (0, Ut.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
            ),
            (0, Ut.eR)(
              'void => showing',
              (0, Ut.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ),
            ),
            (0, Ut.eR)(
              '* => void',
              (0, Ut.jt)('100ms linear', (0, Ut.oB)({ opacity: 0 })),
            ),
          ]),
        };
      let fs = 0;
      const xa = new a.OlP('mat-select-scroll-strategy'),
        Io = new a.OlP('MAT_SELECT_CONFIG'),
        Ms = {
          provide: xa,
          deps: [Pn.aV],
          useFactory: function Es(g) {
            return () => g.scrollStrategies.reposition();
          },
        },
        ws = new a.OlP('MatSelectTrigger');
      class hr {
        constructor(F, r) {
          (this.source = F), (this.value = r);
        }
      }
      const Ho = (0, ut.Kr)(
        (0, ut.sb)(
          (0, ut.Id)(
            (0, ut.FD)(
              class {
                constructor(g, F, r, c, _) {
                  (this._elementRef = g),
                    (this._defaultErrorStateMatcher = F),
                    (this._parentForm = r),
                    (this._parentFormGroup = c),
                    (this.ngControl = _),
                    (this.stateChanges = new Q.x());
                }
              },
            ),
          ),
        ),
      );
      let Uo = (() => {
          class g extends Ho {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(r) {
              (this._placeholder = r), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(Bn.kI.required) ??
                !1
              );
            }
            set required(r) {
              (this._required = (0, nt.Ig)(r)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(r) {
              this._multiple = (0, nt.Ig)(r);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(r) {
              this._disableOptionCentering = (0, nt.Ig)(r);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(r) {
              (this._compareWith = r),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(r) {
              this._assignValue(r) && this._onChange(r);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(r) {
              this._typeaheadDebounceInterval = (0, nt.su)(r);
            }
            get id() {
              return this._id;
            }
            set id(r) {
              (this._id = r || this._uid), this.stateChanges.next();
            }
            constructor(r, c, _, T, _e, dt, rn, On, jn, Ri, Oo, Ks, ka, ol) {
              super(_e, T, rn, On, Ri),
                (this._viewportRuler = r),
                (this._changeDetectorRef = c),
                (this._ngZone = _),
                (this._dir = dt),
                (this._parentFormField = jn),
                (this._liveAnnouncer = ka),
                (this._defaultOptions = ol),
                (this._panelOpen = !1),
                (this._compareWith = (Ro, Rs) => Ro === Rs),
                (this._uid = 'mat-select-' + fs++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new Q.x()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + fs++),
                (this._panelDoneAnimatingStream = new Q.x()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = (0, Hn.P)(() => {
                  const Ro = this.options;
                  return Ro
                    ? Ro.changes.pipe(
                        (0, Gt.O)(Ro),
                        (0, zt.w)(() =>
                          (0, We.T)(...Ro.map(Rs => Rs.onSelectionChange)),
                        ),
                      )
                    : this._ngZone.onStable.pipe(
                        (0, Jt.q)(1),
                        (0, zt.w)(() => this.optionSelectionChanges),
                      );
                })),
                (this.openedChange = new a.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  (0, At.h)(Ro => Ro),
                  (0, Kt.U)(() => {}),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, At.h)(Ro => !Ro),
                  (0, Kt.U)(() => {}),
                )),
                (this.selectionChange = new a.vpe()),
                (this.valueChange = new a.vpe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != ol?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    ol.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = Ks),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(Oo) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new lr(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe((0, zs.x)(), (0, Bt.R)(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe((0, Bt.R)(this._destroy))
                  .subscribe(r => {
                    r.added.forEach(c => c.select()),
                      r.removed.forEach(c => c.deselect());
                  }),
                this.options.changes
                  .pipe((0, Gt.O)(null), (0, Bt.R)(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const r = this._getTriggerAriaLabelledby(),
                c = this.ngControl;
              if (r !== this._triggerAriaLabelledBy) {
                const _ = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = r),
                  r
                    ? _.setAttribute('aria-labelledby', r)
                    : _.removeAttribute('aria-labelledby');
              }
              c &&
                (this._previousControl !== c.control &&
                  (void 0 !== this._previousControl &&
                    null !== c.disabled &&
                    c.disabled !== this.disabled &&
                    (this.disabled = c.disabled),
                  (this._previousControl = c.control)),
                this.updateErrorState());
            }
            ngOnChanges(r) {
              (r.disabled || r.userAriaDescribedBy) && this.stateChanges.next(),
                r.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval,
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? 'rtl' : 'ltr',
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(r) {
              this._assignValue(r);
            }
            registerOnChange(r) {
              this._onChange = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              (this.disabled = r),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const r = this._selectionModel.selected.map(c => c.viewValue);
                return this._isRtl() && r.reverse(), r.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(r) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(r)
                  : this._handleClosedKeydown(r));
            }
            _handleClosedKeydown(r) {
              const c = r.keyCode,
                _ = c === V.JH || c === V.LH || c === V.oh || c === V.SV,
                T = c === V.K5 || c === V.L_,
                _e = this._keyManager;
              if (
                (!_e.isTyping() && T && !(0, V.Vb)(r)) ||
                ((this.multiple || r.altKey) && _)
              )
                r.preventDefault(), this.open();
              else if (!this.multiple) {
                const dt = this.selected;
                _e.onKeydown(r);
                const rn = this.selected;
                rn &&
                  dt !== rn &&
                  this._liveAnnouncer.announce(rn.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(r) {
              const c = this._keyManager,
                _ = r.keyCode,
                T = _ === V.JH || _ === V.LH,
                _e = c.isTyping();
              if (T && r.altKey) r.preventDefault(), this.close();
              else if (
                _e ||
                (_ !== V.K5 && _ !== V.L_) ||
                !c.activeItem ||
                (0, V.Vb)(r)
              )
                if (!_e && this._multiple && _ === V.A && r.ctrlKey) {
                  r.preventDefault();
                  const dt = this.options.some(
                    rn => !rn.disabled && !rn.selected,
                  );
                  this.options.forEach(rn => {
                    rn.disabled || (dt ? rn.select() : rn.deselect());
                  });
                } else {
                  const dt = c.activeItemIndex;
                  c.onKeydown(r),
                    this._multiple &&
                      T &&
                      r.shiftKey &&
                      c.activeItem &&
                      c.activeItemIndex !== dt &&
                      c.activeItem._selectViaInteraction();
                }
              else r.preventDefault(), c.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange
                .pipe((0, Jt.q)(1))
                .subscribe(() => {
                  this._changeDetectorRef.detectChanges(),
                    this._positioningSettled();
                });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(r) {
              if (
                (this.options.forEach(c => c.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && r)
              )
                Array.isArray(r),
                  r.forEach(c => this._selectOptionByValue(c)),
                  this._sortValues();
              else {
                const c = this._selectOptionByValue(r);
                c
                  ? this._keyManager.updateActiveItem(c)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(r) {
              const c = this.options.find(_ => {
                if (this._selectionModel.isSelected(_)) return !1;
                try {
                  return null != _.value && this._compareWith(_.value, r);
                } catch {
                  return !1;
                }
              });
              return c && this._selectionModel.select(c), c;
            }
            _assignValue(r) {
              return (
                !!(r !== this._value || (this._multiple && Array.isArray(r))) &&
                (this.options && this._setSelectionByValue(r),
                (this._value = r),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new E.s1(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0,
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const r = (0, We.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe((0, Bt.R)(r)).subscribe(c => {
                this._onSelect(c.source, c.isUserInput),
                  c.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                (0, We.T)(...this.options.map(c => c._stateChanges))
                  .pipe((0, Bt.R)(r))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(r, c) {
              const _ = this._selectionModel.isSelected(r);
              null != r.value || this._multiple
                ? (_ !== r.selected &&
                    (r.selected
                      ? this._selectionModel.select(r)
                      : this._selectionModel.deselect(r)),
                  c && this._keyManager.setActiveItem(r),
                  this.multiple && (this._sortValues(), c && this.focus()))
                : (r.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(r.value)),
                _ !== this._selectionModel.isSelected(r) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const r = this.options.toArray();
                this._selectionModel.sort((c, _) =>
                  this.sortComparator
                    ? this.sortComparator(c, _, r)
                    : r.indexOf(c) - r.indexOf(_),
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(r) {
              let c = null;
              (c = this.multiple
                ? this.selected.map(_ => _.value)
                : this.selected
                ? this.selected.value
                : r),
                (this._value = c),
                this.valueChange.emit(c),
                this._onChange(c),
                this.selectionChange.emit(this._getChangeEvent(c)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0],
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(r) {
              this._elementRef.nativeElement.focus(r);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (r ? r + ' ' : '') + this.ariaLabelledby
                : r;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              let c = (r ? r + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (c += ' ' + this.ariaLabelledby), c;
            }
            _panelDoneAnimating(r) {
              this.openedChange.emit(r);
            }
            setDescribedByIds(r) {
              r.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    r.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(Wn.rL),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.Y36(ut.rD),
                a.Y36(a.SBq),
                a.Y36(qn.Is, 8),
                a.Y36(Bn.F, 8),
                a.Y36(Bn.sg, 8),
                a.Y36(Yi.G_, 8),
                a.Y36(Bn.a5, 10),
                a.$8M('tabindex'),
                a.Y36(xa),
                a.Y36(E.Kd),
                a.Y36(Io, 8),
              );
            }),
            (g.ɵdir = a.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(Jo, 5), a.Gf(ba, 5), a.Gf(Pn.pI, 5)), 2 & r)
                ) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c.trigger = _.first),
                    a.iGM((_ = a.CRH())) && (c.panel = _.first),
                    a.iGM((_ = a.CRH())) && (c._overlayDir = _.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                panelClass: 'panelClass',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                sortComparator: 'sortComparator',
                id: 'id',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [a.qOj, a.TTD],
            })),
            g
          );
        })(),
        ps = (() => {
          class g extends Uo {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'top',
                  },
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-mdc-select-panel-above',
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe((0, Bt.R)(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(r) {
              const c = this.options.toArray()[r];
              if (c) {
                const _ = this.panel.nativeElement,
                  T = (0, ut.CB)(r, this.options, this.optionGroups),
                  _e = c._getHostElement();
                _.scrollTop =
                  0 === r && 1 === T
                    ? 0
                    : (0, ut.jH)(
                        _e.offsetTop,
                        _e.offsetHeight,
                        _.scrollTop,
                        _.offsetHeight,
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(r) {
              return new hr(this, r);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof Pn.xu
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(r) {
              (this._hideSingleSelectionIndicator = (0, nt.Ig)(r)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const r of this.options)
                  r._changeDetectorRef.markForCheck();
            }
          }
          return (
            (g.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(g)))(c || g);
              };
            })()),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-select']],
              contentQueries: function (r, c, _) {
                if (
                  (1 & r &&
                    (a.Suo(_, ws, 5), a.Suo(_, ut.ey, 5), a.Suo(_, ut.K7, 5)),
                  2 & r)
                ) {
                  let T;
                  a.iGM((T = a.CRH())) && (c.customTrigger = T.first),
                    a.iGM((T = a.CRH())) && (c.options = T),
                    a.iGM((T = a.CRH())) && (c.optionGroups = T);
                }
              },
              hostAttrs: [
                'role',
                'combobox',
                'aria-autocomplete',
                'none',
                'aria-haspopup',
                'listbox',
                1,
                'mat-mdc-select',
              ],
              hostVars: 19,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('keydown', function (T) {
                    return c._handleKeydown(T);
                  })('focus', function () {
                    return c._onFocus();
                  })('blur', function () {
                    return c._onBlur();
                  }),
                  2 & r &&
                    (a.uIk('id', c.id)('tabindex', c.tabIndex)(
                      'aria-controls',
                      c.panelOpen ? c.id + '-panel' : null,
                    )('aria-expanded', c.panelOpen)(
                      'aria-label',
                      c.ariaLabel || null,
                    )('aria-required', c.required.toString())(
                      'aria-disabled',
                      c.disabled.toString(),
                    )('aria-invalid', c.errorState)(
                      'aria-activedescendant',
                      c._getAriaActiveDescendant(),
                    ),
                    a.ekj('mat-mdc-select-disabled', c.disabled)(
                      'mat-mdc-select-invalid',
                      c.errorState,
                    )('mat-mdc-select-required', c.required)(
                      'mat-mdc-select-empty',
                      c.empty,
                    )('mat-mdc-select-multiple', c.multiple));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
                hideSingleSelectionIndicator: 'hideSingleSelectionIndicator',
              },
              exportAs: ['matSelect'],
              features: [
                a._Bn([
                  { provide: Yi.Eo, useExisting: g },
                  { provide: ut.HF, useExisting: g },
                ]),
                a.qOj,
              ],
              ngContentSelectors: tr,
              decls: 11,
              vars: 11,
              consts: [
                [
                  'cdk-overlay-origin',
                  '',
                  1,
                  'mat-mdc-select-trigger',
                  3,
                  'click',
                ],
                ['fallbackOverlayOrigin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-mdc-select-value', 3, 'ngSwitch'],
                [
                  'class',
                  'mat-mdc-select-placeholder mat-mdc-select-min-line',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'class',
                  'mat-mdc-select-value-text',
                  3,
                  'ngSwitch',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'mat-mdc-select-arrow-wrapper'],
                [1, 'mat-mdc-select-arrow'],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'focusable',
                  'false',
                ],
                ['d', 'M7 10l5 5 5-5z'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayWidth',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-mdc-select-placeholder', 'mat-mdc-select-min-line'],
                [1, 'mat-mdc-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-mdc-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-mdc-select-min-line'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(xs),
                    a.TgZ(0, 'div', 0, 1),
                    a.NdJ('click', function () {
                      return c.toggle();
                    }),
                    a.TgZ(3, 'div', 2),
                    a.YNc(4, Kr, 2, 1, 'span', 3),
                    a.YNc(5, Cs, 3, 2, 'span', 4),
                    a.qZA(),
                    a.TgZ(6, 'div', 5)(7, 'div', 6),
                    a.O4$(),
                    a.TgZ(8, 'svg', 7),
                    a._UZ(9, 'path', 8),
                    a.qZA()()()(),
                    a.YNc(10, $s, 3, 9, 'ng-template', 9),
                    a.NdJ('backdropClick', function () {
                      return c.close();
                    })('attach', function () {
                      return c._onAttached();
                    })('detach', function () {
                      return c.close();
                    })),
                  2 & r)
                ) {
                  const _ = a.MAs(1);
                  a.uIk('aria-owns', c.panelOpen ? c.id + '-panel' : null),
                    a.xp6(3),
                    a.Q6J('ngSwitch', c.empty),
                    a.uIk('id', c._valueId),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !0),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !1),
                    a.xp6(5),
                    a.Q6J(
                      'cdkConnectedOverlayPanelClass',
                      c._overlayPanelClass,
                    )('cdkConnectedOverlayScrollStrategy', c._scrollStrategy)(
                      'cdkConnectedOverlayOrigin',
                      c._preferredOverlayOrigin || _,
                    )('cdkConnectedOverlayOpen', c.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      c._positions,
                    )('cdkConnectedOverlayWidth', c._overlayWidth);
                }
              },
              dependencies: [s.mk, s.RF, s.n9, s.ED, Pn.pI, Pn.xu],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [ya.transformPanel] },
              changeDetection: 0,
            })),
            g
          );
        })(),
        bo = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({
              providers: [Ms],
              imports: [s.ez, Pn.U8, ut.Ng, ut.BQ, Wn.ZD, Yi.lN, ut.Ng, ut.BQ],
            })),
            g
          );
        })();
      function ms(g, F) {
        if (
          (1 & g &&
            (a.TgZ(0, 'mat-form-field', 11)(1, 'mat-label'),
            a._uU(2, 'Choose a date'),
            a.qZA(),
            a._UZ(3, 'input', 12)(4, 'mat-datepicker-toggle', 13)(
              5,
              'mat-datepicker',
              null,
              14,
            ),
            a.qZA()),
          2 & g)
        ) {
          const r = a.MAs(6),
            c = a.oxw();
          a.xp6(3),
            a.Q6J('formControl', c.noteForm.controls.date)('matDatepicker', r),
            a.xp6(1),
            a.Q6J('for', r);
        }
      }
      const As = function (g) {
        return ['select-text', g];
      };
      function es(g, F) {
        if (
          (1 & g &&
            (a.TgZ(0, 'mat-option', 15)(1, 'div', 16), a._uU(2), a.qZA()()),
          2 & g)
        ) {
          const r = F.$implicit;
          a.Q6J('value', r),
            a.xp6(1),
            a.Q6J('ngClass', a.VKq(3, As, r)),
            a.xp6(1),
            a.Oqu(r);
        }
      }
      const ko = 'default',
        To = [ko, 'red', 'green', 'blue', 'yellow'];
      let gs = (() => {
        class g {
          constructor(r, c, _, T) {
            (this.fb = r),
              (this.dialogRef = c),
              (this.store = _),
              (this.data = T),
              (this.styles = To),
              (this.noteForm = this.fb.group({
                title: ['', [Bn.kI.required]],
                date: [new Date(), [Bn.kI.required]],
                color: [ko],
              })),
              this.noteForm.setValue({
                title: T.note?.title || '',
                date: T.note?.date
                  ? new Date(T.note.date)
                  : T.date || new Date(),
                color: T.note?.color || ko,
              }),
              (this.note = T.note),
              (this.date = T.date),
              (this.withDate = T.withDate);
          }
          ngOnInit() {
            this.store
              .select(Ue)
              .pipe((0, At.h)(Boolean))
              .subscribe(() => {
                if (
                  (this.dialogRef.close(),
                  this.store.dispatch(Be()),
                  this.withDate && this.date)
                ) {
                  const r = st(this.date),
                    c = gt(this.date);
                  this.store.dispatch(oe({ startDate: te(r), endDate: te(c) }));
                } else this.store.dispatch(ee());
              });
          }
          save() {
            const { title: r, date: c, color: _ } = this.noteForm.value;
            if (!r || !c) return;
            const T = this.note
              ? {
                  ...this.note,
                  title: r,
                  date: this.withDate ? re(c) : void 0,
                  color: _,
                }
              : {
                  title: r,
                  date: this.withDate ? re(c) : void 0,
                  color: _,
                  completed: !1,
                };
            this.store.dispatch(this.note?.id ? ae(T) : le(T));
          }
          delete() {
            this.note && this.store.dispatch(pe(this.note));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(
              a.Y36(Bn.qu),
              a.Y36(to),
              a.Y36(L.yh),
              a.Y36(po),
            );
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-note-dialog']],
            decls: 16,
            vars: 7,
            consts: [
              [
                'mat-dialog-content',
                '',
                'data-testid',
                'note-dialog',
                1,
                'dialog',
              ],
              ['novalidate', '', 1, 'form', 3, 'formGroup', 'keydown.enter'],
              [
                'matInput',
                '',
                'data-testid',
                'title',
                'autofocus',
                '',
                3,
                'formControl',
              ],
              [1, 'dialog-row'],
              ['class', 'dialog-calendar', 'appearance', 'fill', 4, 'ngIf'],
              [1, 'dialog-select'],
              ['required', '', 3, 'formControl'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              [1, 'dialog-footer'],
              [
                'color',
                'secondary',
                'mat-raised-button',
                '',
                'data-testid',
                'delete',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [
                'color',
                'primary',
                'mat-raised-button',
                '',
                'data-testid',
                'save',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              ['appearance', 'fill', 1, 'dialog-calendar'],
              [
                'matInput',
                '',
                'data-testid',
                'date',
                3,
                'formControl',
                'matDatepicker',
              ],
              ['matIconSuffix', '', 3, 'for'],
              ['picker', ''],
              [3, 'value'],
              [3, 'ngClass'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'form', 1),
                a.NdJ('keydown.enter', function () {
                  return !c.noteForm.invalid && c.save();
                }),
                a.TgZ(2, 'mat-form-field'),
                a._UZ(3, 'input', 2),
                a.qZA(),
                a.TgZ(4, 'div', 3),
                a.YNc(5, ms, 7, 3, 'mat-form-field', 4),
                a.TgZ(6, 'mat-form-field', 5)(7, 'mat-label'),
                a._uU(8, 'Style'),
                a.qZA(),
                a.TgZ(9, 'mat-select', 6),
                a.YNc(10, es, 3, 5, 'mat-option', 7),
                a.qZA()()()()(),
                a.TgZ(11, 'div', 8)(12, 'button', 9),
                a.NdJ('click', function () {
                  return c.delete();
                }),
                a._uU(13, ' Delete '),
                a.qZA(),
                a.TgZ(14, 'button', 10),
                a.NdJ('click', function () {
                  return c.save();
                }),
                a._uU(15, ' Save '),
                a.qZA()()),
                2 & r &&
                  (a.xp6(1),
                  a.Q6J('formGroup', c.noteForm),
                  a.xp6(2),
                  a.Q6J('formControl', c.noteForm.controls.title),
                  a.xp6(2),
                  a.Q6J('ngIf', c.withDate),
                  a.xp6(4),
                  a.Q6J('formControl', c.noteForm.controls.color),
                  a.xp6(1),
                  a.Q6J('ngForOf', c.styles),
                  a.xp6(2),
                  a.Q6J('disabled', !(null != c.note && c.note.id)),
                  a.xp6(2),
                  a.Q6J('disabled', c.noteForm.invalid));
            },
            dependencies: [
              s.mk,
              s.sg,
              s.O5,
              je.lW,
              Yi.KE,
              Yi.hX,
              Yi.R9,
              Bn._Y,
              Bn.Fj,
              Bn.JJ,
              Bn.JL,
              Bn.Q7,
              Bn.oH,
              Bn.sg,
              bi.Nt,
              nn,
              Ti,
              wr,
              ro,
              ps,
              ut.ey,
            ],
            styles: [
              '.dialog-row[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between}.dialog-color[_ngcontent-%COMP%]{margin-left:20px;display:flex;cursor:pointer}.dialog-color[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer}.dialog-calendar[_ngcontent-%COMP%], .dialog-select[_ngcontent-%COMP%]{display:flex}.dialog-button[_ngcontent-%COMP%]{width:100px}.dialog-button[_ngcontent-%COMP%]:not(:first-child){margin-left:12px}.dialog-footer[_ngcontent-%COMP%]{padding:0 20px 20px;display:flex;justify-content:space-between}.select-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:70px;text-align:center}@media only screen and (min-width: 1020px){.dialog[_ngcontent-%COMP%]{width:400px}.dialog-row[_ngcontent-%COMP%]{flex-direction:row}.dialog-select[_ngcontent-%COMP%]{width:200px}.dialog-calendar[_ngcontent-%COMP%]{margin-right:20px}}',
            ],
          })),
          g
        );
      })();
      const Zr = (g, F) => {
          const r = g.map(c => ({
            id: c.id,
            text: c.title,
            color: c.color,
            completed: c.completed,
          }));
          if (g.length < F) {
            const c = F - g.length;
            for (let _ = 0; _ < c; _++) r.push({});
          }
          return r;
        },
        jo = ['input'],
        el = ['label'],
        Ea = ['*'],
        ei = new a.OlP('mat-checkbox-default-options', {
          providedIn: 'root',
          factory: Ma,
        });
      function Ma() {
        return { color: 'accent', clickAction: 'check-indeterminate' };
      }
      const Wl = {
        provide: Bn.JU,
        useExisting: (0, a.Gpc)(() => zo),
        multi: !0,
      };
      class Kl {}
      let Zl = 0;
      const ts = Ma(),
        Ql = (0, ut.sb)(
          (0, ut.pj)(
            (0, ut.Kr)(
              (0, ut.Id)(
                class {
                  constructor(g) {
                    this._elementRef = g;
                  }
                },
              ),
            ),
          ),
        );
      let wa = (() => {
          class g extends Ql {
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            get required() {
              return this._required;
            }
            set required(r) {
              this._required = (0, nt.Ig)(r);
            }
            constructor(r, c, _, T, _e, dt, rn) {
              super(c),
                (this._changeDetectorRef = _),
                (this._ngZone = T),
                (this._animationMode = dt),
                (this._options = rn),
                (this.ariaLabel = ''),
                (this.ariaLabelledby = null),
                (this.labelPosition = 'after'),
                (this.name = null),
                (this.change = new a.vpe()),
                (this.indeterminateChange = new a.vpe()),
                (this._onTouched = () => {}),
                (this._currentAnimationClass = ''),
                (this._currentCheckState = 0),
                (this._controlValueAccessorChangeFn = () => {}),
                (this._checked = !1),
                (this._disabled = !1),
                (this._indeterminate = !1),
                (this._options = this._options || ts),
                (this.color = this.defaultColor =
                  this._options.color || ts.color),
                (this.tabIndex = parseInt(_e) || 0),
                (this.id = this._uniqueId = `${r}${++Zl}`);
            }
            ngAfterViewInit() {
              this._syncIndeterminate(this._indeterminate);
            }
            get checked() {
              return this._checked;
            }
            set checked(r) {
              const c = (0, nt.Ig)(r);
              c != this.checked &&
                ((this._checked = c), this._changeDetectorRef.markForCheck());
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(r) {
              const c = (0, nt.Ig)(r);
              c !== this.disabled &&
                ((this._disabled = c), this._changeDetectorRef.markForCheck());
            }
            get indeterminate() {
              return this._indeterminate;
            }
            set indeterminate(r) {
              const c = r != this._indeterminate;
              (this._indeterminate = (0, nt.Ig)(r)),
                c &&
                  (this._transitionCheckState(
                    this._indeterminate ? 3 : this.checked ? 1 : 2,
                  ),
                  this.indeterminateChange.emit(this._indeterminate)),
                this._syncIndeterminate(this._indeterminate);
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
            writeValue(r) {
              this.checked = !!r;
            }
            registerOnChange(r) {
              this._controlValueAccessorChangeFn = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              this.disabled = r;
            }
            _transitionCheckState(r) {
              let c = this._currentCheckState,
                _ = this._getAnimationTargetElement();
              if (
                c !== r &&
                _ &&
                (this._currentAnimationClass &&
                  _.classList.remove(this._currentAnimationClass),
                (this._currentAnimationClass =
                  this._getAnimationClassForCheckStateTransition(c, r)),
                (this._currentCheckState = r),
                this._currentAnimationClass.length > 0)
              ) {
                _.classList.add(this._currentAnimationClass);
                const T = this._currentAnimationClass;
                this._ngZone.runOutsideAngular(() => {
                  setTimeout(() => {
                    _.classList.remove(T);
                  }, 1e3);
                });
              }
            }
            _emitChangeEvent() {
              this._controlValueAccessorChangeFn(this.checked),
                this.change.emit(this._createChangeEvent(this.checked)),
                this._inputElement &&
                  (this._inputElement.nativeElement.checked = this.checked);
            }
            toggle() {
              (this.checked = !this.checked),
                this._controlValueAccessorChangeFn(this.checked);
            }
            _handleInputClick() {
              const r = this._options?.clickAction;
              this.disabled || 'noop' === r
                ? !this.disabled &&
                  'noop' === r &&
                  ((this._inputElement.nativeElement.checked = this.checked),
                  (this._inputElement.nativeElement.indeterminate =
                    this.indeterminate))
                : (this.indeterminate &&
                    'check' !== r &&
                    Promise.resolve().then(() => {
                      (this._indeterminate = !1),
                        this.indeterminateChange.emit(this._indeterminate);
                    }),
                  (this._checked = !this._checked),
                  this._transitionCheckState(this._checked ? 1 : 2),
                  this._emitChangeEvent());
            }
            _onInteractionEvent(r) {
              r.stopPropagation();
            }
            _onBlur() {
              Promise.resolve().then(() => {
                this._onTouched(), this._changeDetectorRef.markForCheck();
              });
            }
            _getAnimationClassForCheckStateTransition(r, c) {
              if ('NoopAnimations' === this._animationMode) return '';
              switch (r) {
                case 0:
                  if (1 === c) return this._animationClasses.uncheckedToChecked;
                  if (3 == c)
                    return this._checked
                      ? this._animationClasses.checkedToIndeterminate
                      : this._animationClasses.uncheckedToIndeterminate;
                  break;
                case 2:
                  return 1 === c
                    ? this._animationClasses.uncheckedToChecked
                    : this._animationClasses.uncheckedToIndeterminate;
                case 1:
                  return 2 === c
                    ? this._animationClasses.checkedToUnchecked
                    : this._animationClasses.checkedToIndeterminate;
                case 3:
                  return 1 === c
                    ? this._animationClasses.indeterminateToChecked
                    : this._animationClasses.indeterminateToUnchecked;
              }
              return '';
            }
            _syncIndeterminate(r) {
              const c = this._inputElement;
              c && (c.nativeElement.indeterminate = r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              a.$Z();
            }),
            (g.ɵdir = a.lG2({
              type: g,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(jo, 5), a.Gf(el, 5), a.Gf(ut.wG, 5)), 2 & r)
                ) {
                  let _;
                  a.iGM((_ = a.CRH())) && (c._inputElement = _.first),
                    a.iGM((_ = a.CRH())) && (c._labelElement = _.first),
                    a.iGM((_ = a.CRH())) && (c.ripple = _.first);
                }
              },
              inputs: {
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                id: 'id',
                required: 'required',
                labelPosition: 'labelPosition',
                name: 'name',
                value: 'value',
                checked: 'checked',
                disabled: 'disabled',
                indeterminate: 'indeterminate',
              },
              outputs: {
                change: 'change',
                indeterminateChange: 'indeterminateChange',
              },
              features: [a.qOj],
            })),
            g
          );
        })(),
        zo = (() => {
          class g extends wa {
            constructor(r, c, _, T, _e, dt) {
              super('mat-mdc-checkbox-', r, c, _, T, _e, dt),
                (this._animationClasses = {
                  uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',
                  uncheckedToIndeterminate:
                    'mdc-checkbox--anim-unchecked-indeterminate',
                  checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',
                  checkedToIndeterminate:
                    'mdc-checkbox--anim-checked-indeterminate',
                  indeterminateToChecked:
                    'mdc-checkbox--anim-indeterminate-checked',
                  indeterminateToUnchecked:
                    'mdc-checkbox--anim-indeterminate-unchecked',
                });
            }
            focus() {
              this._inputElement.nativeElement.focus();
            }
            _createChangeEvent(r) {
              const c = new Kl();
              return (c.source = this), (c.checked = r), c;
            }
            _getAnimationTargetElement() {
              return this._inputElement?.nativeElement;
            }
            _onInputClick() {
              super._handleInputClick();
            }
            _onTouchTargetClick() {
              super._handleInputClick(),
                this.disabled || this._inputElement.nativeElement.focus();
            }
            _preventBubblingFromLabel(r) {
              r.target &&
                this._labelElement.nativeElement.contains(r.target) &&
                r.stopPropagation();
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.$8M('tabindex'),
                a.Y36(a.QbO, 8),
                a.Y36(ei, 8),
              );
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['mat-checkbox']],
              hostAttrs: [1, 'mat-mdc-checkbox'],
              hostVars: 12,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.Ikx('id', c.id),
                  a.uIk('tabindex', null)('aria-label', null)(
                    'aria-labelledby',
                    null,
                  ),
                  a.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === c._animationMode,
                  )('mdc-checkbox--disabled', c.disabled)(
                    'mat-mdc-checkbox-disabled',
                    c.disabled,
                  )('mat-mdc-checkbox-checked', c.checked));
              },
              inputs: {
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
              },
              exportAs: ['matCheckbox'],
              features: [a._Bn([Wl]), a.qOj],
              ngContentSelectors: Ea,
              decls: 15,
              vars: 19,
              consts: [
                [1, 'mdc-form-field', 3, 'click'],
                [1, 'mdc-checkbox'],
                ['checkbox', ''],
                [1, 'mat-mdc-checkbox-touch-target', 3, 'click'],
                [
                  'type',
                  'checkbox',
                  1,
                  'mdc-checkbox__native-control',
                  3,
                  'checked',
                  'indeterminate',
                  'disabled',
                  'id',
                  'required',
                  'tabIndex',
                  'blur',
                  'click',
                  'change',
                ],
                ['input', ''],
                [1, 'mdc-checkbox__ripple'],
                [1, 'mdc-checkbox__background'],
                [
                  'focusable',
                  'false',
                  'viewBox',
                  '0 0 24 24',
                  'aria-hidden',
                  'true',
                  1,
                  'mdc-checkbox__checkmark',
                ],
                [
                  'fill',
                  'none',
                  'd',
                  'M1.73,12.91 8.1,19.28 22.79,4.59',
                  1,
                  'mdc-checkbox__checkmark-path',
                ],
                [1, 'mdc-checkbox__mixedmark'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-checkbox-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                ],
                [3, 'for'],
                ['label', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(),
                    a.TgZ(0, 'div', 0),
                    a.NdJ('click', function (T) {
                      return c._preventBubblingFromLabel(T);
                    }),
                    a.TgZ(1, 'div', 1, 2)(3, 'div', 3),
                    a.NdJ('click', function () {
                      return c._onTouchTargetClick();
                    }),
                    a.qZA(),
                    a.TgZ(4, 'input', 4, 5),
                    a.NdJ('blur', function () {
                      return c._onBlur();
                    })('click', function () {
                      return c._onInputClick();
                    })('change', function (T) {
                      return c._onInteractionEvent(T);
                    }),
                    a.qZA(),
                    a._UZ(6, 'div', 6),
                    a.TgZ(7, 'div', 7),
                    a.O4$(),
                    a.TgZ(8, 'svg', 8),
                    a._UZ(9, 'path', 9),
                    a.qZA(),
                    a.kcU(),
                    a._UZ(10, 'div', 10),
                    a.qZA(),
                    a._UZ(11, 'div', 11),
                    a.qZA(),
                    a.TgZ(12, 'label', 12, 13),
                    a.Hsn(14),
                    a.qZA()()),
                  2 & r)
                ) {
                  const _ = a.MAs(2);
                  a.ekj(
                    'mdc-form-field--align-end',
                    'before' == c.labelPosition,
                  ),
                    a.xp6(4),
                    a.ekj('mdc-checkbox--selected', c.checked),
                    a.Q6J('checked', c.checked)(
                      'indeterminate',
                      c.indeterminate,
                    )('disabled', c.disabled)('id', c.inputId)(
                      'required',
                      c.required,
                    )('tabIndex', c.tabIndex),
                    a.uIk('aria-label', c.ariaLabel || null)(
                      'aria-labelledby',
                      c.ariaLabelledby,
                    )('aria-describedby', c.ariaDescribedby)('name', c.name)(
                      'value',
                      c.value,
                    ),
                    a.xp6(7),
                    a.Q6J('matRippleTrigger', _)(
                      'matRippleDisabled',
                      c.disableRipple || c.disabled,
                    )('matRippleCentered', !0),
                    a.xp6(1),
                    a.Q6J('for', c.inputId);
                }
              },
              dependencies: [ut.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:not([disabled])~.mdc-checkbox__ripple{opacity:.04;transform:scale(1);transition:opacity 80ms 0 cubic-bezier(0, 0, 0.2, 1),transform 80ms 0 cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:not([disabled]):focus~.mdc-checkbox__ripple{opacity:.16}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__native-control:focus:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, black)}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            g
          );
        })(),
        Oi = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({})),
            g
          );
        })(),
        Ss = (() => {
          class g {}
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵmod = a.oAB({ type: g })),
            (g.ɵinj = a.cJS({ imports: [ut.BQ, ut.si, Oi, ut.BQ, Oi] })),
            g
          );
        })();
      function ns(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.TgZ(0, 'mat-checkbox', 3),
            a.NdJ('ngModelChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.row.completed = _));
            })('change', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.onChange(_));
            }),
            a.qZA();
        }
        if (2 & g) {
          const r = a.oxw();
          a.Q6J('ngModel', r.row.completed);
        }
      }
      const Aa = function (g) {
          return { row__interactive: g };
        },
        Ar = function (g, F) {
          return ['row-text', g, F];
        };
      let uo = (() => {
          class g {
            constructor() {
              (this.rowClick = new a.vpe()), (this.rowChange = new a.vpe());
            }
            get isInteractive() {
              return !!this.row.text || this.interactive;
            }
            onClick(r) {
              'checkbox' !== r.target?.getAttribute('type') &&
                (r.stopPropagation(),
                r.preventDefault(),
                this.rowClick.emit(this.row));
            }
            onChange({ checked: r }) {
              this.rowChange.emit({ ...this.row, completed: r });
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['app-row']],
              inputs: { row: 'row', interactive: 'interactive' },
              outputs: { rowClick: 'rowClick', rowChange: 'rowChange' },
              decls: 4,
              vars: 9,
              consts: [
                [1, 'row', 3, 'ngClass', 'click'],
                [3, 'ngClass'],
                [
                  'class',
                  'row-checkbox',
                  3,
                  'ngModel',
                  'ngModelChange',
                  'change',
                  4,
                  'ngIf',
                ],
                [1, 'row-checkbox', 3, 'ngModel', 'ngModelChange', 'change'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div', 0),
                  a.NdJ('click', function (T) {
                    return c.isInteractive ? c.onClick(T) : void 0;
                  }),
                  a.TgZ(1, 'span', 1),
                  a._uU(2),
                  a.qZA(),
                  a.YNc(3, ns, 1, 1, 'mat-checkbox', 2),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngClass', a.VKq(4, Aa, c.isInteractive)),
                    a.xp6(1),
                    a.Q6J(
                      'ngClass',
                      a.WLB(
                        6,
                        Ar,
                        c.row.color || '',
                        c.row.completed ? 'row-text__completed' : '',
                      ),
                    ),
                    a.xp6(1),
                    a.hij(' ', c.row.text, ' '),
                    a.xp6(1),
                    a.Q6J('ngIf', !!c.row.text));
              },
              dependencies: [s.mk, s.O5, Bn.JJ, zo, Bn.On],
              styles: [
                '.row[_ngcontent-%COMP%]{height:23px;padding:8px 4px;font-size:13px;border-bottom:solid 1px #ddd;display:flex;align-items:center;justify-content:space-between}.row__interactive[_ngcontent-%COMP%]{cursor:pointer}.row__interactive[_ngcontent-%COMP%]:hover{border-bottom:solid 1px #3f51b5}.row-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.row-text__completed[_ngcontent-%COMP%]{text-decoration:line-through;opacity:.3}@media only screen and (min-width: 1020px){.row-checkbox[_ngcontent-%COMP%]{display:none}.row[_ngcontent-%COMP%]:hover   .row-checkbox[_ngcontent-%COMP%]{display:block}}',
              ],
              changeDetection: 0,
            })),
            g
          );
        })(),
        Ys = (() => {
          class g {
            transform(r) {
              return (g => `${ne(g.getDate())}.${ne(g.getMonth() + 1)}`)(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'dateWithMonth', type: g, pure: !0 })),
            g
          );
        })(),
        Is = (() => {
          class g {
            transform(r) {
              return (g => xe[g.getDay()])(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'dayOfWeek', type: g, pure: !0 })),
            g
          );
        })();
      function f(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.openDialog(_.id));
            })('rowChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.updateCompleted(_));
            }),
            a.ALo(2, 'dateWithMonth'),
            a.qZA(),
            a.BQk();
        }
        if (2 & g) {
          const r = F.$implicit,
            c = F.index,
            _ = a.oxw();
          a.xp6(1),
            a.Q6J('row', r)('interactive', c === _.notes.length),
            a.uIk('data-testid', a.lcZ(2, 3, _.date) + ' ' + c);
        }
      }
      const m = function (g) {
          return { 'day-date__active': g };
        },
        d = function (g) {
          return { 'day-name__active': g };
        };
      let D = (() => {
        class g {
          constructor(r, c) {
            (this.dialog = r),
              (this.store = c),
              (this.notes = []),
              (this.rows = []);
          }
          ngOnInit() {
            this.store
              .select(De, this.date.toISOString().split('T')[0])
              .subscribe(r => {
                this.notes = r ?? [];
                const c =
                  this.minRowCount > this.notes.length
                    ? this.minRowCount
                    : this.notes.length + 1;
                c > this.minRowCount &&
                  ((this.minRowCount = c),
                  this.store.dispatch(ze({ count: c }))),
                  (this.rows = Zr(this.notes, c));
              }),
              this.store
                .select(Pe, this.date.toISOString().split('T')[0])
                .subscribe(r => {
                  (this.minRowCount = r), (this.rows = Zr(this.notes, r));
                }),
              (this.rows = Zr(this.notes, this.minRowCount));
          }
          ngOnChanges(r) {
            r.minRowsCount &&
              (this.rows = Zr(this.notes, r.minRowsCount.currentValue));
          }
          get isActive() {
            return (g => {
              const F = new Date();
              return (
                F.getFullYear() === g.getFullYear() &&
                F.getMonth() === g.getMonth() &&
                F.getDate() === g.getDate()
              );
            })(this.date);
          }
          openDialog(r) {
            const c = this.notes.find(_ => _.id === r);
            this.dialog.open(gs, {
              data: { date: this.date, note: c, withDate: !0 },
            });
          }
          updateCompleted(r) {
            const c = this.notes.find(_ => _.id === r.id);
            c && this.store.dispatch(ae({ ...c, completed: !!r.completed }));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.Y36($i), a.Y36(L.yh));
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-day']],
            inputs: { date: 'date' },
            features: [a.TTD],
            decls: 9,
            vars: 13,
            consts: [
              [1, 'day'],
              [1, 'day-header'],
              [1, 'day-date', 3, 'ngClass'],
              [1, 'day-name', 3, 'ngClass'],
              [4, 'ngFor', 'ngForOf'],
              [3, 'row', 'interactive', 'rowClick', 'rowChange'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                a._uU(3),
                a.ALo(4, 'dateWithMonth'),
                a.qZA(),
                a.TgZ(5, 'span', 3),
                a._uU(6),
                a.ALo(7, 'dayOfWeek'),
                a.qZA()(),
                a.YNc(8, f, 3, 5, 'ng-container', 4),
                a.qZA()),
                2 & r &&
                  (a.xp6(2),
                  a.Q6J('ngClass', a.VKq(9, m, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(4, 5, c.date)),
                  a.xp6(2),
                  a.Q6J('ngClass', a.VKq(11, d, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(7, 7, c.date)),
                  a.xp6(2),
                  a.Q6J('ngForOf', c.rows));
            },
            dependencies: [s.mk, s.sg, uo, Ys, Is],
            styles: [
              '.day-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:2px solid #000;padding-bottom:12px;font-size:18px;line-height:28px}.day-date[_ngcontent-%COMP%]{font-weight:700}.day-date__active[_ngcontent-%COMP%]{color:#3f51b5}.day-name[_ngcontent-%COMP%]{color:#999}.day-name__active[_ngcontent-%COMP%]{color:#3f51b580}@media only screen and (min-width: 1020px){.day-header[_ngcontent-%COMP%]{font-size:21px}}',
            ],
          })),
          g
        );
      })();
      function O(g, F) {
        if (
          (1 & g && (a.TgZ(0, 'div', 2), a._UZ(1, 'app-day', 3), a.qZA()),
          2 & g)
        ) {
          const r = F.$implicit;
          a.xp6(1), a.Q6J('date', r);
        }
      }
      let U = (() => {
        class g {
          ngOnInit() {
            this.fillDates(this.startDate);
          }
          ngOnChanges(r) {
            r.startDate && this.fillDates(r.startDate.currentValue);
          }
          fillDates(r) {
            this.dates = [];
            for (let c = 0; c < 7; c++) this.dates.push(pt(r, c));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵcmp = a.Xpm({
            type: g,
            selectors: [['app-week']],
            inputs: { startDate: 'startDate' },
            features: [a.TTD],
            decls: 2,
            vars: 1,
            consts: [
              ['data-testid', 'calendar', 1, 'week'],
              ['class', 'week-day', 4, 'ngFor', 'ngForOf'],
              [1, 'week-day'],
              [3, 'date'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0), a.YNc(1, O, 2, 1, 'div', 1), a.qZA()),
                2 & r && (a.xp6(1), a.Q6J('ngForOf', c.dates));
            },
            dependencies: [s.sg, D],
            styles: [
              '[_nghost-%COMP%]{display:flex}.week[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px;flex:1}.week-day[_ngcontent-%COMP%]{margin-top:20px}@media only screen and (min-width: 1020px){.week[_ngcontent-%COMP%]{flex-direction:row}.week-day[_ngcontent-%COMP%]{width:calc((100% - 120px) / 7)}.week-day[_ngcontent-%COMP%]:not(:first-child){margin-left:20px}}',
            ],
          })),
          g
        );
      })();
      function W(g, F) {
        if (1 & g) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.openDialog(_.id));
            })('rowChange', function (_) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.updateCompleted(_));
            }),
            a.qZA(),
            a.BQk();
        }
        if (2 & g) {
          const r = F.$implicit,
            c = F.index;
          a.xp6(1), a.Q6J('row', r), a.uIk('data-testid', 'row ' + (c + 1));
        }
      }
      let Ct = (() => {
          class g {
            constructor(r, c) {
              (this.dialog = r),
                (this.store = c),
                (this.notes = []),
                (this.rows = []),
                (this.minRowsCount = 12),
                this.store.select(Ge).subscribe(_ => {
                  this.notes = _ ?? [];
                  const T =
                    this.minRowsCount > this.notes.length
                      ? this.minRowsCount
                      : this.notes.length + 3 - (this.notes.length % 3);
                  T > this.minRowsCount && (this.minRowsCount = T),
                    (this.rows = Zr(this.notes, T));
                }),
                (this.rows = Zr(this.notes, 12));
            }
            openDialog(r) {
              const c = this.notes.find(_ => _.id === r);
              this.dialog.open(gs, { data: { note: c, withDate: !1 } });
            }
            updateCompleted(r) {
              const c = this.notes.find(_ => _.id === r.id);
              c && this.store.dispatch(ae({ ...c, completed: !!r.completed }));
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)(a.Y36($i), a.Y36(L.yh));
            }),
            (g.ɵcmp = a.Xpm({
              type: g,
              selectors: [['app-todo-list']],
              decls: 9,
              vars: 1,
              consts: [
                [1, 'todo-header'],
                [1, 'todo-title'],
                [
                  'mat-icon-button',
                  '',
                  'data-testid',
                  'add-todo',
                  1,
                  'todo-add',
                  3,
                  'click',
                ],
                ['data-testid', 'todo-list', 1, 'todo-list'],
                [4, 'ngFor', 'ngForOf'],
                [3, 'row', 'rowClick', 'rowChange'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div')(1, 'div', 0)(2, 'span', 1),
                  a._uU(3, 'Someday'),
                  a.qZA(),
                  a.TgZ(4, 'button', 2),
                  a.NdJ('click', function () {
                    return c.openDialog();
                  }),
                  a.TgZ(5, 'mat-icon'),
                  a._uU(6, 'add'),
                  a.qZA()()(),
                  a.TgZ(7, 'div', 3),
                  a.YNc(8, W, 2, 2, 'ng-container', 4),
                  a.qZA()()),
                  2 & r && (a.xp6(8), a.Q6J('ngForOf', c.rows));
              },
              dependencies: [s.sg, je.RK, R, uo],
              styles: [
                '.todo-header[_ngcontent-%COMP%]{display:flex;align-items:center;padding-bottom:12px;margin-top:40px}.todo-title[_ngcontent-%COMP%]{font-size:18px;line-height:28px;font-weight:700;color:#555}.todo-add[_ngcontent-%COMP%]{margin-left:20px;color:#555}@media only screen and (min-width: 1020px){.todo-header[_ngcontent-%COMP%]{font-size:21px;max-width:32%}.todo-list[_ngcontent-%COMP%]{display:grid;grid-template-columns:32% 31% 31%;grid-template-rows:40px 40px 40px 40px;column-gap:2%}}',
              ],
            })),
            g
          );
        })(),
        qt = (() => {
          class g {
            transform(r) {
              return (g => `${vt[g.getMonth()]} ${g.getFullYear()}`)(r);
            }
          }
          return (
            (g.ɵfac = function (r) {
              return new (r || g)();
            }),
            (g.ɵpipe = a.Yjl({ name: 'headerDate', type: g, pure: !0 })),
            g
          );
        })();
      const Gn = [
        {
          path: '',
          component: (() => {
            class g {
              constructor(r, c, _, T) {
                (this.store = r),
                  (this.snackBar = c),
                  (this.authService = _),
                  (this.router = T),
                  (this.now = new Date()),
                  (this.startDate = st(new Date())),
                  (this.endDate = gt(new Date()));
              }
              ngOnInit() {
                this.getNotes(),
                  this.store.dispatch(ee()),
                  this.store
                    .select($e)
                    .pipe((0, At.h)(Boolean))
                    .subscribe(r => {
                      this.snackBar.open(r, void 0, { duration: 5e3 });
                    });
              }
              onBackClick() {
                (this.startDate = Le(this.startDate, 7)),
                  (this.endDate = Le(this.endDate, 7)),
                  this.getNotes();
              }
              onForwardClick() {
                (this.startDate = pt(this.startDate, 7)),
                  (this.endDate = pt(this.endDate, 7)),
                  this.getNotes();
              }
              getNotes() {
                this.store.dispatch(
                  oe({
                    startDate: te(this.startDate),
                    endDate: te(this.endDate),
                  }),
                );
              }
              logout() {
                this.authService.logout().subscribe(() => {
                  this.router.navigate(['/auth/signin']);
                });
              }
            }
            return (
              (g.ɵfac = function (r) {
                return new (r || g)(
                  a.Y36(L.yh),
                  a.Y36(Ye.ux),
                  a.Y36(rt.e),
                  a.Y36(x.F0),
                );
              }),
              (g.ɵcmp = a.Xpm({
                type: g,
                selectors: [['app-calendar']],
                decls: 33,
                vars: 6,
                consts: [
                  [1, 'calendar'],
                  [1, 'calendar-header'],
                  [1, 'calendar-month'],
                  [1, 'calendar-buttons'],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__mini',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__large',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  ['menu', 'matMenu'],
                  ['mat-menu-item', '', 3, 'click'],
                  [3, 'startDate'],
                ],
                template: function (r, c) {
                  if (
                    (1 & r &&
                      (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                      a._uU(3),
                      a.ALo(4, 'headerDate'),
                      a.qZA(),
                      a.TgZ(5, 'div', 3)(6, 'button', 4),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(7, 'mat-icon'),
                      a._uU(8, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(9, 'button', 5),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(10, 'mat-icon'),
                      a._uU(11, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(12, 'button', 6),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(13, 'mat-icon'),
                      a._uU(14, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(15, 'button', 7),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(16, 'mat-icon'),
                      a._uU(17, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(18, 'button', 8)(19, 'mat-icon'),
                      a._uU(20, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(21, 'button', 9)(22, 'mat-icon'),
                      a._uU(23, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(24, 'mat-menu', null, 10)(26, 'button', 11),
                      a.NdJ('click', function () {
                        return c.logout();
                      }),
                      a.TgZ(27, 'mat-icon'),
                      a._uU(28, 'logout'),
                      a.qZA(),
                      a.TgZ(29, 'span'),
                      a._uU(30, 'Logout'),
                      a.qZA()()()()(),
                      a._UZ(31, 'app-week', 12)(32, 'app-todo-list'),
                      a.qZA()),
                    2 & r)
                  ) {
                    const _ = a.MAs(25);
                    a.xp6(3),
                      a.Oqu(a.lcZ(4, 4, c.startDate)),
                      a.xp6(15),
                      a.Q6J('matMenuTriggerFor', _),
                      a.xp6(3),
                      a.Q6J('matMenuTriggerFor', _),
                      a.xp6(10),
                      a.Q6J('startDate', c.startDate);
                  }
                },
                dependencies: [je.nh, je.cs, R, qi, xi, ji, U, Ct, qt],
                styles: [
                  '.calendar[_ngcontent-%COMP%]{padding:12px}.calendar-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.calendar-month[_ngcontent-%COMP%]{font-size:21px;line-height:36px;font-weight:700}.calendar-buttons[_ngcontent-%COMP%]{display:flex}.calendar-button__large[_ngcontent-%COMP%]{display:none}.calendar-button[_ngcontent-%COMP%]:not(:first-child){margin-left:8px}.calendar-menu[_ngcontent-%COMP%]{margin-left:20px}@media only screen and (min-width: 1020px){.calendar-button__large[_ngcontent-%COMP%]{display:block}.calendar-button__mini[_ngcontent-%COMP%]{display:none}.calendar-month[_ngcontent-%COMP%]{font-size:36px;line-height:42px}}',
                ],
              })),
              g
            );
          })(),
        },
      ];
      let Gi = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({ imports: [x.Bz.forChild(Gn), x.Bz] })),
          g
        );
      })();
      var Br = C(3835);
      const Do = {
        randomUUID:
          typeof crypto < 'u' &&
          crypto.randomUUID &&
          crypto.randomUUID.bind(crypto),
      };
      let nr;
      const ks = new Uint8Array(16);
      function $o() {
        if (
          !nr &&
          ((nr =
            typeof crypto < 'u' &&
            crypto.getRandomValues &&
            crypto.getRandomValues.bind(crypto)),
          !nr)
        )
          throw new Error(
            'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
          );
        return nr(ks);
      }
      const Ai = [];
      for (let g = 0; g < 256; ++g) Ai.push((g + 256).toString(16).slice(1));
      const Ts = function il(g, F, r) {
          if (Do.randomUUID && !F && !g) return Do.randomUUID();
          const c = (g = g || {}).random || (g.rng || $o)();
          if (((c[6] = (15 & c[6]) | 64), (c[8] = (63 & c[8]) | 128), F)) {
            r = r || 0;
            for (let _ = 0; _ < 16; ++_) F[r + _] = c[_];
            return F;
          }
          return (function Sa(g, F = 0) {
            return (
              Ai[g[F + 0]] +
              Ai[g[F + 1]] +
              Ai[g[F + 2]] +
              Ai[g[F + 3]] +
              '-' +
              Ai[g[F + 4]] +
              Ai[g[F + 5]] +
              '-' +
              Ai[g[F + 6]] +
              Ai[g[F + 7]] +
              '-' +
              Ai[g[F + 8]] +
              Ai[g[F + 9]] +
              '-' +
              Ai[g[F + 10]] +
              Ai[g[F + 11]] +
              Ai[g[F + 12]] +
              Ai[g[F + 13]] +
              Ai[g[F + 14]] +
              Ai[g[F + 15]]
            ).toLowerCase();
          })(c);
        },
        is = { headers: new xt.WM({ 'Content-Type': 'application/json' }) };
      let Ia = (() => {
        class g {
          constructor(r) {
            this.http = r;
          }
          getNotes(r, c) {
            return this.http.get(`${Br.k.apiUrl}/notes`, {
              params: r && c ? { from: r, to: c } : {},
              ...is,
            });
          }
          createNote(r) {
            const c = { ...r, id: Ts() };
            return this.http.post(`${Br.k.apiUrl}/notes`, c, is);
          }
          updateNote(r) {
            return this.http.patch(`${Br.k.apiUrl}/notes/${r.id}`, r, is);
          }
          deleteNote(r) {
            return this.http.delete(`${Br.k.apiUrl}/notes/${r.id}`, is);
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.LFG(xt.eN));
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac, providedIn: 'root' })),
          g
        );
      })();
      var Qr = C(8776),
        Os = C(6129);
      let _s = (() => {
        class g {
          constructor(r, c) {
            (this.actions$ = r),
              (this.notesService = c),
              (this.loadCalendarNotes$ = (0, Qr.GW)(() =>
                this.actions$.pipe(
                  (0, Qr.l4)(oe.type),
                  (0, Os.z)(({ startDate: _, endDate: T }) =>
                    this.notesService.getNotes(_, T).pipe(
                      (0, Kt.U)(_e => he({ calendarNotes: _e })),
                      (0, mn.K)(_e =>
                        (0, Lt.of)(
                          ue({ error: _e?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.loadTodoNotes$ = (0, Qr.GW)(() =>
                this.actions$.pipe(
                  (0, Qr.l4)(ee.type),
                  (0, Os.z)(() =>
                    this.notesService.getNotes().pipe(
                      (0, Kt.U)(_ => ge({ todoNotes: _ })),
                      (0, mn.K)(_ =>
                        (0, Lt.of)(
                          ue({ error: _?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.createNote$ = (0, Qr.GW)(() =>
                this.actions$.pipe(
                  (0, Qr.l4)(le.type),
                  (0, Os.z)(_ =>
                    this.notesService.createNote(_).pipe(
                      (0, Kt.U)(() => se()),
                      (0, mn.K)(T =>
                        (0, Lt.of)(
                          ue({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.updateNote$ = (0, Qr.GW)(() =>
                this.actions$.pipe(
                  (0, Qr.l4)(ae.type),
                  (0, Os.z)(_ =>
                    this.notesService.updateNote(_).pipe(
                      (0, Kt.U)(() => se()),
                      (0, mn.K)(T =>
                        (0, Lt.of)(
                          ue({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.deleteNote$ = (0, Qr.GW)(() =>
                this.actions$.pipe(
                  (0, Qr.l4)(pe.type),
                  (0, Os.z)(_ =>
                    this.notesService.deleteNote(_).pipe(
                      (0, Kt.U)(() => se()),
                      (0, mn.K)(T =>
                        (0, Lt.of)(
                          ue({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (g.ɵfac = function (r) {
            return new (r || g)(a.LFG(Qr.eX), a.LFG(Ia));
          }),
          (g.ɵprov = a.Yz7({ token: g, factory: g.ɵfac })),
          g
        );
      })();
      const Zd = (0, L.Lq)(
        {
          loading: !1,
          todoNotes: [],
          loaded: !1,
          requestSuccess: !1,
          minRowsCount: 6,
        },
        (0, L.on)(oe, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(ee, g => ({ ...g, error: void 0, loading: !0 })),
        (0, L.on)(he, (g, { calendarNotes: F }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          calendarNotes: F,
        })),
        (0, L.on)(ge, (g, { todoNotes: F }) => ({
          ...g,
          error: void 0,
          loading: !1,
          loaded: !0,
          todoNotes: F,
        })),
        (0, L.on)(ue, (g, { error: F }) => ({ ...g, error: F, loading: !1 })),
        (0, L.on)(le, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(ae, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(pe, g => ({
          ...g,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, L.on)(se, g => ({
          ...g,
          error: void 0,
          requestSuccess: !0,
          loading: !1,
        })),
        (0, L.on)(Be, g => ({ ...g, requestSuccess: !1 })),
        (0, L.on)(ze, (g, { count: F }) => ({ ...g, minRowsCount: F })),
      );
      let rl = (() => {
        class g {}
        return (
          (g.ɵfac = function (r) {
            return new (r || g)();
          }),
          (g.ɵmod = a.oAB({ type: g })),
          (g.ɵinj = a.cJS({
            providers: [Ia, rt.e, { provide: ut.Ad, useValue: 'ru-RU' }],
            imports: [
              s.ez,
              Gi,
              Qr.sQ.forFeature([_s]),
              L.Aw.forFeature('calendar', Zd),
              je.ot,
              b,
              Yi.lN,
              Bn.UX,
              bi.c,
              ui,
              Ur,
              ut.XK,
              Ye.ZX,
              bo,
              fr,
              Ss,
              Bn.u5,
            ],
          })),
          g
        );
      })();
    },
    3835: (Ot, Ne, C) => {
      C.d(Ne, { k: () => s });
      const s = { apiUrl: '/api', baseUrl: 'http://localhost:4200' };
    },
    4044: (Ot, Ne, C) => {
      var s = C(1481),
        x = C(4650),
        L = C(8252);
      let oe = (() => {
        class B {
          constructor() {
            this.title = 'timepage';
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵcmp = x.Xpm({
            type: B,
            selectors: [['app-root']],
            decls: 2,
            vars: 0,
            consts: [['role', 'main', 1, 'content']],
            template: function (p, S) {
              1 & p && (x.TgZ(0, 'div', 0), x._UZ(1, 'router-outlet'), x.qZA());
            },
            dependencies: [L.lC],
          })),
          B
        );
      })();
      var ee = C(7340);
      function ge(B) {
        return new x.vHH(3e3, !1);
      }
      function Lt() {
        return typeof window < 'u' && typeof window.document < 'u';
      }
      function Mn() {
        return (
          typeof process < 'u' &&
          '[object process]' === {}.toString.call(process)
        );
      }
      function un(B) {
        switch (B.length) {
          case 0:
            return new ee.ZN();
          case 1:
            return B[0];
          default:
            return new ee.ZE(B);
        }
      }
      function an(B, h, p, S, H = new Map(), Z = new Map()) {
        const ye = [],
          Ee = [];
        let qe = -1,
          ft = null;
        if (
          (S.forEach(Wt => {
            const Ht = Wt.get('offset'),
              yn = Ht == qe,
              nn = (yn && ft) || new Map();
            Wt.forEach((cn, xn) => {
              let zn = xn,
                Qn = cn;
              if ('offset' !== xn)
                switch (((zn = h.normalizePropertyName(zn, ye)), Qn)) {
                  case ee.k1:
                    Qn = H.get(xn);
                    break;
                  case ee.l3:
                    Qn = Z.get(xn);
                    break;
                  default:
                    Qn = h.normalizeStyleValue(xn, zn, Qn, ye);
                }
              nn.set(zn, Qn);
            }),
              yn || Ee.push(nn),
              (ft = nn),
              (qe = Ht);
          }),
          ye.length)
        )
          throw (function Et(B) {
            return new x.vHH(3502, !1);
          })();
        return Ee;
      }
      function Dn(B, h, p, S) {
        switch (h) {
          case 'start':
            B.onStart(() => S(p && Kt(p, 'start', B)));
            break;
          case 'done':
            B.onDone(() => S(p && Kt(p, 'done', B)));
            break;
          case 'destroy':
            B.onDestroy(() => S(p && Kt(p, 'destroy', B)));
        }
      }
      function Kt(B, h, p) {
        const Z = mn(
            B.element,
            B.triggerName,
            B.fromState,
            B.toState,
            h || B.phaseName,
            p.totalTime ?? B.totalTime,
            !!p.disabled,
          ),
          ye = B._data;
        return null != ye && (Z._data = ye), Z;
      }
      function mn(B, h, p, S, H = '', Z = 0, ye) {
        return {
          element: B,
          triggerName: h,
          fromState: p,
          toState: S,
          phaseName: H,
          totalTime: Z,
          disabled: !!ye,
        };
      }
      function wn(B, h, p) {
        let S = B.get(h);
        return S || B.set(h, (S = p)), S;
      }
      function Dt(B) {
        const h = B.indexOf(':');
        return [B.substring(1, h), B.slice(h + 1)];
      }
      let Jt = (B, h) => !1,
        xt = (B, h, p) => [],
        ht = null;
      function hn(B) {
        const h = B.parentNode || B.host;
        return h === ht ? null : h;
      }
      (Mn() || typeof Element < 'u') &&
        (Lt()
          ? ((ht = (() => document.documentElement)()),
            (Jt = (B, h) => {
              for (; h; ) {
                if (h === B) return !0;
                h = hn(h);
              }
              return !1;
            }))
          : (Jt = (B, h) => B.contains(h)),
        (xt = (B, h, p) => {
          if (p) return Array.from(B.querySelectorAll(h));
          const S = B.querySelector(h);
          return S ? [S] : [];
        }));
      let J = null,
        Ae = !1;
      const j = Jt,
        ke = xt;
      let me = (() => {
          class B {
            validateStyleProperty(p) {
              return (function He(B) {
                J ||
                  ((J =
                    (function be() {
                      return typeof document < 'u' ? document.body : null;
                    })() || {}),
                  (Ae = !!J.style && 'WebkitAppearance' in J.style));
                let h = !0;
                return (
                  J.style &&
                    !(function $(B) {
                      return 'ebkit' == B.substring(1, 6);
                    })(B) &&
                    ((h = B in J.style),
                    !h &&
                      Ae &&
                      (h =
                        'Webkit' + B.charAt(0).toUpperCase() + B.slice(1) in
                        J.style)),
                  h
                );
              })(p);
            }
            matchesElement(p, S) {
              return !1;
            }
            containsElement(p, S) {
              return j(p, S);
            }
            getParentElement(p) {
              return hn(p);
            }
            query(p, S, H) {
              return ke(p, S, H);
            }
            computeStyle(p, S, H) {
              return H || '';
            }
            animate(p, S, H, Z, ye, Ee = [], qe) {
              return new ee.ZN(H, Z);
            }
          }
          return (
            (B.ɵfac = function (p) {
              return new (p || B)();
            }),
            (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
            B
          );
        })(),
        fe = (() => {
          class B {}
          return (B.NOOP = new me()), B;
        })();
      const et = 1e3,
        Cn = 'ng-enter',
        Oe = 'ng-leave',
        bt = 'ng-trigger',
        Je = '.ng-trigger',
        wt = 'ng-animating',
        Te = '.ng-animating';
      function R(B) {
        if ('number' == typeof B) return B;
        const h = B.match(/^(-?[\.\d]+)(m?s)/);
        return !h || h.length < 2 ? 0 : b(parseFloat(h[1]), h[2]);
      }
      function b(B, h) {
        return 's' === h ? B * et : B;
      }
      function E(B, h, p) {
        return B.hasOwnProperty('duration')
          ? B
          : (function V(B, h, p) {
              let H,
                Z = 0,
                ye = '';
              if ('string' == typeof B) {
                const Ee = B.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i,
                );
                if (null === Ee)
                  return h.push(ge()), { duration: 0, delay: 0, easing: '' };
                H = b(parseFloat(Ee[1]), Ee[2]);
                const qe = Ee[3];
                null != qe && (Z = b(parseFloat(qe), Ee[4]));
                const ft = Ee[5];
                ft && (ye = ft);
              } else H = B;
              if (!p) {
                let Ee = !1,
                  qe = h.length;
                H < 0 &&
                  (h.push(
                    (function ue() {
                      return new x.vHH(3100, !1);
                    })(),
                  ),
                  (Ee = !0)),
                  Z < 0 &&
                    (h.push(
                      (function le() {
                        return new x.vHH(3101, !1);
                      })(),
                    ),
                    (Ee = !0)),
                  Ee && h.splice(qe, 0, ge());
              }
              return { duration: H, delay: Z, easing: ye };
            })(B, h, p);
      }
      function Q(B, h = {}) {
        return (
          Object.keys(B).forEach(p => {
            h[p] = B[p];
          }),
          h
        );
      }
      function We(B) {
        const h = new Map();
        return (
          Object.keys(B).forEach(p => {
            h.set(p, B[p]);
          }),
          h
        );
      }
      function zt(B, h = new Map(), p) {
        if (p) for (let [S, H] of p) h.set(S, H);
        for (let [S, H] of B) h.set(S, H);
        return h;
      }
      function Bt(B, h, p) {
        return p ? h + ':' + p + ';' : '';
      }
      function on(B) {
        let h = '';
        for (let p = 0; p < B.style.length; p++) {
          const S = B.style.item(p);
          h += Bt(0, S, B.style.getPropertyValue(S));
        }
        for (const p in B.style)
          B.style.hasOwnProperty(p) &&
            !p.startsWith('_') &&
            (h += Bt(0, qn(p), B.style[p]));
        B.setAttribute('style', h);
      }
      function Re(B, h, p) {
        B.style &&
          (h.forEach((S, H) => {
            const Z = Ut(H);
            p && !p.has(H) && p.set(H, B.style[Z]), (B.style[Z] = S);
          }),
          Mn() && on(B));
      }
      function Ce(B, h) {
        B.style &&
          (h.forEach((p, S) => {
            const H = Ut(S);
            B.style[H] = '';
          }),
          Mn() && on(B));
      }
      function K(B) {
        return Array.isArray(B) ? (1 == B.length ? B[0] : (0, ee.vP)(B)) : B;
      }
      const ct = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function Ft(B) {
        let h = [];
        if ('string' == typeof B) {
          let p;
          for (; (p = ct.exec(B)); ) h.push(p[1]);
          ct.lastIndex = 0;
        }
        return h;
      }
      function Zt(B, h, p) {
        const S = B.toString(),
          H = S.replace(ct, (Z, ye) => {
            let Ee = h[ye];
            return (
              null == Ee &&
                (p.push(
                  (function pe(B) {
                    return new x.vHH(3003, !1);
                  })(),
                ),
                (Ee = '')),
              Ee.toString()
            );
          });
        return H == S ? B : H;
      }
      function _n(B) {
        const h = [];
        let p = B.next();
        for (; !p.done; ) h.push(p.value), (p = B.next());
        return h;
      }
      const In = /-+([a-z0-9])/g;
      function Ut(B) {
        return B.replace(In, (...h) => h[1].toUpperCase());
      }
      function qn(B) {
        return B.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function Wn(B, h, p) {
        switch (h.type) {
          case 7:
            return B.visitTrigger(h, p);
          case 0:
            return B.visitState(h, p);
          case 1:
            return B.visitTransition(h, p);
          case 2:
            return B.visitSequence(h, p);
          case 3:
            return B.visitGroup(h, p);
          case 4:
            return B.visitAnimate(h, p);
          case 5:
            return B.visitKeyframes(h, p);
          case 6:
            return B.visitStyle(h, p);
          case 8:
            return B.visitReference(h, p);
          case 9:
            return B.visitAnimateChild(h, p);
          case 10:
            return B.visitAnimateRef(h, p);
          case 11:
            return B.visitQuery(h, p);
          case 12:
            return B.visitStagger(h, p);
          default:
            throw (function se(B) {
              return new x.vHH(3004, !1);
            })();
        }
      }
      function Hi(B, h) {
        return window.getComputedStyle(B)[h];
      }
      const xi = '*';
      function gr(B, h) {
        const p = [];
        return (
          'string' == typeof B
            ? B.split(/\s*,\s*/).forEach(S =>
                (function mi(B, h, p) {
                  if (':' == B[0]) {
                    const qe = (function $t(B, h) {
                      switch (B) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (p, S) => parseFloat(S) > parseFloat(p);
                        case ':decrement':
                          return (p, S) => parseFloat(S) < parseFloat(p);
                        default:
                          return (
                            h.push(
                              (function re(B) {
                                return new x.vHH(3016, !1);
                              })(),
                            ),
                            '* => *'
                          );
                      }
                    })(B, p);
                    if ('function' == typeof qe) return void h.push(qe);
                    B = qe;
                  }
                  const S = B.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == S || S.length < 4)
                    return (
                      p.push(
                        (function tt(B) {
                          return new x.vHH(3015, !1);
                        })(),
                      ),
                      h
                    );
                  const H = S[1],
                    Z = S[2],
                    ye = S[3];
                  h.push(fi(H, ye));
                  '<' == Z[0] && !(H == xi && ye == xi) && h.push(fi(ye, H));
                })(S, p, h),
              )
            : p.push(B),
          p
        );
      }
      const dn = new Set(['true', '1']),
        Un = new Set(['false', '0']);
      function fi(B, h) {
        const p = dn.has(B) || Un.has(B),
          S = dn.has(h) || Un.has(h);
        return (H, Z) => {
          let ye = B == xi || B == H,
            Ee = h == xi || h == Z;
          return (
            !ye &&
              p &&
              'boolean' == typeof H &&
              (ye = H ? dn.has(B) : Un.has(B)),
            !Ee &&
              S &&
              'boolean' == typeof Z &&
              (Ee = Z ? dn.has(h) : Un.has(h)),
            ye && Ee
          );
        };
      }
      const Zn = new RegExp('s*:selfs*,?', 'g');
      function pi(B, h, p, S) {
        return new gi(B).build(h, p, S);
      }
      class gi {
        constructor(h) {
          this._driver = h;
        }
        build(h, p, S) {
          const H = new qi(p);
          return this._resetContextStyleTimingState(H), Wn(this, K(h), H);
        }
        _resetContextStyleTimingState(h) {
          (h.currentQuerySelector = ''),
            (h.collectedStyles = new Map()),
            h.collectedStyles.set('', new Map()),
            (h.currentTime = 0);
        }
        visitTrigger(h, p) {
          let S = (p.queryCount = 0),
            H = (p.depCount = 0);
          const Z = [],
            ye = [];
          return (
            '@' == h.name.charAt(0) &&
              p.errors.push(
                (function ze() {
                  return new x.vHH(3006, !1);
                })(),
              ),
            h.definitions.forEach(Ee => {
              if ((this._resetContextStyleTimingState(p), 0 == Ee.type)) {
                const qe = Ee,
                  ft = qe.name;
                ft
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach(Wt => {
                    (qe.name = Wt), Z.push(this.visitState(qe, p));
                  }),
                  (qe.name = ft);
              } else if (1 == Ee.type) {
                const qe = this.visitTransition(Ee, p);
                (S += qe.queryCount), (H += qe.depCount), ye.push(qe);
              } else
                p.errors.push(
                  (function st() {
                    return new x.vHH(3007, !1);
                  })(),
                );
            }),
            {
              type: 7,
              name: h.name,
              states: Z,
              transitions: ye,
              queryCount: S,
              depCount: H,
              options: null,
            }
          );
        }
        visitState(h, p) {
          const S = this.visitStyle(h.styles, p),
            H = (h.options && h.options.params) || null;
          if (S.containsDynamicStyles) {
            const Z = new Set(),
              ye = H || {};
            S.styles.forEach(Ee => {
              Ee instanceof Map &&
                Ee.forEach(qe => {
                  Ft(qe).forEach(ft => {
                    ye.hasOwnProperty(ft) || Z.add(ft);
                  });
                });
            }),
              Z.size &&
                (_n(Z.values()),
                p.errors.push(
                  (function gt(B, h) {
                    return new x.vHH(3008, !1);
                  })(),
                ));
          }
          return {
            type: 0,
            name: h.name,
            style: S,
            options: H ? { params: H } : null,
          };
        }
        visitTransition(h, p) {
          (p.queryCount = 0), (p.depCount = 0);
          const S = Wn(this, K(h.animation), p);
          return {
            type: 1,
            matchers: gr(h.expr, p.errors),
            animation: S,
            queryCount: p.queryCount,
            depCount: p.depCount,
            options: Ii(h.options),
          };
        }
        visitSequence(h, p) {
          return {
            type: 2,
            steps: h.steps.map(S => Wn(this, S, p)),
            options: Ii(h.options),
          };
        }
        visitGroup(h, p) {
          const S = p.currentTime;
          let H = 0;
          const Z = h.steps.map(ye => {
            p.currentTime = S;
            const Ee = Wn(this, ye, p);
            return (H = Math.max(H, p.currentTime)), Ee;
          });
          return (
            (p.currentTime = H), { type: 3, steps: Z, options: Ii(h.options) }
          );
        }
        visitAnimate(h, p) {
          const S = (function _r(B, h) {
            if (B.hasOwnProperty('duration')) return B;
            if ('number' == typeof B) return ni(E(B, h).duration, 0, '');
            const p = B;
            if (
              p.split(/\s+/).some(Z => '{' == Z.charAt(0) && '{' == Z.charAt(1))
            ) {
              const Z = ni(0, 0, '');
              return (Z.dynamic = !0), (Z.strValue = p), Z;
            }
            const H = E(p, h);
            return ni(H.duration, H.delay, H.easing);
          })(h.timings, p.errors);
          p.currentAnimateTimings = S;
          let H,
            Z = h.styles ? h.styles : (0, ee.oB)({});
          if (5 == Z.type) H = this.visitKeyframes(Z, p);
          else {
            let ye = h.styles,
              Ee = !1;
            if (!ye) {
              Ee = !0;
              const ft = {};
              S.easing && (ft.easing = S.easing), (ye = (0, ee.oB)(ft));
            }
            p.currentTime += S.duration + S.delay;
            const qe = this.visitStyle(ye, p);
            (qe.isEmptyStep = Ee), (H = qe);
          }
          return (
            (p.currentAnimateTimings = null),
            { type: 4, timings: S, style: H, options: null }
          );
        }
        visitStyle(h, p) {
          const S = this._makeStyleAst(h, p);
          return this._validateStyleAst(S, p), S;
        }
        _makeStyleAst(h, p) {
          const S = [],
            H = Array.isArray(h.styles) ? h.styles : [h.styles];
          for (let Ee of H)
            'string' == typeof Ee
              ? Ee === ee.l3
                ? S.push(Ee)
                : p.errors.push(new x.vHH(3002, !1))
              : S.push(We(Ee));
          let Z = !1,
            ye = null;
          return (
            S.forEach(Ee => {
              if (
                Ee instanceof Map &&
                (Ee.has('easing') &&
                  ((ye = Ee.get('easing')), Ee.delete('easing')),
                !Z)
              )
                for (let qe of Ee.values())
                  if (qe.toString().indexOf('{{') >= 0) {
                    Z = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: S,
              easing: ye,
              offset: h.offset,
              containsDynamicStyles: Z,
              options: null,
            }
          );
        }
        _validateStyleAst(h, p) {
          const S = p.currentAnimateTimings;
          let H = p.currentTime,
            Z = p.currentTime;
          S && Z > 0 && (Z -= S.duration + S.delay),
            h.styles.forEach(ye => {
              'string' != typeof ye &&
                ye.forEach((Ee, qe) => {
                  const ft = p.collectedStyles.get(p.currentQuerySelector),
                    Wt = ft.get(qe);
                  let Ht = !0;
                  Wt &&
                    (Z != H &&
                      Z >= Wt.startTime &&
                      H <= Wt.endTime &&
                      (p.errors.push(
                        (function at(B, h, p, S, H) {
                          return new x.vHH(3010, !1);
                        })(),
                      ),
                      (Ht = !1)),
                    (Z = Wt.startTime)),
                    Ht && ft.set(qe, { startTime: Z, endTime: H }),
                    p.options &&
                      (function we(B, h, p) {
                        const S = h.params || {},
                          H = Ft(B);
                        H.length &&
                          H.forEach(Z => {
                            S.hasOwnProperty(Z) ||
                              p.push(
                                (function ae(B) {
                                  return new x.vHH(3001, !1);
                                })(),
                              );
                          });
                      })(Ee, p.options, p.errors);
                });
            });
        }
        visitKeyframes(h, p) {
          const S = { type: 5, styles: [], options: null };
          if (!p.currentAnimateTimings)
            return (
              p.errors.push(
                (function vt() {
                  return new x.vHH(3011, !1);
                })(),
              ),
              S
            );
          let Z = 0;
          const ye = [];
          let Ee = !1,
            qe = !1,
            ft = 0;
          const Wt = h.steps.map(Qn => {
            const wi = this._makeStyleAst(Qn, p);
            let Ti =
                null != wi.offset
                  ? wi.offset
                  : (function Ui(B) {
                      if ('string' == typeof B) return null;
                      let h = null;
                      if (Array.isArray(B))
                        B.forEach(p => {
                          if (p instanceof Map && p.has('offset')) {
                            const S = p;
                            (h = parseFloat(S.get('offset'))),
                              S.delete('offset');
                          }
                        });
                      else if (B instanceof Map && B.has('offset')) {
                        const p = B;
                        (h = parseFloat(p.get('offset'))), p.delete('offset');
                      }
                      return h;
                    })(wi.styles),
              di = 0;
            return (
              null != Ti && (Z++, (di = wi.offset = Ti)),
              (qe = qe || di < 0 || di > 1),
              (Ee = Ee || di < ft),
              (ft = di),
              ye.push(di),
              wi
            );
          });
          qe &&
            p.errors.push(
              (function xe() {
                return new x.vHH(3012, !1);
              })(),
            ),
            Ee &&
              p.errors.push(
                (function ne() {
                  return new x.vHH(3200, !1);
                })(),
              );
          const Ht = h.steps.length;
          let yn = 0;
          Z > 0 && Z < Ht
            ? p.errors.push(
                (function te() {
                  return new x.vHH(3202, !1);
                })(),
              )
            : 0 == Z && (yn = 1 / (Ht - 1));
          const nn = Ht - 1,
            cn = p.currentTime,
            xn = p.currentAnimateTimings,
            zn = xn.duration;
          return (
            Wt.forEach((Qn, wi) => {
              const Ti = yn > 0 ? (wi == nn ? 1 : yn * wi) : ye[wi],
                di = Ti * zn;
              (p.currentTime = cn + xn.delay + di),
                (xn.duration = di),
                this._validateStyleAst(Qn, p),
                (Qn.offset = Ti),
                S.styles.push(Qn);
            }),
            S
          );
        }
        visitReference(h, p) {
          return {
            type: 8,
            animation: Wn(this, K(h.animation), p),
            options: Ii(h.options),
          };
        }
        visitAnimateChild(h, p) {
          return p.depCount++, { type: 9, options: Ii(h.options) };
        }
        visitAnimateRef(h, p) {
          return {
            type: 10,
            animation: this.visitReference(h.animation, p),
            options: Ii(h.options),
          };
        }
        visitQuery(h, p) {
          const S = p.currentQuerySelector,
            H = h.options || {};
          p.queryCount++, (p.currentQuery = h);
          const [Z, ye] = (function _i(B) {
            const h = !!B.split(/\s*,\s*/).find(p => ':self' == p);
            return (
              h && (B = B.replace(Zn, '')),
              (B = B.replace(/@\*/g, Je)
                .replace(/@\w+/g, p => Je + '-' + p.slice(1))
                .replace(/:animating/g, Te)),
              [B, h]
            );
          })(h.selector);
          (p.currentQuerySelector = S.length ? S + ' ' + Z : Z),
            wn(p.collectedStyles, p.currentQuerySelector, new Map());
          const Ee = Wn(this, K(h.animation), p);
          return (
            (p.currentQuery = null),
            (p.currentQuerySelector = S),
            {
              type: 11,
              selector: Z,
              limit: H.limit || 0,
              optional: !!H.optional,
              includeSelf: ye,
              animation: Ee,
              originalSelector: h.selector,
              options: Ii(h.options),
            }
          );
        }
        visitStagger(h, p) {
          p.currentQuery ||
            p.errors.push(
              (function X() {
                return new x.vHH(3013, !1);
              })(),
            );
          const S =
            'full' === h.timings
              ? { duration: 0, delay: 0, easing: 'full' }
              : E(h.timings, p.errors, !0);
          return {
            type: 12,
            animation: Wn(this, K(h.animation), p),
            timings: S,
            options: null,
          };
        }
      }
      class qi {
        constructor(h) {
          (this.errors = h),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Ii(B) {
        return (
          B
            ? (B = Q(B)).params &&
              (B.params = (function fn(B) {
                return B ? Q(B) : null;
              })(B.params))
            : (B = {}),
          B
        );
      }
      function ni(B, h, p) {
        return { duration: B, delay: h, easing: p };
      }
      function ur(B, h, p, S, H, Z, ye = null, Ee = !1) {
        return {
          type: 1,
          element: B,
          keyframes: h,
          preStyleProps: p,
          postStyleProps: S,
          duration: H,
          delay: Z,
          totalTime: H + Z,
          easing: ye,
          subTimeline: Ee,
        };
      }
      class Pi {
        constructor() {
          this._map = new Map();
        }
        get(h) {
          return this._map.get(h) || [];
        }
        append(h, p) {
          let S = this._map.get(h);
          S || this._map.set(h, (S = [])), S.push(...p);
        }
        has(h) {
          return this._map.has(h);
        }
        clear() {
          this._map.clear();
        }
      }
      const Bn = new RegExp(':enter', 'g'),
        Ni = new RegExp(':leave', 'g');
      function Li(
        B,
        h,
        p,
        S,
        H,
        Z = new Map(),
        ye = new Map(),
        Ee,
        qe,
        ft = [],
      ) {
        return new kr().buildKeyframes(B, h, p, S, H, Z, ye, Ee, qe, ft);
      }
      class kr {
        buildKeyframes(h, p, S, H, Z, ye, Ee, qe, ft, Wt = []) {
          ft = ft || new Pi();
          const Ht = new Ki(h, p, ft, H, Z, Wt, []);
          Ht.options = qe;
          const yn = qe.delay ? R(qe.delay) : 0;
          Ht.currentTimeline.delayNextStep(yn),
            Ht.currentTimeline.setStyles([ye], null, Ht.errors, qe),
            Wn(this, S, Ht);
          const nn = Ht.timelines.filter(cn => cn.containsAnimation());
          if (nn.length && Ee.size) {
            let cn;
            for (let xn = nn.length - 1; xn >= 0; xn--) {
              const zn = nn[xn];
              if (zn.element === p) {
                cn = zn;
                break;
              }
            }
            cn &&
              !cn.allowOnlyTimelineStyles() &&
              cn.setStyles([Ee], null, Ht.errors, qe);
          }
          return nn.length
            ? nn.map(cn => cn.buildKeyframes())
            : [ur(p, [], [], [], 0, yn, '', !1)];
        }
        visitTrigger(h, p) {}
        visitState(h, p) {}
        visitTransition(h, p) {}
        visitAnimateChild(h, p) {
          const S = p.subInstructions.get(p.element);
          if (S) {
            const H = p.createSubContext(h.options),
              Z = p.currentTimeline.currentTime,
              ye = this._visitSubInstructions(S, H, H.options);
            Z != ye && p.transformIntoNewTimeline(ye);
          }
          p.previousNode = h;
        }
        visitAnimateRef(h, p) {
          const S = p.createSubContext(h.options);
          S.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [h.options, h.animation.options],
              p,
              S,
            ),
            this.visitReference(h.animation, S),
            p.transformIntoNewTimeline(S.currentTimeline.currentTime),
            (p.previousNode = h);
        }
        _applyAnimationRefDelays(h, p, S) {
          for (const H of h) {
            const Z = H?.delay;
            if (Z) {
              const ye =
                'number' == typeof Z ? Z : R(Zt(Z, H?.params ?? {}, p.errors));
              S.delayNextStep(ye);
            }
          }
        }
        _visitSubInstructions(h, p, S) {
          let Z = p.currentTimeline.currentTime;
          const ye = null != S.duration ? R(S.duration) : null,
            Ee = null != S.delay ? R(S.delay) : null;
          return (
            0 !== ye &&
              h.forEach(qe => {
                const ft = p.appendInstructionToTimeline(qe, ye, Ee);
                Z = Math.max(Z, ft.duration + ft.delay);
              }),
            Z
          );
        }
        visitReference(h, p) {
          p.updateOptions(h.options, !0),
            Wn(this, h.animation, p),
            (p.previousNode = h);
        }
        visitSequence(h, p) {
          const S = p.subContextCount;
          let H = p;
          const Z = h.options;
          if (
            Z &&
            (Z.params || Z.delay) &&
            ((H = p.createSubContext(Z)),
            H.transformIntoNewTimeline(),
            null != Z.delay)
          ) {
            6 == H.previousNode.type &&
              (H.currentTimeline.snapshotCurrentStyles(),
              (H.previousNode = rr));
            const ye = R(Z.delay);
            H.delayNextStep(ye);
          }
          h.steps.length &&
            (h.steps.forEach(ye => Wn(this, ye, H)),
            H.currentTimeline.applyStylesToKeyframe(),
            H.subContextCount > S && H.transformIntoNewTimeline()),
            (p.previousNode = h);
        }
        visitGroup(h, p) {
          const S = [];
          let H = p.currentTimeline.currentTime;
          const Z = h.options && h.options.delay ? R(h.options.delay) : 0;
          h.steps.forEach(ye => {
            const Ee = p.createSubContext(h.options);
            Z && Ee.delayNextStep(Z),
              Wn(this, ye, Ee),
              (H = Math.max(H, Ee.currentTimeline.currentTime)),
              S.push(Ee.currentTimeline);
          }),
            S.forEach(ye => p.currentTimeline.mergeTimelineCollectedStyles(ye)),
            p.transformIntoNewTimeline(H),
            (p.previousNode = h);
        }
        _visitTiming(h, p) {
          if (h.dynamic) {
            const S = h.strValue;
            return E(p.params ? Zt(S, p.params, p.errors) : S, p.errors);
          }
          return { duration: h.duration, delay: h.delay, easing: h.easing };
        }
        visitAnimate(h, p) {
          const S = (p.currentAnimateTimings = this._visitTiming(h.timings, p)),
            H = p.currentTimeline;
          S.delay && (p.incrementTime(S.delay), H.snapshotCurrentStyles());
          const Z = h.style;
          5 == Z.type
            ? this.visitKeyframes(Z, p)
            : (p.incrementTime(S.duration),
              this.visitStyle(Z, p),
              H.applyStylesToKeyframe()),
            (p.currentAnimateTimings = null),
            (p.previousNode = h);
        }
        visitStyle(h, p) {
          const S = p.currentTimeline,
            H = p.currentAnimateTimings;
          !H && S.hasCurrentStyleProperties() && S.forwardFrame();
          const Z = (H && H.easing) || h.easing;
          h.isEmptyStep
            ? S.applyEmptyStep(Z)
            : S.setStyles(h.styles, Z, p.errors, p.options),
            (p.previousNode = h);
        }
        visitKeyframes(h, p) {
          const S = p.currentAnimateTimings,
            H = p.currentTimeline.duration,
            Z = S.duration,
            Ee = p.createSubContext().currentTimeline;
          (Ee.easing = S.easing),
            h.styles.forEach(qe => {
              Ee.forwardTime((qe.offset || 0) * Z),
                Ee.setStyles(qe.styles, qe.easing, p.errors, p.options),
                Ee.applyStylesToKeyframe();
            }),
            p.currentTimeline.mergeTimelineCollectedStyles(Ee),
            p.transformIntoNewTimeline(H + Z),
            (p.previousNode = h);
        }
        visitQuery(h, p) {
          const S = p.currentTimeline.currentTime,
            H = h.options || {},
            Z = H.delay ? R(H.delay) : 0;
          Z &&
            (6 === p.previousNode.type ||
              (0 == S && p.currentTimeline.hasCurrentStyleProperties())) &&
            (p.currentTimeline.snapshotCurrentStyles(), (p.previousNode = rr));
          let ye = S;
          const Ee = p.invokeQuery(
            h.selector,
            h.originalSelector,
            h.limit,
            h.includeSelf,
            !!H.optional,
            p.errors,
          );
          p.currentQueryTotal = Ee.length;
          let qe = null;
          Ee.forEach((ft, Wt) => {
            p.currentQueryIndex = Wt;
            const Ht = p.createSubContext(h.options, ft);
            Z && Ht.delayNextStep(Z),
              ft === p.element && (qe = Ht.currentTimeline),
              Wn(this, h.animation, Ht),
              Ht.currentTimeline.applyStylesToKeyframe(),
              (ye = Math.max(ye, Ht.currentTimeline.currentTime));
          }),
            (p.currentQueryIndex = 0),
            (p.currentQueryTotal = 0),
            p.transformIntoNewTimeline(ye),
            qe &&
              (p.currentTimeline.mergeTimelineCollectedStyles(qe),
              p.currentTimeline.snapshotCurrentStyles()),
            (p.previousNode = h);
        }
        visitStagger(h, p) {
          const S = p.parentContext,
            H = p.currentTimeline,
            Z = h.timings,
            ye = Math.abs(Z.duration),
            Ee = ye * (p.currentQueryTotal - 1);
          let qe = ye * p.currentQueryIndex;
          switch (Z.duration < 0 ? 'reverse' : Z.easing) {
            case 'reverse':
              qe = Ee - qe;
              break;
            case 'full':
              qe = S.currentStaggerTime;
          }
          const Wt = p.currentTimeline;
          qe && Wt.delayNextStep(qe);
          const Ht = Wt.currentTime;
          Wn(this, h.animation, p),
            (p.previousNode = h),
            (S.currentStaggerTime =
              H.currentTime - Ht + (H.startTime - S.currentTimeline.startTime));
        }
      }
      const rr = {};
      class Ki {
        constructor(h, p, S, H, Z, ye, Ee, qe) {
          (this._driver = h),
            (this.element = p),
            (this.subInstructions = S),
            (this._enterClassName = H),
            (this._leaveClassName = Z),
            (this.errors = ye),
            (this.timelines = Ee),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = rr),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = qe || new zi(this._driver, p, 0)),
            Ee.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(h, p) {
          if (!h) return;
          const S = h;
          let H = this.options;
          null != S.duration && (H.duration = R(S.duration)),
            null != S.delay && (H.delay = R(S.delay));
          const Z = S.params;
          if (Z) {
            let ye = H.params;
            ye || (ye = this.options.params = {}),
              Object.keys(Z).forEach(Ee => {
                (!p || !ye.hasOwnProperty(Ee)) &&
                  (ye[Ee] = Zt(Z[Ee], ye, this.errors));
              });
          }
        }
        _copyOptions() {
          const h = {};
          if (this.options) {
            const p = this.options.params;
            if (p) {
              const S = (h.params = {});
              Object.keys(p).forEach(H => {
                S[H] = p[H];
              });
            }
          }
          return h;
        }
        createSubContext(h = null, p, S) {
          const H = p || this.element,
            Z = new Ki(
              this._driver,
              H,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(H, S || 0),
            );
          return (
            (Z.previousNode = this.previousNode),
            (Z.currentAnimateTimings = this.currentAnimateTimings),
            (Z.options = this._copyOptions()),
            Z.updateOptions(h),
            (Z.currentQueryIndex = this.currentQueryIndex),
            (Z.currentQueryTotal = this.currentQueryTotal),
            (Z.parentContext = this),
            this.subContextCount++,
            Z
          );
        }
        transformIntoNewTimeline(h) {
          return (
            (this.previousNode = rr),
            (this.currentTimeline = this.currentTimeline.fork(this.element, h)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(h, p, S) {
          const H = {
              duration: p ?? h.duration,
              delay: this.currentTimeline.currentTime + (S ?? 0) + h.delay,
              easing: '',
            },
            Z = new q(
              this._driver,
              h.element,
              h.keyframes,
              h.preStyleProps,
              h.postStyleProps,
              H,
              h.stretchStartingKeyframe,
            );
          return this.timelines.push(Z), H;
        }
        incrementTime(h) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + h);
        }
        delayNextStep(h) {
          h > 0 && this.currentTimeline.delayNextStep(h);
        }
        invokeQuery(h, p, S, H, Z, ye) {
          let Ee = [];
          if ((H && Ee.push(this.element), h.length > 0)) {
            h = (h = h.replace(Bn, '.' + this._enterClassName)).replace(
              Ni,
              '.' + this._leaveClassName,
            );
            let ft = this._driver.query(this.element, h, 1 != S);
            0 !== S &&
              (ft =
                S < 0 ? ft.slice(ft.length + S, ft.length) : ft.slice(0, S)),
              Ee.push(...ft);
          }
          return (
            !Z &&
              0 == Ee.length &&
              ye.push(
                (function Se(B) {
                  return new x.vHH(3014, !1);
                })(),
              ),
            Ee
          );
        }
      }
      class zi {
        constructor(h, p, S, H) {
          (this._driver = h),
            (this.element = p),
            (this.startTime = S),
            (this._elementTimelineStylesLookup = H),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(p)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                p,
                this._localTimelineStyles,
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(h) {
          const p = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || p
            ? (this.forwardTime(this.currentTime + h),
              p && this.snapshotCurrentStyles())
            : (this.startTime += h);
        }
        fork(h, p) {
          return (
            this.applyStylesToKeyframe(),
            new zi(
              this._driver,
              h,
              p || this.currentTime,
              this._elementTimelineStylesLookup,
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(h) {
          this.applyStylesToKeyframe(),
            (this.duration = h),
            this._loadKeyframe();
        }
        _updateStyle(h, p) {
          this._localTimelineStyles.set(h, p),
            this._globalTimelineStyles.set(h, p),
            this._styleSummary.set(h, { time: this.currentTime, value: p });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(h) {
          h && this._previousKeyframe.set('easing', h);
          for (let [p, S] of this._globalTimelineStyles)
            this._backFill.set(p, S || ee.l3),
              this._currentKeyframe.set(p, ee.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(h, p, S, H) {
          p && this._previousKeyframe.set('easing', p);
          const Z = (H && H.params) || {},
            ye = (function Ie(B, h) {
              const p = new Map();
              let S;
              return (
                B.forEach(H => {
                  if ('*' === H) {
                    S = S || h.keys();
                    for (let Z of S) p.set(Z, ee.l3);
                  } else zt(H, p);
                }),
                p
              );
            })(h, this._globalTimelineStyles);
          for (let [Ee, qe] of ye) {
            const ft = Zt(qe, Z, S);
            this._pendingStyles.set(Ee, ft),
              this._localTimelineStyles.has(Ee) ||
                this._backFill.set(
                  Ee,
                  this._globalTimelineStyles.get(Ee) ?? ee.l3,
                ),
              this._updateStyle(Ee, ft);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((h, p) => {
              this._currentKeyframe.set(p, h);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((h, p) => {
              this._currentKeyframe.has(p) || this._currentKeyframe.set(p, h);
            }));
        }
        snapshotCurrentStyles() {
          for (let [h, p] of this._localTimelineStyles)
            this._pendingStyles.set(h, p), this._updateStyle(h, p);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const h = [];
          for (let p in this._currentKeyframe) h.push(p);
          return h;
        }
        mergeTimelineCollectedStyles(h) {
          h._styleSummary.forEach((p, S) => {
            const H = this._styleSummary.get(S);
            (!H || p.time > H.time) && this._updateStyle(S, p.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const h = new Set(),
            p = new Set(),
            S = 1 === this._keyframes.size && 0 === this.duration;
          let H = [];
          this._keyframes.forEach((Ee, qe) => {
            const ft = zt(Ee, new Map(), this._backFill);
            ft.forEach((Wt, Ht) => {
              Wt === ee.k1 ? h.add(Ht) : Wt === ee.l3 && p.add(Ht);
            }),
              S || ft.set('offset', qe / this.duration),
              H.push(ft);
          });
          const Z = h.size ? _n(h.values()) : [],
            ye = p.size ? _n(p.values()) : [];
          if (S) {
            const Ee = H[0],
              qe = new Map(Ee);
            Ee.set('offset', 0), qe.set('offset', 1), (H = [Ee, qe]);
          }
          return ur(
            this.element,
            H,
            Z,
            ye,
            this.duration,
            this.startTime,
            this.easing,
            !1,
          );
        }
      }
      class q extends zi {
        constructor(h, p, S, H, Z, ye, Ee = !1) {
          super(h, p, ye.delay),
            (this.keyframes = S),
            (this.preStyleProps = H),
            (this.postStyleProps = Z),
            (this._stretchStartingKeyframe = Ee),
            (this.timings = {
              duration: ye.duration,
              delay: ye.delay,
              easing: ye.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let h = this.keyframes,
            { delay: p, duration: S, easing: H } = this.timings;
          if (this._stretchStartingKeyframe && p) {
            const Z = [],
              ye = S + p,
              Ee = p / ye,
              qe = zt(h[0]);
            qe.set('offset', 0), Z.push(qe);
            const ft = zt(h[0]);
            ft.set('offset', Ke(Ee)), Z.push(ft);
            const Wt = h.length - 1;
            for (let Ht = 1; Ht <= Wt; Ht++) {
              let yn = zt(h[Ht]);
              const nn = yn.get('offset');
              yn.set('offset', Ke((p + nn * S) / ye)), Z.push(yn);
            }
            (S = ye), (p = 0), (H = ''), (h = Z);
          }
          return ur(
            this.element,
            h,
            this.preStyleProps,
            this.postStyleProps,
            S,
            p,
            H,
            !0,
          );
        }
      }
      function Ke(B, h = 3) {
        const p = Math.pow(10, h - 1);
        return Math.round(B * p) / p;
      }
      class kt {}
      const ln = new Set([
        'width',
        'height',
        'minWidth',
        'minHeight',
        'maxWidth',
        'maxHeight',
        'left',
        'top',
        'bottom',
        'right',
        'fontSize',
        'outlineWidth',
        'outlineOffset',
        'paddingTop',
        'paddingLeft',
        'paddingBottom',
        'paddingRight',
        'marginTop',
        'marginLeft',
        'marginBottom',
        'marginRight',
        'borderRadius',
        'borderWidth',
        'borderTopWidth',
        'borderLeftWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'textIndent',
        'perspective',
      ]);
      class vn extends kt {
        normalizePropertyName(h, p) {
          return Ut(h);
        }
        normalizeStyleValue(h, p, S, H) {
          let Z = '';
          const ye = S.toString().trim();
          if (ln.has(p) && 0 !== S && '0' !== S)
            if ('number' == typeof S) Z = 'px';
            else {
              const Ee = S.match(/^[+-]?[\d\.]+([a-z]*)$/);
              Ee &&
                0 == Ee[1].length &&
                H.push(
                  (function Be(B, h) {
                    return new x.vHH(3005, !1);
                  })(),
                );
            }
          return ye + Z;
        }
      }
      function Nn(B, h, p, S, H, Z, ye, Ee, qe, ft, Wt, Ht, yn) {
        return {
          type: 0,
          element: B,
          triggerName: h,
          isRemovalTransition: H,
          fromState: p,
          fromStyles: Z,
          toState: S,
          toStyles: ye,
          timelines: Ee,
          queriedElements: qe,
          preStyleProps: ft,
          postStyleProps: Wt,
          totalTime: Ht,
          errors: yn,
        };
      }
      const Kn = {};
      class Rn {
        constructor(h, p, S) {
          (this._triggerName = h), (this.ast = p), (this._stateStyles = S);
        }
        match(h, p, S, H) {
          return (function Hr(B, h, p, S, H) {
            return B.some(Z => Z(h, p, S, H));
          })(this.ast.matchers, h, p, S, H);
        }
        buildStyles(h, p, S) {
          let H = this._stateStyles.get('*');
          return (
            void 0 !== h && (H = this._stateStyles.get(h?.toString()) || H),
            H ? H.buildStyles(p, S) : new Map()
          );
        }
        build(h, p, S, H, Z, ye, Ee, qe, ft, Wt) {
          const Ht = [],
            yn = (this.ast.options && this.ast.options.params) || Kn,
            cn = this.buildStyles(S, (Ee && Ee.params) || Kn, Ht),
            xn = (qe && qe.params) || Kn,
            zn = this.buildStyles(H, xn, Ht),
            Qn = new Set(),
            wi = new Map(),
            Ti = new Map(),
            di = 'void' === H,
            wr = { params: vr(xn, yn), delay: this.ast.options?.delay },
            Ji = Wt
              ? []
              : Li(h, p, this.ast.animation, Z, ye, cn, zn, wr, ft, Ht);
          let y = 0;
          if (
            (Ji.forEach(A => {
              y = Math.max(A.duration + A.delay, y);
            }),
            Ht.length)
          )
            return Nn(
              p,
              this._triggerName,
              S,
              H,
              di,
              cn,
              zn,
              [],
              [],
              wi,
              Ti,
              y,
              Ht,
            );
          Ji.forEach(A => {
            const z = A.element,
              ce = wn(wi, z, new Set());
            A.preStyleProps.forEach(_t => ce.add(_t));
            const ot = wn(Ti, z, new Set());
            A.postStyleProps.forEach(_t => ot.add(_t)), z !== p && Qn.add(z);
          });
          const P = _n(Qn.values());
          return Nn(p, this._triggerName, S, H, di, cn, zn, Ji, P, wi, Ti, y);
        }
      }
      function vr(B, h) {
        const p = Q(h);
        for (const S in B) B.hasOwnProperty(S) && null != B[S] && (p[S] = B[S]);
        return p;
      }
      class br {
        constructor(h, p, S) {
          (this.styles = h), (this.defaultParams = p), (this.normalizer = S);
        }
        buildStyles(h, p) {
          const S = new Map(),
            H = Q(this.defaultParams);
          return (
            Object.keys(h).forEach(Z => {
              const ye = h[Z];
              null !== ye && (H[Z] = ye);
            }),
            this.styles.styles.forEach(Z => {
              'string' != typeof Z &&
                Z.forEach((ye, Ee) => {
                  ye && (ye = Zt(ye, H, p));
                  const qe = this.normalizer.normalizePropertyName(Ee, p);
                  (ye = this.normalizer.normalizeStyleValue(Ee, qe, ye, p)),
                    S.set(Ee, ye);
                });
            }),
            S
          );
        }
      }
      class Jr {
        constructor(h, p, S) {
          (this.name = h),
            (this.ast = p),
            (this._normalizer = S),
            (this.transitionFactories = []),
            (this.states = new Map()),
            p.states.forEach(H => {
              this.states.set(
                H.name,
                new br(H.style, (H.options && H.options.params) || {}, S),
              );
            }),
            pr(this.states, 'true', '1'),
            pr(this.states, 'false', '0'),
            p.transitions.forEach(H => {
              this.transitionFactories.push(new Rn(h, H, this.states));
            }),
            (this.fallbackTransition = (function eo(B, h, p) {
              return new Rn(
                B,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(ye, Ee) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                h,
              );
            })(h, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(h, p, S, H) {
          return (
            this.transitionFactories.find(ye => ye.match(h, p, S, H)) || null
          );
        }
        matchStyles(h, p, S) {
          return this.fallbackTransition.buildStyles(h, p, S);
        }
      }
      function pr(B, h, p) {
        B.has(h)
          ? B.has(p) || B.set(p, B.get(h))
          : B.has(p) && B.set(h, B.get(p));
      }
      const to = new Pi();
      class no {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(h, p) {
          const S = [],
            H = [],
            Z = pi(this._driver, p, S, H);
          if (S.length)
            throw (function Ge(B) {
              return new x.vHH(3503, !1);
            })();
          this._animations.set(h, Z);
        }
        _buildPlayer(h, p, S) {
          const H = h.element,
            Z = an(0, this._normalizer, 0, h.keyframes, p, S);
          return this._driver.animate(
            H,
            Z,
            h.duration,
            h.delay,
            h.easing,
            [],
            !0,
          );
        }
        create(h, p, S = {}) {
          const H = [],
            Z = this._animations.get(h);
          let ye;
          const Ee = new Map();
          if (
            (Z
              ? ((ye = Li(
                  this._driver,
                  p,
                  Z,
                  Cn,
                  Oe,
                  new Map(),
                  new Map(),
                  S,
                  to,
                  H,
                )),
                ye.forEach(Wt => {
                  const Ht = wn(Ee, Wt.element, new Map());
                  Wt.postStyleProps.forEach(yn => Ht.set(yn, null));
                }))
              : (H.push(
                  (function $e() {
                    return new x.vHH(3300, !1);
                  })(),
                ),
                (ye = [])),
            H.length)
          )
            throw (function Me(B) {
              return new x.vHH(3504, !1);
            })();
          Ee.forEach((Wt, Ht) => {
            Wt.forEach((yn, nn) => {
              Wt.set(nn, this._driver.computeStyle(Ht, nn, ee.l3));
            });
          });
          const ft = un(
            ye.map(Wt => {
              const Ht = Ee.get(Wt.element);
              return this._buildPlayer(Wt, new Map(), Ht);
            }),
          );
          return (
            this._playersById.set(h, ft),
            ft.onDestroy(() => this.destroy(h)),
            this.players.push(ft),
            ft
          );
        }
        destroy(h) {
          const p = this._getPlayer(h);
          p.destroy(), this._playersById.delete(h);
          const S = this.players.indexOf(p);
          S >= 0 && this.players.splice(S, 1);
        }
        _getPlayer(h) {
          const p = this._playersById.get(h);
          if (!p)
            throw (function Ue(B) {
              return new x.vHH(3301, !1);
            })();
          return p;
        }
        listen(h, p, S, H) {
          const Z = mn(p, '', '', '');
          return Dn(this._getPlayer(h), S, Z, H), () => {};
        }
        command(h, p, S, H) {
          if ('register' == S) return void this.register(h, H[0]);
          if ('create' == S) return void this.create(h, p, H[0] || {});
          const Z = this._getPlayer(h);
          switch (S) {
            case 'play':
              Z.play();
              break;
            case 'pause':
              Z.pause();
              break;
            case 'reset':
              Z.reset();
              break;
            case 'restart':
              Z.restart();
              break;
            case 'finish':
              Z.finish();
              break;
            case 'init':
              Z.init();
              break;
            case 'setPosition':
              Z.setPosition(parseFloat(H[0]));
              break;
            case 'destroy':
              this.destroy(h);
          }
        }
      }
      const po = 'ng-animate-queued',
        Tr = 'ng-animate-disabled',
        mo = [],
        yr = {
          namespaceId: '',
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        $i = {
          namespaceId: '',
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        ki = '__ng_removed';
      class Rr {
        get params() {
          return this.options.params;
        }
        constructor(h, p = '') {
          this.namespaceId = p;
          const S = h && h.hasOwnProperty('value');
          if (
            ((this.value = (function wo(B) {
              return B ?? null;
            })(S ? h.value : h)),
            S)
          ) {
            const Z = Q(h);
            delete Z.value, (this.options = Z);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(h) {
          const p = h.params;
          if (p) {
            const S = this.options.params;
            Object.keys(p).forEach(H => {
              null == S[H] && (S[H] = p[H]);
            });
          }
        }
      }
      const Dr = 'void',
        ro = new Rr(Dr);
      class oo {
        constructor(h, p, S) {
          (this.id = h),
            (this.hostElement = p),
            (this._engine = S),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + h),
            ci(p, this._hostClassName);
        }
        listen(h, p, S, H) {
          if (!this._triggers.has(p))
            throw (function De(B, h) {
              return new x.vHH(3302, !1);
            })();
          if (null == S || 0 == S.length)
            throw (function Pe(B) {
              return new x.vHH(3303, !1);
            })();
          if (
            !(function bi(B) {
              return 'start' == B || 'done' == B;
            })(S)
          )
            throw (function a(B, h) {
              return new x.vHH(3400, !1);
            })();
          const Z = wn(this._elementListeners, h, []),
            ye = { name: p, phase: S, callback: H };
          Z.push(ye);
          const Ee = wn(this._engine.statesByElement, h, new Map());
          return (
            Ee.has(p) || (ci(h, bt), ci(h, bt + '-' + p), Ee.set(p, ro)),
            () => {
              this._engine.afterFlush(() => {
                const qe = Z.indexOf(ye);
                qe >= 0 && Z.splice(qe, 1),
                  this._triggers.has(p) || Ee.delete(p);
              });
            }
          );
        }
        register(h, p) {
          return !this._triggers.has(h) && (this._triggers.set(h, p), !0);
        }
        _getTrigger(h) {
          const p = this._triggers.get(h);
          if (!p)
            throw (function Ye(B) {
              return new x.vHH(3401, !1);
            })();
          return p;
        }
        trigger(h, p, S, H = !0) {
          const Z = this._getTrigger(p),
            ye = new Ur(this.id, p, h);
          let Ee = this._engine.statesByElement.get(h);
          Ee ||
            (ci(h, bt),
            ci(h, bt + '-' + p),
            this._engine.statesByElement.set(h, (Ee = new Map())));
          let qe = Ee.get(p);
          const ft = new Rr(S, this.id);
          if (
            (!(S && S.hasOwnProperty('value')) &&
              qe &&
              ft.absorbOptions(qe.options),
            Ee.set(p, ft),
            qe || (qe = ro),
            ft.value !== Dr && qe.value === ft.value)
          ) {
            if (
              !(function Cr(B, h) {
                const p = Object.keys(B),
                  S = Object.keys(h);
                if (p.length != S.length) return !1;
                for (let H = 0; H < p.length; H++) {
                  const Z = p[H];
                  if (!h.hasOwnProperty(Z) || B[Z] !== h[Z]) return !1;
                }
                return !0;
              })(qe.params, ft.params)
            ) {
              const xn = [],
                zn = Z.matchStyles(qe.value, qe.params, xn),
                Qn = Z.matchStyles(ft.value, ft.params, xn);
              xn.length
                ? this._engine.reportError(xn)
                : this._engine.afterFlush(() => {
                    Ce(h, zn), Re(h, Qn);
                  });
            }
            return;
          }
          const yn = wn(this._engine.playersByElement, h, []);
          yn.forEach(xn => {
            xn.namespaceId == this.id &&
              xn.triggerName == p &&
              xn.queued &&
              xn.destroy();
          });
          let nn = Z.matchTransition(qe.value, ft.value, h, ft.params),
            cn = !1;
          if (!nn) {
            if (!H) return;
            (nn = Z.fallbackTransition), (cn = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: h,
              triggerName: p,
              transition: nn,
              fromState: qe,
              toState: ft,
              player: ye,
              isFallbackTransition: cn,
            }),
            cn ||
              (ci(h, po),
              ye.onStart(() => {
                oi(h, po);
              })),
            ye.onDone(() => {
              let xn = this.players.indexOf(ye);
              xn >= 0 && this.players.splice(xn, 1);
              const zn = this._engine.playersByElement.get(h);
              if (zn) {
                let Qn = zn.indexOf(ye);
                Qn >= 0 && zn.splice(Qn, 1);
              }
            }),
            this.players.push(ye),
            yn.push(ye),
            ye
          );
        }
        deregister(h) {
          this._triggers.delete(h),
            this._engine.statesByElement.forEach(p => p.delete(h)),
            this._elementListeners.forEach((p, S) => {
              this._elementListeners.set(
                S,
                p.filter(H => H.name != h),
              );
            });
        }
        clearElementCache(h) {
          this._engine.statesByElement.delete(h),
            this._elementListeners.delete(h);
          const p = this._engine.playersByElement.get(h);
          p &&
            (p.forEach(S => S.destroy()),
            this._engine.playersByElement.delete(h));
        }
        _signalRemovalForInnerTriggers(h, p) {
          const S = this._engine.driver.query(h, Je, !0);
          S.forEach(H => {
            if (H[ki]) return;
            const Z = this._engine.fetchNamespacesByElement(H);
            Z.size
              ? Z.forEach(ye => ye.triggerLeaveAnimation(H, p, !1, !0))
              : this.clearElementCache(H);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              S.forEach(H => this.clearElementCache(H)),
            );
        }
        triggerLeaveAnimation(h, p, S, H) {
          const Z = this._engine.statesByElement.get(h),
            ye = new Map();
          if (Z) {
            const Ee = [];
            if (
              (Z.forEach((qe, ft) => {
                if ((ye.set(ft, qe.value), this._triggers.has(ft))) {
                  const Wt = this.trigger(h, ft, Dr, H);
                  Wt && Ee.push(Wt);
                }
              }),
              Ee.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, h, !0, p, ye),
                S && un(Ee).onDone(() => this._engine.processLeaveNode(h)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(h) {
          const p = this._elementListeners.get(h),
            S = this._engine.statesByElement.get(h);
          if (p && S) {
            const H = new Set();
            p.forEach(Z => {
              const ye = Z.name;
              if (H.has(ye)) return;
              H.add(ye);
              const qe = this._triggers.get(ye).fallbackTransition,
                ft = S.get(ye) || ro,
                Wt = new Rr(Dr),
                Ht = new Ur(this.id, ye, h);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: h,
                  triggerName: ye,
                  transition: qe,
                  fromState: ft,
                  toState: Wt,
                  player: Ht,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(h, p) {
          const S = this._engine;
          if (
            (h.childElementCount && this._signalRemovalForInnerTriggers(h, p),
            this.triggerLeaveAnimation(h, p, !0))
          )
            return;
          let H = !1;
          if (S.totalAnimations) {
            const Z = S.players.length ? S.playersByQueriedElement.get(h) : [];
            if (Z && Z.length) H = !0;
            else {
              let ye = h;
              for (; (ye = ye.parentNode); )
                if (S.statesByElement.get(ye)) {
                  H = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(h), H))
            S.markElementAsRemoved(this.id, h, !1, p);
          else {
            const Z = h[ki];
            (!Z || Z === yr) &&
              (S.afterFlush(() => this.clearElementCache(h)),
              S.destroyInnerAnimations(h),
              S._onRemovalComplete(h, p));
          }
        }
        insertNode(h, p) {
          ci(h, this._hostClassName);
        }
        drainQueuedTransitions(h) {
          const p = [];
          return (
            this._queue.forEach(S => {
              const H = S.player;
              if (H.destroyed) return;
              const Z = S.element,
                ye = this._elementListeners.get(Z);
              ye &&
                ye.forEach(Ee => {
                  if (Ee.name == S.triggerName) {
                    const qe = mn(
                      Z,
                      S.triggerName,
                      S.fromState.value,
                      S.toState.value,
                    );
                    (qe._data = h), Dn(S.player, Ee.phase, qe, Ee.callback);
                  }
                }),
                H.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      H.destroy();
                    })
                  : p.push(S);
            }),
            (this._queue = []),
            p.sort((S, H) => {
              const Z = S.transition.ast.depCount,
                ye = H.transition.ast.depCount;
              return 0 == Z || 0 == ye
                ? Z - ye
                : this._engine.driver.containsElement(S.element, H.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(h) {
          this.players.forEach(p => p.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, h);
        }
        elementContainsData(h) {
          let p = !1;
          return (
            this._elementListeners.has(h) && (p = !0),
            (p = !!this._queue.find(S => S.element === h) || p),
            p
          );
        }
      }
      class Fr {
        _onRemovalComplete(h, p) {
          this.onRemovalComplete(h, p);
        }
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this.driver = p),
            (this._normalizer = S),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (H, Z) => {});
        }
        get queuedPlayers() {
          const h = [];
          return (
            this._namespaceList.forEach(p => {
              p.players.forEach(S => {
                S.queued && h.push(S);
              });
            }),
            h
          );
        }
        createNamespace(h, p) {
          const S = new oo(h, p, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, p)
              ? this._balanceNamespaceList(S, p)
              : (this.newHostElements.set(p, S), this.collectEnterElement(p)),
            (this._namespaceLookup[h] = S)
          );
        }
        _balanceNamespaceList(h, p) {
          const S = this._namespaceList,
            H = this.namespacesByHostElement;
          if (S.length - 1 >= 0) {
            let ye = !1,
              Ee = this.driver.getParentElement(p);
            for (; Ee; ) {
              const qe = H.get(Ee);
              if (qe) {
                const ft = S.indexOf(qe);
                S.splice(ft + 1, 0, h), (ye = !0);
                break;
              }
              Ee = this.driver.getParentElement(Ee);
            }
            ye || S.unshift(h);
          } else S.push(h);
          return H.set(p, h), h;
        }
        register(h, p) {
          let S = this._namespaceLookup[h];
          return S || (S = this.createNamespace(h, p)), S;
        }
        registerTrigger(h, p, S) {
          let H = this._namespaceLookup[h];
          H && H.register(p, S) && this.totalAnimations++;
        }
        destroy(h, p) {
          if (!h) return;
          const S = this._fetchNamespace(h);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(S.hostElement),
              delete this._namespaceLookup[h];
            const H = this._namespaceList.indexOf(S);
            H >= 0 && this._namespaceList.splice(H, 1);
          }),
            this.afterFlushAnimationsDone(() => S.destroy(p));
        }
        _fetchNamespace(h) {
          return this._namespaceLookup[h];
        }
        fetchNamespacesByElement(h) {
          const p = new Set(),
            S = this.statesByElement.get(h);
          if (S)
            for (let H of S.values())
              if (H.namespaceId) {
                const Z = this._fetchNamespace(H.namespaceId);
                Z && p.add(Z);
              }
          return p;
        }
        trigger(h, p, S, H) {
          if (Yi(p)) {
            const Z = this._fetchNamespace(h);
            if (Z) return Z.trigger(p, S, H), !0;
          }
          return !1;
        }
        insertNode(h, p, S, H) {
          if (!Yi(p)) return;
          const Z = p[ki];
          if (Z && Z.setForRemoval) {
            (Z.setForRemoval = !1), (Z.setForMove = !0);
            const ye = this.collectedLeaveElements.indexOf(p);
            ye >= 0 && this.collectedLeaveElements.splice(ye, 1);
          }
          if (h) {
            const ye = this._fetchNamespace(h);
            ye && ye.insertNode(p, S);
          }
          H && this.collectEnterElement(p);
        }
        collectEnterElement(h) {
          this.collectedEnterElements.push(h);
        }
        markElementAsDisabled(h, p) {
          p
            ? this.disabledNodes.has(h) ||
              (this.disabledNodes.add(h), ci(h, Tr))
            : this.disabledNodes.has(h) &&
              (this.disabledNodes.delete(h), oi(h, Tr));
        }
        removeNode(h, p, S, H) {
          if (Yi(p)) {
            const Z = h ? this._fetchNamespace(h) : null;
            if (
              (Z ? Z.removeNode(p, H) : this.markElementAsRemoved(h, p, !1, H),
              S)
            ) {
              const ye = this.namespacesByHostElement.get(p);
              ye && ye.id !== h && ye.removeNode(p, H);
            }
          } else this._onRemovalComplete(p, H);
        }
        markElementAsRemoved(h, p, S, H, Z) {
          this.collectedLeaveElements.push(p),
            (p[ki] = {
              namespaceId: h,
              setForRemoval: H,
              hasAnimation: S,
              removedBeforeQueried: !1,
              previousTriggersValues: Z,
            });
        }
        listen(h, p, S, H, Z) {
          return Yi(p) ? this._fetchNamespace(h).listen(p, S, H, Z) : () => {};
        }
        _buildInstruction(h, p, S, H, Z) {
          return h.transition.build(
            this.driver,
            h.element,
            h.fromState.value,
            h.toState.value,
            S,
            H,
            h.fromState.options,
            h.toState.options,
            p,
            Z,
          );
        }
        destroyInnerAnimations(h) {
          let p = this.driver.query(h, Je, !0);
          p.forEach(S => this.destroyActiveAnimationsForElement(S)),
            0 != this.playersByQueriedElement.size &&
              ((p = this.driver.query(h, Te, !0)),
              p.forEach(S => this.finishActiveQueriedAnimationOnElement(S)));
        }
        destroyActiveAnimationsForElement(h) {
          const p = this.playersByElement.get(h);
          p &&
            p.forEach(S => {
              S.queued ? (S.markedForDestroy = !0) : S.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(h) {
          const p = this.playersByQueriedElement.get(h);
          p && p.forEach(S => S.finish());
        }
        whenRenderingDone() {
          return new Promise(h => {
            if (this.players.length) return un(this.players).onDone(() => h());
            h();
          });
        }
        processLeaveNode(h) {
          const p = h[ki];
          if (p && p.setForRemoval) {
            if (((h[ki] = yr), p.namespaceId)) {
              this.destroyInnerAnimations(h);
              const S = this._fetchNamespace(p.namespaceId);
              S && S.clearElementCache(h);
            }
            this._onRemovalComplete(h, p.setForRemoval);
          }
          h.classList?.contains(Tr) && this.markElementAsDisabled(h, !1),
            this.driver.query(h, '.ng-animate-disabled', !0).forEach(S => {
              this.markElementAsDisabled(S, !1);
            });
        }
        flush(h = -1) {
          let p = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((S, H) =>
                this._balanceNamespaceList(S, H),
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let S = 0; S < this.collectedEnterElements.length; S++)
              ci(this.collectedEnterElements[S], 'ng-star-inserted');
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const S = [];
            try {
              p = this._flushAnimations(S, h);
            } finally {
              for (let H = 0; H < S.length; H++) S[H]();
            }
          } else
            for (let S = 0; S < this.collectedLeaveElements.length; S++)
              this.processLeaveNode(this.collectedLeaveElements[S]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach(S => S()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const S = this._whenQuietFns;
            (this._whenQuietFns = []),
              p.length
                ? un(p).onDone(() => {
                    S.forEach(H => H());
                  })
                : S.forEach(H => H());
          }
        }
        reportError(h) {
          throw (function rt(B) {
            return new x.vHH(3402, !1);
          })();
        }
        _flushAnimations(h, p) {
          const S = new Pi(),
            H = [],
            Z = new Map(),
            ye = [],
            Ee = new Map(),
            qe = new Map(),
            ft = new Map(),
            Wt = new Set();
          this.disabledNodes.forEach(Pt => {
            Wt.add(Pt);
            const jt = this.driver.query(Pt, '.ng-animate-queued', !0);
            for (let Vt = 0; Vt < jt.length; Vt++) Wt.add(jt[Vt]);
          });
          const Ht = this.bodyNode,
            yn = Array.from(this.statesByElement.keys()),
            nn = li(yn, this.collectedEnterElements),
            cn = new Map();
          let xn = 0;
          nn.forEach((Pt, jt) => {
            const Vt = Cn + xn++;
            cn.set(jt, Vt), Pt.forEach(pn => ci(pn, Vt));
          });
          const zn = [],
            Qn = new Set(),
            wi = new Set();
          for (let Pt = 0; Pt < this.collectedLeaveElements.length; Pt++) {
            const jt = this.collectedLeaveElements[Pt],
              Vt = jt[ki];
            Vt &&
              Vt.setForRemoval &&
              (zn.push(jt),
              Qn.add(jt),
              Vt.hasAnimation
                ? this.driver
                    .query(jt, '.ng-star-inserted', !0)
                    .forEach(pn => Qn.add(pn))
                : wi.add(jt));
          }
          const Ti = new Map(),
            di = li(yn, Array.from(Qn));
          di.forEach((Pt, jt) => {
            const Vt = Oe + xn++;
            Ti.set(jt, Vt), Pt.forEach(pn => ci(pn, Vt));
          }),
            h.push(() => {
              nn.forEach((Pt, jt) => {
                const Vt = cn.get(jt);
                Pt.forEach(pn => oi(pn, Vt));
              }),
                di.forEach((Pt, jt) => {
                  const Vt = Ti.get(jt);
                  Pt.forEach(pn => oi(pn, Vt));
                }),
                zn.forEach(Pt => {
                  this.processLeaveNode(Pt);
                });
            });
          const wr = [],
            Ji = [];
          for (let Pt = this._namespaceList.length - 1; Pt >= 0; Pt--)
            this._namespaceList[Pt].drainQueuedTransitions(p).forEach(Vt => {
              const pn = Vt.player,
                gn = Vt.element;
              if ((wr.push(pn), this.collectedEnterElements.length)) {
                const Ci = gn[ki];
                if (Ci && Ci.setForMove) {
                  if (
                    Ci.previousTriggersValues &&
                    Ci.previousTriggersValues.has(Vt.triggerName)
                  ) {
                    const lr = Ci.previousTriggersValues.get(Vt.triggerName),
                      cr = this.statesByElement.get(Vt.element);
                    if (cr && cr.has(Vt.triggerName)) {
                      const vo = cr.get(Vt.triggerName);
                      (vo.value = lr), cr.set(Vt.triggerName, vo);
                    }
                  }
                  return void pn.destroy();
                }
              }
              const Yn = !Ht || !this.driver.containsElement(Ht, gn),
                ui = Ti.get(gn),
                si = cn.get(gn),
                Vn = this._buildInstruction(Vt, S, si, ui, Yn);
              if (Vn.errors && Vn.errors.length) return void Ji.push(Vn);
              if (Yn)
                return (
                  pn.onStart(() => Ce(gn, Vn.fromStyles)),
                  pn.onDestroy(() => Re(gn, Vn.toStyles)),
                  void H.push(pn)
                );
              if (Vt.isFallbackTransition)
                return (
                  pn.onStart(() => Ce(gn, Vn.fromStyles)),
                  pn.onDestroy(() => Re(gn, Vn.toStyles)),
                  void H.push(pn)
                );
              const er = [];
              Vn.timelines.forEach(Ci => {
                (Ci.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Ci.element) || er.push(Ci);
              }),
                (Vn.timelines = er),
                S.append(gn, Vn.timelines),
                ye.push({ instruction: Vn, player: pn, element: gn }),
                Vn.queriedElements.forEach(Ci => wn(Ee, Ci, []).push(pn)),
                Vn.preStyleProps.forEach((Ci, lr) => {
                  if (Ci.size) {
                    let cr = qe.get(lr);
                    cr || qe.set(lr, (cr = new Set())),
                      Ci.forEach((vo, ys) => cr.add(ys));
                  }
                }),
                Vn.postStyleProps.forEach((Ci, lr) => {
                  let cr = ft.get(lr);
                  cr || ft.set(lr, (cr = new Set())),
                    Ci.forEach((vo, ys) => cr.add(ys));
                });
            });
          if (Ji.length) {
            const Pt = [];
            Ji.forEach(jt => {
              Pt.push(
                (function ut(B, h) {
                  return new x.vHH(3505, !1);
                })(),
              );
            }),
              wr.forEach(jt => jt.destroy()),
              this.reportError(Pt);
          }
          const y = new Map(),
            P = new Map();
          ye.forEach(Pt => {
            const jt = Pt.element;
            S.has(jt) &&
              (P.set(jt, jt),
              this._beforeAnimationBuild(
                Pt.player.namespaceId,
                Pt.instruction,
                y,
              ));
          }),
            H.forEach(Pt => {
              const jt = Pt.element;
              this._getPreviousPlayers(
                jt,
                !1,
                Pt.namespaceId,
                Pt.triggerName,
                null,
              ).forEach(pn => {
                wn(y, jt, []).push(pn), pn.destroy();
              });
            });
          const A = zn.filter(Pt => Ei(Pt, qe, ft)),
            z = new Map();
          jr(z, this.driver, wi, ft, ee.l3).forEach(Pt => {
            Ei(Pt, qe, ft) && A.push(Pt);
          });
          const ot = new Map();
          nn.forEach((Pt, jt) => {
            jr(ot, this.driver, new Set(Pt), qe, ee.k1);
          }),
            A.forEach(Pt => {
              const jt = z.get(Pt),
                Vt = ot.get(Pt);
              z.set(
                Pt,
                new Map([
                  ...Array.from(jt?.entries() ?? []),
                  ...Array.from(Vt?.entries() ?? []),
                ]),
              );
            });
          const _t = [],
            en = [],
            $n = {};
          ye.forEach(Pt => {
            const { element: jt, player: Vt, instruction: pn } = Pt;
            if (S.has(jt)) {
              if (Wt.has(jt))
                return (
                  Vt.onDestroy(() => Re(jt, pn.toStyles)),
                  (Vt.disabled = !0),
                  Vt.overrideTotalTime(pn.totalTime),
                  void H.push(Vt)
                );
              let gn = $n;
              if (P.size > 1) {
                let ui = jt;
                const si = [];
                for (; (ui = ui.parentNode); ) {
                  const Vn = P.get(ui);
                  if (Vn) {
                    gn = Vn;
                    break;
                  }
                  si.push(ui);
                }
                si.forEach(Vn => P.set(Vn, gn));
              }
              const Yn = this._buildAnimation(Vt.namespaceId, pn, y, Z, ot, z);
              if ((Vt.setRealPlayer(Yn), gn === $n)) _t.push(Vt);
              else {
                const ui = this.playersByElement.get(gn);
                ui && ui.length && (Vt.parentPlayer = un(ui)), H.push(Vt);
              }
            } else
              Ce(jt, pn.fromStyles),
                Vt.onDestroy(() => Re(jt, pn.toStyles)),
                en.push(Vt),
                Wt.has(jt) && H.push(Vt);
          }),
            en.forEach(Pt => {
              const jt = Z.get(Pt.element);
              if (jt && jt.length) {
                const Vt = un(jt);
                Pt.setRealPlayer(Vt);
              }
            }),
            H.forEach(Pt => {
              Pt.parentPlayer
                ? Pt.syncPlayerEvents(Pt.parentPlayer)
                : Pt.destroy();
            });
          for (let Pt = 0; Pt < zn.length; Pt++) {
            const jt = zn[Pt],
              Vt = jt[ki];
            if ((oi(jt, Oe), Vt && Vt.hasAnimation)) continue;
            let pn = [];
            if (Ee.size) {
              let Yn = Ee.get(jt);
              Yn && Yn.length && pn.push(...Yn);
              let ui = this.driver.query(jt, Te, !0);
              for (let si = 0; si < ui.length; si++) {
                let Vn = Ee.get(ui[si]);
                Vn && Vn.length && pn.push(...Vn);
              }
            }
            const gn = pn.filter(Yn => !Yn.destroyed);
            gn.length ? yi(this, jt, gn) : this.processLeaveNode(jt);
          }
          return (
            (zn.length = 0),
            _t.forEach(Pt => {
              this.players.push(Pt),
                Pt.onDone(() => {
                  Pt.destroy();
                  const jt = this.players.indexOf(Pt);
                  this.players.splice(jt, 1);
                }),
                Pt.play();
            }),
            _t
          );
        }
        elementContainsData(h, p) {
          let S = !1;
          const H = p[ki];
          return (
            H && H.setForRemoval && (S = !0),
            this.playersByElement.has(p) && (S = !0),
            this.playersByQueriedElement.has(p) && (S = !0),
            this.statesByElement.has(p) && (S = !0),
            this._fetchNamespace(h).elementContainsData(p) || S
          );
        }
        afterFlush(h) {
          this._flushFns.push(h);
        }
        afterFlushAnimationsDone(h) {
          this._whenQuietFns.push(h);
        }
        _getPreviousPlayers(h, p, S, H, Z) {
          let ye = [];
          if (p) {
            const Ee = this.playersByQueriedElement.get(h);
            Ee && (ye = Ee);
          } else {
            const Ee = this.playersByElement.get(h);
            if (Ee) {
              const qe = !Z || Z == Dr;
              Ee.forEach(ft => {
                ft.queued || (!qe && ft.triggerName != H) || ye.push(ft);
              });
            }
          }
          return (
            (S || H) &&
              (ye = ye.filter(
                Ee =>
                  !((S && S != Ee.namespaceId) || (H && H != Ee.triggerName)),
              )),
            ye
          );
        }
        _beforeAnimationBuild(h, p, S) {
          const Z = p.element,
            ye = p.isRemovalTransition ? void 0 : h,
            Ee = p.isRemovalTransition ? void 0 : p.triggerName;
          for (const qe of p.timelines) {
            const ft = qe.element,
              Wt = ft !== Z,
              Ht = wn(S, ft, []);
            this._getPreviousPlayers(ft, Wt, ye, Ee, p.toState).forEach(nn => {
              const cn = nn.getRealPlayer();
              cn.beforeDestroy && cn.beforeDestroy(), nn.destroy(), Ht.push(nn);
            });
          }
          Ce(Z, p.fromStyles);
        }
        _buildAnimation(h, p, S, H, Z, ye) {
          const Ee = p.triggerName,
            qe = p.element,
            ft = [],
            Wt = new Set(),
            Ht = new Set(),
            yn = p.timelines.map(cn => {
              const xn = cn.element;
              Wt.add(xn);
              const zn = xn[ki];
              if (zn && zn.removedBeforeQueried)
                return new ee.ZN(cn.duration, cn.delay);
              const Qn = xn !== qe,
                wi = (function zr(B) {
                  const h = [];
                  return $r(B, h), h;
                })((S.get(xn) || mo).map(y => y.getRealPlayer())).filter(
                  y => !!y.element && y.element === xn,
                ),
                Ti = Z.get(xn),
                di = ye.get(xn),
                wr = an(0, this._normalizer, 0, cn.keyframes, Ti, di),
                Ji = this._buildPlayer(cn, wr, wi);
              if ((cn.subTimeline && H && Ht.add(xn), Qn)) {
                const y = new Ur(h, Ee, xn);
                y.setRealPlayer(Ji), ft.push(y);
              }
              return Ji;
            });
          ft.forEach(cn => {
            wn(this.playersByQueriedElement, cn.element, []).push(cn),
              cn.onDone(() =>
                (function Mo(B, h, p) {
                  let S = B.get(h);
                  if (S) {
                    if (S.length) {
                      const H = S.indexOf(p);
                      S.splice(H, 1);
                    }
                    0 == S.length && B.delete(h);
                  }
                  return S;
                })(this.playersByQueriedElement, cn.element, cn),
              );
          }),
            Wt.forEach(cn => ci(cn, wt));
          const nn = un(yn);
          return (
            nn.onDestroy(() => {
              Wt.forEach(cn => oi(cn, wt)), Re(qe, p.toStyles);
            }),
            Ht.forEach(cn => {
              wn(H, cn, []).push(nn);
            }),
            nn
          );
        }
        _buildPlayer(h, p, S) {
          return p.length > 0
            ? this.driver.animate(
                h.element,
                p,
                h.duration,
                h.delay,
                h.easing,
                S,
              )
            : new ee.ZN(h.duration, h.delay);
        }
      }
      class Ur {
        constructor(h, p, S) {
          (this.namespaceId = h),
            (this.triggerName = p),
            (this.element = S),
            (this._player = new ee.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(h) {
          this._containsRealPlayer ||
            ((this._player = h),
            this._queuedCallbacks.forEach((p, S) => {
              p.forEach(H => Dn(h, S, void 0, H));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(h.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(h) {
          this.totalTime = h;
        }
        syncPlayerEvents(h) {
          const p = this._player;
          p.triggerCallback && h.onStart(() => p.triggerCallback('start')),
            h.onDone(() => this.finish()),
            h.onDestroy(() => this.destroy());
        }
        _queueEvent(h, p) {
          wn(this._queuedCallbacks, h, []).push(p);
        }
        onDone(h) {
          this.queued && this._queueEvent('done', h), this._player.onDone(h);
        }
        onStart(h) {
          this.queued && this._queueEvent('start', h), this._player.onStart(h);
        }
        onDestroy(h) {
          this.queued && this._queueEvent('destroy', h),
            this._player.onDestroy(h);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(h) {
          this.queued || this._player.setPosition(h);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(h) {
          const p = this._player;
          p.triggerCallback && p.triggerCallback(h);
        }
      }
      function Yi(B) {
        return B && 1 === B.nodeType;
      }
      function so(B, h) {
        const p = B.style.display;
        return (B.style.display = h ?? 'none'), p;
      }
      function jr(B, h, p, S, H) {
        const Z = [];
        p.forEach(qe => Z.push(so(qe)));
        const ye = [];
        S.forEach((qe, ft) => {
          const Wt = new Map();
          qe.forEach(Ht => {
            const yn = h.computeStyle(ft, Ht, H);
            Wt.set(Ht, yn),
              (!yn || 0 == yn.length) && ((ft[ki] = $i), ye.push(ft));
          }),
            B.set(ft, Wt);
        });
        let Ee = 0;
        return p.forEach(qe => so(qe, Z[Ee++])), ye;
      }
      function li(B, h) {
        const p = new Map();
        if ((B.forEach(Ee => p.set(Ee, [])), 0 == h.length)) return p;
        const S = 1,
          H = new Set(h),
          Z = new Map();
        function ye(Ee) {
          if (!Ee) return S;
          let qe = Z.get(Ee);
          if (qe) return qe;
          const ft = Ee.parentNode;
          return (
            (qe = p.has(ft) ? ft : H.has(ft) ? S : ye(ft)), Z.set(Ee, qe), qe
          );
        }
        return (
          h.forEach(Ee => {
            const qe = ye(Ee);
            qe !== S && p.get(qe).push(Ee);
          }),
          p
        );
      }
      function ci(B, h) {
        B.classList?.add(h);
      }
      function oi(B, h) {
        B.classList?.remove(h);
      }
      function yi(B, h, p) {
        un(p).onDone(() => B.processLeaveNode(h));
      }
      function $r(B, h) {
        for (let p = 0; p < B.length; p++) {
          const S = B[p];
          S instanceof ee.ZE ? $r(S.players, h) : h.push(S);
        }
      }
      function Ei(B, h, p) {
        const S = p.get(B);
        if (!S) return !1;
        let H = h.get(B);
        return H ? S.forEach(Z => H.add(Z)) : h.set(B, S), p.delete(B), !0;
      }
      class xr {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (H, Z) => {}),
            (this._transitionEngine = new Fr(h, p, S)),
            (this._timelineEngine = new no(h, p, S)),
            (this._transitionEngine.onRemovalComplete = (H, Z) =>
              this.onRemovalComplete(H, Z));
        }
        registerTrigger(h, p, S, H, Z) {
          const ye = h + '-' + H;
          let Ee = this._triggerCache[ye];
          if (!Ee) {
            const qe = [],
              ft = [],
              Wt = pi(this._driver, Z, qe, ft);
            if (qe.length)
              throw (function Yt(B, h) {
                return new x.vHH(3404, !1);
              })();
            (Ee = (function fo(B, h, p) {
              return new Jr(B, h, p);
            })(H, Wt, this._normalizer)),
              (this._triggerCache[ye] = Ee);
          }
          this._transitionEngine.registerTrigger(p, H, Ee);
        }
        register(h, p) {
          this._transitionEngine.register(h, p);
        }
        destroy(h, p) {
          this._transitionEngine.destroy(h, p);
        }
        onInsert(h, p, S, H) {
          this._transitionEngine.insertNode(h, p, S, H);
        }
        onRemove(h, p, S, H) {
          this._transitionEngine.removeNode(h, p, H || !1, S);
        }
        disableAnimations(h, p) {
          this._transitionEngine.markElementAsDisabled(h, p);
        }
        process(h, p, S, H) {
          if ('@' == S.charAt(0)) {
            const [Z, ye] = Dt(S);
            this._timelineEngine.command(Z, p, ye, H);
          } else this._transitionEngine.trigger(h, p, S, H);
        }
        listen(h, p, S, H, Z) {
          if ('@' == S.charAt(0)) {
            const [ye, Ee] = Dt(S);
            return this._timelineEngine.listen(ye, p, Ee, Z);
          }
          return this._transitionEngine.listen(h, p, S, H, Z);
        }
        flush(h = -1) {
          this._transitionEngine.flush(h);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players,
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let Ao = (() => {
        class B {
          constructor(p, S, H) {
            (this._element = p),
              (this._startStyles = S),
              (this._endStyles = H),
              (this._state = 0);
            let Z = B.initialStylesByElement.get(p);
            Z || B.initialStylesByElement.set(p, (Z = new Map())),
              (this._initialStyles = Z);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Re(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Re(this._element, this._initialStyles),
                this._endStyles &&
                  (Re(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (B.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Ce(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Ce(this._element, this._endStyles),
                  (this._endStyles = null)),
                Re(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (B.initialStylesByElement = new WeakMap()), B;
      })();
      function Bi(B) {
        let h = null;
        return (
          B.forEach((p, S) => {
            (function Nr(B) {
              return 'display' === B || 'position' === B;
            })(S) && ((h = h || new Map()), h.set(S, p));
          }),
          h
        );
      }
      class ao {
        constructor(h, p, S, H) {
          (this.element = h),
            (this.keyframes = p),
            (this.options = S),
            (this._specialStyles = H),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = S.duration),
            (this._delay = S.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(h => h()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const h = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            h,
            this.options,
          )),
            (this._finalKeyframe = h.length ? h[h.length - 1] : new Map()),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(h) {
          const p = [];
          return (
            h.forEach(S => {
              p.push(Object.fromEntries(S));
            }),
            p
          );
        }
        _triggerWebAnimation(h, p, S) {
          return h.animate(this._convertKeyframesToObject(p), S);
        }
        onStart(h) {
          this._originalOnStartFns.push(h), this._onStartFns.push(h);
        }
        onDone(h) {
          this._originalOnDoneFns.push(h), this._onDoneFns.push(h);
        }
        onDestroy(h) {
          this._onDestroyFns.push(h);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach(h => h()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach(h => h()),
            (this._onDestroyFns = []));
        }
        setPosition(h) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = h * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const h = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((S, H) => {
              'offset' !== H &&
                h.set(H, this._finished ? S : Hi(this.element, H));
            }),
            (this.currentSnapshot = h);
        }
        triggerCallback(h) {
          const p = 'start' === h ? this._onStartFns : this._onDoneFns;
          p.forEach(S => S()), (p.length = 0);
        }
      }
      class bn {
        validateStyleProperty(h) {
          return !0;
        }
        validateAnimatableStyleProperty(h) {
          return !0;
        }
        matchesElement(h, p) {
          return !1;
        }
        containsElement(h, p) {
          return j(h, p);
        }
        getParentElement(h) {
          return hn(h);
        }
        query(h, p, S) {
          return ke(h, p, S);
        }
        computeStyle(h, p, S) {
          return window.getComputedStyle(h)[p];
        }
        animate(h, p, S, H, Z, ye = []) {
          const qe = {
            duration: S,
            delay: H,
            fill: 0 == H ? 'both' : 'forwards',
          };
          Z && (qe.easing = Z);
          const ft = new Map(),
            Wt = ye.filter(nn => nn instanceof ao);
          (function Pn(B, h) {
            return 0 === B || 0 === h;
          })(S, H) &&
            Wt.forEach(nn => {
              nn.currentSnapshot.forEach((cn, xn) => ft.set(xn, cn));
            });
          let Ht = (function St(B) {
            return B.length
              ? B[0] instanceof Map
                ? B
                : B.map(h => We(h))
              : [];
          })(p).map(nn => zt(nn));
          Ht = (function ir(B, h, p) {
            if (p.size && h.length) {
              let S = h[0],
                H = [];
              if (
                (p.forEach((Z, ye) => {
                  S.has(ye) || H.push(ye), S.set(ye, Z);
                }),
                H.length)
              )
                for (let Z = 1; Z < h.length; Z++) {
                  let ye = h[Z];
                  H.forEach(Ee => ye.set(Ee, Hi(B, Ee)));
                }
            }
            return h;
          })(h, Ht, ft);
          const yn = (function Pr(B, h) {
            let p = null,
              S = null;
            return (
              Array.isArray(h) && h.length
                ? ((p = Bi(h[0])), h.length > 1 && (S = Bi(h[h.length - 1])))
                : h instanceof Map && (p = Bi(h)),
              p || S ? new Ao(B, p, S) : null
            );
          })(h, Ht);
          return new ao(h, Ht, qe, yn);
        }
      }
      var Er = C(6895);
      let k = (() => {
        class B extends ee._j {
          constructor(p, S) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = p.createRenderer(S.body, {
                id: '0',
                encapsulation: x.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(p) {
            const S = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const H = Array.isArray(p) ? (0, ee.vP)(p) : p;
            return (
              G(this._renderer, null, S, 'register', [H]),
              new I(S, this._renderer)
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(Er.K0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class I extends ee.LC {
        constructor(h, p) {
          super(), (this._id = h), (this._renderer = p);
        }
        create(h, p) {
          return new w(this._id, h, p || {}, this._renderer);
        }
      }
      class w {
        constructor(h, p, S, H) {
          (this.id = h),
            (this.element = p),
            (this._renderer = H),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', S);
        }
        _listen(h, p) {
          return this._renderer.listen(this.element, `@@${this.id}:${h}`, p);
        }
        _command(h, ...p) {
          return G(this._renderer, this.element, this.id, h, p);
        }
        onDone(h) {
          this._listen('done', h);
        }
        onStart(h) {
          this._listen('start', h);
        }
        onDestroy(h) {
          this._listen('destroy', h);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(h) {
          this._command('setPosition', h);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function G(B, h, p, S, H) {
        return B.setProperty(h, `@@${p}:${S}`, H);
      }
      const Qt = '@.disabled';
      let Jn = (() => {
        class B {
          constructor(p, S, H) {
            (this.delegate = p),
              (this.engine = S),
              (this._zone = H),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (S.onRemovalComplete = (Z, ye) => {
                const Ee = ye?.parentNode(Z);
                Ee && ye.removeChild(Ee, Z);
              });
          }
          createRenderer(p, S) {
            const Z = this.delegate.createRenderer(p, S);
            if (!(p && S && S.data && S.data.animation)) {
              let Wt = this._rendererCache.get(Z);
              return (
                Wt ||
                  ((Wt = new lt('', Z, this.engine, () =>
                    this._rendererCache.delete(Z),
                  )),
                  this._rendererCache.set(Z, Wt)),
                Wt
              );
            }
            const ye = S.id,
              Ee = S.id + '-' + this._currentId;
            this._currentId++, this.engine.register(Ee, p);
            const qe = Wt => {
              Array.isArray(Wt)
                ? Wt.forEach(qe)
                : this.engine.registerTrigger(ye, Ee, p, Wt.name, Wt);
            };
            return (
              S.data.animation.forEach(qe), new kn(this, Ee, Z, this.engine)
            );
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(p, S, H) {
            p >= 0 && p < this._microtaskId
              ? this._zone.run(() => S(H))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach(Z => {
                        const [ye, Ee] = Z;
                        ye(Ee);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([S, H]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(xr), x.LFG(x.R0b));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class lt {
        constructor(h, p, S, H) {
          (this.namespaceId = h),
            (this.delegate = p),
            (this.engine = S),
            (this._onDestroy = H),
            (this.destroyNode = this.delegate.destroyNode
              ? Z => p.destroyNode(Z)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(h, p) {
          return this.delegate.createElement(h, p);
        }
        createComment(h) {
          return this.delegate.createComment(h);
        }
        createText(h) {
          return this.delegate.createText(h);
        }
        appendChild(h, p) {
          this.delegate.appendChild(h, p),
            this.engine.onInsert(this.namespaceId, p, h, !1);
        }
        insertBefore(h, p, S, H = !0) {
          this.delegate.insertBefore(h, p, S),
            this.engine.onInsert(this.namespaceId, p, h, H);
        }
        removeChild(h, p, S) {
          this.engine.onRemove(this.namespaceId, p, this.delegate, S);
        }
        selectRootElement(h, p) {
          return this.delegate.selectRootElement(h, p);
        }
        parentNode(h) {
          return this.delegate.parentNode(h);
        }
        nextSibling(h) {
          return this.delegate.nextSibling(h);
        }
        setAttribute(h, p, S, H) {
          this.delegate.setAttribute(h, p, S, H);
        }
        removeAttribute(h, p, S) {
          this.delegate.removeAttribute(h, p, S);
        }
        addClass(h, p) {
          this.delegate.addClass(h, p);
        }
        removeClass(h, p) {
          this.delegate.removeClass(h, p);
        }
        setStyle(h, p, S, H) {
          this.delegate.setStyle(h, p, S, H);
        }
        removeStyle(h, p, S) {
          this.delegate.removeStyle(h, p, S);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0) && p == Qt
            ? this.disableAnimations(h, !!S)
            : this.delegate.setProperty(h, p, S);
        }
        setValue(h, p) {
          this.delegate.setValue(h, p);
        }
        listen(h, p, S) {
          return this.delegate.listen(h, p, S);
        }
        disableAnimations(h, p) {
          this.engine.disableAnimations(h, p);
        }
      }
      class kn extends lt {
        constructor(h, p, S, H, Z) {
          super(p, S, H, Z), (this.factory = h), (this.namespaceId = p);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0)
            ? '.' == p.charAt(1) && p == Qt
              ? this.disableAnimations(h, (S = void 0 === S || !!S))
              : this.engine.process(this.namespaceId, h, p.slice(1), S)
            : this.delegate.setProperty(h, p, S);
        }
        listen(h, p, S) {
          if ('@' == p.charAt(0)) {
            const H = (function mr(B) {
              switch (B) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return B;
              }
            })(h);
            let Z = p.slice(1),
              ye = '';
            return (
              '@' != Z.charAt(0) &&
                ([Z, ye] = (function Yr(B) {
                  const h = B.indexOf('.');
                  return [B.substring(0, h), B.slice(h + 1)];
                })(Z)),
              this.engine.listen(this.namespaceId, H, Z, ye, Ee => {
                this.factory.scheduleListenerCallback(Ee._data || -1, S, Ee);
              })
            );
          }
          return this.delegate.listen(h, p, S);
        }
      }
      const sr = [
          { provide: ee._j, useClass: k },
          {
            provide: kt,
            useFactory: function Vi() {
              return new vn();
            },
          },
          {
            provide: xr,
            useClass: (() => {
              class B extends xr {
                constructor(p, S, H, Z) {
                  super(p.body, S, H);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (B.ɵfac = function (p) {
                  return new (p || B)(
                    x.LFG(Er.K0),
                    x.LFG(fe),
                    x.LFG(kt),
                    x.LFG(x.z2F),
                  );
                }),
                (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
                B
              );
            })(),
          },
          {
            provide: x.FYo,
            useFactory: function or(B, h, p) {
              return new Jn(B, h, p);
            },
            deps: [s.se, xr, x.R0b],
          },
        ],
        go = [
          { provide: fe, useFactory: () => new bn() },
          { provide: x.QbO, useValue: 'BrowserAnimations' },
          ...sr,
        ],
        So = [
          { provide: fe, useClass: me },
          { provide: x.QbO, useValue: 'NoopAnimations' },
          ...sr,
        ];
      let qo = (() => {
        class B {
          static withConfig(p) {
            return { ngModule: B, providers: p.disableAnimations ? So : go };
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ providers: go, imports: [s.b2] })),
          B
        );
      })();
      var Xi = C(8776),
        Gr = C(1831),
        Wr = C(2561),
        ar = C(4653),
        lo = C(9549);
      const Di = [
        {
          path: 'auth',
          loadChildren: () =>
            Promise.resolve()
              .then(C.bind(C, 2561))
              .then(B => B.AuthModule),
        },
        {
          path: 'calendar',
          loadChildren: () =>
            Promise.resolve()
              .then(C.bind(C, 4653))
              .then(B => B.CalendarModule),
        },
        { path: '', redirectTo: '/calendar', pathMatch: 'full' },
      ];
      let Vo = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ imports: [L.Bz.forRoot(Di), L.Bz] })),
          B
        );
      })();
      var Xo = C(262);
      let _o = (() => {
        class B {
          constructor(p) {
            this.router = p;
          }
          intercept(p, S) {
            return S.handle(
              p.clone({
                headers: p.headers.set(
                  'x-access-token',
                  localStorage.getItem('token') || '',
                ),
              }),
            ).pipe(
              (0, Xo.K)(Z => {
                throw (
                  (401 === Z.status && this.router.navigate(['/auth/signin']),
                  Z)
                );
              }),
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(L.F0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac, providedIn: 'root' })),
          B
        );
      })();
      var Mr = C(529);
      let co = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B, bootstrap: [oe] })),
          (B.ɵinj = x.cJS({
            providers: [
              { provide: lo.o2, useValue: { appearance: 'outline' } },
              { provide: Mr.TP, useClass: _o, multi: !0 },
            ],
            imports: [
              s.b2,
              qo,
              Xi.sQ.forRoot([]),
              Gr.Aw.forRoot({}, {}),
              Wr.AuthModule,
              ar.CalendarModule,
              Vo,
            ],
          })),
          B
        );
      })();
      s.q6()
        .bootstrapModule(co)
        .catch(B => console.error(B));
    },
    1135: (Ot, Ne, C) => {
      C.d(Ne, { X: () => x });
      var s = C(7579);
      class x extends s.x {
        constructor(oe) {
          super(), (this._value = oe);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(oe) {
          const ee = super._subscribe(oe);
          return !ee.closed && oe.next(this._value), ee;
        }
        getValue() {
          const { hasError: oe, thrownError: ee, _value: he } = this;
          if (oe) throw ee;
          return this._throwIfClosed(), he;
        }
        next(oe) {
          super.next((this._value = oe));
        }
      }
    },
    9751: (Ot, Ne, C) => {
      C.d(Ne, { y: () => ue });
      var s = C(930),
        x = C(727),
        L = C(8822),
        oe = C(9635),
        ee = C(2416),
        he = C(576),
        ge = C(2806);
      let ue = (() => {
        class se {
          constructor(ze) {
            ze && (this._subscribe = ze);
          }
          lift(ze) {
            const st = new se();
            return (st.source = this), (st.operator = ze), st;
          }
          subscribe(ze, st, gt) {
            const Le = (function pe(se) {
              return (
                (se && se instanceof s.Lv) ||
                ((function ae(se) {
                  return (
                    se &&
                    (0, he.m)(se.next) &&
                    (0, he.m)(se.error) &&
                    (0, he.m)(se.complete)
                  );
                })(se) &&
                  (0, x.Nn)(se))
              );
            })(ze)
              ? ze
              : new s.Hp(ze, st, gt);
            return (
              (0, ge.x)(() => {
                const { operator: pt, source: at } = this;
                Le.add(
                  pt
                    ? pt.call(Le, at)
                    : at
                    ? this._subscribe(Le)
                    : this._trySubscribe(Le),
                );
              }),
              Le
            );
          }
          _trySubscribe(ze) {
            try {
              return this._subscribe(ze);
            } catch (st) {
              ze.error(st);
            }
          }
          forEach(ze, st) {
            return new (st = le(st))((gt, Le) => {
              const pt = new s.Hp({
                next: at => {
                  try {
                    ze(at);
                  } catch (vt) {
                    Le(vt), pt.unsubscribe();
                  }
                },
                error: Le,
                complete: gt,
              });
              this.subscribe(pt);
            });
          }
          _subscribe(ze) {
            var st;
            return null === (st = this.source) || void 0 === st
              ? void 0
              : st.subscribe(ze);
          }
          [L.L]() {
            return this;
          }
          pipe(...ze) {
            return (0, oe.U)(ze)(this);
          }
          toPromise(ze) {
            return new (ze = le(ze))((st, gt) => {
              let Le;
              this.subscribe(
                pt => (Le = pt),
                pt => gt(pt),
                () => st(Le),
              );
            });
          }
        }
        return (se.create = Be => new se(Be)), se;
      })();
      function le(se) {
        var Be;
        return null !== (Be = se ?? ee.v.Promise) && void 0 !== Be
          ? Be
          : Promise;
      }
    },
    7579: (Ot, Ne, C) => {
      C.d(Ne, { x: () => ge });
      var s = C(9751),
        x = C(727);
      const oe = (0, C(3888).d)(
        le =>
          function () {
            le(this),
              (this.name = 'ObjectUnsubscribedError'),
              (this.message = 'object unsubscribed');
          },
      );
      var ee = C(8737),
        he = C(2806);
      let ge = (() => {
        class le extends s.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(pe) {
            const se = new ue(this, this);
            return (se.operator = pe), se;
          }
          _throwIfClosed() {
            if (this.closed) throw new oe();
          }
          next(pe) {
            (0, he.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const se of this.currentObservers) se.next(pe);
              }
            });
          }
          error(pe) {
            (0, he.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = pe);
                const { observers: se } = this;
                for (; se.length; ) se.shift().error(pe);
              }
            });
          }
          complete() {
            (0, he.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: pe } = this;
                for (; pe.length; ) pe.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var pe;
            return (
              (null === (pe = this.observers) || void 0 === pe
                ? void 0
                : pe.length) > 0
            );
          }
          _trySubscribe(pe) {
            return this._throwIfClosed(), super._trySubscribe(pe);
          }
          _subscribe(pe) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(pe),
              this._innerSubscribe(pe)
            );
          }
          _innerSubscribe(pe) {
            const { hasError: se, isStopped: Be, observers: ze } = this;
            return se || Be
              ? x.Lc
              : ((this.currentObservers = null),
                ze.push(pe),
                new x.w0(() => {
                  (this.currentObservers = null), (0, ee.P)(ze, pe);
                }));
          }
          _checkFinalizedStatuses(pe) {
            const { hasError: se, thrownError: Be, isStopped: ze } = this;
            se ? pe.error(Be) : ze && pe.complete();
          }
          asObservable() {
            const pe = new s.y();
            return (pe.source = this), pe;
          }
        }
        return (le.create = (ae, pe) => new ue(ae, pe)), le;
      })();
      class ue extends ge {
        constructor(ae, pe) {
          super(), (this.destination = ae), (this.source = pe);
        }
        next(ae) {
          var pe, se;
          null ===
            (se =
              null === (pe = this.destination) || void 0 === pe
                ? void 0
                : pe.next) ||
            void 0 === se ||
            se.call(pe, ae);
        }
        error(ae) {
          var pe, se;
          null ===
            (se =
              null === (pe = this.destination) || void 0 === pe
                ? void 0
                : pe.error) ||
            void 0 === se ||
            se.call(pe, ae);
        }
        complete() {
          var ae, pe;
          null ===
            (pe =
              null === (ae = this.destination) || void 0 === ae
                ? void 0
                : ae.complete) ||
            void 0 === pe ||
            pe.call(ae);
        }
        _subscribe(ae) {
          var pe, se;
          return null !==
            (se =
              null === (pe = this.source) || void 0 === pe
                ? void 0
                : pe.subscribe(ae)) && void 0 !== se
            ? se
            : x.Lc;
        }
      }
    },
    930: (Ot, Ne, C) => {
      C.d(Ne, { Hp: () => gt, Lv: () => se });
      var s = C(576),
        x = C(727),
        L = C(2416),
        oe = C(7849),
        ee = C(5032);
      const he = le('C', void 0, void 0);
      function le(xe, ne, te) {
        return { kind: xe, value: ne, error: te };
      }
      var ae = C(3410),
        pe = C(2806);
      class se extends x.w0 {
        constructor(ne) {
          super(),
            (this.isStopped = !1),
            ne
              ? ((this.destination = ne), (0, x.Nn)(ne) && ne.add(this))
              : (this.destination = vt);
        }
        static create(ne, te, X) {
          return new gt(ne, te, X);
        }
        next(ne) {
          this.isStopped
            ? at(
                (function ue(xe) {
                  return le('N', xe, void 0);
                })(ne),
                this,
              )
            : this._next(ne);
        }
        error(ne) {
          this.isStopped
            ? at(
                (function ge(xe) {
                  return le('E', void 0, xe);
                })(ne),
                this,
              )
            : ((this.isStopped = !0), this._error(ne));
        }
        complete() {
          this.isStopped
            ? at(he, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(ne) {
          this.destination.next(ne);
        }
        _error(ne) {
          try {
            this.destination.error(ne);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const Be = Function.prototype.bind;
      function ze(xe, ne) {
        return Be.call(xe, ne);
      }
      class st {
        constructor(ne) {
          this.partialObserver = ne;
        }
        next(ne) {
          const { partialObserver: te } = this;
          if (te.next)
            try {
              te.next(ne);
            } catch (X) {
              Le(X);
            }
        }
        error(ne) {
          const { partialObserver: te } = this;
          if (te.error)
            try {
              te.error(ne);
            } catch (X) {
              Le(X);
            }
          else Le(ne);
        }
        complete() {
          const { partialObserver: ne } = this;
          if (ne.complete)
            try {
              ne.complete();
            } catch (te) {
              Le(te);
            }
        }
      }
      class gt extends se {
        constructor(ne, te, X) {
          let Se;
          if ((super(), (0, s.m)(ne) || !ne))
            Se = {
              next: ne ?? void 0,
              error: te ?? void 0,
              complete: X ?? void 0,
            };
          else {
            let tt;
            this && L.v.useDeprecatedNextContext
              ? ((tt = Object.create(ne)),
                (tt.unsubscribe = () => this.unsubscribe()),
                (Se = {
                  next: ne.next && ze(ne.next, tt),
                  error: ne.error && ze(ne.error, tt),
                  complete: ne.complete && ze(ne.complete, tt),
                }))
              : (Se = ne);
          }
          this.destination = new st(Se);
        }
      }
      function Le(xe) {
        L.v.useDeprecatedSynchronousErrorHandling
          ? (0, pe.O)(xe)
          : (0, oe.h)(xe);
      }
      function at(xe, ne) {
        const { onStoppedNotification: te } = L.v;
        te && ae.z.setTimeout(() => te(xe, ne));
      }
      const vt = {
        closed: !0,
        next: ee.Z,
        error: function pt(xe) {
          throw xe;
        },
        complete: ee.Z,
      };
    },
    727: (Ot, Ne, C) => {
      C.d(Ne, { Lc: () => he, w0: () => ee, Nn: () => ge });
      var s = C(576);
      const L = (0, C(3888).d)(
        le =>
          function (pe) {
            le(this),
              (this.message = pe
                ? `${pe.length} errors occurred during unsubscription:\n${pe
                    .map((se, Be) => `${Be + 1}) ${se.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = pe);
          },
      );
      var oe = C(8737);
      class ee {
        constructor(ae) {
          (this.initialTeardown = ae),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let ae;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: pe } = this;
            if (pe)
              if (((this._parentage = null), Array.isArray(pe)))
                for (const ze of pe) ze.remove(this);
              else pe.remove(this);
            const { initialTeardown: se } = this;
            if ((0, s.m)(se))
              try {
                se();
              } catch (ze) {
                ae = ze instanceof L ? ze.errors : [ze];
              }
            const { _finalizers: Be } = this;
            if (Be) {
              this._finalizers = null;
              for (const ze of Be)
                try {
                  ue(ze);
                } catch (st) {
                  (ae = ae ?? []),
                    st instanceof L
                      ? (ae = [...ae, ...st.errors])
                      : ae.push(st);
                }
            }
            if (ae) throw new L(ae);
          }
        }
        add(ae) {
          var pe;
          if (ae && ae !== this)
            if (this.closed) ue(ae);
            else {
              if (ae instanceof ee) {
                if (ae.closed || ae._hasParent(this)) return;
                ae._addParent(this);
              }
              (this._finalizers =
                null !== (pe = this._finalizers) && void 0 !== pe
                  ? pe
                  : []).push(ae);
            }
        }
        _hasParent(ae) {
          const { _parentage: pe } = this;
          return pe === ae || (Array.isArray(pe) && pe.includes(ae));
        }
        _addParent(ae) {
          const { _parentage: pe } = this;
          this._parentage = Array.isArray(pe)
            ? (pe.push(ae), pe)
            : pe
            ? [pe, ae]
            : ae;
        }
        _removeParent(ae) {
          const { _parentage: pe } = this;
          pe === ae
            ? (this._parentage = null)
            : Array.isArray(pe) && (0, oe.P)(pe, ae);
        }
        remove(ae) {
          const { _finalizers: pe } = this;
          pe && (0, oe.P)(pe, ae), ae instanceof ee && ae._removeParent(this);
        }
      }
      ee.EMPTY = (() => {
        const le = new ee();
        return (le.closed = !0), le;
      })();
      const he = ee.EMPTY;
      function ge(le) {
        return (
          le instanceof ee ||
          (le &&
            'closed' in le &&
            (0, s.m)(le.remove) &&
            (0, s.m)(le.add) &&
            (0, s.m)(le.unsubscribe))
        );
      }
      function ue(le) {
        (0, s.m)(le) ? le() : le.unsubscribe();
      }
    },
    2416: (Ot, Ne, C) => {
      C.d(Ne, { v: () => s });
      const s = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    9841: (Ot, Ne, C) => {
      C.d(Ne, { a: () => ae });
      var s = C(9751),
        x = C(4742),
        L = C(457),
        oe = C(4671),
        ee = C(3268),
        he = C(3269),
        ge = C(1810),
        ue = C(5403),
        le = C(9672);
      function ae(...Be) {
        const ze = (0, he.yG)(Be),
          st = (0, he.jO)(Be),
          { args: gt, keys: Le } = (0, x.D)(Be);
        if (0 === gt.length) return (0, L.D)([], ze);
        const pt = new s.y(
          (function pe(Be, ze, st = oe.y) {
            return gt => {
              se(
                ze,
                () => {
                  const { length: Le } = Be,
                    pt = new Array(Le);
                  let at = Le,
                    vt = Le;
                  for (let xe = 0; xe < Le; xe++)
                    se(
                      ze,
                      () => {
                        const ne = (0, L.D)(Be[xe], ze);
                        let te = !1;
                        ne.subscribe(
                          (0, ue.x)(
                            gt,
                            X => {
                              (pt[xe] = X),
                                te || ((te = !0), vt--),
                                vt || gt.next(st(pt.slice()));
                            },
                            () => {
                              --at || gt.complete();
                            },
                          ),
                        );
                      },
                      gt,
                    );
                },
                gt,
              );
            };
          })(gt, ze, Le ? at => (0, ge.n)(Le, at) : oe.y),
        );
        return st ? pt.pipe((0, ee.Z)(st)) : pt;
      }
      function se(Be, ze, st) {
        Be ? (0, le.f)(st, Be, ze) : ze();
      }
    },
    7272: (Ot, Ne, C) => {
      C.d(Ne, { z: () => ee });
      var s = C(8189),
        L = C(3269),
        oe = C(457);
      function ee(...he) {
        return (function x() {
          return (0, s.J)(1);
        })()((0, oe.D)(he, (0, L.yG)(he)));
      }
    },
    9770: (Ot, Ne, C) => {
      C.d(Ne, { P: () => L });
      var s = C(9751),
        x = C(8421);
      function L(oe) {
        return new s.y(ee => {
          (0, x.Xf)(oe()).subscribe(ee);
        });
      }
    },
    515: (Ot, Ne, C) => {
      C.d(Ne, { E: () => x });
      const x = new (C(9751).y)(ee => ee.complete());
    },
    4128: (Ot, Ne, C) => {
      C.d(Ne, { D: () => ue });
      var s = C(9751),
        x = C(4742),
        L = C(8421),
        oe = C(3269),
        ee = C(5403),
        he = C(3268),
        ge = C(1810);
      function ue(...le) {
        const ae = (0, oe.jO)(le),
          { args: pe, keys: se } = (0, x.D)(le),
          Be = new s.y(ze => {
            const { length: st } = pe;
            if (!st) return void ze.complete();
            const gt = new Array(st);
            let Le = st,
              pt = st;
            for (let at = 0; at < st; at++) {
              let vt = !1;
              (0, L.Xf)(pe[at]).subscribe(
                (0, ee.x)(
                  ze,
                  xe => {
                    vt || ((vt = !0), pt--), (gt[at] = xe);
                  },
                  () => Le--,
                  void 0,
                  () => {
                    (!Le || !vt) &&
                      (pt || ze.next(se ? (0, ge.n)(se, gt) : gt),
                      ze.complete());
                  },
                ),
              );
            }
          });
        return ae ? Be.pipe((0, he.Z)(ae)) : Be;
      }
    },
    457: (Ot, Ne, C) => {
      C.d(Ne, { D: () => te });
      var s = C(8421),
        x = C(5363),
        L = C(4482);
      function oe(X, Se = 0) {
        return (0, L.e)((tt, re) => {
          re.add(X.schedule(() => tt.subscribe(re), Se));
        });
      }
      var ge = C(9751),
        le = C(2202),
        ae = C(576),
        pe = C(9672);
      function Be(X, Se) {
        if (!X) throw new Error('Iterable cannot be null');
        return new ge.y(tt => {
          (0, pe.f)(tt, Se, () => {
            const re = X[Symbol.asyncIterator]();
            (0, pe.f)(
              tt,
              Se,
              () => {
                re.next().then(At => {
                  At.done ? tt.complete() : tt.next(At.value);
                });
              },
              0,
              !0,
            );
          });
        });
      }
      var ze = C(3670),
        st = C(8239),
        gt = C(1144),
        Le = C(6495),
        pt = C(2206),
        at = C(4532),
        vt = C(3260);
      function te(X, Se) {
        return Se
          ? (function ne(X, Se) {
              if (null != X) {
                if ((0, ze.c)(X))
                  return (function ee(X, Se) {
                    return (0, s.Xf)(X).pipe(oe(Se), (0, x.Q)(Se));
                  })(X, Se);
                if ((0, gt.z)(X))
                  return (function ue(X, Se) {
                    return new ge.y(tt => {
                      let re = 0;
                      return Se.schedule(function () {
                        re === X.length
                          ? tt.complete()
                          : (tt.next(X[re++]), tt.closed || this.schedule());
                      });
                    });
                  })(X, Se);
                if ((0, st.t)(X))
                  return (function he(X, Se) {
                    return (0, s.Xf)(X).pipe(oe(Se), (0, x.Q)(Se));
                  })(X, Se);
                if ((0, pt.D)(X)) return Be(X, Se);
                if ((0, Le.T)(X))
                  return (function se(X, Se) {
                    return new ge.y(tt => {
                      let re;
                      return (
                        (0, pe.f)(tt, Se, () => {
                          (re = X[le.h]()),
                            (0, pe.f)(
                              tt,
                              Se,
                              () => {
                                let At, mt;
                                try {
                                  ({ value: At, done: mt } = re.next());
                                } catch (Yt) {
                                  return void tt.error(Yt);
                                }
                                mt ? tt.complete() : tt.next(At);
                              },
                              0,
                              !0,
                            );
                        }),
                        () => (0, ae.m)(re?.return) && re.return()
                      );
                    });
                  })(X, Se);
                if ((0, vt.L)(X))
                  return (function xe(X, Se) {
                    return Be((0, vt.Q)(X), Se);
                  })(X, Se);
              }
              throw (0, at.z)(X);
            })(X, Se)
          : (0, s.Xf)(X);
      }
    },
    8421: (Ot, Ne, C) => {
      C.d(Ne, { Xf: () => Be });
      var s = C(655),
        x = C(1144),
        L = C(8239),
        oe = C(9751),
        ee = C(3670),
        he = C(2206),
        ge = C(4532),
        ue = C(6495),
        le = C(3260),
        ae = C(576),
        pe = C(7849),
        se = C(8822);
      function Be(xe) {
        if (xe instanceof oe.y) return xe;
        if (null != xe) {
          if ((0, ee.c)(xe))
            return (function ze(xe) {
              return new oe.y(ne => {
                const te = xe[se.L]();
                if ((0, ae.m)(te.subscribe)) return te.subscribe(ne);
                throw new TypeError(
                  'Provided object does not correctly implement Symbol.observable',
                );
              });
            })(xe);
          if ((0, x.z)(xe))
            return (function st(xe) {
              return new oe.y(ne => {
                for (let te = 0; te < xe.length && !ne.closed; te++)
                  ne.next(xe[te]);
                ne.complete();
              });
            })(xe);
          if ((0, L.t)(xe))
            return (function gt(xe) {
              return new oe.y(ne => {
                xe.then(
                  te => {
                    ne.closed || (ne.next(te), ne.complete());
                  },
                  te => ne.error(te),
                ).then(null, pe.h);
              });
            })(xe);
          if ((0, he.D)(xe)) return pt(xe);
          if ((0, ue.T)(xe))
            return (function Le(xe) {
              return new oe.y(ne => {
                for (const te of xe) if ((ne.next(te), ne.closed)) return;
                ne.complete();
              });
            })(xe);
          if ((0, le.L)(xe))
            return (function at(xe) {
              return pt((0, le.Q)(xe));
            })(xe);
        }
        throw (0, ge.z)(xe);
      }
      function pt(xe) {
        return new oe.y(ne => {
          (function vt(xe, ne) {
            var te, X, Se, tt;
            return (0, s.mG)(this, void 0, void 0, function* () {
              try {
                for (te = (0, s.KL)(xe); !(X = yield te.next()).done; )
                  if ((ne.next(X.value), ne.closed)) return;
              } catch (re) {
                Se = { error: re };
              } finally {
                try {
                  X && !X.done && (tt = te.return) && (yield tt.call(te));
                } finally {
                  if (Se) throw Se.error;
                }
              }
              ne.complete();
            });
          })(xe, ne).catch(te => ne.error(te));
        });
      }
    },
    6451: (Ot, Ne, C) => {
      C.d(Ne, { T: () => he });
      var s = C(8189),
        x = C(8421),
        L = C(515),
        oe = C(3269),
        ee = C(457);
      function he(...ge) {
        const ue = (0, oe.yG)(ge),
          le = (0, oe._6)(ge, 1 / 0),
          ae = ge;
        return ae.length
          ? 1 === ae.length
            ? (0, x.Xf)(ae[0])
            : (0, s.J)(le)((0, ee.D)(ae, ue))
          : L.E;
      }
    },
    9646: (Ot, Ne, C) => {
      C.d(Ne, { of: () => L });
      var s = C(3269),
        x = C(457);
      function L(...oe) {
        const ee = (0, s.yG)(oe);
        return (0, x.D)(oe, ee);
      }
    },
    2843: (Ot, Ne, C) => {
      C.d(Ne, { _: () => L });
      var s = C(9751),
        x = C(576);
      function L(oe, ee) {
        const he = (0, x.m)(oe) ? oe : () => oe,
          ge = ue => ue.error(he());
        return new s.y(ee ? ue => ee.schedule(ge, 0, ue) : ge);
      }
    },
    5963: (Ot, Ne, C) => {
      C.d(Ne, { H: () => ee });
      var s = C(9751),
        x = C(4986),
        L = C(3532);
      function ee(he = 0, ge, ue = x.P) {
        let le = -1;
        return (
          null != ge && ((0, L.K)(ge) ? (ue = ge) : (le = ge)),
          new s.y(ae => {
            let pe = (function oe(he) {
              return he instanceof Date && !isNaN(he);
            })(he)
              ? +he - ue.now()
              : he;
            pe < 0 && (pe = 0);
            let se = 0;
            return ue.schedule(function () {
              ae.closed ||
                (ae.next(se++),
                0 <= le ? this.schedule(void 0, le) : ae.complete());
            }, pe);
          })
        );
      }
    },
    5403: (Ot, Ne, C) => {
      C.d(Ne, { Q: () => L, x: () => x });
      var s = C(930);
      function x(oe, ee, he, ge, ue) {
        return new L(oe, ee, he, ge, ue);
      }
      class L extends s.Lv {
        constructor(ee, he, ge, ue, le, ae) {
          super(ee),
            (this.onFinalize = le),
            (this.shouldUnsubscribe = ae),
            (this._next = he
              ? function (pe) {
                  try {
                    he(pe);
                  } catch (se) {
                    ee.error(se);
                  }
                }
              : super._next),
            (this._error = ue
              ? function (pe) {
                  try {
                    ue(pe);
                  } catch (se) {
                    ee.error(se);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = ge
              ? function () {
                  try {
                    ge();
                  } catch (pe) {
                    ee.error(pe);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var ee;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: he } = this;
            super.unsubscribe(),
              !he &&
                (null === (ee = this.onFinalize) ||
                  void 0 === ee ||
                  ee.call(this));
          }
        }
      }
    },
    262: (Ot, Ne, C) => {
      C.d(Ne, { K: () => oe });
      var s = C(8421),
        x = C(5403),
        L = C(4482);
      function oe(ee) {
        return (0, L.e)((he, ge) => {
          let ae,
            ue = null,
            le = !1;
          (ue = he.subscribe(
            (0, x.x)(ge, void 0, void 0, pe => {
              (ae = (0, s.Xf)(ee(pe, oe(ee)(he)))),
                ue
                  ? (ue.unsubscribe(), (ue = null), ae.subscribe(ge))
                  : (le = !0);
            }),
          )),
            le && (ue.unsubscribe(), (ue = null), ae.subscribe(ge));
        });
      }
    },
    4351: (Ot, Ne, C) => {
      C.d(Ne, { b: () => L });
      var s = C(5577),
        x = C(576);
      function L(oe, ee) {
        return (0, x.m)(ee) ? (0, s.z)(oe, ee, 1) : (0, s.z)(oe, 1);
      }
    },
    8372: (Ot, Ne, C) => {
      C.d(Ne, { b: () => oe });
      var s = C(4986),
        x = C(4482),
        L = C(5403);
      function oe(ee, he = s.z) {
        return (0, x.e)((ge, ue) => {
          let le = null,
            ae = null,
            pe = null;
          const se = () => {
            if (le) {
              le.unsubscribe(), (le = null);
              const ze = ae;
              (ae = null), ue.next(ze);
            }
          };
          function Be() {
            const ze = pe + ee,
              st = he.now();
            if (st < ze)
              return (le = this.schedule(void 0, ze - st)), void ue.add(le);
            se();
          }
          ge.subscribe(
            (0, L.x)(
              ue,
              ze => {
                (ae = ze),
                  (pe = he.now()),
                  le || ((le = he.schedule(Be, ee)), ue.add(le));
              },
              () => {
                se(), ue.complete();
              },
              void 0,
              () => {
                ae = le = null;
              },
            ),
          );
        });
      }
    },
    1884: (Ot, Ne, C) => {
      C.d(Ne, { x: () => oe });
      var s = C(4671),
        x = C(4482),
        L = C(5403);
      function oe(he, ge = s.y) {
        return (
          (he = he ?? ee),
          (0, x.e)((ue, le) => {
            let ae,
              pe = !0;
            ue.subscribe(
              (0, L.x)(le, se => {
                const Be = ge(se);
                (pe || !he(ae, Be)) && ((pe = !1), (ae = Be), le.next(se));
              }),
            );
          })
        );
      }
      function ee(he, ge) {
        return he === ge;
      }
    },
    6129: (Ot, Ne, C) => {
      C.d(Ne, { z: () => ee });
      var s = C(4004),
        x = C(8421),
        L = C(4482),
        oe = C(5403);
      function ee(he, ge) {
        return ge
          ? ue =>
              ue.pipe(
                ee((le, ae) =>
                  (0, x.Xf)(he(le, ae)).pipe(
                    (0, s.U)((pe, se) => ge(le, pe, ae, se)),
                  ),
                ),
              )
          : (0, L.e)((ue, le) => {
              let ae = 0,
                pe = null,
                se = !1;
              ue.subscribe(
                (0, oe.x)(
                  le,
                  Be => {
                    pe ||
                      ((pe = (0, oe.x)(le, void 0, () => {
                        (pe = null), se && le.complete();
                      })),
                      (0, x.Xf)(he(Be, ae++)).subscribe(pe));
                  },
                  () => {
                    (se = !0), !pe && le.complete();
                  },
                ),
              );
            });
      }
    },
    9300: (Ot, Ne, C) => {
      C.d(Ne, { h: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, ee) {
        return (0, s.e)((he, ge) => {
          let ue = 0;
          he.subscribe(
            (0, x.x)(ge, le => oe.call(ee, le, ue++) && ge.next(le)),
          );
        });
      }
    },
    8746: (Ot, Ne, C) => {
      C.d(Ne, { x: () => x });
      var s = C(4482);
      function x(L) {
        return (0, s.e)((oe, ee) => {
          try {
            oe.subscribe(ee);
          } finally {
            ee.add(L);
          }
        });
      }
    },
    8502: (Ot, Ne, C) => {
      C.d(Ne, { l: () => oe });
      var s = C(4482),
        x = C(5403),
        L = C(5032);
      function oe() {
        return (0, s.e)((ee, he) => {
          ee.subscribe((0, x.x)(he, L.Z));
        });
      }
    },
    4004: (Ot, Ne, C) => {
      C.d(Ne, { U: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, ee) {
        return (0, s.e)((he, ge) => {
          let ue = 0;
          he.subscribe(
            (0, x.x)(ge, le => {
              ge.next(oe.call(ee, le, ue++));
            }),
          );
        });
      }
    },
    9718: (Ot, Ne, C) => {
      C.d(Ne, { h: () => x });
      var s = C(4004);
      function x(L) {
        return (0, s.U)(() => L);
      }
    },
    8189: (Ot, Ne, C) => {
      C.d(Ne, { J: () => L });
      var s = C(5577),
        x = C(4671);
      function L(oe = 1 / 0) {
        return (0, s.z)(x.y, oe);
      }
    },
    5577: (Ot, Ne, C) => {
      C.d(Ne, { z: () => ue });
      var s = C(4004),
        x = C(8421),
        L = C(4482),
        oe = C(9672),
        ee = C(5403),
        ge = C(576);
      function ue(le, ae, pe = 1 / 0) {
        return (0, ge.m)(ae)
          ? ue(
              (se, Be) =>
                (0, s.U)((ze, st) => ae(se, ze, Be, st))((0, x.Xf)(le(se, Be))),
              pe,
            )
          : ('number' == typeof ae && (pe = ae),
            (0, L.e)((se, Be) =>
              (function he(le, ae, pe, se, Be, ze, st, gt) {
                const Le = [];
                let pt = 0,
                  at = 0,
                  vt = !1;
                const xe = () => {
                    vt && !Le.length && !pt && ae.complete();
                  },
                  ne = X => (pt < se ? te(X) : Le.push(X)),
                  te = X => {
                    ze && ae.next(X), pt++;
                    let Se = !1;
                    (0, x.Xf)(pe(X, at++)).subscribe(
                      (0, ee.x)(
                        ae,
                        tt => {
                          Be?.(tt), ze ? ne(tt) : ae.next(tt);
                        },
                        () => {
                          Se = !0;
                        },
                        void 0,
                        () => {
                          if (Se)
                            try {
                              for (pt--; Le.length && pt < se; ) {
                                const tt = Le.shift();
                                st ? (0, oe.f)(ae, st, () => te(tt)) : te(tt);
                              }
                              xe();
                            } catch (tt) {
                              ae.error(tt);
                            }
                        },
                      ),
                    );
                  };
                return (
                  le.subscribe(
                    (0, ee.x)(ae, ne, () => {
                      (vt = !0), xe();
                    }),
                  ),
                  () => {
                    gt?.();
                  }
                );
              })(se, Be, le, pe),
            ));
      }
    },
    5363: (Ot, Ne, C) => {
      C.d(Ne, { Q: () => oe });
      var s = C(9672),
        x = C(4482),
        L = C(5403);
      function oe(ee, he = 0) {
        return (0, x.e)((ge, ue) => {
          ge.subscribe(
            (0, L.x)(
              ue,
              le => (0, s.f)(ue, ee, () => ue.next(le), he),
              () => (0, s.f)(ue, ee, () => ue.complete(), he),
              le => (0, s.f)(ue, ee, () => ue.error(le), he),
            ),
          );
        });
      }
    },
    5026: (Ot, Ne, C) => {
      C.d(Ne, { R: () => oe });
      var s = C(4482),
        x = C(5403);
      function oe(ee, he) {
        return (0, s.e)(
          (function L(ee, he, ge, ue, le) {
            return (ae, pe) => {
              let se = ge,
                Be = he,
                ze = 0;
              ae.subscribe(
                (0, x.x)(
                  pe,
                  st => {
                    const gt = ze++;
                    (Be = se ? ee(Be, st, gt) : ((se = !0), st)),
                      ue && pe.next(Be);
                  },
                  le &&
                    (() => {
                      se && pe.next(Be), pe.complete();
                    }),
                ),
              );
            };
          })(ee, he, arguments.length >= 2, !0),
        );
      }
    },
    3099: (Ot, Ne, C) => {
      C.d(Ne, { B: () => ee });
      var s = C(8421),
        x = C(7579),
        L = C(930),
        oe = C(4482);
      function ee(ge = {}) {
        const {
          connector: ue = () => new x.x(),
          resetOnError: le = !0,
          resetOnComplete: ae = !0,
          resetOnRefCountZero: pe = !0,
        } = ge;
        return se => {
          let Be,
            ze,
            st,
            gt = 0,
            Le = !1,
            pt = !1;
          const at = () => {
              ze?.unsubscribe(), (ze = void 0);
            },
            vt = () => {
              at(), (Be = st = void 0), (Le = pt = !1);
            },
            xe = () => {
              const ne = Be;
              vt(), ne?.unsubscribe();
            };
          return (0, oe.e)((ne, te) => {
            gt++, !pt && !Le && at();
            const X = (st = st ?? ue());
            te.add(() => {
              gt--, 0 === gt && !pt && !Le && (ze = he(xe, pe));
            }),
              X.subscribe(te),
              !Be &&
                gt > 0 &&
                ((Be = new L.Hp({
                  next: Se => X.next(Se),
                  error: Se => {
                    (pt = !0), at(), (ze = he(vt, le, Se)), X.error(Se);
                  },
                  complete: () => {
                    (Le = !0), at(), (ze = he(vt, ae)), X.complete();
                  },
                })),
                (0, s.Xf)(ne).subscribe(Be));
          })(se);
        };
      }
      function he(ge, ue, ...le) {
        if (!0 === ue) return void ge();
        if (!1 === ue) return;
        const ae = new L.Hp({
          next: () => {
            ae.unsubscribe(), ge();
          },
        });
        return (0, s.Xf)(ue(...le)).subscribe(ae);
      }
    },
    5684: (Ot, Ne, C) => {
      C.d(Ne, { T: () => x });
      var s = C(9300);
      function x(L) {
        return (0, s.h)((oe, ee) => L <= ee);
      }
    },
    8675: (Ot, Ne, C) => {
      C.d(Ne, { O: () => oe });
      var s = C(7272),
        x = C(3269),
        L = C(4482);
      function oe(...ee) {
        const he = (0, x.yG)(ee);
        return (0, L.e)((ge, ue) => {
          (he ? (0, s.z)(ee, ge, he) : (0, s.z)(ee, ge)).subscribe(ue);
        });
      }
    },
    3900: (Ot, Ne, C) => {
      C.d(Ne, { w: () => oe });
      var s = C(8421),
        x = C(4482),
        L = C(5403);
      function oe(ee, he) {
        return (0, x.e)((ge, ue) => {
          let le = null,
            ae = 0,
            pe = !1;
          const se = () => pe && !le && ue.complete();
          ge.subscribe(
            (0, L.x)(
              ue,
              Be => {
                le?.unsubscribe();
                let ze = 0;
                const st = ae++;
                (0, s.Xf)(ee(Be, st)).subscribe(
                  (le = (0, L.x)(
                    ue,
                    gt => ue.next(he ? he(Be, gt, st, ze++) : gt),
                    () => {
                      (le = null), se();
                    },
                  )),
                );
              },
              () => {
                (pe = !0), se();
              },
            ),
          );
        });
      }
    },
    5698: (Ot, Ne, C) => {
      C.d(Ne, { q: () => oe });
      var s = C(515),
        x = C(4482),
        L = C(5403);
      function oe(ee) {
        return ee <= 0
          ? () => s.E
          : (0, x.e)((he, ge) => {
              let ue = 0;
              he.subscribe(
                (0, L.x)(ge, le => {
                  ++ue <= ee && (ge.next(le), ee <= ue && ge.complete());
                }),
              );
            });
      }
    },
    2722: (Ot, Ne, C) => {
      C.d(Ne, { R: () => ee });
      var s = C(4482),
        x = C(5403),
        L = C(8421),
        oe = C(5032);
      function ee(he) {
        return (0, s.e)((ge, ue) => {
          (0, L.Xf)(he).subscribe((0, x.x)(ue, () => ue.complete(), oe.Z)),
            !ue.closed && ge.subscribe(ue);
        });
      }
    },
    2529: (Ot, Ne, C) => {
      C.d(Ne, { o: () => L });
      var s = C(4482),
        x = C(5403);
      function L(oe, ee = !1) {
        return (0, s.e)((he, ge) => {
          let ue = 0;
          he.subscribe(
            (0, x.x)(ge, le => {
              const ae = oe(le, ue++);
              (ae || ee) && ge.next(le), !ae && ge.complete();
            }),
          );
        });
      }
    },
    8505: (Ot, Ne, C) => {
      C.d(Ne, { b: () => ee });
      var s = C(576),
        x = C(4482),
        L = C(5403),
        oe = C(4671);
      function ee(he, ge, ue) {
        const le =
          (0, s.m)(he) || ge || ue ? { next: he, error: ge, complete: ue } : he;
        return le
          ? (0, x.e)((ae, pe) => {
              var se;
              null === (se = le.subscribe) || void 0 === se || se.call(le);
              let Be = !0;
              ae.subscribe(
                (0, L.x)(
                  pe,
                  ze => {
                    var st;
                    null === (st = le.next) || void 0 === st || st.call(le, ze),
                      pe.next(ze);
                  },
                  () => {
                    var ze;
                    (Be = !1),
                      null === (ze = le.complete) ||
                        void 0 === ze ||
                        ze.call(le),
                      pe.complete();
                  },
                  ze => {
                    var st;
                    (Be = !1),
                      null === (st = le.error) ||
                        void 0 === st ||
                        st.call(le, ze),
                      pe.error(ze);
                  },
                  () => {
                    var ze, st;
                    Be &&
                      (null === (ze = le.unsubscribe) ||
                        void 0 === ze ||
                        ze.call(le)),
                      null === (st = le.finalize) ||
                        void 0 === st ||
                        st.call(le);
                  },
                ),
              );
            })
          : oe.y;
      }
    },
    4408: (Ot, Ne, C) => {
      C.d(Ne, { o: () => ee });
      var s = C(727);
      class x extends s.w0 {
        constructor(ge, ue) {
          super();
        }
        schedule(ge, ue = 0) {
          return this;
        }
      }
      const L = {
        setInterval(he, ge, ...ue) {
          const { delegate: le } = L;
          return le?.setInterval
            ? le.setInterval(he, ge, ...ue)
            : setInterval(he, ge, ...ue);
        },
        clearInterval(he) {
          const { delegate: ge } = L;
          return (ge?.clearInterval || clearInterval)(he);
        },
        delegate: void 0,
      };
      var oe = C(8737);
      class ee extends x {
        constructor(ge, ue) {
          super(ge, ue),
            (this.scheduler = ge),
            (this.work = ue),
            (this.pending = !1);
        }
        schedule(ge, ue = 0) {
          var le;
          if (this.closed) return this;
          this.state = ge;
          const ae = this.id,
            pe = this.scheduler;
          return (
            null != ae && (this.id = this.recycleAsyncId(pe, ae, ue)),
            (this.pending = !0),
            (this.delay = ue),
            (this.id =
              null !== (le = this.id) && void 0 !== le
                ? le
                : this.requestAsyncId(pe, this.id, ue)),
            this
          );
        }
        requestAsyncId(ge, ue, le = 0) {
          return L.setInterval(ge.flush.bind(ge, this), le);
        }
        recycleAsyncId(ge, ue, le = 0) {
          if (null != le && this.delay === le && !1 === this.pending) return ue;
          null != ue && L.clearInterval(ue);
        }
        execute(ge, ue) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const le = this._execute(ge, ue);
          if (le) return le;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(ge, ue) {
          let ae,
            le = !1;
          try {
            this.work(ge);
          } catch (pe) {
            (le = !0),
              (ae = pe || new Error('Scheduled action threw falsy error'));
          }
          if (le) return this.unsubscribe(), ae;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: ge, scheduler: ue } = this,
              { actions: le } = ue;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, oe.P)(le, this),
              null != ge && (this.id = this.recycleAsyncId(ue, ge, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    640: (Ot, Ne, C) => {
      C.d(Ne, { v: () => L });
      const s = { now: () => (s.delegate || Date).now(), delegate: void 0 };
      class x {
        constructor(ee, he = x.now) {
          (this.schedulerActionCtor = ee), (this.now = he);
        }
        schedule(ee, he = 0, ge) {
          return new this.schedulerActionCtor(this, ee).schedule(ge, he);
        }
      }
      x.now = s.now;
      class L extends x {
        constructor(ee, he = x.now) {
          super(ee, he), (this.actions = []), (this._active = !1);
        }
        flush(ee) {
          const { actions: he } = this;
          if (this._active) return void he.push(ee);
          let ge;
          this._active = !0;
          do {
            if ((ge = ee.execute(ee.state, ee.delay))) break;
          } while ((ee = he.shift()));
          if (((this._active = !1), ge)) {
            for (; (ee = he.shift()); ) ee.unsubscribe();
            throw ge;
          }
        }
      }
    },
    3101: (Ot, Ne, C) => {
      C.d(Ne, { E: () => ze });
      var s = C(4408);
      let L,
        x = 1;
      const oe = {};
      function ee(gt) {
        return gt in oe && (delete oe[gt], !0);
      }
      const he = {
          setImmediate(gt) {
            const Le = x++;
            return (
              (oe[Le] = !0),
              L || (L = Promise.resolve()),
              L.then(() => ee(Le) && gt()),
              Le
            );
          },
          clearImmediate(gt) {
            ee(gt);
          },
        },
        { setImmediate: ue, clearImmediate: le } = he,
        ae = {
          setImmediate(...gt) {
            const { delegate: Le } = ae;
            return (Le?.setImmediate || ue)(...gt);
          },
          clearImmediate(gt) {
            const { delegate: Le } = ae;
            return (Le?.clearImmediate || le)(gt);
          },
          delegate: void 0,
        };
      var se = C(640);
      const ze = new (class Be extends se.v {
        flush(Le) {
          this._active = !0;
          const pt = this._scheduled;
          this._scheduled = void 0;
          const { actions: at } = this;
          let vt;
          Le = Le || at.shift();
          do {
            if ((vt = Le.execute(Le.state, Le.delay))) break;
          } while ((Le = at[0]) && Le.id === pt && at.shift());
          if (((this._active = !1), vt)) {
            for (; (Le = at[0]) && Le.id === pt && at.shift(); )
              Le.unsubscribe();
            throw vt;
          }
        }
      })(
        class pe extends s.o {
          constructor(Le, pt) {
            super(Le, pt), (this.scheduler = Le), (this.work = pt);
          }
          requestAsyncId(Le, pt, at = 0) {
            return null !== at && at > 0
              ? super.requestAsyncId(Le, pt, at)
              : (Le.actions.push(this),
                Le._scheduled ||
                  (Le._scheduled = ae.setImmediate(Le.flush.bind(Le, void 0))));
          }
          recycleAsyncId(Le, pt, at = 0) {
            var vt;
            if (null != at ? at > 0 : this.delay > 0)
              return super.recycleAsyncId(Le, pt, at);
            const { actions: xe } = Le;
            null != pt &&
              (null === (vt = xe[xe.length - 1]) || void 0 === vt
                ? void 0
                : vt.id) !== pt &&
              (ae.clearImmediate(pt),
              Le._scheduled === pt && (Le._scheduled = void 0));
          }
        },
      );
    },
    4986: (Ot, Ne, C) => {
      C.d(Ne, { P: () => oe, z: () => L });
      var s = C(4408);
      const L = new (C(640).v)(s.o),
        oe = L;
    },
    3410: (Ot, Ne, C) => {
      C.d(Ne, { z: () => s });
      const s = {
        setTimeout(x, L, ...oe) {
          const { delegate: ee } = s;
          return ee?.setTimeout
            ? ee.setTimeout(x, L, ...oe)
            : setTimeout(x, L, ...oe);
        },
        clearTimeout(x) {
          const { delegate: L } = s;
          return (L?.clearTimeout || clearTimeout)(x);
        },
        delegate: void 0,
      };
    },
    2202: (Ot, Ne, C) => {
      C.d(Ne, { h: () => x });
      const x = (function s() {
        return 'function' == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : '@@iterator';
      })();
    },
    8822: (Ot, Ne, C) => {
      C.d(Ne, { L: () => s });
      const s =
        ('function' == typeof Symbol && Symbol.observable) || '@@observable';
    },
    3269: (Ot, Ne, C) => {
      C.d(Ne, { _6: () => he, jO: () => oe, yG: () => ee });
      var s = C(576),
        x = C(3532);
      function L(ge) {
        return ge[ge.length - 1];
      }
      function oe(ge) {
        return (0, s.m)(L(ge)) ? ge.pop() : void 0;
      }
      function ee(ge) {
        return (0, x.K)(L(ge)) ? ge.pop() : void 0;
      }
      function he(ge, ue) {
        return 'number' == typeof L(ge) ? ge.pop() : ue;
      }
    },
    4742: (Ot, Ne, C) => {
      C.d(Ne, { D: () => ee });
      const { isArray: s } = Array,
        { getPrototypeOf: x, prototype: L, keys: oe } = Object;
      function ee(ge) {
        if (1 === ge.length) {
          const ue = ge[0];
          if (s(ue)) return { args: ue, keys: null };
          if (
            (function he(ge) {
              return ge && 'object' == typeof ge && x(ge) === L;
            })(ue)
          ) {
            const le = oe(ue);
            return { args: le.map(ae => ue[ae]), keys: le };
          }
        }
        return { args: ge, keys: null };
      }
    },
    8737: (Ot, Ne, C) => {
      function s(x, L) {
        if (x) {
          const oe = x.indexOf(L);
          0 <= oe && x.splice(oe, 1);
        }
      }
      C.d(Ne, { P: () => s });
    },
    3888: (Ot, Ne, C) => {
      function s(x) {
        const oe = x(ee => {
          Error.call(ee), (ee.stack = new Error().stack);
        });
        return (
          (oe.prototype = Object.create(Error.prototype)),
          (oe.prototype.constructor = oe),
          oe
        );
      }
      C.d(Ne, { d: () => s });
    },
    1810: (Ot, Ne, C) => {
      function s(x, L) {
        return x.reduce((oe, ee, he) => ((oe[ee] = L[he]), oe), {});
      }
      C.d(Ne, { n: () => s });
    },
    2806: (Ot, Ne, C) => {
      C.d(Ne, { O: () => oe, x: () => L });
      var s = C(2416);
      let x = null;
      function L(ee) {
        if (s.v.useDeprecatedSynchronousErrorHandling) {
          const he = !x;
          if ((he && (x = { errorThrown: !1, error: null }), ee(), he)) {
            const { errorThrown: ge, error: ue } = x;
            if (((x = null), ge)) throw ue;
          }
        } else ee();
      }
      function oe(ee) {
        s.v.useDeprecatedSynchronousErrorHandling &&
          x &&
          ((x.errorThrown = !0), (x.error = ee));
      }
    },
    9672: (Ot, Ne, C) => {
      function s(x, L, oe, ee = 0, he = !1) {
        const ge = L.schedule(function () {
          oe(), he ? x.add(this.schedule(null, ee)) : this.unsubscribe();
        }, ee);
        if ((x.add(ge), !he)) return ge;
      }
      C.d(Ne, { f: () => s });
    },
    4671: (Ot, Ne, C) => {
      function s(x) {
        return x;
      }
      C.d(Ne, { y: () => s });
    },
    1144: (Ot, Ne, C) => {
      C.d(Ne, { z: () => s });
      const s = x => x && 'number' == typeof x.length && 'function' != typeof x;
    },
    2206: (Ot, Ne, C) => {
      C.d(Ne, { D: () => x });
      var s = C(576);
      function x(L) {
        return Symbol.asyncIterator && (0, s.m)(L?.[Symbol.asyncIterator]);
      }
    },
    576: (Ot, Ne, C) => {
      function s(x) {
        return 'function' == typeof x;
      }
      C.d(Ne, { m: () => s });
    },
    3670: (Ot, Ne, C) => {
      C.d(Ne, { c: () => L });
      var s = C(8822),
        x = C(576);
      function L(oe) {
        return (0, x.m)(oe[s.L]);
      }
    },
    6495: (Ot, Ne, C) => {
      C.d(Ne, { T: () => L });
      var s = C(2202),
        x = C(576);
      function L(oe) {
        return (0, x.m)(oe?.[s.h]);
      }
    },
    8239: (Ot, Ne, C) => {
      C.d(Ne, { t: () => x });
      var s = C(576);
      function x(L) {
        return (0, s.m)(L?.then);
      }
    },
    3260: (Ot, Ne, C) => {
      C.d(Ne, { L: () => oe, Q: () => L });
      var s = C(655),
        x = C(576);
      function L(ee) {
        return (0, s.FC)(this, arguments, function* () {
          const ge = ee.getReader();
          try {
            for (;;) {
              const { value: ue, done: le } = yield (0, s.qq)(ge.read());
              if (le) return yield (0, s.qq)(void 0);
              yield yield (0, s.qq)(ue);
            }
          } finally {
            ge.releaseLock();
          }
        });
      }
      function oe(ee) {
        return (0, x.m)(ee?.getReader);
      }
    },
    3532: (Ot, Ne, C) => {
      C.d(Ne, { K: () => x });
      var s = C(576);
      function x(L) {
        return L && (0, s.m)(L.schedule);
      }
    },
    4482: (Ot, Ne, C) => {
      C.d(Ne, { A: () => x, e: () => L });
      var s = C(576);
      function x(oe) {
        return (0, s.m)(oe?.lift);
      }
      function L(oe) {
        return ee => {
          if (x(ee))
            return ee.lift(function (he) {
              try {
                return oe(he, this);
              } catch (ge) {
                this.error(ge);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
    },
    3268: (Ot, Ne, C) => {
      C.d(Ne, { Z: () => oe });
      var s = C(4004);
      const { isArray: x } = Array;
      function oe(ee) {
        return (0, s.U)(he =>
          (function L(ee, he) {
            return x(he) ? ee(...he) : ee(he);
          })(ee, he),
        );
      }
    },
    5032: (Ot, Ne, C) => {
      function s() {}
      C.d(Ne, { Z: () => s });
    },
    9635: (Ot, Ne, C) => {
      C.d(Ne, { U: () => L, z: () => x });
      var s = C(4671);
      function x(...oe) {
        return L(oe);
      }
      function L(oe) {
        return 0 === oe.length
          ? s.y
          : 1 === oe.length
          ? oe[0]
          : function (he) {
              return oe.reduce((ge, ue) => ue(ge), he);
            };
      }
    },
    7849: (Ot, Ne, C) => {
      C.d(Ne, { h: () => L });
      var s = C(2416),
        x = C(3410);
      function L(oe) {
        x.z.setTimeout(() => {
          const { onUnhandledError: ee } = s.v;
          if (!ee) throw oe;
          ee(oe);
        });
      }
    },
    4532: (Ot, Ne, C) => {
      function s(x) {
        return new TypeError(
          `You provided ${
            null !== x && 'object' == typeof x ? 'an invalid object' : `'${x}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`,
        );
      }
      C.d(Ne, { z: () => s });
    },
    655: (Ot, Ne, C) => {
      function se(Ge, $e, Me, Ue) {
        return new (Me || (Me = Promise))(function (Pe, a) {
          function Ye(ut) {
            try {
              je(Ue.next(ut));
            } catch (nt) {
              a(nt);
            }
          }
          function rt(ut) {
            try {
              je(Ue.throw(ut));
            } catch (nt) {
              a(nt);
            }
          }
          function je(ut) {
            ut.done
              ? Pe(ut.value)
              : (function De(Pe) {
                  return Pe instanceof Me
                    ? Pe
                    : new Me(function (a) {
                        a(Pe);
                      });
                })(ut.value).then(Ye, rt);
          }
          je((Ue = Ue.apply(Ge, $e || [])).next());
        });
      }
      function xe(Ge) {
        return this instanceof xe ? ((this.v = Ge), this) : new xe(Ge);
      }
      function ne(Ge, $e, Me) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var De,
          Ue = Me.apply(Ge, $e || []),
          Pe = [];
        return (
          (De = {}),
          a('next'),
          a('throw'),
          a('return'),
          (De[Symbol.asyncIterator] = function () {
            return this;
          }),
          De
        );
        function a(Lt) {
          Ue[Lt] &&
            (De[Lt] = function (Mn) {
              return new Promise(function (un, an) {
                Pe.push([Lt, Mn, un, an]) > 1 || Ye(Lt, Mn);
              });
            });
        }
        function Ye(Lt, Mn) {
          try {
            !(function rt(Lt) {
              Lt.value instanceof xe
                ? Promise.resolve(Lt.value.v).then(je, ut)
                : nt(Pe[0][2], Lt);
            })(Ue[Lt](Mn));
          } catch (un) {
            nt(Pe[0][3], un);
          }
        }
        function je(Lt) {
          Ye('next', Lt);
        }
        function ut(Lt) {
          Ye('throw', Lt);
        }
        function nt(Lt, Mn) {
          Lt(Mn), Pe.shift(), Pe.length && Ye(Pe[0][0], Pe[0][1]);
        }
      }
      function X(Ge) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var Me,
          $e = Ge[Symbol.asyncIterator];
        return $e
          ? $e.call(Ge)
          : ((Ge = (function gt(Ge) {
              var $e = 'function' == typeof Symbol && Symbol.iterator,
                Me = $e && Ge[$e],
                Ue = 0;
              if (Me) return Me.call(Ge);
              if (Ge && 'number' == typeof Ge.length)
                return {
                  next: function () {
                    return (
                      Ge && Ue >= Ge.length && (Ge = void 0),
                      { value: Ge && Ge[Ue++], done: !Ge }
                    );
                  },
                };
              throw new TypeError(
                $e
                  ? 'Object is not iterable.'
                  : 'Symbol.iterator is not defined.',
              );
            })(Ge)),
            (Me = {}),
            Ue('next'),
            Ue('throw'),
            Ue('return'),
            (Me[Symbol.asyncIterator] = function () {
              return this;
            }),
            Me);
        function Ue(Pe) {
          Me[Pe] =
            Ge[Pe] &&
            function (a) {
              return new Promise(function (Ye, rt) {
                !(function De(Pe, a, Ye, rt) {
                  Promise.resolve(rt).then(function (je) {
                    Pe({ value: je, done: Ye });
                  }, a);
                })(Ye, rt, (a = Ge[Pe](a)).done, a.value);
              });
            };
        }
      }
      C.d(Ne, { FC: () => ne, KL: () => X, mG: () => se, qq: () => xe });
    },
    7340: (Ot, Ne, C) => {
      C.d(Ne, {
        F4: () => ae,
        IO: () => st,
        LC: () => x,
        SB: () => le,
        X$: () => oe,
        ZE: () => at,
        ZN: () => pt,
        _j: () => s,
        eR: () => pe,
        jt: () => ee,
        k1: () => vt,
        l3: () => L,
        oB: () => ue,
        pV: () => Be,
        ru: () => he,
        vP: () => ge,
      });
      class s {}
      class x {}
      const L = '*';
      function oe(xe, ne) {
        return { type: 7, name: xe, definitions: ne, options: {} };
      }
      function ee(xe, ne = null) {
        return { type: 4, styles: ne, timings: xe };
      }
      function he(xe, ne = null) {
        return { type: 3, steps: xe, options: ne };
      }
      function ge(xe, ne = null) {
        return { type: 2, steps: xe, options: ne };
      }
      function ue(xe) {
        return { type: 6, styles: xe, offset: null };
      }
      function le(xe, ne, te) {
        return { type: 0, name: xe, styles: ne, options: te };
      }
      function ae(xe) {
        return { type: 5, steps: xe };
      }
      function pe(xe, ne, te = null) {
        return { type: 1, expr: xe, animation: ne, options: te };
      }
      function Be(xe = null) {
        return { type: 9, options: xe };
      }
      function st(xe, ne, te = null) {
        return { type: 11, selector: xe, animation: ne, options: te };
      }
      function Le(xe) {
        Promise.resolve().then(xe);
      }
      class pt {
        constructor(ne = 0, te = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = ne + te);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(ne => ne()),
            (this._onDoneFns = []));
        }
        onStart(ne) {
          this._originalOnStartFns.push(ne), this._onStartFns.push(ne);
        }
        onDone(ne) {
          this._originalOnDoneFns.push(ne), this._onDoneFns.push(ne);
        }
        onDestroy(ne) {
          this._onDestroyFns.push(ne);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Le(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach(ne => ne()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach(ne => ne()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(ne) {
          this._position = this.totalTime ? ne * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(ne) {
          const te = 'start' == ne ? this._onStartFns : this._onDoneFns;
          te.forEach(X => X()), (te.length = 0);
        }
      }
      class at {
        constructor(ne) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = ne);
          let te = 0,
            X = 0,
            Se = 0;
          const tt = this.players.length;
          0 == tt
            ? Le(() => this._onFinish())
            : this.players.forEach(re => {
                re.onDone(() => {
                  ++te == tt && this._onFinish();
                }),
                  re.onDestroy(() => {
                    ++X == tt && this._onDestroy();
                  }),
                  re.onStart(() => {
                    ++Se == tt && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (re, At) => Math.max(re, At.totalTime),
              0,
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(ne => ne()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach(ne => ne.init());
        }
        onStart(ne) {
          this._onStartFns.push(ne);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach(ne => ne()),
            (this._onStartFns = []));
        }
        onDone(ne) {
          this._onDoneFns.push(ne);
        }
        onDestroy(ne) {
          this._onDestroyFns.push(ne);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach(ne => ne.play());
        }
        pause() {
          this.players.forEach(ne => ne.pause());
        }
        restart() {
          this.players.forEach(ne => ne.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach(ne => ne.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach(ne => ne.destroy()),
            this._onDestroyFns.forEach(ne => ne()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach(ne => ne.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(ne) {
          const te = ne * this.totalTime;
          this.players.forEach(X => {
            const Se = X.totalTime ? Math.min(1, te / X.totalTime) : 1;
            X.setPosition(Se);
          });
        }
        getPosition() {
          const ne = this.players.reduce(
            (te, X) => (null === te || X.totalTime > te.totalTime ? X : te),
            null,
          );
          return null != ne ? ne.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach(ne => {
            ne.beforeDestroy && ne.beforeDestroy();
          });
        }
        triggerCallback(ne) {
          const te = 'start' == ne ? this._onStartFns : this._onDoneFns;
          te.forEach(X => X()), (te.length = 0);
        }
      }
      const vt = '!';
    },
    2687: (Ot, Ne, C) => {
      C.d(Ne, {
        Em: () => $e,
        Kd: () => me,
        X6: () => hn,
        ic: () => Ue,
        kH: () => Cn,
        mK: () => mn,
        qV: () => Kt,
        qm: () => wt,
        rt: () => Te,
        s1: () => Ge,
        tE: () => Rt,
        yG: () => Xe,
      });
      var s = C(6895),
        x = C(4650),
        L = C(3353),
        oe = C(7579),
        ee = C(727),
        he = C(1135),
        ge = C(9646),
        ue = C(9521),
        le = C(8505),
        ae = C(8372),
        pe = C(9300),
        se = C(4004),
        Be = C(5698),
        ze = C(5684),
        st = C(1884),
        gt = C(2722),
        Le = C(1281),
        pt = C(9643),
        at = C(2289);
      class Et {
        constructor(b) {
          (this._items = b),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new oe.x()),
            (this._typeaheadSubscription = ee.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = E => E.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new oe.x()),
            (this.change = new oe.x()),
            b instanceof x.n_E &&
              (this._itemChangesSubscription = b.changes.subscribe(E => {
                if (this._activeItem) {
                  const Q = E.toArray().indexOf(this._activeItem);
                  Q > -1 &&
                    Q !== this._activeItemIndex &&
                    (this._activeItemIndex = Q);
                }
              }));
        }
        skipPredicate(b) {
          return (this._skipPredicateFn = b), this;
        }
        withWrap(b = !0) {
          return (this._wrap = b), this;
        }
        withVerticalOrientation(b = !0) {
          return (this._vertical = b), this;
        }
        withHorizontalOrientation(b) {
          return (this._horizontal = b), this;
        }
        withAllowedModifierKeys(b) {
          return (this._allowedModifierKeys = b), this;
        }
        withTypeAhead(b = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, le.b)(E => this._pressedLetters.push(E)),
                (0, ae.b)(b),
                (0, pe.h)(() => this._pressedLetters.length > 0),
                (0, se.U)(() => this._pressedLetters.join('')),
              )
              .subscribe(E => {
                const V = this._getItemsArray();
                for (let Q = 1; Q < V.length + 1; Q++) {
                  const We = (this._activeItemIndex + Q) % V.length,
                    St = V[We];
                  if (
                    !this._skipPredicateFn(St) &&
                    0 === St.getLabel().toUpperCase().trim().indexOf(E)
                  ) {
                    this.setActiveItem(We);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(b = !0) {
          return (this._homeAndEnd = b), this;
        }
        withPageUpDown(b = !0, E = 10) {
          return (this._pageUpAndDown = { enabled: b, delta: E }), this;
        }
        setActiveItem(b) {
          const E = this._activeItem;
          this.updateActiveItem(b),
            this._activeItem !== E && this.change.next(this._activeItemIndex);
        }
        onKeydown(b) {
          const E = b.keyCode,
            Q = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              We => !b[We] || this._allowedModifierKeys.indexOf(We) > -1,
            );
          switch (E) {
            case ue.Mf:
              return void this.tabOut.next();
            case ue.JH:
              if (this._vertical && Q) {
                this.setNextItemActive();
                break;
              }
              return;
            case ue.LH:
              if (this._vertical && Q) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case ue.SV:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case ue.oh:
              if (this._horizontal && Q) {
                'rtl' === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case ue.Sd:
              if (this._homeAndEnd && Q) {
                this.setFirstItemActive();
                break;
              }
              return;
            case ue.uR:
              if (this._homeAndEnd && Q) {
                this.setLastItemActive();
                break;
              }
              return;
            case ue.Ku:
              if (this._pageUpAndDown.enabled && Q) {
                const We = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(We > 0 ? We : 0, 1);
                break;
              }
              return;
            case ue.VM:
              if (this._pageUpAndDown.enabled && Q) {
                const We = this._activeItemIndex + this._pageUpAndDown.delta,
                  St = this._getItemsArray().length;
                this._setActiveItemByIndex(We < St ? We : St - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (Q || (0, ue.Vb)(b, 'shiftKey')) &&
                (b.key && 1 === b.key.length
                  ? this._letterKeyStream.next(b.key.toLocaleUpperCase())
                  : ((E >= ue.A && E <= ue.Z) || (E >= ue.xE && E <= ue.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(E)))
              );
          }
          (this._pressedLetters = []), b.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(b) {
          const E = this._getItemsArray(),
            V = 'number' == typeof b ? b : E.indexOf(b);
          (this._activeItem = E[V] ?? null), (this._activeItemIndex = V);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(b) {
          this._wrap
            ? this._setActiveInWrapMode(b)
            : this._setActiveInDefaultMode(b);
        }
        _setActiveInWrapMode(b) {
          const E = this._getItemsArray();
          for (let V = 1; V <= E.length; V++) {
            const Q = (this._activeItemIndex + b * V + E.length) % E.length;
            if (!this._skipPredicateFn(E[Q])) return void this.setActiveItem(Q);
          }
        }
        _setActiveInDefaultMode(b) {
          this._setActiveItemByIndex(this._activeItemIndex + b, b);
        }
        _setActiveItemByIndex(b, E) {
          const V = this._getItemsArray();
          if (V[b]) {
            for (; this._skipPredicateFn(V[b]); ) if (!V[(b += E)]) return;
            this.setActiveItem(b);
          }
        }
        _getItemsArray() {
          return this._items instanceof x.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class Ge extends Et {
        setActiveItem(b) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(b),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class $e extends Et {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(b) {
          return (this._origin = b), this;
        }
        setActiveItem(b) {
          super.setActiveItem(b),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let Ue = (() => {
        class R {
          constructor(E) {
            this._platform = E;
          }
          isDisabled(E) {
            return E.hasAttribute('disabled');
          }
          isVisible(E) {
            return (
              (function Pe(R) {
                return !!(
                  R.offsetWidth ||
                  R.offsetHeight ||
                  ('function' == typeof R.getClientRects &&
                    R.getClientRects().length)
                );
              })(E) && 'visible' === getComputedStyle(E).visibility
            );
          }
          isTabbable(E) {
            if (!this._platform.isBrowser) return !1;
            const V = (function De(R) {
              try {
                return R.frameElement;
              } catch {
                return null;
              }
            })(
              (function an(R) {
                return (
                  (R.ownerDocument && R.ownerDocument.defaultView) || window
                );
              })(E),
            );
            if (V && (-1 === Lt(V) || !this.isVisible(V))) return !1;
            let Q = E.nodeName.toLowerCase(),
              We = Lt(E);
            return E.hasAttribute('contenteditable')
              ? -1 !== We
              : !(
                  'iframe' === Q ||
                  'object' === Q ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function Mn(R) {
                      let b = R.nodeName.toLowerCase(),
                        E = 'input' === b && R.type;
                      return (
                        'text' === E ||
                        'password' === E ||
                        'select' === b ||
                        'textarea' === b
                      );
                    })(E))
                ) &&
                  ('audio' === Q
                    ? !!E.hasAttribute('controls') && -1 !== We
                    : 'video' === Q
                    ? -1 !== We &&
                      (null !== We ||
                        this._platform.FIREFOX ||
                        E.hasAttribute('controls'))
                    : E.tabIndex >= 0);
          }
          isFocusable(E, V) {
            return (
              (function un(R) {
                return (
                  !(function Ye(R) {
                    return (
                      (function je(R) {
                        return 'input' == R.nodeName.toLowerCase();
                      })(R) && 'hidden' == R.type
                    );
                  })(R) &&
                  ((function a(R) {
                    let b = R.nodeName.toLowerCase();
                    return (
                      'input' === b ||
                      'select' === b ||
                      'button' === b ||
                      'textarea' === b
                    );
                  })(R) ||
                    (function rt(R) {
                      return (
                        (function ut(R) {
                          return 'a' == R.nodeName.toLowerCase();
                        })(R) && R.hasAttribute('href')
                      );
                    })(R) ||
                    R.hasAttribute('contenteditable') ||
                    nt(R))
                );
              })(E) &&
              !this.isDisabled(E) &&
              (V?.ignoreVisibility || this.isVisible(E))
            );
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(x.LFG(L.t4));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac, providedIn: 'root' })),
          R
        );
      })();
      function nt(R) {
        if (!R.hasAttribute('tabindex') || void 0 === R.tabIndex) return !1;
        let b = R.getAttribute('tabindex');
        return !(!b || isNaN(parseInt(b, 10)));
      }
      function Lt(R) {
        if (!nt(R)) return null;
        const b = parseInt(R.getAttribute('tabindex') || '', 10);
        return isNaN(b) ? -1 : b;
      }
      class Dn {
        get enabled() {
          return this._enabled;
        }
        set enabled(b) {
          (this._enabled = b),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(b, this._startAnchor),
              this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        constructor(b, E, V, Q, We = !1) {
          (this._element = b),
            (this._checker = E),
            (this._ngZone = V),
            (this._document = Q),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            We || this.attachAnchors();
        }
        destroy() {
          const b = this._startAnchor,
            E = this._endAnchor;
          b &&
            (b.removeEventListener('focus', this.startAnchorListener),
            b.remove()),
            E &&
              (E.removeEventListener('focus', this.endAnchorListener),
              E.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  'focus',
                  this.startAnchorListener,
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    'focus',
                    this.endAnchorListener,
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element,
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling,
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(b) {
          return new Promise(E => {
            this._executeOnStable(() => E(this.focusInitialElement(b)));
          });
        }
        focusFirstTabbableElementWhenReady(b) {
          return new Promise(E => {
            this._executeOnStable(() => E(this.focusFirstTabbableElement(b)));
          });
        }
        focusLastTabbableElementWhenReady(b) {
          return new Promise(E => {
            this._executeOnStable(() => E(this.focusLastTabbableElement(b)));
          });
        }
        _getRegionBoundary(b) {
          const E = this._element.querySelectorAll(
            `[cdk-focus-region-${b}], [cdkFocusRegion${b}], [cdk-focus-${b}]`,
          );
          return 'start' == b
            ? E.length
              ? E[0]
              : this._getFirstTabbableElement(this._element)
            : E.length
            ? E[E.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(b) {
          const E = this._element.querySelector(
            '[cdk-focus-initial], [cdkFocusInitial]',
          );
          if (E) {
            if (!this._checker.isFocusable(E)) {
              const V = this._getFirstTabbableElement(E);
              return V?.focus(b), !!V;
            }
            return E.focus(b), !0;
          }
          return this.focusFirstTabbableElement(b);
        }
        focusFirstTabbableElement(b) {
          const E = this._getRegionBoundary('start');
          return E && E.focus(b), !!E;
        }
        focusLastTabbableElement(b) {
          const E = this._getRegionBoundary('end');
          return E && E.focus(b), !!E;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const E = b.children;
          for (let V = 0; V < E.length; V++) {
            const Q =
              E[V].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(E[V])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _getLastTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const E = b.children;
          for (let V = E.length - 1; V >= 0; V--) {
            const Q =
              E[V].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(E[V])
                : null;
            if (Q) return Q;
          }
          return null;
        }
        _createAnchor() {
          const b = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, b),
            b.classList.add('cdk-visually-hidden'),
            b.classList.add('cdk-focus-trap-anchor'),
            b.setAttribute('aria-hidden', 'true'),
            b
          );
        }
        _toggleAnchorTabIndex(b, E) {
          b ? E.setAttribute('tabindex', '0') : E.removeAttribute('tabindex');
        }
        toggleAnchors(b) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(b, this._startAnchor),
            this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        _executeOnStable(b) {
          this._ngZone.isStable
            ? b()
            : this._ngZone.onStable.pipe((0, Be.q)(1)).subscribe(b);
        }
      }
      let Kt = (() => {
          class R {
            constructor(E, V, Q) {
              (this._checker = E), (this._ngZone = V), (this._document = Q);
            }
            create(E, V = !1) {
              return new Dn(E, this._checker, this._ngZone, this._document, V);
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(x.LFG(Ue), x.LFG(x.R0b), x.LFG(s.K0));
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        mn = (() => {
          class R {
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(E) {
              this.focusTrap.enabled = (0, Le.Ig)(E);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(E) {
              this._autoCapture = (0, Le.Ig)(E);
            }
            constructor(E, V, Q) {
              (this._elementRef = E),
                (this._focusTrapFactory = V),
                (this._previouslyFocusedElement = null),
                (this.focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                  !0,
                ));
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(),
                  (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture && this._captureFocus();
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
            ngOnChanges(E) {
              const V = E.autoCapture;
              V &&
                !V.firstChange &&
                this.autoCapture &&
                this.focusTrap.hasAttached() &&
                this._captureFocus();
            }
            _captureFocus() {
              (this._previouslyFocusedElement = (0, L.ht)()),
                this.focusTrap.focusInitialElementWhenReady();
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(x.Y36(x.SBq), x.Y36(Kt), x.Y36(s.K0));
            }),
            (R.ɵdir = x.lG2({
              type: R,
              selectors: [['', 'cdkTrapFocus', '']],
              inputs: {
                enabled: ['cdkTrapFocus', 'enabled'],
                autoCapture: ['cdkTrapFocusAutoCapture', 'autoCapture'],
              },
              exportAs: ['cdkTrapFocus'],
              features: [x.TTD],
            })),
            R
          );
        })();
      function hn(R) {
        return 0 === R.buttons || (0 === R.offsetX && 0 === R.offsetY);
      }
      function Xe(R) {
        const b =
          (R.touches && R.touches[0]) ||
          (R.changedTouches && R.changedTouches[0]);
        return !(
          !b ||
          -1 !== b.identifier ||
          (null != b.radiusX && 1 !== b.radiusX) ||
          (null != b.radiusY && 1 !== b.radiusY)
        );
      }
      const $ = new x.OlP('cdk-input-modality-detector-options'),
        J = { ignoreKeys: [ue.zL, ue.jx, ue.b2, ue.MW, ue.JU] },
        He = (0, L.i$)({ passive: !0, capture: !0 });
      let ve = (() => {
        class R {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(E, V, Q, We) {
            (this._platform = E),
              (this._mostRecentTarget = null),
              (this._modality = new he.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = St => {
                this._options?.ignoreKeys?.some(Gt => Gt === St.keyCode) ||
                  (this._modality.next('keyboard'),
                  (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._onMousedown = St => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(hn(St) ? 'keyboard' : 'mouse'),
                  (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._onTouchstart = St => {
                Xe(St)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = (0, L.sA)(St)));
              }),
              (this._options = { ...J, ...We }),
              (this.modalityDetected = this._modality.pipe((0, ze.T)(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, st.x)())),
              E.isBrowser &&
                V.runOutsideAngular(() => {
                  Q.addEventListener('keydown', this._onKeydown, He),
                    Q.addEventListener('mousedown', this._onMousedown, He),
                    Q.addEventListener('touchstart', this._onTouchstart, He);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, He),
                document.removeEventListener(
                  'mousedown',
                  this._onMousedown,
                  He,
                ),
                document.removeEventListener(
                  'touchstart',
                  this._onTouchstart,
                  He,
                ));
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(
              x.LFG(L.t4),
              x.LFG(x.R0b),
              x.LFG(s.K0),
              x.LFG($, 8),
            );
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac, providedIn: 'root' })),
          R
        );
      })();
      const be = new x.OlP('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function j() {
            return null;
          },
        }),
        ke = new x.OlP('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let de = 0,
        me = (() => {
          class R {
            constructor(E, V, Q, We) {
              (this._ngZone = V),
                (this._defaultOptions = We),
                (this._document = Q),
                (this._liveElement = E || this._createLiveElement());
            }
            announce(E, ...V) {
              const Q = this._defaultOptions;
              let We, St;
              return (
                1 === V.length && 'number' == typeof V[0]
                  ? (St = V[0])
                  : ([We, St] = V),
                this.clear(),
                clearTimeout(this._previousTimeout),
                We || (We = Q && Q.politeness ? Q.politeness : 'polite'),
                null == St && Q && (St = Q.duration),
                this._liveElement.setAttribute('aria-live', We),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        Gt => (this._currentResolve = Gt),
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = E),
                        'number' == typeof St &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            St,
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  ),
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const E = 'cdk-live-announcer-element',
                V = this._document.getElementsByClassName(E),
                Q = this._document.createElement('div');
              for (let We = 0; We < V.length; We++) V[We].remove();
              return (
                Q.classList.add(E),
                Q.classList.add('cdk-visually-hidden'),
                Q.setAttribute('aria-atomic', 'true'),
                Q.setAttribute('aria-live', 'polite'),
                (Q.id = 'cdk-live-announcer-' + de++),
                this._document.body.appendChild(Q),
                Q
              );
            }
            _exposeAnnouncerToModals(E) {
              const V = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              for (let Q = 0; Q < V.length; Q++) {
                const We = V[Q],
                  St = We.getAttribute('aria-owns');
                St
                  ? -1 === St.indexOf(E) &&
                    We.setAttribute('aria-owns', St + ' ' + E)
                  : We.setAttribute('aria-owns', E);
              }
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(
                x.LFG(be, 8),
                x.LFG(x.R0b),
                x.LFG(s.K0),
                x.LFG(ke, 8),
              );
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })();
      const et = new x.OlP('cdk-focus-monitor-default-options'),
        Mt = (0, L.i$)({ passive: !0, capture: !0 });
      let Rt = (() => {
          class R {
            constructor(E, V, Q, We, St) {
              (this._ngZone = E),
                (this._platform = V),
                (this._inputModalityDetector = Q),
                (this._origin = null),
                (this._windowFocused = !1),
                (this._originFromTouchInteraction = !1),
                (this._elementInfo = new Map()),
                (this._monitoredElementCount = 0),
                (this._rootNodeFocusListenerCount = new Map()),
                (this._windowFocusListener = () => {
                  (this._windowFocused = !0),
                    (this._windowFocusTimeoutId = window.setTimeout(
                      () => (this._windowFocused = !1),
                    ));
                }),
                (this._stopInputModalityDetector = new oe.x()),
                (this._rootNodeFocusAndBlurListener = Gt => {
                  for (let Bt = (0, L.sA)(Gt); Bt; Bt = Bt.parentElement)
                    'focus' === Gt.type
                      ? this._onFocus(Gt, Bt)
                      : this._onBlur(Gt, Bt);
                }),
                (this._document = We),
                (this._detectionMode = St?.detectionMode || 0);
            }
            monitor(E, V = !1) {
              const Q = (0, Le.fI)(E);
              if (!this._platform.isBrowser || 1 !== Q.nodeType)
                return (0, ge.of)(null);
              const We = (0, L.kV)(Q) || this._getDocument(),
                St = this._elementInfo.get(Q);
              if (St) return V && (St.checkChildren = !0), St.subject;
              const Gt = {
                checkChildren: V,
                subject: new oe.x(),
                rootNode: We,
              };
              return (
                this._elementInfo.set(Q, Gt),
                this._registerGlobalListeners(Gt),
                Gt.subject
              );
            }
            stopMonitoring(E) {
              const V = (0, Le.fI)(E),
                Q = this._elementInfo.get(V);
              Q &&
                (Q.subject.complete(),
                this._setClasses(V),
                this._elementInfo.delete(V),
                this._removeGlobalListeners(Q));
            }
            focusVia(E, V, Q) {
              const We = (0, Le.fI)(E);
              We === this._getDocument().activeElement
                ? this._getClosestElementsInfo(We).forEach(([Gt, zt]) =>
                    this._originChanged(Gt, V, zt),
                  )
                : (this._setOrigin(V),
                  'function' == typeof We.focus && We.focus(Q));
            }
            ngOnDestroy() {
              this._elementInfo.forEach((E, V) => this.stopMonitoring(V));
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _getFocusOrigin(E) {
              return this._origin
                ? this._originFromTouchInteraction
                  ? this._shouldBeAttributedToTouch(E)
                    ? 'touch'
                    : 'program'
                  : this._origin
                : this._windowFocused && this._lastFocusOrigin
                ? this._lastFocusOrigin
                : E && this._isLastInteractionFromInputLabel(E)
                ? 'mouse'
                : 'program';
            }
            _shouldBeAttributedToTouch(E) {
              return (
                1 === this._detectionMode ||
                !!E?.contains(this._inputModalityDetector._mostRecentTarget)
              );
            }
            _setClasses(E, V) {
              E.classList.toggle('cdk-focused', !!V),
                E.classList.toggle('cdk-touch-focused', 'touch' === V),
                E.classList.toggle('cdk-keyboard-focused', 'keyboard' === V),
                E.classList.toggle('cdk-mouse-focused', 'mouse' === V),
                E.classList.toggle('cdk-program-focused', 'program' === V);
            }
            _setOrigin(E, V = !1) {
              this._ngZone.runOutsideAngular(() => {
                (this._origin = E),
                  (this._originFromTouchInteraction = 'touch' === E && V),
                  0 === this._detectionMode &&
                    (clearTimeout(this._originTimeoutId),
                    (this._originTimeoutId = setTimeout(
                      () => (this._origin = null),
                      this._originFromTouchInteraction ? 650 : 1,
                    )));
              });
            }
            _onFocus(E, V) {
              const Q = this._elementInfo.get(V),
                We = (0, L.sA)(E);
              !Q ||
                (!Q.checkChildren && V !== We) ||
                this._originChanged(V, this._getFocusOrigin(We), Q);
            }
            _onBlur(E, V) {
              const Q = this._elementInfo.get(V);
              !Q ||
                (Q.checkChildren &&
                  E.relatedTarget instanceof Node &&
                  V.contains(E.relatedTarget)) ||
                (this._setClasses(V), this._emitOrigin(Q, null));
            }
            _emitOrigin(E, V) {
              E.subject.observers.length &&
                this._ngZone.run(() => E.subject.next(V));
            }
            _registerGlobalListeners(E) {
              if (!this._platform.isBrowser) return;
              const V = E.rootNode,
                Q = this._rootNodeFocusListenerCount.get(V) || 0;
              Q ||
                this._ngZone.runOutsideAngular(() => {
                  V.addEventListener(
                    'focus',
                    this._rootNodeFocusAndBlurListener,
                    Mt,
                  ),
                    V.addEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    );
                }),
                this._rootNodeFocusListenerCount.set(V, Q + 1),
                1 == ++this._monitoredElementCount &&
                  (this._ngZone.runOutsideAngular(() => {
                    this._getWindow().addEventListener(
                      'focus',
                      this._windowFocusListener,
                    );
                  }),
                  this._inputModalityDetector.modalityDetected
                    .pipe((0, gt.R)(this._stopInputModalityDetector))
                    .subscribe(We => {
                      this._setOrigin(We, !0);
                    }));
            }
            _removeGlobalListeners(E) {
              const V = E.rootNode;
              if (this._rootNodeFocusListenerCount.has(V)) {
                const Q = this._rootNodeFocusListenerCount.get(V);
                Q > 1
                  ? this._rootNodeFocusListenerCount.set(V, Q - 1)
                  : (V.removeEventListener(
                      'focus',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    ),
                    V.removeEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      Mt,
                    ),
                    this._rootNodeFocusListenerCount.delete(V));
              }
              --this._monitoredElementCount ||
                (this._getWindow().removeEventListener(
                  'focus',
                  this._windowFocusListener,
                ),
                this._stopInputModalityDetector.next(),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._originTimeoutId));
            }
            _originChanged(E, V, Q) {
              this._setClasses(E, V),
                this._emitOrigin(Q, V),
                (this._lastFocusOrigin = V);
            }
            _getClosestElementsInfo(E) {
              const V = [];
              return (
                this._elementInfo.forEach((Q, We) => {
                  (We === E || (Q.checkChildren && We.contains(E))) &&
                    V.push([We, Q]);
                }),
                V
              );
            }
            _isLastInteractionFromInputLabel(E) {
              const { _mostRecentTarget: V, mostRecentModality: Q } =
                this._inputModalityDetector;
              if (
                'mouse' !== Q ||
                !V ||
                V === E ||
                ('INPUT' !== E.nodeName && 'TEXTAREA' !== E.nodeName) ||
                E.disabled
              )
                return !1;
              const We = E.labels;
              if (We)
                for (let St = 0; St < We.length; St++)
                  if (We[St].contains(V)) return !0;
              return !1;
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(
                x.LFG(x.R0b),
                x.LFG(L.t4),
                x.LFG(ve),
                x.LFG(s.K0, 8),
                x.LFG(et, 8),
              );
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        Cn = (() => {
          class R {
            constructor(E, V) {
              (this._elementRef = E),
                (this._focusMonitor = V),
                (this._focusOrigin = null),
                (this.cdkFocusChange = new x.vpe());
            }
            get focusOrigin() {
              return this._focusOrigin;
            }
            ngAfterViewInit() {
              const E = this._elementRef.nativeElement;
              this._monitorSubscription = this._focusMonitor
                .monitor(
                  E,
                  1 === E.nodeType && E.hasAttribute('cdkMonitorSubtreeFocus'),
                )
                .subscribe(V => {
                  (this._focusOrigin = V), this.cdkFocusChange.emit(V);
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._monitorSubscription &&
                  this._monitorSubscription.unsubscribe();
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(x.Y36(x.SBq), x.Y36(Rt));
            }),
            (R.ɵdir = x.lG2({
              type: R,
              selectors: [
                ['', 'cdkMonitorElementFocus', ''],
                ['', 'cdkMonitorSubtreeFocus', ''],
              ],
              outputs: { cdkFocusChange: 'cdkFocusChange' },
              exportAs: ['cdkMonitorFocus'],
            })),
            R
          );
        })();
      const Oe = 'cdk-high-contrast-black-on-white',
        bt = 'cdk-high-contrast-white-on-black',
        Je = 'cdk-high-contrast-active';
      let wt = (() => {
          class R {
            constructor(E, V) {
              (this._platform = E),
                (this._document = V),
                (this._breakpointSubscription = (0, x.f3M)(at.Yg)
                  .observe('(forced-colors: active)')
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const E = this._document.createElement('div');
              (E.style.backgroundColor = 'rgb(1,2,3)'),
                (E.style.position = 'absolute'),
                this._document.body.appendChild(E);
              const V = this._document.defaultView || window,
                Q = V && V.getComputedStyle ? V.getComputedStyle(E) : null,
                We = ((Q && Q.backgroundColor) || '').replace(/ /g, '');
              switch ((E.remove(), We)) {
                case 'rgb(0,0,0)':
                case 'rgb(45,50,54)':
                case 'rgb(32,32,32)':
                  return 2;
                case 'rgb(255,255,255)':
                case 'rgb(255,250,239)':
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const E = this._document.body.classList;
                E.remove(Je, Oe, bt), (this._hasCheckedHighContrastMode = !0);
                const V = this.getHighContrastMode();
                1 === V ? E.add(Je, Oe) : 2 === V && E.add(Je, bt);
              }
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(x.LFG(L.t4), x.LFG(s.K0));
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        Te = (() => {
          class R {
            constructor(E) {
              E._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (R.ɵfac = function (E) {
              return new (E || R)(x.LFG(wt));
            }),
            (R.ɵmod = x.oAB({ type: R })),
            (R.ɵinj = x.cJS({ imports: [pt.Q8] })),
            R
          );
        })();
    },
    445: (Ot, Ne, C) => {
      C.d(Ne, { Is: () => ge, vT: () => le });
      var s = C(4650),
        x = C(6895);
      const L = new s.OlP('cdk-dir-doc', {
          providedIn: 'root',
          factory: function oe() {
            return (0, s.f3M)(x.K0);
          },
        }),
        ee =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let ge = (() => {
          class ae {
            constructor(se) {
              (this.value = 'ltr'),
                (this.change = new s.vpe()),
                se &&
                  (this.value = (function he(ae) {
                    const pe = ae?.toLowerCase() || '';
                    return 'auto' === pe &&
                      typeof navigator < 'u' &&
                      navigator?.language
                      ? ee.test(navigator.language)
                        ? 'rtl'
                        : 'ltr'
                      : 'rtl' === pe
                      ? 'rtl'
                      : 'ltr';
                  })(
                    (se.body ? se.body.dir : null) ||
                      (se.documentElement ? se.documentElement.dir : null) ||
                      'ltr',
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)(s.LFG(L, 8));
            }),
            (ae.ɵprov = s.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        le = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)();
            }),
            (ae.ɵmod = s.oAB({ type: ae })),
            (ae.ɵinj = s.cJS({})),
            ae
          );
        })();
    },
    1281: (Ot, Ne, C) => {
      C.d(Ne, {
        Eq: () => ee,
        HM: () => he,
        Ig: () => x,
        du: () => ue,
        fI: () => ge,
        su: () => L,
      });
      var s = C(4650);
      function x(le) {
        return null != le && 'false' != `${le}`;
      }
      function L(le, ae = 0) {
        return (function oe(le) {
          return !isNaN(parseFloat(le)) && !isNaN(Number(le));
        })(le)
          ? Number(le)
          : ae;
      }
      function ee(le) {
        return Array.isArray(le) ? le : [le];
      }
      function he(le) {
        return null == le ? '' : 'string' == typeof le ? le : `${le}px`;
      }
      function ge(le) {
        return le instanceof s.SBq ? le.nativeElement : le;
      }
      function ue(le, ae = /\s+/) {
        const pe = [];
        if (null != le) {
          const se = Array.isArray(le) ? le : `${le}`.split(ae);
          for (const Be of se) {
            const ze = `${Be}`.trim();
            ze && pe.push(ze);
          }
        }
        return pe;
      }
    },
    9521: (Ot, Ne, C) => {
      C.d(Ne, {
        A: () => Ye,
        JH: () => vt,
        JU: () => he,
        K5: () => ee,
        Ku: () => Be,
        LH: () => pt,
        L_: () => se,
        MW: () => ke,
        Mf: () => L,
        SV: () => at,
        Sd: () => gt,
        VM: () => ze,
        Vb: () => pi,
        Z: () => j,
        aO: () => Me,
        b2: () => Zn,
        hY: () => pe,
        jx: () => ge,
        oh: () => Le,
        uR: () => st,
        xE: () => Se,
        zL: () => ue,
      });
      const L = 9,
        ee = 13,
        he = 16,
        ge = 17,
        ue = 18,
        pe = 27,
        se = 32,
        Be = 33,
        ze = 34,
        st = 35,
        gt = 36,
        Le = 37,
        pt = 38,
        at = 39,
        vt = 40,
        Se = 48,
        Me = 57,
        Ye = 65,
        j = 90,
        ke = 91,
        Zn = 224;
      function pi(An, ...gi) {
        return gi.length
          ? gi.some(_i => An[_i])
          : An.altKey || An.shiftKey || An.ctrlKey || An.metaKey;
      }
    },
    2289: (Ot, Ne, C) => {
      C.d(Ne, { Yg: () => vt, u3: () => ne });
      var s = C(4650),
        x = C(1281),
        L = C(7579),
        oe = C(9841),
        ee = C(7272),
        he = C(9751),
        ge = C(5698),
        ue = C(5684),
        le = C(8372),
        ae = C(4004),
        pe = C(8675),
        se = C(2722),
        Be = C(3353);
      const st = new Set();
      let gt,
        Le = (() => {
          class te {
            constructor(Se) {
              (this._platform = Se),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : at);
            }
            matchMedia(Se) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function pt(te) {
                    if (!st.has(te))
                      try {
                        gt ||
                          ((gt = document.createElement('style')),
                          gt.setAttribute('type', 'text/css'),
                          document.head.appendChild(gt)),
                          gt.sheet &&
                            (gt.sheet.insertRule(`@media ${te} {body{ }}`, 0),
                            st.add(te));
                      } catch (X) {
                        console.error(X);
                      }
                  })(Se),
                this._matchMedia(Se)
              );
            }
          }
          return (
            (te.ɵfac = function (Se) {
              return new (Se || te)(s.LFG(Be.t4));
            }),
            (te.ɵprov = s.Yz7({
              token: te,
              factory: te.ɵfac,
              providedIn: 'root',
            })),
            te
          );
        })();
      function at(te) {
        return {
          matches: 'all' === te || '' === te,
          media: te,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let vt = (() => {
        class te {
          constructor(Se, tt) {
            (this._mediaMatcher = Se),
              (this._zone = tt),
              (this._queries = new Map()),
              (this._destroySubject = new L.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(Se) {
            return xe((0, x.Eq)(Se)).some(
              re => this._registerQuery(re).mql.matches,
            );
          }
          observe(Se) {
            const re = xe((0, x.Eq)(Se)).map(
              mt => this._registerQuery(mt).observable,
            );
            let At = (0, oe.a)(re);
            return (
              (At = (0, ee.z)(
                At.pipe((0, ge.q)(1)),
                At.pipe((0, ue.T)(1), (0, le.b)(0)),
              )),
              At.pipe(
                (0, ae.U)(mt => {
                  const Yt = { matches: !1, breakpoints: {} };
                  return (
                    mt.forEach(({ matches: Et, query: Ge }) => {
                      (Yt.matches = Yt.matches || Et),
                        (Yt.breakpoints[Ge] = Et);
                    }),
                    Yt
                  );
                }),
              )
            );
          }
          _registerQuery(Se) {
            if (this._queries.has(Se)) return this._queries.get(Se);
            const tt = this._mediaMatcher.matchMedia(Se),
              At = {
                observable: new he.y(mt => {
                  const Yt = Et => this._zone.run(() => mt.next(Et));
                  return (
                    tt.addListener(Yt),
                    () => {
                      tt.removeListener(Yt);
                    }
                  );
                }).pipe(
                  (0, pe.O)(tt),
                  (0, ae.U)(({ matches: mt }) => ({ query: Se, matches: mt })),
                  (0, se.R)(this._destroySubject),
                ),
                mql: tt,
              };
            return this._queries.set(Se, At), At;
          }
        }
        return (
          (te.ɵfac = function (Se) {
            return new (Se || te)(s.LFG(Le), s.LFG(s.R0b));
          }),
          (te.ɵprov = s.Yz7({
            token: te,
            factory: te.ɵfac,
            providedIn: 'root',
          })),
          te
        );
      })();
      function xe(te) {
        return te
          .map(X => X.split(','))
          .reduce((X, Se) => X.concat(Se))
          .map(X => X.trim());
      }
      const ne = {
        XSmall: '(max-width: 599.98px)',
        Small: '(min-width: 600px) and (max-width: 959.98px)',
        Medium: '(min-width: 960px) and (max-width: 1279.98px)',
        Large: '(min-width: 1280px) and (max-width: 1919.98px)',
        XLarge: '(min-width: 1920px)',
        Handset:
          '(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)',
        Tablet:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        Web: '(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)',
        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',
        TabletPortrait:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',
        WebPortrait: '(min-width: 840px) and (orientation: portrait)',
        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',
        TabletLandscape:
          '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',
      };
    },
    9643: (Ot, Ne, C) => {
      C.d(Ne, { Q8: () => le, wD: () => ue });
      var s = C(1281),
        x = C(4650),
        L = C(9751),
        oe = C(7579),
        ee = C(8372);
      let he = (() => {
          class ae {
            create(se) {
              return typeof MutationObserver > 'u'
                ? null
                : new MutationObserver(se);
            }
          }
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)();
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        ge = (() => {
          class ae {
            constructor(se) {
              (this._mutationObserverFactory = se),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((se, Be) =>
                this._cleanupObserver(Be),
              );
            }
            observe(se) {
              const Be = (0, s.fI)(se);
              return new L.y(ze => {
                const gt = this._observeElement(Be).subscribe(ze);
                return () => {
                  gt.unsubscribe(), this._unobserveElement(Be);
                };
              });
            }
            _observeElement(se) {
              if (this._observedElements.has(se))
                this._observedElements.get(se).count++;
              else {
                const Be = new oe.x(),
                  ze = this._mutationObserverFactory.create(st => Be.next(st));
                ze &&
                  ze.observe(se, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(se, {
                    observer: ze,
                    stream: Be,
                    count: 1,
                  });
              }
              return this._observedElements.get(se).stream;
            }
            _unobserveElement(se) {
              this._observedElements.has(se) &&
                (this._observedElements.get(se).count--,
                this._observedElements.get(se).count ||
                  this._cleanupObserver(se));
            }
            _cleanupObserver(se) {
              if (this._observedElements.has(se)) {
                const { observer: Be, stream: ze } =
                  this._observedElements.get(se);
                Be && Be.disconnect(),
                  ze.complete(),
                  this._observedElements.delete(se);
              }
            }
          }
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)(x.LFG(he));
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        ue = (() => {
          class ae {
            get disabled() {
              return this._disabled;
            }
            set disabled(se) {
              (this._disabled = (0, s.Ig)(se)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(se) {
              (this._debounce = (0, s.su)(se)), this._subscribe();
            }
            constructor(se, Be, ze) {
              (this._contentObserver = se),
                (this._elementRef = Be),
                (this._ngZone = ze),
                (this.event = new x.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const se = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? se.pipe((0, ee.b)(this.debounce)) : se
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)(x.Y36(ge), x.Y36(x.SBq), x.Y36(x.R0b));
            }),
            (ae.ɵdir = x.lG2({
              type: ae,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: {
                disabled: ['cdkObserveContentDisabled', 'disabled'],
                debounce: 'debounce',
              },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            ae
          );
        })(),
        le = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (se) {
              return new (se || ae)();
            }),
            (ae.ɵmod = x.oAB({ type: ae })),
            (ae.ɵinj = x.cJS({ providers: [he] })),
            ae
          );
        })();
    },
    8184: (Ot, Ne, C) => {
      C.d(Ne, {
        Iu: () => Ue,
        U8: () => ht,
        X_: () => Se,
        Xj: () => Me,
        _G: () => a,
        aV: () => Dn,
        pI: () => Dt,
        xu: () => wn,
      });
      var s = C(44),
        x = C(6895),
        L = C(4650),
        oe = C(1281),
        ee = C(3353),
        he = C(9300),
        ge = C(5698),
        ue = C(2722),
        le = C(2529),
        ae = C(445),
        pe = C(4080),
        se = C(7579),
        Be = C(727),
        ze = C(6451),
        st = C(9521);
      const gt = (0, ee.Mq)();
      class Le {
        constructor($, J) {
          (this._viewportRuler = $),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = J);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const $ = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = $.style.left || ''),
              (this._previousHTMLStyles.top = $.style.top || ''),
              ($.style.left = (0, oe.HM)(-this._previousScrollPosition.left)),
              ($.style.top = (0, oe.HM)(-this._previousScrollPosition.top)),
              $.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const $ = this._document.documentElement,
              Ae = $.style,
              He = this._document.body.style,
              ve = Ae.scrollBehavior || '',
              be = He.scrollBehavior || '';
            (this._isEnabled = !1),
              (Ae.left = this._previousHTMLStyles.left),
              (Ae.top = this._previousHTMLStyles.top),
              $.classList.remove('cdk-global-scrollblock'),
              gt && (Ae.scrollBehavior = He.scrollBehavior = 'auto'),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top,
              ),
              gt && ((Ae.scrollBehavior = ve), (He.scrollBehavior = be));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              'cdk-global-scrollblock',
            ) ||
            this._isEnabled
          )
            return !1;
          const J = this._document.body,
            Ae = this._viewportRuler.getViewportSize();
          return J.scrollHeight > Ae.height || J.scrollWidth > Ae.width;
        }
      }
      class at {
        constructor($, J, Ae, He) {
          (this._scrollDispatcher = $),
            (this._ngZone = J),
            (this._viewportRuler = Ae),
            (this._config = He),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach($) {
          this._overlayRef = $;
        }
        enable() {
          if (this._scrollSubscription) return;
          const $ = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              (0, he.h)(
                J =>
                  !J ||
                  !this._overlayRef.overlayElement.contains(
                    J.getElementRef().nativeElement,
                  ),
              ),
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = $.subscribe(() => {
                const J = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(J - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = $.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class vt {
        enable() {}
        disable() {}
        attach() {}
      }
      function xe(Xe, $) {
        return $.some(
          J =>
            Xe.bottom < J.top ||
            Xe.top > J.bottom ||
            Xe.right < J.left ||
            Xe.left > J.right,
        );
      }
      function ne(Xe, $) {
        return $.some(
          J =>
            Xe.top < J.top ||
            Xe.bottom > J.bottom ||
            Xe.left < J.left ||
            Xe.right > J.right,
        );
      }
      class te {
        constructor($, J, Ae, He) {
          (this._scrollDispatcher = $),
            (this._viewportRuler = J),
            (this._ngZone = Ae),
            (this._config = He),
            (this._scrollSubscription = null);
        }
        attach($) {
          this._overlayRef = $;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const J =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: Ae, height: He } =
                      this._viewportRuler.getViewportSize();
                  xe(J, [
                    {
                      width: Ae,
                      height: He,
                      bottom: He,
                      right: Ae,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let X = (() => {
        class Xe {
          constructor(J, Ae, He, ve) {
            (this._scrollDispatcher = J),
              (this._viewportRuler = Ae),
              (this._ngZone = He),
              (this.noop = () => new vt()),
              (this.close = be =>
                new at(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  be,
                )),
              (this.block = () => new Le(this._viewportRuler, this._document)),
              (this.reposition = be =>
                new te(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  be,
                )),
              (this._document = ve);
          }
        }
        return (
          (Xe.ɵfac = function (J) {
            return new (J || Xe)(
              L.LFG(s.mF),
              L.LFG(s.rL),
              L.LFG(L.R0b),
              L.LFG(x.K0),
            );
          }),
          (Xe.ɵprov = L.Yz7({
            token: Xe,
            factory: Xe.ɵfac,
            providedIn: 'root',
          })),
          Xe
        );
      })();
      class Se {
        constructor($) {
          if (
            ((this.scrollStrategy = new vt()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            $)
          ) {
            const J = Object.keys($);
            for (const Ae of J) void 0 !== $[Ae] && (this[Ae] = $[Ae]);
          }
        }
      }
      class At {
        constructor($, J) {
          (this.connectionPair = $), (this.scrollableViewProperties = J);
        }
      }
      let Et = (() => {
          class Xe {
            constructor(J) {
              (this._attachedOverlays = []), (this._document = J);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(J) {
              this.remove(J), this._attachedOverlays.push(J);
            }
            remove(J) {
              const Ae = this._attachedOverlays.indexOf(J);
              Ae > -1 && this._attachedOverlays.splice(Ae, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(L.LFG(x.K0));
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })(),
        Ge = (() => {
          class Xe extends Et {
            constructor(J, Ae) {
              super(J),
                (this._ngZone = Ae),
                (this._keydownListener = He => {
                  const ve = this._attachedOverlays;
                  for (let be = ve.length - 1; be > -1; be--)
                    if (ve[be]._keydownEvents.observers.length > 0) {
                      const j = ve[be]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => j.next(He))
                        : j.next(He);
                      break;
                    }
                });
            }
            add(J) {
              super.add(J),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          'keydown',
                          this._keydownListener,
                        ),
                      )
                    : this._document.body.addEventListener(
                        'keydown',
                        this._keydownListener,
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  'keydown',
                  this._keydownListener,
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(L.LFG(x.K0), L.LFG(L.R0b, 8));
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })(),
        $e = (() => {
          class Xe extends Et {
            constructor(J, Ae, He) {
              super(J),
                (this._platform = Ae),
                (this._ngZone = He),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = ve => {
                  this._pointerDownEventTarget = (0, ee.sA)(ve);
                }),
                (this._clickListener = ve => {
                  const be = (0, ee.sA)(ve),
                    j =
                      'click' === ve.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : be;
                  this._pointerDownEventTarget = null;
                  const ke = this._attachedOverlays.slice();
                  for (let de = ke.length - 1; de > -1; de--) {
                    const me = ke[de];
                    if (
                      me._outsidePointerEvents.observers.length < 1 ||
                      !me.hasAttached()
                    )
                      continue;
                    if (
                      me.overlayElement.contains(be) ||
                      me.overlayElement.contains(j)
                    )
                      break;
                    const fe = me._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => fe.next(ve))
                      : fe.next(ve);
                  }
                });
            }
            add(J) {
              if ((super.add(J), !this._isAttached)) {
                const Ae = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(Ae),
                    )
                  : this._addEventListeners(Ae),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = Ae.style.cursor),
                    (Ae.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const J = this._document.body;
                J.removeEventListener(
                  'pointerdown',
                  this._pointerDownListener,
                  !0,
                ),
                  J.removeEventListener('click', this._clickListener, !0),
                  J.removeEventListener('auxclick', this._clickListener, !0),
                  J.removeEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((J.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(J) {
              J.addEventListener('pointerdown', this._pointerDownListener, !0),
                J.addEventListener('click', this._clickListener, !0),
                J.addEventListener('auxclick', this._clickListener, !0),
                J.addEventListener('contextmenu', this._clickListener, !0);
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(L.LFG(x.K0), L.LFG(ee.t4), L.LFG(L.R0b, 8));
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })(),
        Me = (() => {
          class Xe {
            constructor(J, Ae) {
              (this._platform = Ae), (this._document = J);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const J = 'cdk-overlay-container';
              if (this._platform.isBrowser || (0, ee.Oy)()) {
                const He = this._document.querySelectorAll(
                  `.${J}[platform="server"], .${J}[platform="test"]`,
                );
                for (let ve = 0; ve < He.length; ve++) He[ve].remove();
              }
              const Ae = this._document.createElement('div');
              Ae.classList.add(J),
                (0, ee.Oy)()
                  ? Ae.setAttribute('platform', 'test')
                  : this._platform.isBrowser ||
                    Ae.setAttribute('platform', 'server'),
                this._document.body.appendChild(Ae),
                (this._containerElement = Ae);
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(L.LFG(x.K0), L.LFG(ee.t4));
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })();
      class Ue {
        constructor($, J, Ae, He, ve, be, j, ke, de, me = !1) {
          (this._portalOutlet = $),
            (this._host = J),
            (this._pane = Ae),
            (this._config = He),
            (this._ngZone = ve),
            (this._keyboardDispatcher = be),
            (this._document = j),
            (this._location = ke),
            (this._outsideClickDispatcher = de),
            (this._animationsDisabled = me),
            (this._backdropElement = null),
            (this._backdropClick = new se.x()),
            (this._attachments = new se.x()),
            (this._detachments = new se.x()),
            (this._locationChanges = Be.w0.EMPTY),
            (this._backdropClickHandler = fe => this._backdropClick.next(fe)),
            (this._backdropTransitionendHandler = fe => {
              this._disposeBackdrop(fe.target);
            }),
            (this._keydownEvents = new se.x()),
            (this._outsidePointerEvents = new se.x()),
            He.scrollStrategy &&
              ((this._scrollStrategy = He.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = He.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach($) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const J = this._portalOutlet.attach($);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, ge.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose(),
              )),
            this._outsideClickDispatcher.add(this),
            'function' == typeof J?.onDestroy &&
              J.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach()),
                  );
              }),
            J
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const $ = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            $
          );
        }
        dispose() {
          const $ = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            $ && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy($) {
          $ !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = $),
            this.hasAttached() && ($.attach(this), this.updatePosition()));
        }
        updateSize($) {
          (this._config = { ...this._config, ...$ }), this._updateElementSize();
        }
        setDirection($) {
          (this._config = { ...this._config, direction: $ }),
            this._updateElementDirection();
        }
        addPanelClass($) {
          this._pane && this._toggleClasses(this._pane, $, !0);
        }
        removePanelClass($) {
          this._pane && this._toggleClasses(this._pane, $, !1);
        }
        getDirection() {
          const $ = this._config.direction;
          return $ ? ('string' == typeof $ ? $ : $.value) : 'ltr';
        }
        updateScrollStrategy($) {
          $ !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = $),
            this.hasAttached() && ($.attach(this), $.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const $ = this._pane.style;
          ($.width = (0, oe.HM)(this._config.width)),
            ($.height = (0, oe.HM)(this._config.height)),
            ($.minWidth = (0, oe.HM)(this._config.minWidth)),
            ($.minHeight = (0, oe.HM)(this._config.minHeight)),
            ($.maxWidth = (0, oe.HM)(this._config.maxWidth)),
            ($.maxHeight = (0, oe.HM)(this._config.maxHeight));
        }
        _togglePointerEvents($) {
          this._pane.style.pointerEvents = $ ? '' : 'none';
        }
        _attachBackdrop() {
          const $ = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                'cdk-overlay-backdrop-noop-animation',
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0,
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host,
            ),
            this._backdropElement.addEventListener(
              'click',
              this._backdropClickHandler,
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < 'u'
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add($);
                  });
                })
              : this._backdropElement.classList.add($);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const $ = this._backdropElement;
          if ($) {
            if (this._animationsDisabled) return void this._disposeBackdrop($);
            $.classList.remove('cdk-overlay-backdrop-showing'),
              this._ngZone.runOutsideAngular(() => {
                $.addEventListener(
                  'transitionend',
                  this._backdropTransitionendHandler,
                );
              }),
              ($.style.pointerEvents = 'none'),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop($);
                }, 500),
              ));
          }
        }
        _toggleClasses($, J, Ae) {
          const He = (0, oe.Eq)(J || []).filter(ve => !!ve);
          He.length &&
            (Ae ? $.classList.add(...He) : $.classList.remove(...He));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const $ = this._ngZone.onStable
              .pipe((0, ue.R)((0, ze.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1,
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  $.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const $ = this._scrollStrategy;
          $ && ($.disable(), $.detach && $.detach());
        }
        _disposeBackdrop($) {
          $ &&
            ($.removeEventListener('click', this._backdropClickHandler),
            $.removeEventListener(
              'transitionend',
              this._backdropTransitionendHandler,
            ),
            $.remove(),
            this._backdropElement === $ && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const De = 'cdk-overlay-connected-position-bounding-box',
        Pe = /([A-Za-z%]+)$/;
      class a {
        get positions() {
          return this._preferredPositions;
        }
        constructor($, J, Ae, He, ve) {
          (this._viewportRuler = J),
            (this._document = Ae),
            (this._platform = He),
            (this._overlayContainer = ve),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new se.x()),
            (this._resizeSubscription = Be.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin($);
        }
        attach($) {
          this._validatePositions(),
            $.hostElement.classList.add(De),
            (this._overlayRef = $),
            (this._boundingBox = $.hostElement),
            (this._pane = $.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const $ = this._originRect,
            J = this._overlayRect,
            Ae = this._viewportRect,
            He = this._containerRect,
            ve = [];
          let be;
          for (let j of this._preferredPositions) {
            let ke = this._getOriginPoint($, He, j),
              de = this._getOverlayPoint(ke, J, j),
              me = this._getOverlayFit(de, J, Ae, j);
            if (me.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(j, ke);
            this._canFitWithFlexibleDimensions(me, de, Ae)
              ? ve.push({
                  position: j,
                  origin: ke,
                  overlayRect: J,
                  boundingBoxRect: this._calculateBoundingBoxRect(ke, j),
                })
              : (!be || be.overlayFit.visibleArea < me.visibleArea) &&
                (be = {
                  overlayFit: me,
                  overlayPoint: de,
                  originPoint: ke,
                  position: j,
                  overlayRect: J,
                });
          }
          if (ve.length) {
            let j = null,
              ke = -1;
            for (const de of ve) {
              const me =
                de.boundingBoxRect.width *
                de.boundingBoxRect.height *
                (de.position.weight || 1);
              me > ke && ((ke = me), (j = de));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(j.position, j.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(be.position, be.originPoint)
            );
          this._applyPosition(be.position, be.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Ye(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(De),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const $ = this._lastPosition;
          if ($) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const J = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              $,
            );
            this._applyPosition($, J);
          } else this.apply();
        }
        withScrollableContainers($) {
          return (this._scrollables = $), this;
        }
        withPositions($) {
          return (
            (this._preferredPositions = $),
            -1 === $.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin($) {
          return (this._viewportMargin = $), this;
        }
        withFlexibleDimensions($ = !0) {
          return (this._hasFlexibleDimensions = $), this;
        }
        withGrowAfterOpen($ = !0) {
          return (this._growAfterOpen = $), this;
        }
        withPush($ = !0) {
          return (this._canPush = $), this;
        }
        withLockedPosition($ = !0) {
          return (this._positionLocked = $), this;
        }
        setOrigin($) {
          return (this._origin = $), this;
        }
        withDefaultOffsetX($) {
          return (this._offsetX = $), this;
        }
        withDefaultOffsetY($) {
          return (this._offsetY = $), this;
        }
        withTransformOriginOn($) {
          return (this._transformOriginSelector = $), this;
        }
        _getOriginPoint($, J, Ae) {
          let He, ve;
          if ('center' == Ae.originX) He = $.left + $.width / 2;
          else {
            const be = this._isRtl() ? $.right : $.left,
              j = this._isRtl() ? $.left : $.right;
            He = 'start' == Ae.originX ? be : j;
          }
          return (
            J.left < 0 && (He -= J.left),
            (ve =
              'center' == Ae.originY
                ? $.top + $.height / 2
                : 'top' == Ae.originY
                ? $.top
                : $.bottom),
            J.top < 0 && (ve -= J.top),
            { x: He, y: ve }
          );
        }
        _getOverlayPoint($, J, Ae) {
          let He, ve;
          return (
            (He =
              'center' == Ae.overlayX
                ? -J.width / 2
                : 'start' === Ae.overlayX
                ? this._isRtl()
                  ? -J.width
                  : 0
                : this._isRtl()
                ? 0
                : -J.width),
            (ve =
              'center' == Ae.overlayY
                ? -J.height / 2
                : 'top' == Ae.overlayY
                ? 0
                : -J.height),
            { x: $.x + He, y: $.y + ve }
          );
        }
        _getOverlayFit($, J, Ae, He) {
          const ve = je(J);
          let { x: be, y: j } = $,
            ke = this._getOffset(He, 'x'),
            de = this._getOffset(He, 'y');
          ke && (be += ke), de && (j += de);
          let et = 0 - j,
            Mt = j + ve.height - Ae.height,
            Rt = this._subtractOverflows(
              ve.width,
              0 - be,
              be + ve.width - Ae.width,
            ),
            Cn = this._subtractOverflows(ve.height, et, Mt),
            Oe = Rt * Cn;
          return {
            visibleArea: Oe,
            isCompletelyWithinViewport: ve.width * ve.height === Oe,
            fitsInViewportVertically: Cn === ve.height,
            fitsInViewportHorizontally: Rt == ve.width,
          };
        }
        _canFitWithFlexibleDimensions($, J, Ae) {
          if (this._hasFlexibleDimensions) {
            const He = Ae.bottom - J.y,
              ve = Ae.right - J.x,
              be = rt(this._overlayRef.getConfig().minHeight),
              j = rt(this._overlayRef.getConfig().minWidth);
            return (
              ($.fitsInViewportVertically || (null != be && be <= He)) &&
              ($.fitsInViewportHorizontally || (null != j && j <= ve))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen($, J, Ae) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: $.x + this._previousPushAmount.x,
              y: $.y + this._previousPushAmount.y,
            };
          const He = je(J),
            ve = this._viewportRect,
            be = Math.max($.x + He.width - ve.width, 0),
            j = Math.max($.y + He.height - ve.height, 0),
            ke = Math.max(ve.top - Ae.top - $.y, 0),
            de = Math.max(ve.left - Ae.left - $.x, 0);
          let me = 0,
            fe = 0;
          return (
            (me =
              He.width <= ve.width
                ? de || -be
                : $.x < this._viewportMargin
                ? ve.left - Ae.left - $.x
                : 0),
            (fe =
              He.height <= ve.height
                ? ke || -j
                : $.y < this._viewportMargin
                ? ve.top - Ae.top - $.y
                : 0),
            (this._previousPushAmount = { x: me, y: fe }),
            { x: $.x + me, y: $.y + fe }
          );
        }
        _applyPosition($, J) {
          if (
            (this._setTransformOrigin($),
            this._setOverlayElementStyles(J, $),
            this._setBoundingBoxStyles(J, $),
            $.panelClass && this._addPanelClasses($.panelClass),
            (this._lastPosition = $),
            this._positionChanges.observers.length)
          ) {
            const Ae = this._getScrollVisibility(),
              He = new At($, Ae);
            this._positionChanges.next(He);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin($) {
          if (!this._transformOriginSelector) return;
          const J = this._boundingBox.querySelectorAll(
            this._transformOriginSelector,
          );
          let Ae,
            He = $.overlayY;
          Ae =
            'center' === $.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === $.overlayX
                ? 'right'
                : 'left'
              : 'start' === $.overlayX
              ? 'left'
              : 'right';
          for (let ve = 0; ve < J.length; ve++)
            J[ve].style.transformOrigin = `${Ae} ${He}`;
        }
        _calculateBoundingBoxRect($, J) {
          const Ae = this._viewportRect,
            He = this._isRtl();
          let ve, be, j, me, fe, et;
          if ('top' === J.overlayY)
            (be = $.y), (ve = Ae.height - be + this._viewportMargin);
          else if ('bottom' === J.overlayY)
            (j = Ae.height - $.y + 2 * this._viewportMargin),
              (ve = Ae.height - j + this._viewportMargin);
          else {
            const Mt = Math.min(Ae.bottom - $.y + Ae.top, $.y),
              Rt = this._lastBoundingBoxSize.height;
            (ve = 2 * Mt),
              (be = $.y - Mt),
              ve > Rt &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (be = $.y - Rt / 2);
          }
          if (('end' === J.overlayX && !He) || ('start' === J.overlayX && He))
            (et = Ae.width - $.x + this._viewportMargin),
              (me = $.x - this._viewportMargin);
          else if (
            ('start' === J.overlayX && !He) ||
            ('end' === J.overlayX && He)
          )
            (fe = $.x), (me = Ae.right - $.x);
          else {
            const Mt = Math.min(Ae.right - $.x + Ae.left, $.x),
              Rt = this._lastBoundingBoxSize.width;
            (me = 2 * Mt),
              (fe = $.x - Mt),
              me > Rt &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (fe = $.x - Rt / 2);
          }
          return {
            top: be,
            left: fe,
            bottom: j,
            right: et,
            width: me,
            height: ve,
          };
        }
        _setBoundingBoxStyles($, J) {
          const Ae = this._calculateBoundingBoxRect($, J);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((Ae.height = Math.min(
              Ae.height,
              this._lastBoundingBoxSize.height,
            )),
            (Ae.width = Math.min(Ae.width, this._lastBoundingBoxSize.width)));
          const He = {};
          if (this._hasExactPosition())
            (He.top = He.left = '0'),
              (He.bottom = He.right = He.maxHeight = He.maxWidth = ''),
              (He.width = He.height = '100%');
          else {
            const ve = this._overlayRef.getConfig().maxHeight,
              be = this._overlayRef.getConfig().maxWidth;
            (He.height = (0, oe.HM)(Ae.height)),
              (He.top = (0, oe.HM)(Ae.top)),
              (He.bottom = (0, oe.HM)(Ae.bottom)),
              (He.width = (0, oe.HM)(Ae.width)),
              (He.left = (0, oe.HM)(Ae.left)),
              (He.right = (0, oe.HM)(Ae.right)),
              (He.alignItems =
                'center' === J.overlayX
                  ? 'center'
                  : 'end' === J.overlayX
                  ? 'flex-end'
                  : 'flex-start'),
              (He.justifyContent =
                'center' === J.overlayY
                  ? 'center'
                  : 'bottom' === J.overlayY
                  ? 'flex-end'
                  : 'flex-start'),
              ve && (He.maxHeight = (0, oe.HM)(ve)),
              be && (He.maxWidth = (0, oe.HM)(be));
          }
          (this._lastBoundingBoxSize = Ae), Ye(this._boundingBox.style, He);
        }
        _resetBoundingBoxStyles() {
          Ye(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          Ye(this._pane.style, {
            top: '',
            left: '',
            bottom: '',
            right: '',
            position: '',
            transform: '',
          });
        }
        _setOverlayElementStyles($, J) {
          const Ae = {},
            He = this._hasExactPosition(),
            ve = this._hasFlexibleDimensions,
            be = this._overlayRef.getConfig();
          if (He) {
            const me = this._viewportRuler.getViewportScrollPosition();
            Ye(Ae, this._getExactOverlayY(J, $, me)),
              Ye(Ae, this._getExactOverlayX(J, $, me));
          } else Ae.position = 'static';
          let j = '',
            ke = this._getOffset(J, 'x'),
            de = this._getOffset(J, 'y');
          ke && (j += `translateX(${ke}px) `),
            de && (j += `translateY(${de}px)`),
            (Ae.transform = j.trim()),
            be.maxHeight &&
              (He
                ? (Ae.maxHeight = (0, oe.HM)(be.maxHeight))
                : ve && (Ae.maxHeight = '')),
            be.maxWidth &&
              (He
                ? (Ae.maxWidth = (0, oe.HM)(be.maxWidth))
                : ve && (Ae.maxWidth = '')),
            Ye(this._pane.style, Ae);
        }
        _getExactOverlayY($, J, Ae) {
          let He = { top: '', bottom: '' },
            ve = this._getOverlayPoint(J, this._overlayRect, $);
          return (
            this._isPushed &&
              (ve = this._pushOverlayOnScreen(ve, this._overlayRect, Ae)),
            'bottom' === $.overlayY
              ? (He.bottom =
                  this._document.documentElement.clientHeight -
                  (ve.y + this._overlayRect.height) +
                  'px')
              : (He.top = (0, oe.HM)(ve.y)),
            He
          );
        }
        _getExactOverlayX($, J, Ae) {
          let be,
            He = { left: '', right: '' },
            ve = this._getOverlayPoint(J, this._overlayRect, $);
          return (
            this._isPushed &&
              (ve = this._pushOverlayOnScreen(ve, this._overlayRect, Ae)),
            (be = this._isRtl()
              ? 'end' === $.overlayX
                ? 'left'
                : 'right'
              : 'end' === $.overlayX
              ? 'right'
              : 'left'),
            'right' === be
              ? (He.right =
                  this._document.documentElement.clientWidth -
                  (ve.x + this._overlayRect.width) +
                  'px')
              : (He.left = (0, oe.HM)(ve.x)),
            He
          );
        }
        _getScrollVisibility() {
          const $ = this._getOriginRect(),
            J = this._pane.getBoundingClientRect(),
            Ae = this._scrollables.map(He =>
              He.getElementRef().nativeElement.getBoundingClientRect(),
            );
          return {
            isOriginClipped: ne($, Ae),
            isOriginOutsideView: xe($, Ae),
            isOverlayClipped: ne(J, Ae),
            isOverlayOutsideView: xe(J, Ae),
          };
        }
        _subtractOverflows($, ...J) {
          return J.reduce((Ae, He) => Ae - Math.max(He, 0), $);
        }
        _getNarrowedViewportRect() {
          const $ = this._document.documentElement.clientWidth,
            J = this._document.documentElement.clientHeight,
            Ae = this._viewportRuler.getViewportScrollPosition();
          return {
            top: Ae.top + this._viewportMargin,
            left: Ae.left + this._viewportMargin,
            right: Ae.left + $ - this._viewportMargin,
            bottom: Ae.top + J - this._viewportMargin,
            width: $ - 2 * this._viewportMargin,
            height: J - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset($, J) {
          return 'x' === J
            ? null == $.offsetX
              ? this._offsetX
              : $.offsetX
            : null == $.offsetY
            ? this._offsetY
            : $.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses($) {
          this._pane &&
            (0, oe.Eq)($).forEach(J => {
              '' !== J &&
                -1 === this._appliedPanelClasses.indexOf(J) &&
                (this._appliedPanelClasses.push(J),
                this._pane.classList.add(J));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach($ => {
              this._pane.classList.remove($);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const $ = this._origin;
          if ($ instanceof L.SBq)
            return $.nativeElement.getBoundingClientRect();
          if ($ instanceof Element) return $.getBoundingClientRect();
          const J = $.width || 0,
            Ae = $.height || 0;
          return {
            top: $.y,
            bottom: $.y + Ae,
            left: $.x,
            right: $.x + J,
            height: Ae,
            width: J,
          };
        }
      }
      function Ye(Xe, $) {
        for (let J in $) $.hasOwnProperty(J) && (Xe[J] = $[J]);
        return Xe;
      }
      function rt(Xe) {
        if ('number' != typeof Xe && null != Xe) {
          const [$, J] = Xe.split(Pe);
          return J && 'px' !== J ? null : parseFloat($);
        }
        return Xe || null;
      }
      function je(Xe) {
        return {
          top: Math.floor(Xe.top),
          right: Math.floor(Xe.right),
          bottom: Math.floor(Xe.bottom),
          left: Math.floor(Xe.left),
          width: Math.floor(Xe.width),
          height: Math.floor(Xe.height),
        };
      }
      const Lt = 'cdk-global-overlay-wrapper';
      class Mn {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._alignItems = ''),
            (this._xPosition = ''),
            (this._xOffset = ''),
            (this._width = ''),
            (this._height = ''),
            (this._isDisposed = !1);
        }
        attach($) {
          const J = $.getConfig();
          (this._overlayRef = $),
            this._width && !J.width && $.updateSize({ width: this._width }),
            this._height && !J.height && $.updateSize({ height: this._height }),
            $.hostElement.classList.add(Lt),
            (this._isDisposed = !1);
        }
        top($ = '') {
          return (
            (this._bottomOffset = ''),
            (this._topOffset = $),
            (this._alignItems = 'flex-start'),
            this
          );
        }
        left($ = '') {
          return (this._xOffset = $), (this._xPosition = 'left'), this;
        }
        bottom($ = '') {
          return (
            (this._topOffset = ''),
            (this._bottomOffset = $),
            (this._alignItems = 'flex-end'),
            this
          );
        }
        right($ = '') {
          return (this._xOffset = $), (this._xPosition = 'right'), this;
        }
        start($ = '') {
          return (this._xOffset = $), (this._xPosition = 'start'), this;
        }
        end($ = '') {
          return (this._xOffset = $), (this._xPosition = 'end'), this;
        }
        width($ = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: $ })
              : (this._width = $),
            this
          );
        }
        height($ = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: $ })
              : (this._height = $),
            this
          );
        }
        centerHorizontally($ = '') {
          return this.left($), (this._xPosition = 'center'), this;
        }
        centerVertically($ = '') {
          return this.top($), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const $ = this._overlayRef.overlayElement.style,
            J = this._overlayRef.hostElement.style,
            Ae = this._overlayRef.getConfig(),
            { width: He, height: ve, maxWidth: be, maxHeight: j } = Ae,
            ke = !(
              ('100%' !== He && '100vw' !== He) ||
              (be && '100%' !== be && '100vw' !== be)
            ),
            de = !(
              ('100%' !== ve && '100vh' !== ve) ||
              (j && '100%' !== j && '100vh' !== j)
            ),
            me = this._xPosition,
            fe = this._xOffset,
            et = 'rtl' === this._overlayRef.getConfig().direction;
          let Mt = '',
            Rt = '',
            Cn = '';
          ke
            ? (Cn = 'flex-start')
            : 'center' === me
            ? ((Cn = 'center'), et ? (Rt = fe) : (Mt = fe))
            : et
            ? 'left' === me || 'end' === me
              ? ((Cn = 'flex-end'), (Mt = fe))
              : ('right' === me || 'start' === me) &&
                ((Cn = 'flex-start'), (Rt = fe))
            : 'left' === me || 'start' === me
            ? ((Cn = 'flex-start'), (Mt = fe))
            : ('right' === me || 'end' === me) &&
              ((Cn = 'flex-end'), (Rt = fe)),
            ($.position = this._cssPosition),
            ($.marginLeft = ke ? '0' : Mt),
            ($.marginTop = de ? '0' : this._topOffset),
            ($.marginBottom = this._bottomOffset),
            ($.marginRight = ke ? '0' : Rt),
            (J.justifyContent = Cn),
            (J.alignItems = de ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const $ = this._overlayRef.overlayElement.style,
            J = this._overlayRef.hostElement,
            Ae = J.style;
          J.classList.remove(Lt),
            (Ae.justifyContent =
              Ae.alignItems =
              $.marginTop =
              $.marginBottom =
              $.marginLeft =
              $.marginRight =
              $.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let un = (() => {
          class Xe {
            constructor(J, Ae, He, ve) {
              (this._viewportRuler = J),
                (this._document = Ae),
                (this._platform = He),
                (this._overlayContainer = ve);
            }
            global() {
              return new Mn();
            }
            flexibleConnectedTo(J) {
              return new a(
                J,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer,
              );
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(
                L.LFG(s.rL),
                L.LFG(x.K0),
                L.LFG(ee.t4),
                L.LFG(Me),
              );
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })(),
        an = 0,
        Dn = (() => {
          class Xe {
            constructor(J, Ae, He, ve, be, j, ke, de, me, fe, et, Mt) {
              (this.scrollStrategies = J),
                (this._overlayContainer = Ae),
                (this._componentFactoryResolver = He),
                (this._positionBuilder = ve),
                (this._keyboardDispatcher = be),
                (this._injector = j),
                (this._ngZone = ke),
                (this._document = de),
                (this._directionality = me),
                (this._location = fe),
                (this._outsideClickDispatcher = et),
                (this._animationsModuleType = Mt);
            }
            create(J) {
              const Ae = this._createHostElement(),
                He = this._createPaneElement(Ae),
                ve = this._createPortalOutlet(He),
                be = new Se(J);
              return (
                (be.direction = be.direction || this._directionality.value),
                new Ue(
                  ve,
                  Ae,
                  He,
                  be,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  'NoopAnimations' === this._animationsModuleType,
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(J) {
              const Ae = this._document.createElement('div');
              return (
                (Ae.id = 'cdk-overlay-' + an++),
                Ae.classList.add('cdk-overlay-pane'),
                J.appendChild(Ae),
                Ae
              );
            }
            _createHostElement() {
              const J = this._document.createElement('div');
              return (
                this._overlayContainer.getContainerElement().appendChild(J), J
              );
            }
            _createPortalOutlet(J) {
              return (
                this._appRef || (this._appRef = this._injector.get(L.z2F)),
                new pe.u0(
                  J,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document,
                )
              );
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(
                L.LFG(X),
                L.LFG(Me),
                L.LFG(L._Vd),
                L.LFG(un),
                L.LFG(Ge),
                L.LFG(L.zs3),
                L.LFG(L.R0b),
                L.LFG(x.K0),
                L.LFG(ae.Is),
                L.LFG(x.Ye),
                L.LFG($e),
                L.LFG(L.QbO, 8),
              );
            }),
            (Xe.ɵprov = L.Yz7({
              token: Xe,
              factory: Xe.ɵfac,
              providedIn: 'root',
            })),
            Xe
          );
        })();
      const Kt = [
          {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top',
          },
          {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'top',
            overlayX: 'end',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'bottom',
            overlayX: 'end',
            overlayY: 'top',
          },
        ],
        mn = new L.OlP('cdk-connected-overlay-scroll-strategy');
      let wn = (() => {
          class Xe {
            constructor(J) {
              this.elementRef = J;
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(L.Y36(L.SBq));
            }),
            (Xe.ɵdir = L.lG2({
              type: Xe,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
              standalone: !0,
            })),
            Xe
          );
        })(),
        Dt = (() => {
          class Xe {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(J) {
              (this._offsetX = J),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(J) {
              (this._offsetY = J),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(J) {
              this._hasBackdrop = (0, oe.Ig)(J);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(J) {
              this._lockPosition = (0, oe.Ig)(J);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(J) {
              this._flexibleDimensions = (0, oe.Ig)(J);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(J) {
              this._growAfterOpen = (0, oe.Ig)(J);
            }
            get push() {
              return this._push;
            }
            set push(J) {
              this._push = (0, oe.Ig)(J);
            }
            constructor(J, Ae, He, ve, be) {
              (this._overlay = J),
                (this._dir = be),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Be.w0.EMPTY),
                (this._attachSubscription = Be.w0.EMPTY),
                (this._detachSubscription = Be.w0.EMPTY),
                (this._positionSubscription = Be.w0.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new L.vpe()),
                (this.positionChange = new L.vpe()),
                (this.attach = new L.vpe()),
                (this.detach = new L.vpe()),
                (this.overlayKeydown = new L.vpe()),
                (this.overlayOutsideClick = new L.vpe()),
                (this._templatePortal = new pe.UE(Ae, He)),
                (this._scrollStrategyFactory = ve),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(J) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                J.origin && this.open && this._position.apply()),
                J.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = Kt);
              const J = (this._overlayRef = this._overlay.create(
                this._buildConfig(),
              ));
              (this._attachSubscription = J.attachments().subscribe(() =>
                this.attach.emit(),
              )),
                (this._detachSubscription = J.detachments().subscribe(() =>
                  this.detach.emit(),
                )),
                J.keydownEvents().subscribe(Ae => {
                  this.overlayKeydown.next(Ae),
                    Ae.keyCode === st.hY &&
                      !this.disableClose &&
                      !(0, st.Vb)(Ae) &&
                      (Ae.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe(Ae => {
                  this.overlayOutsideClick.next(Ae);
                });
            }
            _buildConfig() {
              const J = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                Ae = new Se({
                  direction: this._dir,
                  positionStrategy: J,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (Ae.width = this.width),
                (this.height || 0 === this.height) && (Ae.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (Ae.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (Ae.minHeight = this.minHeight),
                this.backdropClass && (Ae.backdropClass = this.backdropClass),
                this.panelClass && (Ae.panelClass = this.panelClass),
                Ae
              );
            }
            _updatePositionStrategy(J) {
              const Ae = this.positions.map(He => ({
                originX: He.originX,
                originY: He.originY,
                overlayX: He.overlayX,
                overlayY: He.overlayY,
                offsetX: He.offsetX || this.offsetX,
                offsetY: He.offsetY || this.offsetY,
                panelClass: He.panelClass || void 0,
              }));
              return J.setOrigin(
                this._getFlexibleConnectedPositionStrategyOrigin(),
              )
                .withPositions(Ae)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const J = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin(),
                );
              return this._updatePositionStrategy(J), J;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof wn
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe(J => {
                        this.backdropClick.emit(J);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (0, le.o)(() => this.positionChange.observers.length > 0),
                    )
                    .subscribe(J => {
                      this.positionChange.emit(J),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (Xe.ɵfac = function (J) {
              return new (J || Xe)(
                L.Y36(Dn),
                L.Y36(L.Rgc),
                L.Y36(L.s_b),
                L.Y36(mn),
                L.Y36(ae.Is, 8),
              );
            }),
            (Xe.ɵdir = L.lG2({
              type: Xe,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                positionStrategy: [
                  'cdkConnectedOverlayPositionStrategy',
                  'positionStrategy',
                ],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: [
                  'cdkConnectedOverlayBackdropClass',
                  'backdropClass',
                ],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                viewportMargin: [
                  'cdkConnectedOverlayViewportMargin',
                  'viewportMargin',
                ],
                scrollStrategy: [
                  'cdkConnectedOverlayScrollStrategy',
                  'scrollStrategy',
                ],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: [
                  'cdkConnectedOverlayDisableClose',
                  'disableClose',
                ],
                transformOriginSelector: [
                  'cdkConnectedOverlayTransformOriginOn',
                  'transformOriginSelector',
                ],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: [
                  'cdkConnectedOverlayLockPosition',
                  'lockPosition',
                ],
                flexibleDimensions: [
                  'cdkConnectedOverlayFlexibleDimensions',
                  'flexibleDimensions',
                ],
                growAfterOpen: [
                  'cdkConnectedOverlayGrowAfterOpen',
                  'growAfterOpen',
                ],
                push: ['cdkConnectedOverlayPush', 'push'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              standalone: !0,
              features: [L.TTD],
            })),
            Xe
          );
        })();
      const xt = {
        provide: mn,
        deps: [Dn],
        useFactory: function Jt(Xe) {
          return () => Xe.scrollStrategies.reposition();
        },
      };
      let ht = (() => {
        class Xe {}
        return (
          (Xe.ɵfac = function (J) {
            return new (J || Xe)();
          }),
          (Xe.ɵmod = L.oAB({ type: Xe })),
          (Xe.ɵinj = L.cJS({
            providers: [Dn, xt],
            imports: [ae.vT, pe.eL, s.Cl, s.Cl],
          })),
          Xe
        );
      })();
    },
    3353: (Ot, Ne, C) => {
      C.d(Ne, {
        Mq: () => ze,
        Oy: () => xe,
        _i: () => st,
        ht: () => at,
        i$: () => pe,
        kV: () => pt,
        qK: () => ue,
        sA: () => vt,
        t4: () => oe,
      });
      var s = C(4650),
        x = C(6895);
      let L;
      try {
        L = typeof Intl < 'u' && Intl.v8BreakIterator;
      } catch {
        L = !1;
      }
      let he,
        oe = (() => {
          class ne {
            constructor(X) {
              (this._platformId = X),
                (this.isBrowser = this._platformId
                  ? (0, x.NF)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !L) &&
                  typeof CSS < 'u' &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !('MSStream' in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (ne.ɵfac = function (X) {
              return new (X || ne)(s.LFG(s.Lbi));
            }),
            (ne.ɵprov = s.Yz7({
              token: ne,
              factory: ne.ɵfac,
              providedIn: 'root',
            })),
            ne
          );
        })();
      const ge = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function ue() {
        if (he) return he;
        if ('object' != typeof document || !document)
          return (he = new Set(ge)), he;
        let ne = document.createElement('input');
        return (
          (he = new Set(
            ge.filter(te => (ne.setAttribute('type', te), ne.type === te)),
          )),
          he
        );
      }
      let le, se, Be, gt;
      function pe(ne) {
        return (function ae() {
          if (null == le && typeof window < 'u')
            try {
              window.addEventListener(
                'test',
                null,
                Object.defineProperty({}, 'passive', { get: () => (le = !0) }),
              );
            } finally {
              le = le || !1;
            }
          return le;
        })()
          ? ne
          : !!ne.capture;
      }
      function ze() {
        if (null == Be) {
          if (
            'object' != typeof document ||
            !document ||
            'function' != typeof Element ||
            !Element
          )
            return (Be = !1), Be;
          if ('scrollBehavior' in document.documentElement.style) Be = !0;
          else {
            const ne = Element.prototype.scrollTo;
            Be = !!ne && !/\{\s*\[native code\]\s*\}/.test(ne.toString());
          }
        }
        return Be;
      }
      function st() {
        if ('object' != typeof document || !document) return 0;
        if (null == se) {
          const ne = document.createElement('div'),
            te = ne.style;
          (ne.dir = 'rtl'),
            (te.width = '1px'),
            (te.overflow = 'auto'),
            (te.visibility = 'hidden'),
            (te.pointerEvents = 'none'),
            (te.position = 'absolute');
          const X = document.createElement('div'),
            Se = X.style;
          (Se.width = '2px'),
            (Se.height = '1px'),
            ne.appendChild(X),
            document.body.appendChild(ne),
            (se = 0),
            0 === ne.scrollLeft &&
              ((ne.scrollLeft = 1), (se = 0 === ne.scrollLeft ? 1 : 2)),
            ne.remove();
        }
        return se;
      }
      function pt(ne) {
        if (
          (function Le() {
            if (null == gt) {
              const ne = typeof document < 'u' ? document.head : null;
              gt = !(!ne || (!ne.createShadowRoot && !ne.attachShadow));
            }
            return gt;
          })()
        ) {
          const te = ne.getRootNode ? ne.getRootNode() : null;
          if (typeof ShadowRoot < 'u' && ShadowRoot && te instanceof ShadowRoot)
            return te;
        }
        return null;
      }
      function at() {
        let ne =
          typeof document < 'u' && document ? document.activeElement : null;
        for (; ne && ne.shadowRoot; ) {
          const te = ne.shadowRoot.activeElement;
          if (te === ne) break;
          ne = te;
        }
        return ne;
      }
      function vt(ne) {
        return ne.composedPath ? ne.composedPath()[0] : ne.target;
      }
      function xe() {
        return (
          (typeof __karma__ < 'u' && !!__karma__) ||
          (typeof jasmine < 'u' && !!jasmine) ||
          (typeof jest < 'u' && !!jest) ||
          (typeof Mocha < 'u' && !!Mocha)
        );
      }
    },
    4080: (Ot, Ne, C) => {
      C.d(Ne, {
        C5: () => ae,
        Pl: () => at,
        UE: () => pe,
        eL: () => xe,
        en: () => Be,
        u0: () => st,
      });
      var s = C(4650),
        x = C(6895);
      class le {
        attach(X) {
          return (this._attachedHost = X), X.attach(this);
        }
        detach() {
          let X = this._attachedHost;
          null != X && ((this._attachedHost = null), X.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(X) {
          this._attachedHost = X;
        }
      }
      class ae extends le {
        constructor(X, Se, tt, re, At) {
          super(),
            (this.component = X),
            (this.viewContainerRef = Se),
            (this.injector = tt),
            (this.componentFactoryResolver = re),
            (this.projectableNodes = At);
        }
      }
      class pe extends le {
        constructor(X, Se, tt, re) {
          super(),
            (this.templateRef = X),
            (this.viewContainerRef = Se),
            (this.context = tt),
            (this.injector = re);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(X, Se = this.context) {
          return (this.context = Se), super.attach(X);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class se extends le {
        constructor(X) {
          super(), (this.element = X instanceof s.SBq ? X.nativeElement : X);
        }
      }
      class Be {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(X) {
          return X instanceof ae
            ? ((this._attachedPortal = X), this.attachComponentPortal(X))
            : X instanceof pe
            ? ((this._attachedPortal = X), this.attachTemplatePortal(X))
            : this.attachDomPortal && X instanceof se
            ? ((this._attachedPortal = X), this.attachDomPortal(X))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(X) {
          this._disposeFn = X;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class st extends Be {
        constructor(X, Se, tt, re, At) {
          super(),
            (this.outletElement = X),
            (this._componentFactoryResolver = Se),
            (this._appRef = tt),
            (this._defaultInjector = re),
            (this.attachDomPortal = mt => {
              const Yt = mt.element,
                Et = this._document.createComment('dom-portal');
              Yt.parentNode.insertBefore(Et, Yt),
                this.outletElement.appendChild(Yt),
                (this._attachedPortal = mt),
                super.setDisposeFn(() => {
                  Et.parentNode && Et.parentNode.replaceChild(Yt, Et);
                });
            }),
            (this._document = At);
        }
        attachComponentPortal(X) {
          const tt = (
            X.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(X.component);
          let re;
          return (
            X.viewContainerRef
              ? ((re = X.viewContainerRef.createComponent(
                  tt,
                  X.viewContainerRef.length,
                  X.injector || X.viewContainerRef.injector,
                  X.projectableNodes || void 0,
                )),
                this.setDisposeFn(() => re.destroy()))
              : ((re = tt.create(
                  X.injector || this._defaultInjector || s.zs3.NULL,
                )),
                this._appRef.attachView(re.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(re.hostView),
                    re.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(re)),
            (this._attachedPortal = X),
            re
          );
        }
        attachTemplatePortal(X) {
          let Se = X.viewContainerRef,
            tt = Se.createEmbeddedView(X.templateRef, X.context, {
              injector: X.injector,
            });
          return (
            tt.rootNodes.forEach(re => this.outletElement.appendChild(re)),
            tt.detectChanges(),
            this.setDisposeFn(() => {
              let re = Se.indexOf(tt);
              -1 !== re && Se.remove(re);
            }),
            (this._attachedPortal = X),
            tt
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(X) {
          return X.hostView.rootNodes[0];
        }
      }
      let at = (() => {
          class te extends Be {
            constructor(Se, tt, re) {
              super(),
                (this._componentFactoryResolver = Se),
                (this._viewContainerRef = tt),
                (this._isInitialized = !1),
                (this.attached = new s.vpe()),
                (this.attachDomPortal = At => {
                  const mt = At.element,
                    Yt = this._document.createComment('dom-portal');
                  At.setAttachedHost(this),
                    mt.parentNode.insertBefore(Yt, mt),
                    this._getRootNode().appendChild(mt),
                    (this._attachedPortal = At),
                    super.setDisposeFn(() => {
                      Yt.parentNode && Yt.parentNode.replaceChild(mt, Yt);
                    });
                }),
                (this._document = re);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(Se) {
              (this.hasAttached() && !Se && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                Se && super.attach(Se),
                (this._attachedPortal = Se || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(Se) {
              Se.setAttachedHost(this);
              const tt =
                  null != Se.viewContainerRef
                    ? Se.viewContainerRef
                    : this._viewContainerRef,
                At = (
                  Se.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(Se.component),
                mt = tt.createComponent(
                  At,
                  tt.length,
                  Se.injector || tt.injector,
                  Se.projectableNodes || void 0,
                );
              return (
                tt !== this._viewContainerRef &&
                  this._getRootNode().appendChild(mt.hostView.rootNodes[0]),
                super.setDisposeFn(() => mt.destroy()),
                (this._attachedPortal = Se),
                (this._attachedRef = mt),
                this.attached.emit(mt),
                mt
              );
            }
            attachTemplatePortal(Se) {
              Se.setAttachedHost(this);
              const tt = this._viewContainerRef.createEmbeddedView(
                Se.templateRef,
                Se.context,
                { injector: Se.injector },
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = Se),
                (this._attachedRef = tt),
                this.attached.emit(tt),
                tt
              );
            }
            _getRootNode() {
              const Se = this._viewContainerRef.element.nativeElement;
              return Se.nodeType === Se.ELEMENT_NODE ? Se : Se.parentNode;
            }
          }
          return (
            (te.ɵfac = function (Se) {
              return new (Se || te)(s.Y36(s._Vd), s.Y36(s.s_b), s.Y36(x.K0));
            }),
            (te.ɵdir = s.lG2({
              type: te,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [s.qOj],
            })),
            te
          );
        })(),
        xe = (() => {
          class te {}
          return (
            (te.ɵfac = function (Se) {
              return new (Se || te)();
            }),
            (te.ɵmod = s.oAB({ type: te })),
            (te.ɵinj = s.cJS({})),
            te
          );
        })();
    },
    44: (Ot, Ne, C) => {
      C.d(Ne, { ZD: () => Ae, mF: () => an, Cl: () => He, rL: () => mn });
      var s = C(1281),
        x = C(4650),
        L = C(7579),
        oe = C(9646),
        ee = C(9751),
        he = C(8421),
        ge = C(5577),
        ue = C(1144),
        le = C(576),
        ae = C(3268);
      const pe = ['addListener', 'removeListener'],
        se = ['addEventListener', 'removeEventListener'],
        Be = ['on', 'off'];
      function ze(ve, be, j, ke) {
        if (((0, le.m)(j) && ((ke = j), (j = void 0)), ke))
          return ze(ve, be, j).pipe((0, ae.Z)(ke));
        const [de, me] = (function pt(ve) {
          return (
            (0, le.m)(ve.addEventListener) && (0, le.m)(ve.removeEventListener)
          );
        })(ve)
          ? se.map(fe => et => ve[fe](be, et, j))
          : (function gt(ve) {
              return (0, le.m)(ve.addListener) && (0, le.m)(ve.removeListener);
            })(ve)
          ? pe.map(st(ve, be))
          : (function Le(ve) {
              return (0, le.m)(ve.on) && (0, le.m)(ve.off);
            })(ve)
          ? Be.map(st(ve, be))
          : [];
        if (!de && (0, ue.z)(ve))
          return (0, ge.z)(fe => ze(fe, be, j))((0, he.Xf)(ve));
        if (!de) throw new TypeError('Invalid event target');
        return new ee.y(fe => {
          const et = (...Mt) => fe.next(1 < Mt.length ? Mt : Mt[0]);
          return de(et), () => me(et);
        });
      }
      function st(ve, be) {
        return j => ke => ve[j](be, ke);
      }
      var at = C(4408),
        vt = C(727);
      const xe = {
        schedule(ve) {
          let be = requestAnimationFrame,
            j = cancelAnimationFrame;
          const { delegate: ke } = xe;
          ke &&
            ((be = ke.requestAnimationFrame), (j = ke.cancelAnimationFrame));
          const de = be(me => {
            (j = void 0), ve(me);
          });
          return new vt.w0(() => j?.(de));
        },
        requestAnimationFrame(...ve) {
          const { delegate: be } = xe;
          return (be?.requestAnimationFrame || requestAnimationFrame)(...ve);
        },
        cancelAnimationFrame(...ve) {
          const { delegate: be } = xe;
          return (be?.cancelAnimationFrame || cancelAnimationFrame)(...ve);
        },
        delegate: void 0,
      };
      var te = C(640);
      const Se = new (class X extends te.v {
        flush(be) {
          this._active = !0;
          const j = this._scheduled;
          this._scheduled = void 0;
          const { actions: ke } = this;
          let de;
          be = be || ke.shift();
          do {
            if ((de = be.execute(be.state, be.delay))) break;
          } while ((be = ke[0]) && be.id === j && ke.shift());
          if (((this._active = !1), de)) {
            for (; (be = ke[0]) && be.id === j && ke.shift(); )
              be.unsubscribe();
            throw de;
          }
        }
      })(
        class ne extends at.o {
          constructor(be, j) {
            super(be, j), (this.scheduler = be), (this.work = j);
          }
          requestAsyncId(be, j, ke = 0) {
            return null !== ke && ke > 0
              ? super.requestAsyncId(be, j, ke)
              : (be.actions.push(this),
                be._scheduled ||
                  (be._scheduled = xe.requestAnimationFrame(() =>
                    be.flush(void 0),
                  )));
          }
          recycleAsyncId(be, j, ke = 0) {
            var de;
            if (null != ke ? ke > 0 : this.delay > 0)
              return super.recycleAsyncId(be, j, ke);
            const { actions: me } = be;
            null != j &&
              (null === (de = me[me.length - 1]) || void 0 === de
                ? void 0
                : de.id) !== j &&
              (xe.cancelAnimationFrame(j), (be._scheduled = void 0));
          }
        },
      );
      var re = C(3101),
        At = C(4986),
        mt = C(4482),
        Yt = C(5403),
        Ge = C(5963);
      function $e(ve, be = At.z) {
        return (function Et(ve) {
          return (0, mt.e)((be, j) => {
            let ke = !1,
              de = null,
              me = null,
              fe = !1;
            const et = () => {
                if ((me?.unsubscribe(), (me = null), ke)) {
                  ke = !1;
                  const Rt = de;
                  (de = null), j.next(Rt);
                }
                fe && j.complete();
              },
              Mt = () => {
                (me = null), fe && j.complete();
              };
            be.subscribe(
              (0, Yt.x)(
                j,
                Rt => {
                  (ke = !0),
                    (de = Rt),
                    me ||
                      (0, he.Xf)(ve(Rt)).subscribe((me = (0, Yt.x)(j, et, Mt)));
                },
                () => {
                  (fe = !0), (!ke || !me || me.closed) && j.complete();
                },
              ),
            );
          });
        })(() => (0, Ge.H)(ve, be));
      }
      var Me = C(9300),
        Ue = C(2722),
        De = C(8675),
        Pe = C(3353),
        a = C(6895),
        Ye = C(445);
      const rt = ['contentWrapper'],
        je = ['*'],
        ut = new x.OlP('VIRTUAL_SCROLL_STRATEGY');
      let an = (() => {
          class ve {
            constructor(j, ke, de) {
              (this._ngZone = j),
                (this._platform = ke),
                (this._scrolled = new L.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = de);
            }
            register(j) {
              this.scrollContainers.has(j) ||
                this.scrollContainers.set(
                  j,
                  j.elementScrolled().subscribe(() => this._scrolled.next(j)),
                );
            }
            deregister(j) {
              const ke = this.scrollContainers.get(j);
              ke && (ke.unsubscribe(), this.scrollContainers.delete(j));
            }
            scrolled(j = 20) {
              return this._platform.isBrowser
                ? new ee.y(ke => {
                    this._globalSubscription || this._addGlobalListener();
                    const de =
                      j > 0
                        ? this._scrolled.pipe($e(j)).subscribe(ke)
                        : this._scrolled.subscribe(ke);
                    return (
                      this._scrolledCount++,
                      () => {
                        de.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, oe.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((j, ke) => this.deregister(ke)),
                this._scrolled.complete();
            }
            ancestorScrolled(j, ke) {
              const de = this.getAncestorScrollContainers(j);
              return this.scrolled(ke).pipe(
                (0, Me.h)(me => !me || de.indexOf(me) > -1),
              );
            }
            getAncestorScrollContainers(j) {
              const ke = [];
              return (
                this.scrollContainers.forEach((de, me) => {
                  this._scrollableContainsElement(me, j) && ke.push(me);
                }),
                ke
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(j, ke) {
              let de = (0, s.fI)(ke),
                me = j.getElementRef().nativeElement;
              do {
                if (de == me) return !0;
              } while ((de = de.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                ze(this._getWindow().document, 'scroll').subscribe(() =>
                  this._scrolled.next(),
                ),
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)(x.LFG(x.R0b), x.LFG(Pe.t4), x.LFG(a.K0, 8));
            }),
            (ve.ɵprov = x.Yz7({
              token: ve,
              factory: ve.ɵfac,
              providedIn: 'root',
            })),
            ve
          );
        })(),
        Dn = (() => {
          class ve {
            constructor(j, ke, de, me) {
              (this.elementRef = j),
                (this.scrollDispatcher = ke),
                (this.ngZone = de),
                (this.dir = me),
                (this._destroyed = new L.x()),
                (this._elementScrolled = new ee.y(fe =>
                  this.ngZone.runOutsideAngular(() =>
                    ze(this.elementRef.nativeElement, 'scroll')
                      .pipe((0, Ue.R)(this._destroyed))
                      .subscribe(fe),
                  ),
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(j) {
              const ke = this.elementRef.nativeElement,
                de = this.dir && 'rtl' == this.dir.value;
              null == j.left && (j.left = de ? j.end : j.start),
                null == j.right && (j.right = de ? j.start : j.end),
                null != j.bottom &&
                  (j.top = ke.scrollHeight - ke.clientHeight - j.bottom),
                de && 0 != (0, Pe._i)()
                  ? (null != j.left &&
                      (j.right = ke.scrollWidth - ke.clientWidth - j.left),
                    2 == (0, Pe._i)()
                      ? (j.left = j.right)
                      : 1 == (0, Pe._i)() &&
                        (j.left = j.right ? -j.right : j.right))
                  : null != j.right &&
                    (j.left = ke.scrollWidth - ke.clientWidth - j.right),
                this._applyScrollToOptions(j);
            }
            _applyScrollToOptions(j) {
              const ke = this.elementRef.nativeElement;
              (0, Pe.Mq)()
                ? ke.scrollTo(j)
                : (null != j.top && (ke.scrollTop = j.top),
                  null != j.left && (ke.scrollLeft = j.left));
            }
            measureScrollOffset(j) {
              const ke = 'left',
                me = this.elementRef.nativeElement;
              if ('top' == j) return me.scrollTop;
              if ('bottom' == j)
                return me.scrollHeight - me.clientHeight - me.scrollTop;
              const fe = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == j
                  ? (j = fe ? 'right' : ke)
                  : 'end' == j && (j = fe ? ke : 'right'),
                fe && 2 == (0, Pe._i)()
                  ? j == ke
                    ? me.scrollWidth - me.clientWidth - me.scrollLeft
                    : me.scrollLeft
                  : fe && 1 == (0, Pe._i)()
                  ? j == ke
                    ? me.scrollLeft + me.scrollWidth - me.clientWidth
                    : -me.scrollLeft
                  : j == ke
                  ? me.scrollLeft
                  : me.scrollWidth - me.clientWidth - me.scrollLeft
              );
            }
          }
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)(
                x.Y36(x.SBq),
                x.Y36(an),
                x.Y36(x.R0b),
                x.Y36(Ye.Is, 8),
              );
            }),
            (ve.ɵdir = x.lG2({
              type: ve,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
              standalone: !0,
            })),
            ve
          );
        })(),
        mn = (() => {
          class ve {
            constructor(j, ke, de) {
              (this._platform = j),
                (this._change = new L.x()),
                (this._changeListener = me => {
                  this._change.next(me);
                }),
                (this._document = de),
                ke.runOutsideAngular(() => {
                  if (j.isBrowser) {
                    const me = this._getWindow();
                    me.addEventListener('resize', this._changeListener),
                      me.addEventListener(
                        'orientationchange',
                        this._changeListener,
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const j = this._getWindow();
                j.removeEventListener('resize', this._changeListener),
                  j.removeEventListener(
                    'orientationchange',
                    this._changeListener,
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const j = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), j;
            }
            getViewportRect() {
              const j = this.getViewportScrollPosition(),
                { width: ke, height: de } = this.getViewportSize();
              return {
                top: j.top,
                left: j.left,
                bottom: j.top + de,
                right: j.left + ke,
                height: de,
                width: ke,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const j = this._document,
                ke = this._getWindow(),
                de = j.documentElement,
                me = de.getBoundingClientRect();
              return {
                top:
                  -me.top ||
                  j.body.scrollTop ||
                  ke.scrollY ||
                  de.scrollTop ||
                  0,
                left:
                  -me.left ||
                  j.body.scrollLeft ||
                  ke.scrollX ||
                  de.scrollLeft ||
                  0,
              };
            }
            change(j = 20) {
              return j > 0 ? this._change.pipe($e(j)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const j = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: j.innerWidth, height: j.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)(x.LFG(Pe.t4), x.LFG(x.R0b), x.LFG(a.K0, 8));
            }),
            (ve.ɵprov = x.Yz7({
              token: ve,
              factory: ve.ɵfac,
              providedIn: 'root',
            })),
            ve
          );
        })();
      const wn = new x.OlP('VIRTUAL_SCROLLABLE');
      let Dt = (() => {
        class ve extends Dn {
          constructor(j, ke, de, me) {
            super(j, ke, de, me);
          }
          measureViewportSize(j) {
            const ke = this.elementRef.nativeElement;
            return 'horizontal' === j ? ke.clientWidth : ke.clientHeight;
          }
        }
        return (
          (ve.ɵfac = function (j) {
            return new (j || ve)(
              x.Y36(x.SBq),
              x.Y36(an),
              x.Y36(x.R0b),
              x.Y36(Ye.Is, 8),
            );
          }),
          (ve.ɵdir = x.lG2({ type: ve, features: [x.qOj] })),
          ve
        );
      })();
      const xt = typeof requestAnimationFrame < 'u' ? Se : re.E;
      let ht = (() => {
          class ve extends Dt {
            get orientation() {
              return this._orientation;
            }
            set orientation(j) {
              this._orientation !== j &&
                ((this._orientation = j), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(j) {
              this._appendOnly = (0, s.Ig)(j);
            }
            constructor(j, ke, de, me, fe, et, Mt, Rt) {
              super(j, et, de, fe),
                (this.elementRef = j),
                (this._changeDetectorRef = ke),
                (this._scrollStrategy = me),
                (this.scrollable = Rt),
                (this._platform = (0, x.f3M)(Pe.t4)),
                (this._detachedSubject = new L.x()),
                (this._renderedRangeSubject = new L.x()),
                (this._orientation = 'vertical'),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new ee.y(Cn =>
                  this._scrollStrategy.scrolledIndexChange.subscribe(Oe =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => Cn.next(Oe)),
                    ),
                  ),
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ''),
                (this._totalContentHeight = ''),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = vt.w0.EMPTY),
                (this._viewportChanges = Mt.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    'cdk-virtual-scrollable',
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe((0, De.O)(null), $e(0, xt))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled(),
                        ),
                      this._markChangeDetectionNeeded();
                  }),
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(j) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = j),
                  this._forOf.dataStream
                    .pipe((0, Ue.R)(this._detachedSubject))
                    .subscribe(ke => {
                      const de = ke.length;
                      de !== this._dataLength &&
                        ((this._dataLength = de),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(j) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                j
              ];
            }
            setTotalContentSize(j) {
              this._totalContentSize !== j &&
                ((this._totalContentSize = j),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(j) {
              (function Jt(ve, be) {
                return ve.start == be.start && ve.end == be.end;
              })(this._renderedRange, j) ||
                (this.appendOnly &&
                  (j = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, j.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = j)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered(),
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(j, ke = 'to-start') {
              j = this.appendOnly && 'to-start' === ke ? 0 : j;
              const me = 'horizontal' == this.orientation,
                fe = me ? 'X' : 'Y';
              let Mt = `translate${fe}(${Number(
                (me && this.dir && 'rtl' == this.dir.value ? -1 : 1) * j,
              )}px)`;
              (this._renderedContentOffset = j),
                'to-end' === ke &&
                  ((Mt += ` translate${fe}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != Mt &&
                  ((this._renderedContentTransform = Mt),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset,
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(j, ke = 'auto') {
              const de = { behavior: ke };
              'horizontal' === this.orientation ? (de.start = j) : (de.top = j),
                this.scrollable.scrollTo(de);
            }
            scrollToIndex(j, ke = 'auto') {
              this._scrollStrategy.scrollToIndex(j, ke);
            }
            measureScrollOffset(j) {
              let ke;
              return (
                (ke =
                  this.scrollable == this
                    ? de => super.measureScrollOffset(de)
                    : de => this.scrollable.measureScrollOffset(de)),
                Math.max(
                  0,
                  ke(
                    j ?? ('horizontal' === this.orientation ? 'start' : 'top'),
                  ) - this.measureViewportOffset(),
                )
              );
            }
            measureViewportOffset(j) {
              let ke;
              const fe = 'rtl' == this.dir?.value;
              ke =
                'start' == j
                  ? fe
                    ? 'right'
                    : 'left'
                  : 'end' == j
                  ? fe
                    ? 'left'
                    : 'right'
                  : j || ('horizontal' === this.orientation ? 'left' : 'top');
              const et =
                this.scrollable.measureBoundingClientRectWithScrollOffset(ke);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[ke] - et
              );
            }
            measureRenderedContentSize() {
              const j = this._contentWrapper.nativeElement;
              return 'horizontal' === this.orientation
                ? j.offsetWidth
                : j.offsetHeight;
            }
            measureRangeSize(j) {
              return this._forOf
                ? this._forOf.measureRangeSize(j, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation,
              );
            }
            _markChangeDetectionNeeded(j) {
              j && this._runAfterChangeDetection.push(j),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    }),
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const j = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const ke of j) ke();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                'horizontal' === this.orientation
                  ? ''
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  'horizontal' === this.orientation
                    ? `${this._totalContentSize}px`
                    : '');
            }
          }
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)(
                x.Y36(x.SBq),
                x.Y36(x.sBO),
                x.Y36(x.R0b),
                x.Y36(ut, 8),
                x.Y36(Ye.Is, 8),
                x.Y36(an),
                x.Y36(mn),
                x.Y36(wn, 8),
              );
            }),
            (ve.ɵcmp = x.Xpm({
              type: ve,
              selectors: [['cdk-virtual-scroll-viewport']],
              viewQuery: function (j, ke) {
                if ((1 & j && x.Gf(rt, 7), 2 & j)) {
                  let de;
                  x.iGM((de = x.CRH())) && (ke._contentWrapper = de.first);
                }
              },
              hostAttrs: [1, 'cdk-virtual-scroll-viewport'],
              hostVars: 4,
              hostBindings: function (j, ke) {
                2 & j &&
                  x.ekj(
                    'cdk-virtual-scroll-orientation-horizontal',
                    'horizontal' === ke.orientation,
                  )(
                    'cdk-virtual-scroll-orientation-vertical',
                    'horizontal' !== ke.orientation,
                  );
              },
              inputs: { orientation: 'orientation', appendOnly: 'appendOnly' },
              outputs: { scrolledIndexChange: 'scrolledIndexChange' },
              standalone: !0,
              features: [
                x._Bn([
                  {
                    provide: Dn,
                    useFactory: (be, j) => be || j,
                    deps: [[new x.FiY(), new x.tBr(wn)], ve],
                  },
                ]),
                x.qOj,
                x.jDz,
              ],
              ngContentSelectors: je,
              decls: 4,
              vars: 4,
              consts: [
                [1, 'cdk-virtual-scroll-content-wrapper'],
                ['contentWrapper', ''],
                [1, 'cdk-virtual-scroll-spacer'],
              ],
              template: function (j, ke) {
                1 & j &&
                  (x.F$t(),
                  x.TgZ(0, 'div', 0, 1),
                  x.Hsn(2),
                  x.qZA(),
                  x._UZ(3, 'div', 2)),
                  2 & j &&
                    (x.xp6(3),
                    x.Udp('width', ke._totalContentWidth)(
                      'height',
                      ke._totalContentHeight,
                    ));
              },
              styles: [
                'cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ve
          );
        })(),
        Ae = (() => {
          class ve {}
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)();
            }),
            (ve.ɵmod = x.oAB({ type: ve })),
            (ve.ɵinj = x.cJS({})),
            ve
          );
        })(),
        He = (() => {
          class ve {}
          return (
            (ve.ɵfac = function (j) {
              return new (j || ve)();
            }),
            (ve.ɵmod = x.oAB({ type: ve })),
            (ve.ɵinj = x.cJS({ imports: [Ye.vT, Ae, ht, Ye.vT, Ae] })),
            ve
          );
        })();
    },
    6895: (Ot, Ne, C) => {
      C.d(Ne, {
        Do: () => at,
        ED: () => ni,
        EM: () => Dr,
        HT: () => oe,
        JF: () => Mo,
        K0: () => he,
        Mx: () => gr,
        NF: () => mo,
        O5: () => _i,
        RF: () => _r,
        S$: () => gt,
        V_: () => le,
        Ye: () => vt,
        b0: () => pt,
        bD: () => Tr,
        ez: () => Bo,
        mk: () => dn,
        n9: () => Ii,
        q: () => L,
        sg: () => pi,
        tP: () => Bn,
        w_: () => ee,
      });
      var s = C(4650);
      let x = null;
      function L() {
        return x;
      }
      function oe(y) {
        x || (x = y);
      }
      class ee {}
      const he = new s.OlP('DocumentToken');
      let ge = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function ue() {
                return (0, s.LFG)(ae);
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      const le = new s.OlP('Location Initialized');
      let ae = (() => {
        class y extends ge {
          constructor(A) {
            super(),
              (this._doc = A),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return L().getBaseHref(this._doc);
          }
          onPopState(A) {
            const z = L().getGlobalEventTarget(this._doc, 'window');
            return (
              z.addEventListener('popstate', A, !1),
              () => z.removeEventListener('popstate', A)
            );
          }
          onHashChange(A) {
            const z = L().getGlobalEventTarget(this._doc, 'window');
            return (
              z.addEventListener('hashchange', A, !1),
              () => z.removeEventListener('hashchange', A)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(A) {
            this._location.pathname = A;
          }
          pushState(A, z, ce) {
            pe()
              ? this._history.pushState(A, z, ce)
              : (this._location.hash = ce);
          }
          replaceState(A, z, ce) {
            pe()
              ? this._history.replaceState(A, z, ce)
              : (this._location.hash = ce);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(A = 0) {
            this._history.go(A);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.LFG(he));
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function se() {
                return new ae((0, s.LFG)(he));
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      function pe() {
        return !!window.history.pushState;
      }
      function Be(y, P) {
        if (0 == y.length) return P;
        if (0 == P.length) return y;
        let A = 0;
        return (
          y.endsWith('/') && A++,
          P.startsWith('/') && A++,
          2 == A ? y + P.substring(1) : 1 == A ? y + P : y + '/' + P
        );
      }
      function ze(y) {
        const P = y.match(/#|\?|$/),
          A = (P && P.index) || y.length;
        return y.slice(0, A - ('/' === y[A - 1] ? 1 : 0)) + y.slice(A);
      }
      function st(y) {
        return y && '?' !== y[0] ? '?' + y : y;
      }
      let gt = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (0, s.f3M)(pt);
            },
            providedIn: 'root',
          })),
          y
        );
      })();
      const Le = new s.OlP('appBaseHref');
      let pt = (() => {
          class y extends gt {
            constructor(A, z) {
              super(),
                (this._platformLocation = A),
                (this._removeListenerFns = []),
                (this._baseHref =
                  z ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, s.f3M)(he).location?.origin ??
                  '');
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(A) {
              return Be(this._baseHref, A);
            }
            path(A = !1) {
              const z =
                  this._platformLocation.pathname +
                  st(this._platformLocation.search),
                ce = this._platformLocation.hash;
              return ce && A ? `${z}${ce}` : z;
            }
            pushState(A, z, ce, ot) {
              const _t = this.prepareExternalUrl(ce + st(ot));
              this._platformLocation.pushState(A, z, _t);
            }
            replaceState(A, z, ce, ot) {
              const _t = this.prepareExternalUrl(ce + st(ot));
              this._platformLocation.replaceState(A, z, _t);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ge), s.LFG(Le, 8));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: y.ɵfac,
              providedIn: 'root',
            })),
            y
          );
        })(),
        at = (() => {
          class y extends gt {
            constructor(A, z) {
              super(),
                (this._platformLocation = A),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != z && (this._baseHref = z);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(A = !1) {
              let z = this._platformLocation.hash;
              return null == z && (z = '#'), z.length > 0 ? z.substring(1) : z;
            }
            prepareExternalUrl(A) {
              const z = Be(this._baseHref, A);
              return z.length > 0 ? '#' + z : z;
            }
            pushState(A, z, ce, ot) {
              let _t = this.prepareExternalUrl(ce + st(ot));
              0 == _t.length && (_t = this._platformLocation.pathname),
                this._platformLocation.pushState(A, z, _t);
            }
            replaceState(A, z, ce, ot) {
              let _t = this.prepareExternalUrl(ce + st(ot));
              0 == _t.length && (_t = this._platformLocation.pathname),
                this._platformLocation.replaceState(A, z, _t);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(ge), s.LFG(Le, 8));
            }),
            (y.ɵprov = s.Yz7({ token: y, factory: y.ɵfac })),
            y
          );
        })(),
        vt = (() => {
          class y {
            constructor(A) {
              (this._subject = new s.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = A);
              const z = this._locationStrategy.getBaseHref();
              (this._basePath = (function X(y) {
                if (new RegExp('^(https?:)?//').test(y)) {
                  const [, A] = y.split(/\/\/[^\/]+/);
                  return A;
                }
                return y;
              })(ze(te(z)))),
                this._locationStrategy.onPopState(ce => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: ce.state,
                    type: ce.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(A = !1) {
              return this.normalize(this._locationStrategy.path(A));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(A, z = '') {
              return this.path() == this.normalize(A + st(z));
            }
            normalize(A) {
              return y.stripTrailingSlash(
                (function ne(y, P) {
                  if (!y || !P.startsWith(y)) return P;
                  const A = P.substring(y.length);
                  return '' === A || ['/', ';', '?', '#'].includes(A[0])
                    ? A
                    : P;
                })(this._basePath, te(A)),
              );
            }
            prepareExternalUrl(A) {
              return (
                A && '/' !== A[0] && (A = '/' + A),
                this._locationStrategy.prepareExternalUrl(A)
              );
            }
            go(A, z = '', ce = null) {
              this._locationStrategy.pushState(ce, '', A, z),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + st(z)),
                  ce,
                );
            }
            replaceState(A, z = '', ce = null) {
              this._locationStrategy.replaceState(ce, '', A, z),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + st(z)),
                  ce,
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(A = 0) {
              this._locationStrategy.historyGo?.(A);
            }
            onUrlChange(A) {
              return (
                this._urlChangeListeners.push(A),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe(z => {
                    this._notifyUrlChangeListeners(z.url, z.state);
                  })),
                () => {
                  const z = this._urlChangeListeners.indexOf(A);
                  this._urlChangeListeners.splice(z, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(A = '', z) {
              this._urlChangeListeners.forEach(ce => ce(A, z));
            }
            subscribe(A, z, ce) {
              return this._subject.subscribe({
                next: A,
                error: z,
                complete: ce,
              });
            }
          }
          return (
            (y.normalizeQueryParams = st),
            (y.joinWithSlash = Be),
            (y.stripTrailingSlash = ze),
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(gt));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: function () {
                return (function xe() {
                  return new vt((0, s.LFG)(gt));
                })();
              },
              providedIn: 'root',
            })),
            y
          );
        })();
      function te(y) {
        return y.replace(/\/index.html$/, '');
      }
      function gr(y, P) {
        P = encodeURIComponent(P);
        for (const A of y.split(';')) {
          const z = A.indexOf('='),
            [ce, ot] = -1 == z ? [A, ''] : [A.slice(0, z), A.slice(z + 1)];
          if (ce.trim() === P) return decodeURIComponent(ot);
        }
        return null;
      }
      const mi = /\s+/,
        $t = [];
      let dn = (() => {
        class y {
          constructor(A, z, ce, ot) {
            (this._iterableDiffers = A),
              (this._keyValueDiffers = z),
              (this._ngEl = ce),
              (this._renderer = ot),
              (this.initialClasses = $t),
              (this.stateMap = new Map());
          }
          set klass(A) {
            this.initialClasses = null != A ? A.trim().split(mi) : $t;
          }
          set ngClass(A) {
            this.rawClass = 'string' == typeof A ? A.trim().split(mi) : A;
          }
          ngDoCheck() {
            for (const z of this.initialClasses) this._updateState(z, !0);
            const A = this.rawClass;
            if (Array.isArray(A) || A instanceof Set)
              for (const z of A) this._updateState(z, !0);
            else if (null != A)
              for (const z of Object.keys(A))
                this._updateState(z, Boolean(A[z]));
            this._applyStateDiff();
          }
          _updateState(A, z) {
            const ce = this.stateMap.get(A);
            void 0 !== ce
              ? (ce.enabled !== z && ((ce.changed = !0), (ce.enabled = z)),
                (ce.touched = !0))
              : this.stateMap.set(A, { enabled: z, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const A of this.stateMap) {
              const z = A[0],
                ce = A[1];
              ce.changed
                ? (this._toggleClass(z, ce.enabled), (ce.changed = !1))
                : ce.touched ||
                  (ce.enabled && this._toggleClass(z, !1),
                  this.stateMap.delete(z)),
                (ce.touched = !1);
            }
          }
          _toggleClass(A, z) {
            (A = A.trim()).length > 0 &&
              A.split(mi).forEach(ce => {
                z
                  ? this._renderer.addClass(this._ngEl.nativeElement, ce)
                  : this._renderer.removeClass(this._ngEl.nativeElement, ce);
              });
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(
              s.Y36(s.ZZ4),
              s.Y36(s.aQg),
              s.Y36(s.SBq),
              s.Y36(s.Qsj),
            );
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            standalone: !0,
          })),
          y
        );
      })();
      class Zn {
        constructor(P, A, z, ce) {
          (this.$implicit = P),
            (this.ngForOf = A),
            (this.index = z),
            (this.count = ce);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let pi = (() => {
        class y {
          set ngForOf(A) {
            (this._ngForOf = A), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(A) {
            this._trackByFn = A;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(A, z, ce) {
            (this._viewContainer = A),
              (this._template = z),
              (this._differs = ce),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(A) {
            A && (this._template = A);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const A = this._ngForOf;
              !this._differ &&
                A &&
                (this._differ = this._differs
                  .find(A)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const A = this._differ.diff(this._ngForOf);
              A && this._applyChanges(A);
            }
          }
          _applyChanges(A) {
            const z = this._viewContainer;
            A.forEachOperation((ce, ot, _t) => {
              if (null == ce.previousIndex)
                z.createEmbeddedView(
                  this._template,
                  new Zn(ce.item, this._ngForOf, -1, -1),
                  null === _t ? void 0 : _t,
                );
              else if (null == _t) z.remove(null === ot ? void 0 : ot);
              else if (null !== ot) {
                const en = z.get(ot);
                z.move(en, _t), An(en, ce);
              }
            });
            for (let ce = 0, ot = z.length; ce < ot; ce++) {
              const en = z.get(ce).context;
              (en.index = ce), (en.count = ot), (en.ngForOf = this._ngForOf);
            }
            A.forEachIdentityChange(ce => {
              An(z.get(ce.currentIndex), ce);
            });
          }
          static ngTemplateContextGuard(A, z) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(s.ZZ4));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: {
              ngForOf: 'ngForOf',
              ngForTrackBy: 'ngForTrackBy',
              ngForTemplate: 'ngForTemplate',
            },
            standalone: !0,
          })),
          y
        );
      })();
      function An(y, P) {
        y.context.$implicit = P.item;
      }
      let _i = (() => {
        class y {
          constructor(A, z) {
            (this._viewContainer = A),
              (this._context = new fn()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = z);
          }
          set ngIf(A) {
            (this._context.$implicit = this._context.ngIf = A),
              this._updateView();
          }
          set ngIfThen(A) {
            qi('ngIfThen', A),
              (this._thenTemplateRef = A),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(A) {
            qi('ngIfElse', A),
              (this._elseTemplateRef = A),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context,
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context,
                  )));
          }
          static ngTemplateContextGuard(A, z) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngIf', '']],
            inputs: {
              ngIf: 'ngIf',
              ngIfThen: 'ngIfThen',
              ngIfElse: 'ngIfElse',
            },
            standalone: !0,
          })),
          y
        );
      })();
      class fn {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function qi(y, P) {
        if (P && !P.createEmbeddedView)
          throw new Error(
            `${y} must be a TemplateRef, but received '${(0, s.AaK)(P)}'.`,
          );
      }
      class Ui {
        constructor(P, A) {
          (this._viewContainerRef = P),
            (this._templateRef = A),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(P) {
          P && !this._created
            ? this.create()
            : !P && this._created && this.destroy();
        }
      }
      let _r = (() => {
          class y {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(A) {
              (this._ngSwitch = A),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(A) {
              this._defaultViews.push(A);
            }
            _matchCase(A) {
              const z = A == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || z),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                z
              );
            }
            _updateDefaultCases(A) {
              if (this._defaultViews.length > 0 && A !== this._defaultUsed) {
                this._defaultUsed = A;
                for (const z of this._defaultViews) z.enforceState(A);
              }
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitch', '']],
              inputs: { ngSwitch: 'ngSwitch' },
              standalone: !0,
            })),
            y
          );
        })(),
        Ii = (() => {
          class y {
            constructor(A, z, ce) {
              (this.ngSwitch = ce), ce._addCase(), (this._view = new Ui(A, z));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase),
              );
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(_r, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
              standalone: !0,
            })),
            y
          );
        })(),
        ni = (() => {
          class y {
            constructor(A, z, ce) {
              ce._addDefault(new Ui(A, z));
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(_r, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchDefault', '']],
              standalone: !0,
            })),
            y
          );
        })(),
        Bn = (() => {
          class y {
            constructor(A) {
              (this._viewContainerRef = A),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(A) {
              if (A.ngTemplateOutlet || A.ngTemplateOutletInjector) {
                const z = this._viewContainerRef;
                if (
                  (this._viewRef && z.remove(z.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: ce,
                    ngTemplateOutletContext: ot,
                    ngTemplateOutletInjector: _t,
                  } = this;
                  this._viewRef = z.createEmbeddedView(
                    ce,
                    ot,
                    _t ? { injector: _t } : void 0,
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  A.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: {
                ngTemplateOutletContext: 'ngTemplateOutletContext',
                ngTemplateOutlet: 'ngTemplateOutlet',
                ngTemplateOutletInjector: 'ngTemplateOutletInjector',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            y
          );
        })(),
        Bo = (() => {
          class y {}
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵmod = s.oAB({ type: y })),
            (y.ɵinj = s.cJS({})),
            y
          );
        })();
      const Tr = 'browser';
      function mo(y) {
        return y === Tr;
      }
      let Dr = (() => {
        class y {}
        return (
          (y.ɵprov = (0, s.Yz7)({
            token: y,
            providedIn: 'root',
            factory: () => new ro((0, s.LFG)(he), window),
          })),
          y
        );
      })();
      class ro {
        constructor(P, A) {
          (this.document = P), (this.window = A), (this.offset = () => [0, 0]);
        }
        setOffset(P) {
          this.offset = Array.isArray(P) ? () => P : P;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(P) {
          this.supportsScrolling() && this.window.scrollTo(P[0], P[1]);
        }
        scrollToAnchor(P) {
          if (!this.supportsScrolling()) return;
          const A = (function Fr(y, P) {
            const A = y.getElementById(P) || y.getElementsByName(P)[0];
            if (A) return A;
            if (
              'function' == typeof y.createTreeWalker &&
              y.body &&
              (y.body.createShadowRoot || y.body.attachShadow)
            ) {
              const z = y.createTreeWalker(y.body, NodeFilter.SHOW_ELEMENT);
              let ce = z.currentNode;
              for (; ce; ) {
                const ot = ce.shadowRoot;
                if (ot) {
                  const _t =
                    ot.getElementById(P) || ot.querySelector(`[name="${P}"]`);
                  if (_t) return _t;
                }
                ce = z.nextNode();
              }
            }
            return null;
          })(this.document, P);
          A && (this.scrollToElement(A), A.focus());
        }
        setHistoryScrollRestoration(P) {
          if (this.supportScrollRestoration()) {
            const A = this.window.history;
            A && A.scrollRestoration && (A.scrollRestoration = P);
          }
        }
        scrollToElement(P) {
          const A = P.getBoundingClientRect(),
            z = A.left + this.window.pageXOffset,
            ce = A.top + this.window.pageYOffset,
            ot = this.offset();
          this.window.scrollTo(z - ot[0], ce - ot[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const P =
              oo(this.window.history) ||
              oo(Object.getPrototypeOf(this.window.history));
            return !(!P || (!P.writable && !P.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              'pageXOffset' in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function oo(y) {
        return Object.getOwnPropertyDescriptor(y, 'scrollRestoration');
      }
      class Mo {}
    },
    529: (Ot, Ne, C) => {
      C.d(Ne, { JF: () => Je, TP: () => Pe, WM: () => ae, eN: () => $e });
      var s = C(6895),
        x = C(4650),
        L = C(9646),
        oe = C(9751),
        ee = C(4351),
        he = C(9300),
        ge = C(4004);
      class ue {}
      class le {}
      class ae {
        constructor(b) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            b
              ? (this.lazyInit =
                  'string' == typeof b
                    ? () => {
                        (this.headers = new Map()),
                          b.split('\n').forEach(E => {
                            const V = E.indexOf(':');
                            if (V > 0) {
                              const Q = E.slice(0, V),
                                We = Q.toLowerCase(),
                                St = E.slice(V + 1).trim();
                              this.maybeSetNormalizedName(Q, We),
                                this.headers.has(We)
                                  ? this.headers.get(We).push(St)
                                  : this.headers.set(We, [St]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.entries(b).forEach(([E, V]) => {
                            let Q;
                            if (
                              ((Q =
                                'string' == typeof V
                                  ? [V]
                                  : 'number' == typeof V
                                  ? [V.toString()]
                                  : V.map(We => We.toString())),
                              Q.length > 0)
                            ) {
                              const We = E.toLowerCase();
                              this.headers.set(We, Q),
                                this.maybeSetNormalizedName(E, We);
                            }
                          });
                      })
              : (this.headers = new Map());
        }
        has(b) {
          return this.init(), this.headers.has(b.toLowerCase());
        }
        get(b) {
          this.init();
          const E = this.headers.get(b.toLowerCase());
          return E && E.length > 0 ? E[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(b) {
          return this.init(), this.headers.get(b.toLowerCase()) || null;
        }
        append(b, E) {
          return this.clone({ name: b, value: E, op: 'a' });
        }
        set(b, E) {
          return this.clone({ name: b, value: E, op: 's' });
        }
        delete(b, E) {
          return this.clone({ name: b, value: E, op: 'd' });
        }
        maybeSetNormalizedName(b, E) {
          this.normalizedNames.has(E) || this.normalizedNames.set(E, b);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ae
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach(b => this.applyUpdate(b)),
              (this.lazyUpdate = null)));
        }
        copyFrom(b) {
          b.init(),
            Array.from(b.headers.keys()).forEach(E => {
              this.headers.set(E, b.headers.get(E)),
                this.normalizedNames.set(E, b.normalizedNames.get(E));
            });
        }
        clone(b) {
          const E = new ae();
          return (
            (E.lazyInit =
              this.lazyInit && this.lazyInit instanceof ae
                ? this.lazyInit
                : this),
            (E.lazyUpdate = (this.lazyUpdate || []).concat([b])),
            E
          );
        }
        applyUpdate(b) {
          const E = b.name.toLowerCase();
          switch (b.op) {
            case 'a':
            case 's':
              let V = b.value;
              if (('string' == typeof V && (V = [V]), 0 === V.length)) return;
              this.maybeSetNormalizedName(b.name, E);
              const Q = ('a' === b.op ? this.headers.get(E) : void 0) || [];
              Q.push(...V), this.headers.set(E, Q);
              break;
            case 'd':
              const We = b.value;
              if (We) {
                let St = this.headers.get(E);
                if (!St) return;
                (St = St.filter(Gt => -1 === We.indexOf(Gt))),
                  0 === St.length
                    ? (this.headers.delete(E), this.normalizedNames.delete(E))
                    : this.headers.set(E, St);
              } else this.headers.delete(E), this.normalizedNames.delete(E);
          }
        }
        forEach(b) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach(E =>
              b(this.normalizedNames.get(E), this.headers.get(E)),
            );
        }
      }
      class se {
        encodeKey(b) {
          return gt(b);
        }
        encodeValue(b) {
          return gt(b);
        }
        decodeKey(b) {
          return decodeURIComponent(b);
        }
        decodeValue(b) {
          return decodeURIComponent(b);
        }
      }
      const ze = /%(\d[a-f0-9])/gi,
        st = {
          40: '@',
          '3A': ':',
          24: '$',
          '2C': ',',
          '3B': ';',
          '3D': '=',
          '3F': '?',
          '2F': '/',
        };
      function gt(R) {
        return encodeURIComponent(R).replace(ze, (b, E) => st[E] ?? b);
      }
      function Le(R) {
        return `${R}`;
      }
      class pt {
        constructor(b = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = b.encoder || new se()),
            b.fromString)
          ) {
            if (b.fromObject)
              throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function Be(R, b) {
              const E = new Map();
              return (
                R.length > 0 &&
                  R.replace(/^\?/, '')
                    .split('&')
                    .forEach(Q => {
                      const We = Q.indexOf('='),
                        [St, Gt] =
                          -1 == We
                            ? [b.decodeKey(Q), '']
                            : [
                                b.decodeKey(Q.slice(0, We)),
                                b.decodeValue(Q.slice(We + 1)),
                              ],
                        zt = E.get(St) || [];
                      zt.push(Gt), E.set(St, zt);
                    }),
                E
              );
            })(b.fromString, this.encoder);
          } else
            b.fromObject
              ? ((this.map = new Map()),
                Object.keys(b.fromObject).forEach(E => {
                  const V = b.fromObject[E],
                    Q = Array.isArray(V) ? V.map(Le) : [Le(V)];
                  this.map.set(E, Q);
                }))
              : (this.map = null);
        }
        has(b) {
          return this.init(), this.map.has(b);
        }
        get(b) {
          this.init();
          const E = this.map.get(b);
          return E ? E[0] : null;
        }
        getAll(b) {
          return this.init(), this.map.get(b) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(b, E) {
          return this.clone({ param: b, value: E, op: 'a' });
        }
        appendAll(b) {
          const E = [];
          return (
            Object.keys(b).forEach(V => {
              const Q = b[V];
              Array.isArray(Q)
                ? Q.forEach(We => {
                    E.push({ param: V, value: We, op: 'a' });
                  })
                : E.push({ param: V, value: Q, op: 'a' });
            }),
            this.clone(E)
          );
        }
        set(b, E) {
          return this.clone({ param: b, value: E, op: 's' });
        }
        delete(b, E) {
          return this.clone({ param: b, value: E, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map(b => {
                const E = this.encoder.encodeKey(b);
                return this.map
                  .get(b)
                  .map(V => E + '=' + this.encoder.encodeValue(V))
                  .join('&');
              })
              .filter(b => '' !== b)
              .join('&')
          );
        }
        clone(b) {
          const E = new pt({ encoder: this.encoder });
          return (
            (E.cloneFrom = this.cloneFrom || this),
            (E.updates = (this.updates || []).concat(b)),
            E
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach(b => this.map.set(b, this.cloneFrom.map.get(b))),
              this.updates.forEach(b => {
                switch (b.op) {
                  case 'a':
                  case 's':
                    const E =
                      ('a' === b.op ? this.map.get(b.param) : void 0) || [];
                    E.push(Le(b.value)), this.map.set(b.param, E);
                    break;
                  case 'd':
                    if (void 0 === b.value) {
                      this.map.delete(b.param);
                      break;
                    }
                    {
                      let V = this.map.get(b.param) || [];
                      const Q = V.indexOf(Le(b.value));
                      -1 !== Q && V.splice(Q, 1),
                        V.length > 0
                          ? this.map.set(b.param, V)
                          : this.map.delete(b.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class vt {
        constructor() {
          this.map = new Map();
        }
        set(b, E) {
          return this.map.set(b, E), this;
        }
        get(b) {
          return (
            this.map.has(b) || this.map.set(b, b.defaultValue()),
            this.map.get(b)
          );
        }
        delete(b) {
          return this.map.delete(b), this;
        }
        has(b) {
          return this.map.has(b);
        }
        keys() {
          return this.map.keys();
        }
      }
      function ne(R) {
        return typeof ArrayBuffer < 'u' && R instanceof ArrayBuffer;
      }
      function te(R) {
        return typeof Blob < 'u' && R instanceof Blob;
      }
      function X(R) {
        return typeof FormData < 'u' && R instanceof FormData;
      }
      class tt {
        constructor(b, E, V, Q) {
          let We;
          if (
            ((this.url = E),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = b.toUpperCase()),
            (function xe(R) {
              switch (R) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || Q
              ? ((this.body = void 0 !== V ? V : null), (We = Q))
              : (We = V),
            We &&
              ((this.reportProgress = !!We.reportProgress),
              (this.withCredentials = !!We.withCredentials),
              We.responseType && (this.responseType = We.responseType),
              We.headers && (this.headers = We.headers),
              We.context && (this.context = We.context),
              We.params && (this.params = We.params)),
            this.headers || (this.headers = new ae()),
            this.context || (this.context = new vt()),
            this.params)
          ) {
            const St = this.params.toString();
            if (0 === St.length) this.urlWithParams = E;
            else {
              const Gt = E.indexOf('?');
              this.urlWithParams =
                E + (-1 === Gt ? '?' : Gt < E.length - 1 ? '&' : '') + St;
            }
          } else (this.params = new pt()), (this.urlWithParams = E);
        }
        serializeBody() {
          return null === this.body
            ? null
            : ne(this.body) ||
              te(this.body) ||
              X(this.body) ||
              (function Se(R) {
                return (
                  typeof URLSearchParams < 'u' && R instanceof URLSearchParams
                );
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof pt
            ? this.body.toString()
            : 'object' == typeof this.body ||
              'boolean' == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || X(this.body)
            ? null
            : te(this.body)
            ? this.body.type || null
            : ne(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof pt
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body ||
              'number' == typeof this.body ||
              'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(b = {}) {
          const E = b.method || this.method,
            V = b.url || this.url,
            Q = b.responseType || this.responseType,
            We = void 0 !== b.body ? b.body : this.body,
            St =
              void 0 !== b.withCredentials
                ? b.withCredentials
                : this.withCredentials,
            Gt =
              void 0 !== b.reportProgress
                ? b.reportProgress
                : this.reportProgress;
          let zt = b.headers || this.headers,
            Bt = b.params || this.params;
          const on = b.context ?? this.context;
          return (
            void 0 !== b.setHeaders &&
              (zt = Object.keys(b.setHeaders).reduce(
                (Re, Ce) => Re.set(Ce, b.setHeaders[Ce]),
                zt,
              )),
            b.setParams &&
              (Bt = Object.keys(b.setParams).reduce(
                (Re, Ce) => Re.set(Ce, b.setParams[Ce]),
                Bt,
              )),
            new tt(E, V, We, {
              params: Bt,
              headers: zt,
              context: on,
              reportProgress: Gt,
              responseType: Q,
              withCredentials: St,
            })
          );
        }
      }
      var re = (() => (
        ((re = re || {})[(re.Sent = 0)] = 'Sent'),
        (re[(re.UploadProgress = 1)] = 'UploadProgress'),
        (re[(re.ResponseHeader = 2)] = 'ResponseHeader'),
        (re[(re.DownloadProgress = 3)] = 'DownloadProgress'),
        (re[(re.Response = 4)] = 'Response'),
        (re[(re.User = 5)] = 'User'),
        re
      ))();
      class At {
        constructor(b, E = 200, V = 'OK') {
          (this.headers = b.headers || new ae()),
            (this.status = void 0 !== b.status ? b.status : E),
            (this.statusText = b.statusText || V),
            (this.url = b.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class mt extends At {
        constructor(b = {}) {
          super(b), (this.type = re.ResponseHeader);
        }
        clone(b = {}) {
          return new mt({
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Yt extends At {
        constructor(b = {}) {
          super(b),
            (this.type = re.Response),
            (this.body = void 0 !== b.body ? b.body : null);
        }
        clone(b = {}) {
          return new Yt({
            body: void 0 !== b.body ? b.body : this.body,
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Et extends At {
        constructor(b) {
          super(b, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${b.url || '(unknown url)'}`
                : `Http failure response for ${b.url || '(unknown url)'}: ${
                    b.status
                  } ${b.statusText}`),
            (this.error = b.error || null);
        }
      }
      function Ge(R, b) {
        return {
          body: b,
          headers: R.headers,
          context: R.context,
          observe: R.observe,
          params: R.params,
          reportProgress: R.reportProgress,
          responseType: R.responseType,
          withCredentials: R.withCredentials,
        };
      }
      let $e = (() => {
        class R {
          constructor(E) {
            this.handler = E;
          }
          request(E, V, Q = {}) {
            let We;
            if (E instanceof tt) We = E;
            else {
              let zt, Bt;
              (zt = Q.headers instanceof ae ? Q.headers : new ae(Q.headers)),
                Q.params &&
                  (Bt =
                    Q.params instanceof pt
                      ? Q.params
                      : new pt({ fromObject: Q.params })),
                (We = new tt(E, V, void 0 !== Q.body ? Q.body : null, {
                  headers: zt,
                  context: Q.context,
                  params: Bt,
                  reportProgress: Q.reportProgress,
                  responseType: Q.responseType || 'json',
                  withCredentials: Q.withCredentials,
                }));
            }
            const St = (0, L.of)(We).pipe(
              (0, ee.b)(zt => this.handler.handle(zt)),
            );
            if (E instanceof tt || 'events' === Q.observe) return St;
            const Gt = St.pipe((0, he.h)(zt => zt instanceof Yt));
            switch (Q.observe || 'body') {
              case 'body':
                switch (We.responseType) {
                  case 'arraybuffer':
                    return Gt.pipe(
                      (0, ge.U)(zt => {
                        if (
                          null !== zt.body &&
                          !(zt.body instanceof ArrayBuffer)
                        )
                          throw new Error('Response is not an ArrayBuffer.');
                        return zt.body;
                      }),
                    );
                  case 'blob':
                    return Gt.pipe(
                      (0, ge.U)(zt => {
                        if (null !== zt.body && !(zt.body instanceof Blob))
                          throw new Error('Response is not a Blob.');
                        return zt.body;
                      }),
                    );
                  case 'text':
                    return Gt.pipe(
                      (0, ge.U)(zt => {
                        if (null !== zt.body && 'string' != typeof zt.body)
                          throw new Error('Response is not a string.');
                        return zt.body;
                      }),
                    );
                  default:
                    return Gt.pipe((0, ge.U)(zt => zt.body));
                }
              case 'response':
                return Gt;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${Q.observe}}`,
                );
            }
          }
          delete(E, V = {}) {
            return this.request('DELETE', E, V);
          }
          get(E, V = {}) {
            return this.request('GET', E, V);
          }
          head(E, V = {}) {
            return this.request('HEAD', E, V);
          }
          jsonp(E, V) {
            return this.request('JSONP', E, {
              params: new pt().append(V, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(E, V = {}) {
            return this.request('OPTIONS', E, V);
          }
          patch(E, V, Q = {}) {
            return this.request('PATCH', E, Ge(Q, V));
          }
          post(E, V, Q = {}) {
            return this.request('POST', E, Ge(Q, V));
          }
          put(E, V, Q = {}) {
            return this.request('PUT', E, Ge(Q, V));
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(x.LFG(ue));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      function Me(R, b) {
        return b(R);
      }
      function Ue(R, b) {
        return (E, V) => b.intercept(E, { handle: Q => R(Q, V) });
      }
      const Pe = new x.OlP('HTTP_INTERCEPTORS'),
        a = new x.OlP('HTTP_INTERCEPTOR_FNS');
      function Ye() {
        let R = null;
        return (b, E) => (
          null === R &&
            (R = ((0, x.f3M)(Pe, { optional: !0 }) ?? []).reduceRight(Ue, Me)),
          R(b, E)
        );
      }
      let rt = (() => {
        class R extends ue {
          constructor(E, V) {
            super(),
              (this.backend = E),
              (this.injector = V),
              (this.chain = null);
          }
          handle(E) {
            if (null === this.chain) {
              const V = Array.from(new Set(this.injector.get(a)));
              this.chain = V.reduceRight(
                (Q, We) =>
                  (function De(R, b, E) {
                    return (V, Q) => E.runInContext(() => b(V, We => R(We, Q)));
                  })(Q, We, this.injector),
                Me,
              );
            }
            return this.chain(E, V => this.backend.handle(V));
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(x.LFG(le), x.LFG(x.lqb));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      const Dt = /^\)\]\}',?\n/;
      let xt = (() => {
        class R {
          constructor(E) {
            this.xhrFactory = E;
          }
          handle(E) {
            if ('JSONP' === E.method)
              throw new Error(
                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.',
              );
            return new oe.y(V => {
              const Q = this.xhrFactory.build();
              if (
                (Q.open(E.method, E.urlWithParams),
                E.withCredentials && (Q.withCredentials = !0),
                E.headers.forEach((K, we) =>
                  Q.setRequestHeader(K, we.join(',')),
                ),
                E.headers.has('Accept') ||
                  Q.setRequestHeader(
                    'Accept',
                    'application/json, text/plain, */*',
                  ),
                !E.headers.has('Content-Type'))
              ) {
                const K = E.detectContentTypeHeader();
                null !== K && Q.setRequestHeader('Content-Type', K);
              }
              if (E.responseType) {
                const K = E.responseType.toLowerCase();
                Q.responseType = 'json' !== K ? K : 'text';
              }
              const We = E.serializeBody();
              let St = null;
              const Gt = () => {
                  if (null !== St) return St;
                  const K = Q.statusText || 'OK',
                    we = new ae(Q.getAllResponseHeaders()),
                    ct =
                      (function Jt(R) {
                        return 'responseURL' in R && R.responseURL
                          ? R.responseURL
                          : /^X-Request-URL:/m.test(R.getAllResponseHeaders())
                          ? R.getResponseHeader('X-Request-URL')
                          : null;
                      })(Q) || E.url;
                  return (
                    (St = new mt({
                      headers: we,
                      status: Q.status,
                      statusText: K,
                      url: ct,
                    })),
                    St
                  );
                },
                zt = () => {
                  let {
                      headers: K,
                      status: we,
                      statusText: ct,
                      url: Ft,
                    } = Gt(),
                    Zt = null;
                  204 !== we &&
                    (Zt =
                      typeof Q.response > 'u' ? Q.responseText : Q.response),
                    0 === we && (we = Zt ? 200 : 0);
                  let _n = we >= 200 && we < 300;
                  if ('json' === E.responseType && 'string' == typeof Zt) {
                    const In = Zt;
                    Zt = Zt.replace(Dt, '');
                    try {
                      Zt = '' !== Zt ? JSON.parse(Zt) : null;
                    } catch (Ut) {
                      (Zt = In),
                        _n && ((_n = !1), (Zt = { error: Ut, text: Zt }));
                    }
                  }
                  _n
                    ? (V.next(
                        new Yt({
                          body: Zt,
                          headers: K,
                          status: we,
                          statusText: ct,
                          url: Ft || void 0,
                        }),
                      ),
                      V.complete())
                    : V.error(
                        new Et({
                          error: Zt,
                          headers: K,
                          status: we,
                          statusText: ct,
                          url: Ft || void 0,
                        }),
                      );
                },
                Bt = K => {
                  const { url: we } = Gt(),
                    ct = new Et({
                      error: K,
                      status: Q.status || 0,
                      statusText: Q.statusText || 'Unknown Error',
                      url: we || void 0,
                    });
                  V.error(ct);
                };
              let on = !1;
              const Re = K => {
                  on || (V.next(Gt()), (on = !0));
                  let we = { type: re.DownloadProgress, loaded: K.loaded };
                  K.lengthComputable && (we.total = K.total),
                    'text' === E.responseType &&
                      Q.responseText &&
                      (we.partialText = Q.responseText),
                    V.next(we);
                },
                Ce = K => {
                  let we = { type: re.UploadProgress, loaded: K.loaded };
                  K.lengthComputable && (we.total = K.total), V.next(we);
                };
              return (
                Q.addEventListener('load', zt),
                Q.addEventListener('error', Bt),
                Q.addEventListener('timeout', Bt),
                Q.addEventListener('abort', Bt),
                E.reportProgress &&
                  (Q.addEventListener('progress', Re),
                  null !== We &&
                    Q.upload &&
                    Q.upload.addEventListener('progress', Ce)),
                Q.send(We),
                V.next({ type: re.Sent }),
                () => {
                  Q.removeEventListener('error', Bt),
                    Q.removeEventListener('abort', Bt),
                    Q.removeEventListener('load', zt),
                    Q.removeEventListener('timeout', Bt),
                    E.reportProgress &&
                      (Q.removeEventListener('progress', Re),
                      null !== We &&
                        Q.upload &&
                        Q.upload.removeEventListener('progress', Ce)),
                    Q.readyState !== Q.DONE && Q.abort();
                }
              );
            });
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(x.LFG(s.JF));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      const ht = new x.OlP('XSRF_ENABLED'),
        Xe = new x.OlP('XSRF_COOKIE_NAME', {
          providedIn: 'root',
          factory: () => 'XSRF-TOKEN',
        }),
        J = new x.OlP('XSRF_HEADER_NAME', {
          providedIn: 'root',
          factory: () => 'X-XSRF-TOKEN',
        });
      class Ae {}
      let He = (() => {
        class R {
          constructor(E, V, Q) {
            (this.doc = E),
              (this.platform = V),
              (this.cookieName = Q),
              (this.lastCookieString = ''),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ('server' === this.platform) return null;
            const E = this.doc.cookie || '';
            return (
              E !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, s.Mx)(E, this.cookieName)),
                (this.lastCookieString = E)),
              this.lastToken
            );
          }
        }
        return (
          (R.ɵfac = function (E) {
            return new (E || R)(x.LFG(s.K0), x.LFG(x.Lbi), x.LFG(Xe));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      function ve(R, b) {
        const E = R.url.toLowerCase();
        if (
          !(0, x.f3M)(ht) ||
          'GET' === R.method ||
          'HEAD' === R.method ||
          E.startsWith('http://') ||
          E.startsWith('https://')
        )
          return b(R);
        const V = (0, x.f3M)(Ae).getToken(),
          Q = (0, x.f3M)(J);
        return (
          null != V &&
            !R.headers.has(Q) &&
            (R = R.clone({ headers: R.headers.set(Q, V) })),
          b(R)
        );
      }
      var j = (() => (
        ((j = j || {})[(j.Interceptors = 0)] = 'Interceptors'),
        (j[(j.LegacyInterceptors = 1)] = 'LegacyInterceptors'),
        (j[(j.CustomXsrfConfiguration = 2)] = 'CustomXsrfConfiguration'),
        (j[(j.NoXsrfProtection = 3)] = 'NoXsrfProtection'),
        (j[(j.JsonpSupport = 4)] = 'JsonpSupport'),
        (j[(j.RequestsMadeViaParent = 5)] = 'RequestsMadeViaParent'),
        j
      ))();
      function ke(R, b) {
        return { ɵkind: R, ɵproviders: b };
      }
      function de(...R) {
        const b = [
          $e,
          xt,
          rt,
          { provide: ue, useExisting: rt },
          { provide: le, useExisting: xt },
          { provide: a, useValue: ve, multi: !0 },
          { provide: ht, useValue: !0 },
          { provide: Ae, useClass: He },
        ];
        for (const E of R) b.push(...E.ɵproviders);
        return (0, x.MR2)(b);
      }
      const fe = new x.OlP('LEGACY_INTERCEPTOR_FN');
      let Je = (() => {
        class R {}
        return (
          (R.ɵfac = function (E) {
            return new (E || R)();
          }),
          (R.ɵmod = x.oAB({ type: R })),
          (R.ɵinj = x.cJS({
            providers: [
              de(
                ke(j.LegacyInterceptors, [
                  { provide: fe, useFactory: Ye },
                  { provide: a, useExisting: fe, multi: !0 },
                ]),
              ),
            ],
          })),
          R
        );
      })();
    },
    4650: (Ot, Ne, C) => {
      C.d(Ne, {
        $8M: () => As,
        $WT: () => ai,
        $Z: () => gh,
        AFp: () => gm,
        ALo: () => Lp,
        AaK: () => ue,
        BQk: () => Sl,
        CHM: () => mr,
        CRH: () => Wp,
        CZH: () => Ul,
        CqO: () => Qh,
        D6c: () => LD,
        EJc: () => J0,
        EiD: () => Fu,
        EpF: () => Kh,
        F$t: () => tf,
        F4k: () => Zh,
        FYo: () => Zu,
        FiY: () => Ai,
        Gf: () => Yp,
        GfV: () => Qu,
        Gpc: () => pe,
        Gre: () => Nf,
        Hsn: () => nf,
        Ikx: () => ud,
        JOm: () => Yo,
        JVY: () => Fg,
        JZr: () => gt,
        KtG: () => Yr,
        L6k: () => Pg,
        LAX: () => Lg,
        LFG: () => Je,
        Lbi: () => Z0,
        Lck: () => Gy,
        MAs: () => Gh,
        MMx: () => Dd,
        MR2: () => e_,
        NdJ: () => td,
        O4$: () => cn,
        OlP: () => ei,
        Oqu: () => dd,
        P3R: () => Lu,
        PXZ: () => pD,
        Q6J: () => qc,
        QGY: () => ed,
        QbO: () => Q0,
        Qsj: () => m_,
        R0b: () => xo,
        RDi: () => Ag,
        Rgc: () => qa,
        SBq: () => La,
        Sil: () => tD,
        Suo: () => Gp,
        TTD: () => Rr,
        TgZ: () => Ml,
        Udp: () => ad,
        VKq: () => kp,
        W1O: () => qp,
        WFA: () => nd,
        WLB: () => Tp,
        X6Q: () => bD,
        XFs: () => ht,
        Xpm: () => _n,
        Xts: () => yc,
        Y36: () => na,
        YKP: () => Dp,
        YNc: () => Yh,
        Yjl: () => Si,
        Yz7: () => nt,
        Z0I: () => an,
        ZZ4: () => Gd,
        _Bn: () => yp,
        _UZ: () => Jc,
        _Vd: () => Na,
        _c5: () => PD,
        _uU: () => Af,
        aQg: () => Wd,
        c2e: () => q0,
        cJS: () => Mn,
        cg1: () => fd,
        d8E: () => hd,
        dDg: () => dD,
        dqk: () => He,
        eBb: () => Ng,
        eFA: () => Im,
        eJc: () => kd,
        ekj: () => ld,
        eoX: () => Mm,
        f3M: () => Te,
        g9A: () => vm,
        h0i: () => ga,
        hGG: () => ND,
        hij: () => Tl,
        iGM: () => $p,
        ifc: () => zt,
        ip1: () => mm,
        jDz: () => xp,
        kL8: () => Gf,
        kcU: () => zn,
        lG2: () => Hi,
        lcZ: () => Bp,
        lqb: () => Ls,
        lri: () => xm,
        mCW: () => ul,
        n5z: () => Ja,
        n_E: () => Nl,
        oAB: () => Pn,
        oxw: () => ef,
        pB0: () => Bg,
        q3G: () => Zi,
        qLn: () => Ba,
        qOj: () => Wc,
        qZA: () => wl,
        qzn: () => qs,
        rWj: () => Em,
        sBO: () => yD,
        s_b: () => Bl,
        soG: () => jl,
        tBr: () => $o,
        tb: () => Am,
        tp0: () => Gs,
        uIk: () => Qc,
        vHH: () => Le,
        vpe: () => Qo,
        wAp: () => En,
        xp6: () => ih,
        ynx: () => Al,
        z2F: () => zl,
        z3N: () => rs,
        zSh: () => Ec,
        zs3: () => Bs,
      });
      var s = C(7579),
        x = C(727),
        L = C(9751),
        oe = C(6451),
        ee = C(3099);
      function he(e) {
        for (let t in e) if (e[t] === he) return t;
        throw Error('Could not find renamed property on target object.');
      }
      function ge(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function ue(e) {
        if ('string' == typeof e) return e;
        if (Array.isArray(e)) return '[' + e.map(ue).join(', ') + ']';
        if (null == e) return '' + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const t = e.toString();
        if (null == t) return '' + t;
        const n = t.indexOf('\n');
        return -1 === n ? t : t.substring(0, n);
      }
      function le(e, t) {
        return null == e || '' === e
          ? null === t
            ? ''
            : t
          : null == t || '' === t
          ? e
          : e + ' ' + t;
      }
      const ae = he({ __forward_ref__: he });
      function pe(e) {
        return (
          (e.__forward_ref__ = pe),
          (e.toString = function () {
            return ue(this());
          }),
          e
        );
      }
      function se(e) {
        return Be(e) ? e() : e;
      }
      function Be(e) {
        return (
          'function' == typeof e &&
          e.hasOwnProperty(ae) &&
          e.__forward_ref__ === pe
        );
      }
      function ze(e) {
        return e && !!e.ɵproviders;
      }
      const gt = 'https://g.co/ng/security#xss';
      class Le extends Error {
        constructor(t, n) {
          super(pt(t, n)), (this.code = t);
        }
      }
      function pt(e, t) {
        return `NG0${Math.abs(e)}${t ? ': ' + t.trim() : ''}`;
      }
      function at(e) {
        return 'string' == typeof e ? e : null == e ? '' : String(e);
      }
      function X(e, t) {
        throw new Le(-201, !1);
      }
      function a(e, t) {
        null == e &&
          (function Ye(e, t, n, i) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == i ? '' : ` [Expected=> ${n} ${i} ${t} <=Actual]`),
            );
          })(t, e, null, '!=');
      }
      function nt(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function Mn(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function un(e) {
        return Dn(e, wn) || Dn(e, Jt);
      }
      function an(e) {
        return null !== un(e);
      }
      function Dn(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function mn(e) {
        return e && (e.hasOwnProperty(Dt) || e.hasOwnProperty(xt))
          ? e[Dt]
          : null;
      }
      const wn = he({ ɵprov: he }),
        Dt = he({ ɵinj: he }),
        Jt = he({ ngInjectableDef: he }),
        xt = he({ ngInjectorDef: he });
      var ht = (() => (
        ((ht = ht || {})[(ht.Default = 0)] = 'Default'),
        (ht[(ht.Host = 1)] = 'Host'),
        (ht[(ht.Self = 2)] = 'Self'),
        (ht[(ht.SkipSelf = 4)] = 'SkipSelf'),
        (ht[(ht.Optional = 8)] = 'Optional'),
        ht
      ))();
      let hn;
      function $(e) {
        const t = hn;
        return (hn = e), t;
      }
      function J(e, t, n) {
        const i = un(e);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : n & ht.Optional
          ? null
          : void 0 !== t
          ? t
          : void X(ue(e));
      }
      const He = (() =>
          (typeof globalThis < 'u' && globalThis) ||
          (typeof global < 'u' && global) ||
          (typeof window < 'u' && window) ||
          (typeof self < 'u' &&
            typeof WorkerGlobalScope < 'u' &&
            self instanceof WorkerGlobalScope &&
            self))(),
        ke = {},
        de = '__NG_DI_FLAG__',
        me = 'ngTempTokenPath',
        fe = 'ngTokenPath',
        et = /\n/gm,
        Mt = '\u0275',
        Rt = '__source';
      let Cn;
      function Oe(e) {
        const t = Cn;
        return (Cn = e), t;
      }
      function bt(e, t = ht.Default) {
        if (void 0 === Cn) throw new Le(-203, !1);
        return null === Cn
          ? J(e, void 0, t)
          : Cn.get(e, t & ht.Optional ? null : void 0, t);
      }
      function Je(e, t = ht.Default) {
        return (
          (function Xe() {
            return hn;
          })() || bt
        )(se(e), t);
      }
      function Te(e, t = ht.Default) {
        return Je(e, R(t));
      }
      function R(e) {
        return typeof e > 'u' || 'number' == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function b(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const i = se(e[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Le(900, !1);
            let o,
              l = ht.Default;
            for (let u = 0; u < i.length; u++) {
              const v = i[u],
                M = V(v);
              'number' == typeof M
                ? -1 === M
                  ? (o = v.token)
                  : (l |= M)
                : (o = v);
            }
            t.push(Je(o, l));
          } else t.push(Je(i));
        }
        return t;
      }
      function E(e, t) {
        return (e[de] = t), (e.prototype[de] = t), e;
      }
      function V(e) {
        return e[de];
      }
      function St(e) {
        return { toString: e }.toString();
      }
      var Gt = (() => (
          ((Gt = Gt || {})[(Gt.OnPush = 0)] = 'OnPush'),
          (Gt[(Gt.Default = 1)] = 'Default'),
          Gt
        ))(),
        zt = (() => {
          return (
            ((e = zt || (zt = {}))[(e.Emulated = 0)] = 'Emulated'),
            (e[(e.None = 2)] = 'None'),
            (e[(e.ShadowDom = 3)] = 'ShadowDom'),
            zt
          );
          var e;
        })();
      const Bt = {},
        on = [],
        Re = he({ ɵcmp: he }),
        Ce = he({ ɵdir: he }),
        K = he({ ɵpipe: he }),
        we = he({ ɵmod: he }),
        ct = he({ ɵfac: he }),
        Ft = he({ __NG_ELEMENT_ID__: he });
      let Zt = 0;
      function _n(e) {
        return St(() => {
          const t = Xr(e),
            n = {
              ...t,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === Gt.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              data: e.data || {},
              encapsulation: e.encapsulation || zt.Emulated,
              id: 'c' + Zt++,
              styles: e.styles || on,
              _: null,
              schemas: e.schemas || null,
              tView: null,
            };
          xi(n);
          const i = e.dependencies;
          return (n.directiveDefs = gr(i, !1)), (n.pipeDefs = gr(i, !0)), n;
        });
      }
      function Ut(e) {
        return Tn(e) || ri(e);
      }
      function qn(e) {
        return null !== e;
      }
      function Pn(e) {
        return St(() => ({
          type: e.type,
          bootstrap: e.bootstrap || on,
          declarations: e.declarations || on,
          imports: e.imports || on,
          exports: e.exports || on,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function Wn(e, t) {
        if (null == e) return Bt;
        const n = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let o = e[i],
              l = o;
            Array.isArray(o) && ((l = o[1]), (o = o[0])),
              (n[o] = i),
              t && (t[o] = l);
          }
        return n;
      }
      function Hi(e) {
        return St(() => {
          const t = Xr(e);
          return xi(t), t;
        });
      }
      function Si(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function Tn(e) {
        return e[Re] || null;
      }
      function ri(e) {
        return e[Ce] || null;
      }
      function ti(e) {
        return e[K] || null;
      }
      function ai(e) {
        const t = Tn(e) || ri(e) || ti(e);
        return null !== t && t.standalone;
      }
      function hi(e, t) {
        const n = e[we] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${ue(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function Xr(e) {
        const t = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: t,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          selectors: e.selectors || on,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: Wn(e.inputs, t),
          outputs: Wn(e.outputs),
        };
      }
      function xi(e) {
        e.features?.forEach(t => t(e));
      }
      function gr(e, t) {
        if (!e) return null;
        const n = t ? ti : Ut;
        return () =>
          ('function' == typeof e ? e() : e).map(i => n(i)).filter(qn);
      }
      const mi = 0,
        $t = 1,
        dn = 2,
        Un = 3,
        fi = 4,
        Xn = 5,
        Zn = 6,
        pi = 7,
        An = 8,
        gi = 9,
        _i = 10,
        fn = 11,
        qi = 12,
        Ui = 13,
        _r = 14,
        Ii = 15,
        ni = 16,
        ur = 17,
        Pi = 18,
        ji = 19,
        fr = 20,
        Bn = 21,
        Hn = 22,
        Li = 1,
        kr = 2,
        rr = 7,
        Ki = 8,
        zi = 9,
        q = 10;
      function Ie(e) {
        return Array.isArray(e) && 'object' == typeof e[Li];
      }
      function Ze(e) {
        return Array.isArray(e) && !0 === e[Li];
      }
      function kt(e) {
        return 0 != (4 & e.flags);
      }
      function It(e) {
        return e.componentOffset > -1;
      }
      function ln(e) {
        return 1 == (1 & e.flags);
      }
      function vn(e) {
        return !!e.template;
      }
      function Nn(e) {
        return 0 != (256 & e[dn]);
      }
      function $i(e, t) {
        return e.hasOwnProperty(ct) ? e[ct] : null;
      }
      class ki {
        constructor(t, n, i) {
          (this.previousValue = t),
            (this.currentValue = n),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Rr() {
        return Dr;
      }
      function Dr(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = oo), ro;
      }
      function ro() {
        const e = Ur(this),
          t = e?.current;
        if (t) {
          const n = e.previous;
          if (n === Bt) e.previous = t;
          else for (let i in t) n[i] = t[i];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function oo(e, t, n, i) {
        const o = this.declaredInputs[n],
          l =
            Ur(e) ||
            (function Mo(e, t) {
              return (e[Fr] = t);
            })(e, { previous: Bt, current: null }),
          u = l.current || (l.current = {}),
          v = l.previous,
          M = v[o];
        (u[o] = new ki(M && M.currentValue, t, v === Bt)), (e[i] = t);
      }
      Rr.ngInherit = !0;
      const Fr = '__ngSimpleChanges__';
      function Ur(e) {
        return e[Fr] || null;
      }
      const bi = function (e, t, n) {},
        so = 'svg';
      function li(e) {
        for (; Array.isArray(e); ) e = e[mi];
        return e;
      }
      function oi(e, t) {
        return li(t[e]);
      }
      function yi(e, t) {
        return li(t[e.index]);
      }
      function $r(e, t) {
        return e.data[t];
      }
      function Cr(e, t) {
        return e[t];
      }
      function Ei(e, t) {
        const n = t[e];
        return Ie(n) ? n : n[mi];
      }
      function Pr(e) {
        return 64 == (64 & e[dn]);
      }
      function Bi(e, t) {
        return null == t ? null : e[t];
      }
      function Nr(e) {
        e[Pi] = 0;
      }
      function ao(e, t) {
        e[Xn] += t;
        let n = e,
          i = e[Un];
        for (
          ;
          null !== i && ((1 === t && 1 === n[Xn]) || (-1 === t && 0 === n[Xn]));

        )
          (i[Xn] += t), (n = i), (i = i[Un]);
      }
      const bn = { lFrame: Z(null), bindingsEnabled: !0 };
      function it() {
        return bn.bindingsEnabled;
      }
      function lt() {
        return bn.lFrame.lView;
      }
      function kn() {
        return bn.lFrame.tView;
      }
      function mr(e) {
        return (bn.lFrame.contextLView = e), e[An];
      }
      function Yr(e) {
        return (bn.lFrame.contextLView = null), e;
      }
      function ii() {
        let e = Vi();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function Vi() {
        return bn.lFrame.currentTNode;
      }
      function sr(e, t) {
        const n = bn.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function go() {
        return bn.lFrame.isParent;
      }
      function So() {
        bn.lFrame.isParent = !1;
      }
      function Mi() {
        const e = bn.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function Wr() {
        return bn.lFrame.bindingIndex++;
      }
      function ar(e) {
        const t = bn.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function Vo(e, t) {
        const n = bn.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), _o(t);
      }
      function _o(e) {
        bn.lFrame.currentDirectiveIndex = e;
      }
      function Mr(e) {
        const t = bn.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function co() {
        return bn.lFrame.currentQueryIndex;
      }
      function B(e) {
        bn.lFrame.currentQueryIndex = e;
      }
      function h(e) {
        const t = e[$t];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[Zn] : null;
      }
      function p(e, t, n) {
        if (n & ht.SkipSelf) {
          let o = t,
            l = e;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              n & ht.Host ||
              ((o = h(l)), null === o || ((l = l[Ii]), 10 & o.type)));

          );
          if (null === o) return !1;
          (t = o), (e = l);
        }
        const i = (bn.lFrame = H());
        return (i.currentTNode = t), (i.lView = e), !0;
      }
      function S(e) {
        const t = H(),
          n = e[$t];
        (bn.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function H() {
        const e = bn.lFrame,
          t = null === e ? null : e.child;
        return null === t ? Z(e) : t;
      }
      function Z(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function ye() {
        const e = bn.lFrame;
        return (
          (bn.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const Ee = ye;
      function qe() {
        const e = ye();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function Ht() {
        return bn.lFrame.selectedIndex;
      }
      function yn(e) {
        bn.lFrame.selectedIndex = e;
      }
      function nn() {
        const e = bn.lFrame;
        return $r(e.tView, e.selectedIndex);
      }
      function cn() {
        bn.lFrame.currentNamespace = so;
      }
      function zn() {
        !(function Qn() {
          bn.lFrame.currentNamespace = null;
        })();
      }
      function di(e, t) {
        for (let n = t.directiveStart, i = t.directiveEnd; n < i; n++) {
          const l = e.data[n].type.prototype,
            {
              ngAfterContentInit: u,
              ngAfterContentChecked: v,
              ngAfterViewInit: M,
              ngAfterViewChecked: N,
              ngOnDestroy: Y,
            } = l;
          u && (e.contentHooks ?? (e.contentHooks = [])).push(-n, u),
            v &&
              ((e.contentHooks ?? (e.contentHooks = [])).push(n, v),
              (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, v)),
            M && (e.viewHooks ?? (e.viewHooks = [])).push(-n, M),
            N &&
              ((e.viewHooks ?? (e.viewHooks = [])).push(n, N),
              (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, N)),
            null != Y && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, Y);
        }
      }
      function wr(e, t, n) {
        P(e, t, 3, n);
      }
      function Ji(e, t, n, i) {
        (3 & e[dn]) === n && P(e, t, n, i);
      }
      function y(e, t) {
        let n = e[dn];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[dn] = n));
      }
      function P(e, t, n, i) {
        const l = i ?? -1,
          u = t.length - 1;
        let v = 0;
        for (let M = void 0 !== i ? 65535 & e[Pi] : 0; M < u; M++)
          if ('number' == typeof t[M + 1]) {
            if (((v = t[M]), null != i && v >= i)) break;
          } else
            t[M] < 0 && (e[Pi] += 65536),
              (v < l || -1 == l) &&
                (A(e, n, t, M), (e[Pi] = (4294901760 & e[Pi]) + M + 2)),
              M++;
      }
      function A(e, t, n, i) {
        const o = n[i] < 0,
          l = n[i + 1],
          v = e[o ? -n[i] : n[i]];
        if (o) {
          if (e[dn] >> 11 < e[Pi] >> 16 && (3 & e[dn]) === t) {
            (e[dn] += 2048), bi(4, v, l);
            try {
              l.call(v);
            } finally {
              bi(5, v, l);
            }
          }
        } else {
          bi(4, v, l);
          try {
            l.call(v);
          } finally {
            bi(5, v, l);
          }
        }
      }
      const z = -1;
      class ce {
        constructor(t, n, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = n),
            (this.injectImpl = i);
        }
      }
      function gn(e, t, n) {
        let i = 0;
        for (; i < n.length; ) {
          const o = n[i];
          if ('number' == typeof o) {
            if (0 !== o) break;
            i++;
            const l = n[i++],
              u = n[i++],
              v = n[i++];
            e.setAttribute(t, u, v, l);
          } else {
            const l = o,
              u = n[++i];
            ui(l) ? e.setProperty(t, l, u) : e.setAttribute(t, l, u), i++;
          }
        }
        return i;
      }
      function Yn(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function ui(e) {
        return 64 === e.charCodeAt(0);
      }
      function si(e, t) {
        if (null !== t && 0 !== t.length)
          if (null === e || 0 === e.length) e = t.slice();
          else {
            let n = -1;
            for (let i = 0; i < t.length; i++) {
              const o = t[i];
              'number' == typeof o
                ? (n = o)
                : 0 === n ||
                  Vn(e, n, o, null, -1 === n || 2 === n ? t[++i] : null);
            }
          }
        return e;
      }
      function Vn(e, t, n, i, o) {
        let l = 0,
          u = e.length;
        if (-1 === t) u = -1;
        else
          for (; l < e.length; ) {
            const v = e[l++];
            if ('number' == typeof v) {
              if (v === t) {
                u = -1;
                break;
              }
              if (v > t) {
                u = l - 1;
                break;
              }
            }
          }
        for (; l < e.length; ) {
          const v = e[l];
          if ('number' == typeof v) break;
          if (v === n) {
            if (null === i) return void (null !== o && (e[l + 1] = o));
            if (i === e[l + 1]) return void (e[l + 2] = o);
          }
          l++, null !== i && l++, null !== o && l++;
        }
        -1 !== u && (e.splice(u, 0, t), (l = u + 1)),
          e.splice(l++, 0, n),
          null !== i && e.splice(l++, 0, i),
          null !== o && e.splice(l++, 0, o);
      }
      function er(e) {
        return e !== z;
      }
      function Lr(e) {
        return 32767 & e;
      }
      function lr(e, t) {
        let n = (function Ci(e) {
            return e >> 16;
          })(e),
          i = t;
        for (; n > 0; ) (i = i[Ii]), n--;
        return i;
      }
      let cr = !0;
      function vo(e) {
        const t = cr;
        return (cr = e), t;
      }
      const zs = 255,
        Jo = 5;
      let ba = 0;
      const Kr = {};
      function us(e, t) {
        const n = $s(e, t);
        if (-1 !== n) return n;
        const i = t[$t];
        i.firstCreatePass &&
          ((e.injectorIndex = t.length),
          Cs(i.data, e),
          Cs(t, null),
          Cs(i.blueprint, null));
        const o = xs(e, t),
          l = e.injectorIndex;
        if (er(o)) {
          const u = Lr(o),
            v = lr(o, t),
            M = v[$t].data;
          for (let N = 0; N < 8; N++) t[l + N] = v[u + N] | M[u + N];
        }
        return (t[l + 8] = o), l;
      }
      function Cs(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function $s(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function xs(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          i = null,
          o = t;
        for (; null !== o; ) {
          if (((i = ms(o)), null === i)) return z;
          if ((n++, (o = o[Ii]), -1 !== i.injectorIndex))
            return i.injectorIndex | (n << 16);
        }
        return z;
      }
      function tr(e, t, n) {
        !(function Ds(e, t, n) {
          let i;
          'string' == typeof n
            ? (i = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(Ft) && (i = n[Ft]),
            null == i && (i = n[Ft] = ba++);
          const o = i & zs;
          t.data[e + (o >> Jo)] |= 1 << o;
        })(e, t, n);
      }
      function hs(e, t, n) {
        if (n & ht.Optional || void 0 !== e) return e;
        X();
      }
      function Da(e, t, n, i) {
        if (
          (n & ht.Optional && void 0 === i && (i = null),
          !(n & (ht.Self | ht.Host)))
        ) {
          const o = e[gi],
            l = $(void 0);
          try {
            return o ? o.get(t, i, n & ht.Optional) : J(t, i, n & ht.Optional);
          } finally {
            $(l);
          }
        }
        return hs(i, 0, n);
      }
      function Ca(e, t, n, i = ht.Default, o) {
        if (null !== e) {
          if (1024 & t[dn]) {
            const u = (function bo(e, t, n, i, o) {
              let l = e,
                u = t;
              for (
                ;
                null !== l && null !== u && 1024 & u[dn] && !(256 & u[dn]);

              ) {
                const v = fs(l, u, n, i | ht.Self, Kr);
                if (v !== Kr) return v;
                let M = l.parent;
                if (!M) {
                  const N = u[Bn];
                  if (N) {
                    const Y = N.get(n, Kr, i);
                    if (Y !== Kr) return Y;
                  }
                  (M = ms(u)), (u = u[Ii]);
                }
                l = M;
              }
              return o;
            })(e, t, n, i, Kr);
            if (u !== Kr) return u;
          }
          const l = fs(e, t, n, i, Kr);
          if (l !== Kr) return l;
        }
        return Da(t, n, i, o);
      }
      function fs(e, t, n, i, o) {
        const l = (function Ms(e) {
          if ('string' == typeof e) return e.charCodeAt(0) || 0;
          const t = e.hasOwnProperty(Ft) ? e[Ft] : void 0;
          return 'number' == typeof t ? (t >= 0 ? t & zs : Uo) : t;
        })(n);
        if ('function' == typeof l) {
          if (!p(t, e, i)) return i & ht.Host ? hs(o, 0, i) : Da(t, n, i, o);
          try {
            const u = l(i);
            if (null != u || i & ht.Optional) return u;
            X();
          } finally {
            Ee();
          }
        } else if ('number' == typeof l) {
          let u = null,
            v = $s(e, t),
            M = z,
            N = i & ht.Host ? t[ni][Zn] : null;
          for (
            (-1 === v || i & ht.SkipSelf) &&
            ((M = -1 === v ? xs(e, t) : t[v + 8]),
            M !== z && hr(i, !1)
              ? ((u = t[$t]), (v = Lr(M)), (t = lr(M, t)))
              : (v = -1));
            -1 !== v;

          ) {
            const Y = t[$t];
            if (ws(l, v, Y.data)) {
              const ie = xa(v, t, n, u, i, N);
              if (ie !== Kr) return ie;
            }
            (M = t[v + 8]),
              M !== z && hr(i, t[$t].data[v + 8] === N) && ws(l, v, t)
                ? ((u = Y), (v = Lr(M)), (t = lr(M, t)))
                : (v = -1);
          }
        }
        return o;
      }
      function xa(e, t, n, i, o, l) {
        const u = t[$t],
          v = u.data[e + 8],
          Y = Es(
            v,
            u,
            n,
            null == i ? It(v) && cr : i != u && 0 != (3 & v.type),
            o & ht.Host && l === v,
          );
        return null !== Y ? Io(t, u, Y, v) : Kr;
      }
      function Es(e, t, n, i, o) {
        const l = e.providerIndexes,
          u = t.data,
          v = 1048575 & l,
          M = e.directiveStart,
          Y = l >> 20,
          Fe = o ? v + Y : e.directiveEnd;
        for (let Qe = i ? v : v + Y; Qe < Fe; Qe++) {
          const yt = u[Qe];
          if ((Qe < M && n === yt) || (Qe >= M && yt.type === n)) return Qe;
        }
        if (o) {
          const Qe = u[M];
          if (Qe && vn(Qe) && Qe.type === n) return M;
        }
        return null;
      }
      function Io(e, t, n, i) {
        let o = e[n];
        const l = t.data;
        if (
          (function ot(e) {
            return e instanceof ce;
          })(o)
        ) {
          const u = o;
          u.resolving &&
            (function xe(e, t) {
              const n = t ? `. Dependency path: ${t.join(' > ')} > ${e}` : '';
              throw new Le(
                -200,
                `Circular dependency in DI detected for ${e}${n}`,
              );
            })(
              (function vt(e) {
                return 'function' == typeof e
                  ? e.name || e.toString()
                  : 'object' == typeof e &&
                    null != e &&
                    'function' == typeof e.type
                  ? e.type.name || e.type.toString()
                  : at(e);
              })(l[n]),
            );
          const v = vo(u.canSeeViewProviders);
          u.resolving = !0;
          const M = u.injectImpl ? $(u.injectImpl) : null;
          p(e, i, ht.Default);
          try {
            (o = e[n] = u.factory(void 0, l, e, i)),
              t.firstCreatePass &&
                n >= i.directiveStart &&
                (function Ti(e, t, n) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: l,
                  } = t.type.prototype;
                  if (i) {
                    const u = Dr(t);
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, u),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, u);
                  }
                  o &&
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o),
                    l &&
                      ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, l),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, l));
                })(n, l[n], t);
          } finally {
            null !== M && $(M), vo(v), (u.resolving = !1), Ee();
          }
        }
        return o;
      }
      function ws(e, t, n) {
        return !!(n[t + (e >> Jo)] & (1 << e));
      }
      function hr(e, t) {
        return !(e & ht.Self || (e & ht.Host && t));
      }
      class Ho {
        constructor(t, n) {
          (this._tNode = t), (this._lView = n);
        }
        get(t, n, i) {
          return Ca(this._tNode, this._lView, t, R(i), n);
        }
      }
      function Uo() {
        return new Ho(ii(), lt());
      }
      function Ja(e) {
        return St(() => {
          const t = e.prototype.constructor,
            n = t[ct] || ps(t),
            i = Object.prototype;
          let o = Object.getPrototypeOf(e.prototype).constructor;
          for (; o && o !== i; ) {
            const l = o[ct] || ps(o);
            if (l && l !== n) return l;
            o = Object.getPrototypeOf(o);
          }
          return l => new l();
        });
      }
      function ps(e) {
        return Be(e)
          ? () => {
              const t = ps(se(e));
              return t && t();
            }
          : $i(e);
      }
      function ms(e) {
        const t = e[$t],
          n = t.type;
        return 2 === n ? t.declTNode : 1 === n ? e[Zn] : null;
      }
      function As(e) {
        return (function ya(e, t) {
          if ('class' === t) return e.classes;
          if ('style' === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const i = n.length;
            let o = 0;
            for (; o < i; ) {
              const l = n[o];
              if (Yn(l)) break;
              if (0 === l) o += 2;
              else if ('number' == typeof l)
                for (o++; o < i && 'string' == typeof n[o]; ) o++;
              else {
                if (l === t) return n[o + 1];
                o += 2;
              }
            }
          }
          return null;
        })(ii(), e);
      }
      const ko = '__parameters__';
      function jo(e, t, n) {
        return St(() => {
          const i = (function Zr(e) {
            return function (...n) {
              if (e) {
                const i = e(...n);
                for (const o in i) this[o] = i[o];
              }
            };
          })(t);
          function o(...l) {
            if (this instanceof o) return i.apply(this, l), this;
            const u = new o(...l);
            return (v.annotation = u), v;
            function v(M, N, Y) {
              const ie = M.hasOwnProperty(ko)
                ? M[ko]
                : Object.defineProperty(M, ko, { value: [] })[ko];
              for (; ie.length <= Y; ) ie.push(null);
              return (ie[Y] = ie[Y] || []).push(u), M;
            }
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      class ei {
        constructor(t, n) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof n
              ? (this.__NG_ELEMENT_ID__ = n)
              : void 0 !== n &&
                (this.ɵprov = nt({
                  token: this,
                  providedIn: n.providedIn || 'root',
                  factory: n.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function uo(e, t) {
        e.forEach(n => (Array.isArray(n) ? uo(n, t) : t(n)));
      }
      function Ys(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function Is(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function f(e, t) {
        const n = [];
        for (let i = 0; i < e; i++) n.push(t);
        return n;
      }
      function U(e, t, n) {
        let i = Ve(e, t);
        return (
          i >= 0
            ? (e[1 | i] = n)
            : ((i = ~i),
              (function D(e, t, n, i) {
                let o = e.length;
                if (o == t) e.push(n, i);
                else if (1 === o) e.push(i, e[0]), (e[0] = n);
                else {
                  for (o--, e.push(e[o - 1], e[o]); o > t; )
                    (e[o] = e[o - 2]), o--;
                  (e[t] = n), (e[t + 1] = i);
                }
              })(e, i, t, n)),
          i
        );
      }
      function W(e, t) {
        const n = Ve(e, t);
        if (n >= 0) return e[1 | n];
      }
      function Ve(e, t) {
        return (function qt(e, t, n) {
          let i = 0,
            o = e.length >> n;
          for (; o !== i; ) {
            const l = i + ((o - i) >> 1),
              u = e[l << n];
            if (t === u) return l << n;
            u > t ? (o = l) : (i = l + 1);
          }
          return ~(o << n);
        })(e, t, 1);
      }
      const $o = E(
          jo('Inject', e => ({ token: e })),
          -1,
        ),
        Ai = E(jo('Optional'), 8),
        Gs = E(jo('SkipSelf'), 4);
      var Yo = (() => (
        ((Yo = Yo || {})[(Yo.Important = 1)] = 'Important'),
        (Yo[(Yo.DashCase = 2)] = 'DashCase'),
        Yo
      ))();
      const Jl = new Map();
      let Qm = 0;
      const tc = '__ngContext__';
      function Sr(e, t) {
        Ie(t)
          ? ((e[tc] = t[fr]),
            (function Xm(e) {
              Jl.set(e[fr], e);
            })(t))
          : (e[tc] = t);
      }
      let nc;
      function ic(e, t) {
        return nc(e, t);
      }
      function Oa(e) {
        const t = e[Un];
        return Ze(t) ? t[Un] : t;
      }
      function rc(e) {
        return lu(e[Ui]);
      }
      function oc(e) {
        return lu(e[fi]);
      }
      function lu(e) {
        for (; null !== e && !Ze(e); ) e = e[fi];
        return e;
      }
      function Zs(e, t, n, i, o) {
        if (null != i) {
          let l,
            u = !1;
          Ze(i) ? (l = i) : Ie(i) && ((u = !0), (i = i[mi]));
          const v = li(i);
          0 === e && null !== n
            ? null == o
              ? pu(t, n, v)
              : Fs(t, n, v, o || null, !0)
            : 1 === e && null !== n
            ? Fs(t, n, v, o || null, !0)
            : 2 === e
            ? (function hc(e, t, n) {
                const i = sl(e, t);
                i &&
                  (function vg(e, t, n, i) {
                    e.removeChild(t, n, i);
                  })(e, i, t, n);
              })(t, v, u)
            : 3 === e && t.destroyNode(v),
            null != l &&
              (function Dg(e, t, n, i, o) {
                const l = n[rr];
                l !== li(n) && Zs(t, e, i, l, o);
                for (let v = q; v < n.length; v++) {
                  const M = n[v];
                  Ra(M[$t], M, e, t, i, l);
                }
              })(t, e, l, n, o);
        }
      }
      function ac(e, t, n) {
        return e.createElement(t, n);
      }
      function du(e, t) {
        const n = e[zi],
          i = n.indexOf(t),
          o = t[Un];
        512 & t[dn] && ((t[dn] &= -513), ao(o, -1)), n.splice(i, 1);
      }
      function lc(e, t) {
        if (e.length <= q) return;
        const n = q + t,
          i = e[n];
        if (i) {
          const o = i[ur];
          null !== o && o !== e && du(o, i), t > 0 && (e[n - 1][fi] = i[fi]);
          const l = Is(e, q + t);
          !(function dg(e, t) {
            Ra(e, t, t[fn], 2, null, null), (t[mi] = null), (t[Zn] = null);
          })(i[$t], i);
          const u = l[ji];
          null !== u && u.detachView(l[$t]),
            (i[Un] = null),
            (i[fi] = null),
            (i[dn] &= -65);
        }
        return i;
      }
      function uu(e, t) {
        if (!(128 & t[dn])) {
          const n = t[fn];
          n.destroyNode && Ra(e, t, n, 3, null, null),
            (function fg(e) {
              let t = e[Ui];
              if (!t) return cc(e[$t], e);
              for (; t; ) {
                let n = null;
                if (Ie(t)) n = t[Ui];
                else {
                  const i = t[q];
                  i && (n = i);
                }
                if (!n) {
                  for (; t && !t[fi] && t !== e; )
                    Ie(t) && cc(t[$t], t), (t = t[Un]);
                  null === t && (t = e),
                    Ie(t) && cc(t[$t], t),
                    (n = t && t[fi]);
                }
                t = n;
              }
            })(t);
        }
      }
      function cc(e, t) {
        if (!(128 & t[dn])) {
          (t[dn] &= -65),
            (t[dn] |= 128),
            (function _g(e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const o = t[n[i]];
                  if (!(o instanceof ce)) {
                    const l = n[i + 1];
                    if (Array.isArray(l))
                      for (let u = 0; u < l.length; u += 2) {
                        const v = o[l[u]],
                          M = l[u + 1];
                        bi(4, v, M);
                        try {
                          M.call(v);
                        } finally {
                          bi(5, v, M);
                        }
                      }
                    else {
                      bi(4, o, l);
                      try {
                        l.call(o);
                      } finally {
                        bi(5, o, l);
                      }
                    }
                  }
                }
            })(e, t),
            (function gg(e, t) {
              const n = e.cleanup,
                i = t[pi];
              let o = -1;
              if (null !== n)
                for (let l = 0; l < n.length - 1; l += 2)
                  if ('string' == typeof n[l]) {
                    const u = n[l + 3];
                    u >= 0 ? i[(o = u)]() : i[(o = -u)].unsubscribe(), (l += 2);
                  } else {
                    const u = i[(o = n[l + 1])];
                    n[l].call(u);
                  }
              if (null !== i) {
                for (let l = o + 1; l < i.length; l++) (0, i[l])();
                t[pi] = null;
              }
            })(e, t),
            1 === t[$t].type && t[fn].destroy();
          const n = t[ur];
          if (null !== n && Ze(t[Un])) {
            n !== t[Un] && du(n, t);
            const i = t[ji];
            null !== i && i.detachView(e);
          }
          !(function Jm(e) {
            Jl.delete(e[fr]);
          })(t);
        }
      }
      function hu(e, t, n) {
        return (function fu(e, t, n) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return n[mi];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: l } = e.data[i.directiveStart + o];
              if (l === zt.None || l === zt.Emulated) return null;
            }
            return yi(i, n);
          }
        })(e, t.parent, n);
      }
      function Fs(e, t, n, i, o) {
        e.insertBefore(t, n, i, o);
      }
      function pu(e, t, n) {
        e.appendChild(t, n);
      }
      function mu(e, t, n, i, o) {
        null !== i ? Fs(e, t, n, i, o) : pu(e, t, n);
      }
      function sl(e, t) {
        return e.parentNode(t);
      }
      function gu(e, t, n) {
        return vu(e, t, n);
      }
      let dc,
        cl,
        mc,
        dl,
        vu = function _u(e, t, n) {
          return 40 & e.type ? yi(e, n) : null;
        };
      function al(e, t, n, i) {
        const o = hu(e, i, t),
          l = t[fn],
          v = gu(i.parent || t[Zn], i, t);
        if (null != o)
          if (Array.isArray(n))
            for (let M = 0; M < n.length; M++) mu(l, o, n[M], v, !1);
          else mu(l, o, n, v, !1);
        void 0 !== dc && dc(l, i, t, n, o);
      }
      function ll(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return yi(t, e);
          if (4 & n) return uc(-1, e[t.index]);
          if (8 & n) {
            const i = t.child;
            if (null !== i) return ll(e, i);
            {
              const o = e[t.index];
              return Ze(o) ? uc(-1, o) : li(o);
            }
          }
          if (32 & n) return ic(t, e)() || li(e[t.index]);
          {
            const i = yu(e, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : ll(Oa(e[ni]), i)
              : ll(e, t.next);
          }
        }
        return null;
      }
      function yu(e, t) {
        return null !== t ? e[ni][Zn].projection[t.projection] : null;
      }
      function uc(e, t) {
        const n = q + e + 1;
        if (n < t.length) {
          const i = t[n],
            o = i[$t].firstChild;
          if (null !== o) return ll(i, o);
        }
        return t[rr];
      }
      function fc(e, t, n, i, o, l, u) {
        for (; null != n; ) {
          const v = i[n.index],
            M = n.type;
          if (
            (u && 0 === t && (v && Sr(li(v), i), (n.flags |= 2)),
            32 != (32 & n.flags))
          )
            if (8 & M) fc(e, t, n.child, i, o, l, !1), Zs(t, e, o, v, l);
            else if (32 & M) {
              const N = ic(n, i);
              let Y;
              for (; (Y = N()); ) Zs(t, e, o, Y, l);
              Zs(t, e, o, v, l);
            } else 16 & M ? Du(e, t, i, n, o, l) : Zs(t, e, o, v, l);
          n = u ? n.projectionNext : n.next;
        }
      }
      function Ra(e, t, n, i, o, l) {
        fc(n, i, e.firstChild, t, o, l, !1);
      }
      function Du(e, t, n, i, o, l) {
        const u = n[ni],
          M = u[Zn].projection[i.projection];
        if (Array.isArray(M))
          for (let N = 0; N < M.length; N++) Zs(t, e, o, M[N], l);
        else fc(e, t, M, u[Un], o, l, !0);
      }
      function Cu(e, t, n) {
        '' === n
          ? e.removeAttribute(t, 'class')
          : e.setAttribute(t, 'class', n);
      }
      function xu(e, t, n) {
        const { mergedAttrs: i, classes: o, styles: l } = n;
        null !== i && gn(e, t, i),
          null !== o && Cu(e, t, o),
          null !== l &&
            (function xg(e, t, n) {
              e.setAttribute(t, 'style', n);
            })(e, t, l);
      }
      function Qs(e) {
        return (
          (function pc() {
            if (void 0 === cl && ((cl = null), He.trustedTypes))
              try {
                cl = He.trustedTypes.createPolicy('angular', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return cl;
          })()?.createHTML(e) || e
        );
      }
      function Ag(e) {
        mc = e;
      }
      function Au(e) {
        return (
          (function gc() {
            if (void 0 === dl && ((dl = null), He.trustedTypes))
              try {
                dl = He.trustedTypes.createPolicy('angular#unsafe-bypass', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return dl;
          })()?.createScriptURL(e) || e
        );
      }
      class Ps {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${gt})`;
        }
      }
      class Sg extends Ps {
        getTypeName() {
          return 'HTML';
        }
      }
      class Ig extends Ps {
        getTypeName() {
          return 'Style';
        }
      }
      class kg extends Ps {
        getTypeName() {
          return 'Script';
        }
      }
      class Tg extends Ps {
        getTypeName() {
          return 'URL';
        }
      }
      class Og extends Ps {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function rs(e) {
        return e instanceof Ps ? e.changingThisBreaksApplicationSecurity : e;
      }
      function qs(e, t) {
        const n = (function Rg(e) {
          return (e instanceof Ps && e.getTypeName()) || null;
        })(e);
        if (null != n && n !== t) {
          if ('ResourceURL' === n && 'URL' === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${n} (see ${gt})`);
        }
        return n === t;
      }
      function Fg(e) {
        return new Sg(e);
      }
      function Pg(e) {
        return new Ig(e);
      }
      function Ng(e) {
        return new kg(e);
      }
      function Lg(e) {
        return new Tg(e);
      }
      function Bg(e) {
        return new Og(e);
      }
      class Vg {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const n = new window.DOMParser().parseFromString(
              Qs(t),
              'text/html',
            ).body;
            return null === n
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (n.removeChild(n.firstChild), n);
          } catch {
            return null;
          }
        }
      }
      class Hg {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                'sanitization-inert',
              ));
        }
        getInertBodyElement(t) {
          const n = this.inertDocument.createElement('template');
          return (n.innerHTML = Qs(t)), n;
        }
      }
      const jg = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function ul(e) {
        return (e = String(e)).match(jg) ? e : 'unsafe:' + e;
      }
      function os(e) {
        const t = {};
        for (const n of e.split(',')) t[n] = !0;
        return t;
      }
      function Fa(...e) {
        const t = {};
        for (const n of e)
          for (const i in n) n.hasOwnProperty(i) && (t[i] = !0);
        return t;
      }
      const Iu = os('area,br,col,hr,img,wbr'),
        ku = os('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Tu = os('rp,rt'),
        _c = Fa(
          Iu,
          Fa(
            ku,
            os(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul',
            ),
          ),
          Fa(
            Tu,
            os(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video',
            ),
          ),
          Fa(Tu, ku),
        ),
        vc = os('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        Ou = Fa(
          vc,
          os(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width',
          ),
          os(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext',
          ),
        ),
        zg = os('script,style,template');
      class $g {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let n = t.firstChild,
            i = !0;
          for (; n; )
            if (
              (n.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(n))
                : n.nodeType === Node.TEXT_NODE
                ? this.chars(n.nodeValue)
                : (this.sanitizedSomething = !0),
              i && n.firstChild)
            )
              n = n.firstChild;
            else
              for (; n; ) {
                n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                let o = this.checkClobberedElement(n, n.nextSibling);
                if (o) {
                  n = o;
                  break;
                }
                n = this.checkClobberedElement(n, n.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const n = t.nodeName.toLowerCase();
          if (!_c.hasOwnProperty(n))
            return (this.sanitizedSomething = !0), !zg.hasOwnProperty(n);
          this.buf.push('<'), this.buf.push(n);
          const i = t.attributes;
          for (let o = 0; o < i.length; o++) {
            const l = i.item(o),
              u = l.name,
              v = u.toLowerCase();
            if (!Ou.hasOwnProperty(v)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let M = l.value;
            vc[v] && (M = ul(M)), this.buf.push(' ', u, '="', Ru(M), '"');
          }
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const n = t.nodeName.toLowerCase();
          _c.hasOwnProperty(n) &&
            !Iu.hasOwnProperty(n) &&
            (this.buf.push('</'), this.buf.push(n), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(Ru(t));
        }
        checkClobberedElement(t, n) {
          if (
            n &&
            (t.compareDocumentPosition(n) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`,
            );
          return n;
        }
      }
      const Yg = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Gg = /([^\#-~ |!])/g;
      function Ru(e) {
        return e
          .replace(/&/g, '&amp;')
          .replace(Yg, function (t) {
            return (
              '&#' +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ';'
            );
          })
          .replace(Gg, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let hl;
      function Fu(e, t) {
        let n = null;
        try {
          hl =
            hl ||
            (function Su(e) {
              const t = new Hg(e);
              return (function Ug() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Qs(''),
                    'text/html',
                  );
                } catch {
                  return !1;
                }
              })()
                ? new Vg(t)
                : t;
            })(e);
          let i = t ? String(t) : '';
          n = hl.getInertBodyElement(i);
          let o = 5,
            l = i;
          do {
            if (0 === o)
              throw new Error(
                'Failed to sanitize html because the input is unstable',
              );
            o--, (i = l), (l = n.innerHTML), (n = hl.getInertBodyElement(i));
          } while (i !== l);
          return Qs(new $g().sanitizeChildren(bc(n) || n));
        } finally {
          if (n) {
            const i = bc(n) || n;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function bc(e) {
        return 'content' in e &&
          (function Wg(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Zi = (() => (
        ((Zi = Zi || {})[(Zi.NONE = 0)] = 'NONE'),
        (Zi[(Zi.HTML = 1)] = 'HTML'),
        (Zi[(Zi.STYLE = 2)] = 'STYLE'),
        (Zi[(Zi.SCRIPT = 3)] = 'SCRIPT'),
        (Zi[(Zi.URL = 4)] = 'URL'),
        (Zi[(Zi.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        Zi
      ))();
      function Pu(e) {
        const t = Pa();
        return t
          ? t.sanitize(Zi.URL, e) || ''
          : qs(e, 'URL')
          ? rs(e)
          : ul(at(e));
      }
      function Nu(e) {
        const t = Pa();
        if (t) return Au(t.sanitize(Zi.RESOURCE_URL, e) || '');
        if (qs(e, 'ResourceURL')) return Au(rs(e));
        throw new Le(904, !1);
      }
      function Lu(e, t, n) {
        return (function Jg(e, t) {
          return ('src' === t &&
            ('embed' === e ||
              'frame' === e ||
              'iframe' === e ||
              'media' === e ||
              'script' === e)) ||
            ('href' === t && ('base' === e || 'link' === e))
            ? Nu
            : Pu;
        })(
          t,
          n,
        )(e);
      }
      function Pa() {
        const e = lt();
        return e && e[qi];
      }
      const yc = new ei('ENVIRONMENT_INITIALIZER'),
        Bu = new ei('INJECTOR', -1),
        Vu = new ei('INJECTOR_DEF_TYPES');
      class Hu {
        get(t, n = ke) {
          if (n === ke) {
            const i = new Error(`NullInjectorError: No provider for ${ue(t)}!`);
            throw ((i.name = 'NullInjectorError'), i);
          }
          return n;
        }
      }
      function e_(e) {
        return { ɵproviders: e };
      }
      function t_(...e) {
        return { ɵproviders: Uu(0, e), ɵfromNgModule: !0 };
      }
      function Uu(e, ...t) {
        const n = [],
          i = new Set();
        let o;
        return (
          uo(t, l => {
            const u = l;
            Dc(u, n, [], i) && (o || (o = []), o.push(u));
          }),
          void 0 !== o && ju(o, n),
          n
        );
      }
      function ju(e, t) {
        for (let n = 0; n < e.length; n++) {
          const { providers: o } = e[n];
          Cc(o, l => {
            t.push(l);
          });
        }
      }
      function Dc(e, t, n, i) {
        if (!(e = se(e))) return !1;
        let o = null,
          l = mn(e);
        const u = !l && Tn(e);
        if (l || u) {
          if (u && !u.standalone) return !1;
          o = e;
        } else {
          const M = e.ngModule;
          if (((l = mn(M)), !l)) return !1;
          o = M;
        }
        const v = i.has(o);
        if (u) {
          if (v) return !1;
          if ((i.add(o), u.dependencies)) {
            const M =
              'function' == typeof u.dependencies
                ? u.dependencies()
                : u.dependencies;
            for (const N of M) Dc(N, t, n, i);
          }
        } else {
          if (!l) return !1;
          {
            if (null != l.imports && !v) {
              let N;
              i.add(o);
              try {
                uo(l.imports, Y => {
                  Dc(Y, t, n, i) && (N || (N = []), N.push(Y));
                });
              } finally {
              }
              void 0 !== N && ju(N, t);
            }
            if (!v) {
              const N = $i(o) || (() => new o());
              t.push(
                { provide: o, useFactory: N, deps: on },
                { provide: Vu, useValue: o, multi: !0 },
                { provide: yc, useValue: () => Je(o), multi: !0 },
              );
            }
            const M = l.providers;
            null == M ||
              v ||
              Cc(M, Y => {
                t.push(Y);
              });
          }
        }
        return o !== e && void 0 !== e.providers;
      }
      function Cc(e, t) {
        for (let n of e)
          ze(n) && (n = n.ɵproviders), Array.isArray(n) ? Cc(n, t) : t(n);
      }
      const n_ = he({ provide: String, useValue: he });
      function xc(e) {
        return null !== e && 'object' == typeof e && n_ in e;
      }
      function Ns(e) {
        return 'function' == typeof e;
      }
      const Ec = new ei('Set Injector scope.'),
        fl = {},
        r_ = {};
      let Mc;
      function pl() {
        return void 0 === Mc && (Mc = new Hu()), Mc;
      }
      class Ls {}
      class Yu extends Ls {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, n, i, o) {
          super(),
            (this.parent = n),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Ac(t, u => this.processProvider(u)),
            this.records.set(Bu, Xs(void 0, this)),
            o.has('environment') && this.records.set(Ls, Xs(void 0, this));
          const l = this.records.get(Ec);
          null != l && 'string' == typeof l.value && this.scopes.add(l.value),
            (this.injectorDefTypes = new Set(this.get(Vu.multi, on, ht.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const n = Oe(this),
            i = $(void 0);
          try {
            return t();
          } finally {
            Oe(n), $(i);
          }
        }
        get(t, n = ke, i = ht.Default) {
          this.assertNotDestroyed(), (i = R(i));
          const o = Oe(this),
            l = $(void 0);
          try {
            if (!(i & ht.SkipSelf)) {
              let v = this.records.get(t);
              if (void 0 === v) {
                const M =
                  (function c_(e) {
                    return (
                      'function' == typeof e ||
                      ('object' == typeof e && e instanceof ei)
                    );
                  })(t) && un(t);
                (v = M && this.injectableDefInScope(M) ? Xs(wc(t), fl) : null),
                  this.records.set(t, v);
              }
              if (null != v) return this.hydrate(t, v);
            }
            return (i & ht.Self ? pl() : this.parent).get(
              t,
              (n = i & ht.Optional && n === ke ? null : n),
            );
          } catch (u) {
            if ('NullInjectorError' === u.name) {
              if (((u[me] = u[me] || []).unshift(ue(t)), o)) throw u;
              return (function Q(e, t, n, i) {
                const o = e[me];
                throw (
                  (t[Rt] && o.unshift(t[Rt]),
                  (e.message = (function We(e, t, n, i = null) {
                    e =
                      e && '\n' === e.charAt(0) && e.charAt(1) == Mt
                        ? e.slice(2)
                        : e;
                    let o = ue(t);
                    if (Array.isArray(t)) o = t.map(ue).join(' -> ');
                    else if ('object' == typeof t) {
                      let l = [];
                      for (let u in t)
                        if (t.hasOwnProperty(u)) {
                          let v = t[u];
                          l.push(
                            u +
                              ':' +
                              ('string' == typeof v
                                ? JSON.stringify(v)
                                : ue(v)),
                          );
                        }
                      o = `{${l.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${o}]: ${e.replace(
                      et,
                      '\n  ',
                    )}`;
                  })('\n' + e.message, o, n, i)),
                  (e[fe] = o),
                  (e[me] = null),
                  e)
                );
              })(u, t, 'R3InjectorError', this.source);
            }
            throw u;
          } finally {
            $(l), Oe(o);
          }
        }
        resolveInjectorInitializers() {
          const t = Oe(this),
            n = $(void 0);
          try {
            const i = this.get(yc.multi, on, ht.Self);
            for (const o of i) o();
          } finally {
            Oe(t), $(n);
          }
        }
        toString() {
          const t = [],
            n = this.records;
          for (const i of n.keys()) t.push(ue(i));
          return `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Le(205, !1);
        }
        processProvider(t) {
          let n = Ns((t = se(t))) ? t : se(t && t.provide);
          const i = (function s_(e) {
            return xc(e) ? Xs(void 0, e.useValue) : Xs(Gu(e), fl);
          })(t);
          if (Ns(t) || !0 !== t.multi) this.records.get(n);
          else {
            let o = this.records.get(n);
            o ||
              ((o = Xs(void 0, fl, !0)),
              (o.factory = () => b(o.multi)),
              this.records.set(n, o)),
              (n = t),
              o.multi.push(t);
          }
          this.records.set(n, i);
        }
        hydrate(t, n) {
          return (
            n.value === fl && ((n.value = r_), (n.value = n.factory())),
            'object' == typeof n.value &&
              n.value &&
              (function l_(e) {
                return (
                  null !== e &&
                  'object' == typeof e &&
                  'function' == typeof e.ngOnDestroy
                );
              })(n.value) &&
              this._ngOnDestroyHooks.add(n.value),
            n.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const n = se(t.providedIn);
          return 'string' == typeof n
            ? 'any' === n || this.scopes.has(n)
            : this.injectorDefTypes.has(n);
        }
      }
      function wc(e) {
        const t = un(e),
          n = null !== t ? t.factory : $i(e);
        if (null !== n) return n;
        if (e instanceof ei) throw new Le(204, !1);
        if (e instanceof Function)
          return (function o_(e) {
            const t = e.length;
            if (t > 0) throw (f(t, '?'), new Le(204, !1));
            const n = (function Kt(e) {
              return (e && (e[wn] || e[Jt])) || null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Le(204, !1);
      }
      function Gu(e, t, n) {
        let i;
        if (Ns(e)) {
          const o = se(e);
          return $i(o) || wc(o);
        }
        if (xc(e)) i = () => se(e.useValue);
        else if (
          (function $u(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          i = () => e.useFactory(...b(e.deps || []));
        else if (
          (function zu(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => Je(se(e.useExisting));
        else {
          const o = se(e && (e.useClass || e.provide));
          if (
            !(function a_(e) {
              return !!e.deps;
            })(e)
          )
            return $i(o) || wc(o);
          i = () => new o(...b(e.deps));
        }
        return i;
      }
      function Xs(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function Ac(e, t) {
        for (const n of e)
          Array.isArray(n) ? Ac(n, t) : n && ze(n) ? Ac(n.ɵproviders, t) : t(n);
      }
      class d_ {}
      class Wu {}
      class h_ {
        resolveComponentFactory(t) {
          throw (function u_(e) {
            const t = Error(
              `No component factory found for ${ue(
                e,
              )}. Did you add it to @NgModule.entryComponents?`,
            );
            return (t.ngComponent = e), t;
          })(t);
        }
      }
      let Na = (() => {
        class e {}
        return (e.NULL = new h_()), e;
      })();
      function f_() {
        return Js(ii(), lt());
      }
      function Js(e, t) {
        return new La(yi(e, t));
      }
      let La = (() => {
        class e {
          constructor(n) {
            this.nativeElement = n;
          }
        }
        return (e.__NG_ELEMENT_ID__ = f_), e;
      })();
      function p_(e) {
        return e instanceof La ? e.nativeElement : e;
      }
      class Zu {}
      let m_ = (() => {
          class e {}
          return (
            (e.__NG_ELEMENT_ID__ = () =>
              (function g_() {
                const e = lt(),
                  n = Ei(ii().index, e);
                return (Ie(n) ? n : e)[fn];
              })()),
            e
          );
        })(),
        __ = (() => {
          class e {}
          return (
            (e.ɵprov = nt({
              token: e,
              providedIn: 'root',
              factory: () => null,
            })),
            e
          );
        })();
      class Qu {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const v_ = new Qu('15.2.8'),
        Sc = {},
        Ic = 'ngOriginalError';
      function kc(e) {
        return e[Ic];
      }
      class Ba {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const n = this._findOriginalError(t);
          this._console.error('ERROR', t),
            n && this._console.error('ORIGINAL ERROR', n);
        }
        _findOriginalError(t) {
          let n = t && kc(t);
          for (; n && kc(n); ) n = kc(n);
          return n || null;
        }
      }
      function ss(e) {
        return e instanceof Function ? e() : e;
      }
      function Xu(e, t, n) {
        let i = e.length;
        for (;;) {
          const o = e.indexOf(t, n);
          if (-1 === o) return o;
          if (0 === o || e.charCodeAt(o - 1) <= 32) {
            const l = t.length;
            if (o + l === i || e.charCodeAt(o + l) <= 32) return o;
          }
          n = o + 1;
        }
      }
      const Ju = 'ng-template';
      function I_(e, t, n) {
        let i = 0,
          o = !0;
        for (; i < e.length; ) {
          let l = e[i++];
          if ('string' == typeof l && o) {
            const u = e[i++];
            if (n && 'class' === l && -1 !== Xu(u.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === l) {
              for (; i < e.length && 'string' == typeof (l = e[i++]); )
                if (l.toLowerCase() === t) return !0;
              return !1;
            }
            'number' == typeof l && (o = !1);
          }
        }
        return !1;
      }
      function eh(e) {
        return 4 === e.type && e.value !== Ju;
      }
      function k_(e, t, n) {
        return t === (4 !== e.type || n ? e.value : Ju);
      }
      function T_(e, t, n) {
        let i = 4;
        const o = e.attrs || [],
          l = (function F_(e) {
            for (let t = 0; t < e.length; t++) if (Yn(e[t])) return t;
            return e.length;
          })(o);
        let u = !1;
        for (let v = 0; v < t.length; v++) {
          const M = t[v];
          if ('number' != typeof M) {
            if (!u)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ('' !== M && !k_(e, M, n)) || ('' === M && 1 === t.length))
                ) {
                  if (Fo(i)) return !1;
                  u = !0;
                }
              } else {
                const N = 8 & i ? M : t[++v];
                if (8 & i && null !== e.attrs) {
                  if (!I_(e.attrs, N, n)) {
                    if (Fo(i)) return !1;
                    u = !0;
                  }
                  continue;
                }
                const ie = O_(8 & i ? 'class' : M, o, eh(e), n);
                if (-1 === ie) {
                  if (Fo(i)) return !1;
                  u = !0;
                  continue;
                }
                if ('' !== N) {
                  let Fe;
                  Fe = ie > l ? '' : o[ie + 1].toLowerCase();
                  const Qe = 8 & i ? Fe : null;
                  if ((Qe && -1 !== Xu(Qe, N, 0)) || (2 & i && N !== Fe)) {
                    if (Fo(i)) return !1;
                    u = !0;
                  }
                }
              }
          } else {
            if (!u && !Fo(i) && !Fo(M)) return !1;
            if (u && Fo(M)) continue;
            (u = !1), (i = M | (1 & i));
          }
        }
        return Fo(i) || u;
      }
      function Fo(e) {
        return 0 == (1 & e);
      }
      function O_(e, t, n, i) {
        if (null === t) return -1;
        let o = 0;
        if (i || !n) {
          let l = !1;
          for (; o < t.length; ) {
            const u = t[o];
            if (u === e) return o;
            if (3 === u || 6 === u) l = !0;
            else {
              if (1 === u || 2 === u) {
                let v = t[++o];
                for (; 'string' == typeof v; ) v = t[++o];
                continue;
              }
              if (4 === u) break;
              if (0 === u) {
                o += 4;
                continue;
              }
            }
            o += l ? 1 : 2;
          }
          return -1;
        }
        return (function P_(e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const i = e[n];
              if ('number' == typeof i) return -1;
              if (i === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function th(e, t, n = !1) {
        for (let i = 0; i < t.length; i++) if (T_(e, t[i], n)) return !0;
        return !1;
      }
      function N_(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const i = t[n];
          if (e.length === i.length) {
            for (let o = 0; o < e.length; o++) if (e[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function nh(e, t) {
        return e ? ':not(' + t.trim() + ')' : t;
      }
      function L_(e) {
        let t = e[0],
          n = 1,
          i = 2,
          o = '',
          l = !1;
        for (; n < e.length; ) {
          let u = e[n];
          if ('string' == typeof u)
            if (2 & i) {
              const v = e[++n];
              o += '[' + u + (v.length > 0 ? '="' + v + '"' : '') + ']';
            } else 8 & i ? (o += '.' + u) : 4 & i && (o += ' ' + u);
          else
            '' !== o && !Fo(u) && ((t += nh(l, o)), (o = '')),
              (i = u),
              (l = l || !Fo(i));
          n++;
        }
        return '' !== o && (t += nh(l, o)), t;
      }
      const Ln = {};
      function ih(e) {
        rh(kn(), lt(), Ht() + e, !1);
      }
      function rh(e, t, n, i) {
        if (!i)
          if (3 == (3 & t[dn])) {
            const l = e.preOrderCheckHooks;
            null !== l && wr(t, l, n);
          } else {
            const l = e.preOrderHooks;
            null !== l && Ji(t, l, 0, n);
          }
        yn(n);
      }
      function lh(e, t = null, n = null, i) {
        const o = ch(e, t, n, i);
        return o.resolveInjectorInitializers(), o;
      }
      function ch(e, t = null, n = null, i, o = new Set()) {
        const l = [n || on, t_(e)];
        return (
          (i = i || ('object' == typeof e ? void 0 : ue(e))),
          new Yu(l, t || pl(), i || null, o)
        );
      }
      let Bs = (() => {
        class e {
          static create(n, i) {
            if (Array.isArray(n)) return lh({ name: '' }, i, n, '');
            {
              const o = n.name ?? '';
              return lh({ name: o }, n.parent, n.providers, o);
            }
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = ke),
          (e.NULL = new Hu()),
          (e.ɵprov = nt({
            token: e,
            providedIn: 'any',
            factory: () => Je(Bu),
          })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      function na(e, t = ht.Default) {
        const n = lt();
        return null === n ? Je(e, t) : Ca(ii(), n, se(e), t);
      }
      function gh() {
        throw new Error('invalid');
      }
      function _h(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const l = n[i + 1];
            if (-1 !== l) {
              const u = e.data[l];
              B(n[i]), u.contentQueries(2, t[l], l);
            }
          }
      }
      function gl(e, t, n, i, o, l, u, v, M, N, Y) {
        const ie = t.blueprint.slice();
        return (
          (ie[mi] = o),
          (ie[dn] = 76 | i),
          (null !== Y || (e && 1024 & e[dn])) && (ie[dn] |= 1024),
          Nr(ie),
          (ie[Un] = ie[Ii] = e),
          (ie[An] = n),
          (ie[_i] = u || (e && e[_i])),
          (ie[fn] = v || (e && e[fn])),
          (ie[qi] = M || (e && e[qi]) || null),
          (ie[gi] = N || (e && e[gi]) || null),
          (ie[Zn] = l),
          (ie[fr] = (function qm() {
            return Qm++;
          })()),
          (ie[Bn] = Y),
          (ie[ni] = 2 == t.type ? e[ni] : ie),
          ie
        );
      }
      function ia(e, t, n, i, o) {
        let l = e.data[t];
        if (null === l)
          (l = (function Pc(e, t, n, i, o) {
            const l = Vi(),
              u = go(),
              M = (e.data[t] = (function cv(e, t, n, i, o, l) {
                return {
                  type: n,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: o,
                  attrs: l,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tView: null,
                  next: null,
                  prev: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, u ? l : l && l.parent, n, t, i, o));
            return (
              null === e.firstChild && (e.firstChild = M),
              null !== l &&
                (u
                  ? null == l.child && null !== M.parent && (l.child = M)
                  : null === l.next && ((l.next = M), (M.prev = l))),
              M
            );
          })(e, t, n, i, o)),
            (function lo() {
              return bn.lFrame.inI18n;
            })() && (l.flags |= 32);
        else if (64 & l.type) {
          (l.type = n), (l.value = i), (l.attrs = o);
          const u = (function or() {
            const e = bn.lFrame,
              t = e.currentTNode;
            return e.isParent ? t : t.parent;
          })();
          l.injectorIndex = null === u ? -1 : u.injectorIndex;
        }
        return sr(l, !0), l;
      }
      function Va(e, t, n, i) {
        if (0 === n) return -1;
        const o = t.length;
        for (let l = 0; l < n; l++)
          t.push(i), e.blueprint.push(i), e.data.push(null);
        return o;
      }
      function Nc(e, t, n) {
        S(t);
        try {
          const i = e.viewQuery;
          null !== i && Yc(1, i, n);
          const o = e.template;
          null !== o && vh(e, t, o, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && _h(e, t),
            e.staticViewQueries && Yc(2, e.viewQuery, n);
          const l = e.components;
          null !== l &&
            (function sv(e, t) {
              for (let n = 0; n < t.length; n++) Iv(e, t[n]);
            })(t, l);
        } catch (i) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[dn] &= -5), qe();
        }
      }
      function _l(e, t, n, i) {
        const o = t[dn];
        if (128 != (128 & o)) {
          S(t);
          try {
            Nr(t),
              (function Gr(e) {
                return (bn.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== n && vh(e, t, n, 2, i);
            const u = 3 == (3 & o);
            if (u) {
              const N = e.preOrderCheckHooks;
              null !== N && wr(t, N, null);
            } else {
              const N = e.preOrderHooks;
              null !== N && Ji(t, N, 0, null), y(t, 0);
            }
            if (
              ((function Av(e) {
                for (let t = rc(e); null !== t; t = oc(t)) {
                  if (!t[kr]) continue;
                  const n = t[zi];
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    512 & o[dn] || ao(o[Un], 1), (o[dn] |= 512);
                  }
                }
              })(t),
              (function wv(e) {
                for (let t = rc(e); null !== t; t = oc(t))
                  for (let n = q; n < t.length; n++) {
                    const i = t[n],
                      o = i[$t];
                    Pr(i) && _l(o, i, o.template, i[An]);
                  }
              })(t),
              null !== e.contentQueries && _h(e, t),
              u)
            ) {
              const N = e.contentCheckHooks;
              null !== N && wr(t, N);
            } else {
              const N = e.contentHooks;
              null !== N && Ji(t, N, 1), y(t, 1);
            }
            !(function rv(e, t) {
              const n = e.hostBindingOpCodes;
              if (null !== n)
                try {
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    if (o < 0) yn(~o);
                    else {
                      const l = o,
                        u = n[++i],
                        v = n[++i];
                      Vo(u, l), v(2, t[l]);
                    }
                  }
                } finally {
                  yn(-1);
                }
            })(e, t);
            const v = e.components;
            null !== v &&
              (function ov(e, t) {
                for (let n = 0; n < t.length; n++) Sv(e, t[n]);
              })(t, v);
            const M = e.viewQuery;
            if ((null !== M && Yc(2, M, i), u)) {
              const N = e.viewCheckHooks;
              null !== N && wr(t, N);
            } else {
              const N = e.viewHooks;
              null !== N && Ji(t, N, 2), y(t, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (t[dn] &= -41),
              512 & t[dn] && ((t[dn] &= -513), ao(t[Un], -1));
          } finally {
            qe();
          }
        }
      }
      function vh(e, t, n, i, o) {
        const l = Ht(),
          u = 2 & i;
        try {
          yn(-1),
            u && t.length > Hn && rh(e, t, Hn, !1),
            bi(u ? 2 : 0, o),
            n(i, o);
        } finally {
          yn(l), bi(u ? 3 : 1, o);
        }
      }
      function Lc(e, t, n) {
        if (kt(t)) {
          const o = t.directiveEnd;
          for (let l = t.directiveStart; l < o; l++) {
            const u = e.data[l];
            u.contentQueries && u.contentQueries(1, n[l], l);
          }
        }
      }
      function Bc(e, t, n) {
        it() &&
          ((function gv(e, t, n, i) {
            const o = n.directiveStart,
              l = n.directiveEnd;
            It(n) &&
              (function xv(e, t, n) {
                const i = yi(t, e),
                  o = bh(n),
                  l = e[_i],
                  u = vl(
                    e,
                    gl(
                      e,
                      o,
                      null,
                      n.onPush ? 32 : 16,
                      i,
                      t,
                      l,
                      l.createRenderer(i, n),
                      null,
                      null,
                      null,
                    ),
                  );
                e[t.index] = u;
              })(t, n, e.data[o + n.componentOffset]),
              e.firstCreatePass || us(n, t),
              Sr(i, t);
            const u = n.initialInputs;
            for (let v = o; v < l; v++) {
              const M = e.data[v],
                N = Io(t, e, v, n);
              Sr(N, t),
                null !== u && Ev(0, v - o, N, M, 0, u),
                vn(M) && (Ei(n.index, t)[An] = Io(t, e, v, n));
            }
          })(e, t, n, yi(n, t)),
          64 == (64 & n.flags) && Eh(e, t, n));
      }
      function Vc(e, t, n = yi) {
        const i = t.localNames;
        if (null !== i) {
          let o = t.index + 1;
          for (let l = 0; l < i.length; l += 2) {
            const u = i[l + 1],
              v = -1 === u ? n(t, e) : e[u];
            e[o++] = v;
          }
        }
      }
      function bh(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = Hc(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
            ))
          : t;
      }
      function Hc(e, t, n, i, o, l, u, v, M, N) {
        const Y = Hn + i,
          ie = Y + o,
          Fe = (function av(e, t) {
            const n = [];
            for (let i = 0; i < t; i++) n.push(i < e ? null : Ln);
            return n;
          })(Y, ie),
          Qe = 'function' == typeof N ? N() : N;
        return (Fe[$t] = {
          type: e,
          blueprint: Fe,
          template: n,
          queries: null,
          viewQuery: v,
          declTNode: t,
          data: Fe.slice().fill(null, Y),
          bindingStartIndex: Y,
          expandoStartIndex: ie,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof l ? l() : l,
          pipeRegistry: 'function' == typeof u ? u() : u,
          firstChild: null,
          schemas: M,
          consts: Qe,
          incompleteFirstPass: !1,
        });
      }
      function yh(e, t, n, i) {
        const o = wh(t);
        null === n
          ? o.push(i)
          : (o.push(n), e.firstCreatePass && Ah(e).push(i, o.length - 1));
      }
      function Dh(e, t, n, i) {
        for (let o in e)
          if (e.hasOwnProperty(o)) {
            n = null === n ? {} : n;
            const l = e[o];
            null === i
              ? Ch(n, t, o, l)
              : i.hasOwnProperty(o) && Ch(n, t, i[o], l);
          }
        return n;
      }
      function Ch(e, t, n, i) {
        e.hasOwnProperty(n) ? e[n].push(t, i) : (e[n] = [t, i]);
      }
      function ho(e, t, n, i, o, l, u, v) {
        const M = yi(t, n);
        let Y,
          N = t.inputs;
        !v && null != N && (Y = N[i])
          ? (Gc(e, n, Y, i, o),
            It(t) &&
              (function hv(e, t) {
                const n = Ei(t, e);
                16 & n[dn] || (n[dn] |= 32);
              })(n, t.index))
          : 3 & t.type &&
            ((i = (function uv(e) {
              return 'class' === e
                ? 'className'
                : 'for' === e
                ? 'htmlFor'
                : 'formaction' === e
                ? 'formAction'
                : 'innerHtml' === e
                ? 'innerHTML'
                : 'readonly' === e
                ? 'readOnly'
                : 'tabindex' === e
                ? 'tabIndex'
                : e;
            })(i)),
            (o = null != u ? u(o, t.value || '', i) : o),
            l.setProperty(M, i, o));
      }
      function Uc(e, t, n, i) {
        if (it()) {
          const o = null === i ? null : { '': -1 },
            l = (function vv(e, t) {
              const n = e.directiveRegistry;
              let i = null,
                o = null;
              if (n)
                for (let l = 0; l < n.length; l++) {
                  const u = n[l];
                  if (th(t, u.selectors, !1))
                    if ((i || (i = []), vn(u)))
                      if (null !== u.findHostDirectiveDefs) {
                        const v = [];
                        (o = o || new Map()),
                          u.findHostDirectiveDefs(u, v, o),
                          i.unshift(...v, u),
                          jc(e, t, v.length);
                      } else i.unshift(u), jc(e, t, 0);
                    else
                      (o = o || new Map()),
                        u.findHostDirectiveDefs?.(u, i, o),
                        i.push(u);
                }
              return null === i ? null : [i, o];
            })(e, n);
          let u, v;
          null === l ? (u = v = null) : ([u, v] = l),
            null !== u && xh(e, t, n, u, o, v),
            o &&
              (function bv(e, t, n) {
                if (t) {
                  const i = (e.localNames = []);
                  for (let o = 0; o < t.length; o += 2) {
                    const l = n[t[o + 1]];
                    if (null == l) throw new Le(-301, !1);
                    i.push(t[o], l);
                  }
                }
              })(n, i, o);
        }
        n.mergedAttrs = si(n.mergedAttrs, n.attrs);
      }
      function xh(e, t, n, i, o, l) {
        for (let N = 0; N < i.length; N++) tr(us(n, t), e, i[N].type);
        !(function Dv(e, t, n) {
          (e.flags |= 1),
            (e.directiveStart = t),
            (e.directiveEnd = t + n),
            (e.providerIndexes = t);
        })(n, e.data.length, i.length);
        for (let N = 0; N < i.length; N++) {
          const Y = i[N];
          Y.providersResolver && Y.providersResolver(Y);
        }
        let u = !1,
          v = !1,
          M = Va(e, t, i.length, null);
        for (let N = 0; N < i.length; N++) {
          const Y = i[N];
          (n.mergedAttrs = si(n.mergedAttrs, Y.hostAttrs)),
            Cv(e, n, t, M, Y),
            yv(M, Y, o),
            null !== Y.contentQueries && (n.flags |= 4),
            (null !== Y.hostBindings ||
              null !== Y.hostAttrs ||
              0 !== Y.hostVars) &&
              (n.flags |= 64);
          const ie = Y.type.prototype;
          !u &&
            (ie.ngOnChanges || ie.ngOnInit || ie.ngDoCheck) &&
            ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index),
            (u = !0)),
            !v &&
              (ie.ngOnChanges || ie.ngDoCheck) &&
              ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(
                n.index,
              ),
              (v = !0)),
            M++;
        }
        !(function dv(e, t, n) {
          const o = t.directiveEnd,
            l = e.data,
            u = t.attrs,
            v = [];
          let M = null,
            N = null;
          for (let Y = t.directiveStart; Y < o; Y++) {
            const ie = l[Y],
              Fe = n ? n.get(ie) : null,
              yt = Fe ? Fe.outputs : null;
            (M = Dh(ie.inputs, Y, M, Fe ? Fe.inputs : null)),
              (N = Dh(ie.outputs, Y, N, yt));
            const Nt = null === M || null === u || eh(t) ? null : Mv(M, Y, u);
            v.push(Nt);
          }
          null !== M &&
            (M.hasOwnProperty('class') && (t.flags |= 8),
            M.hasOwnProperty('style') && (t.flags |= 16)),
            (t.initialInputs = v),
            (t.inputs = M),
            (t.outputs = N);
        })(e, n, l);
      }
      function Eh(e, t, n) {
        const i = n.directiveStart,
          o = n.directiveEnd,
          l = n.index,
          u = (function Xo() {
            return bn.lFrame.currentDirectiveIndex;
          })();
        try {
          yn(l);
          for (let v = i; v < o; v++) {
            const M = e.data[v],
              N = t[v];
            _o(v),
              (null !== M.hostBindings ||
                0 !== M.hostVars ||
                null !== M.hostAttrs) &&
                _v(M, N);
          }
        } finally {
          yn(-1), _o(u);
        }
      }
      function _v(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function jc(e, t, n) {
        (t.componentOffset = n),
          (e.components ?? (e.components = [])).push(t.index);
      }
      function yv(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) n[t.exportAs[i]] = e;
          vn(t) && (n[''] = e);
        }
      }
      function Cv(e, t, n, i, o) {
        e.data[i] = o;
        const l = o.factory || (o.factory = $i(o.type)),
          u = new ce(l, vn(o), na);
        (e.blueprint[i] = u),
          (n[i] = u),
          (function pv(e, t, n, i, o) {
            const l = o.hostBindings;
            if (l) {
              let u = e.hostBindingOpCodes;
              null === u && (u = e.hostBindingOpCodes = []);
              const v = ~t.index;
              (function mv(e) {
                let t = e.length;
                for (; t > 0; ) {
                  const n = e[--t];
                  if ('number' == typeof n && n < 0) return n;
                }
                return 0;
              })(u) != v && u.push(v),
                u.push(n, i, l);
            }
          })(e, t, i, Va(e, n, o.hostVars, Ln), o);
      }
      function Go(e, t, n, i, o, l) {
        const u = yi(e, t);
        !(function zc(e, t, n, i, o, l, u) {
          if (null == l) e.removeAttribute(t, o, n);
          else {
            const v = null == u ? at(l) : u(l, i || '', o);
            e.setAttribute(t, o, v, n);
          }
        })(t[fn], u, l, e.value, n, i, o);
      }
      function Ev(e, t, n, i, o, l) {
        const u = l[t];
        if (null !== u) {
          const v = i.setInput;
          for (let M = 0; M < u.length; ) {
            const N = u[M++],
              Y = u[M++],
              ie = u[M++];
            null !== v ? i.setInput(n, ie, N, Y) : (n[Y] = ie);
          }
        }
      }
      function Mv(e, t, n) {
        let i = null,
          o = 0;
        for (; o < n.length; ) {
          const l = n[o];
          if (0 !== l)
            if (5 !== l) {
              if ('number' == typeof l) break;
              if (e.hasOwnProperty(l)) {
                null === i && (i = []);
                const u = e[l];
                for (let v = 0; v < u.length; v += 2)
                  if (u[v] === t) {
                    i.push(l, u[v + 1], n[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function Mh(e, t, n, i) {
        return [e, !0, !1, t, null, 0, i, n, null, null];
      }
      function Sv(e, t) {
        const n = Ei(t, e);
        if (Pr(n)) {
          const i = n[$t];
          48 & n[dn] ? _l(i, n, i.template, n[An]) : n[Xn] > 0 && $c(n);
        }
      }
      function $c(e) {
        for (let i = rc(e); null !== i; i = oc(i))
          for (let o = q; o < i.length; o++) {
            const l = i[o];
            if (Pr(l))
              if (512 & l[dn]) {
                const u = l[$t];
                _l(u, l, u.template, l[An]);
              } else l[Xn] > 0 && $c(l);
          }
        const n = e[$t].components;
        if (null !== n)
          for (let i = 0; i < n.length; i++) {
            const o = Ei(n[i], e);
            Pr(o) && o[Xn] > 0 && $c(o);
          }
      }
      function Iv(e, t) {
        const n = Ei(t, e),
          i = n[$t];
        (function kv(e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(i, n),
          Nc(i, n, n[An]);
      }
      function vl(e, t) {
        return e[Ui] ? (e[_r][fi] = t) : (e[Ui] = t), (e[_r] = t), t;
      }
      function bl(e) {
        for (; e; ) {
          e[dn] |= 32;
          const t = Oa(e);
          if (Nn(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function yl(e, t, n, i = !0) {
        const o = t[_i];
        o.begin && o.begin();
        try {
          _l(e, t, e.template, n);
        } catch (u) {
          throw (i && Ih(t, u), u);
        } finally {
          o.end && o.end();
        }
      }
      function Yc(e, t, n) {
        B(0), t(e, n);
      }
      function wh(e) {
        return e[pi] || (e[pi] = []);
      }
      function Ah(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Sh(e, t, n) {
        return (
          (null === e || vn(e)) &&
            (n = (function ci(e) {
              for (; Array.isArray(e); ) {
                if ('object' == typeof e[Li]) return e;
                e = e[mi];
              }
              return null;
            })(n[t.index])),
          n[fn]
        );
      }
      function Ih(e, t) {
        const n = e[gi],
          i = n ? n.get(Ba, null) : null;
        i && i.handleError(t);
      }
      function Gc(e, t, n, i, o) {
        for (let l = 0; l < n.length; ) {
          const u = n[l++],
            v = n[l++],
            M = t[u],
            N = e.data[u];
          null !== N.setInput ? N.setInput(M, o, i, v) : (M[v] = o);
        }
      }
      function Dl(e, t, n) {
        let i = n ? e.styles : null,
          o = n ? e.classes : null,
          l = 0;
        if (null !== t)
          for (let u = 0; u < t.length; u++) {
            const v = t[u];
            'number' == typeof v
              ? (l = v)
              : 1 == l
              ? (o = le(o, v))
              : 2 == l && (i = le(i, v + ': ' + t[++u] + ';'));
          }
        n ? (e.styles = i) : (e.stylesWithoutHost = i),
          n ? (e.classes = o) : (e.classesWithoutHost = o);
      }
      function Cl(e, t, n, i, o = !1) {
        for (; null !== n; ) {
          const l = t[n.index];
          if ((null !== l && i.push(li(l)), Ze(l)))
            for (let v = q; v < l.length; v++) {
              const M = l[v],
                N = M[$t].firstChild;
              null !== N && Cl(M[$t], M, N, i);
            }
          const u = n.type;
          if (8 & u) Cl(e, t, n.child, i);
          else if (32 & u) {
            const v = ic(n, t);
            let M;
            for (; (M = v()); ) i.push(M);
          } else if (16 & u) {
            const v = yu(t, n);
            if (Array.isArray(v)) i.push(...v);
            else {
              const M = Oa(t[ni]);
              Cl(M[$t], M, v, i, !0);
            }
          }
          n = o ? n.projectionNext : n.next;
        }
        return i;
      }
      class Ha {
        get rootNodes() {
          const t = this._lView,
            n = t[$t];
          return Cl(n, t, n.firstChild, []);
        }
        constructor(t, n) {
          (this._lView = t),
            (this._cdRefInjectingView = n),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[An];
        }
        set context(t) {
          this._lView[An] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[dn]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Un];
            if (Ze(t)) {
              const n = t[Ki],
                i = n ? n.indexOf(this) : -1;
              i > -1 && (lc(t, i), Is(n, i));
            }
            this._attachedToViewContainer = !1;
          }
          uu(this._lView[$t], this._lView);
        }
        onDestroy(t) {
          yh(this._lView[$t], this._lView, null, t);
        }
        markForCheck() {
          bl(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[dn] &= -65;
        }
        reattach() {
          this._lView[dn] |= 64;
        }
        detectChanges() {
          yl(this._lView[$t], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Le(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function hg(e, t) {
              Ra(e, t, t[fn], 2, null, null);
            })(this._lView[$t], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Le(902, !1);
          this._appRef = t;
        }
      }
      class Tv extends Ha {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          yl(t[$t], t, t[An], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class kh extends Na {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const n = Tn(t);
          return new Ua(n, this.ngModule);
        }
      }
      function Th(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      class Rv {
        constructor(t, n) {
          (this.injector = t), (this.parentInjector = n);
        }
        get(t, n, i) {
          i = R(i);
          const o = this.injector.get(t, Sc, i);
          return o !== Sc || n === Sc ? o : this.parentInjector.get(t, n, i);
        }
      }
      class Ua extends Wu {
        get inputs() {
          return Th(this.componentDef.inputs);
        }
        get outputs() {
          return Th(this.componentDef.outputs);
        }
        constructor(t, n) {
          super(),
            (this.componentDef = t),
            (this.ngModule = n),
            (this.componentType = t.type),
            (this.selector = (function B_(e) {
              return e.map(L_).join(',');
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!n);
        }
        create(t, n, i, o) {
          let l = (o = o || this.ngModule) instanceof Ls ? o : o?.injector;
          l &&
            null !== this.componentDef.getStandaloneInjector &&
            (l = this.componentDef.getStandaloneInjector(l) || l);
          const u = l ? new Rv(t, l) : t,
            v = u.get(Zu, null);
          if (null === v) throw new Le(407, !1);
          const M = u.get(__, null),
            N = v.createRenderer(null, this.componentDef),
            Y = this.componentDef.selectors[0][0] || 'div',
            ie = i
              ? (function lv(e, t, n) {
                  return e.selectRootElement(t, n === zt.ShadowDom);
                })(N, i, this.componentDef.encapsulation)
              : ac(
                  N,
                  Y,
                  (function Ov(e) {
                    const t = e.toLowerCase();
                    return 'svg' === t ? so : 'math' === t ? 'math' : null;
                  })(Y),
                ),
            Fe = this.componentDef.onPush ? 288 : 272,
            Qe = Hc(0, null, null, 1, 0, null, null, null, null, null),
            yt = gl(null, Qe, null, Fe, null, null, v, N, M, u, null);
          let Nt, Xt;
          S(yt);
          try {
            const sn = this.componentDef;
            let Sn,
              Tt = null;
            sn.findHostDirectiveDefs
              ? ((Sn = []),
                (Tt = new Map()),
                sn.findHostDirectiveDefs(sn, Sn, Tt),
                Sn.push(sn))
              : (Sn = [sn]);
            const Fn = (function Pv(e, t) {
                const n = e[$t],
                  i = Hn;
                return (e[i] = t), ia(n, i, 2, '#host', null);
              })(yt, ie),
              Fi = (function Nv(e, t, n, i, o, l, u, v) {
                const M = o[$t];
                !(function Lv(e, t, n, i) {
                  for (const o of e)
                    t.mergedAttrs = si(t.mergedAttrs, o.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Dl(t, t.mergedAttrs, !0), null !== n && xu(i, n, t));
                })(i, e, t, u);
                const N = l.createRenderer(t, n),
                  Y = gl(
                    o,
                    bh(n),
                    null,
                    n.onPush ? 32 : 16,
                    o[e.index],
                    e,
                    l,
                    N,
                    v || null,
                    null,
                    null,
                  );
                return (
                  M.firstCreatePass && jc(M, e, i.length - 1),
                  vl(o, Y),
                  (o[e.index] = Y)
                );
              })(Fn, ie, sn, Sn, yt, v, N);
            (Xt = $r(Qe, Hn)),
              ie &&
                (function Vv(e, t, n, i) {
                  if (i) gn(e, n, ['ng-version', v_.full]);
                  else {
                    const { attrs: o, classes: l } = (function V_(e) {
                      const t = [],
                        n = [];
                      let i = 1,
                        o = 2;
                      for (; i < e.length; ) {
                        let l = e[i];
                        if ('string' == typeof l)
                          2 === o
                            ? '' !== l && t.push(l, e[++i])
                            : 8 === o && n.push(l);
                        else {
                          if (!Fo(o)) break;
                          o = l;
                        }
                        i++;
                      }
                      return { attrs: t, classes: n };
                    })(t.selectors[0]);
                    o && gn(e, n, o),
                      l && l.length > 0 && Cu(e, n, l.join(' '));
                  }
                })(N, sn, ie, i),
              void 0 !== n &&
                (function Hv(e, t, n) {
                  const i = (e.projection = []);
                  for (let o = 0; o < t.length; o++) {
                    const l = n[o];
                    i.push(null != l ? Array.from(l) : null);
                  }
                })(Xt, this.ngContentSelectors, n),
              (Nt = (function Bv(e, t, n, i, o, l) {
                const u = ii(),
                  v = o[$t],
                  M = yi(u, o);
                xh(v, o, u, n, null, i);
                for (let Y = 0; Y < n.length; Y++)
                  Sr(Io(o, v, u.directiveStart + Y, u), o);
                Eh(v, o, u), M && Sr(M, o);
                const N = Io(o, v, u.directiveStart + u.componentOffset, u);
                if (((e[An] = o[An] = N), null !== l))
                  for (const Y of l) Y(N, t);
                return Lc(v, u, e), N;
              })(Fi, sn, Sn, Tt, yt, [Uv])),
              Nc(Qe, yt, null);
          } finally {
            qe();
          }
          return new Fv(this.componentType, Nt, Js(Xt, yt), yt, Xt);
        }
      }
      class Fv extends d_ {
        constructor(t, n, i, o, l) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = l),
            (this.instance = n),
            (this.hostView = this.changeDetectorRef = new Tv(o)),
            (this.componentType = t);
        }
        setInput(t, n) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[t])) {
            const l = this._rootLView;
            Gc(l[$t], l, o, t, n), bl(Ei(this._tNode.index, l));
          }
        }
        get injector() {
          return new Ho(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function Uv() {
        const e = ii();
        di(lt()[$t], e);
      }
      function Wc(e) {
        let t = (function Oh(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          n = !0;
        const i = [e];
        for (; t; ) {
          let o;
          if (vn(e)) o = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Le(903, !1);
            o = t.ɵdir;
          }
          if (o) {
            if (n) {
              i.push(o);
              const u = e;
              (u.inputs = Kc(e.inputs)),
                (u.declaredInputs = Kc(e.declaredInputs)),
                (u.outputs = Kc(e.outputs));
              const v = o.hostBindings;
              v && Yv(e, v);
              const M = o.viewQuery,
                N = o.contentQueries;
              if (
                (M && zv(e, M),
                N && $v(e, N),
                ge(e.inputs, o.inputs),
                ge(e.declaredInputs, o.declaredInputs),
                ge(e.outputs, o.outputs),
                vn(o) && o.data.animation)
              ) {
                const Y = e.data;
                Y.animation = (Y.animation || []).concat(o.data.animation);
              }
            }
            const l = o.features;
            if (l)
              for (let u = 0; u < l.length; u++) {
                const v = l[u];
                v && v.ngInherit && v(e), v === Wc && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function jv(e) {
          let t = 0,
            n = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const o = e[i];
            (o.hostVars = t += o.hostVars),
              (o.hostAttrs = si(o.hostAttrs, (n = si(n, o.hostAttrs))));
          }
        })(i);
      }
      function Kc(e) {
        return e === Bt ? {} : e === on ? [] : e;
      }
      function zv(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function $v(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (i, o, l) => {
              t(i, o, l), n(i, o, l);
            }
          : t;
      }
      function Yv(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function xl(e) {
        return (
          !!Zc(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function Zc(e) {
        return null !== e && ('function' == typeof e || 'object' == typeof e);
      }
      function Wo(e, t, n) {
        return (e[t] = n);
      }
      function Ir(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function Qc(e, t, n, i) {
        const o = lt();
        return Ir(o, Wr(), t) && (kn(), Go(nn(), o, e, t, n, i)), Qc;
      }
      function oa(e, t, n, i) {
        return Ir(e, Wr(), n) ? t + at(n) + i : Ln;
      }
      function Yh(e, t, n, i, o, l, u, v) {
        const M = lt(),
          N = kn(),
          Y = e + Hn,
          ie = N.firstCreatePass
            ? (function tb(e, t, n, i, o, l, u, v, M) {
                const N = t.consts,
                  Y = ia(t, e, 4, u || null, Bi(N, v));
                Uc(t, n, Y, Bi(N, M)), di(t, Y);
                const ie = (Y.tView = Hc(
                  2,
                  Y,
                  i,
                  o,
                  l,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  N,
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, Y),
                    (ie.queries = t.queries.embeddedTView(Y))),
                  Y
                );
              })(Y, N, M, t, n, i, o, l, u)
            : N.data[Y];
        sr(ie, !1);
        const Fe = M[fn].createComment('');
        al(N, M, Fe, ie),
          Sr(Fe, M),
          vl(M, (M[Y] = Mh(Fe, M, Fe, ie))),
          ln(ie) && Bc(N, M, ie),
          null != u && Vc(M, ie, v);
      }
      function Gh(e) {
        return Cr(
          (function qo() {
            return bn.lFrame.contextLView;
          })(),
          Hn + e,
        );
      }
      function qc(e, t, n) {
        const i = lt();
        return Ir(i, Wr(), t) && ho(kn(), nn(), i, e, t, i[fn], n, !1), qc;
      }
      function Xc(e, t, n, i, o) {
        const u = o ? 'class' : 'style';
        Gc(e, n, t.inputs[u], u, i);
      }
      function Ml(e, t, n, i) {
        const o = lt(),
          l = kn(),
          u = Hn + e,
          v = o[fn],
          M = l.firstCreatePass
            ? (function ib(e, t, n, i, o, l) {
                const u = t.consts,
                  M = ia(t, e, 2, i, Bi(u, o));
                return (
                  Uc(t, n, M, Bi(u, l)),
                  null !== M.attrs && Dl(M, M.attrs, !1),
                  null !== M.mergedAttrs && Dl(M, M.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, M),
                  M
                );
              })(u, l, o, t, n, i)
            : l.data[u],
          N = (o[u] = ac(
            v,
            t,
            (function wi() {
              return bn.lFrame.currentNamespace;
            })(),
          )),
          Y = ln(M);
        return (
          sr(M, !0),
          xu(v, N, M),
          32 != (32 & M.flags) && al(l, o, N, M),
          0 ===
            (function I() {
              return bn.lFrame.elementDepthCount;
            })() && Sr(N, o),
          (function w() {
            bn.lFrame.elementDepthCount++;
          })(),
          Y && (Bc(l, o, M), Lc(l, M, o)),
          null !== i && Vc(o, M),
          Ml
        );
      }
      function wl() {
        let e = ii();
        go() ? So() : ((e = e.parent), sr(e, !1));
        const t = e;
        !(function G() {
          bn.lFrame.elementDepthCount--;
        })();
        const n = kn();
        return (
          n.firstCreatePass && (di(n, e), kt(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function Pt(e) {
              return 0 != (8 & e.flags);
            })(t) &&
            Xc(n, t, lt(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function jt(e) {
              return 0 != (16 & e.flags);
            })(t) &&
            Xc(n, t, lt(), t.stylesWithoutHost, !1),
          wl
        );
      }
      function Jc(e, t, n, i) {
        return Ml(e, t, n, i), wl(), Jc;
      }
      function Al(e, t, n) {
        const i = lt(),
          o = kn(),
          l = e + Hn,
          u = o.firstCreatePass
            ? (function rb(e, t, n, i, o) {
                const l = t.consts,
                  u = Bi(l, i),
                  v = ia(t, e, 8, 'ng-container', u);
                return (
                  null !== u && Dl(v, u, !0),
                  Uc(t, n, v, Bi(l, o)),
                  null !== t.queries && t.queries.elementStart(t, v),
                  v
                );
              })(l, o, i, t, n)
            : o.data[l];
        sr(u, !0);
        const v = (i[l] = i[fn].createComment(''));
        return (
          al(o, i, v, u),
          Sr(v, i),
          ln(u) && (Bc(o, i, u), Lc(o, u, i)),
          null != n && Vc(i, u),
          Al
        );
      }
      function Sl() {
        let e = ii();
        const t = kn();
        return (
          go() ? So() : ((e = e.parent), sr(e, !1)),
          t.firstCreatePass && (di(t, e), kt(e) && t.queries.elementEnd(e)),
          Sl
        );
      }
      function Kh() {
        return lt();
      }
      function ed(e) {
        return !!e && 'function' == typeof e.then;
      }
      function Zh(e) {
        return !!e && 'function' == typeof e.subscribe;
      }
      const Qh = Zh;
      function td(e, t, n, i) {
        const o = lt(),
          l = kn(),
          u = ii();
        return qh(l, o, o[fn], u, e, t, i), td;
      }
      function nd(e, t) {
        const n = ii(),
          i = lt(),
          o = kn();
        return qh(o, i, Sh(Mr(o.data), n, i), n, e, t), nd;
      }
      function qh(e, t, n, i, o, l, u) {
        const v = ln(i),
          N = e.firstCreatePass && Ah(e),
          Y = t[An],
          ie = wh(t);
        let Fe = !0;
        if (3 & i.type || u) {
          const Nt = yi(i, t),
            Xt = u ? u(Nt) : Nt,
            sn = ie.length,
            Sn = u ? Fn => u(li(Fn[i.index])) : i.index;
          let Tt = null;
          if (
            (!u &&
              v &&
              (Tt = (function ob(e, t, n, i) {
                const o = e.cleanup;
                if (null != o)
                  for (let l = 0; l < o.length - 1; l += 2) {
                    const u = o[l];
                    if (u === n && o[l + 1] === i) {
                      const v = t[pi],
                        M = o[l + 2];
                      return v.length > M ? v[M] : null;
                    }
                    'string' == typeof u && (l += 2);
                  }
                return null;
              })(e, t, o, i.index)),
            null !== Tt)
          )
            ((Tt.__ngLastListenerFn__ || Tt).__ngNextListenerFn__ = l),
              (Tt.__ngLastListenerFn__ = l),
              (Fe = !1);
          else {
            l = Jh(i, t, Y, l, !1);
            const Fn = n.listen(Xt, o, l);
            ie.push(l, Fn), N && N.push(o, Sn, sn, sn + 1);
          }
        } else l = Jh(i, t, Y, l, !1);
        const Qe = i.outputs;
        let yt;
        if (Fe && null !== Qe && (yt = Qe[o])) {
          const Nt = yt.length;
          if (Nt)
            for (let Xt = 0; Xt < Nt; Xt += 2) {
              const Fi = t[yt[Xt]][yt[Xt + 1]].subscribe(l),
                Qi = ie.length;
              ie.push(l, Fi), N && N.push(o, i.index, Qi, -(Qi + 1));
            }
        }
      }
      function Xh(e, t, n, i) {
        try {
          return bi(6, t, n), !1 !== n(i);
        } catch (o) {
          return Ih(e, o), !1;
        } finally {
          bi(7, t, n);
        }
      }
      function Jh(e, t, n, i, o) {
        return function l(u) {
          if (u === Function) return i;
          bl(e.componentOffset > -1 ? Ei(e.index, t) : t);
          let M = Xh(t, n, i, u),
            N = l.__ngNextListenerFn__;
          for (; N; ) (M = Xh(t, n, N, u) && M), (N = N.__ngNextListenerFn__);
          return o && !1 === M && (u.preventDefault(), (u.returnValue = !1)), M;
        };
      }
      function ef(e = 1) {
        return (function ft(e) {
          return (bn.lFrame.contextLView = (function Wt(e, t) {
            for (; e > 0; ) (t = t[Ii]), e--;
            return t;
          })(e, bn.lFrame.contextLView))[An];
        })(e);
      }
      function sb(e, t) {
        let n = null;
        const i = (function R_(e) {
          const t = e.attrs;
          if (null != t) {
            const n = t.indexOf(5);
            if (!(1 & n)) return t[n + 1];
          }
          return null;
        })(e);
        for (let o = 0; o < t.length; o++) {
          const l = t[o];
          if ('*' !== l) {
            if (null === i ? th(e, l, !0) : N_(i, l)) return o;
          } else n = o;
        }
        return n;
      }
      function tf(e) {
        const t = lt()[ni][Zn];
        if (!t.projection) {
          const i = (t.projection = f(e ? e.length : 1, null)),
            o = i.slice();
          let l = t.child;
          for (; null !== l; ) {
            const u = e ? sb(l, e) : 0;
            null !== u &&
              (o[u] ? (o[u].projectionNext = l) : (i[u] = l), (o[u] = l)),
              (l = l.next);
          }
        }
      }
      function nf(e, t = 0, n) {
        const i = lt(),
          o = kn(),
          l = ia(o, Hn + e, 16, null, n || null);
        null === l.projection && (l.projection = t),
          So(),
          32 != (32 & l.flags) &&
            (function yg(e, t, n) {
              Du(t[fn], 0, t, n, hu(e, n, t), gu(n.parent || t[Zn], n, t));
            })(o, i, l);
      }
      function Il(e, t) {
        return (e << 17) | (t << 2);
      }
      function vs(e) {
        return (e >> 17) & 32767;
      }
      function rd(e) {
        return 2 | e;
      }
      function Hs(e) {
        return (131068 & e) >> 2;
      }
      function od(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function sd(e) {
        return 1 | e;
      }
      function pf(e, t, n, i, o) {
        const l = e[n + 1],
          u = null === t;
        let v = i ? vs(l) : Hs(l),
          M = !1;
        for (; 0 !== v && (!1 === M || u); ) {
          const Y = e[v + 1];
          hb(e[v], t) && ((M = !0), (e[v + 1] = i ? sd(Y) : rd(Y))),
            (v = i ? vs(Y) : Hs(Y));
        }
        M && (e[n + 1] = i ? rd(l) : sd(l));
      }
      function hb(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || 'string' != typeof t) && Ve(e, t) >= 0)
        );
      }
      const dr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function mf(e) {
        return e.substring(dr.key, dr.keyEnd);
      }
      function gf(e, t) {
        const n = dr.textEnd;
        return n === t
          ? -1
          : ((t = dr.keyEnd =
              (function gb(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (dr.key = t), n)),
            fa(e, t, n));
      }
      function fa(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function ad(e, t, n) {
        return Po(e, t, n, !1), ad;
      }
      function ld(e, t) {
        return Po(e, t, null, !0), ld;
      }
      function Zo(e, t) {
        for (
          let n = (function pb(e) {
            return (
              (function vf(e) {
                (dr.key = 0),
                  (dr.keyEnd = 0),
                  (dr.value = 0),
                  (dr.valueEnd = 0),
                  (dr.textEnd = e.length);
              })(e),
              gf(e, fa(e, 0, dr.textEnd))
            );
          })(t);
          n >= 0;
          n = gf(t, n)
        )
          U(e, mf(t), !0);
      }
      function Po(e, t, n, i) {
        const o = lt(),
          l = kn(),
          u = ar(2);
        l.firstUpdatePass && Cf(l, e, u, i),
          t !== Ln &&
            Ir(o, u, t) &&
            Ef(
              l,
              l.data[Ht()],
              o,
              o[fn],
              e,
              (o[u + 1] = (function Sb(e, t) {
                return (
                  null == e ||
                    '' === e ||
                    ('string' == typeof t
                      ? (e += t)
                      : 'object' == typeof e && (e = ue(rs(e)))),
                  e
                );
              })(t, n)),
              i,
              u,
            );
      }
      function Df(e, t) {
        return t >= e.expandoStartIndex;
      }
      function Cf(e, t, n, i) {
        const o = e.data;
        if (null === o[n + 1]) {
          const l = o[Ht()],
            u = Df(e, n);
          wf(l, i) && null === t && !u && (t = !1),
            (t = (function Db(e, t, n, i) {
              const o = Mr(e);
              let l = i ? t.residualClasses : t.residualStyles;
              if (null === o)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((n = za((n = cd(null, e, t, n, i)), t.attrs, i)),
                  (l = null));
              else {
                const u = t.directiveStylingLast;
                if (-1 === u || e[u] !== o)
                  if (((n = cd(o, e, t, n, i)), null === l)) {
                    let M = (function Cb(e, t, n) {
                      const i = n ? t.classBindings : t.styleBindings;
                      if (0 !== Hs(i)) return e[vs(i)];
                    })(e, t, i);
                    void 0 !== M &&
                      Array.isArray(M) &&
                      ((M = cd(null, e, t, M[1], i)),
                      (M = za(M, t.attrs, i)),
                      (function xb(e, t, n, i) {
                        e[vs(n ? t.classBindings : t.styleBindings)] = i;
                      })(e, t, i, M));
                  } else
                    l = (function Eb(e, t, n) {
                      let i;
                      const o = t.directiveEnd;
                      for (let l = 1 + t.directiveStylingLast; l < o; l++)
                        i = za(i, e[l].hostAttrs, n);
                      return za(i, t.attrs, n);
                    })(e, t, i);
              }
              return (
                void 0 !== l &&
                  (i ? (t.residualClasses = l) : (t.residualStyles = l)),
                n
              );
            })(o, l, t, i)),
            (function db(e, t, n, i, o, l) {
              let u = l ? t.classBindings : t.styleBindings,
                v = vs(u),
                M = Hs(u);
              e[i] = n;
              let Y,
                N = !1;
              if (
                (Array.isArray(n)
                  ? ((Y = n[1]), (null === Y || Ve(n, Y) > 0) && (N = !0))
                  : (Y = n),
                o)
              )
                if (0 !== M) {
                  const Fe = vs(e[v + 1]);
                  (e[i + 1] = Il(Fe, v)),
                    0 !== Fe && (e[Fe + 1] = od(e[Fe + 1], i)),
                    (e[v + 1] = (function lb(e, t) {
                      return (131071 & e) | (t << 17);
                    })(e[v + 1], i));
                } else
                  (e[i + 1] = Il(v, 0)),
                    0 !== v && (e[v + 1] = od(e[v + 1], i)),
                    (v = i);
              else
                (e[i + 1] = Il(M, 0)),
                  0 === v ? (v = i) : (e[M + 1] = od(e[M + 1], i)),
                  (M = i);
              N && (e[i + 1] = rd(e[i + 1])),
                pf(e, Y, i, !0),
                pf(e, Y, i, !1),
                (function ub(e, t, n, i, o) {
                  const l = o ? e.residualClasses : e.residualStyles;
                  null != l &&
                    'string' == typeof t &&
                    Ve(l, t) >= 0 &&
                    (n[i + 1] = sd(n[i + 1]));
                })(t, Y, e, i, l),
                (u = Il(v, M)),
                l ? (t.classBindings = u) : (t.styleBindings = u);
            })(o, l, t, n, u, i);
        }
      }
      function cd(e, t, n, i, o) {
        let l = null;
        const u = n.directiveEnd;
        let v = n.directiveStylingLast;
        for (
          -1 === v ? (v = n.directiveStart) : v++;
          v < u && ((l = t[v]), (i = za(i, l.hostAttrs, o)), l !== e);

        )
          v++;
        return null !== e && (n.directiveStylingLast = v), i;
      }
      function za(e, t, n) {
        const i = n ? 1 : 2;
        let o = -1;
        if (null !== t)
          for (let l = 0; l < t.length; l++) {
            const u = t[l];
            'number' == typeof u
              ? (o = u)
              : o === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ['', e]),
                U(e, u, !!n || t[++l]));
          }
        return void 0 === e ? null : e;
      }
      function Ef(e, t, n, i, o, l, u, v) {
        if (!(3 & t.type)) return;
        const M = e.data,
          N = M[v + 1],
          Y = (function cb(e) {
            return 1 == (1 & e);
          })(N)
            ? Mf(M, t, n, o, Hs(N), u)
            : void 0;
        kl(Y) ||
          (kl(l) ||
            ((function ab(e) {
              return 2 == (2 & e);
            })(N) &&
              (l = Mf(M, null, n, o, v, u))),
          (function Cg(e, t, n, i, o) {
            if (t) o ? e.addClass(n, i) : e.removeClass(n, i);
            else {
              let l = -1 === i.indexOf('-') ? void 0 : Yo.DashCase;
              null == o
                ? e.removeStyle(n, i, l)
                : ('string' == typeof o &&
                    o.endsWith('!important') &&
                    ((o = o.slice(0, -10)), (l |= Yo.Important)),
                  e.setStyle(n, i, o, l));
            }
          })(i, u, oi(Ht(), n), o, l));
      }
      function Mf(e, t, n, i, o, l) {
        const u = null === t;
        let v;
        for (; o > 0; ) {
          const M = e[o],
            N = Array.isArray(M),
            Y = N ? M[1] : M,
            ie = null === Y;
          let Fe = n[o + 1];
          Fe === Ln && (Fe = ie ? on : void 0);
          let Qe = ie ? W(Fe, i) : Y === i ? Fe : void 0;
          if ((N && !kl(Qe) && (Qe = W(M, i)), kl(Qe) && ((v = Qe), u)))
            return v;
          const yt = e[o + 1];
          o = u ? vs(yt) : Hs(yt);
        }
        if (null !== t) {
          let M = l ? t.residualClasses : t.residualStyles;
          null != M && (v = W(M, i));
        }
        return v;
      }
      function kl(e) {
        return void 0 !== e;
      }
      function wf(e, t) {
        return 0 != (e.flags & (t ? 8 : 16));
      }
      function Af(e, t = '') {
        const n = lt(),
          i = kn(),
          o = e + Hn,
          l = i.firstCreatePass ? ia(i, o, 1, t, null) : i.data[o],
          u = (n[o] = (function sc(e, t) {
            return e.createText(t);
          })(n[fn], t));
        al(i, n, u, l), sr(l, !1);
      }
      function dd(e) {
        return Tl('', e, ''), dd;
      }
      function Tl(e, t, n) {
        const i = lt(),
          o = oa(i, e, t, n);
        return (
          o !== Ln &&
            (function as(e, t, n) {
              const i = oi(t, e);
              !(function cu(e, t, n) {
                e.setValue(t, n);
              })(e[fn], i, n);
            })(i, Ht(), o),
          Tl
        );
      }
      function Nf(e, t, n) {
        !(function No(e, t, n, i) {
          const o = kn(),
            l = ar(2);
          o.firstUpdatePass && Cf(o, null, l, i);
          const u = lt();
          if (n !== Ln && Ir(u, l, n)) {
            const v = o.data[Ht()];
            if (wf(v, i) && !Df(o, l)) {
              let M = i ? v.classesWithoutHost : v.stylesWithoutHost;
              null !== M && (n = le(M, n || '')), Xc(o, v, u, n, i);
            } else
              !(function Ab(e, t, n, i, o, l, u, v) {
                o === Ln && (o = on);
                let M = 0,
                  N = 0,
                  Y = 0 < o.length ? o[0] : null,
                  ie = 0 < l.length ? l[0] : null;
                for (; null !== Y || null !== ie; ) {
                  const Fe = M < o.length ? o[M + 1] : void 0,
                    Qe = N < l.length ? l[N + 1] : void 0;
                  let Nt,
                    yt = null;
                  Y === ie
                    ? ((M += 2), (N += 2), Fe !== Qe && ((yt = ie), (Nt = Qe)))
                    : null === ie || (null !== Y && Y < ie)
                    ? ((M += 2), (yt = Y))
                    : ((N += 2), (yt = ie), (Nt = Qe)),
                    null !== yt && Ef(e, t, n, i, yt, Nt, u, v),
                    (Y = M < o.length ? o[M] : null),
                    (ie = N < l.length ? l[N] : null);
                }
              })(
                o,
                v,
                u,
                u[fn],
                u[l + 1],
                (u[l + 1] = (function Mb(e, t, n) {
                  if (null == n || '' === n) return on;
                  const i = [],
                    o = rs(n);
                  if (Array.isArray(o))
                    for (let l = 0; l < o.length; l++) e(i, o[l], !0);
                  else if ('object' == typeof o)
                    for (const l in o) o.hasOwnProperty(l) && e(i, l, o[l]);
                  else 'string' == typeof o && t(i, o);
                  return i;
                })(e, t, n)),
                i,
                l,
              );
          }
        })(U, Zo, oa(lt(), e, t, n), !0);
      }
      function ud(e, t, n) {
        const i = lt();
        return Ir(i, Wr(), t) && ho(kn(), nn(), i, e, t, i[fn], n, !0), ud;
      }
      function hd(e, t, n) {
        const i = lt();
        if (Ir(i, Wr(), t)) {
          const l = kn(),
            u = nn();
          ho(l, u, i, e, t, Sh(Mr(l.data), u, i), n, !0);
        }
        return hd;
      }
      const Us = void 0;
      var Wb = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Us],
        [['AM', 'PM'], Us, Us],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
          ],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Us,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',
          ],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Us,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Us, "{1} 'at' {0}", Us],
        [
          '.',
          ',',
          ';',
          '%',
          '+',
          '-',
          'E',
          '\xd7',
          '\u2030',
          '\u221e',
          'NaN',
          ':',
        ],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function Gb(e) {
          const n = Math.floor(Math.abs(e)),
            i = e.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === n && 0 === i ? 1 : 5;
        },
      ];
      let pa = {};
      function fd(e) {
        const t = (function Kb(e) {
          return e.toLowerCase().replace(/_/g, '-');
        })(e);
        let n = Wf(t);
        if (n) return n;
        const i = t.split('-')[0];
        if (((n = Wf(i)), n)) return n;
        if ('en' === i) return Wb;
        throw new Le(701, !1);
      }
      function Gf(e) {
        return fd(e)[En.PluralCase];
      }
      function Wf(e) {
        return (
          e in pa ||
            (pa[e] =
              He.ng &&
              He.ng.common &&
              He.ng.common.locales &&
              He.ng.common.locales[e]),
          pa[e]
        );
      }
      var En = (() => (
        ((En = En || {})[(En.LocaleId = 0)] = 'LocaleId'),
        (En[(En.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (En[(En.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (En[(En.DaysFormat = 3)] = 'DaysFormat'),
        (En[(En.DaysStandalone = 4)] = 'DaysStandalone'),
        (En[(En.MonthsFormat = 5)] = 'MonthsFormat'),
        (En[(En.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (En[(En.Eras = 7)] = 'Eras'),
        (En[(En.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (En[(En.WeekendRange = 9)] = 'WeekendRange'),
        (En[(En.DateFormat = 10)] = 'DateFormat'),
        (En[(En.TimeFormat = 11)] = 'TimeFormat'),
        (En[(En.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (En[(En.NumberSymbols = 13)] = 'NumberSymbols'),
        (En[(En.NumberFormats = 14)] = 'NumberFormats'),
        (En[(En.CurrencyCode = 15)] = 'CurrencyCode'),
        (En[(En.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (En[(En.CurrencyName = 17)] = 'CurrencyName'),
        (En[(En.Currencies = 18)] = 'Currencies'),
        (En[(En.Directionality = 19)] = 'Directionality'),
        (En[(En.PluralCase = 20)] = 'PluralCase'),
        (En[(En.ExtraData = 21)] = 'ExtraData'),
        En
      ))();
      const ma = 'en-US';
      let Kf = ma;
      function gd(e, t, n, i, o) {
        if (((e = se(e)), Array.isArray(e)))
          for (let l = 0; l < e.length; l++) gd(e[l], t, n, i, o);
        else {
          const l = kn(),
            u = lt();
          let v = Ns(e) ? e : se(e.provide),
            M = Gu(e);
          const N = ii(),
            Y = 1048575 & N.providerIndexes,
            ie = N.directiveStart,
            Fe = N.providerIndexes >> 20;
          if (Ns(e) || !e.multi) {
            const Qe = new ce(M, o, na),
              yt = vd(v, t, o ? Y : Y + Fe, ie);
            -1 === yt
              ? (tr(us(N, u), l, v),
                _d(l, e, t.length),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(Qe),
                u.push(Qe))
              : ((n[yt] = Qe), (u[yt] = Qe));
          } else {
            const Qe = vd(v, t, Y + Fe, ie),
              yt = vd(v, t, Y, Y + Fe),
              Xt = yt >= 0 && n[yt];
            if ((o && !Xt) || (!o && !(Qe >= 0 && n[Qe]))) {
              tr(us(N, u), l, v);
              const sn = (function Yy(e, t, n, i, o) {
                const l = new ce(e, n, na);
                return (
                  (l.multi = []),
                  (l.index = t),
                  (l.componentProviders = 0),
                  bp(l, o, i && !n),
                  l
                );
              })(o ? $y : zy, n.length, o, i, M);
              !o && Xt && (n[yt].providerFactory = sn),
                _d(l, e, t.length, 0),
                t.push(v),
                N.directiveStart++,
                N.directiveEnd++,
                o && (N.providerIndexes += 1048576),
                n.push(sn),
                u.push(sn);
            } else _d(l, e, Qe > -1 ? Qe : yt, bp(n[o ? yt : Qe], M, !o && i));
            !o && i && Xt && n[yt].componentProviders++;
          }
        }
      }
      function _d(e, t, n, i) {
        const o = Ns(t),
          l = (function i_(e) {
            return !!e.useClass;
          })(t);
        if (o || l) {
          const M = (l ? se(t.useClass) : t).prototype.ngOnDestroy;
          if (M) {
            const N = e.destroyHooks || (e.destroyHooks = []);
            if (!o && t.multi) {
              const Y = N.indexOf(n);
              -1 === Y ? N.push(n, [i, M]) : N[Y + 1].push(i, M);
            } else N.push(n, M);
          }
        }
      }
      function bp(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function vd(e, t, n, i) {
        for (let o = n; o < i; o++) if (t[o] === e) return o;
        return -1;
      }
      function zy(e, t, n, i) {
        return bd(this.multi, []);
      }
      function $y(e, t, n, i) {
        const o = this.multi;
        let l;
        if (this.providerFactory) {
          const u = this.providerFactory.componentProviders,
            v = Io(n, n[$t], this.providerFactory.index, i);
          (l = v.slice(0, u)), bd(o, l);
          for (let M = u; M < v.length; M++) l.push(v[M]);
        } else (l = []), bd(o, l);
        return l;
      }
      function bd(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function yp(e, t = []) {
        return n => {
          n.providersResolver = (i, o) =>
            (function jy(e, t, n) {
              const i = kn();
              if (i.firstCreatePass) {
                const o = vn(e);
                gd(n, i.data, i.blueprint, o, !0),
                  gd(t, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(e) : e, t);
        };
      }
      class ga {}
      class Dp {}
      function Gy(e, t) {
        return new Cp(e, t ?? null);
      }
      class Cp extends ga {
        constructor(t, n) {
          super(),
            (this._parent = n),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new kh(this));
          const i = hi(t);
          (this._bootstrapComponents = ss(i.bootstrap)),
            (this._r3Injector = ch(
              t,
              n,
              [
                { provide: ga, useValue: this },
                { provide: Na, useValue: this.componentFactoryResolver },
              ],
              ue(t),
              new Set(['environment']),
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach(n => n()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class yd extends Dp {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new Cp(this.moduleType, t);
        }
      }
      class Wy extends ga {
        constructor(t, n, i) {
          super(),
            (this.componentFactoryResolver = new kh(this)),
            (this.instance = null);
          const o = new Yu(
            [
              ...t,
              { provide: ga, useValue: this },
              { provide: Na, useValue: this.componentFactoryResolver },
            ],
            n || pl(),
            i,
            new Set(['environment']),
          );
          (this.injector = o), o.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function Dd(e, t, n = null) {
        return new Wy(e, t, n).injector;
      }
      let Ky = (() => {
        class e {
          constructor(n) {
            (this._injector = n), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(n) {
            if (!n.standalone) return null;
            if (!this.cachedInjectors.has(n.id)) {
              const i = Uu(0, n.type),
                o =
                  i.length > 0
                    ? Dd([i], this._injector, `Standalone[${n.type.name}]`)
                    : null;
              this.cachedInjectors.set(n.id, o);
            }
            return this.cachedInjectors.get(n.id);
          }
          ngOnDestroy() {
            try {
              for (const n of this.cachedInjectors.values())
                null !== n && n.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (e.ɵprov = nt({
            token: e,
            providedIn: 'environment',
            factory: () => new e(Je(Ls)),
          })),
          e
        );
      })();
      function xp(e) {
        e.getStandaloneInjector = t =>
          t.get(Ky).getOrCreateStandaloneInjector(e);
      }
      function kp(e, t, n, i) {
        return Op(lt(), Mi(), e, t, n, i);
      }
      function Tp(e, t, n, i, o) {
        return (function Rp(e, t, n, i, o, l, u) {
          const v = t + n;
          return (function Vs(e, t, n, i) {
            const o = Ir(e, t, n);
            return Ir(e, t + 1, i) || o;
          })(e, v, o, l)
            ? Wo(e, v + 2, u ? i.call(u, o, l) : i(o, l))
            : Za(e, v + 2);
        })(lt(), Mi(), e, t, n, i, o);
      }
      function Za(e, t) {
        const n = e[t];
        return n === Ln ? void 0 : n;
      }
      function Op(e, t, n, i, o, l) {
        const u = t + n;
        return Ir(e, u, o)
          ? Wo(e, u + 1, l ? i.call(l, o) : i(o))
          : Za(e, u + 1);
      }
      function Lp(e, t) {
        const n = kn();
        let i;
        const o = e + Hn;
        n.firstCreatePass
          ? ((i = (function h0(e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const i = t[n];
                  if (e === i.name) return i;
                }
            })(t, n.pipeRegistry)),
            (n.data[o] = i),
            i.onDestroy &&
              (n.destroyHooks ?? (n.destroyHooks = [])).push(o, i.onDestroy))
          : (i = n.data[o]);
        const l = i.factory || (i.factory = $i(i.type)),
          u = $(na);
        try {
          const v = vo(!1),
            M = l();
          return (
            vo(v),
            (function nb(e, t, n, i) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = i);
            })(n, lt(), o, M),
            M
          );
        } finally {
          $(u);
        }
      }
      function Bp(e, t, n) {
        const i = e + Hn,
          o = lt(),
          l = Cr(o, i);
        return (function Qa(e, t) {
          return e[$t].data[t].pure;
        })(o, i)
          ? Op(o, Mi(), t, l.transform, n, l)
          : l.transform(n);
      }
      function xd(e) {
        return t => {
          setTimeout(e, void 0, t);
        };
      }
      const Qo = class _0 extends s.x {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, n, i) {
          let o = t,
            l = n || (() => null),
            u = i;
          if (t && 'object' == typeof t) {
            const M = t;
            (o = M.next?.bind(M)),
              (l = M.error?.bind(M)),
              (u = M.complete?.bind(M));
          }
          this.__isAsync && ((l = xd(l)), o && (o = xd(o)), u && (u = xd(u)));
          const v = super.subscribe({ next: o, error: l, complete: u });
          return t instanceof x.w0 && t.add(v), v;
        }
      };
      function v0() {
        return this._results[Symbol.iterator]();
      }
      class Nl {
        get changes() {
          return this._changes || (this._changes = new Qo());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const n = Nl.prototype;
          n[Symbol.iterator] || (n[Symbol.iterator] = v0);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, n) {
          return this._results.reduce(t, n);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, n) {
          const i = this;
          i.dirty = !1;
          const o = (function Ar(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function Aa(e, t, n) {
            if (e.length !== t.length) return !1;
            for (let i = 0; i < e.length; i++) {
              let o = e[i],
                l = t[i];
              if ((n && ((o = n(o)), (l = n(l))), l !== o)) return !1;
            }
            return !0;
          })(i._results, o, n)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let qa = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = D0), e;
      })();
      const b0 = qa,
        y0 = class extends b0 {
          constructor(t, n, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = n),
              (this.elementRef = i);
          }
          createEmbeddedView(t, n) {
            const i = this._declarationTContainer.tView,
              o = gl(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                n || null,
              );
            o[ur] = this._declarationLView[this._declarationTContainer.index];
            const u = this._declarationLView[ji];
            return (
              null !== u && (o[ji] = u.createEmbeddedView(i)),
              Nc(i, o, t),
              new Ha(o)
            );
          }
        };
      function D0() {
        return Ll(ii(), lt());
      }
      function Ll(e, t) {
        return 4 & e.type ? new y0(t, e, Js(e, t)) : null;
      }
      let Bl = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = C0), e;
      })();
      function C0() {
        return Up(ii(), lt());
      }
      const x0 = Bl,
        Vp = class extends x0 {
          constructor(t, n, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = n),
              (this._hostLView = i);
          }
          get element() {
            return Js(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ho(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = xs(this._hostTNode, this._hostLView);
            if (er(t)) {
              const n = lr(t, this._hostLView),
                i = Lr(t);
              return new Ho(n[$t].data[i + 8], n);
            }
            return new Ho(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const n = Hp(this._lContainer);
            return (null !== n && n[t]) || null;
          }
          get length() {
            return this._lContainer.length - q;
          }
          createEmbeddedView(t, n, i) {
            let o, l;
            'number' == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (l = i.injector));
            const u = t.createEmbeddedView(n || {}, l);
            return this.insert(u, o), u;
          }
          createComponent(t, n, i, o, l) {
            const u =
              t &&
              !(function ns(e) {
                return 'function' == typeof e;
              })(t);
            let v;
            if (u) v = n;
            else {
              const ie = n || {};
              (v = ie.index),
                (i = ie.injector),
                (o = ie.projectableNodes),
                (l = ie.environmentInjector || ie.ngModuleRef);
            }
            const M = u ? t : new Ua(Tn(t)),
              N = i || this.parentInjector;
            if (!l && null == M.ngModule) {
              const Fe = (u ? N : this.parentInjector).get(Ls, null);
              Fe && (l = Fe);
            }
            const Y = M.create(N, o, void 0, l);
            return this.insert(Y.hostView, v), Y;
          }
          insert(t, n) {
            const i = t._lView,
              o = i[$t];
            if (
              (function Ao(e) {
                return Ze(e[Un]);
              })(i)
            ) {
              const Y = this.indexOf(t);
              if (-1 !== Y) this.detach(Y);
              else {
                const ie = i[Un],
                  Fe = new Vp(ie, ie[Zn], ie[Un]);
                Fe.detach(Fe.indexOf(t));
              }
            }
            const l = this._adjustIndex(n),
              u = this._lContainer;
            !(function pg(e, t, n, i) {
              const o = q + i,
                l = n.length;
              i > 0 && (n[o - 1][fi] = t),
                i < l - q
                  ? ((t[fi] = n[o]), Ys(n, q + i, t))
                  : (n.push(t), (t[fi] = null)),
                (t[Un] = n);
              const u = t[ur];
              null !== u &&
                n !== u &&
                (function mg(e, t) {
                  const n = e[zi];
                  t[ni] !== t[Un][Un][ni] && (e[kr] = !0),
                    null === n ? (e[zi] = [t]) : n.push(t);
                })(u, t);
              const v = t[ji];
              null !== v && v.insertView(e), (t[dn] |= 64);
            })(o, i, u, l);
            const v = uc(l, u),
              M = i[fn],
              N = sl(M, u[rr]);
            return (
              null !== N &&
                (function ug(e, t, n, i, o, l) {
                  (i[mi] = o), (i[Zn] = t), Ra(e, i, n, 1, o, l);
                })(o, u[Zn], M, i, N, v),
              t.attachToViewContainerRef(),
              Ys(Ed(u), l, t),
              t
            );
          }
          move(t, n) {
            return this.insert(t, n);
          }
          indexOf(t) {
            const n = Hp(this._lContainer);
            return null !== n ? n.indexOf(t) : -1;
          }
          remove(t) {
            const n = this._adjustIndex(t, -1),
              i = lc(this._lContainer, n);
            i && (Is(Ed(this._lContainer), n), uu(i[$t], i));
          }
          detach(t) {
            const n = this._adjustIndex(t, -1),
              i = lc(this._lContainer, n);
            return i && null != Is(Ed(this._lContainer), n) ? new Ha(i) : null;
          }
          _adjustIndex(t, n = 0) {
            return t ?? this.length + n;
          }
        };
      function Hp(e) {
        return e[Ki];
      }
      function Ed(e) {
        return e[Ki] || (e[Ki] = []);
      }
      function Up(e, t) {
        let n;
        const i = t[e.index];
        if (Ze(i)) n = i;
        else {
          let o;
          if (8 & e.type) o = li(i);
          else {
            const l = t[fn];
            o = l.createComment('');
            const u = yi(e, t);
            Fs(
              l,
              sl(l, u),
              o,
              (function bg(e, t) {
                return e.nextSibling(t);
              })(l, u),
              !1,
            );
          }
          (t[e.index] = n = Mh(i, t, o, e)), vl(t, n);
        }
        return new Vp(n, e, t);
      }
      class Md {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Md(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class wd {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const n = t.queries;
          if (null !== n) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : n.length,
              o = [];
            for (let l = 0; l < i; l++) {
              const u = n.getByIndex(l);
              o.push(this.queries[u.indexInDeclarationView].clone());
            }
            return new wd(o);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let n = 0; n < this.queries.length; n++)
            null !== Qp(t, n).matches && this.queries[n].setDirty();
        }
      }
      class jp {
        constructor(t, n, i = null) {
          (this.predicate = t), (this.flags = n), (this.read = i);
        }
      }
      class Ad {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, n);
        }
        elementEnd(t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementEnd(t);
        }
        embeddedTView(t) {
          let n = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== n ? n.length : 0,
              l = this.getByIndex(i).embeddedTView(t, o);
            l &&
              ((l.indexInDeclarationView = i),
              null !== n ? n.push(l) : (n = [l]));
          }
          return null !== n ? new Ad(n) : null;
        }
        template(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, n);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Sd {
        constructor(t, n = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = n);
        }
        elementStart(t, n) {
          this.isApplyingToNode(n) && this.matchTNode(t, n);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, n) {
          this.elementStart(t, n);
        }
        embeddedTView(t, n) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, n),
              new Sd(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const n = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== n; ) i = i.parent;
            return n === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, n) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const l = i[o];
              this.matchTNodeWithReadOption(t, n, E0(n, l)),
                this.matchTNodeWithReadOption(t, n, Es(n, t, l, !1, !1));
            }
          else
            i === qa
              ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1)
              : this.matchTNodeWithReadOption(t, n, Es(n, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, n, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === La || o === Bl || (o === qa && 4 & n.type))
                this.addMatch(n.index, -2);
              else {
                const l = Es(n, t, o, !1, !1);
                null !== l && this.addMatch(n.index, l);
              }
            else this.addMatch(n.index, i);
          }
        }
        addMatch(t, n) {
          null === this.matches
            ? (this.matches = [t, n])
            : this.matches.push(t, n);
        }
      }
      function E0(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) if (n[i] === t) return n[i + 1];
        return null;
      }
      function w0(e, t, n, i) {
        return -1 === n
          ? (function M0(e, t) {
              return 11 & e.type ? Js(e, t) : 4 & e.type ? Ll(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function A0(e, t, n) {
              return n === La
                ? Js(t, e)
                : n === qa
                ? Ll(t, e)
                : n === Bl
                ? Up(t, e)
                : void 0;
            })(e, t, i)
          : Io(e, e[$t], n, t);
      }
      function zp(e, t, n, i) {
        const o = t[ji].queries[i];
        if (null === o.matches) {
          const l = e.data,
            u = n.matches,
            v = [];
          for (let M = 0; M < u.length; M += 2) {
            const N = u[M];
            v.push(N < 0 ? null : w0(t, l[N], u[M + 1], n.metadata.read));
          }
          o.matches = v;
        }
        return o.matches;
      }
      function Id(e, t, n, i) {
        const o = e.queries.getByIndex(n),
          l = o.matches;
        if (null !== l) {
          const u = zp(e, t, o, n);
          for (let v = 0; v < l.length; v += 2) {
            const M = l[v];
            if (M > 0) i.push(u[v / 2]);
            else {
              const N = l[v + 1],
                Y = t[-M];
              for (let ie = q; ie < Y.length; ie++) {
                const Fe = Y[ie];
                Fe[ur] === Fe[Un] && Id(Fe[$t], Fe, N, i);
              }
              if (null !== Y[zi]) {
                const ie = Y[zi];
                for (let Fe = 0; Fe < ie.length; Fe++) {
                  const Qe = ie[Fe];
                  Id(Qe[$t], Qe, N, i);
                }
              }
            }
          }
        }
        return i;
      }
      function $p(e) {
        const t = lt(),
          n = kn(),
          i = co();
        B(i + 1);
        const o = Qp(n, i);
        if (
          e.dirty &&
          (function xr(e) {
            return 4 == (4 & e[dn]);
          })(t) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) e.reset([]);
          else {
            const l = o.crossesNgTemplate ? Id(n, t, i, []) : zp(n, t, o, i);
            e.reset(l, p_), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Yp(e, t, n) {
        const i = kn();
        i.firstCreatePass &&
          (Zp(i, new jp(e, t, n), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          Kp(i, lt(), t);
      }
      function Gp(e, t, n, i) {
        const o = kn();
        if (o.firstCreatePass) {
          const l = ii();
          Zp(o, new jp(t, n, i), l.index),
            (function I0(e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (n.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(o, e),
            2 == (2 & n) && (o.staticContentQueries = !0);
        }
        Kp(o, lt(), n);
      }
      function Wp() {
        return (function S0(e, t) {
          return e[ji].queries[t].queryList;
        })(lt(), co());
      }
      function Kp(e, t, n) {
        const i = new Nl(4 == (4 & n));
        yh(e, t, i, i.destroy),
          null === t[ji] && (t[ji] = new wd()),
          t[ji].queries.push(new Md(i));
      }
      function Zp(e, t, n) {
        null === e.queries && (e.queries = new Ad()),
          e.queries.track(new Sd(t, n));
      }
      function Qp(e, t) {
        return e.queries.getByIndex(t);
      }
      function qp(e, t) {
        return Ll(e, t);
      }
      function kd(e) {
        return !!hi(e);
      }
      function Hl(...e) {}
      const mm = new ei('Application Initializer');
      let Ul = (() => {
        class e {
          constructor(n) {
            (this.appInits = n),
              (this.resolve = Hl),
              (this.reject = Hl),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, o) => {
                (this.resolve = i), (this.reject = o);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const n = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let o = 0; o < this.appInits.length; o++) {
                const l = this.appInits[o]();
                if (ed(l)) n.push(l);
                else if (Qh(l)) {
                  const u = new Promise((v, M) => {
                    l.subscribe({ complete: v, error: M });
                  });
                  n.push(u);
                }
              }
            Promise.all(n)
              .then(() => {
                i();
              })
              .catch(o => {
                this.reject(o);
              }),
              0 === n.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(mm, 8));
          }),
          (e.ɵprov = nt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const gm = new ei('AppId', {
        providedIn: 'root',
        factory: function _m() {
          return `${Pd()}${Pd()}${Pd()}`;
        },
      });
      function Pd() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const vm = new ei('Platform Initializer'),
        Z0 = new ei('Platform ID', {
          providedIn: 'platform',
          factory: () => 'unknown',
        }),
        Q0 = new ei('AnimationModuleType');
      let q0 = (() => {
        class e {
          log(n) {
            console.log(n);
          }
          warn(n) {
            console.warn(n);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = nt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      const jl = new ei('LocaleId', {
          providedIn: 'root',
          factory: () =>
            Te(jl, ht.Optional | ht.SkipSelf) ||
            (function X0() {
              return (typeof $localize < 'u' && $localize.locale) || ma;
            })(),
        }),
        J0 = new ei('DefaultCurrencyCode', {
          providedIn: 'root',
          factory: () => 'USD',
        });
      class eD {
        constructor(t, n) {
          (this.ngModuleFactory = t), (this.componentFactories = n);
        }
      }
      let tD = (() => {
        class e {
          compileModuleSync(n) {
            return new yd(n);
          }
          compileModuleAsync(n) {
            return Promise.resolve(this.compileModuleSync(n));
          }
          compileModuleAndAllComponentsSync(n) {
            const i = this.compileModuleSync(n),
              l = ss(hi(n).declarations).reduce((u, v) => {
                const M = Tn(v);
                return M && u.push(new Ua(M)), u;
              }, []);
            return new eD(i, l);
          }
          compileModuleAndAllComponentsAsync(n) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(n));
          }
          clearCache() {}
          clearCacheFor(n) {}
          getModuleId(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = nt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const rD = (() => Promise.resolve(0))();
      function Nd(e) {
        typeof Zone > 'u'
          ? rD.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
      }
      class xo {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: n = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Qo(!1)),
            (this.onMicrotaskEmpty = new Qo(!1)),
            (this.onStable = new Qo(!1)),
            (this.onError = new Qo(!1)),
            typeof Zone > 'u')
          )
            throw new Le(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && n),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function oD() {
              let e = He.requestAnimationFrame,
                t = He.cancelAnimationFrame;
              if (typeof Zone < 'u' && e && t) {
                const n = e[Zone.__symbol__('OriginalDelegate')];
                n && (e = n);
                const i = t[Zone.__symbol__('OriginalDelegate')];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function lD(e) {
              const t = () => {
                !(function aD(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(He, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            'fakeTopEventTask',
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                Bd(e),
                                (e.isCheckStableRunning = !0),
                                Ld(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {},
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    Bd(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, i, o, l, u, v) => {
                  try {
                    return Dm(e), n.invokeTask(o, l, u, v);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      'eventTask' === l.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      t(),
                      Cm(e);
                  }
                },
                onInvoke: (n, i, o, l, u, v, M) => {
                  try {
                    return Dm(e), n.invoke(o, l, u, v, M);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && t(), Cm(e);
                  }
                },
                onHasTask: (n, i, o, l) => {
                  n.hasTask(o, l),
                    i === o &&
                      ('microTask' == l.change
                        ? ((e._hasPendingMicrotasks = l.microTask),
                          Bd(e),
                          Ld(e))
                        : 'macroTask' == l.change &&
                          (e.hasPendingMacrotasks = l.macroTask));
                },
                onHandleError: (n, i, o, l) => (
                  n.handleError(o, l),
                  e.runOutsideAngular(() => e.onError.emit(l)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < 'u' && !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!xo.isInAngularZone()) throw new Le(909, !1);
        }
        static assertNotInAngularZone() {
          if (xo.isInAngularZone()) throw new Le(909, !1);
        }
        run(t, n, i) {
          return this._inner.run(t, n, i);
        }
        runTask(t, n, i, o) {
          const l = this._inner,
            u = l.scheduleEventTask('NgZoneEvent: ' + o, t, sD, Hl, Hl);
          try {
            return l.runTask(u, n, i);
          } finally {
            l.cancelTask(u);
          }
        }
        runGuarded(t, n, i) {
          return this._inner.runGuarded(t, n, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const sD = {};
      function Ld(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function Bd(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function Dm(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function Cm(e) {
        e._nesting--, Ld(e);
      }
      class cD {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Qo()),
            (this.onMicrotaskEmpty = new Qo()),
            (this.onStable = new Qo()),
            (this.onError = new Qo());
        }
        run(t, n, i) {
          return t.apply(n, i);
        }
        runGuarded(t, n, i) {
          return t.apply(n, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, n, i, o) {
          return t.apply(n, i);
        }
      }
      const xm = new ei(''),
        Em = new ei('');
      let Vd,
        dD = (() => {
          class e {
            constructor(n, i, o) {
              (this._ngZone = n),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Vd ||
                  ((function uD(e) {
                    Vd = e;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                n.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > 'u'
                      ? null
                      : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      xo.assertNotInAngularZone(),
                        Nd(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Nd(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let n = this._callbacks.pop();
                    clearTimeout(n.timeoutId), n.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let n = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  i =>
                    !i.updateCb ||
                    !i.updateCb(n) ||
                    (clearTimeout(i.timeoutId), !1),
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map(n => ({
                    source: n.source,
                    creationLocation: n.creationLocation,
                    data: n.data,
                  }))
                : [];
            }
            addCallback(n, i, o) {
              let l = -1;
              i &&
                i > 0 &&
                (l = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    u => u.timeoutId !== l,
                  )),
                    n(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: n, timeoutId: l, updateCb: o });
            }
            whenStable(n, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?',
                );
              this.addCallback(n, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(n) {
              this.registry.registerApplication(n, this);
            }
            unregisterApplication(n) {
              this.registry.unregisterApplication(n);
            }
            findProviders(n, i, o) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)(Je(xo), Je(Mm), Je(Em));
            }),
            (e.ɵprov = nt({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Mm = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(n, i) {
              this._applications.set(n, i);
            }
            unregisterApplication(n) {
              this._applications.delete(n);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(n) {
              return this._applications.get(n) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(n, i = !0) {
              return Vd?.findTestabilityInTree(this, n, i) ?? null;
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)();
            }),
            (e.ɵprov = nt({
              token: e,
              factory: e.ɵfac,
              providedIn: 'platform',
            })),
            e
          );
        })();
      const ls = !1;
      let bs = null;
      const wm = new ei('AllowMultipleToken'),
        Hd = new ei('PlatformDestroyListeners'),
        Am = new ei('appBootstrapListener');
      class pD {
        constructor(t, n) {
          (this.name = t), (this.token = n);
        }
      }
      function Im(e, t, n = []) {
        const i = `Platform: ${t}`,
          o = new ei(i);
        return (l = []) => {
          let u = Ud();
          if (!u || u.injector.get(wm, !1)) {
            const v = [...n, ...l, { provide: o, useValue: !0 }];
            e
              ? e(v)
              : (function mD(e) {
                  if (bs && !bs.get(wm, !1)) throw new Le(400, !1);
                  bs = e;
                  const t = e.get(Tm);
                  (function Sm(e) {
                    const t = e.get(vm, null);
                    t && t.forEach(n => n());
                  })(e);
                })(
                  (function km(e = [], t) {
                    return Bs.create({
                      name: t,
                      providers: [
                        { provide: Ec, useValue: 'platform' },
                        { provide: Hd, useValue: new Set([() => (bs = null)]) },
                        ...e,
                      ],
                    });
                  })(v, i),
                );
          }
          return (function _D(e) {
            const t = Ud();
            if (!t) throw new Le(401, !1);
            return t;
          })();
        };
      }
      function Ud() {
        return bs?.get(Tm) ?? null;
      }
      let Tm = (() => {
        class e {
          constructor(n) {
            (this._injector = n),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(n, i) {
            const o = (function Rm(e, t) {
                let n;
                return (
                  (n =
                    'noop' === e
                      ? new cD()
                      : ('zone.js' === e ? void 0 : e) || new xo(t)),
                  n
                );
              })(
                i?.ngZone,
                (function Om(e) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!e || !e.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!e || !e.ngZoneRunCoalescing) || !1,
                  };
                })(i),
              ),
              l = [{ provide: xo, useValue: o }];
            return o.run(() => {
              const u = Bs.create({
                  providers: l,
                  parent: this.injector,
                  name: n.moduleType.name,
                }),
                v = n.create(u),
                M = v.injector.get(Ba, null);
              if (!M) throw new Le(402, !1);
              return (
                o.runOutsideAngular(() => {
                  const N = o.onError.subscribe({
                    next: Y => {
                      M.handleError(Y);
                    },
                  });
                  v.onDestroy(() => {
                    $l(this._modules, v), N.unsubscribe();
                  });
                }),
                (function Fm(e, t, n) {
                  try {
                    const i = n();
                    return ed(i)
                      ? i.catch(o => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(M, o, () => {
                  const N = v.injector.get(Ul);
                  return (
                    N.runInitializers(),
                    N.donePromise.then(
                      () => (
                        (function Zf(e) {
                          a(e, 'Expected localeId to be defined'),
                            'string' == typeof e &&
                              (Kf = e.toLowerCase().replace(/_/g, '-'));
                        })(v.injector.get(jl, ma) || ma),
                        this._moduleDoBootstrap(v),
                        v
                      ),
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(n, i = []) {
            const o = Pm({}, i);
            return (function hD(e, t, n) {
              const i = new yd(n);
              return Promise.resolve(i);
            })(0, 0, n).then(l => this.bootstrapModuleFactory(l, o));
          }
          _moduleDoBootstrap(n) {
            const i = n.injector.get(zl);
            if (n._bootstrapComponents.length > 0)
              n._bootstrapComponents.forEach(o => i.bootstrap(o));
            else {
              if (!n.instance.ngDoBootstrap) throw new Le(-403, !1);
              n.instance.ngDoBootstrap(i);
            }
            this._modules.push(n);
          }
          onDestroy(n) {
            this._destroyListeners.push(n);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Le(404, !1);
            this._modules.slice().forEach(i => i.destroy()),
              this._destroyListeners.forEach(i => i());
            const n = this._injector.get(Hd, null);
            n && (n.forEach(i => i()), n.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(Bs));
          }),
          (e.ɵprov = nt({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      function Pm(e, t) {
        return Array.isArray(t) ? t.reduce(Pm, e) : { ...e, ...t };
      }
      let zl = (() => {
        class e {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(n, i, o) {
            (this._zone = n),
              (this._injector = i),
              (this._exceptionHandler = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const l = new L.y(v => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    v.next(this._stable), v.complete();
                  });
              }),
              u = new L.y(v => {
                let M;
                this._zone.runOutsideAngular(() => {
                  M = this._zone.onStable.subscribe(() => {
                    xo.assertNotInAngularZone(),
                      Nd(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), v.next(!0));
                      });
                  });
                });
                const N = this._zone.onUnstable.subscribe(() => {
                  xo.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        v.next(!1);
                      }));
                });
                return () => {
                  M.unsubscribe(), N.unsubscribe();
                };
              });
            this.isStable = (0, oe.T)(l, u.pipe((0, ee.B)()));
          }
          bootstrap(n, i) {
            const o = n instanceof Wu;
            if (!this._injector.get(Ul).done) {
              !o && ai(n);
              throw new Le(405, ls);
            }
            let u;
            (u = o ? n : this._injector.get(Na).resolveComponentFactory(n)),
              this.componentTypes.push(u.componentType);
            const v = (function fD(e) {
                return e.isBoundToModule;
              })(u)
                ? void 0
                : this._injector.get(ga),
              N = u.create(Bs.NULL, [], i || u.selector, v),
              Y = N.location.nativeElement,
              ie = N.injector.get(xm, null);
            return (
              ie?.registerApplication(Y),
              N.onDestroy(() => {
                this.detachView(N.hostView),
                  $l(this.components, N),
                  ie?.unregisterApplication(Y);
              }),
              this._loadComponent(N),
              N
            );
          }
          tick() {
            if (this._runningTick) throw new Le(101, !1);
            try {
              this._runningTick = !0;
              for (let n of this._views) n.detectChanges();
            } catch (n) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(n),
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(n) {
            const i = n;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(n) {
            const i = n;
            $l(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(n) {
            this.attachView(n.hostView), this.tick(), this.components.push(n);
            const i = this._injector.get(Am, []);
            i.push(...this._bootstrapListeners), i.forEach(o => o(n));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach(n => n()),
                  this._views.slice().forEach(n => n.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(n) {
            return (
              this._destroyListeners.push(n),
              () => $l(this._destroyListeners, n)
            );
          }
          destroy() {
            if (this._destroyed) throw new Le(406, !1);
            const n = this._injector;
            n.destroy && !n.destroyed && n.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(xo), Je(Ls), Je(Ba));
          }),
          (e.ɵprov = nt({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      function $l(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function bD() {
        return !1;
      }
      let yD = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = DD), e;
      })();
      function DD(e) {
        return (function CD(e, t, n) {
          if (It(e) && !n) {
            const i = Ei(e.index, t);
            return new Ha(i, i);
          }
          return 47 & e.type ? new Ha(t[ni], t) : null;
        })(ii(), lt(), 16 == (16 & e));
      }
      class Hm {
        constructor() {}
        supports(t) {
          return xl(t);
        }
        create(t) {
          return new SD(t);
        }
      }
      const AD = (e, t) => t;
      class SD {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || AD);
        }
        forEachItem(t) {
          let n;
          for (n = this._itHead; null !== n; n = n._next) t(n);
        }
        forEachOperation(t) {
          let n = this._itHead,
            i = this._removalsHead,
            o = 0,
            l = null;
          for (; n || i; ) {
            const u = !i || (n && n.currentIndex < jm(i, o, l)) ? n : i,
              v = jm(u, o, l),
              M = u.currentIndex;
            if (u === i) o--, (i = i._nextRemoved);
            else if (((n = n._next), null == u.previousIndex)) o++;
            else {
              l || (l = []);
              const N = v - o,
                Y = M - o;
              if (N != Y) {
                for (let Fe = 0; Fe < N; Fe++) {
                  const Qe = Fe < l.length ? l[Fe] : (l[Fe] = 0),
                    yt = Qe + Fe;
                  Y <= yt && yt < N && (l[Fe] = Qe + 1);
                }
                l[u.previousIndex] = Y - N;
              }
            }
            v !== M && t(u, v, M);
          }
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousItHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachMovedItem(t) {
          let n;
          for (n = this._movesHead; null !== n; n = n._nextMoved) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        forEachIdentityChange(t) {
          let n;
          for (
            n = this._identityChangesHead;
            null !== n;
            n = n._nextIdentityChange
          )
            t(n);
        }
        diff(t) {
          if ((null == t && (t = []), !xl(t))) throw new Le(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let o,
            l,
            u,
            n = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let v = 0; v < this.length; v++)
              (l = t[v]),
                (u = this._trackByFn(v, l)),
                null !== n && Object.is(n.trackById, u)
                  ? (i && (n = this._verifyReinsertion(n, l, u, v)),
                    Object.is(n.item, l) || this._addIdentityChange(n, l))
                  : ((n = this._mismatch(n, l, u, v)), (i = !0)),
                (n = n._next);
          } else
            (o = 0),
              (function Xv(e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Symbol.iterator]();
                  let i;
                  for (; !(i = n.next()).done; ) t(i.value);
                }
              })(t, v => {
                (u = this._trackByFn(o, v)),
                  null !== n && Object.is(n.trackById, u)
                    ? (i && (n = this._verifyReinsertion(n, v, u, o)),
                      Object.is(n.item, v) || this._addIdentityChange(n, v))
                    : ((n = this._mismatch(n, v, u, o)), (i = !0)),
                  (n = n._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(n), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, n, i, o) {
          let l;
          return (
            null === t ? (l = this._itTail) : ((l = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, l, o))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, l, o))
              : (t = this._addAfter(new ID(n, i), l, o)),
            t
          );
        }
        _verifyReinsertion(t, n, i, o) {
          let l =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== l
              ? (t = this._reinsertAfter(l, t._prev, o))
              : t.currentIndex != o &&
                ((t.currentIndex = o), this._addToMoves(t, o)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const n = t._next;
            this._addToRemovals(this._unlink(t)), (t = n);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, n, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const o = t._prevRemoved,
            l = t._nextRemoved;
          return (
            null === o ? (this._removalsHead = l) : (o._nextRemoved = l),
            null === l ? (this._removalsTail = o) : (l._prevRemoved = o),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, n, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, n, i) {
          return (
            this._insertAfter(t, n, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, n, i) {
          const o = null === n ? this._itHead : n._next;
          return (
            (t._next = o),
            (t._prev = n),
            null === o ? (this._itTail = t) : (o._prev = t),
            null === n ? (this._itHead = t) : (n._next = t),
            null === this._linkedRecords && (this._linkedRecords = new Um()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const n = t._prev,
            i = t._next;
          return (
            null === n ? (this._itHead = i) : (n._next = i),
            null === i ? (this._itTail = n) : (i._prev = n),
            t
          );
        }
        _addToMoves(t, n) {
          return (
            t.previousIndex === n ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Um()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, n) {
          return (
            (t.item = n),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class ID {
        constructor(t, n) {
          (this.item = t),
            (this.trackById = n),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class kD {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, n) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === n || n <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const n = t._prevDup,
            i = t._nextDup;
          return (
            null === n ? (this._head = i) : (n._nextDup = i),
            null === i ? (this._tail = n) : (i._prevDup = n),
            null === this._head
          );
        }
      }
      class Um {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const n = t.trackById;
          let i = this.map.get(n);
          i || ((i = new kD()), this.map.set(n, i)), i.add(t);
        }
        get(t, n) {
          const o = this.map.get(t);
          return o ? o.get(t, n) : null;
        }
        remove(t) {
          const n = t.trackById;
          return this.map.get(n).remove(t) && this.map.delete(n), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function jm(e, t, n) {
        const i = e.previousIndex;
        if (null === i) return i;
        let o = 0;
        return n && i < n.length && (o = n[i]), i + t + o;
      }
      class zm {
        constructor() {}
        supports(t) {
          return t instanceof Map || Zc(t);
        }
        create() {
          return new TD();
        }
      }
      class TD {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let n;
          for (n = this._mapHead; null !== n; n = n._next) t(n);
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousMapHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachChangedItem(t) {
          let n;
          for (n = this._changesHead; null !== n; n = n._nextChanged) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Zc(t))) throw new Le(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let n = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, o) => {
              if (n && n.key === o)
                this._maybeAddToChanges(n, i),
                  (this._appendAfter = n),
                  (n = n._next);
              else {
                const l = this._getOrCreateRecordForKey(o, i);
                n = this._insertBeforeOrAppend(n, l);
              }
            }),
            n)
          ) {
            n._prev && (n._prev._next = null), (this._removalsHead = n);
            for (let i = n; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, n) {
          if (t) {
            const i = t._prev;
            return (
              (n._next = t),
              (n._prev = i),
              (t._prev = n),
              i && (i._next = n),
              t === this._mapHead && (this._mapHead = n),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = n), (n._prev = this._appendAfter))
              : (this._mapHead = n),
            (this._appendAfter = n),
            null
          );
        }
        _getOrCreateRecordForKey(t, n) {
          if (this._records.has(t)) {
            const o = this._records.get(t);
            this._maybeAddToChanges(o, n);
            const l = o._prev,
              u = o._next;
            return (
              l && (l._next = u),
              u && (u._prev = l),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new OD(t);
          return (
            this._records.set(t, i),
            (i.currentValue = n),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, n) {
          Object.is(n, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = n),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, n) {
          t instanceof Map
            ? t.forEach(n)
            : Object.keys(t).forEach(i => n(t[i], i));
        }
      }
      class OD {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function $m() {
        return new Gd([new Hm()]);
      }
      let Gd = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (null != i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || $m()),
              deps: [[e, new Gs(), new Ai()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (null != i) return i;
            throw new Le(901, !1);
          }
        }
        return (e.ɵprov = nt({ token: e, providedIn: 'root', factory: $m })), e;
      })();
      function Ym() {
        return new Wd([new zm()]);
      }
      let Wd = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || Ym()),
              deps: [[e, new Gs(), new Ai()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (i) return i;
            throw new Le(901, !1);
          }
        }
        return (e.ɵprov = nt({ token: e, providedIn: 'root', factory: Ym })), e;
      })();
      const PD = Im(null, 'core', []);
      let ND = (() => {
        class e {
          constructor(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(zl));
          }),
          (e.ɵmod = Pn({ type: e })),
          (e.ɵinj = Mn({})),
          e
        );
      })();
      function LD(e) {
        return 'boolean' == typeof e ? e : null != e && 'false' !== e;
      }
    },
    4006: (Ot, Ne, C) => {
      C.d(Ne, {
        Cf: () => pt,
        F: () => Zn,
        Fj: () => ze,
        JJ: () => xt,
        JL: () => ht,
        JU: () => ue,
        On: () => Bn,
        Q7: () => Fr,
        UX: () => Er,
        Zs: () => Ur,
        _Y: () => Hn,
        a5: () => mn,
        kI: () => xe,
        oH: () => It,
        qu: () => Ao,
        sg: () => vn,
        u5: () => bn,
      });
      var s = C(4650),
        x = C(6895),
        L = C(457),
        oe = C(4128),
        ee = C(4004);
      let he = (() => {
          class k {
            constructor(w, G) {
              (this._renderer = w),
                (this._elementRef = G),
                (this.onChange = it => {}),
                (this.onTouched = () => {});
            }
            setProperty(w, G) {
              this._renderer.setProperty(this._elementRef.nativeElement, w, G);
            }
            registerOnTouched(w) {
              this.onTouched = w;
            }
            registerOnChange(w) {
              this.onChange = w;
            }
            setDisabledState(w) {
              this.setProperty('disabled', w);
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)(s.Y36(s.Qsj), s.Y36(s.SBq));
            }),
            (k.ɵdir = s.lG2({ type: k })),
            k
          );
        })(),
        ge = (() => {
          class k extends he {}
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({ type: k, features: [s.qOj] })),
            k
          );
        })();
      const ue = new s.OlP('NgValueAccessor'),
        pe = { provide: ue, useExisting: (0, s.Gpc)(() => ze), multi: !0 },
        Be = new s.OlP('CompositionEventMode');
      let ze = (() => {
        class k extends he {
          constructor(w, G, it) {
            super(w, G),
              (this._compositionMode = it),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function se() {
                  const k = (0, x.q)() ? (0, x.q)().getUserAgent() : '';
                  return /android (\d+)/.test(k.toLowerCase());
                })());
          }
          writeValue(w) {
            this.setProperty('value', w ?? '');
          }
          _handleInput(w) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(w);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(w) {
            (this._composing = !1), this._compositionMode && this.onChange(w);
          }
        }
        return (
          (k.ɵfac = function (w) {
            return new (w || k)(s.Y36(s.Qsj), s.Y36(s.SBq), s.Y36(Be, 8));
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (w, G) {
              1 & w &&
                s.NdJ('input', function (Qt) {
                  return G._handleInput(Qt.target.value);
                })('blur', function () {
                  return G.onTouched();
                })('compositionstart', function () {
                  return G._compositionStart();
                })('compositionend', function (Qt) {
                  return G._compositionEnd(Qt.target.value);
                });
            },
            features: [s._Bn([pe]), s.qOj],
          })),
          k
        );
      })();
      const st = !1;
      function gt(k) {
        return (
          null == k ||
          (('string' == typeof k || Array.isArray(k)) && 0 === k.length)
        );
      }
      function Le(k) {
        return null != k && 'number' == typeof k.length;
      }
      const pt = new s.OlP('NgValidators'),
        at = new s.OlP('NgAsyncValidators'),
        vt =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class xe {
        static min(I) {
          return (function ne(k) {
            return I => {
              if (gt(I.value) || gt(k)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w < k
                ? { min: { min: k, actual: I.value } }
                : null;
            };
          })(I);
        }
        static max(I) {
          return (function te(k) {
            return I => {
              if (gt(I.value) || gt(k)) return null;
              const w = parseFloat(I.value);
              return !isNaN(w) && w > k
                ? { max: { max: k, actual: I.value } }
                : null;
            };
          })(I);
        }
        static required(I) {
          return X(I);
        }
        static requiredTrue(I) {
          return Se(I);
        }
        static email(I) {
          return (function tt(k) {
            return gt(k.value) || vt.test(k.value) ? null : { email: !0 };
          })(I);
        }
        static minLength(I) {
          return (function re(k) {
            return I =>
              gt(I.value) || !Le(I.value)
                ? null
                : I.value.length < k
                ? {
                    minlength: {
                      requiredLength: k,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static maxLength(I) {
          return (function At(k) {
            return I =>
              Le(I.value) && I.value.length > k
                ? {
                    maxlength: {
                      requiredLength: k,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static pattern(I) {
          return (function mt(k) {
            if (!k) return Yt;
            let I, w;
            return (
              'string' == typeof k
                ? ((w = ''),
                  '^' !== k.charAt(0) && (w += '^'),
                  (w += k),
                  '$' !== k.charAt(k.length - 1) && (w += '$'),
                  (I = new RegExp(w)))
                : ((w = k.toString()), (I = k)),
              G => {
                if (gt(G.value)) return null;
                const it = G.value;
                return I.test(it)
                  ? null
                  : { pattern: { requiredPattern: w, actualValue: it } };
              }
            );
          })(I);
        }
        static nullValidator(I) {
          return null;
        }
        static compose(I) {
          return Pe(I);
        }
        static composeAsync(I) {
          return Ye(I);
        }
      }
      function X(k) {
        return gt(k.value) ? { required: !0 } : null;
      }
      function Se(k) {
        return !0 === k.value ? null : { required: !0 };
      }
      function Yt(k) {
        return null;
      }
      function Et(k) {
        return null != k;
      }
      function Ge(k) {
        const I = (0, s.QGY)(k) ? (0, L.D)(k) : k;
        if (st && !(0, s.CqO)(I)) {
          let w = 'Expected async validator to return Promise or Observable.';
          throw (
            ('object' == typeof k &&
              (w +=
                ' Are you using a synchronous validator where an async validator is expected?'),
            new s.vHH(-1101, w))
          );
        }
        return I;
      }
      function $e(k) {
        let I = {};
        return (
          k.forEach(w => {
            I = null != w ? { ...I, ...w } : I;
          }),
          0 === Object.keys(I).length ? null : I
        );
      }
      function Me(k, I) {
        return I.map(w => w(k));
      }
      function De(k) {
        return k.map(I =>
          (function Ue(k) {
            return !k.validate;
          })(I)
            ? I
            : w => I.validate(w),
        );
      }
      function Pe(k) {
        if (!k) return null;
        const I = k.filter(Et);
        return 0 == I.length
          ? null
          : function (w) {
              return $e(Me(w, I));
            };
      }
      function a(k) {
        return null != k ? Pe(De(k)) : null;
      }
      function Ye(k) {
        if (!k) return null;
        const I = k.filter(Et);
        return 0 == I.length
          ? null
          : function (w) {
              const G = Me(w, I).map(Ge);
              return (0, oe.D)(G).pipe((0, ee.U)($e));
            };
      }
      function rt(k) {
        return null != k ? Ye(De(k)) : null;
      }
      function je(k, I) {
        return null === k ? [I] : Array.isArray(k) ? [...k, I] : [k, I];
      }
      function ut(k) {
        return k._rawValidators;
      }
      function nt(k) {
        return k._rawAsyncValidators;
      }
      function Lt(k) {
        return k ? (Array.isArray(k) ? k : [k]) : [];
      }
      function Mn(k, I) {
        return Array.isArray(k) ? k.includes(I) : k === I;
      }
      function un(k, I) {
        const w = Lt(I);
        return (
          Lt(k).forEach(it => {
            Mn(w, it) || w.push(it);
          }),
          w
        );
      }
      function an(k, I) {
        return Lt(I).filter(w => !Mn(k, w));
      }
      class Dn {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(I) {
          (this._rawValidators = I || []),
            (this._composedValidatorFn = a(this._rawValidators));
        }
        _setAsyncValidators(I) {
          (this._rawAsyncValidators = I || []),
            (this._composedAsyncValidatorFn = rt(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(I) {
          this._onDestroyCallbacks.push(I);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach(I => I()),
            (this._onDestroyCallbacks = []);
        }
        reset(I) {
          this.control && this.control.reset(I);
        }
        hasError(I, w) {
          return !!this.control && this.control.hasError(I, w);
        }
        getError(I, w) {
          return this.control ? this.control.getError(I, w) : null;
        }
      }
      class Kt extends Dn {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class mn extends Dn {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class wn {
        constructor(I) {
          this._cd = I;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let xt = (() => {
          class k extends wn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)(s.Y36(mn, 2));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (w, G) {
                2 & w &&
                  s.ekj('ng-untouched', G.isUntouched)(
                    'ng-touched',
                    G.isTouched,
                  )('ng-pristine', G.isPristine)('ng-dirty', G.isDirty)(
                    'ng-valid',
                    G.isValid,
                  )('ng-invalid', G.isInvalid)('ng-pending', G.isPending);
              },
              features: [s.qOj],
            })),
            k
          );
        })(),
        ht = (() => {
          class k extends wn {
            constructor(w) {
              super(w);
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)(s.Y36(Kt, 10));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (w, G) {
                2 & w &&
                  s.ekj('ng-untouched', G.isUntouched)(
                    'ng-touched',
                    G.isTouched,
                  )('ng-pristine', G.isPristine)('ng-dirty', G.isDirty)(
                    'ng-valid',
                    G.isValid,
                  )('ng-invalid', G.isInvalid)('ng-pending', G.isPending)(
                    'ng-submitted',
                    G.isSubmitted,
                  );
              },
              features: [s.qOj],
            })),
            k
          );
        })();
      function et(k, I) {
        return k ? `with name: '${I}'` : `at index: ${I}`;
      }
      const Oe = !1,
        bt = 'VALID',
        Je = 'INVALID',
        wt = 'PENDING',
        Te = 'DISABLED';
      function R(k) {
        return (Q(k) ? k.validators : k) || null;
      }
      function E(k, I) {
        return (Q(I) ? I.asyncValidators : k) || null;
      }
      function Q(k) {
        return null != k && !Array.isArray(k) && 'object' == typeof k;
      }
      function We(k, I, w) {
        const G = k.controls;
        if (!(I ? Object.keys(G) : G).length)
          throw new s.vHH(
            1e3,
            Oe
              ? (function Mt(k) {
                  return `\n    There are no form controls registered with this ${
                    k ? 'group' : 'array'
                  } yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;
                })(I)
              : '',
          );
        if (!G[w])
          throw new s.vHH(
            1001,
            Oe
              ? (function Rt(k, I) {
                  return `Cannot find form control ${et(k, I)}`;
                })(I, w)
              : '',
          );
      }
      function St(k, I, w) {
        k._forEachChild((G, it) => {
          if (void 0 === w[it])
            throw new s.vHH(
              1002,
              Oe
                ? (function Cn(k, I) {
                    return `Must supply a value for form control ${et(k, I)}`;
                  })(I, it)
                : '',
            );
        });
      }
      class Gt {
        constructor(I, w) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(I),
            this._assignAsyncValidators(w);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(I) {
          this._rawValidators = this._composedValidatorFn = I;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(I) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = I;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === bt;
        }
        get invalid() {
          return this.status === Je;
        }
        get pending() {
          return this.status == wt;
        }
        get disabled() {
          return this.status === Te;
        }
        get enabled() {
          return this.status !== Te;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : 'change';
        }
        setValidators(I) {
          this._assignValidators(I);
        }
        setAsyncValidators(I) {
          this._assignAsyncValidators(I);
        }
        addValidators(I) {
          this.setValidators(un(I, this._rawValidators));
        }
        addAsyncValidators(I) {
          this.setAsyncValidators(un(I, this._rawAsyncValidators));
        }
        removeValidators(I) {
          this.setValidators(an(I, this._rawValidators));
        }
        removeAsyncValidators(I) {
          this.setAsyncValidators(an(I, this._rawAsyncValidators));
        }
        hasValidator(I) {
          return Mn(this._rawValidators, I);
        }
        hasAsyncValidator(I) {
          return Mn(this._rawAsyncValidators, I);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(I = {}) {
          (this.touched = !0),
            this._parent && !I.onlySelf && this._parent.markAsTouched(I);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild(I => I.markAllAsTouched());
        }
        markAsUntouched(I = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild(w => {
              w.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        markAsDirty(I = {}) {
          (this.pristine = !1),
            this._parent && !I.onlySelf && this._parent.markAsDirty(I);
        }
        markAsPristine(I = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild(w => {
              w.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        markAsPending(I = {}) {
          (this.status = wt),
            !1 !== I.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !I.onlySelf && this._parent.markAsPending(I);
        }
        disable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = Te),
            (this.errors = null),
            this._forEachChild(G => {
              G.disable({ ...I, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach(G => G(!0));
        }
        enable(I = {}) {
          const w = this._parentMarkedDirty(I.onlySelf);
          (this.status = bt),
            this._forEachChild(G => {
              G.enable({ ...I, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            }),
            this._updateAncestors({ ...I, skipPristineCheck: w }),
            this._onDisabledChange.forEach(G => G(!1));
        }
        _updateAncestors(I) {
          this._parent &&
            !I.onlySelf &&
            (this._parent.updateValueAndValidity(I),
            I.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(I) {
          this._parent = I;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(I = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === bt || this.status === wt) &&
                this._runAsyncValidator(I.emitEvent)),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !I.onlySelf &&
              this._parent.updateValueAndValidity(I);
        }
        _updateTreeValidity(I = { emitEvent: !0 }) {
          this._forEachChild(w => w._updateTreeValidity(I)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Te : bt;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(I) {
          if (this.asyncValidator) {
            (this.status = wt), (this._hasOwnPendingAsyncValidator = !0);
            const w = Ge(this.asyncValidator(this));
            this._asyncValidationSubscription = w.subscribe(G => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(G, { emitEvent: I });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(I, w = {}) {
          (this.errors = I), this._updateControlsErrors(!1 !== w.emitEvent);
        }
        get(I) {
          let w = I;
          return null == w ||
            (Array.isArray(w) || (w = w.split('.')), 0 === w.length)
            ? null
            : w.reduce((G, it) => G && G._find(it), this);
        }
        getError(I, w) {
          const G = w ? this.get(w) : this;
          return G && G.errors ? G.errors[I] : null;
        }
        hasError(I, w) {
          return !!this.getError(I, w);
        }
        get root() {
          let I = this;
          for (; I._parent; ) I = I._parent;
          return I;
        }
        _updateControlsErrors(I) {
          (this.status = this._calculateStatus()),
            I && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(I);
        }
        _initObservables() {
          (this.valueChanges = new s.vpe()), (this.statusChanges = new s.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Te
            : this.errors
            ? Je
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(wt)
            ? wt
            : this._anyControlsHaveStatus(Je)
            ? Je
            : bt;
        }
        _anyControlsHaveStatus(I) {
          return this._anyControls(w => w.status === I);
        }
        _anyControlsDirty() {
          return this._anyControls(I => I.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls(I => I.touched);
        }
        _updatePristine(I = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        _updateTouched(I = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        _registerOnCollectionChange(I) {
          this._onCollectionChange = I;
        }
        _setUpdateStrategy(I) {
          Q(I) && null != I.updateOn && (this._updateOn = I.updateOn);
        }
        _parentMarkedDirty(I) {
          return (
            !I &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(I) {
          return null;
        }
        _assignValidators(I) {
          (this._rawValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedValidatorFn = (function b(k) {
              return Array.isArray(k) ? a(k) : k || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(I) {
          (this._rawAsyncValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedAsyncValidatorFn = (function V(k) {
              return Array.isArray(k) ? rt(k) : k || null;
            })(this._rawAsyncValidators));
        }
      }
      class zt extends Gt {
        constructor(I, w, G) {
          super(R(w), E(G, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(I, w) {
          return this.controls[I]
            ? this.controls[I]
            : ((this.controls[I] = w),
              w.setParent(this),
              w._registerOnCollectionChange(this._onCollectionChange),
              w);
        }
        addControl(I, w, G = {}) {
          this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(I, w = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        setControl(I, w, G = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            w && this.registerControl(I, w),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        contains(I) {
          return this.controls.hasOwnProperty(I) && this.controls[I].enabled;
        }
        setValue(I, w = {}) {
          St(this, !0, I),
            Object.keys(I).forEach(G => {
              We(this, !0, G),
                this.controls[G].setValue(I[G], {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (Object.keys(I).forEach(G => {
              const it = this.controls[G];
              it &&
                it.patchValue(I[G], { onlySelf: !0, emitEvent: w.emitEvent });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = {}, w = {}) {
          this._forEachChild((G, it) => {
            G.reset(I[it], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (I, w, G) => ((I[G] = w.getRawValue()), I),
          );
        }
        _syncPendingControls() {
          let I = this._reduceChildren(
            !1,
            (w, G) => !!G._syncPendingControls() || w,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          Object.keys(this.controls).forEach(w => {
            const G = this.controls[w];
            G && I(G, w);
          });
        }
        _setUpControls() {
          this._forEachChild(I => {
            I.setParent(this),
              I._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(I) {
          for (const [w, G] of Object.entries(this.controls))
            if (this.contains(w) && I(G)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (w, G, it) => (
              (G.enabled || this.disabled) && (w[it] = G.value), w
            ),
          );
        }
        _reduceChildren(I, w) {
          let G = I;
          return (
            this._forEachChild((it, Qt) => {
              G = w(G, it, Qt);
            }),
            G
          );
        }
        _allControlsDisabled() {
          for (const I of Object.keys(this.controls))
            if (this.controls[I].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(I) {
          return this.controls.hasOwnProperty(I) ? this.controls[I] : null;
        }
      }
      class Re extends zt {}
      const K = new s.OlP('CallSetDisabledState', {
          providedIn: 'root',
          factory: () => we,
        }),
        we = 'always';
      function Ft(k, I, w = we) {
        Ut(k, I),
          I.valueAccessor.writeValue(k.value),
          (k.disabled || 'always' === w) &&
            I.valueAccessor.setDisabledState?.(k.disabled),
          (function Pn(k, I) {
            I.valueAccessor.registerOnChange(w => {
              (k._pendingValue = w),
                (k._pendingChange = !0),
                (k._pendingDirty = !0),
                'change' === k.updateOn && Wn(k, I);
            });
          })(k, I),
          (function Hi(k, I) {
            const w = (G, it) => {
              I.valueAccessor.writeValue(G), it && I.viewToModelUpdate(G);
            };
            k.registerOnChange(w),
              I._registerOnDestroy(() => {
                k._unregisterOnChange(w);
              });
          })(k, I),
          (function ir(k, I) {
            I.valueAccessor.registerOnTouched(() => {
              (k._pendingTouched = !0),
                'blur' === k.updateOn && k._pendingChange && Wn(k, I),
                'submit' !== k.updateOn && k.markAsTouched();
            });
          })(k, I),
          (function In(k, I) {
            if (I.valueAccessor.setDisabledState) {
              const w = G => {
                I.valueAccessor.setDisabledState(G);
              };
              k.registerOnDisabledChange(w),
                I._registerOnDestroy(() => {
                  k._unregisterOnDisabledChange(w);
                });
            }
          })(k, I);
      }
      function Zt(k, I, w = !0) {
        const G = () => {};
        I.valueAccessor &&
          (I.valueAccessor.registerOnChange(G),
          I.valueAccessor.registerOnTouched(G)),
          qn(k, I),
          k &&
            (I._invokeOnDestroyCallbacks(),
            k._registerOnCollectionChange(() => {}));
      }
      function _n(k, I) {
        k.forEach(w => {
          w.registerOnValidatorChange && w.registerOnValidatorChange(I);
        });
      }
      function Ut(k, I) {
        const w = ut(k);
        null !== I.validator
          ? k.setValidators(je(w, I.validator))
          : 'function' == typeof w && k.setValidators([w]);
        const G = nt(k);
        null !== I.asyncValidator
          ? k.setAsyncValidators(je(G, I.asyncValidator))
          : 'function' == typeof G && k.setAsyncValidators([G]);
        const it = () => k.updateValueAndValidity();
        _n(I._rawValidators, it), _n(I._rawAsyncValidators, it);
      }
      function qn(k, I) {
        let w = !1;
        if (null !== k) {
          if (null !== I.validator) {
            const it = ut(k);
            if (Array.isArray(it) && it.length > 0) {
              const Qt = it.filter(Jn => Jn !== I.validator);
              Qt.length !== it.length && ((w = !0), k.setValidators(Qt));
            }
          }
          if (null !== I.asyncValidator) {
            const it = nt(k);
            if (Array.isArray(it) && it.length > 0) {
              const Qt = it.filter(Jn => Jn !== I.asyncValidator);
              Qt.length !== it.length && ((w = !0), k.setAsyncValidators(Qt));
            }
          }
        }
        const G = () => {};
        return _n(I._rawValidators, G), _n(I._rawAsyncValidators, G), w;
      }
      function Wn(k, I) {
        k._pendingDirty && k.markAsDirty(),
          k.setValue(k._pendingValue, { emitModelToViewChange: !1 }),
          I.viewToModelUpdate(k._pendingValue),
          (k._pendingChange = !1);
      }
      function Si(k, I) {
        Ut(k, I);
      }
      function xi(k, I) {
        if (!k.hasOwnProperty('model')) return !1;
        const w = k.model;
        return !!w.isFirstChange() || !Object.is(I, w.currentValue);
      }
      function mi(k, I) {
        k._syncPendingControls(),
          I.forEach(w => {
            const G = w.control;
            'submit' === G.updateOn &&
              G._pendingChange &&
              (w.viewToModelUpdate(G._pendingValue), (G._pendingChange = !1));
          });
      }
      function $t(k, I) {
        if (!I) return null;
        let w, G, it;
        return (
          Array.isArray(I),
          I.forEach(Qt => {
            Qt.constructor === ze
              ? (w = Qt)
              : (function gr(k) {
                  return Object.getPrototypeOf(k.constructor) === ge;
                })(Qt)
              ? (G = Qt)
              : (it = Qt);
          }),
          it || G || w || null
        );
      }
      const fi = { provide: Kt, useExisting: (0, s.Gpc)(() => Zn) },
        Xn = (() => Promise.resolve())();
      let Zn = (() => {
        class k extends Kt {
          constructor(w, G, it) {
            super(),
              (this.callSetDisabledState = it),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new s.vpe()),
              (this.form = new zt({}, a(w), rt(G)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(w) {
            Xn.then(() => {
              const G = this._findContainer(w.path);
              (w.control = G.registerControl(w.name, w.control)),
                Ft(w.control, w, this.callSetDisabledState),
                w.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(w);
            });
          }
          getControl(w) {
            return this.form.get(w.path);
          }
          removeControl(w) {
            Xn.then(() => {
              const G = this._findContainer(w.path);
              G && G.removeControl(w.name), this._directives.delete(w);
            });
          }
          addFormGroup(w) {
            Xn.then(() => {
              const G = this._findContainer(w.path),
                it = new zt({});
              Si(it, w),
                G.registerControl(w.name, it),
                it.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(w) {
            Xn.then(() => {
              const G = this._findContainer(w.path);
              G && G.removeControl(w.name);
            });
          }
          getFormGroup(w) {
            return this.form.get(w.path);
          }
          updateModel(w, G) {
            Xn.then(() => {
              this.form.get(w.path).setValue(G);
            });
          }
          setValue(w) {
            this.control.setValue(w);
          }
          onSubmit(w) {
            return (
              (this.submitted = !0),
              mi(this.form, this._directives),
              this.ngSubmit.emit(w),
              'dialog' === w?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(w) {
            this.form.reset(w), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(w) {
            return w.pop(), w.length ? this.form.get(w) : this.form;
          }
        }
        return (
          (k.ɵfac = function (w) {
            return new (w || k)(s.Y36(pt, 10), s.Y36(at, 10), s.Y36(K, 8));
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [
              ['form', 3, 'ngNoForm', '', 3, 'formGroup', ''],
              ['ng-form'],
              ['', 'ngForm', ''],
            ],
            hostBindings: function (w, G) {
              1 & w &&
                s.NdJ('submit', function (Qt) {
                  return G.onSubmit(Qt);
                })('reset', function () {
                  return G.onReset();
                });
            },
            inputs: { options: ['ngFormOptions', 'options'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [s._Bn([fi]), s.qOj],
          })),
          k
        );
      })();
      function pi(k, I) {
        const w = k.indexOf(I);
        w > -1 && k.splice(w, 1);
      }
      function An(k) {
        return (
          'object' == typeof k &&
          null !== k &&
          2 === Object.keys(k).length &&
          'value' in k &&
          'disabled' in k
        );
      }
      const gi = class extends Gt {
          constructor(I = null, w, G) {
            super(R(w), E(G, w)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(I),
              this._setUpdateStrategy(w),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Q(w) &&
                (w.nonNullable || w.initialValueIsDefault) &&
                (this.defaultValue = An(I) ? I.value : I);
          }
          setValue(I, w = {}) {
            (this.value = this._pendingValue = I),
              this._onChange.length &&
                !1 !== w.emitModelToViewChange &&
                this._onChange.forEach(G =>
                  G(this.value, !1 !== w.emitViewToModelChange),
                ),
              this.updateValueAndValidity(w);
          }
          patchValue(I, w = {}) {
            this.setValue(I, w);
          }
          reset(I = this.defaultValue, w = {}) {
            this._applyFormState(I),
              this.markAsPristine(w),
              this.markAsUntouched(w),
              this.setValue(this.value, w),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(I) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(I) {
            this._onChange.push(I);
          }
          _unregisterOnChange(I) {
            pi(this._onChange, I);
          }
          registerOnDisabledChange(I) {
            this._onDisabledChange.push(I);
          }
          _unregisterOnDisabledChange(I) {
            pi(this._onDisabledChange, I);
          }
          _forEachChild(I) {}
          _syncPendingControls() {
            return !(
              'submit' !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(I) {
            An(I)
              ? ((this.value = this._pendingValue = I.value),
                I.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = I);
          }
        },
        ji = { provide: mn, useExisting: (0, s.Gpc)(() => Bn) },
        fr = (() => Promise.resolve())();
      let Bn = (() => {
          class k extends mn {
            constructor(w, G, it, Qt, Jn, lt) {
              super(),
                (this._changeDetectorRef = Jn),
                (this.callSetDisabledState = lt),
                (this.control = new gi()),
                (this._registered = !1),
                (this.update = new s.vpe()),
                (this._parent = w),
                this._setValidators(G),
                this._setAsyncValidators(it),
                (this.valueAccessor = $t(0, Qt));
            }
            ngOnChanges(w) {
              if ((this._checkForErrors(), !this._registered || 'name' in w)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const G = w.name.previousValue;
                  this.formDirective.removeControl({
                    name: G,
                    path: this._getPath(G),
                  });
                }
                this._setUpControl();
              }
              'isDisabled' in w && this._updateDisabled(w),
                xi(w, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(w) {
              (this.viewModel = w), this.update.emit(w);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Ft(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(w) {
              fr.then(() => {
                this.control.setValue(w, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(w) {
              const G = w.isDisabled.currentValue,
                it = 0 !== G && (0, s.D6c)(G);
              fr.then(() => {
                it && !this.control.disabled
                  ? this.control.disable()
                  : !it && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(w) {
              return this._parent
                ? (function ct(k, I) {
                    return [...I.path, k];
                  })(w, this._parent)
                : [w];
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)(
                s.Y36(Kt, 9),
                s.Y36(pt, 10),
                s.Y36(at, 10),
                s.Y36(ue, 10),
                s.Y36(s.sBO, 8),
                s.Y36(K, 8),
              );
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  '',
                  'ngModel',
                  '',
                  3,
                  'formControlName',
                  '',
                  3,
                  'formControl',
                  '',
                ],
              ],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [s._Bn([ji]), s.qOj, s.TTD],
            })),
            k
          );
        })(),
        Hn = (() => {
          class k {}
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', ''],
              ],
              hostAttrs: ['novalidate', ''],
            })),
            k
          );
        })(),
        Ki = (() => {
          class k {}
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({})),
            k
          );
        })();
      const Ze = new s.OlP('NgModelWithFormControlWarning'),
        kt = { provide: mn, useExisting: (0, s.Gpc)(() => It) };
      let It = (() => {
        class k extends mn {
          set isDisabled(w) {}
          constructor(w, G, it, Qt, Jn) {
            super(),
              (this._ngModelWarningConfig = Qt),
              (this.callSetDisabledState = Jn),
              (this.update = new s.vpe()),
              (this._ngModelWarningSent = !1),
              this._setValidators(w),
              this._setAsyncValidators(G),
              (this.valueAccessor = $t(0, it));
          }
          ngOnChanges(w) {
            if (this._isControlChanged(w)) {
              const G = w.form.previousValue;
              G && Zt(G, this, !1),
                Ft(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            xi(w, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && Zt(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(w) {
            (this.viewModel = w), this.update.emit(w);
          }
          _isControlChanged(w) {
            return w.hasOwnProperty('form');
          }
        }
        return (
          (k._ngModelWarningSentOnce = !1),
          (k.ɵfac = function (w) {
            return new (w || k)(
              s.Y36(pt, 10),
              s.Y36(at, 10),
              s.Y36(ue, 10),
              s.Y36(Ze, 8),
              s.Y36(K, 8),
            );
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [s._Bn([kt]), s.qOj, s.TTD],
          })),
          k
        );
      })();
      const ln = { provide: Kt, useExisting: (0, s.Gpc)(() => vn) };
      let vn = (() => {
          class k extends Kt {
            constructor(w, G, it) {
              super(),
                (this.callSetDisabledState = it),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new s.vpe()),
                this._setValidators(w),
                this._setAsyncValidators(G);
            }
            ngOnChanges(w) {
              this._checkFormPresent(),
                w.hasOwnProperty('form') &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (qn(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(w) {
              const G = this.form.get(w.path);
              return (
                Ft(G, w, this.callSetDisabledState),
                G.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(w),
                G
              );
            }
            getControl(w) {
              return this.form.get(w.path);
            }
            removeControl(w) {
              Zt(w.control || null, w, !1),
                (function dn(k, I) {
                  const w = k.indexOf(I);
                  w > -1 && k.splice(w, 1);
                })(this.directives, w);
            }
            addFormGroup(w) {
              this._setUpFormContainer(w);
            }
            removeFormGroup(w) {
              this._cleanUpFormContainer(w);
            }
            getFormGroup(w) {
              return this.form.get(w.path);
            }
            addFormArray(w) {
              this._setUpFormContainer(w);
            }
            removeFormArray(w) {
              this._cleanUpFormContainer(w);
            }
            getFormArray(w) {
              return this.form.get(w.path);
            }
            updateModel(w, G) {
              this.form.get(w.path).setValue(G);
            }
            onSubmit(w) {
              return (
                (this.submitted = !0),
                mi(this.form, this.directives),
                this.ngSubmit.emit(w),
                'dialog' === w?.target?.method
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(w) {
              this.form.reset(w), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach(w => {
                const G = w.control,
                  it = this.form.get(w.path);
                G !== it &&
                  (Zt(G || null, w),
                  (k => k instanceof gi)(it) &&
                    (Ft(it, w, this.callSetDisabledState), (w.control = it)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(w) {
              const G = this.form.get(w.path);
              Si(G, w), G.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(w) {
              if (this.form) {
                const G = this.form.get(w.path);
                G &&
                  (function Tn(k, I) {
                    return qn(k, I);
                  })(G, w) &&
                  G.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              Ut(this.form, this), this._oldForm && qn(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)(s.Y36(pt, 10), s.Y36(at, 10), s.Y36(K, 8));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [['', 'formGroup', '']],
              hostBindings: function (w, G) {
                1 & w &&
                  s.NdJ('submit', function (Qt) {
                    return G.onSubmit(Qt);
                  })('reset', function () {
                    return G.onReset();
                  });
              },
              inputs: { form: ['formGroup', 'form'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [s._Bn([ln]), s.qOj, s.TTD],
            })),
            k
          );
        })(),
        yr = (() => {
          class k {
            constructor() {
              this._validator = Yt;
            }
            ngOnChanges(w) {
              if (this.inputName in w) {
                const G = this.normalizeInput(w[this.inputName].currentValue);
                (this._enabled = this.enabled(G)),
                  (this._validator = this._enabled
                    ? this.createValidator(G)
                    : Yt),
                  this._onChange && this._onChange();
              }
            }
            validate(w) {
              return this._validator(w);
            }
            registerOnValidatorChange(w) {
              this._onChange = w;
            }
            enabled(w) {
              return null != w;
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵdir = s.lG2({ type: k, features: [s.TTD] })),
            k
          );
        })();
      const ro = { provide: pt, useExisting: (0, s.Gpc)(() => Fr), multi: !0 },
        oo = { provide: pt, useExisting: (0, s.Gpc)(() => Ur), multi: !0 };
      let Fr = (() => {
          class k extends yr {
            constructor() {
              super(...arguments),
                (this.inputName = 'required'),
                (this.normalizeInput = s.D6c),
                (this.createValidator = w => X);
            }
            enabled(w) {
              return w;
            }
          }
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  '',
                  'required',
                  '',
                  'formControlName',
                  '',
                  3,
                  'type',
                  'checkbox',
                ],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (w, G) {
                2 & w && s.uIk('required', G._enabled ? '' : null);
              },
              inputs: { required: 'required' },
              features: [s._Bn([ro]), s.qOj],
            })),
            k
          );
        })(),
        Ur = (() => {
          class k extends Fr {
            constructor() {
              super(...arguments), (this.createValidator = w => Se);
            }
          }
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControlName',
                  '',
                ],
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControl',
                  '',
                ],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (w, G) {
                2 & w && s.uIk('required', G._enabled ? '' : null);
              },
              features: [s._Bn([oo]), s.qOj],
            })),
            k
          );
        })(),
        $r = (() => {
          class k {}
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [Ki] })),
            k
          );
        })();
      class Cr extends Gt {
        constructor(I, w, G) {
          super(R(w), E(G, w)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(w),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(I) {
          return this.controls[this._adjustIndex(I)];
        }
        push(I, w = {}) {
          this.controls.push(I),
            this._registerControl(I),
            this.updateValueAndValidity({ emitEvent: w.emitEvent }),
            this._onCollectionChange();
        }
        insert(I, w, G = {}) {
          this.controls.splice(I, 0, w),
            this._registerControl(w),
            this.updateValueAndValidity({ emitEvent: G.emitEvent });
        }
        removeAt(I, w = {}) {
          let G = this._adjustIndex(I);
          G < 0 && (G = 0),
            this.controls[G] &&
              this.controls[G]._registerOnCollectionChange(() => {}),
            this.controls.splice(G, 1),
            this.updateValueAndValidity({ emitEvent: w.emitEvent });
        }
        setControl(I, w, G = {}) {
          let it = this._adjustIndex(I);
          it < 0 && (it = 0),
            this.controls[it] &&
              this.controls[it]._registerOnCollectionChange(() => {}),
            this.controls.splice(it, 1),
            w && (this.controls.splice(it, 0, w), this._registerControl(w)),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(I, w = {}) {
          St(this, !1, I),
            I.forEach((G, it) => {
              We(this, !1, it),
                this.at(it).setValue(G, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w);
        }
        patchValue(I, w = {}) {
          null != I &&
            (I.forEach((G, it) => {
              this.at(it) &&
                this.at(it).patchValue(G, {
                  onlySelf: !0,
                  emitEvent: w.emitEvent,
                });
            }),
            this.updateValueAndValidity(w));
        }
        reset(I = [], w = {}) {
          this._forEachChild((G, it) => {
            G.reset(I[it], { onlySelf: !0, emitEvent: w.emitEvent });
          }),
            this._updatePristine(w),
            this._updateTouched(w),
            this.updateValueAndValidity(w);
        }
        getRawValue() {
          return this.controls.map(I => I.getRawValue());
        }
        clear(I = {}) {
          this.controls.length < 1 ||
            (this._forEachChild(w => w._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: I.emitEvent }));
        }
        _adjustIndex(I) {
          return I < 0 ? I + this.length : I;
        }
        _syncPendingControls() {
          let I = this.controls.reduce(
            (w, G) => !!G._syncPendingControls() || w,
            !1,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          this.controls.forEach((w, G) => {
            I(w, G);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter(I => I.enabled || this.disabled)
            .map(I => I.value);
        }
        _anyControls(I) {
          return this.controls.some(w => w.enabled && I(w));
        }
        _setUpControls() {
          this._forEachChild(I => this._registerControl(I));
        }
        _allControlsDisabled() {
          for (const I of this.controls) if (I.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(I) {
          I.setParent(this),
            I._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(I) {
          return this.at(I) ?? null;
        }
      }
      function Pr(k) {
        return (
          !!k &&
          (void 0 !== k.asyncValidators ||
            void 0 !== k.validators ||
            void 0 !== k.updateOn)
        );
      }
      let Ao = (() => {
          class k {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const w = new k();
              return (w.useNonNullable = !0), w;
            }
            group(w, G = null) {
              const it = this._reduceControls(w);
              let Qt = {};
              return (
                Pr(G)
                  ? (Qt = G)
                  : null !== G &&
                    ((Qt.validators = G.validator),
                    (Qt.asyncValidators = G.asyncValidator)),
                new zt(it, Qt)
              );
            }
            record(w, G = null) {
              const it = this._reduceControls(w);
              return new Re(it, G);
            }
            control(w, G, it) {
              let Qt = {};
              return this.useNonNullable
                ? (Pr(G)
                    ? (Qt = G)
                    : ((Qt.validators = G), (Qt.asyncValidators = it)),
                  new gi(w, { ...Qt, nonNullable: !0 }))
                : new gi(w, G, it);
            }
            array(w, G, it) {
              const Qt = w.map(Jn => this._createControl(Jn));
              return new Cr(Qt, G, it);
            }
            _reduceControls(w) {
              const G = {};
              return (
                Object.keys(w).forEach(it => {
                  G[it] = this._createControl(w[it]);
                }),
                G
              );
            }
            _createControl(w) {
              return w instanceof gi || w instanceof Gt
                ? w
                : Array.isArray(w)
                ? this.control(
                    w[0],
                    w.length > 1 ? w[1] : null,
                    w.length > 2 ? w[2] : null,
                  )
                : this.control(w);
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵprov = s.Yz7({
              token: k,
              factory: k.ɵfac,
              providedIn: 'root',
            })),
            k
          );
        })(),
        bn = (() => {
          class k {
            static withConfig(w) {
              return {
                ngModule: k,
                providers: [
                  { provide: K, useValue: w.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [$r] })),
            k
          );
        })(),
        Er = (() => {
          class k {
            static withConfig(w) {
              return {
                ngModule: k,
                providers: [
                  {
                    provide: Ze,
                    useValue: w.warnOnNgModelWithFormControl ?? 'always',
                  },
                  { provide: K, useValue: w.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (k.ɵfac = function (w) {
              return new (w || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [$r] })),
            k
          );
        })();
    },
    4859: (Ot, Ne, C) => {
      C.d(Ne, {
        RK: () => Ue,
        cs: () => Et,
        lW: () => Se,
        nh: () => Ge,
        ot: () => Pe,
      });
      var s = C(3353),
        x = C(4650),
        L = C(2687),
        oe = C(3238),
        ee = C(1281);
      const he = ['mat-button', ''],
        ge = [
          [
            ['', 8, 'material-icons', 3, 'iconPositionEnd', ''],
            ['mat-icon', 3, 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 3, 'iconPositionEnd', ''],
          ],
          '*',
          [
            ['', 'iconPositionEnd', '', 8, 'material-icons'],
            ['mat-icon', 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 'iconPositionEnd', ''],
          ],
        ],
        ue = [
          '.material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])',
          '*',
          '.material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]',
        ],
        pe = ['mat-fab', ''],
        se = ['mat-mini-fab', ''],
        ze = ['mat-icon-button', ''],
        st = ['*'],
        at = [
          {
            selector: 'mat-button',
            mdcClasses: ['mdc-button', 'mat-mdc-button'],
          },
          {
            selector: 'mat-flat-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--unelevated',
              'mat-mdc-unelevated-button',
            ],
          },
          {
            selector: 'mat-raised-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--raised',
              'mat-mdc-raised-button',
            ],
          },
          {
            selector: 'mat-stroked-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--outlined',
              'mat-mdc-outlined-button',
            ],
          },
          { selector: 'mat-fab', mdcClasses: ['mdc-fab', 'mat-mdc-fab'] },
          {
            selector: 'mat-mini-fab',
            mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],
          },
          {
            selector: 'mat-icon-button',
            mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],
          },
        ],
        vt = (0, oe.pj)(
          (0, oe.Id)(
            (0, oe.Kr)(
              class {
                constructor(a) {
                  this._elementRef = a;
                }
              },
            ),
          ),
        );
      let xe = (() => {
          class a extends vt {
            constructor(rt, je, ut, nt) {
              super(rt),
                (this._platform = je),
                (this._ngZone = ut),
                (this._animationMode = nt),
                (this._focusMonitor = (0, x.f3M)(L.tE)),
                (this._isFab = !1);
              const Lt = rt.nativeElement.classList;
              for (const Mn of at)
                this._hasHostAttributes(Mn.selector) &&
                  Mn.mdcClasses.forEach(un => {
                    Lt.add(un);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(rt = 'program', je) {
              rt
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    rt,
                    je,
                  )
                : this._elementRef.nativeElement.focus(je);
            }
            _hasHostAttributes(...rt) {
              return rt.some(je =>
                this._elementRef.nativeElement.hasAttribute(je),
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (a.ɵfac = function (rt) {
              x.$Z();
            }),
            (a.ɵdir = x.lG2({
              type: a,
              viewQuery: function (rt, je) {
                if ((1 & rt && x.Gf(oe.wG, 5), 2 & rt)) {
                  let ut;
                  x.iGM((ut = x.CRH())) && (je.ripple = ut.first);
                }
              },
              features: [x.qOj],
            })),
            a
          );
        })(),
        Se = (() => {
          class a extends xe {
            constructor(rt, je, ut, nt) {
              super(rt, je, ut, nt);
            }
          }
          return (
            (a.ɵfac = function (rt) {
              return new (rt || a)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (a.ɵcmp = x.Xpm({
              type: a,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-flat-button', ''],
                ['button', 'mat-stroked-button', ''],
              ],
              hostVars: 7,
              hostBindings: function (rt, je) {
                2 & rt &&
                  (x.uIk('disabled', je.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === je._animationMode,
                  )('mat-unthemed', !je.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: he,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (rt, je) {
                1 & rt &&
                  (x.F$t(ge),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & rt &&
                    (x.ekj('mdc-button__ripple', !je._isFab)(
                      'mdc-fab__ripple',
                      je._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', je._isRippleDisabled())(
                      'matRippleTrigger',
                      je._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            a
          );
        })();
      const re = new x.OlP('mat-mdc-fab-default-options', {
        providedIn: 'root',
        factory: At,
      });
      function At() {
        return { color: 'accent' };
      }
      const mt = At();
      let Et = (() => {
          class a extends xe {
            get extended() {
              return this._extended;
            }
            set extended(rt) {
              this._extended = (0, ee.Ig)(rt);
            }
            constructor(rt, je, ut, nt, Lt) {
              super(rt, je, ut, nt),
                (this._options = Lt),
                (this._isFab = !0),
                (this._options = this._options || mt),
                (this.color = this.defaultColor =
                  this._options.color || mt.color);
            }
          }
          return (
            (a.ɵfac = function (rt) {
              return new (rt || a)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(re, 8),
              );
            }),
            (a.ɵcmp = x.Xpm({
              type: a,
              selectors: [['button', 'mat-fab', '']],
              hostVars: 11,
              hostBindings: function (rt, je) {
                2 & rt &&
                  (x.uIk('disabled', je.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === je._animationMode,
                  )('mat-unthemed', !je.color)('mat-mdc-button-base', !0)(
                    'mdc-fab--extended',
                    je.extended,
                  )('mat-mdc-extended-fab', je.extended));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                extended: 'extended',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: pe,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (rt, je) {
                1 & rt &&
                  (x.F$t(ge),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & rt &&
                    (x.ekj('mdc-button__ripple', !je._isFab)(
                      'mdc-fab__ripple',
                      je._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', je._isRippleDisabled())(
                      'matRippleTrigger',
                      je._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            a
          );
        })(),
        Ge = (() => {
          class a extends xe {
            constructor(rt, je, ut, nt, Lt) {
              super(rt, je, ut, nt),
                (this._options = Lt),
                (this._isFab = !0),
                (this._options = this._options || mt),
                (this.color = this.defaultColor =
                  this._options.color || mt.color);
            }
          }
          return (
            (a.ɵfac = function (rt) {
              return new (rt || a)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(re, 8),
              );
            }),
            (a.ɵcmp = x.Xpm({
              type: a,
              selectors: [['button', 'mat-mini-fab', '']],
              hostVars: 7,
              hostBindings: function (rt, je) {
                2 & rt &&
                  (x.uIk('disabled', je.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === je._animationMode,
                  )('mat-unthemed', !je.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: se,
              ngContentSelectors: ue,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (rt, je) {
                1 & rt &&
                  (x.F$t(ge),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & rt &&
                    (x.ekj('mdc-button__ripple', !je._isFab)(
                      'mdc-fab__ripple',
                      je._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', je._isRippleDisabled())(
                      'matRippleTrigger',
                      je._elementRef.nativeElement,
                    ));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            a
          );
        })(),
        Ue = (() => {
          class a extends xe {
            constructor(rt, je, ut, nt) {
              super(rt, je, ut, nt);
            }
          }
          return (
            (a.ɵfac = function (rt) {
              return new (rt || a)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (a.ɵcmp = x.Xpm({
              type: a,
              selectors: [['button', 'mat-icon-button', '']],
              hostVars: 7,
              hostBindings: function (rt, je) {
                2 & rt &&
                  (x.uIk('disabled', je.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === je._animationMode,
                  )('mat-unthemed', !je.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: ze,
              ngContentSelectors: st,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  'mat-mdc-button-persistent-ripple',
                  'mdc-icon-button__ripple',
                ],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (rt, je) {
                1 & rt &&
                  (x.F$t(),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x._UZ(2, 'span', 1)(3, 'span', 2)(4, 'span', 3)),
                  2 & rt &&
                    (x.xp6(3),
                    x.Q6J('matRippleDisabled', je._isRippleDisabled())(
                      'matRippleCentered',
                      !0,
                    )('matRippleTrigger', je._elementRef.nativeElement));
              },
              dependencies: [oe.wG],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            a
          );
        })(),
        Pe = (() => {
          class a {}
          return (
            (a.ɵfac = function (rt) {
              return new (rt || a)();
            }),
            (a.ɵmod = x.oAB({ type: a })),
            (a.ɵinj = x.cJS({ imports: [oe.BQ, oe.si, oe.BQ] })),
            a
          );
        })();
    },
    3238: (Ot, Ne, C) => {
      C.d(Ne, {
        _A: () => Ue,
        rD: () => Lt,
        sG: () => De,
        Ad: () => $e,
        K7: () => fe,
        HF: () => j,
        BQ: () => te,
        XK: () => ut,
        ey: () => Oe,
        Ng: () => wt,
        wG: () => Ae,
        si: () => He,
        hu: () => nt,
        CB: () => bt,
        jH: () => Je,
        pj: () => At,
        Kr: () => mt,
        Id: () => re,
        FD: () => Et,
        sb: () => Yt,
      });
      var s = C(4650),
        x = C(2687),
        L = C(445),
        ee = C(6895),
        he = C(3353),
        ge = C(1281),
        ue = C(7579),
        le = C(9521);
      const se = ['text'];
      function Be(Te, R) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 6), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('state', b.selected ? 'checked' : 'unchecked')(
            'disabled',
            b.disabled,
          );
        }
      }
      function ze(Te, R) {
        if ((1 & Te && s._UZ(0, 'mat-pseudo-checkbox', 7), 2 & Te)) {
          const b = s.oxw();
          s.Q6J('disabled', b.disabled);
        }
      }
      function st(Te, R) {
        if ((1 & Te && (s.TgZ(0, 'span', 8), s._uU(1), s.qZA()), 2 & Te)) {
          const b = s.oxw();
          s.xp6(1), s.hij('(', b.group.label, ')');
        }
      }
      const gt = [[['mat-icon']], '*'],
        Le = ['mat-icon', '*'],
        ne = new s.OlP('mat-sanity-checks', {
          providedIn: 'root',
          factory: function xe() {
            return !0;
          },
        });
      let te = (() => {
        class Te {
          constructor(b, E, V) {
            (this._sanityChecks = E),
              (this._document = V),
              (this._hasDoneGlobalChecks = !1),
              b._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(b) {
            return (
              !(0, he.Oy)() &&
              ('boolean' == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[b])
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG(x.qm), s.LFG(ne, 8), s.LFG(ee.K0));
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [L.vT, L.vT] })),
          Te
        );
      })();
      function re(Te) {
        return class extends Te {
          get disabled() {
            return this._disabled;
          }
          set disabled(R) {
            this._disabled = (0, ge.Ig)(R);
          }
          constructor(...R) {
            super(...R), (this._disabled = !1);
          }
        };
      }
      function At(Te, R) {
        return class extends Te {
          get color() {
            return this._color;
          }
          set color(b) {
            const E = b || this.defaultColor;
            E !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`,
                ),
              E && this._elementRef.nativeElement.classList.add(`mat-${E}`),
              (this._color = E));
          }
          constructor(...b) {
            super(...b), (this.defaultColor = R), (this.color = R);
          }
        };
      }
      function mt(Te) {
        return class extends Te {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(R) {
            this._disableRipple = (0, ge.Ig)(R);
          }
          constructor(...R) {
            super(...R), (this._disableRipple = !1);
          }
        };
      }
      function Yt(Te, R = 0) {
        return class extends Te {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(b) {
            this._tabIndex = null != b ? (0, ge.su)(b) : this.defaultTabIndex;
          }
          constructor(...b) {
            super(...b), (this._tabIndex = R), (this.defaultTabIndex = R);
          }
        };
      }
      function Et(Te) {
        return class extends Te {
          updateErrorState() {
            const R = this.errorState,
              Q = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm,
              );
            Q !== R && ((this.errorState = Q), this.stateChanges.next());
          }
          constructor(...R) {
            super(...R), (this.errorState = !1);
          }
        };
      }
      const $e = new s.OlP('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function Me() {
          return (0, s.f3M)(s.soG);
        },
      });
      class Ue {
        constructor() {
          (this._localeChanges = new ue.x()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(R) {
          return this.isDateInstance(R) && this.isValid(R) ? R : null;
        }
        deserialize(R) {
          return null == R || (this.isDateInstance(R) && this.isValid(R))
            ? R
            : this.invalid();
        }
        setLocale(R) {
          (this.locale = R), this._localeChanges.next();
        }
        compareDate(R, b) {
          return (
            this.getYear(R) - this.getYear(b) ||
            this.getMonth(R) - this.getMonth(b) ||
            this.getDate(R) - this.getDate(b)
          );
        }
        sameDate(R, b) {
          if (R && b) {
            let E = this.isValid(R),
              V = this.isValid(b);
            return E && V ? !this.compareDate(R, b) : E == V;
          }
          return R == b;
        }
        clampDate(R, b, E) {
          return b && this.compareDate(R, b) < 0
            ? b
            : E && this.compareDate(R, E) > 0
            ? E
            : R;
        }
      }
      const De = new s.OlP('mat-date-formats'),
        Pe =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function a(Te, R) {
        const b = Array(Te);
        for (let E = 0; E < Te; E++) b[E] = R(E);
        return b;
      }
      let Ye = (() => {
        class Te extends Ue {
          constructor(b, E) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(b);
          }
          getYear(b) {
            return b.getFullYear();
          }
          getMonth(b) {
            return b.getMonth();
          }
          getDate(b) {
            return b.getDate();
          }
          getDayOfWeek(b) {
            return b.getDay();
          }
          getMonthNames(b) {
            const E = new Intl.DateTimeFormat(this.locale, {
              month: b,
              timeZone: 'utc',
            });
            return a(12, V => this._format(E, new Date(2017, V, 1)));
          }
          getDateNames() {
            const b = new Intl.DateTimeFormat(this.locale, {
              day: 'numeric',
              timeZone: 'utc',
            });
            return a(31, E => this._format(b, new Date(2017, 0, E + 1)));
          }
          getDayOfWeekNames(b) {
            const E = new Intl.DateTimeFormat(this.locale, {
              weekday: b,
              timeZone: 'utc',
            });
            return a(7, V => this._format(E, new Date(2017, 0, V + 1)));
          }
          getYearName(b) {
            const E = new Intl.DateTimeFormat(this.locale, {
              year: 'numeric',
              timeZone: 'utc',
            });
            return this._format(E, b);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(b) {
            return this.getDate(
              this._createDateWithOverflow(
                this.getYear(b),
                this.getMonth(b) + 1,
                0,
              ),
            );
          }
          clone(b) {
            return new Date(b.getTime());
          }
          createDate(b, E, V) {
            let Q = this._createDateWithOverflow(b, E, V);
            return Q.getMonth(), Q;
          }
          today() {
            return new Date();
          }
          parse(b, E) {
            return 'number' == typeof b
              ? new Date(b)
              : b
              ? new Date(Date.parse(b))
              : null;
          }
          format(b, E) {
            if (!this.isValid(b))
              throw Error('NativeDateAdapter: Cannot format invalid date.');
            const V = new Intl.DateTimeFormat(this.locale, {
              ...E,
              timeZone: 'utc',
            });
            return this._format(V, b);
          }
          addCalendarYears(b, E) {
            return this.addCalendarMonths(b, 12 * E);
          }
          addCalendarMonths(b, E) {
            let V = this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b) + E,
              this.getDate(b),
            );
            return (
              this.getMonth(V) != (((this.getMonth(b) + E) % 12) + 12) % 12 &&
                (V = this._createDateWithOverflow(
                  this.getYear(V),
                  this.getMonth(V),
                  0,
                )),
              V
            );
          }
          addCalendarDays(b, E) {
            return this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b),
              this.getDate(b) + E,
            );
          }
          toIso8601(b) {
            return [
              b.getUTCFullYear(),
              this._2digit(b.getUTCMonth() + 1),
              this._2digit(b.getUTCDate()),
            ].join('-');
          }
          deserialize(b) {
            if ('string' == typeof b) {
              if (!b) return null;
              if (Pe.test(b)) {
                let E = new Date(b);
                if (this.isValid(E)) return E;
              }
            }
            return super.deserialize(b);
          }
          isDateInstance(b) {
            return b instanceof Date;
          }
          isValid(b) {
            return !isNaN(b.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(b, E, V) {
            const Q = new Date();
            return Q.setFullYear(b, E, V), Q.setHours(0, 0, 0, 0), Q;
          }
          _2digit(b) {
            return ('00' + b).slice(-2);
          }
          _format(b, E) {
            const V = new Date();
            return (
              V.setUTCFullYear(E.getFullYear(), E.getMonth(), E.getDate()),
              V.setUTCHours(
                E.getHours(),
                E.getMinutes(),
                E.getSeconds(),
                E.getMilliseconds(),
              ),
              b.format(V)
            );
          }
        }
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)(s.LFG($e, 8), s.LFG(he.t4));
          }),
          (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
          Te
        );
      })();
      const rt = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let je = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ providers: [{ provide: Ue, useClass: Ye }] })),
            Te
          );
        })(),
        ut = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({
              providers: [{ provide: De, useValue: rt }],
              imports: [je],
            })),
            Te
          );
        })(),
        nt = (() => {
          class Te {
            isErrorState(b, E) {
              return !!(b && b.invalid && (b.dirty || (E && E.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({ token: Te, factory: Te.ɵfac })),
            Te
          );
        })(),
        Lt = (() => {
          class Te {
            isErrorState(b, E) {
              return !!(b && b.invalid && (b.touched || (E && E.submitted)));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵprov = s.Yz7({
              token: Te,
              factory: Te.ɵfac,
              providedIn: 'root',
            })),
            Te
          );
        })();
      class Kt {
        constructor(R, b, E, V = !1) {
          (this._renderer = R),
            (this.element = b),
            (this.config = E),
            (this._animationForciblyDisabledThroughCss = V),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const mn = (0, he.i$)({ passive: !0, capture: !0 });
      class wn {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = R => {
              const b = (0, he.sA)(R);
              b &&
                this._events.get(R.type)?.forEach((E, V) => {
                  (V === b || V.contains(b)) &&
                    E.forEach(Q => Q.handleEvent(R));
                });
            });
        }
        addHandler(R, b, E, V) {
          const Q = this._events.get(b);
          if (Q) {
            const We = Q.get(E);
            We ? We.add(V) : Q.set(E, new Set([V]));
          } else
            this._events.set(b, new Map([[E, new Set([V])]])),
              R.runOutsideAngular(() => {
                document.addEventListener(b, this._delegateEventHandler, mn);
              });
        }
        removeHandler(R, b, E) {
          const V = this._events.get(R);
          if (!V) return;
          const Q = V.get(b);
          Q &&
            (Q.delete(E),
            0 === Q.size && V.delete(b),
            0 === V.size &&
              (this._events.delete(R),
              document.removeEventListener(R, this._delegateEventHandler, mn)));
        }
      }
      const Dt = { enterDuration: 225, exitDuration: 150 },
        xt = (0, he.i$)({ passive: !0, capture: !0 }),
        ht = ['mousedown', 'touchstart'],
        hn = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class Xe {
        constructor(R, b, E, V) {
          (this._target = R),
            (this._ngZone = b),
            (this._platform = V),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            V.isBrowser && (this._containerElement = (0, ge.fI)(E));
        }
        fadeInRipple(R, b, E = {}) {
          const V = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            Q = { ...Dt, ...E.animation };
          E.centered &&
            ((R = V.left + V.width / 2), (b = V.top + V.height / 2));
          const We =
              E.radius ||
              (function $(Te, R, b) {
                const E = Math.max(
                    Math.abs(Te - b.left),
                    Math.abs(Te - b.right),
                  ),
                  V = Math.max(Math.abs(R - b.top), Math.abs(R - b.bottom));
                return Math.sqrt(E * E + V * V);
              })(R, b, V),
            St = R - V.left,
            Gt = b - V.top,
            zt = Q.enterDuration,
            Bt = document.createElement('div');
          Bt.classList.add('mat-ripple-element'),
            (Bt.style.left = St - We + 'px'),
            (Bt.style.top = Gt - We + 'px'),
            (Bt.style.height = 2 * We + 'px'),
            (Bt.style.width = 2 * We + 'px'),
            null != E.color && (Bt.style.backgroundColor = E.color),
            (Bt.style.transitionDuration = `${zt}ms`),
            this._containerElement.appendChild(Bt);
          const on = window.getComputedStyle(Bt),
            Ce = on.transitionDuration,
            K =
              'none' === on.transitionProperty ||
              '0s' === Ce ||
              '0s, 0s' === Ce ||
              (0 === V.width && 0 === V.height),
            we = new Kt(this, Bt, E, K);
          (Bt.style.transform = 'scale3d(1, 1, 1)'),
            (we.state = 0),
            E.persistent || (this._mostRecentTransientRipple = we);
          let ct = null;
          return (
            !K &&
              (zt || Q.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const Ft = () => this._finishRippleTransition(we),
                  Zt = () => this._destroyRipple(we);
                Bt.addEventListener('transitionend', Ft),
                  Bt.addEventListener('transitioncancel', Zt),
                  (ct = { onTransitionEnd: Ft, onTransitionCancel: Zt });
              }),
            this._activeRipples.set(we, ct),
            (K || !zt) && this._finishRippleTransition(we),
            we
          );
        }
        fadeOutRipple(R) {
          if (2 === R.state || 3 === R.state) return;
          const b = R.element,
            E = { ...Dt, ...R.config.animation };
          (b.style.transitionDuration = `${E.exitDuration}ms`),
            (b.style.opacity = '0'),
            (R.state = 2),
            (R._animationForciblyDisabledThroughCss || !E.exitDuration) &&
              this._finishRippleTransition(R);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach(R => R.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach(R => {
            R.config.persistent || R.fadeOut();
          });
        }
        setupTriggerEvents(R) {
          const b = (0, ge.fI)(R);
          !this._platform.isBrowser ||
            !b ||
            b === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = b),
            ht.forEach(E => {
              Xe._eventManager.addHandler(this._ngZone, E, b, this);
            }));
        }
        handleEvent(R) {
          'mousedown' === R.type
            ? this._onMousedown(R)
            : 'touchstart' === R.type
            ? this._onTouchStart(R)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                hn.forEach(b => {
                  this._triggerElement.addEventListener(b, this, xt);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(R) {
          0 === R.state
            ? this._startFadeOutTransition(R)
            : 2 === R.state && this._destroyRipple(R);
        }
        _startFadeOutTransition(R) {
          const b = R === this._mostRecentTransientRipple,
            { persistent: E } = R.config;
          (R.state = 1), !E && (!b || !this._isPointerDown) && R.fadeOut();
        }
        _destroyRipple(R) {
          const b = this._activeRipples.get(R) ?? null;
          this._activeRipples.delete(R),
            this._activeRipples.size || (this._containerRect = null),
            R === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (R.state = 3),
            null !== b &&
              (R.element.removeEventListener(
                'transitionend',
                b.onTransitionEnd,
              ),
              R.element.removeEventListener(
                'transitioncancel',
                b.onTransitionCancel,
              )),
            R.element.remove();
        }
        _onMousedown(R) {
          const b = (0, x.X6)(R),
            E =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !b &&
            !E &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(R.clientX, R.clientY, this._target.rippleConfig));
        }
        _onTouchStart(R) {
          if (!this._target.rippleDisabled && !(0, x.yG)(R)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const b = R.changedTouches;
            for (let E = 0; E < b.length; E++)
              this.fadeInRipple(
                b[E].clientX,
                b[E].clientY,
                this._target.rippleConfig,
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach(R => {
              !R.config.persistent &&
                (1 === R.state ||
                  (R.config.terminateOnPointerUp && 0 === R.state)) &&
                R.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const R = this._triggerElement;
          R &&
            (ht.forEach(b => Xe._eventManager.removeHandler(b, R, this)),
            this._pointerUpEventsRegistered &&
              hn.forEach(b => R.removeEventListener(b, this, xt)));
        }
      }
      Xe._eventManager = new wn();
      const J = new s.OlP('mat-ripple-global-options');
      let Ae = (() => {
          class Te {
            get disabled() {
              return this._disabled;
            }
            set disabled(b) {
              b && this.fadeOutAllNonPersistent(),
                (this._disabled = b),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(b) {
              (this._trigger = b), this._setupTriggerEventsIfEnabled();
            }
            constructor(b, E, V, Q, We) {
              (this._elementRef = b),
                (this._animationMode = We),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = Q || {}),
                (this._rippleRenderer = new Xe(this, E, b, V));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...('NoopAnimations' === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(b, E = 0, V) {
              return 'number' == typeof b
                ? this._rippleRenderer.fadeInRipple(b, E, {
                    ...this.rippleConfig,
                    ...V,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...b,
                  });
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(he.t4),
                s.Y36(J, 8),
                s.Y36(s.QbO, 8),
              );
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (b, E) {
                2 & b && s.ekj('mat-ripple-unbounded', E.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            Te
          );
        })(),
        He = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [te, te] })),
            Te
          );
        })(),
        ve = (() => {
          class Te {
            constructor(b) {
              (this._animationMode = b),
                (this.state = 'unchecked'),
                (this.disabled = !1),
                (this.appearance = 'full');
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(s.Y36(s.QbO, 8));
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 12,
              hostBindings: function (b, E) {
                2 & b &&
                  s.ekj(
                    'mat-pseudo-checkbox-indeterminate',
                    'indeterminate' === E.state,
                  )('mat-pseudo-checkbox-checked', 'checked' === E.state)(
                    'mat-pseudo-checkbox-disabled',
                    E.disabled,
                  )('mat-pseudo-checkbox-minimal', 'minimal' === E.appearance)(
                    'mat-pseudo-checkbox-full',
                    'full' === E.appearance,
                  )(
                    '_mat-animation-noopable',
                    'NoopAnimations' === E._animationMode,
                  );
              },
              inputs: {
                state: 'state',
                disabled: 'disabled',
                appearance: 'appearance',
              },
              decls: 0,
              vars: 0,
              template: function (b, E) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })(),
        be = (() => {
          class Te {}
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)();
            }),
            (Te.ɵmod = s.oAB({ type: Te })),
            (Te.ɵinj = s.cJS({ imports: [te] })),
            Te
          );
        })();
      const j = new s.OlP('MAT_OPTION_PARENT_COMPONENT'),
        fe = new s.OlP('MatOptgroup');
      let Mt = 0;
      class Rt {
        constructor(R, b = !1) {
          (this.source = R), (this.isUserInput = b);
        }
      }
      let Cn = (() => {
          class Te {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(b) {
              this._disabled = (0, ge.Ig)(b);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(b, E, V, Q) {
              (this._element = b),
                (this._changeDetectorRef = E),
                (this._parent = V),
                (this.group = Q),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + Mt++),
                (this.onSelectionChange = new s.vpe()),
                (this._stateChanges = new ue.x());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(b, E) {
              const V = this._getHostElement();
              'function' == typeof V.focus && V.focus(E);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(b) {
              (b.keyCode === le.K5 || b.keyCode === le.L_) &&
                !(0, le.Vb)(b) &&
                (this._selectViaInteraction(), b.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const b = this.viewValue;
                b !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = b));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(b = !1) {
              this.onSelectionChange.emit(new Rt(this, b));
            }
          }
          return (
            (Te.ɵfac = function (b) {
              s.$Z();
            }),
            (Te.ɵdir = s.lG2({
              type: Te,
              viewQuery: function (b, E) {
                if ((1 & b && s.Gf(se, 7), 2 & b)) {
                  let V;
                  s.iGM((V = s.CRH())) && (E._text = V.first);
                }
              },
              inputs: { value: 'value', id: 'id', disabled: 'disabled' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            Te
          );
        })(),
        Oe = (() => {
          class Te extends Cn {
            constructor(b, E, V, Q) {
              super(b, E, V, Q);
            }
          }
          return (
            (Te.ɵfac = function (b) {
              return new (b || Te)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(j, 8),
                s.Y36(fe, 8),
              );
            }),
            (Te.ɵcmp = s.Xpm({
              type: Te,
              selectors: [['mat-option']],
              hostAttrs: [
                'role',
                'option',
                1,
                'mat-mdc-option',
                'mdc-list-item',
              ],
              hostVars: 11,
              hostBindings: function (b, E) {
                1 & b &&
                  s.NdJ('click', function () {
                    return E._selectViaInteraction();
                  })('keydown', function (Q) {
                    return E._handleKeydown(Q);
                  }),
                  2 & b &&
                    (s.Ikx('id', E.id),
                    s.uIk('aria-selected', E.selected)(
                      'aria-disabled',
                      E.disabled.toString(),
                    ),
                    s.ekj('mdc-list-item--selected', E.selected)(
                      'mat-mdc-option-multiple',
                      E.multiple,
                    )('mat-mdc-option-active', E.active)(
                      'mdc-list-item--disabled',
                      E.disabled,
                    ));
              },
              exportAs: ['matOption'],
              features: [s.qOj],
              ngContentSelectors: Le,
              decls: 8,
              vars: 5,
              consts: [
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'state',
                  'disabled',
                  4,
                  'ngIf',
                ],
                [1, 'mdc-list-item__primary-text'],
                ['text', ''],
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  3,
                  'disabled',
                  4,
                  'ngIf',
                ],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-option-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                ],
                [1, 'mat-mdc-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  1,
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'disabled',
                ],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (b, E) {
                1 & b &&
                  (s.F$t(gt),
                  s.YNc(0, Be, 1, 2, 'mat-pseudo-checkbox', 0),
                  s.Hsn(1),
                  s.TgZ(2, 'span', 1, 2),
                  s.Hsn(4, 1),
                  s.qZA(),
                  s.YNc(5, ze, 1, 1, 'mat-pseudo-checkbox', 3),
                  s.YNc(6, st, 2, 1, 'span', 4),
                  s._UZ(7, 'div', 5)),
                  2 & b &&
                    (s.Q6J('ngIf', E.multiple),
                    s.xp6(5),
                    s.Q6J(
                      'ngIf',
                      !E.multiple &&
                        E.selected &&
                        !E.hideSingleSelectionIndicator,
                    ),
                    s.xp6(1),
                    s.Q6J('ngIf', E.group && E.group._inert),
                    s.xp6(1),
                    s.Q6J('matRippleTrigger', E._getHostElement())(
                      'matRippleDisabled',
                      E.disabled || E.disableRipple,
                    ));
              },
              dependencies: [Ae, ee.O5, ve],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Te
          );
        })();
      function bt(Te, R, b) {
        if (b.length) {
          let E = R.toArray(),
            V = b.toArray(),
            Q = 0;
          for (let We = 0; We < Te + 1; We++)
            E[We].group && E[We].group === V[Q] && Q++;
          return Q;
        }
        return 0;
      }
      function Je(Te, R, b, E) {
        return Te < b ? Te : Te + R > b + E ? Math.max(0, Te - E + R) : b;
      }
      let wt = (() => {
        class Te {}
        return (
          (Te.ɵfac = function (b) {
            return new (b || Te)();
          }),
          (Te.ɵmod = s.oAB({ type: Te })),
          (Te.ɵinj = s.cJS({ imports: [He, ee.ez, te, be] })),
          Te
        );
      })();
    },
    9549: (Ot, Ne, C) => {
      C.d(Ne, {
        Eo: () => Jt,
        G_: () => Xe,
        KE: () => j,
        R9: () => Mn,
        hX: () => De,
        lN: () => ke,
        o2: () => $,
      });
      var s = C(4650),
        x = C(445),
        L = C(3353),
        oe = C(7579),
        ee = C(6451),
        he = C(2722),
        ge = C(6895),
        ue = C(1281),
        le = C(7340),
        ae = C(9643),
        pe = C(3238);
      const se = ['matFormFieldNotchedOutline', ''],
        Be = ['*'],
        ze = ['textField'],
        st = ['iconPrefixContainer'],
        gt = ['textPrefixContainer'];
      function Le(de, me) {
        1 & de && s._UZ(0, 'span', 19);
      }
      function pt(de, me) {
        if (1 & de) {
          const fe = s.EpF();
          s.TgZ(0, 'label', 17),
            s.NdJ('cdkObserveContent', function () {
              s.CHM(fe);
              const Mt = s.oxw(2);
              return s.KtG(Mt._refreshOutlineNotchWidth());
            }),
            s.Hsn(1, 1),
            s.YNc(2, Le, 1, 0, 'span', 18),
            s.qZA();
        }
        if (2 & de) {
          const fe = s.oxw(2);
          s.Q6J('floating', fe._shouldLabelFloat())(
            'cdkObserveContentDisabled',
            !fe._hasOutline(),
          )('id', fe._labelId),
            s.uIk('for', fe._control.id)('aria-owns', fe._control.id),
            s.xp6(2),
            s.Q6J('ngIf', !fe.hideRequiredMarker && fe._control.required);
        }
      }
      function at(de, me) {
        if ((1 & de && s.YNc(0, pt, 3, 6, 'label', 16), 2 & de)) {
          const fe = s.oxw();
          s.Q6J('ngIf', fe._hasFloatingLabel());
        }
      }
      function vt(de, me) {
        1 & de && s._UZ(0, 'div', 20);
      }
      function xe(de, me) {}
      function ne(de, me) {
        if ((1 & de && s.YNc(0, xe, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw(2);
          const fe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', fe);
        }
      }
      function te(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 21),
            s.YNc(1, ne, 1, 1, 'ng-template', 9),
            s.qZA()),
          2 & de)
        ) {
          const fe = s.oxw();
          s.Q6J('matFormFieldNotchedOutlineOpen', fe._shouldLabelFloat())(
            'matFormFieldNotchedOutlineLabelWidth',
            fe._labelWidth,
          ),
            s.xp6(1),
            s.Q6J('ngIf', !fe._forceDisplayInfixLabel());
        }
      }
      function X(de, me) {
        1 & de && (s.TgZ(0, 'div', 23, 24), s.Hsn(2, 2), s.qZA());
      }
      function Se(de, me) {
        1 & de && (s.TgZ(0, 'div', 25, 26), s.Hsn(2, 3), s.qZA());
      }
      function tt(de, me) {}
      function re(de, me) {
        if ((1 & de && s.YNc(0, tt, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw();
          const fe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', fe);
        }
      }
      function At(de, me) {
        1 & de && (s.TgZ(0, 'div', 27), s.Hsn(1, 4), s.qZA());
      }
      function mt(de, me) {
        1 & de && (s.TgZ(0, 'div', 28), s.Hsn(1, 5), s.qZA());
      }
      function Yt(de, me) {
        1 & de && s._UZ(0, 'div', 29);
      }
      function Et(de, me) {
        if ((1 & de && (s.TgZ(0, 'div', 30), s.Hsn(1, 6), s.qZA()), 2 & de)) {
          const fe = s.oxw();
          s.Q6J('@transitionMessages', fe._subscriptAnimationState);
        }
      }
      function Ge(de, me) {
        if ((1 & de && (s.TgZ(0, 'mat-hint', 34), s._uU(1), s.qZA()), 2 & de)) {
          const fe = s.oxw(2);
          s.Q6J('id', fe._hintLabelId), s.xp6(1), s.Oqu(fe.hintLabel);
        }
      }
      function $e(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 31),
            s.YNc(1, Ge, 2, 2, 'mat-hint', 32),
            s.Hsn(2, 7),
            s._UZ(3, 'div', 33),
            s.Hsn(4, 8),
            s.qZA()),
          2 & de)
        ) {
          const fe = s.oxw();
          s.Q6J('@transitionMessages', fe._subscriptAnimationState),
            s.xp6(1),
            s.Q6J('ngIf', fe.hintLabel);
        }
      }
      const Me = [
          '*',
          [['mat-label']],
          [
            ['', 'matPrefix', ''],
            ['', 'matIconPrefix', ''],
          ],
          [['', 'matTextPrefix', '']],
          [['', 'matTextSuffix', '']],
          [
            ['', 'matSuffix', ''],
            ['', 'matIconSuffix', ''],
          ],
          [['mat-error'], ['', 'matError', '']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        Ue = [
          '*',
          'mat-label',
          '[matPrefix], [matIconPrefix]',
          '[matTextPrefix]',
          '[matTextSuffix]',
          '[matSuffix], [matIconSuffix]',
          'mat-error, [matError]',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let De = (() => {
        class de {}
        return (
          (de.ɵfac = function (fe) {
            return new (fe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de, selectors: [['mat-label']] })),
          de
        );
      })();
      const a = new s.OlP('MatError');
      let rt = 0,
        je = (() => {
          class de {
            constructor() {
              (this.align = 'start'), (this.id = 'mat-mdc-hint-' + rt++);
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['mat-hint']],
              hostAttrs: [
                1,
                'mat-mdc-form-field-hint',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 4,
              hostBindings: function (fe, et) {
                2 & fe &&
                  (s.Ikx('id', et.id),
                  s.uIk('align', null),
                  s.ekj('mat-mdc-form-field-hint-end', 'end' === et.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            de
          );
        })();
      const ut = new s.OlP('MatPrefix'),
        Lt = new s.OlP('MatSuffix');
      let Mn = (() => {
          class de {
            constructor() {
              this._isText = !1;
            }
            set _isTextSelector(fe) {
              this._isText = !0;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [
                ['', 'matSuffix', ''],
                ['', 'matIconSuffix', ''],
                ['', 'matTextSuffix', ''],
              ],
              inputs: { _isTextSelector: ['matTextSuffix', '_isTextSelector'] },
              features: [s._Bn([{ provide: Lt, useExisting: de }])],
            })),
            de
          );
        })(),
        un = (() => {
          class de {
            constructor(fe) {
              (this._elementRef = fe), (this.floating = !1);
            }
            getWidth() {
              return (function an(de) {
                if (null !== de.offsetParent) return de.scrollWidth;
                const fe = de.cloneNode(!0);
                fe.style.setProperty('position', 'absolute'),
                  fe.style.setProperty(
                    'transform',
                    'translate(-9999px, -9999px)',
                  ),
                  document.documentElement.appendChild(fe);
                const et = fe.scrollWidth;
                return fe.remove(), et;
              })(this._elementRef.nativeElement);
            }
            get element() {
              return this._elementRef.nativeElement;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['label', 'matFormFieldFloatingLabel', '']],
              hostAttrs: [1, 'mdc-floating-label', 'mat-mdc-floating-label'],
              hostVars: 2,
              hostBindings: function (fe, et) {
                2 & fe && s.ekj('mdc-floating-label--float-above', et.floating);
              },
              inputs: { floating: 'floating' },
            })),
            de
          );
        })();
      const Dn = 'mdc-line-ripple--active',
        Kt = 'mdc-line-ripple--deactivating';
      let mn = (() => {
          class de {
            constructor(fe, et) {
              (this._elementRef = fe),
                (this._handleTransitionEnd = Mt => {
                  const Rt = this._elementRef.nativeElement.classList,
                    Cn = Rt.contains(Kt);
                  'opacity' === Mt.propertyName && Cn && Rt.remove(Dn, Kt);
                }),
                et.runOutsideAngular(() => {
                  fe.nativeElement.addEventListener(
                    'transitionend',
                    this._handleTransitionEnd,
                  );
                });
            }
            activate() {
              const fe = this._elementRef.nativeElement.classList;
              fe.remove(Kt), fe.add(Dn);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(Kt);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                'transitionend',
                this._handleTransitionEnd,
              );
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['div', 'matFormFieldLineRipple', '']],
              hostAttrs: [1, 'mdc-line-ripple'],
            })),
            de
          );
        })(),
        wn = (() => {
          class de {
            constructor(fe, et) {
              (this._elementRef = fe),
                (this._ngZone = et),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const fe = this._elementRef.nativeElement.querySelector(
                '.mdc-floating-label',
              );
              fe
                ? (this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--upgraded',
                  ),
                  'function' == typeof requestAnimationFrame &&
                    ((fe.style.transitionDuration = '0s'),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (fe.style.transitionDuration = ''),
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--no-label',
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : '0px'
                : null;
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['div', 'matFormFieldNotchedOutline', '']],
              hostAttrs: [1, 'mdc-notched-outline'],
              hostVars: 2,
              hostBindings: function (fe, et) {
                2 & fe && s.ekj('mdc-notched-outline--notched', et.open);
              },
              inputs: {
                labelWidth: [
                  'matFormFieldNotchedOutlineLabelWidth',
                  'labelWidth',
                ],
                open: ['matFormFieldNotchedOutlineOpen', 'open'],
              },
              attrs: se,
              ngContentSelectors: Be,
              decls: 4,
              vars: 2,
              consts: [
                [1, 'mdc-notched-outline__leading'],
                [1, 'mdc-notched-outline__notch'],
                [1, 'mdc-notched-outline__trailing'],
              ],
              template: function (fe, et) {
                1 & fe &&
                  (s.F$t(),
                  s._UZ(0, 'div', 0),
                  s.TgZ(1, 'div', 1),
                  s.Hsn(2),
                  s.qZA(),
                  s._UZ(3, 'div', 2)),
                  2 & fe && (s.xp6(1), s.Udp('width', et._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            de
          );
        })();
      const Dt = {
        transitionMessages: (0, le.X$)('transitionMessages', [
          (0, le.SB)(
            'enter',
            (0, le.oB)({ opacity: 1, transform: 'translateY(0%)' }),
          ),
          (0, le.eR)('void => enter', [
            (0, le.oB)({ opacity: 0, transform: 'translateY(-5px)' }),
            (0, le.jt)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Jt = (() => {
        class de {}
        return (
          (de.ɵfac = function (fe) {
            return new (fe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de })),
          de
        );
      })();
      const Xe = new s.OlP('MatFormField'),
        $ = new s.OlP('MAT_FORM_FIELD_DEFAULT_OPTIONS');
      let J = 0,
        j = (() => {
          class de {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(fe) {
              this._hideRequiredMarker = (0, ue.Ig)(fe);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || 'auto';
            }
            set floatLabel(fe) {
              fe !== this._floatLabel &&
                ((this._floatLabel = fe),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(fe) {
              const et = this._appearance;
              (this._appearance = fe || this._defaults?.appearance || 'fill'),
                'outline' === this._appearance &&
                  this._appearance !== et &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                'fixed'
              );
            }
            set subscriptSizing(fe) {
              this._subscriptSizing =
                fe || this._defaults?.subscriptSizing || 'fixed';
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(fe) {
              (this._hintLabel = fe), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(fe) {
              this._explicitFormFieldControl = fe;
            }
            constructor(fe, et, Mt, Rt, Cn, Oe, bt, Je) {
              (this._elementRef = fe),
                (this._changeDetectorRef = et),
                (this._ngZone = Mt),
                (this._dir = Rt),
                (this._platform = Cn),
                (this._defaults = Oe),
                (this._animationMode = bt),
                (this._document = Je),
                (this._hideRequiredMarker = !1),
                (this.color = 'primary'),
                (this._appearance = 'fill'),
                (this._subscriptSizing = null),
                (this._hintLabel = ''),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = 'mat-mdc-form-field-label-' + J++),
                (this._hintLabelId = 'mat-mdc-hint-' + J++),
                (this._subscriptAnimationState = ''),
                (this._labelWidth = 0),
                (this._destroyed = new oe.x()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                Oe &&
                  (Oe.appearance && (this.appearance = Oe.appearance),
                  (this._hideRequiredMarker = Boolean(Oe?.hideRequiredMarker)),
                  Oe.color && (this.color = Oe.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = 'enter'),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = 'always');
            }
            _initializeControl() {
              const fe = this._control;
              fe.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${fe.controlType}`,
                ),
                fe.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                fe.ngControl &&
                  fe.ngControl.valueChanges &&
                  fe.ngControl.valueChanges
                    .pipe((0, he.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                fe => !fe._isText,
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  fe => fe._isText,
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  fe => !fe._isText,
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  fe => fe._isText,
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                (0, ee.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes,
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  'mdc-text-field--focused',
                  this._control.focused,
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe((0, he.R)(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe((0, he.R)(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
                  );
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel;
            }
            _hasOutline() {
              return 'outline' === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(fe) {
              const et = this._control ? this._control.ngControl : null;
              return et && et[fe];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? 'error'
                : 'hint';
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let fe = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    fe.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const et = this._hintChildren
                      ? this._hintChildren.find(Rt => 'start' === Rt.align)
                      : null,
                    Mt = this._hintChildren
                      ? this._hintChildren.find(Rt => 'end' === Rt.align)
                      : null;
                  et
                    ? fe.push(et.id)
                    : this._hintLabel && fe.push(this._hintLabelId),
                    Mt && fe.push(Mt.id);
                } else
                  this._errorChildren &&
                    fe.push(...this._errorChildren.map(et => et.id));
                this._control.setDescribedByIds(fe);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const fe = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (fe.style.transform = '');
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const et = this._iconPrefixContainer?.nativeElement,
                Mt = this._textPrefixContainer?.nativeElement,
                Rt = et?.getBoundingClientRect().width ?? 0,
                Cn = Mt?.getBoundingClientRect().width ?? 0;
              fe.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                'rtl' === this._dir.value ? '-1' : '1'
              } * (${
                Rt + Cn
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const fe = this._elementRef.nativeElement;
              if (fe.getRootNode) {
                const et = fe.getRootNode();
                return et && et !== fe;
              }
              return document.documentElement.contains(fe);
            }
          }
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(L.t4),
                s.Y36($, 8),
                s.Y36(s.QbO, 8),
                s.Y36(ge.K0),
              );
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['mat-form-field']],
              contentQueries: function (fe, et, Mt) {
                if (
                  (1 & fe &&
                    (s.Suo(Mt, De, 5),
                    s.Suo(Mt, De, 7),
                    s.Suo(Mt, Jt, 5),
                    s.Suo(Mt, ut, 5),
                    s.Suo(Mt, Lt, 5),
                    s.Suo(Mt, a, 5),
                    s.Suo(Mt, je, 5)),
                  2 & fe)
                ) {
                  let Rt;
                  s.iGM((Rt = s.CRH())) && (et._labelChildNonStatic = Rt.first),
                    s.iGM((Rt = s.CRH())) && (et._labelChildStatic = Rt.first),
                    s.iGM((Rt = s.CRH())) && (et._formFieldControl = Rt.first),
                    s.iGM((Rt = s.CRH())) && (et._prefixChildren = Rt),
                    s.iGM((Rt = s.CRH())) && (et._suffixChildren = Rt),
                    s.iGM((Rt = s.CRH())) && (et._errorChildren = Rt),
                    s.iGM((Rt = s.CRH())) && (et._hintChildren = Rt);
                }
              },
              viewQuery: function (fe, et) {
                if (
                  (1 & fe &&
                    (s.Gf(ze, 5),
                    s.Gf(st, 5),
                    s.Gf(gt, 5),
                    s.Gf(un, 5),
                    s.Gf(wn, 5),
                    s.Gf(mn, 5)),
                  2 & fe)
                ) {
                  let Mt;
                  s.iGM((Mt = s.CRH())) && (et._textField = Mt.first),
                    s.iGM((Mt = s.CRH())) &&
                      (et._iconPrefixContainer = Mt.first),
                    s.iGM((Mt = s.CRH())) &&
                      (et._textPrefixContainer = Mt.first),
                    s.iGM((Mt = s.CRH())) && (et._floatingLabel = Mt.first),
                    s.iGM((Mt = s.CRH())) && (et._notchedOutline = Mt.first),
                    s.iGM((Mt = s.CRH())) && (et._lineRipple = Mt.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-form-field'],
              hostVars: 42,
              hostBindings: function (fe, et) {
                2 & fe &&
                  s.ekj(
                    'mat-mdc-form-field-label-always-float',
                    et._shouldAlwaysFloat(),
                  )('mat-mdc-form-field-has-icon-prefix', et._hasIconPrefix)(
                    'mat-mdc-form-field-has-icon-suffix',
                    et._hasIconSuffix,
                  )('mat-form-field-invalid', et._control.errorState)(
                    'mat-form-field-disabled',
                    et._control.disabled,
                  )('mat-form-field-autofilled', et._control.autofilled)(
                    'mat-form-field-no-animations',
                    'NoopAnimations' === et._animationMode,
                  )('mat-form-field-appearance-fill', 'fill' == et.appearance)(
                    'mat-form-field-appearance-outline',
                    'outline' == et.appearance,
                  )(
                    'mat-form-field-hide-placeholder',
                    et._hasFloatingLabel() && !et._shouldLabelFloat(),
                  )('mat-focused', et._control.focused)(
                    'mat-primary',
                    'accent' !== et.color && 'warn' !== et.color,
                  )('mat-accent', 'accent' === et.color)(
                    'mat-warn',
                    'warn' === et.color,
                  )('ng-untouched', et._shouldForward('untouched'))(
                    'ng-touched',
                    et._shouldForward('touched'),
                  )('ng-pristine', et._shouldForward('pristine'))(
                    'ng-dirty',
                    et._shouldForward('dirty'),
                  )('ng-valid', et._shouldForward('valid'))(
                    'ng-invalid',
                    et._shouldForward('invalid'),
                  )('ng-pending', et._shouldForward('pending'));
              },
              inputs: {
                hideRequiredMarker: 'hideRequiredMarker',
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                subscriptSizing: 'subscriptSizing',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [s._Bn([{ provide: Xe, useExisting: de }])],
              ngContentSelectors: Ue,
              decls: 18,
              vars: 23,
              consts: [
                ['labelTemplate', ''],
                [1, 'mat-mdc-text-field-wrapper', 'mdc-text-field', 3, 'click'],
                ['textField', ''],
                ['class', 'mat-mdc-form-field-focus-overlay', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-flex'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-form-field-icon-prefix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-prefix', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-infix'],
                [3, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-suffix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-icon-suffix', 4, 'ngIf'],
                ['matFormFieldLineRipple', '', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-form-field-subscript-wrapper',
                  'mat-mdc-form-field-bottom-align',
                  3,
                  'ngSwitch',
                ],
                [
                  'class',
                  'mat-mdc-form-field-error-wrapper',
                  4,
                  'ngSwitchCase',
                ],
                ['class', 'mat-mdc-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                ],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-mdc-form-field-required-marker mdc-floating-label--required',
                  4,
                  'ngIf',
                ],
                [
                  'aria-hidden',
                  'true',
                  1,
                  'mat-mdc-form-field-required-marker',
                  'mdc-floating-label--required',
                ],
                [1, 'mat-mdc-form-field-focus-overlay'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                ],
                [3, 'ngTemplateOutlet'],
                [1, 'mat-mdc-form-field-icon-prefix'],
                ['iconPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-prefix'],
                ['textPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-suffix'],
                [1, 'mat-mdc-form-field-icon-suffix'],
                ['matFormFieldLineRipple', ''],
                [1, 'mat-mdc-form-field-error-wrapper'],
                [1, 'mat-mdc-form-field-hint-wrapper'],
                [3, 'id', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-hint-spacer'],
                [3, 'id'],
              ],
              template: function (fe, et) {
                1 & fe &&
                  (s.F$t(Me),
                  s.YNc(0, at, 1, 1, 'ng-template', null, 0, s.W1O),
                  s.TgZ(2, 'div', 1, 2),
                  s.NdJ('click', function (Rt) {
                    return (
                      et._control.onContainerClick &&
                      et._control.onContainerClick(Rt)
                    );
                  }),
                  s.YNc(4, vt, 1, 0, 'div', 3),
                  s.TgZ(5, 'div', 4),
                  s.YNc(6, te, 2, 3, 'div', 5),
                  s.YNc(7, X, 3, 0, 'div', 6),
                  s.YNc(8, Se, 3, 0, 'div', 7),
                  s.TgZ(9, 'div', 8),
                  s.YNc(10, re, 1, 1, 'ng-template', 9),
                  s.Hsn(11),
                  s.qZA(),
                  s.YNc(12, At, 2, 0, 'div', 10),
                  s.YNc(13, mt, 2, 0, 'div', 11),
                  s.qZA(),
                  s.YNc(14, Yt, 1, 0, 'div', 12),
                  s.qZA(),
                  s.TgZ(15, 'div', 13),
                  s.YNc(16, Et, 2, 1, 'div', 14),
                  s.YNc(17, $e, 5, 2, 'div', 15),
                  s.qZA()),
                  2 & fe &&
                    (s.xp6(2),
                    s.ekj('mdc-text-field--filled', !et._hasOutline())(
                      'mdc-text-field--outlined',
                      et._hasOutline(),
                    )('mdc-text-field--no-label', !et._hasFloatingLabel())(
                      'mdc-text-field--disabled',
                      et._control.disabled,
                    )('mdc-text-field--invalid', et._control.errorState),
                    s.xp6(2),
                    s.Q6J('ngIf', !et._hasOutline() && !et._control.disabled),
                    s.xp6(2),
                    s.Q6J('ngIf', et._hasOutline()),
                    s.xp6(1),
                    s.Q6J('ngIf', et._hasIconPrefix),
                    s.xp6(1),
                    s.Q6J('ngIf', et._hasTextPrefix),
                    s.xp6(2),
                    s.Q6J(
                      'ngIf',
                      !et._hasOutline() || et._forceDisplayInfixLabel(),
                    ),
                    s.xp6(2),
                    s.Q6J('ngIf', et._hasTextSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', et._hasIconSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', !et._hasOutline()),
                    s.xp6(1),
                    s.ekj(
                      'mat-mdc-form-field-subscript-dynamic-size',
                      'dynamic' === et.subscriptSizing,
                    ),
                    s.Q6J('ngSwitch', et._getDisplayedMessages()),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'error'),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'hint'));
              },
              dependencies: [ge.O5, ge.tP, ge.RF, ge.n9, ae.wD, je, un, wn, mn],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [Dt.transitionMessages] },
              changeDetection: 0,
            })),
            de
          );
        })(),
        ke = (() => {
          class de {}
          return (
            (de.ɵfac = function (fe) {
              return new (fe || de)();
            }),
            (de.ɵmod = s.oAB({ type: de })),
            (de.ɵinj = s.cJS({ imports: [pe.BQ, ge.ez, ae.Q8, pe.BQ] })),
            de
          );
        })();
    },
    4144: (Ot, Ne, C) => {
      C.d(Ne, { Jk: () => st, Nt: () => at, c: () => vt });
      var s = C(1281),
        x = C(3353),
        L = C(4650),
        oe = C(515),
        ee = C(7579);
      const he = (0, x.i$)({ passive: !0 });
      let ge = (() => {
          class xe {
            constructor(te, X) {
              (this._platform = te),
                (this._ngZone = X),
                (this._monitoredElements = new Map());
            }
            monitor(te) {
              if (!this._platform.isBrowser) return oe.E;
              const X = (0, s.fI)(te),
                Se = this._monitoredElements.get(X);
              if (Se) return Se.subject;
              const tt = new ee.x(),
                re = 'cdk-text-field-autofilled',
                At = mt => {
                  'cdk-text-field-autofill-start' !== mt.animationName ||
                  X.classList.contains(re)
                    ? 'cdk-text-field-autofill-end' === mt.animationName &&
                      X.classList.contains(re) &&
                      (X.classList.remove(re),
                      this._ngZone.run(() =>
                        tt.next({ target: mt.target, isAutofilled: !1 }),
                      ))
                    : (X.classList.add(re),
                      this._ngZone.run(() =>
                        tt.next({ target: mt.target, isAutofilled: !0 }),
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  X.addEventListener('animationstart', At, he),
                    X.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(X, {
                  subject: tt,
                  unlisten: () => {
                    X.removeEventListener('animationstart', At, he);
                  },
                }),
                tt
              );
            }
            stopMonitoring(te) {
              const X = (0, s.fI)(te),
                Se = this._monitoredElements.get(X);
              Se &&
                (Se.unlisten(),
                Se.subject.complete(),
                X.classList.remove('cdk-text-field-autofill-monitored'),
                X.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(X));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((te, X) =>
                this.stopMonitoring(X),
              );
            }
          }
          return (
            (xe.ɵfac = function (te) {
              return new (te || xe)(L.LFG(x.t4), L.LFG(L.R0b));
            }),
            (xe.ɵprov = L.Yz7({
              token: xe,
              factory: xe.ɵfac,
              providedIn: 'root',
            })),
            xe
          );
        })(),
        ae = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (te) {
              return new (te || xe)();
            }),
            (xe.ɵmod = L.oAB({ type: xe })),
            (xe.ɵinj = L.cJS({})),
            xe
          );
        })();
      var pe = C(4006),
        se = C(3238),
        Be = C(9549);
      const st = new L.OlP('MAT_INPUT_VALUE_ACCESSOR'),
        gt = [
          'button',
          'checkbox',
          'file',
          'hidden',
          'image',
          'radio',
          'range',
          'reset',
          'submit',
        ];
      let Le = 0;
      const pt = (0, se.FD)(
        class {
          constructor(xe, ne, te, X) {
            (this._defaultErrorStateMatcher = xe),
              (this._parentForm = ne),
              (this._parentFormGroup = te),
              (this.ngControl = X),
              (this.stateChanges = new ee.x());
          }
        },
      );
      let at = (() => {
          class xe extends pt {
            get disabled() {
              return this._disabled;
            }
            set disabled(te) {
              (this._disabled = (0, s.Ig)(te)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(te) {
              this._id = te || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(pe.kI.required) ??
                !1
              );
            }
            set required(te) {
              this._required = (0, s.Ig)(te);
            }
            get type() {
              return this._type;
            }
            set type(te) {
              (this._type = te || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  (0, x.qK)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(te) {
              te !== this.value &&
                ((this._inputValueAccessor.value = te),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(te) {
              this._readonly = (0, s.Ig)(te);
            }
            constructor(te, X, Se, tt, re, At, mt, Yt, Et, Ge) {
              super(At, tt, re, Se),
                (this._elementRef = te),
                (this._platform = X),
                (this._autofillMonitor = Yt),
                (this._formField = Ge),
                (this._uid = 'mat-input-' + Le++),
                (this.focused = !1),
                (this.stateChanges = new ee.x()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter(Ue => (0, x.qK)().has(Ue))),
                (this._iOSKeyupListener = Ue => {
                  const De = Ue.target;
                  !De.value &&
                    0 === De.selectionStart &&
                    0 === De.selectionEnd &&
                    (De.setSelectionRange(1, 1), De.setSelectionRange(0, 0));
                });
              const $e = this._elementRef.nativeElement,
                Me = $e.nodeName.toLowerCase();
              (this._inputValueAccessor = mt || $e),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                X.IOS &&
                  Et.runOutsideAngular(() => {
                    te.nativeElement.addEventListener(
                      'keyup',
                      this._iOSKeyupListener,
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === Me),
                (this._isTextarea = 'textarea' === Me),
                (this._isInFormField = !!Ge),
                this._isNativeSelect &&
                  (this.controlType = $e.multiple
                    ? 'mat-native-select-multiple'
                    : 'mat-native-select');
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe(te => {
                    (this.autofilled = te.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement,
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    'keyup',
                    this._iOSKeyupListener,
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(te) {
              this._elementRef.nativeElement.focus(te);
            }
            _focusChanged(te) {
              te !== this.focused &&
                ((this.focused = te), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const te = this._elementRef.nativeElement.value;
              this._previousNativeValue !== te &&
                ((this._previousNativeValue = te), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const te = this._getPlaceholder();
              if (te !== this._previousPlaceholder) {
                const X = this._elementRef.nativeElement;
                (this._previousPlaceholder = te),
                  te
                    ? X.setAttribute('placeholder', te)
                    : X.removeAttribute('placeholder');
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              gt.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let te = this._elementRef.nativeElement.validity;
              return te && te.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const te = this._elementRef.nativeElement,
                  X = te.options[0];
                return (
                  this.focused ||
                  te.multiple ||
                  !this.empty ||
                  !!(te.selectedIndex > -1 && X && X.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(te) {
              te.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    te.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const te = this._elementRef.nativeElement;
              return this._isNativeSelect && (te.multiple || te.size > 1);
            }
          }
          return (
            (xe.ɵfac = function (te) {
              return new (te || xe)(
                L.Y36(L.SBq),
                L.Y36(x.t4),
                L.Y36(pe.a5, 10),
                L.Y36(pe.F, 8),
                L.Y36(pe.sg, 8),
                L.Y36(se.rD),
                L.Y36(st, 10),
                L.Y36(ge),
                L.Y36(L.R0b),
                L.Y36(Be.G_, 8),
              );
            }),
            (xe.ɵdir = L.lG2({
              type: xe,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-mdc-input-element'],
              hostVars: 18,
              hostBindings: function (te, X) {
                1 & te &&
                  L.NdJ('focus', function () {
                    return X._focusChanged(!0);
                  })('blur', function () {
                    return X._focusChanged(!1);
                  })('input', function () {
                    return X._onInput();
                  }),
                  2 & te &&
                    (L.Ikx('id', X.id)('disabled', X.disabled)(
                      'required',
                      X.required,
                    ),
                    L.uIk('name', X.name || null)(
                      'readonly',
                      (X.readonly && !X._isNativeSelect) || null,
                    )(
                      'aria-invalid',
                      X.empty && X.required ? null : X.errorState,
                    )('aria-required', X.required)('id', X.id),
                    L.ekj('mat-input-server', X._isServer)(
                      'mat-mdc-form-field-textarea-control',
                      X._isInFormField && X._isTextarea,
                    )('mat-mdc-form-field-input-control', X._isInFormField)(
                      'mdc-text-field__input',
                      X._isInFormField,
                    )('mat-mdc-native-select-inline', X._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [
                L._Bn([{ provide: Be.Eo, useExisting: xe }]),
                L.qOj,
                L.TTD,
              ],
            })),
            xe
          );
        })(),
        vt = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (te) {
              return new (te || xe)();
            }),
            (xe.ɵmod = L.oAB({ type: xe })),
            (xe.ɵinj = L.cJS({ imports: [se.BQ, Be.lN, Be.lN, ae, se.BQ] })),
            xe
          );
        })();
    },
    7009: (Ot, Ne, C) => {
      C.d(Ne, { ZX: () => mt, ux: () => $e });
      var s = C(4650),
        x = C(7579),
        L = C(6895),
        oe = C(4859),
        ee = C(7340),
        he = C(4080),
        ge = C(3353),
        ue = C(5698),
        le = C(2722),
        ae = C(2687),
        pe = C(2289),
        se = C(8184),
        Be = C(3238);
      function ze(Me, Ue) {
        if (1 & Me) {
          const De = s.EpF();
          s.TgZ(0, 'div', 2)(1, 'button', 3),
            s.NdJ('click', function () {
              s.CHM(De);
              const a = s.oxw();
              return s.KtG(a.action());
            }),
            s._uU(2),
            s.qZA()();
        }
        if (2 & Me) {
          const De = s.oxw();
          s.xp6(2), s.hij(' ', De.data.action, ' ');
        }
      }
      const st = ['label'];
      function gt(Me, Ue) {}
      const Le = Math.pow(2, 31) - 1;
      class pt {
        constructor(Ue, De) {
          (this._overlayRef = De),
            (this._afterDismissed = new x.x()),
            (this._afterOpened = new x.x()),
            (this._onAction = new x.x()),
            (this._dismissedByAction = !1),
            (this.containerInstance = Ue),
            Ue._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(Ue) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(Ue, Le),
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const at = new s.OlP('MatSnackBarData');
      class vt {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      let xe = (() => {
          class Me {}
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)();
            }),
            (Me.ɵdir = s.lG2({
              type: Me,
              selectors: [['', 'matSnackBarLabel', '']],
              hostAttrs: [1, 'mat-mdc-snack-bar-label', 'mdc-snackbar__label'],
            })),
            Me
          );
        })(),
        ne = (() => {
          class Me {}
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)();
            }),
            (Me.ɵdir = s.lG2({
              type: Me,
              selectors: [['', 'matSnackBarActions', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-actions',
                'mdc-snackbar__actions',
              ],
            })),
            Me
          );
        })(),
        te = (() => {
          class Me {}
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)();
            }),
            (Me.ɵdir = s.lG2({
              type: Me,
              selectors: [['', 'matSnackBarAction', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-action',
                'mdc-snackbar__action',
              ],
            })),
            Me
          );
        })(),
        X = (() => {
          class Me {
            constructor(De, Pe) {
              (this.snackBarRef = De), (this.data = Pe);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)(s.Y36(pt), s.Y36(at));
            }),
            (Me.ɵcmp = s.Xpm({
              type: Me,
              selectors: [['simple-snack-bar']],
              hostAttrs: [1, 'mat-mdc-simple-snack-bar'],
              exportAs: ['matSnackBar'],
              decls: 3,
              vars: 2,
              consts: [
                ['matSnackBarLabel', ''],
                ['matSnackBarActions', '', 4, 'ngIf'],
                ['matSnackBarActions', ''],
                ['mat-button', '', 'matSnackBarAction', '', 3, 'click'],
              ],
              template: function (De, Pe) {
                1 & De &&
                  (s.TgZ(0, 'div', 0),
                  s._uU(1),
                  s.qZA(),
                  s.YNc(2, ze, 3, 1, 'div', 1)),
                  2 & De &&
                    (s.xp6(1),
                    s.hij(' ', Pe.data.message, '\n'),
                    s.xp6(1),
                    s.Q6J('ngIf', Pe.hasAction));
              },
              dependencies: [L.O5, oe.lW, xe, ne, te],
              styles: ['.mat-mdc-simple-snack-bar{display:flex}'],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Me
          );
        })();
      const Se = {
        snackBarState: (0, ee.X$)('state', [
          (0, ee.SB)(
            'void, hidden',
            (0, ee.oB)({ transform: 'scale(0.8)', opacity: 0 }),
          ),
          (0, ee.SB)(
            'visible',
            (0, ee.oB)({ transform: 'scale(1)', opacity: 1 }),
          ),
          (0, ee.eR)(
            '* => visible',
            (0, ee.jt)('150ms cubic-bezier(0, 0, 0.2, 1)'),
          ),
          (0, ee.eR)(
            '* => void, * => hidden',
            (0, ee.jt)(
              '75ms cubic-bezier(0.4, 0.0, 1, 1)',
              (0, ee.oB)({ opacity: 0 }),
            ),
          ),
        ]),
      };
      let tt = 0,
        re = (() => {
          class Me extends he.en {
            constructor(De, Pe, a, Ye, rt) {
              super(),
                (this._ngZone = De),
                (this._elementRef = Pe),
                (this._changeDetectorRef = a),
                (this._platform = Ye),
                (this.snackBarConfig = rt),
                (this._document = (0, s.f3M)(L.K0)),
                (this._trackedModals = new Set()),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new x.x()),
                (this._onExit = new x.x()),
                (this._onEnter = new x.x()),
                (this._animationState = 'void'),
                (this._liveElementId = 'mat-snack-bar-container-live-' + tt++),
                (this.attachDomPortal = je => {
                  this._assertNotAttached();
                  const ut = this._portalOutlet.attachDomPortal(je);
                  return this._afterPortalAttached(), ut;
                }),
                (this._live =
                  'assertive' !== rt.politeness || rt.announcementMessage
                    ? 'off' === rt.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(De) {
              this._assertNotAttached();
              const Pe = this._portalOutlet.attachComponentPortal(De);
              return this._afterPortalAttached(), Pe;
            }
            attachTemplatePortal(De) {
              this._assertNotAttached();
              const Pe = this._portalOutlet.attachTemplatePortal(De);
              return this._afterPortalAttached(), Pe;
            }
            onAnimationEnd(De) {
              const { fromState: Pe, toState: a } = De;
              if (
                ((('void' === a && 'void' !== Pe) || 'hidden' === a) &&
                  this._completeExit(),
                'visible' === a)
              ) {
                const Ye = this._onEnter;
                this._ngZone.run(() => {
                  Ye.next(), Ye.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = 'hidden'),
                    this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0),
                this._clearFromModals(),
                this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe((0, ue.q)(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const De = this._elementRef.nativeElement,
                Pe = this.snackBarConfig.panelClass;
              Pe &&
                (Array.isArray(Pe)
                  ? Pe.forEach(a => De.classList.add(a))
                  : De.classList.add(Pe)),
                this._exposeToModals();
            }
            _exposeToModals() {
              const De = this._liveElementId,
                Pe = this._document.querySelectorAll(
                  'body > .cdk-overlay-container [aria-modal="true"]',
                );
              for (let a = 0; a < Pe.length; a++) {
                const Ye = Pe[a],
                  rt = Ye.getAttribute('aria-owns');
                this._trackedModals.add(Ye),
                  rt
                    ? -1 === rt.indexOf(De) &&
                      Ye.setAttribute('aria-owns', rt + ' ' + De)
                    : Ye.setAttribute('aria-owns', De);
              }
            }
            _clearFromModals() {
              this._trackedModals.forEach(De => {
                const Pe = De.getAttribute('aria-owns');
                if (Pe) {
                  const a = Pe.replace(this._liveElementId, '').trim();
                  a.length > 0
                    ? De.setAttribute('aria-owns', a)
                    : De.removeAttribute('aria-owns');
                }
              }),
                this._trackedModals.clear();
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const De =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-hidden]',
                        ),
                      Pe =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-live]',
                        );
                    if (De && Pe) {
                      let a = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        De.contains(document.activeElement) &&
                        (a = document.activeElement),
                        De.removeAttribute('aria-hidden'),
                        Pe.appendChild(De),
                        a?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)(
                s.Y36(s.R0b),
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(ge.t4),
                s.Y36(vt),
              );
            }),
            (Me.ɵdir = s.lG2({
              type: Me,
              viewQuery: function (De, Pe) {
                if ((1 & De && s.Gf(he.Pl, 7), 2 & De)) {
                  let a;
                  s.iGM((a = s.CRH())) && (Pe._portalOutlet = a.first);
                }
              },
              features: [s.qOj],
            })),
            Me
          );
        })(),
        At = (() => {
          class Me extends re {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const De = this._label.nativeElement,
                Pe = 'mdc-snackbar__label';
              De.classList.toggle(Pe, !De.querySelector(`.${Pe}`));
            }
          }
          return (
            (Me.ɵfac = (function () {
              let Ue;
              return function (Pe) {
                return (Ue || (Ue = s.n5z(Me)))(Pe || Me);
              };
            })()),
            (Me.ɵcmp = s.Xpm({
              type: Me,
              selectors: [['mat-snack-bar-container']],
              viewQuery: function (De, Pe) {
                if ((1 & De && s.Gf(st, 7), 2 & De)) {
                  let a;
                  s.iGM((a = s.CRH())) && (Pe._label = a.first);
                }
              },
              hostAttrs: [
                1,
                'mdc-snackbar',
                'mat-mdc-snack-bar-container',
                'mdc-snackbar--open',
              ],
              hostVars: 1,
              hostBindings: function (De, Pe) {
                1 & De &&
                  s.WFA('@state.done', function (Ye) {
                    return Pe.onAnimationEnd(Ye);
                  }),
                  2 & De && s.d8E('@state', Pe._animationState);
              },
              features: [s.qOj],
              decls: 6,
              vars: 3,
              consts: [
                [1, 'mdc-snackbar__surface'],
                [1, 'mat-mdc-snack-bar-label'],
                ['label', ''],
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (De, Pe) {
                1 & De &&
                  (s.TgZ(0, 'div', 0)(1, 'div', 1, 2)(3, 'div', 3),
                  s.YNc(4, gt, 0, 0, 'ng-template', 4),
                  s.qZA(),
                  s._UZ(5, 'div'),
                  s.qZA()()),
                  2 & De &&
                    (s.xp6(5),
                    s.uIk('aria-live', Pe._live)('role', Pe._role)(
                      'id',
                      Pe._liveElementId,
                    ));
              },
              dependencies: [he.Pl],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [Se.snackBarState] },
            })),
            Me
          );
        })(),
        mt = (() => {
          class Me {}
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)();
            }),
            (Me.ɵmod = s.oAB({ type: Me })),
            (Me.ɵinj = s.cJS({
              imports: [se.U8, he.eL, L.ez, oe.ot, Be.BQ, Be.BQ],
            })),
            Me
          );
        })();
      const Et = new s.OlP('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function Yt() {
          return new vt();
        },
      });
      let Ge = (() => {
          class Me {
            get _openedSnackBarRef() {
              const De = this._parentSnackBar;
              return De ? De._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(De) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = De)
                : (this._snackBarRefAtThisLevel = De);
            }
            constructor(De, Pe, a, Ye, rt, je) {
              (this._overlay = De),
                (this._live = Pe),
                (this._injector = a),
                (this._breakpointObserver = Ye),
                (this._parentSnackBar = rt),
                (this._defaultConfig = je),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(De, Pe) {
              return this._attach(De, Pe);
            }
            openFromTemplate(De, Pe) {
              return this._attach(De, Pe);
            }
            open(De, Pe = '', a) {
              const Ye = { ...this._defaultConfig, ...a };
              return (
                (Ye.data = { message: De, action: Pe }),
                Ye.announcementMessage === De &&
                  (Ye.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, Ye)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(De, Pe) {
              const Ye = s.zs3.create({
                  parent:
                    (Pe &&
                      Pe.viewContainerRef &&
                      Pe.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: vt, useValue: Pe }],
                }),
                rt = new he.C5(
                  this.snackBarContainerComponent,
                  Pe.viewContainerRef,
                  Ye,
                ),
                je = De.attach(rt);
              return (je.instance.snackBarConfig = Pe), je.instance;
            }
            _attach(De, Pe) {
              const a = { ...new vt(), ...this._defaultConfig, ...Pe },
                Ye = this._createOverlay(a),
                rt = this._attachSnackBarContainer(Ye, a),
                je = new pt(rt, Ye);
              if (De instanceof s.Rgc) {
                const ut = new he.UE(De, null, {
                  $implicit: a.data,
                  snackBarRef: je,
                });
                je.instance = rt.attachTemplatePortal(ut);
              } else {
                const ut = this._createInjector(a, je),
                  nt = new he.C5(De, void 0, ut),
                  Lt = rt.attachComponentPortal(nt);
                je.instance = Lt.instance;
              }
              return (
                this._breakpointObserver
                  .observe(pe.u3.HandsetPortrait)
                  .pipe((0, le.R)(Ye.detachments()))
                  .subscribe(ut => {
                    Ye.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      ut.matches,
                    );
                  }),
                a.announcementMessage &&
                  rt._onAnnounce.subscribe(() => {
                    this._live.announce(a.announcementMessage, a.politeness);
                  }),
                this._animateSnackBar(je, a),
                (this._openedSnackBarRef = je),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(De, Pe) {
              De.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == De &&
                  (this._openedSnackBarRef = null),
                  Pe.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      De.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : De.containerInstance.enter(),
                Pe.duration &&
                  Pe.duration > 0 &&
                  De.afterOpened().subscribe(() =>
                    De._dismissAfter(Pe.duration),
                  );
            }
            _createOverlay(De) {
              const Pe = new se.X_();
              Pe.direction = De.direction;
              let a = this._overlay.position().global();
              const Ye = 'rtl' === De.direction,
                rt =
                  'left' === De.horizontalPosition ||
                  ('start' === De.horizontalPosition && !Ye) ||
                  ('end' === De.horizontalPosition && Ye),
                je = !rt && 'center' !== De.horizontalPosition;
              return (
                rt ? a.left('0') : je ? a.right('0') : a.centerHorizontally(),
                'top' === De.verticalPosition ? a.top('0') : a.bottom('0'),
                (Pe.positionStrategy = a),
                this._overlay.create(Pe)
              );
            }
            _createInjector(De, Pe) {
              return s.zs3.create({
                parent:
                  (De && De.viewContainerRef && De.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: pt, useValue: Pe },
                  { provide: at, useValue: De.data },
                ],
              });
            }
          }
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)(
                s.LFG(se.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(pe.Yg),
                s.LFG(Me, 12),
                s.LFG(Et),
              );
            }),
            (Me.ɵprov = s.Yz7({ token: Me, factory: Me.ɵfac })),
            Me
          );
        })(),
        $e = (() => {
          class Me extends Ge {
            constructor(De, Pe, a, Ye, rt, je) {
              super(De, Pe, a, Ye, rt, je),
                (this.simpleSnackBarComponent = X),
                (this.snackBarContainerComponent = At),
                (this.handsetCssClass = 'mat-mdc-snack-bar-handset');
            }
          }
          return (
            (Me.ɵfac = function (De) {
              return new (De || Me)(
                s.LFG(se.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(pe.Yg),
                s.LFG(Me, 12),
                s.LFG(Et),
              );
            }),
            (Me.ɵprov = s.Yz7({ token: Me, factory: Me.ɵfac, providedIn: mt })),
            Me
          );
        })();
    },
    1481: (Ot, Ne, C) => {
      C.d(Ne, {
        Dx: () => ve,
        H7: () => Gt,
        b2: () => Xe,
        q6: () => Jt,
        se: () => Et,
      });
      var s = C(6895),
        x = C(4650);
      class L extends s.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class oe extends L {
        static makeCurrent() {
          (0, s.HT)(new oe());
        }
        onAndCancel(Ce, K, we) {
          return (
            Ce.addEventListener(K, we, !1),
            () => {
              Ce.removeEventListener(K, we, !1);
            }
          );
        }
        dispatchEvent(Ce, K) {
          Ce.dispatchEvent(K);
        }
        remove(Ce) {
          Ce.parentNode && Ce.parentNode.removeChild(Ce);
        }
        createElement(Ce, K) {
          return (K = K || this.getDefaultDocument()).createElement(Ce);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(Ce) {
          return Ce.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(Ce) {
          return Ce instanceof DocumentFragment;
        }
        getGlobalEventTarget(Ce, K) {
          return 'window' === K
            ? window
            : 'document' === K
            ? Ce
            : 'body' === K
            ? Ce.body
            : null;
        }
        getBaseHref(Ce) {
          const K = (function he() {
            return (
              (ee = ee || document.querySelector('base')),
              ee ? ee.getAttribute('href') : null
            );
          })();
          return null == K
            ? null
            : (function ue(Re) {
                (ge = ge || document.createElement('a')),
                  ge.setAttribute('href', Re);
                const Ce = ge.pathname;
                return '/' === Ce.charAt(0) ? Ce : `/${Ce}`;
              })(K);
        }
        resetBaseElement() {
          ee = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(Ce) {
          return (0, s.Mx)(document.cookie, Ce);
        }
      }
      let ge,
        ee = null;
      const le = new x.OlP('TRANSITION_ID'),
        pe = [
          {
            provide: x.ip1,
            useFactory: function ae(Re, Ce, K) {
              return () => {
                K.get(x.CZH).donePromise.then(() => {
                  const we = (0, s.q)(),
                    ct = Ce.querySelectorAll(`style[ng-transition="${Re}"]`);
                  for (let Ft = 0; Ft < ct.length; Ft++) we.remove(ct[Ft]);
                });
              };
            },
            deps: [le, s.K0, x.zs3],
            multi: !0,
          },
        ];
      let Be = (() => {
        class Re {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (Re.ɵfac = function (K) {
            return new (K || Re)();
          }),
          (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
          Re
        );
      })();
      const ze = new x.OlP('EventManagerPlugins');
      let st = (() => {
        class Re {
          constructor(K, we) {
            (this._zone = we),
              (this._eventNameToPlugin = new Map()),
              K.forEach(ct => {
                ct.manager = this;
              }),
              (this._plugins = K.slice().reverse());
          }
          addEventListener(K, we, ct) {
            return this._findPluginFor(we).addEventListener(K, we, ct);
          }
          addGlobalEventListener(K, we, ct) {
            return this._findPluginFor(we).addGlobalEventListener(K, we, ct);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(K) {
            const we = this._eventNameToPlugin.get(K);
            if (we) return we;
            const ct = this._plugins;
            for (let Ft = 0; Ft < ct.length; Ft++) {
              const Zt = ct[Ft];
              if (Zt.supports(K)) return this._eventNameToPlugin.set(K, Zt), Zt;
            }
            throw new Error(`No event manager plugin found for event ${K}`);
          }
        }
        return (
          (Re.ɵfac = function (K) {
            return new (K || Re)(x.LFG(ze), x.LFG(x.R0b));
          }),
          (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
          Re
        );
      })();
      class gt {
        constructor(Ce) {
          this._doc = Ce;
        }
        addGlobalEventListener(Ce, K, we) {
          const ct = (0, s.q)().getGlobalEventTarget(this._doc, Ce);
          if (!ct)
            throw new Error(`Unsupported event target ${ct} for event ${K}`);
          return this.addEventListener(ct, K, we);
        }
      }
      let Le = (() => {
          class Re {
            constructor() {
              this.usageCount = new Map();
            }
            addStyles(K) {
              for (const we of K)
                1 === this.changeUsageCount(we, 1) && this.onStyleAdded(we);
            }
            removeStyles(K) {
              for (const we of K)
                0 === this.changeUsageCount(we, -1) && this.onStyleRemoved(we);
            }
            onStyleRemoved(K) {}
            onStyleAdded(K) {}
            getAllStyles() {
              return this.usageCount.keys();
            }
            changeUsageCount(K, we) {
              const ct = this.usageCount;
              let Ft = ct.get(K) ?? 0;
              return (Ft += we), Ft > 0 ? ct.set(K, Ft) : ct.delete(K), Ft;
            }
            ngOnDestroy() {
              for (const K of this.getAllStyles()) this.onStyleRemoved(K);
              this.usageCount.clear();
            }
          }
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)();
            }),
            (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
            Re
          );
        })(),
        pt = (() => {
          class Re extends Le {
            constructor(K) {
              super(),
                (this.doc = K),
                (this.styleRef = new Map()),
                (this.hostNodes = new Set()),
                this.resetHostNodes();
            }
            onStyleAdded(K) {
              for (const we of this.hostNodes) this.addStyleToHost(we, K);
            }
            onStyleRemoved(K) {
              const we = this.styleRef;
              we.get(K)?.forEach(Ft => Ft.remove()), we.delete(K);
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes();
            }
            addHost(K) {
              this.hostNodes.add(K);
              for (const we of this.getAllStyles()) this.addStyleToHost(K, we);
            }
            removeHost(K) {
              this.hostNodes.delete(K);
            }
            addStyleToHost(K, we) {
              const ct = this.doc.createElement('style');
              (ct.textContent = we), K.appendChild(ct);
              const Ft = this.styleRef.get(we);
              Ft ? Ft.push(ct) : this.styleRef.set(we, [ct]);
            }
            resetHostNodes() {
              const K = this.hostNodes;
              K.clear(), K.add(this.doc.head);
            }
          }
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)(x.LFG(s.K0));
            }),
            (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
            Re
          );
        })();
      const at = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          math: 'http://www.w3.org/1998/MathML/',
        },
        vt = /%COMP%/g,
        tt = new x.OlP('RemoveStylesOnCompDestory', {
          providedIn: 'root',
          factory: () => !1,
        });
      function mt(Re, Ce) {
        return Ce.flat(100).map(K => K.replace(vt, Re));
      }
      function Yt(Re) {
        return Ce => {
          if ('__ngUnwrap__' === Ce) return Re;
          !1 === Re(Ce) && (Ce.preventDefault(), (Ce.returnValue = !1));
        };
      }
      let Et = (() => {
        class Re {
          constructor(K, we, ct, Ft) {
            (this.eventManager = K),
              (this.sharedStylesHost = we),
              (this.appId = ct),
              (this.removeStylesOnCompDestory = Ft),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Ge(K));
          }
          createRenderer(K, we) {
            if (!K || !we) return this.defaultRenderer;
            const ct = this.getOrCreateRenderer(K, we);
            return (
              ct instanceof a
                ? ct.applyToHost(K)
                : ct instanceof Pe && ct.applyStyles(),
              ct
            );
          }
          getOrCreateRenderer(K, we) {
            const ct = this.rendererByCompId;
            let Ft = ct.get(we.id);
            if (!Ft) {
              const Zt = this.eventManager,
                _n = this.sharedStylesHost,
                In = this.removeStylesOnCompDestory;
              switch (we.encapsulation) {
                case x.ifc.Emulated:
                  Ft = new a(Zt, _n, we, this.appId, In);
                  break;
                case x.ifc.ShadowDom:
                  return new De(Zt, _n, K, we);
                default:
                  Ft = new Pe(Zt, _n, we, In);
              }
              (Ft.onDestroy = () => ct.delete(we.id)), ct.set(we.id, Ft);
            }
            return Ft;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          begin() {}
          end() {}
        }
        return (
          (Re.ɵfac = function (K) {
            return new (K || Re)(x.LFG(st), x.LFG(pt), x.LFG(x.AFp), x.LFG(tt));
          }),
          (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
          Re
        );
      })();
      class Ge {
        constructor(Ce) {
          (this.eventManager = Ce),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(Ce, K) {
          return K
            ? document.createElementNS(at[K] || K, Ce)
            : document.createElement(Ce);
        }
        createComment(Ce) {
          return document.createComment(Ce);
        }
        createText(Ce) {
          return document.createTextNode(Ce);
        }
        appendChild(Ce, K) {
          (Ue(Ce) ? Ce.content : Ce).appendChild(K);
        }
        insertBefore(Ce, K, we) {
          Ce && (Ue(Ce) ? Ce.content : Ce).insertBefore(K, we);
        }
        removeChild(Ce, K) {
          Ce && Ce.removeChild(K);
        }
        selectRootElement(Ce, K) {
          let we = 'string' == typeof Ce ? document.querySelector(Ce) : Ce;
          if (!we)
            throw new Error(`The selector "${Ce}" did not match any elements`);
          return K || (we.textContent = ''), we;
        }
        parentNode(Ce) {
          return Ce.parentNode;
        }
        nextSibling(Ce) {
          return Ce.nextSibling;
        }
        setAttribute(Ce, K, we, ct) {
          if (ct) {
            K = ct + ':' + K;
            const Ft = at[ct];
            Ft ? Ce.setAttributeNS(Ft, K, we) : Ce.setAttribute(K, we);
          } else Ce.setAttribute(K, we);
        }
        removeAttribute(Ce, K, we) {
          if (we) {
            const ct = at[we];
            ct ? Ce.removeAttributeNS(ct, K) : Ce.removeAttribute(`${we}:${K}`);
          } else Ce.removeAttribute(K);
        }
        addClass(Ce, K) {
          Ce.classList.add(K);
        }
        removeClass(Ce, K) {
          Ce.classList.remove(K);
        }
        setStyle(Ce, K, we, ct) {
          ct & (x.JOm.DashCase | x.JOm.Important)
            ? Ce.style.setProperty(
                K,
                we,
                ct & x.JOm.Important ? 'important' : '',
              )
            : (Ce.style[K] = we);
        }
        removeStyle(Ce, K, we) {
          we & x.JOm.DashCase ? Ce.style.removeProperty(K) : (Ce.style[K] = '');
        }
        setProperty(Ce, K, we) {
          Ce[K] = we;
        }
        setValue(Ce, K) {
          Ce.nodeValue = K;
        }
        listen(Ce, K, we) {
          return 'string' == typeof Ce
            ? this.eventManager.addGlobalEventListener(Ce, K, Yt(we))
            : this.eventManager.addEventListener(Ce, K, Yt(we));
        }
      }
      function Ue(Re) {
        return 'TEMPLATE' === Re.tagName && void 0 !== Re.content;
      }
      class De extends Ge {
        constructor(Ce, K, we, ct) {
          super(Ce),
            (this.sharedStylesHost = K),
            (this.hostEl = we),
            (this.shadowRoot = we.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const Ft = mt(ct.id, ct.styles);
          for (const Zt of Ft) {
            const _n = document.createElement('style');
            (_n.textContent = Zt), this.shadowRoot.appendChild(_n);
          }
        }
        nodeOrShadowRoot(Ce) {
          return Ce === this.hostEl ? this.shadowRoot : Ce;
        }
        appendChild(Ce, K) {
          return super.appendChild(this.nodeOrShadowRoot(Ce), K);
        }
        insertBefore(Ce, K, we) {
          return super.insertBefore(this.nodeOrShadowRoot(Ce), K, we);
        }
        removeChild(Ce, K) {
          return super.removeChild(this.nodeOrShadowRoot(Ce), K);
        }
        parentNode(Ce) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(Ce)),
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Pe extends Ge {
        constructor(Ce, K, we, ct, Ft = we.id) {
          super(Ce),
            (this.sharedStylesHost = K),
            (this.removeStylesOnCompDestory = ct),
            (this.rendererUsageCount = 0),
            (this.styles = mt(Ft, we.styles));
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles),
            this.rendererUsageCount++;
        }
        destroy() {
          this.removeStylesOnCompDestory &&
            (this.sharedStylesHost.removeStyles(this.styles),
            this.rendererUsageCount--,
            0 === this.rendererUsageCount && this.onDestroy?.());
        }
      }
      class a extends Pe {
        constructor(Ce, K, we, ct, Ft) {
          const Zt = ct + '-' + we.id;
          super(Ce, K, we, Ft, Zt),
            (this.contentAttr = (function re(Re) {
              return '_ngcontent-%COMP%'.replace(vt, Re);
            })(Zt)),
            (this.hostAttr = (function At(Re) {
              return '_nghost-%COMP%'.replace(vt, Re);
            })(Zt));
        }
        applyToHost(Ce) {
          this.applyStyles(), this.setAttribute(Ce, this.hostAttr, '');
        }
        createElement(Ce, K) {
          const we = super.createElement(Ce, K);
          return super.setAttribute(we, this.contentAttr, ''), we;
        }
      }
      let Ye = (() => {
        class Re extends gt {
          constructor(K) {
            super(K);
          }
          supports(K) {
            return !0;
          }
          addEventListener(K, we, ct) {
            return (
              K.addEventListener(we, ct, !1),
              () => this.removeEventListener(K, we, ct)
            );
          }
          removeEventListener(K, we, ct) {
            return K.removeEventListener(we, ct);
          }
        }
        return (
          (Re.ɵfac = function (K) {
            return new (K || Re)(x.LFG(s.K0));
          }),
          (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
          Re
        );
      })();
      const rt = ['alt', 'control', 'meta', 'shift'],
        je = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        ut = {
          alt: Re => Re.altKey,
          control: Re => Re.ctrlKey,
          meta: Re => Re.metaKey,
          shift: Re => Re.shiftKey,
        };
      let nt = (() => {
        class Re extends gt {
          constructor(K) {
            super(K);
          }
          supports(K) {
            return null != Re.parseEventName(K);
          }
          addEventListener(K, we, ct) {
            const Ft = Re.parseEventName(we),
              Zt = Re.eventCallback(Ft.fullKey, ct, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, s.q)().onAndCancel(K, Ft.domEventName, Zt),
              );
          }
          static parseEventName(K) {
            const we = K.toLowerCase().split('.'),
              ct = we.shift();
            if (0 === we.length || ('keydown' !== ct && 'keyup' !== ct))
              return null;
            const Ft = Re._normalizeKey(we.pop());
            let Zt = '',
              _n = we.indexOf('code');
            if (
              (_n > -1 && (we.splice(_n, 1), (Zt = 'code.')),
              rt.forEach(Ut => {
                const qn = we.indexOf(Ut);
                qn > -1 && (we.splice(qn, 1), (Zt += Ut + '.'));
              }),
              (Zt += Ft),
              0 != we.length || 0 === Ft.length)
            )
              return null;
            const In = {};
            return (In.domEventName = ct), (In.fullKey = Zt), In;
          }
          static matchEventFullKeyCode(K, we) {
            let ct = je[K.key] || K.key,
              Ft = '';
            return (
              we.indexOf('code.') > -1 && ((ct = K.code), (Ft = 'code.')),
              !(null == ct || !ct) &&
                ((ct = ct.toLowerCase()),
                ' ' === ct ? (ct = 'space') : '.' === ct && (ct = 'dot'),
                rt.forEach(Zt => {
                  Zt !== ct && (0, ut[Zt])(K) && (Ft += Zt + '.');
                }),
                (Ft += ct),
                Ft === we)
            );
          }
          static eventCallback(K, we, ct) {
            return Ft => {
              Re.matchEventFullKeyCode(Ft, K) && ct.runGuarded(() => we(Ft));
            };
          }
          static _normalizeKey(K) {
            return 'esc' === K ? 'escape' : K;
          }
        }
        return (
          (Re.ɵfac = function (K) {
            return new (K || Re)(x.LFG(s.K0));
          }),
          (Re.ɵprov = x.Yz7({ token: Re, factory: Re.ɵfac })),
          Re
        );
      })();
      const Jt = (0, x.eFA)(x._c5, 'browser', [
          { provide: x.Lbi, useValue: s.bD },
          {
            provide: x.g9A,
            useValue: function Kt() {
              oe.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: s.K0,
            useFactory: function wn() {
              return (0, x.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        xt = new x.OlP(''),
        ht = [
          {
            provide: x.rWj,
            useClass: class se {
              addToWindow(Ce) {
                (x.dqk.getAngularTestability = (we, ct = !0) => {
                  const Ft = Ce.findTestabilityInTree(we, ct);
                  if (null == Ft)
                    throw new Error('Could not find testability for element.');
                  return Ft;
                }),
                  (x.dqk.getAllAngularTestabilities = () =>
                    Ce.getAllTestabilities()),
                  (x.dqk.getAllAngularRootElements = () =>
                    Ce.getAllRootElements()),
                  x.dqk.frameworkStabilizers ||
                    (x.dqk.frameworkStabilizers = []),
                  x.dqk.frameworkStabilizers.push(we => {
                    const ct = x.dqk.getAllAngularTestabilities();
                    let Ft = ct.length,
                      Zt = !1;
                    const _n = function (In) {
                      (Zt = Zt || In), Ft--, 0 == Ft && we(Zt);
                    };
                    ct.forEach(function (In) {
                      In.whenStable(_n);
                    });
                  });
              }
              findTestabilityInTree(Ce, K, we) {
                return null == K
                  ? null
                  : Ce.getTestability(K) ??
                      (we
                        ? (0, s.q)().isShadowRoot(K)
                          ? this.findTestabilityInTree(Ce, K.host, !0)
                          : this.findTestabilityInTree(Ce, K.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: x.lri, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
          { provide: x.dDg, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
        ],
        hn = [
          { provide: x.zSh, useValue: 'root' },
          {
            provide: x.qLn,
            useFactory: function mn() {
              return new x.qLn();
            },
            deps: [],
          },
          { provide: ze, useClass: Ye, multi: !0, deps: [s.K0, x.R0b, x.Lbi] },
          { provide: ze, useClass: nt, multi: !0, deps: [s.K0] },
          { provide: Et, useClass: Et, deps: [st, pt, x.AFp, tt] },
          { provide: x.FYo, useExisting: Et },
          { provide: Le, useExisting: pt },
          { provide: pt, useClass: pt, deps: [s.K0] },
          { provide: st, useClass: st, deps: [ze, x.R0b] },
          { provide: s.JF, useClass: Be, deps: [] },
          [],
        ];
      let Xe = (() => {
          class Re {
            constructor(K) {}
            static withServerTransition(K) {
              return {
                ngModule: Re,
                providers: [
                  { provide: x.AFp, useValue: K.appId },
                  { provide: le, useExisting: x.AFp },
                  pe,
                ],
              };
            }
          }
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)(x.LFG(xt, 12));
            }),
            (Re.ɵmod = x.oAB({ type: Re })),
            (Re.ɵinj = x.cJS({
              providers: [...hn, ...ht],
              imports: [s.ez, x.hGG],
            })),
            Re
          );
        })(),
        ve = (() => {
          class Re {
            constructor(K) {
              this._doc = K;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(K) {
              this._doc.title = K || '';
            }
          }
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)(x.LFG(s.K0));
            }),
            (Re.ɵprov = x.Yz7({
              token: Re,
              factory: function (K) {
                let we = null;
                return (
                  (we = K
                    ? new K()
                    : (function He() {
                        return new ve((0, x.LFG)(s.K0));
                      })()),
                  we
                );
              },
              providedIn: 'root',
            })),
            Re
          );
        })();
      typeof window < 'u' && window;
      let Gt = (() => {
          class Re {}
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)();
            }),
            (Re.ɵprov = x.Yz7({
              token: Re,
              factory: function (K) {
                let we = null;
                return (we = K ? new (K || Re)() : x.LFG(Bt)), we;
              },
              providedIn: 'root',
            })),
            Re
          );
        })(),
        Bt = (() => {
          class Re extends Gt {
            constructor(K) {
              super(), (this._doc = K);
            }
            sanitize(K, we) {
              if (null == we) return null;
              switch (K) {
                case x.q3G.NONE:
                  return we;
                case x.q3G.HTML:
                  return (0, x.qzn)(we, 'HTML')
                    ? (0, x.z3N)(we)
                    : (0, x.EiD)(this._doc, String(we)).toString();
                case x.q3G.STYLE:
                  return (0, x.qzn)(we, 'Style') ? (0, x.z3N)(we) : we;
                case x.q3G.SCRIPT:
                  if ((0, x.qzn)(we, 'Script')) return (0, x.z3N)(we);
                  throw new Error('unsafe value used in a script context');
                case x.q3G.URL:
                  return (0, x.qzn)(we, 'URL')
                    ? (0, x.z3N)(we)
                    : (0, x.mCW)(String(we));
                case x.q3G.RESOURCE_URL:
                  if ((0, x.qzn)(we, 'ResourceURL')) return (0, x.z3N)(we);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${x.JZr})`,
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${K} (see ${x.JZr})`,
                  );
              }
            }
            bypassSecurityTrustHtml(K) {
              return (0, x.JVY)(K);
            }
            bypassSecurityTrustStyle(K) {
              return (0, x.L6k)(K);
            }
            bypassSecurityTrustScript(K) {
              return (0, x.eBb)(K);
            }
            bypassSecurityTrustUrl(K) {
              return (0, x.LAX)(K);
            }
            bypassSecurityTrustResourceUrl(K) {
              return (0, x.pB0)(K);
            }
          }
          return (
            (Re.ɵfac = function (K) {
              return new (K || Re)(x.LFG(s.K0));
            }),
            (Re.ɵprov = x.Yz7({
              token: Re,
              factory: function (K) {
                let we = null;
                return (
                  (we = K
                    ? new K()
                    : (function zt(Re) {
                        return new Bt(Re.get(s.K0));
                      })(x.LFG(x.zs3))),
                  we
                );
              },
              providedIn: 'root',
            })),
            Re
          );
        })();
    },
    8252: (Ot, Ne, C) => {
      C.d(Ne, { F0: () => tr, rH: () => hs, Bz: () => nl, lC: () => Rr });
      var s = C(4650),
        x = C(457),
        L = C(9646),
        oe = C(1135);
      const he = (0, C(3888).d)(
        f =>
          function () {
            f(this),
              (this.name = 'EmptyError'),
              (this.message = 'no elements in sequence');
          },
      );
      var ge = C(9841),
        ue = C(7272),
        le = C(9770),
        ae = C(9635),
        pe = C(2843),
        se = C(9751),
        Be = C(515),
        ze = C(727),
        st = C(4482),
        gt = C(5403);
      function Le() {
        return (0, st.e)((f, m) => {
          let d = null;
          f._refCount++;
          const D = (0, gt.x)(m, void 0, void 0, void 0, () => {
            if (!f || f._refCount <= 0 || 0 < --f._refCount)
              return void (d = null);
            const O = f._connection,
              U = d;
            (d = null),
              O && (!U || O === U) && O.unsubscribe(),
              m.unsubscribe();
          });
          f.subscribe(D), D.closed || (d = f.connect());
        });
      }
      class pt extends se.y {
        constructor(m, d) {
          super(),
            (this.source = m),
            (this.subjectFactory = d),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, st.A)(m) && (this.lift = m.lift);
        }
        _subscribe(m) {
          return this.getSubject().subscribe(m);
        }
        getSubject() {
          const m = this._subject;
          return (
            (!m || m.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: m } = this;
          (this._subject = this._connection = null), m?.unsubscribe();
        }
        connect() {
          let m = this._connection;
          if (!m) {
            m = this._connection = new ze.w0();
            const d = this.getSubject();
            m.add(
              this.source.subscribe(
                (0, gt.x)(
                  d,
                  void 0,
                  () => {
                    this._teardown(), d.complete();
                  },
                  D => {
                    this._teardown(), d.error(D);
                  },
                  () => this._teardown(),
                ),
              ),
            ),
              m.closed && ((this._connection = null), (m = ze.w0.EMPTY));
          }
          return m;
        }
        refCount() {
          return Le()(this);
        }
      }
      var at = C(7579),
        vt = C(6895),
        xe = C(4004),
        ne = C(3900),
        te = C(5698),
        X = C(8675),
        Se = C(9300),
        tt = C(5577);
      function re(f) {
        return (0, st.e)((m, d) => {
          let D = !1;
          m.subscribe(
            (0, gt.x)(
              d,
              O => {
                (D = !0), d.next(O);
              },
              () => {
                D || d.next(f), d.complete();
              },
            ),
          );
        });
      }
      function At(f = mt) {
        return (0, st.e)((m, d) => {
          let D = !1;
          m.subscribe(
            (0, gt.x)(
              d,
              O => {
                (D = !0), d.next(O);
              },
              () => (D ? d.complete() : d.error(f())),
            ),
          );
        });
      }
      function mt() {
        return new he();
      }
      var Yt = C(4671);
      function Et(f, m) {
        const d = arguments.length >= 2;
        return D =>
          D.pipe(
            f ? (0, Se.h)((O, U) => f(O, U, D)) : Yt.y,
            (0, te.q)(1),
            d ? re(m) : At(() => new he()),
          );
      }
      var Ge = C(4351),
        $e = C(8505),
        Me = C(262),
        Ue = C(5026);
      function De(f) {
        return f <= 0
          ? () => Be.E
          : (0, st.e)((m, d) => {
              let D = [];
              m.subscribe(
                (0, gt.x)(
                  d,
                  O => {
                    D.push(O), f < D.length && D.shift();
                  },
                  () => {
                    for (const O of D) d.next(O);
                    d.complete();
                  },
                  void 0,
                  () => {
                    D = null;
                  },
                ),
              );
            });
      }
      function Pe(f, m) {
        const d = arguments.length >= 2;
        return D =>
          D.pipe(
            f ? (0, Se.h)((O, U) => f(O, U, D)) : Yt.y,
            De(1),
            d ? re(m) : At(() => new he()),
          );
      }
      var a = C(2529),
        Ye = C(9718),
        rt = C(8746),
        je = C(8189),
        ut = C(1481);
      const nt = 'primary',
        Lt = Symbol('RouteTitle');
      class Mn {
        constructor(m) {
          this.params = m || {};
        }
        has(m) {
          return Object.prototype.hasOwnProperty.call(this.params, m);
        }
        get(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d[0] : d;
          }
          return null;
        }
        getAll(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d : [d];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function un(f) {
        return new Mn(f);
      }
      function an(f, m, d) {
        const D = d.path.split('/');
        if (
          D.length > f.length ||
          ('full' === d.pathMatch && (m.hasChildren() || D.length < f.length))
        )
          return null;
        const O = {};
        for (let U = 0; U < D.length; U++) {
          const W = D[U],
            Ve = f[U];
          if (W.startsWith(':')) O[W.substring(1)] = Ve;
          else if (W !== Ve.path) return null;
        }
        return { consumed: f.slice(0, D.length), posParams: O };
      }
      function Kt(f, m) {
        const d = f ? Object.keys(f) : void 0,
          D = m ? Object.keys(m) : void 0;
        if (!d || !D || d.length != D.length) return !1;
        let O;
        for (let U = 0; U < d.length; U++)
          if (((O = d[U]), !mn(f[O], m[O]))) return !1;
        return !0;
      }
      function mn(f, m) {
        if (Array.isArray(f) && Array.isArray(m)) {
          if (f.length !== m.length) return !1;
          const d = [...f].sort(),
            D = [...m].sort();
          return d.every((O, U) => D[U] === O);
        }
        return f === m;
      }
      function wn(f) {
        return Array.prototype.concat.apply([], f);
      }
      function Dt(f) {
        return f.length > 0 ? f[f.length - 1] : null;
      }
      function xt(f, m) {
        for (const d in f) f.hasOwnProperty(d) && m(f[d], d);
      }
      function ht(f) {
        return (0, s.CqO)(f)
          ? f
          : (0, s.QGY)(f)
          ? (0, x.D)(Promise.resolve(f))
          : (0, L.of)(f);
      }
      const hn = !1,
        Xe = {
          exact: function He(f, m, d) {
            if (
              !Mt(f.segments, m.segments) ||
              !ke(f.segments, m.segments, d) ||
              f.numberOfChildren !== m.numberOfChildren
            )
              return !1;
            for (const D in m.children)
              if (!f.children[D] || !He(f.children[D], m.children[D], d))
                return !1;
            return !0;
          },
          subset: be,
        },
        $ = {
          exact: function Ae(f, m) {
            return Kt(f, m);
          },
          subset: function ve(f, m) {
            return (
              Object.keys(m).length <= Object.keys(f).length &&
              Object.keys(m).every(d => mn(f[d], m[d]))
            );
          },
          ignored: () => !0,
        };
      function J(f, m, d) {
        return (
          Xe[d.paths](f.root, m.root, d.matrixParams) &&
          $[d.queryParams](f.queryParams, m.queryParams) &&
          !('exact' === d.fragment && f.fragment !== m.fragment)
        );
      }
      function be(f, m, d) {
        return j(f, m, m.segments, d);
      }
      function j(f, m, d, D) {
        if (f.segments.length > d.length) {
          const O = f.segments.slice(0, d.length);
          return !(!Mt(O, d) || m.hasChildren() || !ke(O, d, D));
        }
        if (f.segments.length === d.length) {
          if (!Mt(f.segments, d) || !ke(f.segments, d, D)) return !1;
          for (const O in m.children)
            if (!f.children[O] || !be(f.children[O], m.children[O], D))
              return !1;
          return !0;
        }
        {
          const O = d.slice(0, f.segments.length),
            U = d.slice(f.segments.length);
          return (
            !!(Mt(f.segments, O) && ke(f.segments, O, D) && f.children[nt]) &&
            j(f.children[nt], m, U, D)
          );
        }
      }
      function ke(f, m, d) {
        return m.every((D, O) => $[d](f[O].parameters, D.parameters));
      }
      class de {
        constructor(m = new me([], {}), d = {}, D = null) {
          (this.root = m), (this.queryParams = d), (this.fragment = D);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = un(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return bt.serialize(this);
        }
      }
      class me {
        constructor(m, d) {
          (this.segments = m),
            (this.children = d),
            (this.parent = null),
            xt(d, (D, O) => (D.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Je(this);
        }
      }
      class fe {
        constructor(m, d) {
          (this.path = m), (this.parameters = d);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = un(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return We(this);
        }
      }
      function Mt(f, m) {
        return f.length === m.length && f.every((d, D) => d.path === m[D].path);
      }
      let Cn = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({
            token: f,
            factory: function () {
              return new Oe();
            },
            providedIn: 'root',
          })),
          f
        );
      })();
      class Oe {
        parse(m) {
          const d = new we(m);
          return new de(
            d.parseRootSegment(),
            d.parseQueryParams(),
            d.parseFragment(),
          );
        }
        serialize(m) {
          const d = `/${wt(m.root, !0)}`,
            D = (function Gt(f) {
              const m = Object.keys(f)
                .map(d => {
                  const D = f[d];
                  return Array.isArray(D)
                    ? D.map(O => `${R(d)}=${R(O)}`).join('&')
                    : `${R(d)}=${R(D)}`;
                })
                .filter(d => !!d);
              return m.length ? `?${m.join('&')}` : '';
            })(m.queryParams);
          return `${d}${D}${
            'string' == typeof m.fragment
              ? `#${(function b(f) {
                  return encodeURI(f);
                })(m.fragment)}`
              : ''
          }`;
        }
      }
      const bt = new Oe();
      function Je(f) {
        return f.segments.map(m => We(m)).join('/');
      }
      function wt(f, m) {
        if (!f.hasChildren()) return Je(f);
        if (m) {
          const d = f.children[nt] ? wt(f.children[nt], !1) : '',
            D = [];
          return (
            xt(f.children, (O, U) => {
              U !== nt && D.push(`${U}:${wt(O, !1)}`);
            }),
            D.length > 0 ? `${d}(${D.join('//')})` : d
          );
        }
        {
          const d = (function Rt(f, m) {
            let d = [];
            return (
              xt(f.children, (D, O) => {
                O === nt && (d = d.concat(m(D, O)));
              }),
              xt(f.children, (D, O) => {
                O !== nt && (d = d.concat(m(D, O)));
              }),
              d
            );
          })(f, (D, O) =>
            O === nt ? [wt(f.children[nt], !1)] : [`${O}:${wt(D, !1)}`],
          );
          return 1 === Object.keys(f.children).length && null != f.children[nt]
            ? `${Je(f)}/${d[0]}`
            : `${Je(f)}/(${d.join('//')})`;
        }
      }
      function Te(f) {
        return encodeURIComponent(f)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function R(f) {
        return Te(f).replace(/%3B/gi, ';');
      }
      function E(f) {
        return Te(f)
          .replace(/\(/g, '%28')
          .replace(/\)/g, '%29')
          .replace(/%26/gi, '&');
      }
      function V(f) {
        return decodeURIComponent(f);
      }
      function Q(f) {
        return V(f.replace(/\+/g, '%20'));
      }
      function We(f) {
        return `${E(f.path)}${(function St(f) {
          return Object.keys(f)
            .map(m => `;${E(m)}=${E(f[m])}`)
            .join('');
        })(f.parameters)}`;
      }
      const zt = /^[^\/()?;=#]+/;
      function Bt(f) {
        const m = f.match(zt);
        return m ? m[0] : '';
      }
      const on = /^[^=?&#]+/,
        Ce = /^[^&#]+/;
      class we {
        constructor(m) {
          (this.url = m), (this.remaining = m);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining ||
            this.peekStartsWith('?') ||
            this.peekStartsWith('#')
              ? new me([], {})
              : new me([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const m = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(m);
            } while (this.consumeOptional('&'));
          return m;
        }
        parseFragment() {
          return this.consumeOptional('#')
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const m = [];
          for (
            this.peekStartsWith('(') || m.push(this.parseSegment());
            this.peekStartsWith('/') &&
            !this.peekStartsWith('//') &&
            !this.peekStartsWith('/(');

          )
            this.capture('/'), m.push(this.parseSegment());
          let d = {};
          this.peekStartsWith('/(') &&
            (this.capture('/'), (d = this.parseParens(!0)));
          let D = {};
          return (
            this.peekStartsWith('(') && (D = this.parseParens(!1)),
            (m.length > 0 || Object.keys(d).length > 0) &&
              (D[nt] = new me(m, d)),
            D
          );
        }
        parseSegment() {
          const m = Bt(this.remaining);
          if ('' === m && this.peekStartsWith(';')) throw new s.vHH(4009, hn);
          return this.capture(m), new fe(V(m), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const m = {};
          for (; this.consumeOptional(';'); ) this.parseParam(m);
          return m;
        }
        parseParam(m) {
          const d = Bt(this.remaining);
          if (!d) return;
          this.capture(d);
          let D = '';
          if (this.consumeOptional('=')) {
            const O = Bt(this.remaining);
            O && ((D = O), this.capture(D));
          }
          m[V(d)] = V(D);
        }
        parseQueryParam(m) {
          const d = (function Re(f) {
            const m = f.match(on);
            return m ? m[0] : '';
          })(this.remaining);
          if (!d) return;
          this.capture(d);
          let D = '';
          if (this.consumeOptional('=')) {
            const W = (function K(f) {
              const m = f.match(Ce);
              return m ? m[0] : '';
            })(this.remaining);
            W && ((D = W), this.capture(D));
          }
          const O = Q(d),
            U = Q(D);
          if (m.hasOwnProperty(O)) {
            let W = m[O];
            Array.isArray(W) || ((W = [W]), (m[O] = W)), W.push(U);
          } else m[O] = U;
        }
        parseParens(m) {
          const d = {};
          for (
            this.capture('(');
            !this.consumeOptional(')') && this.remaining.length > 0;

          ) {
            const D = Bt(this.remaining),
              O = this.remaining[D.length];
            if ('/' !== O && ')' !== O && ';' !== O) throw new s.vHH(4010, hn);
            let U;
            D.indexOf(':') > -1
              ? ((U = D.slice(0, D.indexOf(':'))),
                this.capture(U),
                this.capture(':'))
              : m && (U = nt);
            const W = this.parseChildren();
            (d[U] = 1 === Object.keys(W).length ? W[nt] : new me([], W)),
              this.consumeOptional('//');
          }
          return d;
        }
        peekStartsWith(m) {
          return this.remaining.startsWith(m);
        }
        consumeOptional(m) {
          return (
            !!this.peekStartsWith(m) &&
            ((this.remaining = this.remaining.substring(m.length)), !0)
          );
        }
        capture(m) {
          if (!this.consumeOptional(m)) throw new s.vHH(4011, hn);
        }
      }
      function ct(f) {
        return f.segments.length > 0 ? new me([], { [nt]: f }) : f;
      }
      function Ft(f) {
        const m = {};
        for (const D of Object.keys(f.children)) {
          const U = Ft(f.children[D]);
          (U.segments.length > 0 || U.hasChildren()) && (m[D] = U);
        }
        return (function Zt(f) {
          if (1 === f.numberOfChildren && f.children[nt]) {
            const m = f.children[nt];
            return new me(f.segments.concat(m.segments), m.children);
          }
          return f;
        })(new me(f.segments, m));
      }
      function _n(f) {
        return f instanceof de;
      }
      const In = !1;
      function ir(f, m, d, D, O) {
        if (0 === d.length) return Si(m.root, m.root, m.root, D, O);
        const U = (function ti(f) {
          if ('string' == typeof f[0] && 1 === f.length && '/' === f[0])
            return new ri(!0, 0, f);
          let m = 0,
            d = !1;
          const D = f.reduce((O, U, W) => {
            if ('object' == typeof U && null != U) {
              if (U.outlets) {
                const Ve = {};
                return (
                  xt(U.outlets, (Ct, qt) => {
                    Ve[qt] = 'string' == typeof Ct ? Ct.split('/') : Ct;
                  }),
                  [...O, { outlets: Ve }]
                );
              }
              if (U.segmentPath) return [...O, U.segmentPath];
            }
            return 'string' != typeof U
              ? [...O, U]
              : 0 === W
              ? (U.split('/').forEach((Ve, Ct) => {
                  (0 == Ct && '.' === Ve) ||
                    (0 == Ct && '' === Ve
                      ? (d = !0)
                      : '..' === Ve
                      ? m++
                      : '' != Ve && O.push(Ve));
                }),
                O)
              : [...O, U];
          }, []);
          return new ri(d, m, D);
        })(d);
        return U.toRoot()
          ? Si(m.root, m.root, new me([], {}), D, O)
          : (function W(Ct) {
              const qt = (function Xr(f, m, d, D) {
                  if (f.isAbsolute) return new ai(m.root, !0, 0);
                  if (-1 === D) return new ai(d, d === m.root, 0);
                  return (function xi(f, m, d) {
                    let D = f,
                      O = m,
                      U = d;
                    for (; U > O; ) {
                      if (((U -= O), (D = D.parent), !D))
                        throw new s.vHH(4005, In && "Invalid number of '../'");
                      O = D.segments.length;
                    }
                    return new ai(D, !1, O - U);
                  })(d, D + (Wn(f.commands[0]) ? 0 : 1), f.numberOfDoubleDots);
                })(U, m, f.snapshot?._urlSegment, Ct),
                tn = qt.processChildren
                  ? $t(qt.segmentGroup, qt.index, U.commands)
                  : mi(qt.segmentGroup, qt.index, U.commands);
              return Si(m.root, qt.segmentGroup, tn, D, O);
            })(f.snapshot?._lastPathIndex);
      }
      function Wn(f) {
        return (
          'object' == typeof f && null != f && !f.outlets && !f.segmentPath
        );
      }
      function Hi(f) {
        return 'object' == typeof f && null != f && f.outlets;
      }
      function Si(f, m, d, D, O) {
        let W,
          U = {};
        D &&
          xt(D, (Ct, qt) => {
            U[qt] = Array.isArray(Ct) ? Ct.map(tn => `${tn}`) : `${Ct}`;
          }),
          (W = f === m ? d : Tn(f, m, d));
        const Ve = ct(Ft(W));
        return new de(Ve, U, O);
      }
      function Tn(f, m, d) {
        const D = {};
        return (
          xt(f.children, (O, U) => {
            D[U] = O === m ? d : Tn(O, m, d);
          }),
          new me(f.segments, D)
        );
      }
      class ri {
        constructor(m, d, D) {
          if (
            ((this.isAbsolute = m),
            (this.numberOfDoubleDots = d),
            (this.commands = D),
            m && D.length > 0 && Wn(D[0]))
          )
            throw new s.vHH(
              4003,
              In && 'Root segment cannot have matrix parameters',
            );
          const O = D.find(Hi);
          if (O && O !== Dt(D))
            throw new s.vHH(
              4004,
              In && '{outlets:{}} has to be the last command',
            );
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            '/' == this.commands[0]
          );
        }
      }
      class ai {
        constructor(m, d, D) {
          (this.segmentGroup = m), (this.processChildren = d), (this.index = D);
        }
      }
      function mi(f, m, d) {
        if (
          (f || (f = new me([], {})),
          0 === f.segments.length && f.hasChildren())
        )
          return $t(f, m, d);
        const D = (function dn(f, m, d) {
            let D = 0,
              O = m;
            const U = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; O < f.segments.length; ) {
              if (D >= d.length) return U;
              const W = f.segments[O],
                Ve = d[D];
              if (Hi(Ve)) break;
              const Ct = `${Ve}`,
                qt = D < d.length - 1 ? d[D + 1] : null;
              if (O > 0 && void 0 === Ct) break;
              if (Ct && qt && 'object' == typeof qt && void 0 === qt.outlets) {
                if (!Zn(Ct, qt, W)) return U;
                D += 2;
              } else {
                if (!Zn(Ct, {}, W)) return U;
                D++;
              }
              O++;
            }
            return { match: !0, pathIndex: O, commandIndex: D };
          })(f, m, d),
          O = d.slice(D.commandIndex);
        if (D.match && D.pathIndex < f.segments.length) {
          const U = new me(f.segments.slice(0, D.pathIndex), {});
          return (
            (U.children[nt] = new me(
              f.segments.slice(D.pathIndex),
              f.children,
            )),
            $t(U, 0, O)
          );
        }
        return D.match && 0 === O.length
          ? new me(f.segments, {})
          : D.match && !f.hasChildren()
          ? Un(f, m, d)
          : D.match
          ? $t(f, 0, O)
          : Un(f, m, d);
      }
      function $t(f, m, d) {
        if (0 === d.length) return new me(f.segments, {});
        {
          const D = (function gr(f) {
              return Hi(f[0]) ? f[0].outlets : { [nt]: f };
            })(d),
            O = {};
          if (
            !D[nt] &&
            f.children[nt] &&
            1 === f.numberOfChildren &&
            0 === f.children[nt].segments.length
          ) {
            const U = $t(f.children[nt], m, d);
            return new me(f.segments, U.children);
          }
          return (
            xt(D, (U, W) => {
              'string' == typeof U && (U = [U]),
                null !== U && (O[W] = mi(f.children[W], m, U));
            }),
            xt(f.children, (U, W) => {
              void 0 === D[W] && (O[W] = U);
            }),
            new me(f.segments, O)
          );
        }
      }
      function Un(f, m, d) {
        const D = f.segments.slice(0, m);
        let O = 0;
        for (; O < d.length; ) {
          const U = d[O];
          if (Hi(U)) {
            const Ct = fi(U.outlets);
            return new me(D, Ct);
          }
          if (0 === O && Wn(d[0])) {
            D.push(new fe(f.segments[m].path, Xn(d[0]))), O++;
            continue;
          }
          const W = Hi(U) ? U.outlets[nt] : `${U}`,
            Ve = O < d.length - 1 ? d[O + 1] : null;
          W && Ve && Wn(Ve)
            ? (D.push(new fe(W, Xn(Ve))), (O += 2))
            : (D.push(new fe(W, {})), O++);
        }
        return new me(D, {});
      }
      function fi(f) {
        const m = {};
        return (
          xt(f, (d, D) => {
            'string' == typeof d && (d = [d]),
              null !== d && (m[D] = Un(new me([], {}), 0, d));
          }),
          m
        );
      }
      function Xn(f) {
        const m = {};
        return xt(f, (d, D) => (m[D] = `${d}`)), m;
      }
      function Zn(f, m, d) {
        return f == d.path && Kt(m, d.parameters);
      }
      const pi = 'imperative';
      class An {
        constructor(m, d) {
          (this.id = m), (this.url = d);
        }
      }
      class gi extends An {
        constructor(m, d, D = 'imperative', O = null) {
          super(m, d),
            (this.type = 0),
            (this.navigationTrigger = D),
            (this.restoredState = O);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class _i extends An {
        constructor(m, d, D) {
          super(m, d), (this.urlAfterRedirects = D), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class fn extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.reason = D), (this.code = O), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class qi extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.reason = D), (this.code = O), (this.type = 16);
        }
      }
      class Ui extends An {
        constructor(m, d, D, O) {
          super(m, d), (this.error = D), (this.target = O), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class _r extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Ii extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ni extends An {
        constructor(m, d, D, O, U) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.shouldActivate = U),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class ur extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Pi extends An {
        constructor(m, d, D, O) {
          super(m, d),
            (this.urlAfterRedirects = D),
            (this.state = O),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ji {
        constructor(m) {
          (this.route = m), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class fr {
        constructor(m) {
          (this.route = m), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class Bn {
        constructor(m) {
          (this.snapshot = m), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Hn {
        constructor(m) {
          (this.snapshot = m), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Ni {
        constructor(m) {
          (this.snapshot = m), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Li {
        constructor(m) {
          (this.snapshot = m), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class kr {
        constructor(m, d, D) {
          (this.routerEvent = m),
            (this.position = d),
            (this.anchor = D),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let zi = (() => {
          class f {
            createUrlTree(d, D, O, U, W, Ve) {
              return ir(d || D.root, O, U, W, Ve);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
            f
          );
        })(),
        Ke = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function (m) {
                return zi.ɵfac(m);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class Ie {
        constructor(m) {
          this._root = m;
        }
        get root() {
          return this._root.value;
        }
        parent(m) {
          const d = this.pathFromRoot(m);
          return d.length > 1 ? d[d.length - 2] : null;
        }
        children(m) {
          const d = Ze(m, this._root);
          return d ? d.children.map(D => D.value) : [];
        }
        firstChild(m) {
          const d = Ze(m, this._root);
          return d && d.children.length > 0 ? d.children[0].value : null;
        }
        siblings(m) {
          const d = kt(m, this._root);
          return d.length < 2
            ? []
            : d[d.length - 2].children.map(O => O.value).filter(O => O !== m);
        }
        pathFromRoot(m) {
          return kt(m, this._root).map(d => d.value);
        }
      }
      function Ze(f, m) {
        if (f === m.value) return m;
        for (const d of m.children) {
          const D = Ze(f, d);
          if (D) return D;
        }
        return null;
      }
      function kt(f, m) {
        if (f === m.value) return [m];
        for (const d of m.children) {
          const D = kt(f, d);
          if (D.length) return D.unshift(m), D;
        }
        return [];
      }
      class It {
        constructor(m, d) {
          (this.value = m), (this.children = d);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function ln(f) {
        const m = {};
        return f && f.children.forEach(d => (m[d.value.outlet] = d)), m;
      }
      class vn extends Ie {
        constructor(m, d) {
          super(m), (this.snapshot = d), fo(this, m);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Nn(f, m) {
        const d = (function Kn(f, m) {
            const W = new vr([], {}, {}, '', {}, nt, m, null, f.root, -1, {});
            return new br('', new It(W, []));
          })(f, m),
          D = new oe.X([new fe('', {})]),
          O = new oe.X({}),
          U = new oe.X({}),
          W = new oe.X({}),
          Ve = new oe.X(''),
          Ct = new Rn(D, O, W, Ve, U, nt, m, d.root);
        return (Ct.snapshot = d.root), new vn(new It(Ct, []), d);
      }
      class Rn {
        constructor(m, d, D, O, U, W, Ve, Ct) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = D),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = W),
            (this.component = Ve),
            (this.title =
              this.data?.pipe((0, xe.U)(qt => qt[Lt])) ?? (0, L.of)(void 0)),
            (this._futureSnapshot = Ct);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, xe.U)(m => un(m)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, xe.U)(m => un(m)),
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function vi(f, m = 'emptyOnly') {
        const d = f.pathFromRoot;
        let D = 0;
        if ('always' !== m)
          for (D = d.length - 1; D >= 1; ) {
            const O = d[D],
              U = d[D - 1];
            if (O.routeConfig && '' === O.routeConfig.path) D--;
            else {
              if (U.component) break;
              D--;
            }
          }
        return (function Hr(f) {
          return f.reduce(
            (m, d) => ({
              params: { ...m.params, ...d.params },
              data: { ...m.data, ...d.data },
              resolve: {
                ...d.data,
                ...m.resolve,
                ...d.routeConfig?.data,
                ...d._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} },
          );
        })(d.slice(D));
      }
      class vr {
        get title() {
          return this.data?.[Lt];
        }
        constructor(m, d, D, O, U, W, Ve, Ct, qt, tn, Gn) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = D),
            (this.fragment = O),
            (this.data = U),
            (this.outlet = W),
            (this.component = Ve),
            (this.routeConfig = Ct),
            (this._urlSegment = qt),
            (this._lastPathIndex = tn),
            (this._resolve = Gn);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = un(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = un(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map(D => D.toString())
            .join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class br extends Ie {
        constructor(m, d) {
          super(d), (this.url = m), fo(this, d);
        }
        toString() {
          return Jr(this._root);
        }
      }
      function fo(f, m) {
        (m.value._routerState = f), m.children.forEach(d => fo(f, d));
      }
      function Jr(f) {
        const m =
          f.children.length > 0 ? ` { ${f.children.map(Jr).join(', ')} } ` : '';
        return `${f.value}${m}`;
      }
      function eo(f) {
        if (f.snapshot) {
          const m = f.snapshot,
            d = f._futureSnapshot;
          (f.snapshot = d),
            Kt(m.queryParams, d.queryParams) ||
              f.queryParams.next(d.queryParams),
            m.fragment !== d.fragment && f.fragment.next(d.fragment),
            Kt(m.params, d.params) || f.params.next(d.params),
            (function Dn(f, m) {
              if (f.length !== m.length) return !1;
              for (let d = 0; d < f.length; ++d) if (!Kt(f[d], m[d])) return !1;
              return !0;
            })(m.url, d.url) || f.url.next(d.url),
            Kt(m.data, d.data) || f.data.next(d.data);
        } else
          (f.snapshot = f._futureSnapshot), f.data.next(f._futureSnapshot.data);
      }
      function pr(f, m) {
        const d =
          Kt(f.params, m.params) &&
          (function et(f, m) {
            return (
              Mt(f, m) && f.every((d, D) => Kt(d.parameters, m[D].parameters))
            );
          })(f.url, m.url);
        return (
          d &&
          !(!f.parent != !m.parent) &&
          (!f.parent || pr(f.parent, m.parent))
        );
      }
      function no(f, m, d) {
        if (d && f.shouldReuseRoute(m.value, d.value.snapshot)) {
          const D = d.value;
          D._futureSnapshot = m.value;
          const O = (function po(f, m, d) {
            return m.children.map(D => {
              for (const O of d.children)
                if (f.shouldReuseRoute(D.value, O.value.snapshot))
                  return no(f, D, O);
              return no(f, D);
            });
          })(f, m, d);
          return new It(D, O);
        }
        {
          if (f.shouldAttach(m.value)) {
            const U = f.retrieve(m.value);
            if (null !== U) {
              const W = U.route;
              return (
                (W.value._futureSnapshot = m.value),
                (W.children = m.children.map(Ve => no(f, Ve))),
                W
              );
            }
          }
          const D = (function Bo(f) {
              return new Rn(
                new oe.X(f.url),
                new oe.X(f.params),
                new oe.X(f.queryParams),
                new oe.X(f.fragment),
                new oe.X(f.data),
                f.outlet,
                f.component,
                f,
              );
            })(m.value),
            O = m.children.map(U => no(f, U));
          return new It(D, O);
        }
      }
      const Tr = 'ngNavigationCancelingError';
      function Or(f, m) {
        const { redirectTo: d, navigationBehaviorOptions: D } = _n(m)
            ? { redirectTo: m, navigationBehaviorOptions: void 0 }
            : m,
          O = io(!1, 0, m);
        return (O.url = d), (O.navigationBehaviorOptions = D), O;
      }
      function io(f, m, d) {
        const D = new Error('NavigationCancelingError: ' + (f || ''));
        return (D[Tr] = !0), (D.cancellationCode = m), d && (D.url = d), D;
      }
      function Eo(f) {
        return mo(f) && _n(f.url);
      }
      function mo(f) {
        return f && f[Tr];
      }
      class yr {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new $i()),
            (this.attachRef = null);
        }
      }
      let $i = (() => {
        class f {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(d, D) {
            const O = this.getOrCreateContext(d);
            (O.outlet = D), this.contexts.set(d, O);
          }
          onChildOutletDestroyed(d) {
            const D = this.getContext(d);
            D && ((D.outlet = null), (D.attachRef = null));
          }
          onOutletDeactivated() {
            const d = this.contexts;
            return (this.contexts = new Map()), d;
          }
          onOutletReAttached(d) {
            this.contexts = d;
          }
          getOrCreateContext(d) {
            let D = this.getContext(d);
            return D || ((D = new yr()), this.contexts.set(d, D)), D;
          }
          getContext(d) {
            return this.contexts.get(d) || null;
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const ki = !1;
      let Rr = (() => {
        class f {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = nt),
              (this.activateEvents = new s.vpe()),
              (this.deactivateEvents = new s.vpe()),
              (this.attachEvents = new s.vpe()),
              (this.detachEvents = new s.vpe()),
              (this.parentContexts = (0, s.f3M)($i)),
              (this.location = (0, s.f3M)(s.s_b)),
              (this.changeDetector = (0, s.f3M)(s.sBO)),
              (this.environmentInjector = (0, s.f3M)(s.lqb));
          }
          ngOnChanges(d) {
            if (d.name) {
              const { firstChange: D, previousValue: O } = d.name;
              if (D) return;
              this.isTrackedInParentContexts(O) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(O)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(d) {
            return this.parentContexts.getContext(d)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const d = this.parentContexts.getContext(this.name);
            d?.route &&
              (d.attachRef
                ? this.attach(d.attachRef, d.route)
                : this.activateWith(d.route, d.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new s.vHH(4012, ki);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new s.vHH(4012, ki);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new s.vHH(4012, ki);
            this.location.detach();
            const d = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(d.instance),
              d
            );
          }
          attach(d, D) {
            (this.activated = d),
              (this._activatedRoute = D),
              this.location.insert(d.hostView),
              this.attachEvents.emit(d.instance);
          }
          deactivate() {
            if (this.activated) {
              const d = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(d);
            }
          }
          activateWith(d, D) {
            if (this.isActivated) throw new s.vHH(4013, ki);
            this._activatedRoute = d;
            const O = this.location,
              W = d.snapshot.component,
              Ve = this.parentContexts.getOrCreateContext(this.name).children,
              Ct = new Dr(d, Ve, O.injector);
            if (
              D &&
              (function ro(f) {
                return !!f.resolveComponentFactory;
              })(D)
            ) {
              const qt = D.resolveComponentFactory(W);
              this.activated = O.createComponent(qt, O.length, Ct);
            } else
              this.activated = O.createComponent(W, {
                index: O.length,
                injector: Ct,
                environmentInjector: D ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵdir = s.lG2({
            type: f,
            selectors: [['router-outlet']],
            inputs: { name: 'name' },
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
            standalone: !0,
            features: [s.TTD],
          })),
          f
        );
      })();
      class Dr {
        constructor(m, d, D) {
          (this.route = m), (this.childContexts = d), (this.parent = D);
        }
        get(m, d) {
          return m === Rn
            ? this.route
            : m === $i
            ? this.childContexts
            : this.parent.get(m, d);
        }
      }
      let oo = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵcmp = s.Xpm({
            type: f,
            selectors: [['ng-component']],
            standalone: !0,
            features: [s.jDz],
            decls: 1,
            vars: 0,
            template: function (d, D) {
              1 & d && s._UZ(0, 'router-outlet');
            },
            dependencies: [Rr],
            encapsulation: 2,
          })),
          f
        );
      })();
      function Fr(f, m) {
        return (
          f.providers &&
            !f._injector &&
            (f._injector = (0, s.MMx)(f.providers, m, `Route: ${f.path}`)),
          f._injector ?? m
        );
      }
      function ci(f) {
        const m = f.children && f.children.map(ci),
          d = m ? { ...f, children: m } : { ...f };
        return (
          !d.component &&
            !d.loadComponent &&
            (m || d.loadChildren) &&
            d.outlet &&
            d.outlet !== nt &&
            (d.component = oo),
          d
        );
      }
      function oi(f) {
        return f.outlet || nt;
      }
      function yi(f, m) {
        const d = f.filter(D => oi(D) === m);
        return d.push(...f.filter(D => oi(D) !== m)), d;
      }
      function zr(f) {
        if (!f) return null;
        if (f.routeConfig?._injector) return f.routeConfig._injector;
        for (let m = f.parent; m; m = m.parent) {
          const d = m.routeConfig;
          if (d?._loadedInjector) return d._loadedInjector;
          if (d?._injector) return d._injector;
        }
        return null;
      }
      class Cr {
        constructor(m, d, D, O) {
          (this.routeReuseStrategy = m),
            (this.futureState = d),
            (this.currState = D),
            (this.forwardEvent = O);
        }
        activate(m) {
          const d = this.futureState._root,
            D = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(d, D, m),
            eo(this.futureState.root),
            this.activateChildRoutes(d, D, m);
        }
        deactivateChildRoutes(m, d, D) {
          const O = ln(d);
          m.children.forEach(U => {
            const W = U.value.outlet;
            this.deactivateRoutes(U, O[W], D), delete O[W];
          }),
            xt(O, (U, W) => {
              this.deactivateRouteAndItsChildren(U, D);
            });
        }
        deactivateRoutes(m, d, D) {
          const O = m.value,
            U = d ? d.value : null;
          if (O === U)
            if (O.component) {
              const W = D.getContext(O.outlet);
              W && this.deactivateChildRoutes(m, d, W.children);
            } else this.deactivateChildRoutes(m, d, D);
          else U && this.deactivateRouteAndItsChildren(d, D);
        }
        deactivateRouteAndItsChildren(m, d) {
          m.value.component &&
          this.routeReuseStrategy.shouldDetach(m.value.snapshot)
            ? this.detachAndStoreRouteSubtree(m, d)
            : this.deactivateRouteAndOutlet(m, d);
        }
        detachAndStoreRouteSubtree(m, d) {
          const D = d.getContext(m.value.outlet),
            O = D && m.value.component ? D.children : d,
            U = ln(m);
          for (const W of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[W], O);
          if (D && D.outlet) {
            const W = D.outlet.detach(),
              Ve = D.children.onOutletDeactivated();
            this.routeReuseStrategy.store(m.value.snapshot, {
              componentRef: W,
              route: m,
              contexts: Ve,
            });
          }
        }
        deactivateRouteAndOutlet(m, d) {
          const D = d.getContext(m.value.outlet),
            O = D && m.value.component ? D.children : d,
            U = ln(m);
          for (const W of Object.keys(U))
            this.deactivateRouteAndItsChildren(U[W], O);
          D &&
            (D.outlet &&
              (D.outlet.deactivate(), D.children.onOutletDeactivated()),
            (D.attachRef = null),
            (D.resolver = null),
            (D.route = null));
        }
        activateChildRoutes(m, d, D) {
          const O = ln(d);
          m.children.forEach(U => {
            this.activateRoutes(U, O[U.value.outlet], D),
              this.forwardEvent(new Li(U.value.snapshot));
          }),
            m.children.length && this.forwardEvent(new Hn(m.value.snapshot));
        }
        activateRoutes(m, d, D) {
          const O = m.value,
            U = d ? d.value : null;
          if ((eo(O), O === U))
            if (O.component) {
              const W = D.getOrCreateContext(O.outlet);
              this.activateChildRoutes(m, d, W.children);
            } else this.activateChildRoutes(m, d, D);
          else if (O.component) {
            const W = D.getOrCreateContext(O.outlet);
            if (this.routeReuseStrategy.shouldAttach(O.snapshot)) {
              const Ve = this.routeReuseStrategy.retrieve(O.snapshot);
              this.routeReuseStrategy.store(O.snapshot, null),
                W.children.onOutletReAttached(Ve.contexts),
                (W.attachRef = Ve.componentRef),
                (W.route = Ve.route.value),
                W.outlet && W.outlet.attach(Ve.componentRef, Ve.route.value),
                eo(Ve.route.value),
                this.activateChildRoutes(m, null, W.children);
            } else {
              const Ve = zr(O.snapshot),
                Ct = Ve?.get(s._Vd) ?? null;
              (W.attachRef = null),
                (W.route = O),
                (W.resolver = Ct),
                (W.injector = Ve),
                W.outlet && W.outlet.activateWith(O, W.injector),
                this.activateChildRoutes(m, null, W.children);
            }
          } else this.activateChildRoutes(m, null, D);
        }
      }
      class Ei {
        constructor(m) {
          (this.path = m), (this.route = this.path[this.path.length - 1]);
        }
      }
      class xr {
        constructor(m, d) {
          (this.component = m), (this.route = d);
        }
      }
      function Pr(f, m, d) {
        const D = f._root;
        return Nr(D, m ? m._root : null, d, [D.value]);
      }
      function Bi(f, m) {
        const d = Symbol(),
          D = m.get(f, d);
        return D === d
          ? 'function' != typeof f || (0, s.Z0I)(f)
            ? m.get(f)
            : f
          : D;
      }
      function Nr(
        f,
        m,
        d,
        D,
        O = { canDeactivateChecks: [], canActivateChecks: [] },
      ) {
        const U = ln(m);
        return (
          f.children.forEach(W => {
            (function ao(
              f,
              m,
              d,
              D,
              O = { canDeactivateChecks: [], canActivateChecks: [] },
            ) {
              const U = f.value,
                W = m ? m.value : null,
                Ve = d ? d.getContext(f.value.outlet) : null;
              if (W && U.routeConfig === W.routeConfig) {
                const Ct = (function bn(f, m, d) {
                  if ('function' == typeof d) return d(f, m);
                  switch (d) {
                    case 'pathParamsChange':
                      return !Mt(f.url, m.url);
                    case 'pathParamsOrQueryParamsChange':
                      return (
                        !Mt(f.url, m.url) || !Kt(f.queryParams, m.queryParams)
                      );
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !pr(f, m) || !Kt(f.queryParams, m.queryParams);
                    default:
                      return !pr(f, m);
                  }
                })(W, U, U.routeConfig.runGuardsAndResolvers);
                Ct
                  ? O.canActivateChecks.push(new Ei(D))
                  : ((U.data = W.data), (U._resolvedData = W._resolvedData)),
                  Nr(f, m, U.component ? (Ve ? Ve.children : null) : d, D, O),
                  Ct &&
                    Ve &&
                    Ve.outlet &&
                    Ve.outlet.isActivated &&
                    O.canDeactivateChecks.push(new xr(Ve.outlet.component, W));
              } else
                W && Er(m, Ve, O),
                  O.canActivateChecks.push(new Ei(D)),
                  Nr(
                    f,
                    null,
                    U.component ? (Ve ? Ve.children : null) : d,
                    D,
                    O,
                  );
            })(W, U[W.value.outlet], d, D.concat([W.value]), O),
              delete U[W.value.outlet];
          }),
          xt(U, (W, Ve) => Er(W, d.getContext(Ve), O)),
          O
        );
      }
      function Er(f, m, d) {
        const D = ln(f),
          O = f.value;
        xt(D, (U, W) => {
          Er(U, O.component ? (m ? m.children.getContext(W) : null) : m, d);
        }),
          d.canDeactivateChecks.push(
            new xr(
              O.component && m && m.outlet && m.outlet.isActivated
                ? m.outlet.component
                : null,
              O,
            ),
          );
      }
      function k(f) {
        return 'function' == typeof f;
      }
      function mr(f) {
        return f instanceof he || 'EmptyError' === f?.name;
      }
      const Yr = Symbol('INITIAL_VALUE');
      function ii() {
        return (0, ne.w)(f =>
          (0, ge.a)(f.map(m => m.pipe((0, te.q)(1), (0, X.O)(Yr)))).pipe(
            (0, xe.U)(m => {
              for (const d of m)
                if (!0 !== d) {
                  if (d === Yr) return Yr;
                  if (!1 === d || d instanceof de) return d;
                }
              return !0;
            }),
            (0, Se.h)(m => m !== Yr),
            (0, te.q)(1),
          ),
        );
      }
      function Xi(f) {
        return (0, ae.z)(
          (0, $e.b)(m => {
            if (_n(m)) throw Or(0, m);
          }),
          (0, xe.U)(m => !0 === m),
        );
      }
      const Wr = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function ar(f, m, d, D, O) {
        const U = lo(f, m, d);
        return U.matched
          ? (function Gr(f, m, d, D) {
              const O = m.canMatch;
              if (!O || 0 === O.length) return (0, L.of)(!0);
              const U = O.map(W => {
                const Ve = Bi(W, f);
                return ht(
                  (function Jn(f) {
                    return f && k(f.canMatch);
                  })(Ve)
                    ? Ve.canMatch(m, d)
                    : f.runInContext(() => Ve(m, d)),
                );
              });
              return (0, L.of)(U).pipe(ii(), Xi());
            })((D = Fr(m, D)), m, d).pipe(
              (0, xe.U)(W => (!0 === W ? U : { ...Wr })),
            )
          : (0, L.of)(U);
      }
      function lo(f, m, d) {
        if ('' === m.path)
          return 'full' === m.pathMatch && (f.hasChildren() || d.length > 0)
            ? { ...Wr }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: d,
                parameters: {},
                positionalParamSegments: {},
              };
        const O = (m.matcher || an)(d, f, m);
        if (!O) return { ...Wr };
        const U = {};
        xt(O.posParams, (Ve, Ct) => {
          U[Ct] = Ve.path;
        });
        const W =
          O.consumed.length > 0
            ? { ...U, ...O.consumed[O.consumed.length - 1].parameters }
            : U;
        return {
          matched: !0,
          consumedSegments: O.consumed,
          remainingSegments: d.slice(O.consumed.length),
          parameters: W,
          positionalParamSegments: O.posParams ?? {},
        };
      }
      function Di(f, m, d, D) {
        if (
          d.length > 0 &&
          (function _o(f, m, d) {
            return d.some(D => co(f, m, D) && oi(D) !== nt);
          })(f, d, D)
        ) {
          const U = new me(
            m,
            (function Xo(f, m, d, D) {
              const O = {};
              (O[nt] = D),
                (D._sourceSegment = f),
                (D._segmentIndexShift = m.length);
              for (const U of d)
                if ('' === U.path && oi(U) !== nt) {
                  const W = new me([], {});
                  (W._sourceSegment = f),
                    (W._segmentIndexShift = m.length),
                    (O[oi(U)] = W);
                }
              return O;
            })(f, m, D, new me(d, f.children)),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: [] }
          );
        }
        if (
          0 === d.length &&
          (function Mr(f, m, d) {
            return d.some(D => co(f, m, D));
          })(f, d, D)
        ) {
          const U = new me(
            f.segments,
            (function Vo(f, m, d, D, O) {
              const U = {};
              for (const W of D)
                if (co(f, d, W) && !O[oi(W)]) {
                  const Ve = new me([], {});
                  (Ve._sourceSegment = f),
                    (Ve._segmentIndexShift = m.length),
                    (U[oi(W)] = Ve);
                }
              return { ...O, ...U };
            })(f, m, d, D, f.children),
          );
          return (
            (U._sourceSegment = f),
            (U._segmentIndexShift = m.length),
            { segmentGroup: U, slicedSegments: d }
          );
        }
        const O = new me(f.segments, f.children);
        return (
          (O._sourceSegment = f),
          (O._segmentIndexShift = m.length),
          { segmentGroup: O, slicedSegments: d }
        );
      }
      function co(f, m, d) {
        return (
          (!(f.hasChildren() || m.length > 0) || 'full' !== d.pathMatch) &&
          '' === d.path
        );
      }
      function B(f, m, d, D) {
        return (
          !!(oi(f) === D || (D !== nt && co(m, d, f))) &&
          ('**' === f.path || lo(m, f, d).matched)
        );
      }
      function h(f, m, d) {
        return 0 === m.length && !f.children[d];
      }
      const p = !1;
      class S {
        constructor(m) {
          this.segmentGroup = m || null;
        }
      }
      class H {
        constructor(m) {
          this.urlTree = m;
        }
      }
      function Z(f) {
        return (0, pe._)(new S(f));
      }
      function ye(f) {
        return (0, pe._)(new H(f));
      }
      class Wt {
        constructor(m, d, D, O, U) {
          (this.injector = m),
            (this.configLoader = d),
            (this.urlSerializer = D),
            (this.urlTree = O),
            (this.config = U),
            (this.allowRedirects = !0);
        }
        apply() {
          const m = Di(this.urlTree.root, [], [], this.config).segmentGroup,
            d = new me(m.segments, m.children);
          return this.expandSegmentGroup(this.injector, this.config, d, nt)
            .pipe(
              (0, xe.U)(U =>
                this.createUrlTree(
                  Ft(U),
                  this.urlTree.queryParams,
                  this.urlTree.fragment,
                ),
              ),
            )
            .pipe(
              (0, Me.K)(U => {
                if (U instanceof H)
                  return (this.allowRedirects = !1), this.match(U.urlTree);
                throw U instanceof S ? this.noMatchError(U) : U;
              }),
            );
        }
        match(m) {
          return this.expandSegmentGroup(this.injector, this.config, m.root, nt)
            .pipe(
              (0, xe.U)(O =>
                this.createUrlTree(Ft(O), m.queryParams, m.fragment),
              ),
            )
            .pipe(
              (0, Me.K)(O => {
                throw O instanceof S ? this.noMatchError(O) : O;
              }),
            );
        }
        noMatchError(m) {
          return new s.vHH(4002, p);
        }
        createUrlTree(m, d, D) {
          const O = ct(m);
          return new de(O, d, D);
        }
        expandSegmentGroup(m, d, D, O) {
          return 0 === D.segments.length && D.hasChildren()
            ? this.expandChildren(m, d, D).pipe((0, xe.U)(U => new me([], U)))
            : this.expandSegment(m, D, d, D.segments, O, !0);
        }
        expandChildren(m, d, D) {
          const O = [];
          for (const U of Object.keys(D.children))
            'primary' === U ? O.unshift(U) : O.push(U);
          return (0, x.D)(O).pipe(
            (0, Ge.b)(U => {
              const W = D.children[U],
                Ve = yi(d, U);
              return this.expandSegmentGroup(m, Ve, W, U).pipe(
                (0, xe.U)(Ct => ({ segment: Ct, outlet: U })),
              );
            }),
            (0, Ue.R)((U, W) => ((U[W.outlet] = W.segment), U), {}),
            Pe(),
          );
        }
        expandSegment(m, d, D, O, U, W) {
          return (0, x.D)(D).pipe(
            (0, Ge.b)(Ve =>
              this.expandSegmentAgainstRoute(m, d, D, Ve, O, U, W).pipe(
                (0, Me.K)(qt => {
                  if (qt instanceof S) return (0, L.of)(null);
                  throw qt;
                }),
              ),
            ),
            Et(Ve => !!Ve),
            (0, Me.K)((Ve, Ct) => {
              if (mr(Ve)) return h(d, O, U) ? (0, L.of)(new me([], {})) : Z(d);
              throw Ve;
            }),
          );
        }
        expandSegmentAgainstRoute(m, d, D, O, U, W, Ve) {
          return B(O, d, U, W)
            ? void 0 === O.redirectTo
              ? this.matchSegmentAgainstRoute(m, d, O, U, W)
              : Ve && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(m, d, D, O, U, W)
              : Z(d)
            : Z(d);
        }
        expandSegmentAgainstRouteUsingRedirect(m, d, D, O, U, W) {
          return '**' === O.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(m, D, O, W)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                m,
                d,
                D,
                O,
                U,
                W,
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(m, d, D, O) {
          const U = this.applyRedirectCommands([], D.redirectTo, {});
          return D.redirectTo.startsWith('/')
            ? ye(U)
            : this.lineralizeSegments(D, U).pipe(
                (0, tt.z)(W => {
                  const Ve = new me(W, {});
                  return this.expandSegment(m, Ve, d, W, O, !1);
                }),
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(m, d, D, O, U, W) {
          const {
            matched: Ve,
            consumedSegments: Ct,
            remainingSegments: qt,
            positionalParamSegments: tn,
          } = lo(d, O, U);
          if (!Ve) return Z(d);
          const Gn = this.applyRedirectCommands(Ct, O.redirectTo, tn);
          return O.redirectTo.startsWith('/')
            ? ye(Gn)
            : this.lineralizeSegments(O, Gn).pipe(
                (0, tt.z)(Gi =>
                  this.expandSegment(m, d, D, Gi.concat(qt), W, !1),
                ),
              );
        }
        matchSegmentAgainstRoute(m, d, D, O, U) {
          return '**' === D.path
            ? ((m = Fr(D, m)),
              D.loadChildren
                ? (D._loadedRoutes
                    ? (0, L.of)({
                        routes: D._loadedRoutes,
                        injector: D._loadedInjector,
                      })
                    : this.configLoader.loadChildren(m, D)
                  ).pipe(
                    (0, xe.U)(
                      Ve => (
                        (D._loadedRoutes = Ve.routes),
                        (D._loadedInjector = Ve.injector),
                        new me(O, {})
                      ),
                    ),
                  )
                : (0, L.of)(new me(O, {})))
            : ar(d, D, O, m).pipe(
                (0, ne.w)(
                  ({
                    matched: W,
                    consumedSegments: Ve,
                    remainingSegments: Ct,
                  }) =>
                    W
                      ? this.getChildConfig((m = D._injector ?? m), D, O).pipe(
                          (0, tt.z)(tn => {
                            const Gn = tn.injector ?? m,
                              Gi = tn.routes,
                              { segmentGroup: Br, slicedSegments: yo } = Di(
                                d,
                                Ve,
                                Ct,
                                Gi,
                              ),
                              Do = new me(Br.segments, Br.children);
                            if (0 === yo.length && Do.hasChildren())
                              return this.expandChildren(Gn, Gi, Do).pipe(
                                (0, xe.U)(Ai => new me(Ve, Ai)),
                              );
                            if (0 === Gi.length && 0 === yo.length)
                              return (0, L.of)(new me(Ve, {}));
                            const nr = oi(D) === U;
                            return this.expandSegment(
                              Gn,
                              Do,
                              Gi,
                              yo,
                              nr ? nt : U,
                              !0,
                            ).pipe(
                              (0, xe.U)(
                                $o =>
                                  new me(Ve.concat($o.segments), $o.children),
                              ),
                            );
                          }),
                        )
                      : Z(d),
                ),
              );
        }
        getChildConfig(m, d, D) {
          return d.children
            ? (0, L.of)({ routes: d.children, injector: m })
            : d.loadChildren
            ? void 0 !== d._loadedRoutes
              ? (0, L.of)({
                  routes: d._loadedRoutes,
                  injector: d._loadedInjector,
                })
              : (function Mi(f, m, d, D) {
                  const O = m.canLoad;
                  if (void 0 === O || 0 === O.length) return (0, L.of)(!0);
                  const U = O.map(W => {
                    const Ve = Bi(W, f);
                    return ht(
                      (function w(f) {
                        return f && k(f.canLoad);
                      })(Ve)
                        ? Ve.canLoad(m, d)
                        : f.runInContext(() => Ve(m, d)),
                    );
                  });
                  return (0, L.of)(U).pipe(ii(), Xi());
                })(m, d, D).pipe(
                  (0, tt.z)(O =>
                    O
                      ? this.configLoader.loadChildren(m, d).pipe(
                          (0, $e.b)(U => {
                            (d._loadedRoutes = U.routes),
                              (d._loadedInjector = U.injector);
                          }),
                        )
                      : (function qe(f) {
                          return (0, pe._)(io(p, 3));
                        })(),
                  ),
                )
            : (0, L.of)({ routes: [], injector: m });
        }
        lineralizeSegments(m, d) {
          let D = [],
            O = d.root;
          for (;;) {
            if (((D = D.concat(O.segments)), 0 === O.numberOfChildren))
              return (0, L.of)(D);
            if (O.numberOfChildren > 1 || !O.children[nt])
              return m.redirectTo, (0, pe._)(new s.vHH(4e3, p));
            O = O.children[nt];
          }
        }
        applyRedirectCommands(m, d, D) {
          return this.applyRedirectCreateUrlTree(
            d,
            this.urlSerializer.parse(d),
            m,
            D,
          );
        }
        applyRedirectCreateUrlTree(m, d, D, O) {
          const U = this.createSegmentGroup(m, d.root, D, O);
          return new de(
            U,
            this.createQueryParams(d.queryParams, this.urlTree.queryParams),
            d.fragment,
          );
        }
        createQueryParams(m, d) {
          const D = {};
          return (
            xt(m, (O, U) => {
              if ('string' == typeof O && O.startsWith(':')) {
                const Ve = O.substring(1);
                D[U] = d[Ve];
              } else D[U] = O;
            }),
            D
          );
        }
        createSegmentGroup(m, d, D, O) {
          const U = this.createSegments(m, d.segments, D, O);
          let W = {};
          return (
            xt(d.children, (Ve, Ct) => {
              W[Ct] = this.createSegmentGroup(m, Ve, D, O);
            }),
            new me(U, W)
          );
        }
        createSegments(m, d, D, O) {
          return d.map(U =>
            U.path.startsWith(':')
              ? this.findPosParam(m, U, O)
              : this.findOrReturn(U, D),
          );
        }
        findPosParam(m, d, D) {
          const O = D[d.path.substring(1)];
          if (!O) throw new s.vHH(4001, p);
          return O;
        }
        findOrReturn(m, d) {
          let D = 0;
          for (const O of d) {
            if (O.path === m.path) return d.splice(D), O;
            D++;
          }
          return m;
        }
      }
      class nn {}
      class zn {
        constructor(m, d, D, O, U, W, Ve) {
          (this.injector = m),
            (this.rootComponentType = d),
            (this.config = D),
            (this.urlTree = O),
            (this.url = U),
            (this.paramsInheritanceStrategy = W),
            (this.urlSerializer = Ve);
        }
        recognize() {
          const m = Di(
            this.urlTree.root,
            [],
            [],
            this.config.filter(d => void 0 === d.redirectTo),
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            m,
            nt,
          ).pipe(
            (0, xe.U)(d => {
              if (null === d) return null;
              const D = new vr(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  nt,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {},
                ),
                O = new It(D, d),
                U = new br(this.url, O);
              return this.inheritParamsAndData(U._root), U;
            }),
          );
        }
        inheritParamsAndData(m) {
          const d = m.value,
            D = vi(d, this.paramsInheritanceStrategy);
          (d.params = Object.freeze(D.params)),
            (d.data = Object.freeze(D.data)),
            m.children.forEach(O => this.inheritParamsAndData(O));
        }
        processSegmentGroup(m, d, D, O) {
          return 0 === D.segments.length && D.hasChildren()
            ? this.processChildren(m, d, D)
            : this.processSegment(m, d, D, D.segments, O);
        }
        processChildren(m, d, D) {
          return (0, x.D)(Object.keys(D.children)).pipe(
            (0, Ge.b)(O => {
              const U = D.children[O],
                W = yi(d, O);
              return this.processSegmentGroup(m, W, U, O);
            }),
            (0, Ue.R)((O, U) => (O && U ? (O.push(...U), O) : null)),
            (0, a.o)(O => null !== O),
            re(null),
            Pe(),
            (0, xe.U)(O => {
              if (null === O) return null;
              const U = di(O);
              return (
                (function Qn(f) {
                  f.sort((m, d) =>
                    m.value.outlet === nt
                      ? -1
                      : d.value.outlet === nt
                      ? 1
                      : m.value.outlet.localeCompare(d.value.outlet),
                  );
                })(U),
                U
              );
            }),
          );
        }
        processSegment(m, d, D, O, U) {
          return (0, x.D)(d).pipe(
            (0, Ge.b)(W =>
              this.processSegmentAgainstRoute(W._injector ?? m, W, D, O, U),
            ),
            Et(W => !!W),
            (0, Me.K)(W => {
              if (mr(W)) return h(D, O, U) ? (0, L.of)([]) : (0, L.of)(null);
              throw W;
            }),
          );
        }
        processSegmentAgainstRoute(m, d, D, O, U) {
          if (d.redirectTo || !B(d, D, O, U)) return (0, L.of)(null);
          let W;
          if ('**' === d.path) {
            const Ve = O.length > 0 ? Dt(O).parameters : {},
              Ct = y(D) + O.length,
              qt = new vr(
                O,
                Ve,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                A(d),
                oi(d),
                d.component ?? d._loadedComponent ?? null,
                d,
                Ji(D),
                Ct,
                z(d),
              );
            W = (0, L.of)({
              snapshot: qt,
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            W = ar(D, d, O, m).pipe(
              (0, xe.U)(
                ({
                  matched: Ve,
                  consumedSegments: Ct,
                  remainingSegments: qt,
                  parameters: tn,
                }) => {
                  if (!Ve) return null;
                  const Gn = y(D) + Ct.length;
                  return {
                    snapshot: new vr(
                      Ct,
                      tn,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      A(d),
                      oi(d),
                      d.component ?? d._loadedComponent ?? null,
                      d,
                      Ji(D),
                      Gn,
                      z(d),
                    ),
                    consumedSegments: Ct,
                    remainingSegments: qt,
                  };
                },
              ),
            );
          return W.pipe(
            (0, ne.w)(Ve => {
              if (null === Ve) return (0, L.of)(null);
              const {
                snapshot: Ct,
                consumedSegments: qt,
                remainingSegments: tn,
              } = Ve;
              m = d._injector ?? m;
              const Gn = d._loadedInjector ?? m,
                Gi = (function wi(f) {
                  return f.children
                    ? f.children
                    : f.loadChildren
                    ? f._loadedRoutes
                    : [];
                })(d),
                { segmentGroup: Br, slicedSegments: yo } = Di(
                  D,
                  qt,
                  tn,
                  Gi.filter(nr => void 0 === nr.redirectTo),
                );
              if (0 === yo.length && Br.hasChildren())
                return this.processChildren(Gn, Gi, Br).pipe(
                  (0, xe.U)(nr => (null === nr ? null : [new It(Ct, nr)])),
                );
              if (0 === Gi.length && 0 === yo.length)
                return (0, L.of)([new It(Ct, [])]);
              const Do = oi(d) === U;
              return this.processSegment(Gn, Gi, Br, yo, Do ? nt : U).pipe(
                (0, xe.U)(nr => (null === nr ? null : [new It(Ct, nr)])),
              );
            }),
          );
        }
      }
      function Ti(f) {
        const m = f.value.routeConfig;
        return m && '' === m.path && void 0 === m.redirectTo;
      }
      function di(f) {
        const m = [],
          d = new Set();
        for (const D of f) {
          if (!Ti(D)) {
            m.push(D);
            continue;
          }
          const O = m.find(U => D.value.routeConfig === U.value.routeConfig);
          void 0 !== O ? (O.children.push(...D.children), d.add(O)) : m.push(D);
        }
        for (const D of d) {
          const O = di(D.children);
          m.push(new It(D.value, O));
        }
        return m.filter(D => !d.has(D));
      }
      function Ji(f) {
        let m = f;
        for (; m._sourceSegment; ) m = m._sourceSegment;
        return m;
      }
      function y(f) {
        let m = f,
          d = m._segmentIndexShift ?? 0;
        for (; m._sourceSegment; )
          (m = m._sourceSegment), (d += m._segmentIndexShift ?? 0);
        return d - 1;
      }
      function A(f) {
        return f.data || {};
      }
      function z(f) {
        return f.resolve || {};
      }
      function jt(f) {
        return 'string' == typeof f.title || null === f.title;
      }
      function Vt(f) {
        return (0, ne.w)(m => {
          const d = f(m);
          return d ? (0, x.D)(d).pipe((0, xe.U)(() => m)) : (0, L.of)(m);
        });
      }
      const gn = new s.OlP('ROUTES');
      let Yn = (() => {
        class f {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, s.f3M)(s.Sil));
          }
          loadComponent(d) {
            if (this.componentLoaders.get(d))
              return this.componentLoaders.get(d);
            if (d._loadedComponent) return (0, L.of)(d._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(d);
            const D = ht(d.loadComponent()).pipe(
                (0, xe.U)(si),
                (0, $e.b)(U => {
                  this.onLoadEndListener && this.onLoadEndListener(d),
                    (d._loadedComponent = U);
                }),
                (0, rt.x)(() => {
                  this.componentLoaders.delete(d);
                }),
              ),
              O = new pt(D, () => new at.x()).pipe(Le());
            return this.componentLoaders.set(d, O), O;
          }
          loadChildren(d, D) {
            if (this.childrenLoaders.get(D)) return this.childrenLoaders.get(D);
            if (D._loadedRoutes)
              return (0, L.of)({
                routes: D._loadedRoutes,
                injector: D._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(D);
            const U = this.loadModuleFactoryOrRoutes(D.loadChildren).pipe(
                (0, xe.U)(Ve => {
                  this.onLoadEndListener && this.onLoadEndListener(D);
                  let Ct,
                    qt,
                    tn = !1;
                  Array.isArray(Ve)
                    ? (qt = Ve)
                    : ((Ct = Ve.create(d).injector),
                      (qt = wn(Ct.get(gn, [], s.XFs.Self | s.XFs.Optional))));
                  return { routes: qt.map(ci), injector: Ct };
                }),
                (0, rt.x)(() => {
                  this.childrenLoaders.delete(D);
                }),
              ),
              W = new pt(U, () => new at.x()).pipe(Le());
            return this.childrenLoaders.set(D, W), W;
          }
          loadModuleFactoryOrRoutes(d) {
            return ht(d()).pipe(
              (0, xe.U)(si),
              (0, tt.z)(D =>
                D instanceof s.YKP || Array.isArray(D)
                  ? (0, L.of)(D)
                  : (0, x.D)(this.compiler.compileModuleAsync(D)),
              ),
            );
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function si(f) {
        return (function ui(f) {
          return f && 'object' == typeof f && 'default' in f;
        })(f)
          ? f.default
          : f;
      }
      let er = (() => {
        class f {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new at.x()),
              (this.configLoader = (0, s.f3M)(Yn)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.urlSerializer = (0, s.f3M)(Cn)),
              (this.rootContexts = (0, s.f3M)($i)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, L.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = O =>
                this.events.next(new fr(O))),
              (this.configLoader.onLoadStartListener = O =>
                this.events.next(new ji(O)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(d) {
            const D = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...d, id: D });
          }
          setupNavigations(d) {
            return (
              (this.transitions = new oe.X({
                id: 0,
                targetPageId: 0,
                currentUrlTree: d.currentUrlTree,
                currentRawUrl: d.currentUrlTree,
                extractedUrl: d.urlHandlingStrategy.extract(d.currentUrlTree),
                urlAfterRedirects: d.urlHandlingStrategy.extract(
                  d.currentUrlTree,
                ),
                rawUrl: d.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: pi,
                restoredState: null,
                currentSnapshot: d.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: d.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, Se.h)(D => 0 !== D.id),
                (0, xe.U)(D => ({
                  ...D,
                  extractedUrl: d.urlHandlingStrategy.extract(D.rawUrl),
                })),
                (0, ne.w)(D => {
                  let O = !1,
                    U = !1;
                  return (0, L.of)(D).pipe(
                    (0, $e.b)(W => {
                      this.currentNavigation = {
                        id: W.id,
                        initialUrl: W.rawUrl,
                        extractedUrl: W.extractedUrl,
                        trigger: W.source,
                        extras: W.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, ne.w)(W => {
                      const Ve = d.browserUrlTree.toString(),
                        Ct =
                          !d.navigated ||
                          W.extractedUrl.toString() !== Ve ||
                          Ve !== d.currentUrlTree.toString();
                      if (
                        !Ct &&
                        'reload' !==
                          (W.extras.onSameUrlNavigation ??
                            d.onSameUrlNavigation)
                      ) {
                        const tn = '';
                        return (
                          this.events.next(
                            new qi(W.id, d.serializeUrl(D.rawUrl), tn, 0),
                          ),
                          (d.rawUrlTree = W.rawUrl),
                          W.resolve(null),
                          Be.E
                        );
                      }
                      if (d.urlHandlingStrategy.shouldProcessUrl(W.rawUrl))
                        return (
                          Lr(W.source) && (d.browserUrlTree = W.extractedUrl),
                          (0, L.of)(W).pipe(
                            (0, ne.w)(tn => {
                              const Gn = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new gi(
                                    tn.id,
                                    this.urlSerializer.serialize(
                                      tn.extractedUrl,
                                    ),
                                    tn.source,
                                    tn.restoredState,
                                  ),
                                ),
                                Gn !== this.transitions?.getValue()
                                  ? Be.E
                                  : Promise.resolve(tn)
                              );
                            }),
                            (function Ht(f, m, d, D) {
                              return (0, ne.w)(O =>
                                (function ft(f, m, d, D, O) {
                                  return new Wt(f, m, d, D, O).apply();
                                })(f, m, d, O.extractedUrl, D).pipe(
                                  (0, xe.U)(U => ({
                                    ...O,
                                    urlAfterRedirects: U,
                                  })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              d.config,
                            ),
                            (0, $e.b)(tn => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: tn.urlAfterRedirects,
                              }),
                                (D.urlAfterRedirects = tn.urlAfterRedirects);
                            }),
                            (function ce(f, m, d, D, O) {
                              return (0, tt.z)(U =>
                                (function xn(
                                  f,
                                  m,
                                  d,
                                  D,
                                  O,
                                  U,
                                  W = 'emptyOnly',
                                ) {
                                  return new zn(f, m, d, D, O, W, U)
                                    .recognize()
                                    .pipe(
                                      (0, ne.w)(Ve =>
                                        null === Ve
                                          ? (function cn(f) {
                                              return new se.y(m => m.error(f));
                                            })(new nn())
                                          : (0, L.of)(Ve),
                                      ),
                                    );
                                })(
                                  f,
                                  m,
                                  d,
                                  U.urlAfterRedirects,
                                  D.serialize(U.urlAfterRedirects),
                                  D,
                                  O,
                                ).pipe(
                                  (0, xe.U)(W => ({ ...U, targetSnapshot: W })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              d.config,
                              this.urlSerializer,
                              d.paramsInheritanceStrategy,
                            ),
                            (0, $e.b)(tn => {
                              if (
                                ((D.targetSnapshot = tn.targetSnapshot),
                                'eager' === d.urlUpdateStrategy)
                              ) {
                                if (!tn.extras.skipLocationChange) {
                                  const Gi = d.urlHandlingStrategy.merge(
                                    tn.urlAfterRedirects,
                                    tn.rawUrl,
                                  );
                                  d.setBrowserUrl(Gi, tn);
                                }
                                d.browserUrlTree = tn.urlAfterRedirects;
                              }
                              const Gn = new _r(
                                tn.id,
                                this.urlSerializer.serialize(tn.extractedUrl),
                                this.urlSerializer.serialize(
                                  tn.urlAfterRedirects,
                                ),
                                tn.targetSnapshot,
                              );
                              this.events.next(Gn);
                            }),
                          )
                        );
                      if (
                        Ct &&
                        d.urlHandlingStrategy.shouldProcessUrl(d.rawUrlTree)
                      ) {
                        const {
                            id: tn,
                            extractedUrl: Gn,
                            source: Gi,
                            restoredState: Br,
                            extras: yo,
                          } = W,
                          Do = new gi(
                            tn,
                            this.urlSerializer.serialize(Gn),
                            Gi,
                            Br,
                          );
                        this.events.next(Do);
                        const nr = Nn(Gn, this.rootComponentType).snapshot;
                        return (
                          (D = {
                            ...W,
                            targetSnapshot: nr,
                            urlAfterRedirects: Gn,
                            extras: {
                              ...yo,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          }),
                          (0, L.of)(D)
                        );
                      }
                      {
                        const tn = '';
                        return (
                          this.events.next(
                            new qi(W.id, d.serializeUrl(D.extractedUrl), tn, 1),
                          ),
                          (d.rawUrlTree = W.rawUrl),
                          W.resolve(null),
                          Be.E
                        );
                      }
                    }),
                    (0, $e.b)(W => {
                      const Ve = new Ii(
                        W.id,
                        this.urlSerializer.serialize(W.extractedUrl),
                        this.urlSerializer.serialize(W.urlAfterRedirects),
                        W.targetSnapshot,
                      );
                      this.events.next(Ve);
                    }),
                    (0, xe.U)(
                      W =>
                        (D = {
                          ...W,
                          guards: Pr(
                            W.targetSnapshot,
                            W.currentSnapshot,
                            this.rootContexts,
                          ),
                        }),
                    ),
                    (function Vi(f, m) {
                      return (0, tt.z)(d => {
                        const {
                          targetSnapshot: D,
                          currentSnapshot: O,
                          guards: {
                            canActivateChecks: U,
                            canDeactivateChecks: W,
                          },
                        } = d;
                        return 0 === W.length && 0 === U.length
                          ? (0, L.of)({ ...d, guardsResult: !0 })
                          : (function or(f, m, d, D) {
                              return (0, x.D)(f).pipe(
                                (0, tt.z)(O =>
                                  (function ds(f, m, d, D, O) {
                                    const U =
                                      m && m.routeConfig
                                        ? m.routeConfig.canDeactivate
                                        : null;
                                    if (!U || 0 === U.length)
                                      return (0, L.of)(!0);
                                    const W = U.map(Ve => {
                                      const Ct = zr(m) ?? O,
                                        qt = Bi(Ve, Ct);
                                      return ht(
                                        (function Qt(f) {
                                          return f && k(f.canDeactivate);
                                        })(qt)
                                          ? qt.canDeactivate(f, m, d, D)
                                          : Ct.runInContext(() =>
                                              qt(f, m, d, D),
                                            ),
                                      ).pipe(Et());
                                    });
                                    return (0, L.of)(W).pipe(ii());
                                  })(O.component, O.route, d, m, D),
                                ),
                                Et(O => !0 !== O, !0),
                              );
                            })(W, D, O, f).pipe(
                              (0, tt.z)(Ve =>
                                Ve &&
                                (function I(f) {
                                  return 'boolean' == typeof f;
                                })(Ve)
                                  ? (function sr(f, m, d, D) {
                                      return (0, x.D)(m).pipe(
                                        (0, Ge.b)(O =>
                                          (0, ue.z)(
                                            (function So(f, m) {
                                              return (
                                                null !== f && m && m(new Bn(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route.parent, D),
                                            (function go(f, m) {
                                              return (
                                                null !== f && m && m(new Ni(f)),
                                                (0, L.of)(!0)
                                              );
                                            })(O.route, D),
                                            (function cs(f, m, d) {
                                              const D = m[m.length - 1],
                                                U = m
                                                  .slice(0, m.length - 1)
                                                  .reverse()
                                                  .map(W =>
                                                    (function Ao(f) {
                                                      const m = f.routeConfig
                                                        ? f.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return m && 0 !== m.length
                                                        ? { node: f, guards: m }
                                                        : null;
                                                    })(W),
                                                  )
                                                  .filter(W => null !== W)
                                                  .map(W =>
                                                    (0, le.P)(() => {
                                                      const Ve = W.guards.map(
                                                        Ct => {
                                                          const qt =
                                                              zr(W.node) ?? d,
                                                            tn = Bi(Ct, qt);
                                                          return ht(
                                                            (function it(f) {
                                                              return (
                                                                f &&
                                                                k(
                                                                  f.canActivateChild,
                                                                )
                                                              );
                                                            })(tn)
                                                              ? tn.canActivateChild(
                                                                  D,
                                                                  f,
                                                                )
                                                              : qt.runInContext(
                                                                  () =>
                                                                    tn(D, f),
                                                                ),
                                                          ).pipe(Et());
                                                        },
                                                      );
                                                      return (0, L.of)(Ve).pipe(
                                                        ii(),
                                                      );
                                                    }),
                                                  );
                                              return (0, L.of)(U).pipe(ii());
                                            })(f, O.path, d),
                                            (function qo(f, m, d) {
                                              const D = m.routeConfig
                                                ? m.routeConfig.canActivate
                                                : null;
                                              if (!D || 0 === D.length)
                                                return (0, L.of)(!0);
                                              const O = D.map(U =>
                                                (0, le.P)(() => {
                                                  const W = zr(m) ?? d,
                                                    Ve = Bi(U, W);
                                                  return ht(
                                                    (function G(f) {
                                                      return (
                                                        f && k(f.canActivate)
                                                      );
                                                    })(Ve)
                                                      ? Ve.canActivate(m, f)
                                                      : W.runInContext(() =>
                                                          Ve(m, f),
                                                        ),
                                                  ).pipe(Et());
                                                }),
                                              );
                                              return (0, L.of)(O).pipe(ii());
                                            })(f, O.route, d),
                                          ),
                                        ),
                                        Et(O => !0 !== O, !0),
                                      );
                                    })(D, U, f, m)
                                  : (0, L.of)(Ve),
                              ),
                              (0, xe.U)(Ve => ({ ...d, guardsResult: Ve })),
                            );
                      });
                    })(this.environmentInjector, W => this.events.next(W)),
                    (0, $e.b)(W => {
                      if (
                        ((D.guardsResult = W.guardsResult), _n(W.guardsResult))
                      )
                        throw Or(0, W.guardsResult);
                      const Ve = new ni(
                        W.id,
                        this.urlSerializer.serialize(W.extractedUrl),
                        this.urlSerializer.serialize(W.urlAfterRedirects),
                        W.targetSnapshot,
                        !!W.guardsResult,
                      );
                      this.events.next(Ve);
                    }),
                    (0, Se.h)(
                      W =>
                        !!W.guardsResult ||
                        (d.restoreHistory(W),
                        this.cancelNavigationTransition(W, '', 3),
                        !1),
                    ),
                    Vt(W => {
                      if (W.guards.canActivateChecks.length)
                        return (0, L.of)(W).pipe(
                          (0, $e.b)(Ve => {
                            const Ct = new ur(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(Ct);
                          }),
                          (0, ne.w)(Ve => {
                            let Ct = !1;
                            return (0, L.of)(Ve).pipe(
                              (function ot(f, m) {
                                return (0, tt.z)(d => {
                                  const {
                                    targetSnapshot: D,
                                    guards: { canActivateChecks: O },
                                  } = d;
                                  if (!O.length) return (0, L.of)(d);
                                  let U = 0;
                                  return (0, x.D)(O).pipe(
                                    (0, Ge.b)(W =>
                                      (function _t(f, m, d, D) {
                                        const O = f.routeConfig,
                                          U = f._resolve;
                                        return (
                                          void 0 !== O?.title &&
                                            !jt(O) &&
                                            (U[Lt] = O.title),
                                          (function en(f, m, d, D) {
                                            const O = (function $n(f) {
                                              return [
                                                ...Object.keys(f),
                                                ...Object.getOwnPropertySymbols(
                                                  f,
                                                ),
                                              ];
                                            })(f);
                                            if (0 === O.length)
                                              return (0, L.of)({});
                                            const U = {};
                                            return (0, x.D)(O).pipe(
                                              (0, tt.z)(W =>
                                                (function Pt(f, m, d, D) {
                                                  const O = zr(m) ?? D,
                                                    U = Bi(f, O);
                                                  return ht(
                                                    U.resolve
                                                      ? U.resolve(m, d)
                                                      : O.runInContext(() =>
                                                          U(m, d),
                                                        ),
                                                  );
                                                })(f[W], m, d, D).pipe(
                                                  Et(),
                                                  (0, $e.b)(Ve => {
                                                    U[W] = Ve;
                                                  }),
                                                ),
                                              ),
                                              De(1),
                                              (0, Ye.h)(U),
                                              (0, Me.K)(W =>
                                                mr(W) ? Be.E : (0, pe._)(W),
                                              ),
                                            );
                                          })(U, f, m, D).pipe(
                                            (0, xe.U)(
                                              W => (
                                                (f._resolvedData = W),
                                                (f.data = vi(f, d).resolve),
                                                O &&
                                                  jt(O) &&
                                                  (f.data[Lt] = O.title),
                                                null
                                              ),
                                            ),
                                          )
                                        );
                                      })(W.route, D, f, m),
                                    ),
                                    (0, $e.b)(() => U++),
                                    De(1),
                                    (0, tt.z)(W =>
                                      U === O.length ? (0, L.of)(d) : Be.E,
                                    ),
                                  );
                                });
                              })(
                                d.paramsInheritanceStrategy,
                                this.environmentInjector,
                              ),
                              (0, $e.b)({
                                next: () => (Ct = !0),
                                complete: () => {
                                  Ct ||
                                    (d.restoreHistory(Ve),
                                    this.cancelNavigationTransition(Ve, '', 2));
                                },
                              }),
                            );
                          }),
                          (0, $e.b)(Ve => {
                            const Ct = new Pi(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(Ct);
                          }),
                        );
                    }),
                    Vt(W => {
                      const Ve = Ct => {
                        const qt = [];
                        Ct.routeConfig?.loadComponent &&
                          !Ct.routeConfig._loadedComponent &&
                          qt.push(
                            this.configLoader
                              .loadComponent(Ct.routeConfig)
                              .pipe(
                                (0, $e.b)(tn => {
                                  Ct.component = tn;
                                }),
                                (0, xe.U)(() => {}),
                              ),
                          );
                        for (const tn of Ct.children) qt.push(...Ve(tn));
                        return qt;
                      };
                      return (0, ge.a)(Ve(W.targetSnapshot.root)).pipe(
                        re(),
                        (0, te.q)(1),
                      );
                    }),
                    Vt(() => this.afterPreactivation()),
                    (0, xe.U)(W => {
                      const Ve = (function to(f, m, d) {
                        const D = no(f, m._root, d ? d._root : void 0);
                        return new vn(D, m);
                      })(
                        d.routeReuseStrategy,
                        W.targetSnapshot,
                        W.currentRouterState,
                      );
                      return (D = { ...W, targetRouterState: Ve });
                    }),
                    (0, $e.b)(W => {
                      (d.currentUrlTree = W.urlAfterRedirects),
                        (d.rawUrlTree = d.urlHandlingStrategy.merge(
                          W.urlAfterRedirects,
                          W.rawUrl,
                        )),
                        (d.routerState = W.targetRouterState),
                        'deferred' === d.urlUpdateStrategy &&
                          (W.extras.skipLocationChange ||
                            d.setBrowserUrl(d.rawUrlTree, W),
                          (d.browserUrlTree = W.urlAfterRedirects));
                    }),
                    ((f, m, d) =>
                      (0, xe.U)(
                        D => (
                          new Cr(
                            m,
                            D.targetRouterState,
                            D.currentRouterState,
                            d,
                          ).activate(f),
                          D
                        ),
                      ))(this.rootContexts, d.routeReuseStrategy, W =>
                      this.events.next(W),
                    ),
                    (0, te.q)(1),
                    (0, $e.b)({
                      next: W => {
                        (O = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (d.navigated = !0),
                          this.events.next(
                            new _i(
                              W.id,
                              this.urlSerializer.serialize(W.extractedUrl),
                              this.urlSerializer.serialize(d.currentUrlTree),
                            ),
                          ),
                          d.titleStrategy?.updateTitle(
                            W.targetRouterState.snapshot,
                          ),
                          W.resolve(!0);
                      },
                      complete: () => {
                        O = !0;
                      },
                    }),
                    (0, rt.x)(() => {
                      O || U || this.cancelNavigationTransition(D, '', 1),
                        this.currentNavigation?.id === D.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, Me.K)(W => {
                      if (((U = !0), mo(W))) {
                        Eo(W) || ((d.navigated = !0), d.restoreHistory(D, !0));
                        const Ve = new fn(
                          D.id,
                          this.urlSerializer.serialize(D.extractedUrl),
                          W.message,
                          W.cancellationCode,
                        );
                        if ((this.events.next(Ve), Eo(W))) {
                          const Ct = d.urlHandlingStrategy.merge(
                              W.url,
                              d.rawUrlTree,
                            ),
                            qt = {
                              skipLocationChange: D.extras.skipLocationChange,
                              replaceUrl:
                                'eager' === d.urlUpdateStrategy || Lr(D.source),
                            };
                          d.scheduleNavigation(Ct, pi, null, qt, {
                            resolve: D.resolve,
                            reject: D.reject,
                            promise: D.promise,
                          });
                        } else D.resolve(!1);
                      } else {
                        d.restoreHistory(D, !0);
                        const Ve = new Ui(
                          D.id,
                          this.urlSerializer.serialize(D.extractedUrl),
                          W,
                          D.targetSnapshot ?? void 0,
                        );
                        this.events.next(Ve);
                        try {
                          D.resolve(d.errorHandler(W));
                        } catch (Ct) {
                          D.reject(Ct);
                        }
                      }
                      return Be.E;
                    }),
                  );
                }),
              )
            );
          }
          cancelNavigationTransition(d, D, O) {
            const U = new fn(
              d.id,
              this.urlSerializer.serialize(d.extractedUrl),
              D,
              O,
            );
            this.events.next(U), d.resolve(!1);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function Lr(f) {
        return f !== pi;
      }
      let Ci = (() => {
          class f {
            buildTitle(d) {
              let D,
                O = d.root;
              for (; void 0 !== O; )
                (D = this.getResolvedTitleForRoute(O) ?? D),
                  (O = O.children.find(U => U.outlet === nt));
              return D;
            }
            getResolvedTitleForRoute(d) {
              return d.data[Lt];
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(lr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        lr = (() => {
          class f extends Ci {
            constructor(d) {
              super(), (this.title = d);
            }
            updateTitle(d) {
              const D = this.buildTitle(d);
              void 0 !== D && this.title.setTitle(D);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(s.LFG(ut.Dx));
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        cr = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(ys);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class vo {
        shouldDetach(m) {
          return !1;
        }
        store(m, d) {}
        shouldAttach(m) {
          return !1;
        }
        retrieve(m) {
          return null;
        }
        shouldReuseRoute(m, d) {
          return m.routeConfig === d.routeConfig;
        }
      }
      let ys = (() => {
        class f extends vo {}
        return (
          (f.ɵfac = (function () {
            let m;
            return function (D) {
              return (m || (m = s.n5z(f)))(D || f);
            };
          })()),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const Jo = new s.OlP('', { providedIn: 'root', factory: () => ({}) });
      let ba = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(Kr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        Kr = (() => {
          class f {
            shouldProcessUrl(d) {
              return !0;
            }
            extract(d) {
              return d;
            }
            merge(d, D) {
              return d;
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })();
      function us(f) {
        throw f;
      }
      function Cs(f, m, d) {
        return m.parse('/');
      }
      const $s = {
          paths: 'exact',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'exact',
        },
        xs = {
          paths: 'subset',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'subset',
        };
      let tr = (() => {
          class f {
            get navigationId() {
              return this.navigationTransitions.navigationId;
            }
            get browserPageId() {
              if ('computed' === this.canceledNavigationResolution)
                return this.location.getState()?.ɵrouterPageId;
            }
            get events() {
              return this.navigationTransitions.events;
            }
            constructor() {
              (this.disposed = !1),
                (this.currentPageId = 0),
                (this.console = (0, s.f3M)(s.c2e)),
                (this.isNgZoneEnabled = !1),
                (this.options = (0, s.f3M)(Jo, { optional: !0 }) || {}),
                (this.errorHandler = this.options.errorHandler || us),
                (this.malformedUriErrorHandler =
                  this.options.malformedUriErrorHandler || Cs),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.urlHandlingStrategy = (0, s.f3M)(ba)),
                (this.routeReuseStrategy = (0, s.f3M)(cr)),
                (this.urlCreationStrategy = (0, s.f3M)(Ke)),
                (this.titleStrategy = (0, s.f3M)(Ci)),
                (this.onSameUrlNavigation =
                  this.options.onSameUrlNavigation || 'ignore'),
                (this.paramsInheritanceStrategy =
                  this.options.paramsInheritanceStrategy || 'emptyOnly'),
                (this.urlUpdateStrategy =
                  this.options.urlUpdateStrategy || 'deferred'),
                (this.canceledNavigationResolution =
                  this.options.canceledNavigationResolution || 'replace'),
                (this.config = wn((0, s.f3M)(gn, { optional: !0 }) ?? [])),
                (this.navigationTransitions = (0, s.f3M)(er)),
                (this.urlSerializer = (0, s.f3M)(Cn)),
                (this.location = (0, s.f3M)(vt.Ye)),
                (this.isNgZoneEnabled =
                  (0, s.f3M)(s.R0b) instanceof s.R0b &&
                  s.R0b.isInAngularZone()),
                this.resetConfig(this.config),
                (this.currentUrlTree = new de()),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.routerState = Nn(this.currentUrlTree, null)),
                this.navigationTransitions.setupNavigations(this).subscribe(
                  d => {
                    (this.lastSuccessfulId = d.id),
                      (this.currentPageId = this.browserPageId ?? 0);
                  },
                  d => {
                    this.console.warn(`Unhandled Navigation Error: ${d}`);
                  },
                );
            }
            resetRootComponentType(d) {
              (this.routerState.root.component = d),
                (this.navigationTransitions.rootComponentType = d);
            }
            initialNavigation() {
              if (
                (this.setUpLocationChangeListener(),
                !this.navigationTransitions.hasRequestedNavigation)
              ) {
                const d = this.location.getState();
                this.navigateToSyncWithBrowser(this.location.path(!0), pi, d);
              }
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe(d => {
                  const D = 'popstate' === d.type ? 'popstate' : 'hashchange';
                  'popstate' === D &&
                    setTimeout(() => {
                      this.navigateToSyncWithBrowser(d.url, D, d.state);
                    }, 0);
                }));
            }
            navigateToSyncWithBrowser(d, D, O) {
              const U = { replaceUrl: !0 },
                W = O?.navigationId ? O : null;
              if (O) {
                const Ct = { ...O };
                delete Ct.navigationId,
                  delete Ct.ɵrouterPageId,
                  0 !== Object.keys(Ct).length && (U.state = Ct);
              }
              const Ve = this.parseUrl(d);
              this.scheduleNavigation(Ve, D, W, U);
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.navigationTransitions.currentNavigation;
            }
            resetConfig(d) {
              (this.config = d.map(ci)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.navigationTransitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(),
                  (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(d, D = {}) {
              const {
                  relativeTo: O,
                  queryParams: U,
                  fragment: W,
                  queryParamsHandling: Ve,
                  preserveFragment: Ct,
                } = D,
                qt = Ct ? this.currentUrlTree.fragment : W;
              let tn = null;
              switch (Ve) {
                case 'merge':
                  tn = { ...this.currentUrlTree.queryParams, ...U };
                  break;
                case 'preserve':
                  tn = this.currentUrlTree.queryParams;
                  break;
                default:
                  tn = U || null;
              }
              return (
                null !== tn && (tn = this.removeEmptyProps(tn)),
                this.urlCreationStrategy.createUrlTree(
                  O,
                  this.routerState,
                  this.currentUrlTree,
                  d,
                  tn,
                  qt ?? null,
                )
              );
            }
            navigateByUrl(d, D = { skipLocationChange: !1 }) {
              const O = _n(d) ? d : this.parseUrl(d),
                U = this.urlHandlingStrategy.merge(O, this.rawUrlTree);
              return this.scheduleNavigation(U, pi, null, D);
            }
            navigate(d, D = { skipLocationChange: !1 }) {
              return (
                (function ya(f) {
                  for (let m = 0; m < f.length; m++) {
                    const d = f[m];
                    if (null == d) throw new s.vHH(4008, false);
                  }
                })(d),
                this.navigateByUrl(this.createUrlTree(d, D), D)
              );
            }
            serializeUrl(d) {
              return this.urlSerializer.serialize(d);
            }
            parseUrl(d) {
              let D;
              try {
                D = this.urlSerializer.parse(d);
              } catch (O) {
                D = this.malformedUriErrorHandler(O, this.urlSerializer, d);
              }
              return D;
            }
            isActive(d, D) {
              let O;
              if (
                ((O = !0 === D ? { ...$s } : !1 === D ? { ...xs } : D), _n(d))
              )
                return J(this.currentUrlTree, d, O);
              const U = this.parseUrl(d);
              return J(this.currentUrlTree, U, O);
            }
            removeEmptyProps(d) {
              return Object.keys(d).reduce((D, O) => {
                const U = d[O];
                return null != U && (D[O] = U), D;
              }, {});
            }
            scheduleNavigation(d, D, O, U, W) {
              if (this.disposed) return Promise.resolve(!1);
              let Ve, Ct, qt, tn;
              return (
                W
                  ? ((Ve = W.resolve), (Ct = W.reject), (qt = W.promise))
                  : (qt = new Promise((Gn, Gi) => {
                      (Ve = Gn), (Ct = Gi);
                    })),
                (tn =
                  'computed' === this.canceledNavigationResolution
                    ? O && O.ɵrouterPageId
                      ? O.ɵrouterPageId
                      : (this.browserPageId ?? 0) + 1
                    : 0),
                this.navigationTransitions.handleNavigationRequest({
                  targetPageId: tn,
                  source: D,
                  restoredState: O,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  rawUrl: d,
                  extras: U,
                  resolve: Ve,
                  reject: Ct,
                  promise: qt,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                qt.catch(Gn => Promise.reject(Gn))
              );
            }
            setBrowserUrl(d, D) {
              const O = this.urlSerializer.serialize(d);
              if (
                this.location.isCurrentPathEqualTo(O) ||
                D.extras.replaceUrl
              ) {
                const W = {
                  ...D.extras.state,
                  ...this.generateNgRouterState(D.id, this.browserPageId),
                };
                this.location.replaceState(O, '', W);
              } else {
                const U = {
                  ...D.extras.state,
                  ...this.generateNgRouterState(D.id, D.targetPageId),
                };
                this.location.go(O, '', U);
              }
            }
            restoreHistory(d, D = !1) {
              if ('computed' === this.canceledNavigationResolution) {
                const U =
                  this.currentPageId -
                  (this.browserPageId ?? this.currentPageId);
                0 !== U
                  ? this.location.historyGo(U)
                  : this.currentUrlTree ===
                      this.getCurrentNavigation()?.finalUrl &&
                    0 === U &&
                    (this.resetState(d),
                    (this.browserUrlTree = d.currentUrlTree),
                    this.resetUrlToCurrentUrlTree());
              } else
                'replace' === this.canceledNavigationResolution &&
                  (D && this.resetState(d), this.resetUrlToCurrentUrlTree());
            }
            resetState(d) {
              (this.routerState = d.currentRouterState),
                (this.currentUrlTree = d.currentUrlTree),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  d.rawUrl,
                ));
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                '',
                this.generateNgRouterState(
                  this.lastSuccessfulId,
                  this.currentPageId,
                ),
              );
            }
            generateNgRouterState(d, D) {
              return 'computed' === this.canceledNavigationResolution
                ? { navigationId: d, ɵrouterPageId: D }
                : { navigationId: d };
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        hs = (() => {
          class f {
            constructor(d, D, O, U, W, Ve) {
              (this.router = d),
                (this.route = D),
                (this.tabIndexAttribute = O),
                (this.renderer = U),
                (this.el = W),
                (this.locationStrategy = Ve),
                (this._preserveFragment = !1),
                (this._skipLocationChange = !1),
                (this._replaceUrl = !1),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new at.x());
              const Ct = W.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = 'a' === Ct || 'area' === Ct),
                this.isAnchorElement
                  ? (this.subscription = d.events.subscribe(qt => {
                      qt instanceof _i && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl('0');
            }
            set preserveFragment(d) {
              this._preserveFragment = (0, s.D6c)(d);
            }
            get preserveFragment() {
              return this._preserveFragment;
            }
            set skipLocationChange(d) {
              this._skipLocationChange = (0, s.D6c)(d);
            }
            get skipLocationChange() {
              return this._skipLocationChange;
            }
            set replaceUrl(d) {
              this._replaceUrl = (0, s.D6c)(d);
            }
            get replaceUrl() {
              return this._replaceUrl;
            }
            setTabIndexIfNotOnNativeEl(d) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue('tabindex', d);
            }
            ngOnChanges(d) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(d) {
              null != d
                ? ((this.commands = Array.isArray(d) ? d : [d]),
                  this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(d, D, O, U, W) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== d ||
                      D ||
                      O ||
                      U ||
                      W ||
                      ('string' == typeof this.target &&
                        '_self' != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree),
                    )
                  : null;
              const d =
                null === this.href
                  ? null
                  : (0, s.P3R)(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      'href',
                    );
              this.applyAttributeValue('href', d);
            }
            applyAttributeValue(d, D) {
              const O = this.renderer,
                U = this.el.nativeElement;
              null !== D ? O.setAttribute(U, d, D) : O.removeAttribute(U, d);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(
                s.Y36(tr),
                s.Y36(Rn),
                s.$8M('tabindex'),
                s.Y36(s.Qsj),
                s.Y36(s.SBq),
                s.Y36(vt.S$),
              );
            }),
            (f.ɵdir = s.lG2({
              type: f,
              selectors: [['', 'routerLink', '']],
              hostVars: 1,
              hostBindings: function (d, D) {
                1 & d &&
                  s.NdJ('click', function (U) {
                    return D.onClick(
                      U.button,
                      U.ctrlKey,
                      U.shiftKey,
                      U.altKey,
                      U.metaKey,
                    );
                  }),
                  2 & d && s.uIk('target', D.target);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                state: 'state',
                relativeTo: 'relativeTo',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                routerLink: 'routerLink',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            f
          );
        })();
      class fs {}
      let Io = (() => {
        class f {
          constructor(d, D, O, U, W) {
            (this.router = d),
              (this.injector = O),
              (this.preloadingStrategy = U),
              (this.loader = W);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, Se.h)(d => d instanceof _i),
                (0, Ge.b)(() => this.preload()),
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(d, D) {
            const O = [];
            for (const U of D) {
              U.providers &&
                !U._injector &&
                (U._injector = (0, s.MMx)(U.providers, d, `Route: ${U.path}`));
              const W = U._injector ?? d,
                Ve = U._loadedInjector ?? W;
              ((U.loadChildren && !U._loadedRoutes && void 0 === U.canLoad) ||
                (U.loadComponent && !U._loadedComponent)) &&
                O.push(this.preloadConfig(W, U)),
                (U.children || U._loadedRoutes) &&
                  O.push(this.processRoutes(Ve, U.children ?? U._loadedRoutes));
            }
            return (0, x.D)(O).pipe((0, je.J)());
          }
          preloadConfig(d, D) {
            return this.preloadingStrategy.preload(D, () => {
              let O;
              O =
                D.loadChildren && void 0 === D.canLoad
                  ? this.loader.loadChildren(d, D)
                  : (0, L.of)(null);
              const U = O.pipe(
                (0, tt.z)(W =>
                  null === W
                    ? (0, L.of)(void 0)
                    : ((D._loadedRoutes = W.routes),
                      (D._loadedInjector = W.injector),
                      this.processRoutes(W.injector ?? d, W.routes)),
                ),
              );
              if (D.loadComponent && !D._loadedComponent) {
                const W = this.loader.loadComponent(D);
                return (0, x.D)([U, W]).pipe((0, je.J)());
              }
              return U;
            });
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(
              s.LFG(tr),
              s.LFG(s.Sil),
              s.LFG(s.lqb),
              s.LFG(fs),
              s.LFG(Yn),
            );
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const Ms = new s.OlP('');
      let ws = (() => {
        class f {
          constructor(d, D, O, U, W = {}) {
            (this.urlSerializer = d),
              (this.transitions = D),
              (this.viewportScroller = O),
              (this.zone = U),
              (this.options = W),
              (this.lastId = 0),
              (this.lastSource = 'imperative'),
              (this.restoredId = 0),
              (this.store = {}),
              (W.scrollPositionRestoration =
                W.scrollPositionRestoration || 'disabled'),
              (W.anchorScrolling = W.anchorScrolling || 'disabled');
          }
          init() {
            'disabled' !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration('manual'),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof gi
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = d.navigationTrigger),
                  (this.restoredId = d.restoredState
                    ? d.restoredState.navigationId
                    : 0))
                : d instanceof _i &&
                  ((this.lastId = d.id),
                  this.scheduleScrollEvent(
                    d,
                    this.urlSerializer.parse(d.urlAfterRedirects).fragment,
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof kr &&
                (d.position
                  ? 'top' === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : 'enabled' === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(d.position)
                  : d.anchor && 'enabled' === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(d.anchor)
                  : 'disabled' !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(d, D) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new kr(
                      d,
                      'popstate' === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      D,
                    ),
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (f.ɵfac = function (d) {
            s.$Z();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
          f
        );
      })();
      var hr = (() => (
        ((hr = hr || {})[(hr.COMPLETE = 0)] = 'COMPLETE'),
        (hr[(hr.FAILED = 1)] = 'FAILED'),
        (hr[(hr.REDIRECTING = 2)] = 'REDIRECTING'),
        hr
      ))();
      const Uo = !1;
      function bo(f, m) {
        return { ɵkind: f, ɵproviders: m };
      }
      const ms = new s.OlP('', { providedIn: 'root', factory: () => !1 });
      function To() {
        const f = (0, s.f3M)(s.zs3);
        return m => {
          const d = f.get(s.z2F);
          if (m !== d.components[0]) return;
          const D = f.get(tr),
            O = f.get(gs);
          1 === f.get(Zr) && D.initialNavigation(),
            f.get(ei, null, s.XFs.Optional)?.setUpPreloading(),
            f.get(Ms, null, s.XFs.Optional)?.init(),
            D.resetRootComponentType(d.componentTypes[0]),
            O.closed || (O.next(), O.complete(), O.unsubscribe());
        };
      }
      const gs = new s.OlP(Uo ? 'bootstrap done indicator' : '', {
          factory: () => new at.x(),
        }),
        Zr = new s.OlP(Uo ? 'initial navigation' : '', {
          providedIn: 'root',
          factory: () => 1,
        });
      function Ea() {
        let f = [];
        return (
          (f = Uo
            ? [
                {
                  provide: s.Xts,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(tr);
                    return () =>
                      m.events.subscribe(d => {
                        console.group?.(`Router Event: ${d.constructor.name}`),
                          console.log(
                            (function rr(f) {
                              if (!('type' in f))
                                return `Unknown Router Event: ${f.constructor.name}`;
                              switch (f.type) {
                                case 14:
                                  return `ActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 13:
                                  return `ActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 12:
                                  return `ChildActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 11:
                                  return `ChildActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 8:
                                  return `GuardsCheckEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state}, shouldActivate: ${f.shouldActivate})`;
                                case 7:
                                  return `GuardsCheckStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 2:
                                  return `NavigationCancel(id: ${f.id}, url: '${f.url}')`;
                                case 16:
                                  return `NavigationSkipped(id: ${f.id}, url: '${f.url}')`;
                                case 1:
                                  return `NavigationEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}')`;
                                case 3:
                                  return `NavigationError(id: ${f.id}, url: '${f.url}', error: ${f.error})`;
                                case 0:
                                  return `NavigationStart(id: ${f.id}, url: '${f.url}')`;
                                case 6:
                                  return `ResolveEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 5:
                                  return `ResolveStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 10:
                                  return `RouteConfigLoadEnd(path: ${f.route.path})`;
                                case 9:
                                  return `RouteConfigLoadStart(path: ${f.route.path})`;
                                case 4:
                                  return `RoutesRecognized(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 15:
                                  return `Scroll(anchor: '${
                                    f.anchor
                                  }', position: '${
                                    f.position
                                      ? `${f.position[0]}, ${f.position[1]}`
                                      : null
                                  }')`;
                              }
                            })(d),
                          ),
                          console.log(d),
                          console.groupEnd?.();
                      });
                  },
                },
              ]
            : []),
          bo(1, f)
        );
      }
      const ei = new s.OlP(Uo ? 'router preloader' : '');
      function Ma(f) {
        return bo(0, [
          { provide: ei, useExisting: Io },
          { provide: fs, useExisting: f },
        ]);
      }
      const ts = !1,
        wa = new s.OlP(
          ts ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD',
        ),
        zo = [
          vt.Ye,
          { provide: Cn, useClass: Oe },
          tr,
          $i,
          {
            provide: Rn,
            useFactory: function ps(f) {
              return f.routerState.root;
            },
            deps: [tr],
          },
          Yn,
          ts ? { provide: ms, useValue: !0 } : [],
        ];
      function tl() {
        return new s.PXZ('Router', tr);
      }
      let nl = (() => {
        class f {
          constructor(d) {}
          static forRoot(d, D) {
            return {
              ngModule: f,
              providers: [
                zo,
                ts && D?.enableTracing ? Ea().ɵproviders : [],
                { provide: gn, multi: !0, useValue: d },
                {
                  provide: wa,
                  useFactory: Aa,
                  deps: [[tr, new s.FiY(), new s.tp0()]],
                },
                { provide: Jo, useValue: D || {} },
                D?.useHash
                  ? { provide: vt.S$, useClass: vt.Do }
                  : { provide: vt.S$, useClass: vt.b0 },
                {
                  provide: Ms,
                  useFactory: () => {
                    const f = (0, s.f3M)(vt.EM),
                      m = (0, s.f3M)(s.R0b),
                      d = (0, s.f3M)(Jo),
                      D = (0, s.f3M)(er),
                      O = (0, s.f3M)(Cn);
                    return (
                      d.scrollOffset && f.setOffset(d.scrollOffset),
                      new ws(O, D, f, m, d)
                    );
                  },
                },
                D?.preloadingStrategy
                  ? Ma(D.preloadingStrategy).ɵproviders
                  : [],
                { provide: s.PXZ, multi: !0, useFactory: tl },
                D?.initialNavigation ? Ar(D) : [],
                [
                  { provide: uo, useFactory: To },
                  { provide: s.tb, multi: !0, useExisting: uo },
                ],
              ],
            };
          }
          static forChild(d) {
            return {
              ngModule: f,
              providers: [{ provide: gn, multi: !0, useValue: d }],
            };
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(s.LFG(wa, 8));
          }),
          (f.ɵmod = s.oAB({ type: f })),
          (f.ɵinj = s.cJS({ imports: [oo] })),
          f
        );
      })();
      function Aa(f) {
        if (ts && f)
          throw new s.vHH(
            4007,
            "The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead.",
          );
        return 'guarded';
      }
      function Ar(f) {
        return [
          'disabled' === f.initialNavigation
            ? bo(3, [
                {
                  provide: s.ip1,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(tr);
                    return () => {
                      m.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Zr, useValue: 2 },
              ]).ɵproviders
            : [],
          'enabledBlocking' === f.initialNavigation
            ? bo(2, [
                { provide: Zr, useValue: 0 },
                {
                  provide: s.ip1,
                  multi: !0,
                  deps: [s.zs3],
                  useFactory: m => {
                    const d = m.get(vt.V_, Promise.resolve());
                    return () =>
                      d.then(
                        () =>
                          new Promise(D => {
                            const O = m.get(tr),
                              U = m.get(gs);
                            (function Ho(f, m) {
                              f.events
                                .pipe(
                                  (0, Se.h)(
                                    d =>
                                      d instanceof _i ||
                                      d instanceof fn ||
                                      d instanceof Ui ||
                                      d instanceof qi,
                                  ),
                                  (0, xe.U)(d =>
                                    d instanceof _i || d instanceof qi
                                      ? hr.COMPLETE
                                      : d instanceof fn &&
                                        (0 === d.code || 1 === d.code)
                                      ? hr.REDIRECTING
                                      : hr.FAILED,
                                  ),
                                  (0, Se.h)(d => d !== hr.REDIRECTING),
                                  (0, te.q)(1),
                                )
                                .subscribe(() => {
                                  m();
                                });
                            })(O, () => {
                              D(!0);
                            }),
                              (m.get(er).afterPreactivation = () => (
                                D(!0), U.closed ? (0, L.of)(void 0) : U
                              )),
                              O.initialNavigation();
                          }),
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const uo = new s.OlP(ts ? 'Router Initializer' : '');
    },
    8776: (Ot, Ne, C) => {
      C.d(Ne, { eX: () => Ye, sQ: () => me, GW: () => At, l4: () => rt });
      var s = C(6451),
        x = C(9751),
        L = C(7579),
        oe = C(8502),
        ee = C(515),
        he = C(9646),
        ge = C(2843),
        ue = C(576);
      class ae {
        constructor(bt, Je, wt) {
          (this.kind = bt),
            (this.value = Je),
            (this.error = wt),
            (this.hasValue = 'N' === bt);
        }
        observe(bt) {
          return pe(this, bt);
        }
        do(bt, Je, wt) {
          const { kind: Te, value: R, error: b } = this;
          return 'N' === Te ? bt?.(R) : 'E' === Te ? Je?.(b) : wt?.();
        }
        accept(bt, Je, wt) {
          var Te;
          return (0, ue.m)(
            null === (Te = bt) || void 0 === Te ? void 0 : Te.next,
          )
            ? this.observe(bt)
            : this.do(bt, Je, wt);
        }
        toObservable() {
          const { kind: bt, value: Je, error: wt } = this,
            Te =
              'N' === bt
                ? (0, he.of)(Je)
                : 'E' === bt
                ? (0, ge._)(() => wt)
                : 'C' === bt
                ? ee.E
                : 0;
          if (!Te) throw new TypeError(`Unexpected notification kind ${bt}`);
          return Te;
        }
        static createNext(bt) {
          return new ae('N', bt);
        }
        static createError(bt) {
          return new ae('E', void 0, bt);
        }
        static createComplete() {
          return ae.completeNotification;
        }
      }
      function pe(Oe, bt) {
        var Je, wt, Te;
        const { kind: R, value: b, error: E } = Oe;
        if ('string' != typeof R)
          throw new TypeError('Invalid notification, missing "kind"');
        'N' === R
          ? null === (Je = bt.next) || void 0 === Je || Je.call(bt, b)
          : 'E' === R
          ? null === (wt = bt.error) || void 0 === wt || wt.call(bt, E)
          : null === (Te = bt.complete) || void 0 === Te || Te.call(bt);
      }
      ae.completeNotification = new ae('C');
      var se = C(4482),
        Be = C(5403),
        st = C(4004),
        gt = C(262),
        Le = C(9300),
        pt = C(8421);
      function at(Oe, bt, Je, wt) {
        return (0, se.e)((Te, R) => {
          let b;
          bt && 'function' != typeof bt
            ? ({ duration: Je, element: b, connector: wt } = bt)
            : (b = bt);
          const E = new Map(),
            V = Bt => {
              E.forEach(Bt), Bt(R);
            },
            Q = Bt => V(on => on.error(Bt));
          let We = 0,
            St = !1;
          const Gt = new Be.Q(
            R,
            Bt => {
              try {
                const on = Oe(Bt);
                let Re = E.get(on);
                if (!Re) {
                  E.set(on, (Re = wt ? wt() : new L.x()));
                  const Ce = (function zt(Bt, on) {
                    const Re = new x.y(Ce => {
                      We++;
                      const K = on.subscribe(Ce);
                      return () => {
                        K.unsubscribe(), 0 == --We && St && Gt.unsubscribe();
                      };
                    });
                    return (Re.key = Bt), Re;
                  })(on, Re);
                  if ((R.next(Ce), Je)) {
                    const K = (0, Be.x)(
                      Re,
                      () => {
                        Re.complete(), K?.unsubscribe();
                      },
                      void 0,
                      void 0,
                      () => E.delete(on),
                    );
                    Gt.add((0, pt.Xf)(Je(Ce)).subscribe(K));
                  }
                }
                Re.next(b ? b(Bt) : Bt);
              } catch (on) {
                Q(on);
              }
            },
            () => V(Bt => Bt.complete()),
            Q,
            () => E.clear(),
            () => ((St = !0), 0 === We),
          );
          Te.subscribe(Gt);
        });
      }
      var vt = C(5577),
        xe = C(6129),
        te = C(5698),
        X = C(4650),
        Se = C(1831);
      const tt = { dispatch: !0, functional: !1, useEffectsErrorHandler: !0 },
        re = '__@ngrx/effects_create__';
      function At(Oe, bt = {}) {
        const Je = bt.functional ? Oe : Oe(),
          wt = { ...tt, ...bt };
        return Object.defineProperty(Je, re, { value: wt }), Je;
      }
      function Ge(Oe) {
        return Object.getPrototypeOf(Oe);
      }
      function Me(Oe) {
        return 'function' == typeof Oe;
      }
      function Ue(Oe) {
        return Oe.filter(Me);
      }
      function De(Oe, bt, Je) {
        const wt = Ge(Oe).constructor.name,
          Te = (function Et(Oe) {
            return (function mt(Oe) {
              return Object.getOwnPropertyNames(Oe)
                .filter(
                  wt =>
                    !(!Oe[wt] || !Oe[wt].hasOwnProperty(re)) &&
                    Oe[wt][re].hasOwnProperty('dispatch'),
                )
                .map(wt => ({ propertyName: wt, ...Oe[wt][re] }));
            })(Oe);
          })(Oe).map(
            ({ propertyName: R, dispatch: b, useEffectsErrorHandler: E }) => {
              const V = 'function' == typeof Oe[R] ? Oe[R]() : Oe[R],
                Q = E ? Je(V, bt) : V;
              return !1 === b
                ? Q.pipe((0, oe.l)())
                : Q.pipe(
                    (function ze() {
                      return (0, se.e)((Oe, bt) => {
                        Oe.subscribe(
                          (0, Be.x)(
                            bt,
                            Je => {
                              bt.next(ae.createNext(Je));
                            },
                            () => {
                              bt.next(ae.createComplete()), bt.complete();
                            },
                            Je => {
                              bt.next(ae.createError(Je)), bt.complete();
                            },
                          ),
                        );
                      });
                    })(),
                  ).pipe(
                    (0, st.U)(St => ({
                      effect: Oe[R],
                      notification: St,
                      propertyName: R,
                      sourceName: wt,
                      sourceInstance: Oe,
                    })),
                  );
            },
          );
        return (0, s.T)(...Te);
      }
      const Pe = 10;
      function a(Oe, bt, Je = Pe) {
        return Oe.pipe(
          (0, gt.K)(
            wt => (bt && bt.handleError(wt), Je <= 1 ? Oe : a(Oe, bt, Je - 1)),
          ),
        );
      }
      let Ye = (() => {
        class Oe extends x.y {
          constructor(Je) {
            super(), Je && (this.source = Je);
          }
          lift(Je) {
            const wt = new Oe();
            return (wt.source = this), (wt.operator = Je), wt;
          }
        }
        return (
          (Oe.ɵfac = function (Je) {
            return new (Je || Oe)(X.LFG(Se.Y$));
          }),
          (Oe.ɵprov = X.Yz7({
            token: Oe,
            factory: Oe.ɵfac,
            providedIn: 'root',
          })),
          Oe
        );
      })();
      function rt(...Oe) {
        return (0, Le.h)(bt =>
          Oe.some(Je =>
            'string' == typeof Je ? Je === bt.type : Je.type === bt.type,
          ),
        );
      }
      const je = new X.OlP('@ngrx/effects Internal Root Guard'),
        ut = new X.OlP('@ngrx/effects User Provided Effects'),
        nt = new X.OlP('@ngrx/effects Internal Root Effects'),
        Lt = new X.OlP('@ngrx/effects Internal Root Effects Instances'),
        Mn = new X.OlP('@ngrx/effects Internal Feature Effects'),
        un = new X.OlP(
          '@ngrx/effects Internal Feature Effects Instance Groups',
        ),
        an = new X.OlP('@ngrx/effects Effects Error Handler', {
          providedIn: 'root',
          factory: () => a,
        }),
        Dn = '@ngrx/effects/init';
      (0, Se.PH)(Dn);
      const xt = 'ngrxOnIdentifyEffects',
        $ = 'ngrxOnInitEffects';
      function J(Oe) {
        return Ae(Oe, $);
      }
      function Ae(Oe, bt) {
        return Oe && bt in Oe && 'function' == typeof Oe[bt];
      }
      let He = (() => {
        class Oe extends L.x {
          constructor(Je, wt) {
            super(), (this.errorHandler = Je), (this.effectsErrorHandler = wt);
          }
          addEffects(Je) {
            this.next(Je);
          }
          toActions() {
            return this.pipe(
              at(Je =>
                (function $e(Oe) {
                  return (
                    'Object' !== Oe.constructor.name &&
                    'Function' !== Oe.constructor.name
                  );
                })(Je)
                  ? Ge(Je)
                  : Je,
              ),
              (0, vt.z)(Je => Je.pipe(at(ve))),
              (0, vt.z)(Je => {
                const wt = Je.pipe(
                    (0, xe.z)(R =>
                      (function be(Oe, bt) {
                        return Je => {
                          const wt = De(Je, Oe, bt);
                          return (function Xe(Oe) {
                            return Ae(Oe, 'ngrxOnRunEffects');
                          })(Je)
                            ? Je.ngrxOnRunEffects(wt)
                            : wt;
                        };
                      })(
                        this.errorHandler,
                        this.effectsErrorHandler,
                      )(R),
                    ),
                    (0, st.U)(
                      R => (
                        (function mn(Oe, bt) {
                          if ('N' === Oe.notification.kind) {
                            const Je = Oe.notification.value;
                            !(function wn(Oe) {
                              return (
                                'function' != typeof Oe &&
                                Oe &&
                                Oe.type &&
                                'string' == typeof Oe.type
                              );
                            })(Je) &&
                              bt.handleError(
                                new Error(
                                  `Effect ${(function Dt({
                                    propertyName: Oe,
                                    sourceInstance: bt,
                                    sourceName: Je,
                                  }) {
                                    const wt = 'function' == typeof bt[Oe];
                                    return `"${Je}.${String(Oe)}${
                                      wt ? '()' : ''
                                    }"`;
                                  })(
                                    Oe,
                                  )} dispatched an invalid action: ${(function Jt(
                                    Oe,
                                  ) {
                                    try {
                                      return JSON.stringify(Oe);
                                    } catch {
                                      return Oe;
                                    }
                                  })(Je)}`,
                                ),
                              );
                          }
                        })(R, this.errorHandler),
                        R.notification
                      ),
                    ),
                    (0, Le.h)(R => 'N' === R.kind && null != R.value),
                    (function ne() {
                      return (0, se.e)((Oe, bt) => {
                        Oe.subscribe((0, Be.x)(bt, Je => pe(Je, bt)));
                      });
                    })(),
                  ),
                  Te = Je.pipe(
                    (0, te.q)(1),
                    (0, Le.h)(J),
                    (0, st.U)(R => R.ngrxOnInitEffects()),
                  );
                return (0, s.T)(wt, Te);
              }),
            );
          }
        }
        return (
          (Oe.ɵfac = function (Je) {
            return new (Je || Oe)(X.LFG(X.qLn), X.LFG(an));
          }),
          (Oe.ɵprov = X.Yz7({
            token: Oe,
            factory: Oe.ɵfac,
            providedIn: 'root',
          })),
          Oe
        );
      })();
      function ve(Oe) {
        return (function ht(Oe) {
          return Ae(Oe, xt);
        })(Oe)
          ? Oe.ngrxOnIdentifyEffects()
          : '';
      }
      let j = (() => {
          class Oe {
            constructor(Je, wt) {
              (this.effectSources = Je),
                (this.store = wt),
                (this.effectsSubscription = null);
            }
            get isStarted() {
              return !!this.effectsSubscription;
            }
            start() {
              this.effectsSubscription ||
                (this.effectsSubscription = this.effectSources
                  .toActions()
                  .subscribe(this.store));
            }
            ngOnDestroy() {
              this.effectsSubscription &&
                (this.effectsSubscription.unsubscribe(),
                (this.effectsSubscription = null));
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(X.LFG(He), X.LFG(Se.yh));
            }),
            (Oe.ɵprov = X.Yz7({
              token: Oe,
              factory: Oe.ɵfac,
              providedIn: 'root',
            })),
            Oe
          );
        })(),
        ke = (() => {
          class Oe {
            constructor(Je, wt, Te, R, b, E, V) {
              (this.sources = Je), wt.start();
              for (const Q of R) Je.addEffects(Q);
              Te.dispatch({ type: Dn });
            }
            addEffects(Je) {
              this.sources.addEffects(Je);
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(
                X.LFG(He),
                X.LFG(j),
                X.LFG(Se.yh),
                X.LFG(Lt),
                X.LFG(Se.cr, 8),
                X.LFG(Se.CK, 8),
                X.LFG(je, 8),
              );
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })(),
        de = (() => {
          class Oe {
            constructor(Je, wt, Te, R) {
              const b = wt.flat();
              for (const E of b) Je.addEffects(E);
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)(
                X.LFG(ke),
                X.LFG(un),
                X.LFG(Se.cr, 8),
                X.LFG(Se.CK, 8),
              );
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })(),
        me = (() => {
          class Oe {
            static forFeature(...Je) {
              const wt = Je.flat(),
                Te = Ue(wt);
              return {
                ngModule: de,
                providers: [
                  Te,
                  { provide: Mn, multi: !0, useValue: wt },
                  { provide: ut, multi: !0, useValue: [] },
                  { provide: un, multi: !0, useFactory: fe, deps: [Mn, ut] },
                ],
              };
            }
            static forRoot(...Je) {
              const wt = Je.flat(),
                Te = Ue(wt);
              return {
                ngModule: ke,
                providers: [
                  Te,
                  { provide: nt, useValue: [wt] },
                  { provide: je, useFactory: et },
                  { provide: ut, multi: !0, useValue: [] },
                  { provide: Lt, useFactory: fe, deps: [nt, ut] },
                ],
              };
            }
          }
          return (
            (Oe.ɵfac = function (Je) {
              return new (Je || Oe)();
            }),
            (Oe.ɵmod = X.oAB({ type: Oe })),
            (Oe.ɵinj = X.cJS({})),
            Oe
          );
        })();
      function fe(Oe, bt) {
        const Je = [];
        for (const wt of Oe) Je.push(...wt);
        for (const wt of bt) Je.push(...wt);
        return Je.map(wt => (Me(wt) ? (0, X.f3M)(wt) : wt));
      }
      function et() {
        const Oe = (0, X.f3M)(j, { optional: !0, skipSelf: !0 }),
          bt = (0, X.f3M)(nt, { self: !0 });
        if ((1 !== bt.length || 0 !== bt[0].length) && Oe)
          throw new TypeError(
            'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.',
          );
        return 'guarded';
      }
    },
    1831: (Ot, Ne, C) => {
      C.d(Ne, {
        Y$: () => Mt,
        yh: () => wt,
        CK: () => kr,
        Aw: () => rr,
        cr: () => Li,
        PH: () => Se,
        Lq: () => zi,
        P1: () => qn,
        on: () => Ki,
        Ky: () => tt,
      });
      var s = C(4650),
        x = C(1135),
        L = C(9751),
        oe = C(7579),
        ee = C(4408),
        ge = C(640);
      const le = new (class ue extends ge.v {})(
        class he extends ee.o {
          constructor(Ke, Ie) {
            super(Ke, Ie), (this.scheduler = Ke), (this.work = Ie);
          }
          schedule(Ke, Ie = 0) {
            return Ie > 0
              ? super.schedule(Ke, Ie)
              : ((this.delay = Ie),
                (this.state = Ke),
                this.scheduler.flush(this),
                this);
          }
          execute(Ke, Ie) {
            return Ie > 0 || this.closed
              ? super.execute(Ke, Ie)
              : this._execute(Ke, Ie);
          }
          requestAsyncId(Ke, Ie, Ze = 0) {
            return (null != Ze && Ze > 0) || (null == Ze && this.delay > 0)
              ? super.requestAsyncId(Ke, Ie, Ze)
              : (Ke.flush(this), 0);
          }
        },
      );
      var pe = C(5363),
        se = C(4482),
        Be = C(5403),
        ze = C(8421),
        st = C(4671),
        gt = C(5032),
        Le = C(3269),
        at = C(5026),
        vt = C(4004),
        ne = C(1884);
      const te = {};
      function Se(q, Ke) {
        if (((te[q] = (te[q] || 0) + 1), 'function' == typeof Ke))
          return At(q, (...Ze) => ({ ...Ke(...Ze), type: q }));
        switch (Ke ? Ke._as : 'empty') {
          case 'empty':
            return At(q, () => ({ type: q }));
          case 'props':
            return At(q, Ze => ({ ...Ze, type: q }));
          default:
            throw new Error('Unexpected config.');
        }
      }
      function tt() {
        return { _as: 'props', _p: void 0 };
      }
      function At(q, Ke) {
        return Object.defineProperty(Ke, 'type', { value: q, writable: !1 });
      }
      const Me = '@ngrx/store/init';
      let Ue = (() => {
        class q extends x.X {
          constructor() {
            super({ type: Me });
          }
          next(Ie) {
            if ('function' == typeof Ie)
              throw new TypeError(
                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().",
              );
            if (typeof Ie > 'u') throw new TypeError('Actions must be objects');
            if (typeof Ie.type > 'u')
              throw new TypeError('Actions must have a type property');
            super.next(Ie);
          }
          complete() {}
          ngOnDestroy() {
            super.complete();
          }
        }
        return (
          (q.ɵfac = function (Ie) {
            return new (Ie || q)();
          }),
          (q.ɵprov = s.Yz7({ token: q, factory: q.ɵfac })),
          q
        );
      })();
      const De = [Ue],
        Pe = new s.OlP('@ngrx/store Internal Root Guard'),
        a = new s.OlP('@ngrx/store Internal Initial State'),
        Ye = new s.OlP('@ngrx/store Initial State'),
        rt = new s.OlP('@ngrx/store Reducer Factory'),
        je = new s.OlP('@ngrx/store Internal Reducer Factory Provider'),
        ut = new s.OlP('@ngrx/store Initial Reducers'),
        nt = new s.OlP('@ngrx/store Internal Initial Reducers'),
        Lt = new s.OlP('@ngrx/store Store Features'),
        Mn = new s.OlP('@ngrx/store Internal Store Reducers'),
        un = new s.OlP('@ngrx/store Internal Feature Reducers'),
        an = new s.OlP('@ngrx/store Internal Feature Configs'),
        Dn = new s.OlP('@ngrx/store Internal Store Features'),
        Kt = new s.OlP('@ngrx/store Internal Feature Reducers Token'),
        mn = new s.OlP('@ngrx/store Feature Reducers'),
        wn = new s.OlP('@ngrx/store User Provided Meta Reducers'),
        Dt = new s.OlP('@ngrx/store Meta Reducers'),
        Jt = new s.OlP('@ngrx/store Internal Resolved Meta Reducers'),
        xt = new s.OlP('@ngrx/store User Runtime Checks Config'),
        ht = new s.OlP('@ngrx/store Internal User Runtime Checks Config'),
        hn = new s.OlP('@ngrx/store Internal Runtime Checks'),
        Xe = new s.OlP('@ngrx/store Check if Action types are unique');
      function Ae(q, Ke = {}) {
        const Ie = Object.keys(q),
          Ze = {};
        for (let It = 0; It < Ie.length; It++) {
          const ln = Ie[It];
          'function' == typeof q[ln] && (Ze[ln] = q[ln]);
        }
        const kt = Object.keys(Ze);
        return function (ln, vn) {
          ln = void 0 === ln ? Ke : ln;
          let Nn = !1;
          const Kn = {};
          for (let Rn = 0; Rn < kt.length; Rn++) {
            const vi = kt[Rn],
              vr = ln[vi],
              br = (0, Ze[vi])(vr, vn);
            (Kn[vi] = br), (Nn = Nn || br !== vr);
          }
          return Nn ? Kn : ln;
        };
      }
      function ve(...q) {
        return function (Ke) {
          if (0 === q.length) return Ke;
          const Ie = q[q.length - 1];
          return q.slice(0, -1).reduceRight((kt, It) => It(kt), Ie(Ke));
        };
      }
      function be(q, Ke) {
        return (
          Array.isArray(Ke) &&
            Ke.length > 0 &&
            (q = ve.apply(null, [...Ke, q])),
          (Ie, Ze) => {
            const kt = q(Ie);
            return (It, ln) => kt((It = void 0 === It ? Ze : It), ln);
          }
        );
      }
      new s.OlP('@ngrx/store Root Store Provider'),
        new s.OlP('@ngrx/store Feature State Provider');
      class ke extends L.y {}
      class de extends Ue {}
      let fe = (() => {
        class q extends x.X {
          constructor(Ie, Ze, kt, It) {
            super(It(kt, Ze)),
              (this.dispatcher = Ie),
              (this.initialState = Ze),
              (this.reducers = kt),
              (this.reducerFactory = It);
          }
          get currentReducers() {
            return this.reducers;
          }
          addFeature(Ie) {
            this.addFeatures([Ie]);
          }
          addFeatures(Ie) {
            const Ze = Ie.reduce(
              (
                kt,
                {
                  reducers: It,
                  reducerFactory: ln,
                  metaReducers: vn,
                  initialState: Nn,
                  key: Kn,
                },
              ) => {
                const Rn =
                  'function' == typeof It
                    ? (function j(q) {
                        const Ke =
                          Array.isArray(q) && q.length > 0
                            ? ve(...q)
                            : Ie => Ie;
                        return (Ie, Ze) => (
                          (Ie = Ke(Ie)),
                          (kt, It) => Ie((kt = void 0 === kt ? Ze : kt), It)
                        );
                      })(vn)(It, Nn)
                    : be(ln, vn)(It, Nn);
                return (kt[Kn] = Rn), kt;
              },
              {},
            );
            this.addReducers(Ze);
          }
          removeFeature(Ie) {
            this.removeFeatures([Ie]);
          }
          removeFeatures(Ie) {
            this.removeReducers(Ie.map(Ze => Ze.key));
          }
          addReducer(Ie, Ze) {
            this.addReducers({ [Ie]: Ze });
          }
          addReducers(Ie) {
            (this.reducers = { ...this.reducers, ...Ie }),
              this.updateReducers(Object.keys(Ie));
          }
          removeReducer(Ie) {
            this.removeReducers([Ie]);
          }
          removeReducers(Ie) {
            Ie.forEach(Ze => {
              this.reducers = (function He(q, Ke) {
                return Object.keys(q)
                  .filter(Ie => Ie !== Ke)
                  .reduce((Ie, Ze) => Object.assign(Ie, { [Ze]: q[Ze] }), {});
              })(this.reducers, Ze);
            }),
              this.updateReducers(Ie);
          }
          updateReducers(Ie) {
            this.next(this.reducerFactory(this.reducers, this.initialState)),
              this.dispatcher.next({
                type: '@ngrx/store/update-reducers',
                features: Ie,
              });
          }
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (q.ɵfac = function (Ie) {
            return new (Ie || q)(s.LFG(de), s.LFG(Ye), s.LFG(ut), s.LFG(rt));
          }),
          (q.ɵprov = s.Yz7({ token: q, factory: q.ɵfac })),
          q
        );
      })();
      const et = [
        fe,
        { provide: ke, useExisting: fe },
        { provide: de, useExisting: Ue },
      ];
      let Mt = (() => {
        class q extends oe.x {
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (q.ɵfac = (function () {
            let Ke;
            return function (Ze) {
              return (Ke || (Ke = s.n5z(q)))(Ze || q);
            };
          })()),
          (q.ɵprov = s.Yz7({ token: q, factory: q.ɵfac })),
          q
        );
      })();
      const Rt = [Mt];
      class Cn extends L.y {}
      let Oe = (() => {
        class q extends x.X {
          constructor(Ie, Ze, kt, It) {
            super(It);
            const vn = Ie.pipe((0, pe.Q)(le)).pipe(
                (function pt(...q) {
                  const Ke = (0, Le.jO)(q);
                  return (0, se.e)((Ie, Ze) => {
                    const kt = q.length,
                      It = new Array(kt);
                    let ln = q.map(() => !1),
                      vn = !1;
                    for (let Nn = 0; Nn < kt; Nn++)
                      (0, ze.Xf)(q[Nn]).subscribe(
                        (0, Be.x)(
                          Ze,
                          Kn => {
                            (It[Nn] = Kn),
                              !vn &&
                                !ln[Nn] &&
                                ((ln[Nn] = !0),
                                (vn = ln.every(st.y)) && (ln = null));
                          },
                          gt.Z,
                        ),
                      );
                    Ie.subscribe(
                      (0, Be.x)(Ze, Nn => {
                        if (vn) {
                          const Kn = [Nn, ...It];
                          Ze.next(Ke ? Ke(...Kn) : Kn);
                        }
                      }),
                    );
                  });
                })(Ze),
              ),
              Kn = vn.pipe((0, at.R)(bt, { state: It }));
            this.stateSubscription = Kn.subscribe(
              ({ state: Rn, action: vi }) => {
                this.next(Rn), kt.next(vi);
              },
            );
          }
          ngOnDestroy() {
            this.stateSubscription.unsubscribe(), this.complete();
          }
        }
        return (
          (q.INIT = Me),
          (q.ɵfac = function (Ie) {
            return new (Ie || q)(s.LFG(Ue), s.LFG(ke), s.LFG(Mt), s.LFG(Ye));
          }),
          (q.ɵprov = s.Yz7({ token: q, factory: q.ɵfac })),
          q
        );
      })();
      function bt(q = { state: void 0 }, [Ke, Ie]) {
        const { state: Ze } = q;
        return { state: Ie(Ze, Ke), action: Ke };
      }
      const Je = [Oe, { provide: Cn, useExisting: Oe }];
      let wt = (() => {
        class q extends L.y {
          constructor(Ie, Ze, kt) {
            super(),
              (this.actionsObserver = Ze),
              (this.reducerManager = kt),
              (this.source = Ie);
          }
          select(Ie, ...Ze) {
            return R.call(null, Ie, ...Ze)(this);
          }
          lift(Ie) {
            const Ze = new q(this, this.actionsObserver, this.reducerManager);
            return (Ze.operator = Ie), Ze;
          }
          dispatch(Ie) {
            this.actionsObserver.next(Ie);
          }
          next(Ie) {
            this.actionsObserver.next(Ie);
          }
          error(Ie) {
            this.actionsObserver.error(Ie);
          }
          complete() {
            this.actionsObserver.complete();
          }
          addReducer(Ie, Ze) {
            this.reducerManager.addReducer(Ie, Ze);
          }
          removeReducer(Ie) {
            this.reducerManager.removeReducer(Ie);
          }
        }
        return (
          (q.ɵfac = function (Ie) {
            return new (Ie || q)(s.LFG(Cn), s.LFG(Ue), s.LFG(fe));
          }),
          (q.ɵprov = s.Yz7({ token: q, factory: q.ɵfac })),
          q
        );
      })();
      const Te = [wt];
      function R(q, Ke, ...Ie) {
        return function (kt) {
          let It;
          if ('string' == typeof q) {
            const ln = [Ke, ...Ie].filter(Boolean);
            It = kt.pipe(
              (function xe(...q) {
                const Ke = q.length;
                if (0 === Ke)
                  throw new Error('list of properties cannot be empty.');
                return (0, vt.U)(Ie => {
                  let Ze = Ie;
                  for (let kt = 0; kt < Ke; kt++) {
                    const It = Ze?.[q[kt]];
                    if (!(typeof It < 'u')) return;
                    Ze = It;
                  }
                  return Ze;
                });
              })(q, ...ln),
            );
          } else {
            if ('function' != typeof q)
              throw new TypeError(
                `Unexpected type '${typeof q}' in select operator, expected 'string' or 'function'`,
              );
            It = kt.pipe((0, vt.U)(ln => q(ln, Ke)));
          }
          return It.pipe((0, ne.x)());
        };
      }
      const b = 'https://ngrx.io/guide/store/configuration/runtime-checks';
      function E(q) {
        return void 0 === q;
      }
      function V(q) {
        return null === q;
      }
      function Q(q) {
        return Array.isArray(q);
      }
      function zt(q) {
        return 'object' == typeof q && null !== q;
      }
      function Re(q) {
        return 'function' == typeof q;
      }
      function Zt(q, Ke) {
        return q === Ke;
      }
      function Ut(q, Ke = Zt, Ie = Zt) {
        let It,
          Ze = null,
          kt = null;
        return {
          memoized: function Kn() {
            if (void 0 !== It) return It.result;
            if (!Ze)
              return (kt = q.apply(null, arguments)), (Ze = arguments), kt;
            if (
              !(function _n(q, Ke, Ie) {
                for (let Ze = 0; Ze < q.length; Ze++)
                  if (!Ie(q[Ze], Ke[Ze])) return !0;
                return !1;
              })(arguments, Ze, Ke)
            )
              return kt;
            const Rn = q.apply(null, arguments);
            return (Ze = arguments), Ie(kt, Rn) ? kt : ((kt = Rn), Rn);
          },
          reset: function ln() {
            (Ze = null), (kt = null);
          },
          setResult: function vn(Rn) {
            It = { result: Rn };
          },
          clearResult: function Nn() {
            It = void 0;
          },
        };
      }
      function qn(...q) {
        return (function ir(q, Ke = { stateFn: Pn }) {
          return function (...Ie) {
            let Ze = Ie;
            if (Array.isArray(Ze[0])) {
              const [Rn, ...vi] = Ze;
              Ze = [...Rn, ...vi];
            } else
              1 === Ze.length &&
                (function Hi(q) {
                  return (
                    !!q &&
                    'object' == typeof q &&
                    Object.values(q).every(Ke => 'function' == typeof Ke)
                  );
                })(Ze[0]) &&
                (Ze = (function Si(q) {
                  const Ke = Object.values(q),
                    Ie = Object.keys(q);
                  return [
                    ...Ke,
                    (...kt) =>
                      Ie.reduce((It, ln, vn) => ({ ...It, [ln]: kt[vn] }), {}),
                  ];
                })(Ze[0]));
            const kt = Ze.slice(0, Ze.length - 1),
              It = Ze[Ze.length - 1],
              ln = kt.filter(
                Rn => Rn.release && 'function' == typeof Rn.release,
              ),
              vn = q(function (...Rn) {
                return It.apply(null, Rn);
              }),
              Nn = Ut(function (Rn, vi) {
                return Ke.stateFn.apply(null, [Rn, kt, vi, vn]);
              });
            return Object.assign(Nn.memoized, {
              release: function Kn() {
                Nn.reset(), vn.reset(), ln.forEach(Rn => Rn.release());
              },
              projector: vn.memoized,
              setResult: Nn.setResult,
              clearResult: Nn.clearResult,
            });
          };
        })(Ut)(...q);
      }
      function Pn(q, Ke, Ie, Ze) {
        if (void 0 === Ie) {
          const It = Ke.map(ln => ln(q));
          return Ze.memoized.apply(null, It);
        }
        const kt = Ke.map(It => It(q, Ie));
        return Ze.memoized.apply(null, [...kt, Ie]);
      }
      function ai(q) {
        return q instanceof s.OlP ? (0, s.f3M)(q) : q;
      }
      function hi(q, Ke) {
        return Ke.map((Ie, Ze) => {
          if (q[Ze] instanceof s.OlP) {
            const kt = (0, s.f3M)(q[Ze]);
            return {
              key: Ie.key,
              reducerFactory: kt.reducerFactory ? kt.reducerFactory : Ae,
              metaReducers: kt.metaReducers ? kt.metaReducers : [],
              initialState: kt.initialState,
            };
          }
          return Ie;
        });
      }
      function Xr(q) {
        return q.map(Ke => (Ke instanceof s.OlP ? (0, s.f3M)(Ke) : Ke));
      }
      function xi(q) {
        return 'function' == typeof q ? q() : q;
      }
      function gr(q, Ke) {
        return q.concat(Ke);
      }
      function mi() {
        if ((0, s.f3M)(wt, { optional: !0, skipSelf: !0 }))
          throw new TypeError(
            'The root Store has been provided more than once. Feature modules should provide feature states instead.',
          );
        return 'guarded';
      }
      function dn(q) {
        Object.freeze(q);
        const Ke = Re(q);
        return (
          Object.getOwnPropertyNames(q).forEach(Ie => {
            if (
              !Ie.startsWith('\u0275') &&
              (function K(q, Ke) {
                return Object.prototype.hasOwnProperty.call(q, Ke);
              })(q, Ie) &&
              (!Ke ||
                ('caller' !== Ie && 'callee' !== Ie && 'arguments' !== Ie))
            ) {
              const Ze = q[Ie];
              (zt(Ze) || Re(Ze)) && !Object.isFrozen(Ze) && dn(Ze);
            }
          }),
          q
        );
      }
      function fi(q, Ke = []) {
        return (E(q) || V(q)) && 0 === Ke.length
          ? { path: ['root'], value: q }
          : Object.keys(q).reduce((Ze, kt) => {
              if (Ze) return Ze;
              const It = q[kt];
              return (function Ce(q) {
                return Re(q) && q.hasOwnProperty('\u0275cmp');
              })(It)
                ? Ze
                : !(
                    E(It) ||
                    V(It) ||
                    (function Gt(q) {
                      return 'number' == typeof q;
                    })(It) ||
                    (function St(q) {
                      return 'boolean' == typeof q;
                    })(It) ||
                    (function We(q) {
                      return 'string' == typeof q;
                    })(It) ||
                    Q(It)
                  ) &&
                    ((function on(q) {
                      if (
                        !(function Bt(q) {
                          return zt(q) && !Q(q);
                        })(q)
                      )
                        return !1;
                      const Ke = Object.getPrototypeOf(q);
                      return Ke === Object.prototype || null === Ke;
                    })(It)
                      ? fi(It, [...Ke, kt])
                      : { path: [...Ke, kt], value: It });
            }, !1);
      }
      function Xn(q, Ke) {
        if (!1 === q) return;
        const Ie = q.path.join('.'),
          Ze = new Error(
            `Detected unserializable ${Ke} at "${Ie}". ${b}#strict${Ke}serializability`,
          );
        throw ((Ze.value = q.value), (Ze.unserializablePath = Ie), Ze);
      }
      function pi(q) {
        return (0, s.X6Q)()
          ? {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !0,
              strictActionImmutability: !0,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
              ...q,
            }
          : {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !1,
              strictActionImmutability: !1,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
            };
      }
      function An({
        strictActionSerializability: q,
        strictStateSerializability: Ke,
      }) {
        return Ie =>
          q || Ke
            ? (function Un(q, Ke) {
                return function (Ie, Ze) {
                  Ke.action(Ze) && Xn(fi(Ze), 'action');
                  const kt = q(Ie, Ze);
                  return Ke.state() && Xn(fi(kt), 'state'), kt;
                };
              })(Ie, { action: Ze => q && !_i(Ze), state: () => Ke })
            : Ie;
      }
      function gi({
        strictActionImmutability: q,
        strictStateImmutability: Ke,
      }) {
        return Ie =>
          q || Ke
            ? (function $t(q, Ke) {
                return function (Ie, Ze) {
                  const kt = Ke.action(Ze) ? dn(Ze) : Ze,
                    It = q(Ie, kt);
                  return Ke.state() ? dn(It) : It;
                };
              })(Ie, { action: Ze => q && !_i(Ze), state: () => Ke })
            : Ie;
      }
      function _i(q) {
        return q.type.startsWith('@ngrx');
      }
      function fn({ strictActionWithinNgZone: q }) {
        return Ke =>
          q
            ? (function Zn(q, Ke) {
                return function (Ie, Ze) {
                  if (Ke.action(Ze) && !s.R0b.isInAngularZone())
                    throw new Error(
                      `Action '${Ze.type}' running outside NgZone. ${b}#strictactionwithinngzone`,
                    );
                  return q(Ie, Ze);
                };
              })(Ke, { action: Ie => q && !_i(Ie) })
            : Ke;
      }
      function qi(q) {
        return [
          { provide: ht, useValue: q },
          { provide: xt, useFactory: _r, deps: [ht] },
          { provide: hn, deps: [xt], useFactory: pi },
          { provide: Dt, multi: !0, deps: [hn], useFactory: gi },
          { provide: Dt, multi: !0, deps: [hn], useFactory: An },
          { provide: Dt, multi: !0, deps: [hn], useFactory: fn },
        ];
      }
      function Ui() {
        return [{ provide: Xe, multi: !0, deps: [hn], useFactory: Ii }];
      }
      function _r(q) {
        return q;
      }
      function Ii(q) {
        if (!q.strictActionTypeUniqueness) return;
        const Ke = Object.entries(te)
          .filter(([, Ie]) => Ie > 1)
          .map(([Ie]) => Ie);
        if (Ke.length)
          throw new Error(
            `Action types are registered more than once, ${Ke.map(
              Ie => `"${Ie}"`,
            ).join(', ')}. ${b}#strictactiontypeuniqueness`,
          );
      }
      function ur(q = {}, Ke = {}) {
        return [
          { provide: Pe, useFactory: mi },
          { provide: a, useValue: Ke.initialState },
          { provide: Ye, useFactory: xi, deps: [a] },
          { provide: nt, useValue: q },
          { provide: Mn, useExisting: q instanceof s.OlP ? q : nt },
          { provide: ut, deps: [nt, [new s.tBr(Mn)]], useFactory: ai },
          { provide: wn, useValue: Ke.metaReducers ? Ke.metaReducers : [] },
          { provide: Jt, deps: [Dt, wn], useFactory: gr },
          { provide: je, useValue: Ke.reducerFactory ? Ke.reducerFactory : Ae },
          { provide: rt, deps: [je, Jt], useFactory: be },
          De,
          et,
          Rt,
          Je,
          Te,
          qi(Ke.runtimeChecks),
          Ui(),
        ];
      }
      function Ni(q, Ke, Ie = {}) {
        return [
          { provide: an, multi: !0, useValue: q instanceof Object ? {} : Ie },
          {
            provide: Lt,
            multi: !0,
            useValue: {
              key: q instanceof Object ? q.name : q,
              reducerFactory:
                Ie instanceof s.OlP || !Ie.reducerFactory
                  ? Ae
                  : Ie.reducerFactory,
              metaReducers:
                Ie instanceof s.OlP || !Ie.metaReducers ? [] : Ie.metaReducers,
              initialState:
                Ie instanceof s.OlP || !Ie.initialState
                  ? void 0
                  : Ie.initialState,
            },
          },
          { provide: Dn, deps: [an, Lt], useFactory: hi },
          {
            provide: un,
            multi: !0,
            useValue: q instanceof Object ? q.reducer : Ke,
          },
          {
            provide: Kt,
            multi: !0,
            useExisting: Ke instanceof s.OlP ? Ke : un,
          },
          {
            provide: mn,
            multi: !0,
            deps: [un, [new s.tBr(Kt)]],
            useFactory: Xr,
          },
          Ui(),
        ];
      }
      let Li = (() => {
          class q {
            constructor(Ie, Ze, kt, It, ln, vn) {}
          }
          return (
            (q.ɵfac = function (Ie) {
              return new (Ie || q)(
                s.LFG(Ue),
                s.LFG(ke),
                s.LFG(Mt),
                s.LFG(wt),
                s.LFG(Pe, 8),
                s.LFG(Xe, 8),
              );
            }),
            (q.ɵmod = s.oAB({ type: q })),
            (q.ɵinj = s.cJS({})),
            q
          );
        })(),
        kr = (() => {
          class q {
            constructor(Ie, Ze, kt, It, ln) {
              (this.features = Ie),
                (this.featureReducers = Ze),
                (this.reducerManager = kt);
              const vn = Ie.map((Nn, Kn) => {
                const vi = Ze.shift()[Kn];
                return {
                  ...Nn,
                  reducers: vi,
                  initialState: xi(Nn.initialState),
                };
              });
              kt.addFeatures(vn);
            }
            ngOnDestroy() {
              this.reducerManager.removeFeatures(this.features);
            }
          }
          return (
            (q.ɵfac = function (Ie) {
              return new (Ie || q)(
                s.LFG(Dn),
                s.LFG(mn),
                s.LFG(fe),
                s.LFG(Li),
                s.LFG(Xe, 8),
              );
            }),
            (q.ɵmod = s.oAB({ type: q })),
            (q.ɵinj = s.cJS({})),
            q
          );
        })(),
        rr = (() => {
          class q {
            static forRoot(Ie, Ze) {
              return { ngModule: Li, providers: [...ur(Ie, Ze)] };
            }
            static forFeature(Ie, Ze, kt = {}) {
              return { ngModule: kr, providers: [...Ni(Ie, Ze, kt)] };
            }
          }
          return (
            (q.ɵfac = function (Ie) {
              return new (Ie || q)();
            }),
            (q.ɵmod = s.oAB({ type: q })),
            (q.ɵinj = s.cJS({})),
            q
          );
        })();
      function Ki(...q) {
        return { reducer: q.pop(), types: q.map(Ze => Ze.type) };
      }
      function zi(q, ...Ke) {
        const Ie = new Map();
        for (const Ze of Ke)
          for (const kt of Ze.types) {
            const It = Ie.get(kt);
            Ie.set(
              kt,
              It ? (vn, Nn) => Ze.reducer(It(vn, Nn), Nn) : Ze.reducer,
            );
          }
        return function (Ze = q, kt) {
          const It = Ie.get(kt.type);
          return It ? It(Ze, kt) : Ze;
        };
      }
    },
  },
  Ot => {
    Ot((Ot.s = 4044));
  },
]);
