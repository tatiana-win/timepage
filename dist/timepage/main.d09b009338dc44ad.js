'use strict';
(self.webpackChunktimepage = self.webpackChunktimepage || []).push([
  [179],
  {
    568: (Tt, Pe, D) => {
      D.r(Pe), D.d(Pe, { AuthModule: () => an });
      var s = D(6895),
        x = D(8252),
        N = D(4006);
      class se {
        constructor(Zt, Ct, yt) {
          (this.name = Zt), (this.description = Ct), (this.rules = yt);
        }
      }
      const _e = /^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/,
        ce = {
          LOGIN: [N.kI.required, N.kI.minLength(6)],
          PASS: [N.kI.required, N.kI.minLength(6)],
          EMAIL: [N.kI.pattern(_e)],
          EMAIL_REQUIRED: [N.kI.required, N.kI.pattern(_e)],
        },
        he = ['dirty'],
        ae = {
          required: new se('required', 'Required field', [...he]),
          email: new se('pattern', 'Email is incorrect', [...he]),
          repass: new se('repass', "Passwords don't match", ['dirty']),
          minLength: ut =>
            new se('minlength', `Minimal length is ${ut} symbols`, [...he]),
          maxLength: ut =>
            new se('maxlength', `Maximum length of ${ut} symbols is exceeded`, [
              ...he,
            ]),
          pattern: ut =>
            new se('pattern', `Field must satisfy to pattern: ${ut}`, [...he]),
        },
        fe = {
          LOGIN: [ae.required, ae.minLength(6)],
          EMAIL: [ae.email],
          EMAIL_REQUIRED: [ae.required, ae.email],
          PASS: [ae.required, ae.minLength(6)],
          REPASS: [
            ae.required,
            ae.pattern('\u0441\u0442\u0440\u043e\u043a\u0438'),
            ae.repass,
          ],
        };
      function re(ut) {
        const { pass: Zt, repass: Ct } = ut.controls;
        return (
          Zt.value && Ct.value && Zt.value !== Ct.value
            ? Ct.setErrors({ repass: !0, ...Ct.errors })
            : Ct.errors &&
              'repass' in Ct.errors &&
              Ct.setErrors(
                Object.keys(Ct.errors).length > 0 ? Ct.errors : null,
              ),
          null
        );
      }
      var He = D(6054),
        Ue = D(1831);
      const rt = ut => ut.auth,
        pt = (0, Ue.P1)(rt, ut => ut.loading),
        Ne = (0, Ue.P1)(rt, ut => ut.registrationLogin),
        ft = (0, Ue.P1)(rt, ut => ut.isAuth),
        st = (0, Ue.P1)(rt, ut => ut.error);
      var mt = D(9300),
        K = D(4650),
        ie = D(7009),
        ee = D(9549),
        X = D(4144),
        Ae = D(4859);
      function nt(ut, Zt) {
        if ((1 & ut && (K.TgZ(0, 'span', 3), K._uU(1), K.qZA()), 2 & ut)) {
          const Ct = K.oxw().$implicit;
          K.xp6(1), K.hij(' ', Ct.description, ' ');
        }
      }
      function dt(ut, Zt) {
        if (
          (1 & ut && (K.ynx(0), K.YNc(1, nt, 2, 1, 'span', 2), K.BQk()), 2 & ut)
        ) {
          const Ct = Zt.$implicit,
            yt = K.oxw();
          K.xp6(1),
            K.Q6J(
              'ngIf',
              yt.control.hasError(Ct.name) && yt.isRulesApplied(Ct),
            );
        }
      }
      let At = (() => {
        class ut {
          isRulesApplied(Ct) {
            return Ct.rules.every(yt => this.control[yt]);
          }
        }
        return (
          (ut.ɵfac = function (Ct) {
            return new (Ct || ut)();
          }),
          (ut.ɵcmp = K.Xpm({
            type: ut,
            selectors: [['app-input-error']],
            inputs: { form: 'form', control: 'control', errors: 'errors' },
            decls: 2,
            vars: 2,
            consts: [
              [1, 'error', 3, 'formGroup'],
              [4, 'ngFor', 'ngForOf'],
              ['class', 'error', 4, 'ngIf'],
              [1, 'error'],
            ],
            template: function (Ct, yt) {
              1 & Ct &&
                (K.ynx(0, 0), K.YNc(1, dt, 2, 1, 'ng-container', 1), K.BQk()),
                2 & Ct &&
                  (K.Q6J('formGroup', yt.form),
                  K.xp6(1),
                  K.Q6J('ngForOf', yt.errors));
            },
            dependencies: [s.sg, s.O5, N.JL, N.sg],
            styles: [
              '[_nghost-%COMP%]{display:block;margin-bottom:11px;margin-top:-22px;height:14px}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{font-size:11px;color:#e00052}',
            ],
          })),
          ut
        );
      })();
      const wt = [
        {
          path: 'signup',
          component: (() => {
            class ut {
              constructor(Ct, yt, Qt, dn) {
                (this.fb = Ct),
                  (this.store = yt),
                  (this.router = Qt),
                  (this.snackBar = dn),
                  (this.loading = !1),
                  (this.regForm = this.fb.group(
                    {
                      username: ['', ce.LOGIN],
                      email: ['', ce.EMAIL_REQUIRED],
                      pass: ['', ce.PASS],
                      repass: ['', ce.PASS],
                    },
                    { validators: re, updateOn: 'change' },
                  )),
                  (this.errors = {
                    username: fe.LOGIN,
                    email: fe.EMAIL_REQUIRED,
                    pass: fe.PASS,
                    repass: fe.REPASS,
                  }),
                  (this.loadingSubscription = this.store
                    .select(pt)
                    .subscribe(wn => (this.loading = wn))),
                  (this.registrationSubscrption = this.store
                    .select(Ne)
                    .pipe((0, mt.h)(Boolean))
                    .subscribe(() => {
                      this.snackBar.open(
                        'Account has been successfully created',
                        void 0,
                        { duration: 3e3 },
                      ),
                        this.router.navigate(['/auth/signin']);
                    })),
                  (this.errorSubscription = this.store
                    .select(st)
                    .pipe((0, mt.h)(Boolean))
                    .subscribe(wn => {
                      this.snackBar.open(wn, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, He.E)()),
                  this.loadingSubscription.unsubscribe(),
                  this.registrationSubscrption.unsubscribe(),
                  this.errorSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.regForm.invalid;
              }
              onRegistration() {
                const {
                  username: Ct,
                  email: yt,
                  pass: Qt,
                } = this.regForm.value;
                Ct &&
                  yt &&
                  Qt &&
                  this.store.dispatch(
                    (0, He.y1)({ username: Ct, email: yt, password: Qt }),
                  );
              }
            }
            return (
              (ut.ɵfac = function (Ct) {
                return new (Ct || ut)(
                  K.Y36(N.qu),
                  K.Y36(Ue.yh),
                  K.Y36(x.F0),
                  K.Y36(ie.ux),
                );
              }),
              (ut.ɵcmp = K.Xpm({
                type: ut,
                selectors: [['app-signup']],
                decls: 32,
                vars: 18,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'data-testid',
                    'username-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'email',
                    'data-testid',
                    'email',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'email-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'password-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'repass',
                    3,
                    'formControl',
                  ],
                  [
                    'data-testid',
                    'repass-errors',
                    3,
                    'form',
                    'control',
                    'errors',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signup',
                    1,
                    'signup-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'signup-block'],
                  [
                    'routerLink',
                    '/auth/signin',
                    'data-testid',
                    'signin',
                    1,
                    'signup-login',
                    'link',
                  ],
                ],
                template: function (Ct, yt) {
                  1 & Ct &&
                    (K.TgZ(0, 'div', 0)(1, 'header', 1),
                    K._uU(2, 'Sign Up'),
                    K.qZA(),
                    K.TgZ(3, 'form', 2),
                    K.NdJ('keydown.enter', function () {
                      return !yt.isDisabled && yt.onRegistration();
                    }),
                    K.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    K._uU(6, 'Username'),
                    K.qZA(),
                    K._UZ(7, 'input', 3),
                    K.qZA(),
                    K._UZ(8, 'app-input-error', 4),
                    K.TgZ(9, 'mat-form-field')(10, 'mat-label'),
                    K._uU(11, 'Email'),
                    K.qZA(),
                    K._UZ(12, 'input', 5),
                    K.qZA(),
                    K._UZ(13, 'app-input-error', 6),
                    K.TgZ(14, 'mat-form-field')(15, 'mat-label'),
                    K._uU(16, 'Password'),
                    K.qZA(),
                    K._UZ(17, 'input', 7),
                    K.qZA(),
                    K._UZ(18, 'app-input-error', 8),
                    K.TgZ(19, 'mat-form-field')(20, 'mat-label'),
                    K._uU(21, 'Repeat password'),
                    K.qZA(),
                    K._UZ(22, 'input', 9),
                    K.qZA(),
                    K._UZ(23, 'app-input-error', 10),
                    K.TgZ(24, 'button', 11),
                    K.NdJ('click', function () {
                      return yt.onRegistration();
                    }),
                    K._uU(25, ' Sign Up '),
                    K.qZA(),
                    K._UZ(26, 'div', 12),
                    K.TgZ(27, 'div', 13)(28, 'span'),
                    K._uU(29, 'Do you have an account?'),
                    K.qZA(),
                    K.TgZ(30, 'a', 14),
                    K._uU(31, 'Sign In'),
                    K.qZA()()()()),
                    2 & Ct &&
                      (K.xp6(3),
                      K.Q6J('formGroup', yt.regForm),
                      K.xp6(4),
                      K.Q6J('formControl', yt.regForm.controls.username),
                      K.xp6(1),
                      K.Q6J('form', yt.regForm)(
                        'control',
                        yt.regForm.controls.username,
                      )('errors', yt.errors.username),
                      K.xp6(4),
                      K.Q6J('formControl', yt.regForm.controls.email),
                      K.xp6(1),
                      K.Q6J('form', yt.regForm)(
                        'control',
                        yt.regForm.controls.email,
                      )('errors', yt.errors.email),
                      K.xp6(4),
                      K.Q6J('formControl', yt.regForm.controls.pass),
                      K.xp6(1),
                      K.Q6J('form', yt.regForm)(
                        'control',
                        yt.regForm.controls.pass,
                      )('errors', yt.errors.pass),
                      K.xp6(4),
                      K.Q6J('formControl', yt.regForm.controls.repass),
                      K.xp6(1),
                      K.Q6J('form', yt.regForm)(
                        'control',
                        yt.regForm.controls.repass,
                      )('errors', yt.errors.repass),
                      K.xp6(1),
                      K.Q6J('disabled', yt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ee.KE,
                  ee.hX,
                  X.Nt,
                  Ae.lW,
                  N._Y,
                  N.Fj,
                  N.JJ,
                  N.JL,
                  N.oH,
                  N.sg,
                  At,
                ],
                styles: [
                  '.signup-button[_ngcontent-%COMP%]{display:flex}.signup-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.signup-login[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              ut
            );
          })(),
        },
        {
          path: 'signin',
          component: (() => {
            class ut {
              constructor(Ct, yt, Qt, dn) {
                (this.fb = Ct),
                  (this.store = yt),
                  (this.router = Qt),
                  (this.snackBar = dn),
                  (this.loading = !1),
                  (this.logInForm = this.fb.group({
                    username: ['', [N.kI.required]],
                    pass: ['', [N.kI.required]],
                  })),
                  (this.loadingSubscription = this.store
                    .select(pt)
                    .subscribe(wn => (this.loading = wn))),
                  (this.errorSubscription = this.store
                    .select(st)
                    .pipe((0, mt.h)(Boolean))
                    .subscribe(wn => {
                      this.snackBar.open(wn, void 0, { duration: 5e3 });
                    })),
                  (this.isAuthSubscription = this.store
                    .select(ft)
                    .pipe((0, mt.h)(Boolean))
                    .subscribe(wn => {
                      this.router.navigate(['/calendar']);
                    }));
              }
              ngOnDestroy() {
                this.store.dispatch((0, He.DH)()),
                  this.errorSubscription.unsubscribe(),
                  this.loadingSubscription.unsubscribe(),
                  this.isAuthSubscription.unsubscribe();
              }
              get isDisabled() {
                return this.loading || this.logInForm.invalid;
              }
              onLogin() {
                const { username: Ct, pass: yt } = this.logInForm.value;
                Ct &&
                  yt &&
                  this.store.dispatch(
                    (0, He.zB)({ username: Ct, password: yt }),
                  );
              }
            }
            return (
              (ut.ɵfac = function (Ct) {
                return new (Ct || ut)(
                  K.Y36(N.qu),
                  K.Y36(Ue.yh),
                  K.Y36(x.F0),
                  K.Y36(ie.ux),
                );
              }),
              (ut.ɵcmp = K.Xpm({
                type: ut,
                selectors: [['app-signin']],
                decls: 20,
                vars: 4,
                consts: [
                  [1, 'page'],
                  ['data-testid', 'title', 1, 'title'],
                  [
                    'novalidate',
                    '',
                    1,
                    'form',
                    3,
                    'formGroup',
                    'keydown.enter',
                  ],
                  ['matInput', '', 'data-testid', 'username', 3, 'formControl'],
                  [
                    'matInput',
                    '',
                    'type',
                    'password',
                    'data-testid',
                    'password',
                    3,
                    'formControl',
                  ],
                  [
                    'color',
                    'primary',
                    'mat-raised-button',
                    '',
                    'data-testid',
                    'signin',
                    1,
                    'login-button',
                    3,
                    'disabled',
                    'click',
                  ],
                  [1, 'divider'],
                  [1, 'login-block'],
                  [
                    'routerLink',
                    '/auth/signup',
                    'data-testid',
                    'signup',
                    1,
                    'login-registration',
                    'link',
                  ],
                ],
                template: function (Ct, yt) {
                  1 & Ct &&
                    (K.TgZ(0, 'div', 0)(1, 'header', 1),
                    K._uU(2, 'Sign In'),
                    K.qZA(),
                    K.TgZ(3, 'form', 2),
                    K.NdJ('keydown.enter', function () {
                      return !yt.isDisabled && yt.onLogin();
                    }),
                    K.TgZ(4, 'mat-form-field')(5, 'mat-label'),
                    K._uU(6, 'Username'),
                    K.qZA(),
                    K._UZ(7, 'input', 3),
                    K.qZA(),
                    K.TgZ(8, 'mat-form-field')(9, 'mat-label'),
                    K._uU(10, 'Password'),
                    K.qZA(),
                    K._UZ(11, 'input', 4),
                    K.qZA(),
                    K.TgZ(12, 'button', 5),
                    K.NdJ('click', function () {
                      return yt.onLogin();
                    }),
                    K._uU(13, ' Sign In '),
                    K.qZA(),
                    K._UZ(14, 'div', 6),
                    K.TgZ(15, 'div', 7)(16, 'span'),
                    K._uU(17, "Don't have an account?"),
                    K.qZA(),
                    K.TgZ(18, 'a', 8),
                    K._uU(19, 'Sign Up'),
                    K.qZA()()()()),
                    2 & Ct &&
                      (K.xp6(3),
                      K.Q6J('formGroup', yt.logInForm),
                      K.xp6(4),
                      K.Q6J('formControl', yt.logInForm.controls.username),
                      K.xp6(4),
                      K.Q6J('formControl', yt.logInForm.controls.pass),
                      K.xp6(1),
                      K.Q6J('disabled', yt.isDisabled));
                },
                dependencies: [
                  x.rH,
                  ee.KE,
                  ee.hX,
                  X.Nt,
                  Ae.lW,
                  N._Y,
                  N.Fj,
                  N.JJ,
                  N.JL,
                  N.oH,
                  N.sg,
                ],
                styles: [
                  '.login-button[_ngcontent-%COMP%]{display:flex}.login-block[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.login-registration[_ngcontent-%COMP%]{margin-left:12px}',
                ],
              })),
              ut
            );
          })(),
        },
      ];
      let Ge = (() => {
        class ut {}
        return (
          (ut.ɵfac = function (Ct) {
            return new (Ct || ut)();
          }),
          (ut.ɵmod = K.oAB({ type: ut })),
          (ut.ɵinj = K.cJS({ imports: [x.Bz.forChild(wt), x.Bz] })),
          ut
        );
      })();
      var Ye = D(2542),
        xe = D(8776),
        je = D(4004),
        ye = D(9646),
        Re = D(6129),
        Le = D(262);
      let a = (() => {
        class ut {
          constructor(Ct, yt) {
            (this.actions$ = Ct),
              (this.authService = yt),
              (this.signUp$ = (0, xe.GW)(() =>
                this.actions$.pipe(
                  (0, xe.l4)(He.y1.type),
                  (0, Re.z)(({ username: Qt, email: dn, password: wn }) =>
                    this.authService.register(Qt, dn, wn).pipe(
                      (0, je.U)(() => (0, He.pV)({ login: Qt })),
                      (0, Le.K)(Zn =>
                        (0, ye.of)(
                          (0, He.wq)({
                            error: Zn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.login$ = (0, xe.GW)(() =>
                this.actions$.pipe(
                  (0, xe.l4)(He.zB.type),
                  (0, Re.z)(({ username: Qt, password: dn }) =>
                    this.authService.login(Qt, dn).pipe(
                      (0, je.U)(() => (0, He.he)()),
                      (0, Le.K)(wn =>
                        (0, ye.of)(
                          (0, He.wq)({
                            error: wn?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.logout$ = (0, xe.GW)(() =>
                this.actions$.pipe(
                  (0, xe.l4)(He.kS.type),
                  (0, Re.z)(() =>
                    this.authService.logout().pipe(
                      (0, je.U)(() => (0, He.wq)({ error: '' })),
                      (0, Le.K)(Qt =>
                        (0, ye.of)(
                          (0, He.wq)({
                            error: Qt?.error?.message || 'Unknown error',
                          }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (ut.ɵfac = function (Ct) {
            return new (Ct || ut)(K.LFG(xe.eX), K.LFG(Ye.e));
          }),
          (ut.ɵprov = K.Yz7({ token: ut, factory: ut.ɵfac })),
          ut
        );
      })();
      const Ke = (0, Ue.Lq)(
        { loading: !1, registrationLogin: '', isAuth: !1 },
        (0, Ue.on)(He.y1, ut => ({ ...ut, error: void 0, loading: !0 })),
        (0, Ue.on)(He.zB, ut => ({ ...ut, error: void 0, loading: !0 })),
        (0, Ue.on)(He.wq, (ut, { error: Zt }) => ({
          ...ut,
          error: Zt,
          loading: !1,
        })),
        (0, Ue.on)(He.pV, (ut, { login: Zt }) => ({
          ...ut,
          error: void 0,
          loading: !1,
          registrationLogin: Zt,
        })),
        (0, Ue.on)(He.he, ut => ({
          ...ut,
          error: void 0,
          loading: !1,
          isAuth: !0,
        })),
        (0, Ue.on)(He.E, ut => ({
          ...ut,
          error: void 0,
          loading: !1,
          registrationLogin: '',
        })),
        (0, Ue.on)(He.DH, ut => ({
          ...ut,
          error: void 0,
          loading: !1,
          isAuth: !1,
        })),
      );
      var Lt = D(529);
      let Be = (() => {
        class ut {}
        return (
          (ut.ɵfac = function (Ct) {
            return new (Ct || ut)();
          }),
          (ut.ɵmod = K.oAB({ type: ut })),
          (ut.ɵinj = K.cJS({ imports: [s.ez, N.u5, N.UX, ee.lN, X.c] })),
          ut
        );
      })();
      var Pt = D(3238);
      let an = (() => {
        class ut {}
        return (
          (ut.ɵfac = function (Ct) {
            return new (Ct || ut)();
          }),
          (ut.ɵmod = K.oAB({ type: ut })),
          (ut.ɵinj = K.cJS({
            providers: [Ye.e, { provide: Pt.rD, useClass: Pt.hu }],
            imports: [
              s.ez,
              Ge,
              ee.lN,
              X.c,
              Ae.ot,
              N.u5,
              N.UX,
              xe.sQ.forFeature([a]),
              Ue.Aw.forFeature('auth', Ke),
              Lt.JF,
              ie.ZX,
              Be,
            ],
          })),
          ut
        );
      })();
    },
    2542: (Tt, Pe, D) => {
      D.d(Pe, { e: () => _e });
      var s = D(529),
        x = D(4004),
        N = D(3835),
        se = D(4650),
        te = D(8252);
      const ue = { headers: new s.WM({ 'Content-Type': 'application/json' }) };
      let _e = (() => {
        class ce {
          constructor(ae, fe) {
            (this.http = ae), (this.router = fe);
          }
          register(ae, fe, re) {
            return this.http.post(
              `${N.k.apiUrl}/auth/signup`,
              { username: ae, email: fe, password: re },
              ue,
            );
          }
          login(ae, fe) {
            return this.http
              .post(
                `${N.k.apiUrl}/auth/signin`,
                { username: ae, password: fe },
                ue,
              )
              .pipe(
                (0, x.U)(
                  ({ accessToken: re }) => (
                    localStorage.setItem('token', re), re
                  ),
                ),
              );
          }
          logout() {
            return this.http.post(`${N.k.apiUrl}/auth/signout`, {}).pipe(
              (0, x.U)(() => {
                localStorage.removeItem('token'),
                  this.router.navigate(['/auth/signin']);
              }),
            );
          }
        }
        return (
          (ce.ɵfac = function (ae) {
            return new (ae || ce)(se.LFG(s.eN), se.LFG(te.F0));
          }),
          (ce.ɵprov = se.Yz7({
            token: ce,
            factory: ce.ɵfac,
            providedIn: 'root',
          })),
          ce
        );
      })();
    },
    6054: (Tt, Pe, D) => {
      D.d(Pe, {
        DH: () => ce,
        E: () => _e,
        he: () => ue,
        kS: () => he,
        pV: () => te,
        wq: () => se,
        y1: () => N,
        zB: () => x,
      });
      var s = D(1831);
      const x = (0, s.PH)('[Auth] SignIn', (0, s.Ky)()),
        N = (0, s.PH)('[Auth] SignUp', (0, s.Ky)()),
        se = (0, s.PH)('[Auth] Error', (0, s.Ky)()),
        te = (0, s.PH)('[Auth] Register Success', (0, s.Ky)()),
        ue = (0, s.PH)('[Auth] Login Success'),
        _e = (0, s.PH)('[Auth] Clear Registration Login'),
        ce = (0, s.PH)('[Auth] Clear Auth'),
        he = (0, s.PH)('[Auth] Logout');
    },
    4653: (Tt, Pe, D) => {
      D.r(Pe), D.d(Pe, { CalendarModule: () => Ql });
      var s = D(6895),
        x = D(8252),
        N = D(1831);
      const se = (0, N.PH)('[Calendar] Load Calendar Notes', (0, N.Ky)()),
        te = (0, N.PH)('[Calendar] Load Todo Notes'),
        ue = (0, N.PH)('[Calendar] Calendar Notes Loaded', (0, N.Ky)()),
        _e = (0, N.PH)('[Calendar] Todo Notes Loaded', (0, N.Ky)()),
        ce = (0, N.PH)('[Calendar] Load Notes Error', (0, N.Ky)()),
        he = (0, N.PH)('[Calendar] Create Note', (0, N.Ky)()),
        ae = (0, N.PH)('[Calendar] Update Note', (0, N.Ky)()),
        fe = (0, N.PH)('[Calendar] Delete Note', (0, N.Ky)()),
        re = (0, N.PH)('[Calendar] Request Succeded'),
        He = (0, N.PH)('[Calendar] Reset Request Succeded'),
        Ue = (0, N.PH)('[Calendar] Update Min Rows Count', (0, N.Ky)()),
        rt = _ => {
          const F = _.getDay(),
            r = new Date(_);
          return r.setDate(_.getDate() - F + 1), r;
        },
        pt = _ => {
          const F = rt(_),
            r = new Date(F);
          return r.setDate(F.getDate() + 6), r;
        },
        Ne = (_, F) => {
          const r = new Date(_);
          return r.setDate(_.getDate() - F), r;
        },
        ft = (_, F) => {
          const r = new Date(_);
          return r.setDate(_.getDate() + F), r;
        },
        mt = [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        K = ['San', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        ie = _ => (_ < 10 ? `0${_}` : _),
        ee = _ =>
          `${_.getFullYear()}-${ie(_.getMonth() + 1)}-${ie(_.getDate())}`,
        dt = _ =>
          `${_.getFullYear()}-${ie(_.getMonth() + 1)}-${ie(
            _.getDate(),
          )}T01:00:00.000Z`;
      var At = D(9300);
      const _t = _ => _.calendar,
        Ge =
          ((0, N.P1)(_t, _ => _.loading),
          (0, N.P1)(_t, _ => _.calendarNotes),
          (0, N.P1)(_t, _ => _.todoNotes)),
        Ye = (0, N.P1)(_t, _ => _.error),
        je =
          ((0, N.P1)(_t, _ => _.loaded), (0, N.P1)(_t, _ => _.requestSuccess)),
        ye = (0, N.P1)(_t, (_, F) => _.calendarNotes && _.calendarNotes[F]),
        Re = (0, N.P1)(_t, _ => _.minRowsCount);
      var Le = D(6054),
        a = D(4650),
        ot = D(7009),
        Ke = D(2542),
        Lt = D(4859),
        Be = D(3238),
        Pt = D(1281),
        an = D(9646),
        ut = D(2843),
        Zt = D(4128),
        Ct = D(727),
        yt = D(8505),
        Qt = D(4004),
        dn = D(262),
        wn = D(8746),
        Zn = D(3099),
        en = D(5698),
        Bt = D(529),
        Rn = D(1481);
      const it = ['*'];
      let W;
      function Me(_) {
        return (
          (function ne() {
            if (void 0 === W && ((W = null), typeof window < 'u')) {
              const _ = window;
              void 0 !== _.trustedTypes &&
                (W = _.trustedTypes.createPolicy('angular#components', {
                  createHTML: F => F,
                }));
            }
            return W;
          })()?.createHTML(_) || _
        );
      }
      function ze(_) {
        return Error(`Unable to find icon with the name "${_}"`);
      }
      function be(_) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${_}".`,
        );
      }
      function U(_) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${_}".`,
        );
      }
      class Ie {
        constructor(F, r, c) {
          (this.url = F), (this.svgText = r), (this.options = c);
        }
      }
      let de = (() => {
        class _ {
          constructor(r, c, g, T) {
            (this._httpClient = r),
              (this._sanitizer = c),
              (this._errorHandler = T),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                'material-icons',
                'mat-ligature-font',
              ]),
              (this._document = g);
          }
          addSvgIcon(r, c, g) {
            return this.addSvgIconInNamespace('', r, c, g);
          }
          addSvgIconLiteral(r, c, g) {
            return this.addSvgIconLiteralInNamespace('', r, c, g);
          }
          addSvgIconInNamespace(r, c, g, T) {
            return this._addSvgIconConfig(r, c, new Ie(g, null, T));
          }
          addSvgIconResolver(r) {
            return this._resolvers.push(r), this;
          }
          addSvgIconLiteralInNamespace(r, c, g, T) {
            const ge = this._sanitizer.sanitize(a.q3G.HTML, g);
            if (!ge) throw U(g);
            const lt = Me(ge);
            return this._addSvgIconConfig(r, c, new Ie('', lt, T));
          }
          addSvgIconSet(r, c) {
            return this.addSvgIconSetInNamespace('', r, c);
          }
          addSvgIconSetLiteral(r, c) {
            return this.addSvgIconSetLiteralInNamespace('', r, c);
          }
          addSvgIconSetInNamespace(r, c, g) {
            return this._addSvgIconSetConfig(r, new Ie(c, null, g));
          }
          addSvgIconSetLiteralInNamespace(r, c, g) {
            const T = this._sanitizer.sanitize(a.q3G.HTML, c);
            if (!T) throw U(c);
            const ge = Me(T);
            return this._addSvgIconSetConfig(r, new Ie('', ge, g));
          }
          registerFontClassAlias(r, c = r) {
            return this._fontCssClassesByAlias.set(r, c), this;
          }
          classNameForFontAlias(r) {
            return this._fontCssClassesByAlias.get(r) || r;
          }
          setDefaultFontSetClass(...r) {
            return (this._defaultFontSetClass = r), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(r) {
            const c = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, r);
            if (!c) throw be(r);
            const g = this._cachedIconsByUrl.get(c);
            return g
              ? (0, an.of)(Xe(g))
              : this._loadSvgIconFromConfig(new Ie(r, null)).pipe(
                  (0, yt.b)(T => this._cachedIconsByUrl.set(c, T)),
                  (0, Qt.U)(T => Xe(T)),
                );
          }
          getNamedSvgIcon(r, c = '') {
            const g = xt(c, r);
            let T = this._svgIconConfigs.get(g);
            if (T) return this._getSvgFromConfig(T);
            if (((T = this._getIconConfigFromResolvers(c, r)), T))
              return this._svgIconConfigs.set(g, T), this._getSvgFromConfig(T);
            const ge = this._iconSetConfigs.get(c);
            return ge
              ? this._getSvgFromIconSetConfigs(r, ge)
              : (0, ut._)(ze(g));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(r) {
            return r.svgText
              ? (0, an.of)(Xe(this._svgElementFromConfig(r)))
              : this._loadSvgIconFromConfig(r).pipe((0, Qt.U)(c => Xe(c)));
          }
          _getSvgFromIconSetConfigs(r, c) {
            const g = this._extractIconWithNameFromAnySet(r, c);
            if (g) return (0, an.of)(g);
            const T = c
              .filter(ge => !ge.svgText)
              .map(ge =>
                this._loadSvgIconSetFromConfig(ge).pipe(
                  (0, dn.K)(lt => {
                    const In = `Loading icon set URL: ${this._sanitizer.sanitize(
                      a.q3G.RESOURCE_URL,
                      ge.url,
                    )} failed: ${lt.message}`;
                    return (
                      this._errorHandler.handleError(new Error(In)),
                      (0, an.of)(null)
                    );
                  }),
                ),
              );
            return (0, Zt.D)(T).pipe(
              (0, Qt.U)(() => {
                const ge = this._extractIconWithNameFromAnySet(r, c);
                if (!ge) throw ze(r);
                return ge;
              }),
            );
          }
          _extractIconWithNameFromAnySet(r, c) {
            for (let g = c.length - 1; g >= 0; g--) {
              const T = c[g];
              if (T.svgText && T.svgText.toString().indexOf(r) > -1) {
                const ge = this._svgElementFromConfig(T),
                  lt = this._extractSvgIconFromSet(ge, r, T.options);
                if (lt) return lt;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(r) {
            return this._fetchIcon(r).pipe(
              (0, yt.b)(c => (r.svgText = c)),
              (0, Qt.U)(() => this._svgElementFromConfig(r)),
            );
          }
          _loadSvgIconSetFromConfig(r) {
            return r.svgText
              ? (0, an.of)(null)
              : this._fetchIcon(r).pipe((0, yt.b)(c => (r.svgText = c)));
          }
          _extractSvgIconFromSet(r, c, g) {
            const T = r.querySelector(`[id="${c}"]`);
            if (!T) return null;
            const ge = T.cloneNode(!0);
            if ((ge.removeAttribute('id'), 'svg' === ge.nodeName.toLowerCase()))
              return this._setSvgAttributes(ge, g);
            if ('symbol' === ge.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(ge), g);
            const lt = this._svgElementFromString(Me('<svg></svg>'));
            return lt.appendChild(ge), this._setSvgAttributes(lt, g);
          }
          _svgElementFromString(r) {
            const c = this._document.createElement('DIV');
            c.innerHTML = r;
            const g = c.querySelector('svg');
            if (!g) throw Error('<svg> tag not found');
            return g;
          }
          _toSvgElement(r) {
            const c = this._svgElementFromString(Me('<svg></svg>')),
              g = r.attributes;
            for (let T = 0; T < g.length; T++) {
              const { name: ge, value: lt } = g[T];
              'id' !== ge && c.setAttribute(ge, lt);
            }
            for (let T = 0; T < r.childNodes.length; T++)
              r.childNodes[T].nodeType === this._document.ELEMENT_NODE &&
                c.appendChild(r.childNodes[T].cloneNode(!0));
            return c;
          }
          _setSvgAttributes(r, c) {
            return (
              r.setAttribute('fit', ''),
              r.setAttribute('height', '100%'),
              r.setAttribute('width', '100%'),
              r.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              r.setAttribute('focusable', 'false'),
              c && c.viewBox && r.setAttribute('viewBox', c.viewBox),
              r
            );
          }
          _fetchIcon(r) {
            const { url: c, options: g } = r,
              T = g?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function ve() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.',
                );
              })();
            if (null == c) throw Error(`Cannot fetch icon from URL "${c}".`);
            const ge = this._sanitizer.sanitize(a.q3G.RESOURCE_URL, c);
            if (!ge) throw be(c);
            const lt = this._inProgressUrlFetches.get(ge);
            if (lt) return lt;
            const ln = this._httpClient
              .get(ge, { responseType: 'text', withCredentials: T })
              .pipe(
                (0, Qt.U)(In => Me(In)),
                (0, wn.x)(() => this._inProgressUrlFetches.delete(ge)),
                (0, Zn.B)(),
              );
            return this._inProgressUrlFetches.set(ge, ln), ln;
          }
          _addSvgIconConfig(r, c, g) {
            return this._svgIconConfigs.set(xt(r, c), g), this;
          }
          _addSvgIconSetConfig(r, c) {
            const g = this._iconSetConfigs.get(r);
            return g ? g.push(c) : this._iconSetConfigs.set(r, [c]), this;
          }
          _svgElementFromConfig(r) {
            if (!r.svgElement) {
              const c = this._svgElementFromString(r.svgText);
              this._setSvgAttributes(c, r.options), (r.svgElement = c);
            }
            return r.svgElement;
          }
          _getIconConfigFromResolvers(r, c) {
            for (let g = 0; g < this._resolvers.length; g++) {
              const T = this._resolvers[g](c, r);
              if (T)
                return Ot(T) ? new Ie(T.url, null, T.options) : new Ie(T, null);
            }
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.LFG(Bt.eN, 8),
              a.LFG(Rn.H7),
              a.LFG(s.K0, 8),
              a.LFG(a.qLn),
            );
          }),
          (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac, providedIn: 'root' })),
          _
        );
      })();
      function Xe(_) {
        return _.cloneNode(!0);
      }
      function xt(_, F) {
        return _ + ':' + F;
      }
      function Ot(_) {
        return !(!_.url || !_.options);
      }
      const Dn = (0, Be.pj)(
          class {
            constructor(_) {
              this._elementRef = _;
            }
          },
        ),
        Te = new a.OlP('MAT_ICON_DEFAULT_OPTIONS'),
        vt = new a.OlP('mat-icon-location', {
          providedIn: 'root',
          factory: function Je() {
            const _ = (0, a.f3M)(s.K0),
              F = _ ? _.location : null;
            return { getPathname: () => (F ? F.pathname + F.search : '') };
          },
        }),
        Et = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        ke = Et.map(_ => `[${_}]`).join(', '),
        R = /^url\(['"]?#(.*?)['"]?\)$/;
      let b = (() => {
          class _ extends Dn {
            get inline() {
              return this._inline;
            }
            set inline(r) {
              this._inline = (0, Pt.Ig)(r);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(r) {
              r !== this._svgIcon &&
                (r
                  ? this._updateSvgIcon(r)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = r));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontSet &&
                ((this._fontSet = c), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(r) {
              const c = this._cleanupFontValue(r);
              c !== this._fontIcon &&
                ((this._fontIcon = c), this._updateFontIconClasses());
            }
            constructor(r, c, g, T, ge, lt) {
              super(r),
                (this._iconRegistry = c),
                (this._location = T),
                (this._errorHandler = ge),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = Ct.w0.EMPTY),
                lt &&
                  (lt.color && (this.color = this.defaultColor = lt.color),
                  lt.fontSet && (this.fontSet = lt.fontSet)),
                g || r.nativeElement.setAttribute('aria-hidden', 'true');
            }
            _splitIconName(r) {
              if (!r) return ['', ''];
              const c = r.split(':');
              switch (c.length) {
                case 1:
                  return ['', c[0]];
                case 2:
                  return c;
                default:
                  throw Error(`Invalid icon name: "${r}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const r = this._elementsWithExternalReferences;
              if (r && r.size) {
                const c = this._location.getPathname();
                c !== this._previousPath &&
                  ((this._previousPath = c), this._prependPathToReferences(c));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(r) {
              this._clearSvgElement();
              const c = this._location.getPathname();
              (this._previousPath = c),
                this._cacheChildrenWithExternalReferences(r),
                this._prependPathToReferences(c),
                this._elementRef.nativeElement.appendChild(r);
            }
            _clearSvgElement() {
              const r = this._elementRef.nativeElement;
              let c = r.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                c--;

              ) {
                const g = r.childNodes[c];
                (1 !== g.nodeType || 'svg' === g.nodeName.toLowerCase()) &&
                  g.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const r = this._elementRef.nativeElement,
                c = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter(g => g.length > 0);
              this._previousFontSetClass.forEach(g => r.classList.remove(g)),
                c.forEach(g => r.classList.add(g)),
                (this._previousFontSetClass = c),
                this.fontIcon !== this._previousFontIconClass &&
                  !c.includes('mat-ligature-font') &&
                  (this._previousFontIconClass &&
                    r.classList.remove(this._previousFontIconClass),
                  this.fontIcon && r.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(r) {
              return 'string' == typeof r ? r.trim().split(' ')[0] : r;
            }
            _prependPathToReferences(r) {
              const c = this._elementsWithExternalReferences;
              c &&
                c.forEach((g, T) => {
                  g.forEach(ge => {
                    T.setAttribute(ge.name, `url('${r}#${ge.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(r) {
              const c = r.querySelectorAll(ke),
                g = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let T = 0; T < c.length; T++)
                Et.forEach(ge => {
                  const lt = c[T],
                    ln = lt.getAttribute(ge),
                    In = ln ? ln.match(R) : null;
                  if (In) {
                    let Yn = g.get(lt);
                    Yn || ((Yn = []), g.set(lt, Yn)),
                      Yn.push({ name: ge, value: In[1] });
                  }
                });
            }
            _updateSvgIcon(r) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                r)
              ) {
                const [c, g] = this._splitIconName(r);
                c && (this._svgNamespace = c),
                  g && (this._svgName = g),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(g, c)
                    .pipe((0, en.q)(1))
                    .subscribe(
                      T => this._setSvgElement(T),
                      T => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${c}:${g}! ${T.message}`,
                          ),
                        );
                      },
                    ));
              }
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(de),
                a.$8M('aria-hidden'),
                a.Y36(vt),
                a.Y36(a.qLn),
                a.Y36(Te, 8),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 8,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.uIk(
                    'data-mat-icon-type',
                    c._usingFontIcon() ? 'font' : 'svg',
                  )('data-mat-icon-name', c._svgName || c.fontIcon)(
                    'data-mat-icon-namespace',
                    c._svgNamespace || c.fontSet,
                  )('fontIcon', c._usingFontIcon() ? c.fontIcon : null),
                  a.ekj('mat-icon-inline', c.inline)(
                    'mat-icon-no-color',
                    'primary' !== c.color &&
                      'accent' !== c.color &&
                      'warn' !== c.color,
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [a.qOj],
              ngContentSelectors: it,
              decls: 1,
              vars: 0,
              template: function (r, c) {
                1 & r && (a.F$t(), a.Hsn(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })(),
        w = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({ imports: [Be.BQ, Be.BQ] })),
            _
          );
        })();
      var $ = D(2687),
        z = D(9521),
        $e = D(7579),
        Mt = D(6451),
        Xt = D(3101),
        Nt = D(8675),
        Yt = D(3900),
        tn = D(2722),
        Oe = D(4986),
        Ce = D(7272),
        Q = D(8502),
        we = D(9718),
        ct = D(5577),
        Ft = D(8421);
      function Kt(_, F) {
        return F
          ? r => (0, Ce.z)(F.pipe((0, en.q)(1), (0, Q.l)()), r.pipe(Kt(_)))
          : (0, ct.z)((r, c) =>
              (0, Ft.Xf)(_(r, c)).pipe((0, en.q)(1), (0, we.h)(r)),
            );
      }
      var Cn = D(5963);
      function Gn(_, F = Oe.z) {
        const r = (0, Cn.H)(_, F);
        return Kt(() => r);
      }
      var Bn = D(4080),
        Ut = D(7340),
        Ii = D(445),
        Ln = D(8184),
        Hn = D(3353),
        Ci = D(44);
      const ki = ['mat-menu-item', ''];
      function kn(_, F) {
        1 & _ && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'polygon', 4), a.qZA());
      }
      const ri = [[['mat-icon'], ['', 'matMenuItemIcon', '']], '*'],
        ti = ['mat-icon, [matMenuItemIcon]', '*'];
      function ai(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'div', 0),
            a.NdJ('keydown', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._handleKeydown(g));
            })('click', function () {
              a.CHM(r);
              const g = a.oxw();
              return a.KtG(g.closed.emit('click'));
            })('@transformMenu.start', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._onAnimationStart(g));
            })('@transformMenu.done', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._onAnimationDone(g));
            }),
            a.TgZ(1, 'div', 1),
            a.Hsn(2),
            a.qZA()();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Q6J('id', r.panelId)('ngClass', r._classList)(
            '@transformMenu',
            r._panelAnimationState,
          ),
            a.uIk('aria-label', r.ariaLabel || null)(
              'aria-labelledby',
              r.ariaLabelledby || null,
            )('aria-describedby', r.ariaDescribedby || null);
        }
      }
      const xi = ['*'],
        Tr = new a.OlP('MAT_MENU_PANEL'),
        Bi = (0, Be.Kr)((0, Be.Id)(class {}));
      let Zi = (() => {
        class _ extends Bi {
          constructor(r, c, g, T, ge) {
            super(),
              (this._elementRef = r),
              (this._document = c),
              (this._focusMonitor = g),
              (this._parentMenu = T),
              (this._changeDetectorRef = ge),
              (this.role = 'menuitem'),
              (this._hovered = new $e.x()),
              (this._focused = new $e.x()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              T?.addItem?.(this);
          }
          focus(r, c) {
            this._focusMonitor && r
              ? this._focusMonitor.focusVia(this._getHostElement(), r, c)
              : this._getHostElement().focus(c),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(r) {
            this.disabled && (r.preventDefault(), r.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const r = this._elementRef.nativeElement.cloneNode(!0),
              c = r.querySelectorAll('mat-icon, .material-icons');
            for (let g = 0; g < c.length; g++) c[g].remove();
            return r.textContent?.trim() || '';
          }
          _setHighlighted(r) {
            (this._highlighted = r), this._changeDetectorRef?.markForCheck();
          }
          _setTriggersSubmenu(r) {
            (this._triggersSubmenu = r),
              this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(a.SBq),
              a.Y36(s.K0),
              a.Y36($.tE),
              a.Y36(Tr, 8),
              a.Y36(a.sBO),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [
              1,
              'mat-mdc-menu-item',
              'mat-mdc-focus-indicator',
              'mdc-list-item',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              1 & r &&
                a.NdJ('click', function (T) {
                  return c._checkDisabled(T);
                })('mouseenter', function () {
                  return c._handleMouseEnter();
                }),
                2 & r &&
                  (a.uIk('role', c.role)('tabindex', c._getTabIndex())(
                    'aria-disabled',
                    c.disabled,
                  )('disabled', c.disabled || null),
                  a.ekj('mat-mdc-menu-item-highlighted', c._highlighted)(
                    'mat-mdc-menu-item-submenu-trigger',
                    c._triggersSubmenu,
                  ));
            },
            inputs: {
              disabled: 'disabled',
              disableRipple: 'disableRipple',
              role: 'role',
            },
            exportAs: ['matMenuItem'],
            features: [a.qOj],
            attrs: ki,
            ngContentSelectors: ti,
            decls: 5,
            vars: 3,
            consts: [
              [1, 'mdc-list-item__primary-text'],
              [
                'matRipple',
                '',
                1,
                'mat-mdc-menu-ripple',
                3,
                'matRippleDisabled',
                'matRippleTrigger',
              ],
              [
                'class',
                'mat-mdc-menu-submenu-icon',
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                4,
                'ngIf',
              ],
              [
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                1,
                'mat-mdc-menu-submenu-icon',
              ],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.F$t(ri),
                a.Hsn(0),
                a.TgZ(1, 'span', 0),
                a.Hsn(2, 1),
                a.qZA(),
                a._UZ(3, 'div', 1),
                a.YNc(4, kn, 2, 0, 'svg', 2)),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('matRippleDisabled', c.disableRipple || c.disabled)(
                    'matRippleTrigger',
                    c._getHostElement(),
                  ),
                  a.xp6(1),
                  a.Q6J('ngIf', c._triggersSubmenu));
            },
            dependencies: [s.O5, Be.wG],
            encapsulation: 2,
            changeDetection: 0,
          })),
          _
        );
      })();
      const Vn = new a.OlP('MatMenuContent'),
        Un = {
          transformMenu: (0, Ut.X$)('transformMenu', [
            (0, Ut.SB)(
              'void',
              (0, Ut.oB)({ opacity: 0, transform: 'scale(0.8)' }),
            ),
            (0, Ut.eR)(
              'void => enter',
              (0, Ut.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1)' }),
              ),
            ),
            (0, Ut.eR)(
              '* => void',
              (0, Ut.jt)('100ms 25ms linear', (0, Ut.oB)({ opacity: 0 })),
            ),
          ]),
          fadeInItems: (0, Ut.X$)('fadeInItems', [
            (0, Ut.SB)('showing', (0, Ut.oB)({ opacity: 1 })),
            (0, Ut.eR)('void => *', [
              (0, Ut.oB)({ opacity: 0 }),
              (0, Ut.jt)('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        };
      let Ei = 0;
      const fi = new a.OlP('mat-menu-default-options', {
        providedIn: 'root',
        factory: function _n() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let Ti = (() => {
          class _ {
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(r) {
              (this._xPosition = r), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(r) {
              (this._yPosition = r), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(r) {
              this._overlapTrigger = (0, Pt.Ig)(r);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(r) {
              this._hasBackdrop = (0, Pt.Ig)(r);
            }
            set panelClass(r) {
              const c = this._previousPanelClass;
              c &&
                c.length &&
                c.split(' ').forEach(g => {
                  this._classList[g] = !1;
                }),
                (this._previousPanelClass = r),
                r &&
                  r.length &&
                  (r.split(' ').forEach(g => {
                    this._classList[g] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(r) {
              this.panelClass = r;
            }
            constructor(r, c, g, T) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._defaultOptions = g),
                (this._changeDetectorRef = T),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new a.n_E()),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new $e.x()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new a.vpe()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + Ei++);
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new $.Em(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit('tab'),
                ),
                this._directDescendantItems.changes
                  .pipe(
                    (0, Nt.O)(this._directDescendantItems),
                    (0, Yt.w)(r => (0, Mt.T)(...r.map(c => c._focused))),
                  )
                  .subscribe(r => this._keyManager.updateActiveItem(r)),
                this._directDescendantItems.changes.subscribe(r => {
                  const c = this._keyManager;
                  if (
                    'enter' === this._panelAnimationState &&
                    c.activeItem?._hasFocus()
                  ) {
                    const g = r.toArray(),
                      T = Math.max(
                        0,
                        Math.min(g.length - 1, c.activeItemIndex || 0),
                      );
                    g[T] && !g[T].disabled
                      ? c.setActiveItem(T)
                      : c.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._directDescendantItems.destroy(),
                this.closed.complete(),
                this._firstItemFocusSubscription?.unsubscribe();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                (0, Nt.O)(this._directDescendantItems),
                (0, Yt.w)(c => (0, Mt.T)(...c.map(g => g._hovered))),
              );
            }
            addItem(r) {}
            removeItem(r) {}
            _handleKeydown(r) {
              const c = r.keyCode,
                g = this._keyManager;
              switch (c) {
                case z.hY:
                  (0, z.Vb)(r) ||
                    (r.preventDefault(), this.closed.emit('keydown'));
                  break;
                case z.oh:
                  this.parentMenu &&
                    'ltr' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                case z.SV:
                  this.parentMenu &&
                    'rtl' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                default:
                  return (
                    (c === z.LH || c === z.JH) && g.setFocusOrigin('keyboard'),
                    void g.onKeydown(r)
                  );
              }
              r.stopPropagation();
            }
            focusFirstItem(r = 'program') {
              this._firstItemFocusSubscription?.unsubscribe(),
                (this._firstItemFocusSubscription = this._ngZone.onStable
                  .pipe((0, en.q)(1))
                  .subscribe(() => {
                    let c = null;
                    if (
                      (this._directDescendantItems.length &&
                        (c = this._directDescendantItems.first
                          ._getHostElement()
                          .closest('[role="menu"]')),
                      !c || !c.contains(document.activeElement))
                    ) {
                      const g = this._keyManager;
                      g.setFocusOrigin(r).setFirstItemActive(),
                        !g.activeItem && c && c.focus();
                    }
                  }));
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(r) {
              const c = Math.min(this._baseElevation + r, 24),
                g = `${this._elevationPrefix}${c}`,
                T = Object.keys(this._classList).find(ge =>
                  ge.startsWith(this._elevationPrefix),
                );
              (!T || T === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[g] = !0),
                (this._previousElevation = g));
            }
            setPositionClasses(r = this.xPosition, c = this.yPosition) {
              const g = this._classList;
              (g['mat-menu-before'] = 'before' === r),
                (g['mat-menu-after'] = 'after' === r),
                (g['mat-menu-above'] = 'above' === c),
                (g['mat-menu-below'] = 'below' === c),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(r) {
              this._animationDone.next(r), (this._isAnimating = !1);
            }
            _onAnimationStart(r) {
              (this._isAnimating = !0),
                'enter' === r.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (r.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes
                .pipe((0, Nt.O)(this._allItems))
                .subscribe(r => {
                  this._directDescendantItems.reset(
                    r.filter(c => c._parentMenu === this),
                  ),
                    this._directDescendantItems.notifyOnChanges();
                });
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(fi),
                a.Y36(a.sBO),
              );
            }),
            (_.ɵdir = a.lG2({
              type: _,
              contentQueries: function (r, c, g) {
                if (
                  (1 & r && (a.Suo(g, Vn, 5), a.Suo(g, Zi, 5), a.Suo(g, Zi, 4)),
                  2 & r)
                ) {
                  let T;
                  a.iGM((T = a.CRH())) && (c.lazyContent = T.first),
                    a.iGM((T = a.CRH())) && (c._allItems = T),
                    a.iGM((T = a.CRH())) && (c.items = T);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(a.Rgc, 5), 2 & r)) {
                  let g;
                  a.iGM((g = a.CRH())) && (c.templateRef = g.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            _
          );
        })(),
        $i = (() => {
          class _ extends Ti {
            constructor(r, c, g, T) {
              super(r, c, g, T),
                (this._elevationPrefix = 'mat-elevation-z'),
                (this._baseElevation = 8);
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(a.R0b),
                a.Y36(fi),
                a.Y36(a.sBO),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (r, c) {
                2 & r &&
                  a.uIk('aria-label', null)('aria-labelledby', null)(
                    'aria-describedby',
                    null,
                  );
              },
              exportAs: ['matMenu'],
              features: [a._Bn([{ provide: Tr, useExisting: _ }]), a.qOj],
              ngContentSelectors: xi,
              decls: 1,
              vars: 0,
              consts: [
                [
                  'tabindex',
                  '-1',
                  'role',
                  'menu',
                  1,
                  'mat-mdc-menu-panel',
                  'mdc-menu-surface',
                  'mdc-menu-surface--open',
                  'mat-mdc-elevation-specific',
                  3,
                  'id',
                  'ngClass',
                  'keydown',
                  'click',
                ],
                [1, 'mat-mdc-menu-content', 'mdc-list'],
              ],
              template: function (r, c) {
                1 & r && (a.F$t(), a.YNc(0, ai, 3, 6, 'ng-template'));
              },
              dependencies: [s.mk],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;position:relative}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item.mdc-list-item{align-items:center}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item .mdc-list-item__primary-text{white-space:normal}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [Un.transformMenu, Un.fadeInItems] },
              changeDetection: 0,
            })),
            _
          );
        })();
      const ur = new a.OlP('mat-menu-scroll-strategy'),
        oi = {
          provide: ur,
          deps: [Ln.aV],
          useFactory: function Oi(_) {
            return () => _.scrollStrategies.reposition();
          },
        },
        Qi = (0, Hn.i$)({ passive: !0 });
      let Hi = (() => {
          class _ {
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(r) {
              this.menu = r;
            }
            get menu() {
              return this._menu;
            }
            set menu(r) {
              r !== this._menu &&
                ((this._menu = r),
                this._menuCloseSubscription.unsubscribe(),
                r &&
                  (this._menuCloseSubscription = r.close.subscribe(c => {
                    this._destroyMenu(c),
                      ('click' === c || 'tab' === c) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(c);
                  })),
                this._menuItemInstance?._setTriggersSubmenu(
                  this.triggersSubmenu(),
                ));
            }
            constructor(r, c, g, T, ge, lt, ln, In, Yn) {
              (this._overlay = r),
                (this._element = c),
                (this._viewContainerRef = g),
                (this._menuItemInstance = lt),
                (this._dir = ln),
                (this._focusMonitor = In),
                (this._ngZone = Yn),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Ct.w0.EMPTY),
                (this._hoverSubscription = Ct.w0.EMPTY),
                (this._menuCloseSubscription = Ct.w0.EMPTY),
                (this._changeDetectorRef = (0, a.f3M)(a.sBO)),
                (this._handleTouchStart = Si => {
                  (0, $.yG)(Si) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new a.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new a.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = T),
                (this._parentMaterialMenu = ge instanceof Ti ? ge : void 0),
                c.nativeElement.addEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Qi,
                );
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Qi,
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !!(
                this._menuItemInstance &&
                this._parentMaterialMenu &&
                this.menu
              );
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const r = this.menu;
              if (this._menuOpen || !r) return;
              const c = this._createOverlay(r),
                g = c.getConfig(),
                T = g.positionStrategy;
              this._setPosition(r, T),
                (g.hasBackdrop =
                  null == r.hasBackdrop
                    ? !this.triggersSubmenu()
                    : r.hasBackdrop),
                c.attach(this._getPortal(r)),
                r.lazyContent && r.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(r),
                r instanceof Ti &&
                  (r._startAnimation(),
                  r._directDescendantItems.changes
                    .pipe((0, tn.R)(r.close))
                    .subscribe(() => {
                      T.withLockedPosition(!1).reapplyLastPosition(),
                        T.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(r, c) {
              this._focusMonitor && r
                ? this._focusMonitor.focusVia(this._element, r, c)
                : this._element.nativeElement.focus(c);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(r) {
              if (!this._overlayRef || !this.menuOpen) return;
              const c = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === r ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                c instanceof Ti
                  ? (c._resetAnimation(),
                    c.lazyContent
                      ? c._animationDone
                          .pipe(
                            (0, At.h)(g => 'void' === g.toState),
                            (0, en.q)(1),
                            (0, tn.R)(c.lazyContent._attached),
                          )
                          .subscribe({
                            next: () => c.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), c?.lazyContent?.detach());
            }
            _initMenu(r) {
              (r.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (r.direction = this.dir),
                this._setMenuElevation(r),
                r.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(r) {
              if (r.setElevation) {
                let c = 0,
                  g = r.parentMenu;
                for (; g; ) c++, (g = g.parentMenu);
                r.setElevation(c);
              }
            }
            _setIsMenuOpen(r) {
              r !== this._menuOpen &&
                ((this._menuOpen = r),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(r),
                this._changeDetectorRef.markForCheck());
            }
            _createOverlay(r) {
              if (!this._overlayRef) {
                const c = this._getOverlayConfig(r);
                this._subscribeToPositions(r, c.positionStrategy),
                  (this._overlayRef = this._overlay.create(c)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(r) {
              return new Ln.X_({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    '.mat-menu-panel, .mat-mdc-menu-panel',
                  ),
                backdropClass:
                  r.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: r.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(r, c) {
              r.setPositionClasses &&
                c.positionChanges.subscribe(g => {
                  const T =
                      'start' === g.connectionPair.overlayX
                        ? 'after'
                        : 'before',
                    ge =
                      'top' === g.connectionPair.overlayY ? 'below' : 'above';
                  this._ngZone
                    ? this._ngZone.run(() => r.setPositionClasses(T, ge))
                    : r.setPositionClasses(T, ge);
                });
            }
            _setPosition(r, c) {
              let [g, T] =
                  'before' === r.xPosition
                    ? ['end', 'start']
                    : ['start', 'end'],
                [ge, lt] =
                  'above' === r.yPosition
                    ? ['bottom', 'top']
                    : ['top', 'bottom'],
                [ln, In] = [ge, lt],
                [Yn, Si] = [g, T],
                Oo = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((Si = g = 'before' === r.xPosition ? 'start' : 'end'),
                  (T = Yn = 'end' === g ? 'start' : 'end'),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const bs = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = bs
                      ? bs._getHostElement().offsetTop
                      : 0;
                  }
                  Oo =
                    'bottom' === ge
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                r.overlapTrigger ||
                  ((ln = 'top' === ge ? 'bottom' : 'top'),
                  (In = 'top' === lt ? 'bottom' : 'top'));
              c.withPositions([
                {
                  originX: g,
                  originY: ln,
                  overlayX: Yn,
                  overlayY: ge,
                  offsetY: Oo,
                },
                {
                  originX: T,
                  originY: ln,
                  overlayX: Si,
                  overlayY: ge,
                  offsetY: Oo,
                },
                {
                  originX: g,
                  originY: In,
                  overlayX: Yn,
                  overlayY: lt,
                  offsetY: -Oo,
                },
                {
                  originX: T,
                  originY: In,
                  overlayX: Si,
                  overlayY: lt,
                  offsetY: -Oo,
                },
              ]);
            }
            _menuClosingActions() {
              const r = this._overlayRef.backdropClick(),
                c = this._overlayRef.detachments(),
                g = this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : (0, an.of)(),
                T = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      (0, At.h)(ge => ge !== this._menuItemInstance),
                      (0, At.h)(() => this._menuOpen),
                    )
                  : (0, an.of)();
              return (0, Mt.T)(r, g, T, c);
            }
            _handleMousedown(r) {
              (0, $.X6)(r) ||
                ((this._openedBy = 0 === r.button ? 'mouse' : void 0),
                this.triggersSubmenu() && r.preventDefault());
            }
            _handleKeydown(r) {
              const c = r.keyCode;
              (c === z.K5 || c === z.L_) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((c === z.SV && 'ltr' === this.dir) ||
                    (c === z.oh && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(r) {
              this.triggersSubmenu()
                ? (r.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    (0, At.h)(r => r === this._menuItemInstance && !r.disabled),
                    Gn(0, Xt.E),
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof Ti && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              (0, en.q)(1),
                              Gn(0, Xt.E),
                              (0, tn.R)(this._parentMaterialMenu._hovered()),
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(r) {
              return (
                (!this._portal || this._portal.templateRef !== r.templateRef) &&
                  (this._portal = new Bn.UE(
                    r.templateRef,
                    this._viewContainerRef,
                  )),
                this._portal
              );
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(Ln.aV),
                a.Y36(a.SBq),
                a.Y36(a.s_b),
                a.Y36(ur),
                a.Y36(Tr, 8),
                a.Y36(Zi, 10),
                a.Y36(Ii.Is, 8),
                a.Y36($.tE),
                a.Y36(a.R0b),
              );
            }),
            (_.ɵdir = a.lG2({
              type: _,
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (T) {
                    return c._handleClick(T);
                  })('mousedown', function (T) {
                    return c._handleMousedown(T);
                  })('keydown', function (T) {
                    return c._handleKeydown(T);
                  }),
                  2 & r &&
                    a.uIk('aria-haspopup', c.menu ? 'menu' : null)(
                      'aria-expanded',
                      c.menuOpen,
                    )('aria-controls', c.menuOpen ? c.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  'mat-menu-trigger-for',
                  '_deprecatedMatMenuTriggerFor',
                ],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            _
          );
        })(),
        hr = (() => {
          class _ extends Hi {}
          return (
            (_.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(_)))(c || _);
              };
            })()),
            (_.ɵdir = a.lG2({
              type: _,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-mdc-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [a.qOj],
            })),
            _
          );
        })(),
        fr = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({
              providers: [oi],
              imports: [s.ez, Be.si, Be.BQ, Ln.U8, Ci.ZD, Be.BQ],
            })),
            _
          );
        })();
      var hn = D(4006),
        Mi = D(9770);
      function qi(_, F) {}
      class or {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let Xi = (() => {
        class _ extends Bn.en {
          constructor(r, c, g, T, ge, lt, ln, In) {
            super(),
              (this._elementRef = r),
              (this._focusTrapFactory = c),
              (this._config = T),
              (this._interactivityChecker = ge),
              (this._ngZone = lt),
              (this._overlayRef = ln),
              (this._focusMonitor = In),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = Yn => {
                this._portalOutlet.hasAttached();
                const Si = this._portalOutlet.attachDomPortal(Yn);
                return this._contentAttached(), Si;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = g);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachComponentPortal(r);
            return this._contentAttached(), c;
          }
          attachTemplatePortal(r) {
            this._portalOutlet.hasAttached();
            const c = this._portalOutlet.attachTemplatePortal(r);
            return this._contentAttached(), c;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(r, c) {
            this._interactivityChecker.isFocusable(r) ||
              ((r.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const g = () => {
                  r.removeEventListener('blur', g),
                    r.removeEventListener('mousedown', g),
                    r.removeAttribute('tabindex');
                };
                r.addEventListener('blur', g),
                  r.addEventListener('mousedown', g);
              })),
              r.focus(c);
          }
          _focusByCssSelector(r, c) {
            let g = this._elementRef.nativeElement.querySelector(r);
            g && this._forceFocus(g, c);
          }
          _trapFocus() {
            const r = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case 'dialog':
                this._containsFocus() || r.focus();
                break;
              case !0:
              case 'first-tabbable':
                this._focusTrap.focusInitialElementWhenReady().then(c => {
                  c || this._focusDialogContainer();
                });
                break;
              case 'first-heading':
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]',
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const r = this._config.restoreFocus;
            let c = null;
            if (
              ('string' == typeof r
                ? (c = this._document.querySelector(r))
                : 'boolean' == typeof r
                ? (c = r ? this._elementFocusedBeforeDialogWasOpened : null)
                : r && (c = r),
              this._config.restoreFocus && c && 'function' == typeof c.focus)
            ) {
              const g = (0, Hn.ht)(),
                T = this._elementRef.nativeElement;
              (!g || g === this._document.body || g === T || T.contains(g)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(c, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : c.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const r = this._elementRef.nativeElement,
              c = (0, Hn.ht)();
            return r === c || r.contains(c);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = (0, Hn.ht)());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(a.SBq),
              a.Y36($.qV),
              a.Y36(s.K0, 8),
              a.Y36(or),
              a.Y36($.ic),
              a.Y36(a.R0b),
              a.Y36(Ln.Iu),
              a.Y36($.tE),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['cdk-dialog-container']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(Bn.Pl, 7), 2 & r)) {
                let g;
                a.iGM((g = a.CRH())) && (c._portalOutlet = g.first);
              }
            },
            hostAttrs: ['tabindex', '-1', 1, 'cdk-dialog-container'],
            hostVars: 6,
            hostBindings: function (r, c) {
              2 & r &&
                a.uIk('id', c._config.id || null)('role', c._config.role)(
                  'aria-modal',
                  c._config.ariaModal,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                );
            },
            features: [a.qOj],
            decls: 1,
            vars: 0,
            consts: [['cdkPortalOutlet', '']],
            template: function (r, c) {
              1 & r && a.YNc(0, qi, 0, 0, 'ng-template', 0);
            },
            dependencies: [Bn.Pl],
            styles: [
              '.cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}',
            ],
            encapsulation: 2,
          })),
          _
        );
      })();
      class Fi {
        constructor(F, r) {
          (this.overlayRef = F),
            (this.config = r),
            (this.closed = new $e.x()),
            (this.disableClose = r.disableClose),
            (this.backdropClick = F.backdropClick()),
            (this.keydownEvents = F.keydownEvents()),
            (this.outsidePointerEvents = F.outsidePointerEvents()),
            (this.id = r.id),
            this.keydownEvents.subscribe(c => {
              c.keyCode === z.hY &&
                !this.disableClose &&
                !(0, z.Vb)(c) &&
                (c.preventDefault(),
                this.close(void 0, { focusOrigin: 'keyboard' }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: 'mouse' });
            }),
            (this._detachSubscription = F.detachments().subscribe(() => {
              !1 !== r.closeOnOverlayDetachments && this.close();
            }));
        }
        close(F, r) {
          if (this.containerInstance) {
            const c = this.closed;
            (this.containerInstance._closeInteractionType =
              r?.focusOrigin || 'program'),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              c.next(F),
              c.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(F = '', r = '') {
          return this.overlayRef.updateSize({ width: F, height: r }), this;
        }
        addPanelClass(F) {
          return this.overlayRef.addPanelClass(F), this;
        }
        removePanelClass(F) {
          return this.overlayRef.removePanelClass(F), this;
        }
      }
      const J = new a.OlP('DialogScrollStrategy'),
        We = new a.OlP('DialogData'),
        Se = new a.OlP('DefaultDialogConfig'),
        St = {
          provide: J,
          deps: [Ln.aV],
          useFactory: function Ze(_) {
            return () => _.scrollStrategies.block();
          },
        };
      let It = 0,
        un = (() => {
          class _ {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(r, c, g, T, ge, lt) {
              (this._overlay = r),
                (this._injector = c),
                (this._defaultOptions = g),
                (this._parentDialog = T),
                (this._overlayContainer = ge),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new $e.x()),
                (this._afterOpenedAtThisLevel = new $e.x()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = (0, Mi.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Nt.O)(void 0)),
                )),
                (this._scrollStrategy = lt);
            }
            open(r, c) {
              ((c = { ...(this._defaultOptions || new or()), ...c }).id =
                c.id || 'cdk-dialog-' + It++),
                c.id && this.getDialogById(c.id);
              const T = this._getOverlayConfig(c),
                ge = this._overlay.create(T),
                lt = new Fi(ge, c),
                ln = this._attachContainer(ge, lt, c);
              return (
                (lt.containerInstance = ln),
                this._attachDialogContent(r, lt, ln, c),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(lt),
                lt.closed.subscribe(() => this._removeOpenDialog(lt, !0)),
                this.afterOpened.next(lt),
                lt
              );
            }
            closeAll() {
              vn(this.openDialogs, r => r.close());
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              vn(this._openDialogsAtThisLevel, r => {
                !1 === r.config.closeOnDestroy && this._removeOpenDialog(r, !1);
              }),
                vn(this._openDialogsAtThisLevel, r => r.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(r) {
              const c = new Ln.X_({
                positionStrategy:
                  r.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: r.scrollStrategy || this._scrollStrategy(),
                panelClass: r.panelClass,
                hasBackdrop: r.hasBackdrop,
                direction: r.direction,
                minWidth: r.minWidth,
                minHeight: r.minHeight,
                maxWidth: r.maxWidth,
                maxHeight: r.maxHeight,
                width: r.width,
                height: r.height,
                disposeOnNavigation: r.closeOnNavigation,
              });
              return r.backdropClass && (c.backdropClass = r.backdropClass), c;
            }
            _attachContainer(r, c, g) {
              const T = g.injector || g.viewContainerRef?.injector,
                ge = [
                  { provide: or, useValue: g },
                  { provide: Fi, useValue: c },
                  { provide: Ln.Iu, useValue: r },
                ];
              let lt;
              g.container
                ? 'function' == typeof g.container
                  ? (lt = g.container)
                  : ((lt = g.container.type),
                    ge.push(...g.container.providers(g)))
                : (lt = Xi);
              const ln = new Bn.C5(
                lt,
                g.viewContainerRef,
                a.zs3.create({ parent: T || this._injector, providers: ge }),
                g.componentFactoryResolver,
              );
              return r.attach(ln).instance;
            }
            _attachDialogContent(r, c, g, T) {
              if (r instanceof a.Rgc) {
                const ge = this._createInjector(T, c, g, void 0);
                let lt = { $implicit: T.data, dialogRef: c };
                T.templateContext &&
                  (lt = {
                    ...lt,
                    ...('function' == typeof T.templateContext
                      ? T.templateContext()
                      : T.templateContext),
                  }),
                  g.attachTemplatePortal(new Bn.UE(r, null, lt, ge));
              } else {
                const ge = this._createInjector(T, c, g, this._injector),
                  lt = g.attachComponentPortal(
                    new Bn.C5(
                      r,
                      T.viewContainerRef,
                      ge,
                      T.componentFactoryResolver,
                    ),
                  );
                c.componentInstance = lt.instance;
              }
            }
            _createInjector(r, c, g, T) {
              const ge = r.injector || r.viewContainerRef?.injector,
                lt = [
                  { provide: We, useValue: r.data },
                  { provide: Fi, useValue: c },
                ];
              return (
                r.providers &&
                  ('function' == typeof r.providers
                    ? lt.push(...r.providers(c, r, g))
                    : lt.push(...r.providers)),
                r.direction &&
                  (!ge || !ge.get(Ii.Is, null, { optional: !0 })) &&
                  lt.push({
                    provide: Ii.Is,
                    useValue: { value: r.direction, change: (0, an.of)() },
                  }),
                a.zs3.create({ parent: ge || T, providers: lt })
              );
            }
            _removeOpenDialog(r, c) {
              const g = this.openDialogs.indexOf(r);
              g > -1 &&
                (this.openDialogs.splice(g, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((T, ge) => {
                    T
                      ? ge.setAttribute('aria-hidden', T)
                      : ge.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  c && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const r = this._overlayContainer.getContainerElement();
              if (r.parentElement) {
                const c = r.parentElement.children;
                for (let g = c.length - 1; g > -1; g--) {
                  const T = c[g];
                  T !== r &&
                    'SCRIPT' !== T.nodeName &&
                    'STYLE' !== T.nodeName &&
                    !T.hasAttribute('aria-live') &&
                    (this._ariaHiddenElements.set(
                      T,
                      T.getAttribute('aria-hidden'),
                    ),
                    T.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.LFG(Ln.aV),
                a.LFG(a.zs3),
                a.LFG(Se, 8),
                a.LFG(_, 12),
                a.LFG(Ln.Xj),
                a.LFG(J),
              );
            }),
            (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
            _
          );
        })();
      function vn(_, F) {
        let r = _.length;
        for (; r--; ) F(_[r]);
      }
      let Fn = (() => {
        class _ {}
        return (
          (_.ɵfac = function (r) {
            return new (r || _)();
          }),
          (_.ɵmod = a.oAB({ type: _ })),
          (_.ɵinj = a.cJS({
            providers: [un, St],
            imports: [Ln.U8, Bn.eL, $.rt, Bn.eL],
          })),
          _
        );
      })();
      function qn(_, F) {}
      class Tn {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const pi = 'mdc-dialog--open',
        jr = 'mdc-dialog--opening',
        mr = 'mdc-dialog--closing';
      let fo = (() => {
        class _ extends Xi {
          constructor(r, c, g, T, ge, lt, ln, In) {
            super(r, c, g, T, ge, lt, ln, In),
              (this._animationStateChanged = new a.vpe());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(r) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: 'opened',
                totalTime: r,
              });
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(a.SBq),
              a.Y36($.qV),
              a.Y36(s.K0, 8),
              a.Y36(Tn),
              a.Y36($.ic),
              a.Y36(a.R0b),
              a.Y36(Ln.Iu),
              a.Y36($.tE),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['ng-component']],
            features: [a.qOj],
            decls: 0,
            vars: 0,
            template: function (r, c) {},
            encapsulation: 2,
          })),
          _
        );
      })();
      const io = '--mat-dialog-transition-duration';
      function ar(_) {
        return null == _
          ? null
          : 'number' == typeof _
          ? _
          : _.endsWith('ms')
          ? (0, Pt.su)(_.substring(0, _.length - 2))
          : _.endsWith('s')
          ? 1e3 * (0, Pt.su)(_.substring(0, _.length - 1))
          : '0' === _
          ? 0
          : null;
      }
      let po = (() => {
        class _ extends fo {
          constructor(r, c, g, T, ge, lt, ln, In, Yn) {
            super(r, c, g, T, ge, lt, ln, Yn),
              (this._animationMode = In),
              (this._animationsEnabled =
                'NoopAnimations' !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._openAnimationDuration = this._animationsEnabled
                ? ar(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._closeAnimationDuration = this._animationsEnabled
                ? ar(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._openAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: 'closed',
                    totalTime: this._closeAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: 'opening',
              totalTime: this._openAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    io,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(jr),
                  this._hostElement.classList.add(pi),
                  this._waitForAnimationToComplete(
                    this._openAnimationDuration,
                    this._finishDialogOpen,
                  ))
                : (this._hostElement.classList.add(pi),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: 'closing',
              totalTime: this._closeAnimationDuration,
            }),
              this._hostElement.classList.remove(pi),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    io,
                    `${this._openAnimationDuration}ms`,
                  ),
                  this._hostElement.classList.add(mr),
                  this._waitForAnimationToComplete(
                    this._closeAnimationDuration,
                    this._finishDialogClose,
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(jr),
              this._hostElement.classList.remove(mr);
          }
          _waitForAnimationToComplete(r, c) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(c, r));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(a.SBq),
              a.Y36($.qV),
              a.Y36(s.K0, 8),
              a.Y36(Tn),
              a.Y36($.ic),
              a.Y36(a.R0b),
              a.Y36(Ln.Iu),
              a.Y36(a.QbO, 8),
              a.Y36($.tE),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['mat-dialog-container']],
            hostAttrs: [
              'tabindex',
              '-1',
              1,
              'mat-mdc-dialog-container',
              'mdc-dialog',
            ],
            hostVars: 8,
            hostBindings: function (r, c) {
              2 & r &&
                (a.Ikx('id', c._config.id),
                a.uIk('aria-modal', c._config.ariaModal)(
                  'role',
                  c._config.role,
                )(
                  'aria-labelledby',
                  c._config.ariaLabel ? null : c._ariaLabelledBy,
                )('aria-label', c._config.ariaLabel)(
                  'aria-describedby',
                  c._config.ariaDescribedBy || null,
                ),
                a.ekj('_mat-animation-noopable', !c._animationsEnabled));
            },
            features: [a.qOj],
            decls: 3,
            vars: 0,
            consts: [
              [1, 'mdc-dialog__container'],
              [1, 'mat-mdc-dialog-surface', 'mdc-dialog__surface'],
              ['cdkPortalOutlet', ''],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1),
                a.YNc(2, qn, 0, 0, 'ng-template', 2),
                a.qZA()());
            },
            dependencies: [Bn.Pl],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          })),
          _
        );
      })();
      class zr {
        constructor(F, r, c) {
          (this._ref = F),
            (this._containerInstance = c),
            (this._afterOpened = new $e.x()),
            (this._beforeClosed = new $e.x()),
            (this._state = 0),
            (this.disableClose = r.disableClose),
            (this.id = F.id),
            c._animationStateChanged
              .pipe(
                (0, At.h)(g => 'opened' === g.state),
                (0, en.q)(1),
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            c._animationStateChanged
              .pipe(
                (0, At.h)(g => 'closed' === g.state),
                (0, en.q)(1),
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            F.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            (0, Mt.T)(
              this.backdropClick(),
              this.keydownEvents().pipe(
                (0, At.h)(
                  g =>
                    g.keyCode === z.hY && !this.disableClose && !(0, z.Vb)(g),
                ),
              ),
            ).subscribe(g => {
              this.disableClose ||
                (g.preventDefault(),
                (function wo(_, F, r) {
                  (_._closeInteractionType = F), _.close(r);
                })(this, 'keydown' === g.type ? 'keyboard' : 'mouse'));
            });
        }
        close(F) {
          (this._result = F),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, At.h)(r => 'closing' === r.state),
                (0, en.q)(1),
              )
              .subscribe(r => {
                this._beforeClosed.next(F),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    r.totalTime + 100,
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(F) {
          let r = this._ref.config.positionStrategy;
          return (
            F && (F.left || F.right)
              ? F.left
                ? r.left(F.left)
                : r.right(F.right)
              : r.centerHorizontally(),
            F && (F.top || F.bottom)
              ? F.top
                ? r.top(F.top)
                : r.bottom(F.bottom)
              : r.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(F = '', r = '') {
          return this._ref.updateSize(F, r), this;
        }
        addPanelClass(F) {
          return this._ref.addPanelClass(F), this;
        }
        removePanelClass(F) {
          return this._ref.removePanelClass(F), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const Ao = new a.OlP('MatMdcDialogData'),
        $r = new a.OlP('mat-mdc-dialog-default-options'),
        vr = new a.OlP('mat-mdc-dialog-scroll-strategy'),
        mo = {
          provide: vr,
          deps: [Ln.aV],
          useFactory: function ro(_) {
            return () => _.scrollStrategies.block();
          },
        };
      let br = 0,
        Ji = (() => {
          class _ {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const r = this._parentDialog;
              return r
                ? r._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(r, c, g, T, ge, lt, ln, In, Yn, Si) {
              (this._overlay = r),
                (this._defaultOptions = g),
                (this._parentDialog = T),
                (this._dialogRefConstructor = ln),
                (this._dialogContainerType = In),
                (this._dialogDataToken = Yn),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new $e.x()),
                (this._afterOpenedAtThisLevel = new $e.x()),
                (this._idPrefix = 'mat-dialog-'),
                (this.dialogConfigClass = Tn),
                (this.afterAllClosed = (0, Mi.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Nt.O)(void 0)),
                )),
                (this._scrollStrategy = lt),
                (this._dialog = c.get(un));
            }
            open(r, c) {
              let g;
              ((c = { ...(this._defaultOptions || new Tn()), ...c }).id =
                c.id || `${this._idPrefix}${br++}`),
                (c.scrollStrategy = c.scrollStrategy || this._scrollStrategy());
              const T = this._dialog.open(r, {
                ...c,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: c },
                    { provide: or, useValue: c },
                  ],
                },
                templateContext: () => ({ dialogRef: g }),
                providers: (ge, lt, ln) => (
                  (g = new this._dialogRefConstructor(ge, c, ln)),
                  g.updatePosition(c?.position),
                  [
                    { provide: this._dialogContainerType, useValue: ln },
                    { provide: this._dialogDataToken, useValue: lt.data },
                    { provide: this._dialogRefConstructor, useValue: g },
                  ]
                ),
              });
              return (
                (g.componentInstance = T.componentInstance),
                this.openDialogs.push(g),
                this.afterOpened.next(g),
                g.afterClosed().subscribe(() => {
                  const ge = this.openDialogs.indexOf(g);
                  ge > -1 &&
                    (this.openDialogs.splice(ge, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                g
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(r) {
              return this.openDialogs.find(c => c.id === r);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(r) {
              let c = r.length;
              for (; c--; ) r[c].close();
            }
          }
          return (
            (_.ɵfac = function (r) {
              a.$Z();
            }),
            (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
            _
          );
        })(),
        mi = (() => {
          class _ extends Ji {
            constructor(r, c, g, T, ge, lt, ln, In) {
              super(r, c, T, lt, ln, ge, zr, po, Ao, In),
                (this._idPrefix = 'mat-mdc-dialog-');
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.LFG(Ln.aV),
                a.LFG(a.zs3),
                a.LFG(s.Ye, 8),
                a.LFG($r, 8),
                a.LFG(vr),
                a.LFG(_, 12),
                a.LFG(Ln.Xj),
                a.LFG(a.QbO, 8),
              );
            }),
            (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
            _
          );
        })(),
        Yr = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵdir = a.lG2({
              type: _,
              selectors: [
                ['', 'mat-dialog-content', ''],
                ['mat-dialog-content'],
                ['', 'matDialogContent', ''],
              ],
              hostAttrs: [1, 'mat-mdc-dialog-content', 'mdc-dialog__content'],
            })),
            _
          );
        })(),
        No = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({
              providers: [mi, mo],
              imports: [Fn, Ln.U8, Bn.eL, Be.BQ, Be.BQ],
            })),
            _
          );
        })();
      var Xn = D(9549),
        Fr = D(4144);
      const Wr = ['mat-calendar-body', ''];
      function li(_, F) {
        if (
          (1 & _ && (a.TgZ(0, 'tr', 3)(1, 'td', 4), a._uU(2), a.qZA()()), 2 & _)
        ) {
          const r = a.oxw();
          a.xp6(1),
            a.Udp('padding-top', r._cellPadding)(
              'padding-bottom',
              r._cellPadding,
            ),
            a.uIk('colspan', r.numCols),
            a.xp6(1),
            a.hij(' ', r.label, ' ');
        }
      }
      function ci(_, F) {
        if ((1 & _ && (a.TgZ(0, 'td', 4), a._uU(1), a.qZA()), 2 & _)) {
          const r = a.oxw(2);
          a.Udp('padding-top', r._cellPadding)(
            'padding-bottom',
            r._cellPadding,
          ),
            a.uIk('colspan', r._firstRowOffset),
            a.xp6(1),
            a.hij(
              ' ',
              r._firstRowOffset >= r.labelMinRequiredCells ? r.label : '',
              ' ',
            );
        }
      }
      function si(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'td', 8)(1, 'button', 9),
            a.NdJ('click', function (g) {
              const ge = a.CHM(r).$implicit,
                lt = a.oxw(2);
              return a.KtG(lt._cellClicked(ge, g));
            })('focus', function (g) {
              const ge = a.CHM(r).$implicit,
                lt = a.oxw(2);
              return a.KtG(lt._emitActiveDateChange(ge, g));
            }),
            a.TgZ(2, 'span', 10),
            a._uU(3),
            a.qZA(),
            a._UZ(4, 'span', 11),
            a.qZA()();
        }
        if (2 & _) {
          const r = F.$implicit,
            c = F.index,
            g = a.oxw().index,
            T = a.oxw();
          a.Udp('width', T._cellWidth)('padding-top', T._cellPadding)(
            'padding-bottom',
            T._cellPadding,
          ),
            a.uIk('data-mat-row', g)('data-mat-col', c),
            a.xp6(1),
            a.ekj('mat-calendar-body-disabled', !r.enabled)(
              'mat-calendar-body-active',
              T._isActiveCell(g, c),
            )('mat-calendar-body-range-start', T._isRangeStart(r.compareValue))(
              'mat-calendar-body-range-end',
              T._isRangeEnd(r.compareValue),
            )('mat-calendar-body-in-range', T._isInRange(r.compareValue))(
              'mat-calendar-body-comparison-bridge-start',
              T._isComparisonBridgeStart(r.compareValue, g, c),
            )(
              'mat-calendar-body-comparison-bridge-end',
              T._isComparisonBridgeEnd(r.compareValue, g, c),
            )(
              'mat-calendar-body-comparison-start',
              T._isComparisonStart(r.compareValue),
            )(
              'mat-calendar-body-comparison-end',
              T._isComparisonEnd(r.compareValue),
            )(
              'mat-calendar-body-in-comparison-range',
              T._isInComparisonRange(r.compareValue),
            )(
              'mat-calendar-body-preview-start',
              T._isPreviewStart(r.compareValue),
            )('mat-calendar-body-preview-end', T._isPreviewEnd(r.compareValue))(
              'mat-calendar-body-in-preview',
              T._isInPreview(r.compareValue),
            ),
            a.Q6J('ngClass', r.cssClasses)(
              'tabindex',
              T._isActiveCell(g, c) ? 0 : -1,
            ),
            a.uIk('aria-label', r.ariaLabel)(
              'aria-disabled',
              !r.enabled || null,
            )('aria-pressed', T._isSelected(r.compareValue))(
              'aria-current',
              T.todayValue === r.compareValue ? 'date' : null,
            )('aria-describedby', T._getDescribedby(r.compareValue)),
            a.xp6(1),
            a.ekj('mat-calendar-body-selected', T._isSelected(r.compareValue))(
              'mat-calendar-body-comparison-identical',
              T._isComparisonIdentical(r.compareValue),
            )('mat-calendar-body-today', T.todayValue === r.compareValue),
            a.xp6(1),
            a.hij(' ', r.displayValue, ' ');
        }
      }
      function vi(_, F) {
        if (
          (1 & _ &&
            (a.TgZ(0, 'tr', 5),
            a.YNc(1, ci, 2, 6, 'td', 6),
            a.YNc(2, si, 5, 48, 'td', 7),
            a.qZA()),
          2 & _)
        ) {
          const r = F.$implicit,
            c = F.index,
            g = a.oxw();
          a.xp6(1),
            a.Q6J('ngIf', 0 === c && g._firstRowOffset),
            a.xp6(1),
            a.Q6J('ngForOf', r);
        }
      }
      function Kr(_, F) {
        if (
          (1 & _ &&
            (a.TgZ(0, 'th', 5)(1, 'span', 6),
            a._uU(2),
            a.qZA(),
            a.TgZ(3, 'span', 7),
            a._uU(4),
            a.qZA()()),
          2 & _)
        ) {
          const r = F.$implicit;
          a.xp6(2), a.Oqu(r.long), a.xp6(2), a.Oqu(r.narrow);
        }
      }
      const Zr = ['*'];
      function Dr(_, F) {}
      function wi(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'mat-month-view', 5),
            a.NdJ('activeDateChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = g));
            })('_userSelection', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dateSelected(g));
            })('dragStarted', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dragStarted(g));
            })('dragEnded', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._dragEnded(g));
            }),
            a.qZA();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          )('comparisonStart', r.comparisonStart)(
            'comparisonEnd',
            r.comparisonEnd,
          )('startDateAccessibleName', r.startDateAccessibleName)(
            'endDateAccessibleName',
            r.endDateAccessibleName,
          )('activeDrag', r._activeDrag);
        }
      }
      function Cr(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'mat-year-view', 6),
            a.NdJ('activeDateChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = g));
            })('monthSelected', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._monthSelectedInYearView(g));
            })('selectedChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._goToDateInView(g, 'month'));
            }),
            a.qZA();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function Pr(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'mat-multi-year-view', 7),
            a.NdJ('activeDateChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.activeDate = g));
            })('yearSelected', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._yearSelectedInMultiYearView(g));
            })('selectedChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._goToDateInView(g, 'year'));
            }),
            a.qZA();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Q6J('activeDate', r.activeDate)('selected', r.selected)(
            'dateFilter',
            r.dateFilter,
          )('maxDate', r.maxDate)('minDate', r.minDate)(
            'dateClass',
            r.dateClass,
          );
        }
      }
      function Io(_, F) {}
      const Pi = ['button'];
      function Lr(_, F) {
        1 & _ && (a.O4$(), a.TgZ(0, 'svg', 3), a._UZ(1, 'path', 4), a.qZA());
      }
      const ao = [[['', 'matDatepickerToggleIcon', '']]],
        yn = ['[matDatepickerToggleIcon]'];
      let G = (() => {
        class _ {
          constructor() {
            (this.changes = new $e.x()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.closeCalendarLabel = 'Close calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 24 years'),
              (this.nextMultiYearLabel = 'Next 24 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year'),
              (this.startDateLabel = 'Start date'),
              (this.endDateLabel = 'End date');
          }
          formatYearRange(r, c) {
            return `${r} \u2013 ${c}`;
          }
          formatYearRangeLabel(r, c) {
            return `${r} to ${c}`;
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)();
          }),
          (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac, providedIn: 'root' })),
          _
        );
      })();
      class et {
        constructor(F, r, c, g, T = {}, ge = F, lt) {
          (this.value = F),
            (this.displayValue = r),
            (this.ariaLabel = c),
            (this.enabled = g),
            (this.cssClasses = T),
            (this.compareValue = ge),
            (this.rawValue = lt);
        }
      }
      let nn = 1,
        Kn = (() => {
          class _ {
            ngAfterViewChecked() {
              this._focusActiveCellAfterViewChecked &&
                (this._focusActiveCell(),
                (this._focusActiveCellAfterViewChecked = !1));
            }
            constructor(r, c) {
              (this._elementRef = r),
                (this._ngZone = c),
                (this._platform = (0, a.f3M)(Hn.t4)),
                (this._focusActiveCellAfterViewChecked = !1),
                (this.numCols = 7),
                (this.activeCell = 0),
                (this.isRange = !1),
                (this.cellAspectRatio = 1),
                (this.previewStart = null),
                (this.previewEnd = null),
                (this.selectedValueChange = new a.vpe()),
                (this.previewChange = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this.dragStarted = new a.vpe()),
                (this.dragEnded = new a.vpe()),
                (this._didDragSinceMouseDown = !1),
                (this._enterHandler = g => {
                  if (this._skipNextFocus && 'focus' === g.type)
                    this._skipNextFocus = !1;
                  else if (g.target && this.isRange) {
                    const T = this._getCellFromElement(g.target);
                    T &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({
                          value: T.enabled ? T : null,
                          event: g,
                        }),
                      );
                  }
                }),
                (this._touchmoveHandler = g => {
                  if (!this.isRange) return;
                  const T = Bo(g),
                    ge = T ? this._getCellFromElement(T) : null;
                  T !== g.target && (this._didDragSinceMouseDown = !0),
                    Sn(g.target) && g.preventDefault(),
                    this._ngZone.run(() =>
                      this.previewChange.emit({
                        value: ge?.enabled ? ge : null,
                        event: g,
                      }),
                    );
                }),
                (this._leaveHandler = g => {
                  null !== this.previewEnd &&
                    this.isRange &&
                    ('blur' !== g.type && (this._didDragSinceMouseDown = !0),
                    g.target &&
                      this._getCellFromElement(g.target) &&
                      (!g.relatedTarget ||
                        !this._getCellFromElement(g.relatedTarget)) &&
                      this._ngZone.run(() =>
                        this.previewChange.emit({ value: null, event: g }),
                      ));
                }),
                (this._mousedownHandler = g => {
                  if (!this.isRange) return;
                  this._didDragSinceMouseDown = !1;
                  const T = g.target && this._getCellFromElement(g.target);
                  !T ||
                    !this._isInRange(T.rawValue) ||
                    this._ngZone.run(() => {
                      this.dragStarted.emit({ value: T.rawValue, event: g });
                    });
                }),
                (this._mouseupHandler = g => {
                  if (!this.isRange) return;
                  const T = Sn(g.target);
                  T
                    ? T.closest('.mat-calendar-body') ===
                        this._elementRef.nativeElement &&
                      this._ngZone.run(() => {
                        const ge = this._getCellFromElement(T);
                        this.dragEnded.emit({
                          value: ge?.rawValue ?? null,
                          event: g,
                        });
                      })
                    : this._ngZone.run(() => {
                        this.dragEnded.emit({ value: null, event: g });
                      });
                }),
                (this._touchendHandler = g => {
                  const T = Bo(g);
                  T && this._mouseupHandler({ target: T });
                }),
                (this._id = 'mat-calendar-body-' + nn++),
                (this._startDateLabelId = `${this._id}-start-date`),
                (this._endDateLabelId = `${this._id}-end-date`),
                c.runOutsideAngular(() => {
                  const g = r.nativeElement;
                  g.addEventListener('mouseenter', this._enterHandler, !0),
                    g.addEventListener('touchmove', this._touchmoveHandler, !0),
                    g.addEventListener('focus', this._enterHandler, !0),
                    g.addEventListener('mouseleave', this._leaveHandler, !0),
                    g.addEventListener('blur', this._leaveHandler, !0),
                    g.addEventListener('mousedown', this._mousedownHandler),
                    g.addEventListener('touchstart', this._mousedownHandler),
                    this._platform.isBrowser &&
                      (window.addEventListener('mouseup', this._mouseupHandler),
                      window.addEventListener(
                        'touchend',
                        this._touchendHandler,
                      ));
                });
            }
            _cellClicked(r, c) {
              this._didDragSinceMouseDown ||
                (r.enabled &&
                  this.selectedValueChange.emit({ value: r.value, event: c }));
            }
            _emitActiveDateChange(r, c) {
              r.enabled &&
                this.activeDateChange.emit({ value: r.value, event: c });
            }
            _isSelected(r) {
              return this.startValue === r || this.endValue === r;
            }
            ngOnChanges(r) {
              const c = r.numCols,
                { rows: g, numCols: T } = this;
              (r.rows || c) &&
                (this._firstRowOffset =
                  g && g.length && g[0].length ? T - g[0].length : 0),
                (r.cellAspectRatio || c || !this._cellPadding) &&
                  (this._cellPadding = (50 * this.cellAspectRatio) / T + '%'),
                (c || !this._cellWidth) && (this._cellWidth = 100 / T + '%');
            }
            ngOnDestroy() {
              const r = this._elementRef.nativeElement;
              r.removeEventListener('mouseenter', this._enterHandler, !0),
                r.removeEventListener('touchmove', this._touchmoveHandler, !0),
                r.removeEventListener('focus', this._enterHandler, !0),
                r.removeEventListener('mouseleave', this._leaveHandler, !0),
                r.removeEventListener('blur', this._leaveHandler, !0),
                r.removeEventListener('mousedown', this._mousedownHandler),
                r.removeEventListener('touchstart', this._mousedownHandler),
                this._platform.isBrowser &&
                  (window.removeEventListener('mouseup', this._mouseupHandler),
                  window.removeEventListener(
                    'touchend',
                    this._touchendHandler,
                  ));
            }
            _isActiveCell(r, c) {
              let g = r * this.numCols + c;
              return r && (g -= this._firstRowOffset), g == this.activeCell;
            }
            _focusActiveCell(r = !0) {
              this._ngZone.runOutsideAngular(() => {
                this._ngZone.onStable.pipe((0, en.q)(1)).subscribe(() => {
                  setTimeout(() => {
                    const c = this._elementRef.nativeElement.querySelector(
                      '.mat-calendar-body-active',
                    );
                    c && (r || (this._skipNextFocus = !0), c.focus());
                  });
                });
              });
            }
            _scheduleFocusActiveCellAfterViewChecked() {
              this._focusActiveCellAfterViewChecked = !0;
            }
            _isRangeStart(r) {
              return gr(r, this.startValue, this.endValue);
            }
            _isRangeEnd(r) {
              return Qr(r, this.startValue, this.endValue);
            }
            _isInRange(r) {
              return Jn(r, this.startValue, this.endValue, this.isRange);
            }
            _isComparisonStart(r) {
              return gr(r, this.comparisonStart, this.comparisonEnd);
            }
            _isComparisonBridgeStart(r, c, g) {
              if (
                !this._isComparisonStart(r) ||
                this._isRangeStart(r) ||
                !this._isInRange(r)
              )
                return !1;
              let T = this.rows[c][g - 1];
              if (!T) {
                const ge = this.rows[c - 1];
                T = ge && ge[ge.length - 1];
              }
              return T && !this._isRangeEnd(T.compareValue);
            }
            _isComparisonBridgeEnd(r, c, g) {
              if (
                !this._isComparisonEnd(r) ||
                this._isRangeEnd(r) ||
                !this._isInRange(r)
              )
                return !1;
              let T = this.rows[c][g + 1];
              if (!T) {
                const ge = this.rows[c + 1];
                T = ge && ge[0];
              }
              return T && !this._isRangeStart(T.compareValue);
            }
            _isComparisonEnd(r) {
              return Qr(r, this.comparisonStart, this.comparisonEnd);
            }
            _isInComparisonRange(r) {
              return Jn(
                r,
                this.comparisonStart,
                this.comparisonEnd,
                this.isRange,
              );
            }
            _isComparisonIdentical(r) {
              return (
                this.comparisonStart === this.comparisonEnd &&
                r === this.comparisonStart
              );
            }
            _isPreviewStart(r) {
              return gr(r, this.previewStart, this.previewEnd);
            }
            _isPreviewEnd(r) {
              return Qr(r, this.previewStart, this.previewEnd);
            }
            _isInPreview(r) {
              return Jn(r, this.previewStart, this.previewEnd, this.isRange);
            }
            _getDescribedby(r) {
              return this.isRange
                ? this.startValue === r && this.endValue === r
                  ? `${this._startDateLabelId} ${this._endDateLabelId}`
                  : this.startValue === r
                  ? this._startDateLabelId
                  : this.endValue === r
                  ? this._endDateLabelId
                  : null
                : null;
            }
            _getCellFromElement(r) {
              const c = Sn(r);
              if (c) {
                const g = c.getAttribute('data-mat-row'),
                  T = c.getAttribute('data-mat-col');
                if (g && T) return this.rows[parseInt(g)][parseInt(T)];
              }
              return null;
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(a.Y36(a.SBq), a.Y36(a.R0b));
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['', 'mat-calendar-body', '']],
              hostAttrs: [1, 'mat-calendar-body'],
              inputs: {
                label: 'label',
                rows: 'rows',
                todayValue: 'todayValue',
                startValue: 'startValue',
                endValue: 'endValue',
                labelMinRequiredCells: 'labelMinRequiredCells',
                numCols: 'numCols',
                activeCell: 'activeCell',
                isRange: 'isRange',
                cellAspectRatio: 'cellAspectRatio',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                previewStart: 'previewStart',
                previewEnd: 'previewEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedValueChange: 'selectedValueChange',
                previewChange: 'previewChange',
                activeDateChange: 'activeDateChange',
                dragStarted: 'dragStarted',
                dragEnded: 'dragEnded',
              },
              exportAs: ['matCalendarBody'],
              features: [a.TTD],
              attrs: Wr,
              decls: 6,
              vars: 6,
              consts: [
                ['aria-hidden', 'true', 4, 'ngIf'],
                ['role', 'row', 4, 'ngFor', 'ngForOf'],
                [1, 'mat-calendar-body-hidden-label', 3, 'id'],
                ['aria-hidden', 'true'],
                [1, 'mat-calendar-body-label'],
                ['role', 'row'],
                [
                  'class',
                  'mat-calendar-body-label',
                  3,
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngIf',
                ],
                [
                  'role',
                  'gridcell',
                  'class',
                  'mat-calendar-body-cell-container',
                  3,
                  'width',
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                ['role', 'gridcell', 1, 'mat-calendar-body-cell-container'],
                [
                  'type',
                  'button',
                  1,
                  'mat-calendar-body-cell',
                  3,
                  'ngClass',
                  'tabindex',
                  'click',
                  'focus',
                ],
                [1, 'mat-calendar-body-cell-content', 'mat-focus-indicator'],
                ['aria-hidden', 'true', 1, 'mat-calendar-body-cell-preview'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, li, 3, 6, 'tr', 0),
                  a.YNc(1, vi, 3, 2, 'tr', 1),
                  a.TgZ(2, 'label', 2),
                  a._uU(3),
                  a.qZA(),
                  a.TgZ(4, 'label', 2),
                  a._uU(5),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngIf', c._firstRowOffset < c.labelMinRequiredCells),
                    a.xp6(1),
                    a.Q6J('ngForOf', c.rows),
                    a.xp6(1),
                    a.Q6J('id', c._startDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.startDateAccessibleName, '\n'),
                    a.xp6(1),
                    a.Q6J('id', c._endDateLabelId),
                    a.xp6(1),
                    a.hij(' ', c.endDateAccessibleName, '\n'));
              },
              dependencies: [s.mk, s.sg, s.O5],
              styles: [
                '.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })();
      function at(_) {
        return 'TD' === _?.nodeName;
      }
      function Sn(_) {
        let F;
        return (
          at(_)
            ? (F = _)
            : at(_.parentNode)
            ? (F = _.parentNode)
            : at(_.parentNode?.parentNode) && (F = _.parentNode.parentNode),
          null != F?.getAttribute('data-mat-row') ? F : null
        );
      }
      function gr(_, F, r) {
        return null !== r && F !== r && _ < r && _ === F;
      }
      function Qr(_, F, r) {
        return null !== F && F !== r && _ >= F && _ === r;
      }
      function Jn(_, F, r, c) {
        return c && null !== F && null !== r && F !== r && _ >= F && _ <= r;
      }
      function Bo(_) {
        const F = _.changedTouches[0];
        return document.elementFromPoint(F.clientX, F.clientY);
      }
      class bi {
        constructor(F, r) {
          (this.start = F), (this.end = r);
        }
      }
      let yi = (() => {
          class _ {
            constructor(r, c) {
              (this.selection = r),
                (this._adapter = c),
                (this._selectionChanged = new $e.x()),
                (this.selectionChanged = this._selectionChanged),
                (this.selection = r);
            }
            updateSelection(r, c) {
              const g = this.selection;
              (this.selection = r),
                this._selectionChanged.next({
                  selection: r,
                  source: c,
                  oldValue: g,
                });
            }
            ngOnDestroy() {
              this._selectionChanged.complete();
            }
            _isValidDateInstance(r) {
              return (
                this._adapter.isDateInstance(r) && this._adapter.isValid(r)
              );
            }
          }
          return (
            (_.ɵfac = function (r) {
              a.$Z();
            }),
            (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
            _
          );
        })(),
        _o = (() => {
          class _ extends yi {
            constructor(r) {
              super(null, r);
            }
            add(r) {
              super.updateSelection(r, this);
            }
            isValid() {
              return (
                null != this.selection &&
                this._isValidDateInstance(this.selection)
              );
            }
            isComplete() {
              return null != this.selection;
            }
            clone() {
              const r = new _(this._adapter);
              return r.updateSelection(this.selection, this), r;
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(a.LFG(Be._A));
            }),
            (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
            _
          );
        })();
      const Xo = {
          provide: yi,
          deps: [[new a.FiY(), new a.tp0(), yi], Be._A],
          useFactory: function hs(_, F) {
            return _ || new _o(F);
          },
        },
        Li = new a.OlP('MAT_DATE_RANGE_SELECTION_STRATEGY');
      let Br = (() => {
        class _ {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            const c = this._activeDate,
              g =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              g,
              this.minDate,
              this.maxDate,
            )),
              this._hasSameMonthAndYear(c, this._activeDate) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setRanges(this._selected);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, g, T, ge) {
            (this._changeDetectorRef = r),
              (this._dateFormats = c),
              (this._dateAdapter = g),
              (this._dir = T),
              (this._rangeStrategy = ge),
              (this._rerenderSubscription = Ct.w0.EMPTY),
              (this.activeDrag = null),
              (this.selectedChange = new a.vpe()),
              (this._userSelection = new a.vpe()),
              (this.dragStarted = new a.vpe()),
              (this.dragEnded = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Nt.O)(null))
              .subscribe(() => this._init());
          }
          ngOnChanges(r) {
            const c = r.comparisonStart || r.comparisonEnd;
            c && !c.firstChange && this._setRanges(this.selected),
              r.activeDrag && !this.activeDrag && this._clearPreview();
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _dateSelected(r) {
            const c = r.value,
              g = this._getDateFromDayOfMonth(c);
            let T, ge;
            this._selected instanceof bi
              ? ((T = this._getDateInCurrentMonth(this._selected.start)),
                (ge = this._getDateInCurrentMonth(this._selected.end)))
              : (T = ge = this._getDateInCurrentMonth(this._selected)),
              (T !== c || ge !== c) && this.selectedChange.emit(g),
              this._userSelection.emit({ value: g, event: r.event }),
              this._clearPreview(),
              this._changeDetectorRef.markForCheck();
          }
          _updateActiveDate(r) {
            const g = this._activeDate;
            (this.activeDate = this._getDateFromDayOfMonth(r.value)),
              this._dateAdapter.compareDate(g, this.activeDate) &&
                this.activeDateChange.emit(this._activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              g = this._isRtl();
            switch (r.keyCode) {
              case z.oh:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  g ? 1 : -1,
                );
                break;
              case z.SV:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  g ? -1 : 1,
                );
                break;
              case z.LH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  -7,
                );
                break;
              case z.JH:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  7,
                );
                break;
              case z.Sd:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  1 - this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case z.uR:
                this.activeDate = this._dateAdapter.addCalendarDays(
                  this._activeDate,
                  this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                    this._dateAdapter.getDate(this._activeDate),
                );
                break;
              case z.Ku:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                break;
              case z.VM:
                this.activeDate = r.altKey
                  ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
                  : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                break;
              case z.K5:
              case z.L_:
                return (
                  (this._selectionKeyPressed = !0),
                  void (this._canSelect(this._activeDate) && r.preventDefault())
                );
              case z.hY:
                return void (
                  null != this._previewEnd &&
                  !(0, z.Vb)(r) &&
                  (this._clearPreview(),
                  this.activeDrag
                    ? this.dragEnded.emit({ value: null, event: r })
                    : (this.selectedChange.emit(null),
                      this._userSelection.emit({ value: null, event: r })),
                  r.preventDefault(),
                  r.stopPropagation())
                );
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              (this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked()),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === z.L_ || r.keyCode === z.K5) &&
              (this._selectionKeyPressed &&
                this._canSelect(this._activeDate) &&
                this._dateSelected({
                  value: this._dateAdapter.getDate(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _init() {
            this._setRanges(this.selected),
              (this._todayDate = this._getCellCompareValue(
                this._dateAdapter.today(),
              )),
              (this._monthLabel = this._dateFormats.display.monthLabel
                ? this._dateAdapter.format(
                    this.activeDate,
                    this._dateFormats.display.monthLabel,
                  )
                : this._dateAdapter
                    .getMonthNames('short')
                    [
                      this._dateAdapter.getMonth(this.activeDate)
                    ].toLocaleUpperCase());
            let r = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              1,
            );
            (this._firstWeekOffset =
              (7 +
                this._dateAdapter.getDayOfWeek(r) -
                this._dateAdapter.getFirstDayOfWeek()) %
              7),
              this._initWeekdays(),
              this._createWeekCells(),
              this._changeDetectorRef.markForCheck();
          }
          _focusActiveCell(r) {
            this._matCalendarBody._focusActiveCell(r);
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _previewChanged({ event: r, value: c }) {
            if (this._rangeStrategy) {
              const g = c ? c.rawValue : null,
                T = this._rangeStrategy.createPreview(g, this.selected, r);
              if (
                ((this._previewStart = this._getCellCompareValue(T.start)),
                (this._previewEnd = this._getCellCompareValue(T.end)),
                this.activeDrag && g)
              ) {
                const ge = this._rangeStrategy.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  g,
                  r,
                );
                ge &&
                  ((this._previewStart = this._getCellCompareValue(ge.start)),
                  (this._previewEnd = this._getCellCompareValue(ge.end)));
              }
              this._changeDetectorRef.detectChanges();
            }
          }
          _dragEnded(r) {
            if (this.activeDrag)
              if (r.value) {
                const c = this._rangeStrategy?.createDrag?.(
                  this.activeDrag.value,
                  this.selected,
                  r.value,
                  r.event,
                );
                this.dragEnded.emit({ value: c ?? null, event: r.event });
              } else this.dragEnded.emit({ value: null, event: r.event });
          }
          _getDateFromDayOfMonth(r) {
            return this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r,
            );
          }
          _initWeekdays() {
            const r = this._dateAdapter.getFirstDayOfWeek(),
              c = this._dateAdapter.getDayOfWeekNames('narrow');
            let T = this._dateAdapter
              .getDayOfWeekNames('long')
              .map((ge, lt) => ({ long: ge, narrow: c[lt] }));
            this._weekdays = T.slice(r).concat(T.slice(0, r));
          }
          _createWeekCells() {
            const r = this._dateAdapter.getNumDaysInMonth(this.activeDate),
              c = this._dateAdapter.getDateNames();
            this._weeks = [[]];
            for (let g = 0, T = this._firstWeekOffset; g < r; g++, T++) {
              7 == T && (this._weeks.push([]), (T = 0));
              const ge = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  this._dateAdapter.getMonth(this.activeDate),
                  g + 1,
                ),
                lt = this._shouldEnableDate(ge),
                ln = this._dateAdapter.format(
                  ge,
                  this._dateFormats.display.dateA11yLabel,
                ),
                In = this.dateClass ? this.dateClass(ge, 'month') : void 0;
              this._weeks[this._weeks.length - 1].push(
                new et(
                  g + 1,
                  c[g],
                  ln,
                  lt,
                  In,
                  this._getCellCompareValue(ge),
                  ge,
                ),
              );
            }
          }
          _shouldEnableDate(r) {
            return (
              !!r &&
              (!this.minDate ||
                this._dateAdapter.compareDate(r, this.minDate) >= 0) &&
              (!this.maxDate ||
                this._dateAdapter.compareDate(r, this.maxDate) <= 0) &&
              (!this.dateFilter || this.dateFilter(r))
            );
          }
          _getDateInCurrentMonth(r) {
            return r && this._hasSameMonthAndYear(r, this.activeDate)
              ? this._dateAdapter.getDate(r)
              : null;
          }
          _hasSameMonthAndYear(r, c) {
            return !(
              !r ||
              !c ||
              this._dateAdapter.getMonth(r) != this._dateAdapter.getMonth(c) ||
              this._dateAdapter.getYear(r) != this._dateAdapter.getYear(c)
            );
          }
          _getCellCompareValue(r) {
            if (r) {
              const c = this._dateAdapter.getYear(r),
                g = this._dateAdapter.getMonth(r),
                T = this._dateAdapter.getDate(r);
              return new Date(c, g, T).getTime();
            }
            return null;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setRanges(r) {
            r instanceof bi
              ? ((this._rangeStart = this._getCellCompareValue(r.start)),
                (this._rangeEnd = this._getCellCompareValue(r.end)),
                (this._isRange = !0))
              : ((this._rangeStart = this._rangeEnd =
                  this._getCellCompareValue(r)),
                (this._isRange = !1)),
              (this._comparisonRangeStart = this._getCellCompareValue(
                this.comparisonStart,
              )),
              (this._comparisonRangeEnd = this._getCellCompareValue(
                this.comparisonEnd,
              ));
          }
          _canSelect(r) {
            return !this.dateFilter || this.dateFilter(r);
          }
          _clearPreview() {
            this._previewStart = this._previewEnd = null;
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(a.sBO),
              a.Y36(Be.sG, 8),
              a.Y36(Be._A, 8),
              a.Y36(Ii.Is, 8),
              a.Y36(Li, 8),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['mat-month-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(Kn, 5), 2 & r)) {
                let g;
                a.iGM((g = a.CRH())) && (c._matCalendarBody = g.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
              comparisonStart: 'comparisonStart',
              comparisonEnd: 'comparisonEnd',
              startDateAccessibleName: 'startDateAccessibleName',
              endDateAccessibleName: 'endDateAccessibleName',
              activeDrag: 'activeDrag',
            },
            outputs: {
              selectedChange: 'selectedChange',
              _userSelection: '_userSelection',
              dragStarted: 'dragStarted',
              dragEnded: 'dragEnded',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMonthView'],
            features: [a.TTD],
            decls: 7,
            vars: 15,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              [1, 'mat-calendar-table-header'],
              ['scope', 'col', 4, 'ngFor', 'ngForOf'],
              [
                'aria-hidden',
                'true',
                'colspan',
                '7',
                1,
                'mat-calendar-table-header-divider',
              ],
              [
                'mat-calendar-body',
                '',
                3,
                'label',
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'comparisonStart',
                'comparisonEnd',
                'previewStart',
                'previewEnd',
                'isRange',
                'labelMinRequiredCells',
                'activeCell',
                'startDateAccessibleName',
                'endDateAccessibleName',
                'selectedValueChange',
                'activeDateChange',
                'previewChange',
                'dragStarted',
                'dragEnded',
                'keyup',
                'keydown',
              ],
              ['scope', 'col'],
              [1, 'cdk-visually-hidden'],
              ['aria-hidden', 'true'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a.YNc(3, Kr, 5, 2, 'th', 2),
                a.qZA(),
                a.TgZ(4, 'tr'),
                a._UZ(5, 'th', 3),
                a.qZA()(),
                a.TgZ(6, 'tbody', 4),
                a.NdJ('selectedValueChange', function (T) {
                  return c._dateSelected(T);
                })('activeDateChange', function (T) {
                  return c._updateActiveDate(T);
                })('previewChange', function (T) {
                  return c._previewChanged(T);
                })('dragStarted', function (T) {
                  return c.dragStarted.emit(T);
                })('dragEnded', function (T) {
                  return c._dragEnded(T);
                })('keyup', function (T) {
                  return c._handleCalendarBodyKeyup(T);
                })('keydown', function (T) {
                  return c._handleCalendarBodyKeydown(T);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(3),
                  a.Q6J('ngForOf', c._weekdays),
                  a.xp6(3),
                  a.Q6J('label', c._monthLabel)('rows', c._weeks)(
                    'todayValue',
                    c._todayDate,
                  )('startValue', c._rangeStart)('endValue', c._rangeEnd)(
                    'comparisonStart',
                    c._comparisonRangeStart,
                  )('comparisonEnd', c._comparisonRangeEnd)(
                    'previewStart',
                    c._previewStart,
                  )('previewEnd', c._previewEnd)('isRange', c._isRange)(
                    'labelMinRequiredCells',
                    3,
                  )('activeCell', c._dateAdapter.getDate(c.activeDate) - 1)(
                    'startDateAccessibleName',
                    c.startDateAccessibleName,
                  )('endDateAccessibleName', c.endDateAccessibleName));
            },
            dependencies: [s.sg, Kn],
            encapsulation: 2,
            changeDetection: 0,
          })),
          _
        );
      })();
      const er = 24;
      let vo = (() => {
        class _ {
          get activeDate() {
            return this._activeDate;
          }
          set activeDate(r) {
            let c = this._activeDate;
            const g =
              this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              ) || this._dateAdapter.today();
            (this._activeDate = this._dateAdapter.clampDate(
              g,
              this.minDate,
              this.maxDate,
            )),
              lo(
                this._dateAdapter,
                c,
                this._activeDate,
                this.minDate,
                this.maxDate,
              ) || this._init();
          }
          get selected() {
            return this._selected;
          }
          set selected(r) {
            (this._selected =
              r instanceof bi
                ? r
                : this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(r),
                  )),
              this._setSelectedYear(r);
          }
          get minDate() {
            return this._minDate;
          }
          set minDate(r) {
            this._minDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          get maxDate() {
            return this._maxDate;
          }
          set maxDate(r) {
            this._maxDate = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(r),
            );
          }
          constructor(r, c, g) {
            (this._changeDetectorRef = r),
              (this._dateAdapter = c),
              (this._dir = g),
              (this._rerenderSubscription = Ct.w0.EMPTY),
              (this.selectedChange = new a.vpe()),
              (this.yearSelected = new a.vpe()),
              (this.activeDateChange = new a.vpe()),
              (this._activeDate = this._dateAdapter.today());
          }
          ngAfterContentInit() {
            this._rerenderSubscription = this._dateAdapter.localeChanges
              .pipe((0, Nt.O)(null))
              .subscribe(() => this._init());
          }
          ngOnDestroy() {
            this._rerenderSubscription.unsubscribe();
          }
          _init() {
            this._todayYear = this._dateAdapter.getYear(
              this._dateAdapter.today(),
            );
            const c =
              this._dateAdapter.getYear(this._activeDate) -
              Mr(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate,
              );
            this._years = [];
            for (let g = 0, T = []; g < er; g++)
              T.push(c + g),
                4 == T.length &&
                  (this._years.push(T.map(ge => this._createCellForYear(ge))),
                  (T = []));
            this._changeDetectorRef.markForCheck();
          }
          _yearSelected(r) {
            const c = r.value,
              g = this._dateAdapter.createDate(c, 0, 1),
              T = this._getDateFromYear(c);
            this.yearSelected.emit(g), this.selectedChange.emit(T);
          }
          _updateActiveDate(r) {
            const g = this._activeDate;
            (this.activeDate = this._getDateFromYear(r.value)),
              this._dateAdapter.compareDate(g, this.activeDate) &&
                this.activeDateChange.emit(this.activeDate);
          }
          _handleCalendarBodyKeydown(r) {
            const c = this._activeDate,
              g = this._isRtl();
            switch (r.keyCode) {
              case z.oh:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  g ? 1 : -1,
                );
                break;
              case z.SV:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  g ? -1 : 1,
                );
                break;
              case z.LH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -4,
                );
                break;
              case z.JH:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  4,
                );
                break;
              case z.Sd:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  -Mr(
                    this._dateAdapter,
                    this.activeDate,
                    this.minDate,
                    this.maxDate,
                  ),
                );
                break;
              case z.uR:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  er -
                    Mr(
                      this._dateAdapter,
                      this.activeDate,
                      this.minDate,
                      this.maxDate,
                    ) -
                    1,
                );
                break;
              case z.Ku:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * -er : -er,
                );
                break;
              case z.VM:
                this.activeDate = this._dateAdapter.addCalendarYears(
                  this._activeDate,
                  r.altKey ? 10 * er : er,
                );
                break;
              case z.K5:
              case z.L_:
                this._selectionKeyPressed = !0;
                break;
              default:
                return;
            }
            this._dateAdapter.compareDate(c, this.activeDate) &&
              this.activeDateChange.emit(this.activeDate),
              this._focusActiveCellAfterViewChecked(),
              r.preventDefault();
          }
          _handleCalendarBodyKeyup(r) {
            (r.keyCode === z.L_ || r.keyCode === z.K5) &&
              (this._selectionKeyPressed &&
                this._yearSelected({
                  value: this._dateAdapter.getYear(this._activeDate),
                  event: r,
                }),
              (this._selectionKeyPressed = !1));
          }
          _getActiveCell() {
            return Mr(
              this._dateAdapter,
              this.activeDate,
              this.minDate,
              this.maxDate,
            );
          }
          _focusActiveCell() {
            this._matCalendarBody._focusActiveCell();
          }
          _focusActiveCellAfterViewChecked() {
            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
          }
          _getDateFromYear(r) {
            const c = this._dateAdapter.getMonth(this.activeDate),
              g = this._dateAdapter.getNumDaysInMonth(
                this._dateAdapter.createDate(r, c, 1),
              );
            return this._dateAdapter.createDate(
              r,
              c,
              Math.min(this._dateAdapter.getDate(this.activeDate), g),
            );
          }
          _createCellForYear(r) {
            const c = this._dateAdapter.createDate(r, 0, 1),
              g = this._dateAdapter.getYearName(c),
              T = this.dateClass ? this.dateClass(c, 'multi-year') : void 0;
            return new et(r, g, g, this._shouldEnableYear(r), T);
          }
          _shouldEnableYear(r) {
            if (
              null == r ||
              (this.maxDate && r > this._dateAdapter.getYear(this.maxDate)) ||
              (this.minDate && r < this._dateAdapter.getYear(this.minDate))
            )
              return !1;
            if (!this.dateFilter) return !0;
            for (
              let g = this._dateAdapter.createDate(r, 0, 1);
              this._dateAdapter.getYear(g) == r;
              g = this._dateAdapter.addCalendarDays(g, 1)
            )
              if (this.dateFilter(g)) return !0;
            return !1;
          }
          _isRtl() {
            return this._dir && 'rtl' === this._dir.value;
          }
          _setSelectedYear(r) {
            if (((this._selectedYear = null), r instanceof bi)) {
              const c = r.start || r.end;
              c && (this._selectedYear = this._dateAdapter.getYear(c));
            } else r && (this._selectedYear = this._dateAdapter.getYear(r));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(a.Y36(a.sBO), a.Y36(Be._A, 8), a.Y36(Ii.Is, 8));
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['mat-multi-year-view']],
            viewQuery: function (r, c) {
              if ((1 & r && a.Gf(Kn, 5), 2 & r)) {
                let g;
                a.iGM((g = a.CRH())) && (c._matCalendarBody = g.first);
              }
            },
            inputs: {
              activeDate: 'activeDate',
              selected: 'selected',
              minDate: 'minDate',
              maxDate: 'maxDate',
              dateFilter: 'dateFilter',
              dateClass: 'dateClass',
            },
            outputs: {
              selectedChange: 'selectedChange',
              yearSelected: 'yearSelected',
              activeDateChange: 'activeDateChange',
            },
            exportAs: ['matMultiYearView'],
            decls: 5,
            vars: 7,
            consts: [
              ['role', 'grid', 1, 'mat-calendar-table'],
              ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
              ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
              [
                'mat-calendar-body',
                '',
                3,
                'rows',
                'todayValue',
                'startValue',
                'endValue',
                'numCols',
                'cellAspectRatio',
                'activeCell',
                'selectedValueChange',
                'activeDateChange',
                'keyup',
                'keydown',
              ],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                a._UZ(3, 'th', 2),
                a.qZA()(),
                a.TgZ(4, 'tbody', 3),
                a.NdJ('selectedValueChange', function (T) {
                  return c._yearSelected(T);
                })('activeDateChange', function (T) {
                  return c._updateActiveDate(T);
                })('keyup', function (T) {
                  return c._handleCalendarBodyKeyup(T);
                })('keydown', function (T) {
                  return c._handleCalendarBodyKeydown(T);
                }),
                a.qZA()()),
                2 & r &&
                  (a.xp6(4),
                  a.Q6J('rows', c._years)('todayValue', c._todayYear)(
                    'startValue',
                    c._selectedYear,
                  )('endValue', c._selectedYear)('numCols', 4)(
                    'cellAspectRatio',
                    4 / 7,
                  )('activeCell', c._getActiveCell()));
            },
            dependencies: [Kn],
            encapsulation: 2,
            changeDetection: 0,
          })),
          _
        );
      })();
      function lo(_, F, r, c, g) {
        const T = _.getYear(F),
          ge = _.getYear(r),
          lt = B(_, c, g);
        return Math.floor((T - lt) / er) === Math.floor((ge - lt) / er);
      }
      function Mr(_, F, r, c) {
        return (function h(_, F) {
          return ((_ % F) + F) % F;
        })(_.getYear(F) - B(_, r, c), er);
      }
      function B(_, F, r) {
        let c = 0;
        return r ? (c = _.getYear(r) - er + 1) : F && (c = _.getYear(F)), c;
      }
      let p = (() => {
          class _ {
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(r) {
              let c = this._activeDate;
              const g =
                this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(r),
                ) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(
                g,
                this.minDate,
                this.maxDate,
              )),
                this._dateAdapter.getYear(c) !==
                  this._dateAdapter.getYear(this._activeDate) && this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              (this._selected =
                r instanceof bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    )),
                this._setSelectedMonth(r);
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            constructor(r, c, g, T) {
              (this._changeDetectorRef = r),
                (this._dateFormats = c),
                (this._dateAdapter = g),
                (this._dir = T),
                (this._rerenderSubscription = Ct.w0.EMPTY),
                (this.selectedChange = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.activeDateChange = new a.vpe()),
                (this._activeDate = this._dateAdapter.today());
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe((0, Nt.O)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _monthSelected(r) {
              const c = r.value,
                g = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  c,
                  1,
                );
              this.monthSelected.emit(g);
              const T = this._getDateFromMonth(c);
              this.selectedChange.emit(T);
            }
            _updateActiveDate(r) {
              const g = this._activeDate;
              (this.activeDate = this._getDateFromMonth(r.value)),
                this._dateAdapter.compareDate(g, this.activeDate) &&
                  this.activeDateChange.emit(this.activeDate);
            }
            _handleCalendarBodyKeydown(r) {
              const c = this._activeDate,
                g = this._isRtl();
              switch (r.keyCode) {
                case z.oh:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    g ? 1 : -1,
                  );
                  break;
                case z.SV:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    g ? -1 : 1,
                  );
                  break;
                case z.LH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -4,
                  );
                  break;
                case z.JH:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    4,
                  );
                  break;
                case z.Sd:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case z.uR:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    11 - this._dateAdapter.getMonth(this._activeDate),
                  );
                  break;
                case z.Ku:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? -10 : -1,
                  );
                  break;
                case z.VM:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    r.altKey ? 10 : 1,
                  );
                  break;
                case z.K5:
                case z.L_:
                  this._selectionKeyPressed = !0;
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(c, this.activeDate) &&
                (this.activeDateChange.emit(this.activeDate),
                this._focusActiveCellAfterViewChecked()),
                r.preventDefault();
            }
            _handleCalendarBodyKeyup(r) {
              (r.keyCode === z.L_ || r.keyCode === z.K5) &&
                (this._selectionKeyPressed &&
                  this._monthSelected({
                    value: this._dateAdapter.getMonth(this._activeDate),
                    event: r,
                  }),
                (this._selectionKeyPressed = !1));
            }
            _init() {
              this._setSelectedMonth(this.selected),
                (this._todayMonth = this._getMonthInCurrentYear(
                  this._dateAdapter.today(),
                )),
                (this._yearLabel = this._dateAdapter.getYearName(
                  this.activeDate,
                ));
              let r = this._dateAdapter.getMonthNames('short');
              (this._months = [
                [0, 1, 2, 3],
                [4, 5, 6, 7],
                [8, 9, 10, 11],
              ].map(c => c.map(g => this._createCellForMonth(g, r[g])))),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _focusActiveCellAfterViewChecked() {
              this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
            }
            _getMonthInCurrentYear(r) {
              return r &&
                this._dateAdapter.getYear(r) ==
                  this._dateAdapter.getYear(this.activeDate)
                ? this._dateAdapter.getMonth(r)
                : null;
            }
            _getDateFromMonth(r) {
              const c = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                g = this._dateAdapter.getNumDaysInMonth(c);
              return this._dateAdapter.createDate(
                this._dateAdapter.getYear(this.activeDate),
                r,
                Math.min(this._dateAdapter.getDate(this.activeDate), g),
              );
            }
            _createCellForMonth(r, c) {
              const g = this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  r,
                  1,
                ),
                T = this._dateAdapter.format(
                  g,
                  this._dateFormats.display.monthYearA11yLabel,
                ),
                ge = this.dateClass ? this.dateClass(g, 'year') : void 0;
              return new et(
                r,
                c.toLocaleUpperCase(),
                T,
                this._shouldEnableMonth(r),
                ge,
              );
            }
            _shouldEnableMonth(r) {
              const c = this._dateAdapter.getYear(this.activeDate);
              if (
                null == r ||
                this._isYearAndMonthAfterMaxDate(c, r) ||
                this._isYearAndMonthBeforeMinDate(c, r)
              )
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let T = this._dateAdapter.createDate(c, r, 1);
                this._dateAdapter.getMonth(T) == r;
                T = this._dateAdapter.addCalendarDays(T, 1)
              )
                if (this.dateFilter(T)) return !0;
              return !1;
            }
            _isYearAndMonthAfterMaxDate(r, c) {
              if (this.maxDate) {
                const g = this._dateAdapter.getYear(this.maxDate),
                  T = this._dateAdapter.getMonth(this.maxDate);
                return r > g || (r === g && c > T);
              }
              return !1;
            }
            _isYearAndMonthBeforeMinDate(r, c) {
              if (this.minDate) {
                const g = this._dateAdapter.getYear(this.minDate),
                  T = this._dateAdapter.getMonth(this.minDate);
                return r < g || (r === g && c < T);
              }
              return !1;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
            _setSelectedMonth(r) {
              this._selectedMonth =
                r instanceof bi
                  ? this._getMonthInCurrentYear(r.start) ||
                    this._getMonthInCurrentYear(r.end)
                  : this._getMonthInCurrentYear(r);
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.sBO),
                a.Y36(Be.sG, 8),
                a.Y36(Be._A, 8),
                a.Y36(Ii.Is, 8),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-year-view']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(Kn, 5), 2 & r)) {
                  let g;
                  a.iGM((g = a.CRH())) && (c._matCalendarBody = g.first);
                }
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                monthSelected: 'monthSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matYearView'],
              decls: 5,
              vars: 9,
              consts: [
                ['role', 'grid', 1, 'mat-calendar-table'],
                ['aria-hidden', 'true', 1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'startValue',
                  'endValue',
                  'labelMinRequiredCells',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'activeDateChange',
                  'keyup',
                  'keydown',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'table', 0)(1, 'thead', 1)(2, 'tr'),
                  a._UZ(3, 'th', 2),
                  a.qZA()(),
                  a.TgZ(4, 'tbody', 3),
                  a.NdJ('selectedValueChange', function (T) {
                    return c._monthSelected(T);
                  })('activeDateChange', function (T) {
                    return c._updateActiveDate(T);
                  })('keyup', function (T) {
                    return c._handleCalendarBodyKeyup(T);
                  })('keydown', function (T) {
                    return c._handleCalendarBodyKeydown(T);
                  }),
                  a.qZA()()),
                  2 & r &&
                    (a.xp6(4),
                    a.Q6J('label', c._yearLabel)('rows', c._months)(
                      'todayValue',
                      c._todayMonth,
                    )('startValue', c._selectedMonth)(
                      'endValue',
                      c._selectedMonth,
                    )('labelMinRequiredCells', 2)('numCols', 4)(
                      'cellAspectRatio',
                      4 / 7,
                    )('activeCell', c._dateAdapter.getMonth(c.activeDate)));
              },
              dependencies: [Kn],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })(),
        S = 1,
        V = (() => {
          class _ {
            constructor(r, c, g, T, ge) {
              (this._intl = r),
                (this.calendar = c),
                (this._dateAdapter = g),
                (this._dateFormats = T),
                (this._id = 'mat-calendar-header-' + S++),
                (this._periodButtonLabelId = `${this._id}-period-label`),
                this.calendar.stateChanges.subscribe(() => ge.markForCheck());
            }
            get periodButtonText() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRange(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonDescription() {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter
                    .format(
                      this.calendar.activeDate,
                      this._dateFormats.display.monthYearLabel,
                    )
                    .toLocaleUpperCase()
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYearName(this.calendar.activeDate)
                : this._intl.formatYearRangeLabel(
                    ...this._formatMinAndMaxYearLabels(),
                  );
            }
            get periodButtonLabel() {
              return 'month' == this.calendar.currentView
                ? this._intl.switchToMultiYearViewLabel
                : this._intl.switchToMonthViewLabel;
            }
            get prevButtonLabel() {
              return {
                month: this._intl.prevMonthLabel,
                year: this._intl.prevYearLabel,
                'multi-year': this._intl.prevMultiYearLabel,
              }[this.calendar.currentView];
            }
            get nextButtonLabel() {
              return {
                month: this._intl.nextMonthLabel,
                year: this._intl.nextYearLabel,
                'multi-year': this._intl.nextMultiYearLabel,
              }[this.calendar.currentView];
            }
            currentPeriodClicked() {
              this.calendar.currentView =
                'month' == this.calendar.currentView ? 'multi-year' : 'month';
            }
            previousClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      -1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? -1 : -er,
                    );
            }
            nextClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(
                      this.calendar.activeDate,
                      1,
                    )
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? 1 : er,
                    );
            }
            previousEnabled() {
              return (
                !this.calendar.minDate ||
                !this.calendar.minDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.minDate,
                )
              );
            }
            nextEnabled() {
              return (
                !this.calendar.maxDate ||
                !this._isSameView(
                  this.calendar.activeDate,
                  this.calendar.maxDate,
                )
              );
            }
            _isSameView(r, c) {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) ==
                    this._dateAdapter.getYear(c) &&
                    this._dateAdapter.getMonth(r) ==
                      this._dateAdapter.getMonth(c)
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYear(r) == this._dateAdapter.getYear(c)
                : lo(
                    this._dateAdapter,
                    r,
                    c,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  );
            }
            _formatMinAndMaxYearLabels() {
              const c =
                  this._dateAdapter.getYear(this.calendar.activeDate) -
                  Mr(
                    this._dateAdapter,
                    this.calendar.activeDate,
                    this.calendar.minDate,
                    this.calendar.maxDate,
                  ),
                g = c + er - 1;
              return [
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(c, 0, 1),
                ),
                this._dateAdapter.getYearName(
                  this._dateAdapter.createDate(g, 0, 1),
                ),
              ];
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(G),
                a.Y36((0, a.Gpc)(() => q)),
                a.Y36(Be._A, 8),
                a.Y36(Be.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-calendar-header']],
              exportAs: ['matCalendarHeader'],
              ngContentSelectors: Zr,
              decls: 13,
              vars: 11,
              consts: [
                [1, 'mat-calendar-header'],
                [1, 'mat-calendar-controls'],
                [
                  'mat-button',
                  '',
                  'type',
                  'button',
                  'aria-live',
                  'polite',
                  1,
                  'mat-calendar-period-button',
                  3,
                  'click',
                ],
                ['aria-hidden', 'true'],
                [
                  'viewBox',
                  '0 0 10 5',
                  'focusable',
                  'false',
                  'aria-hidden',
                  'true',
                  1,
                  'mat-calendar-arrow',
                ],
                ['points', '0,0 5,5 10,0'],
                [1, 'mat-calendar-spacer'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-previous-button',
                  3,
                  'disabled',
                  'click',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-calendar-next-button',
                  3,
                  'disabled',
                  'click',
                ],
                [1, 'mat-calendar-hidden-label', 3, 'id'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(),
                  a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'button', 2),
                  a.NdJ('click', function () {
                    return c.currentPeriodClicked();
                  }),
                  a.TgZ(3, 'span', 3),
                  a._uU(4),
                  a.qZA(),
                  a.O4$(),
                  a.TgZ(5, 'svg', 4),
                  a._UZ(6, 'polygon', 5),
                  a.qZA()(),
                  a.kcU(),
                  a._UZ(7, 'div', 6),
                  a.Hsn(8),
                  a.TgZ(9, 'button', 7),
                  a.NdJ('click', function () {
                    return c.previousClicked();
                  }),
                  a.qZA(),
                  a.TgZ(10, 'button', 8),
                  a.NdJ('click', function () {
                    return c.nextClicked();
                  }),
                  a.qZA()()(),
                  a.TgZ(11, 'label', 9),
                  a._uU(12),
                  a.qZA()),
                  2 & r &&
                    (a.xp6(2),
                    a.uIk('aria-label', c.periodButtonLabel)(
                      'aria-describedby',
                      c._periodButtonLabelId,
                    ),
                    a.xp6(2),
                    a.Oqu(c.periodButtonText),
                    a.xp6(1),
                    a.ekj(
                      'mat-calendar-invert',
                      'month' !== c.calendar.currentView,
                    ),
                    a.xp6(4),
                    a.Q6J('disabled', !c.previousEnabled()),
                    a.uIk('aria-label', c.prevButtonLabel),
                    a.xp6(1),
                    a.Q6J('disabled', !c.nextEnabled()),
                    a.uIk('aria-label', c.nextButtonLabel),
                    a.xp6(1),
                    a.Q6J('id', c._periodButtonLabelId),
                    a.xp6(1),
                    a.Oqu(c.periodButtonDescription));
              },
              dependencies: [Lt.lW, Lt.RK],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })(),
        q = (() => {
          class _ {
            get startAt() {
              return this._startAt;
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get selected() {
              return this._selected;
            }
            set selected(r) {
              this._selected =
                r instanceof bi
                  ? r
                  : this._dateAdapter.getValidDateOrNull(
                      this._dateAdapter.deserialize(r),
                    );
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(r) {
              this._minDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(r) {
              this._maxDate = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get activeDate() {
              return this._clampedActiveDate;
            }
            set activeDate(r) {
              (this._clampedActiveDate = this._dateAdapter.clampDate(
                r,
                this.minDate,
                this.maxDate,
              )),
                this.stateChanges.next(),
                this._changeDetectorRef.markForCheck();
            }
            get currentView() {
              return this._currentView;
            }
            set currentView(r) {
              const c = this._currentView !== r ? r : null;
              (this._currentView = r),
                (this._moveFocusOnNextTick = !0),
                this._changeDetectorRef.markForCheck(),
                c && this.viewChanged.emit(c);
            }
            constructor(r, c, g, T) {
              (this._dateAdapter = c),
                (this._dateFormats = g),
                (this._changeDetectorRef = T),
                (this._moveFocusOnNextTick = !1),
                (this.startView = 'month'),
                (this.selectedChange = new a.vpe()),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this._userSelection = new a.vpe()),
                (this._userDragDrop = new a.vpe()),
                (this._activeDrag = null),
                (this.stateChanges = new $e.x()),
                (this._intlChanges = r.changes.subscribe(() => {
                  T.markForCheck(), this.stateChanges.next();
                }));
            }
            ngAfterContentInit() {
              (this._calendarHeaderPortal = new Bn.C5(
                this.headerComponent || V,
              )),
                (this.activeDate = this.startAt || this._dateAdapter.today()),
                (this._currentView = this.startView);
            }
            ngAfterViewChecked() {
              this._moveFocusOnNextTick &&
                ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe(), this.stateChanges.complete();
            }
            ngOnChanges(r) {
              const c =
                  r.minDate &&
                  !this._dateAdapter.sameDate(
                    r.minDate.previousValue,
                    r.minDate.currentValue,
                  )
                    ? r.minDate
                    : void 0,
                g =
                  r.maxDate &&
                  !this._dateAdapter.sameDate(
                    r.maxDate.previousValue,
                    r.maxDate.currentValue,
                  )
                    ? r.maxDate
                    : void 0,
                T = c || g || r.dateFilter;
              if (T && !T.firstChange) {
                const ge = this._getCurrentViewComponent();
                ge && (this._changeDetectorRef.detectChanges(), ge._init());
              }
              this.stateChanges.next();
            }
            focusActiveCell() {
              this._getCurrentViewComponent()._focusActiveCell(!1);
            }
            updateTodaysDate() {
              this._getCurrentViewComponent()._init();
            }
            _dateSelected(r) {
              const c = r.value;
              (this.selected instanceof bi ||
                (c && !this._dateAdapter.sameDate(c, this.selected))) &&
                this.selectedChange.emit(c),
                this._userSelection.emit(r);
            }
            _yearSelectedInMultiYearView(r) {
              this.yearSelected.emit(r);
            }
            _monthSelectedInYearView(r) {
              this.monthSelected.emit(r);
            }
            _goToDateInView(r, c) {
              (this.activeDate = r), (this.currentView = c);
            }
            _dragStarted(r) {
              this._activeDrag = r;
            }
            _dragEnded(r) {
              this._activeDrag &&
                (r.value && this._userDragDrop.emit(r),
                (this._activeDrag = null));
            }
            _getCurrentViewComponent() {
              return this.monthView || this.yearView || this.multiYearView;
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(G),
                a.Y36(Be._A, 8),
                a.Y36(Be.sG, 8),
                a.Y36(a.sBO),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-calendar']],
              viewQuery: function (r, c) {
                if ((1 & r && (a.Gf(Br, 5), a.Gf(p, 5), a.Gf(vo, 5)), 2 & r)) {
                  let g;
                  a.iGM((g = a.CRH())) && (c.monthView = g.first),
                    a.iGM((g = a.CRH())) && (c.yearView = g.first),
                    a.iGM((g = a.CRH())) && (c.multiYearView = g.first);
                }
              },
              hostAttrs: [1, 'mat-calendar'],
              inputs: {
                headerComponent: 'headerComponent',
                startAt: 'startAt',
                startView: 'startView',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
                comparisonStart: 'comparisonStart',
                comparisonEnd: 'comparisonEnd',
                startDateAccessibleName: 'startDateAccessibleName',
                endDateAccessibleName: 'endDateAccessibleName',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                _userSelection: '_userSelection',
                _userDragDrop: '_userDragDrop',
              },
              exportAs: ['matCalendar'],
              features: [a._Bn([Xo]), a.TTD],
              decls: 5,
              vars: 5,
              consts: [
                [3, 'cdkPortalOutlet'],
                [
                  'cdkMonitorSubtreeFocus',
                  '',
                  'tabindex',
                  '-1',
                  1,
                  'mat-calendar-content',
                  3,
                  'ngSwitch',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'activeDrag',
                  'activeDateChange',
                  '_userSelection',
                  'dragStarted',
                  'dragEnded',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.YNc(0, Dr, 0, 0, 'ng-template', 0),
                  a.TgZ(1, 'div', 1),
                  a.YNc(2, wi, 1, 11, 'mat-month-view', 2),
                  a.YNc(3, Cr, 1, 6, 'mat-year-view', 3),
                  a.YNc(4, Pr, 1, 6, 'mat-multi-year-view', 4),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('cdkPortalOutlet', c._calendarHeaderPortal),
                    a.xp6(1),
                    a.Q6J('ngSwitch', c.currentView),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'month'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'year'),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', 'multi-year'));
              },
              dependencies: [s.RF, s.n9, $.kH, Bn.Pl, Br, p, vo],
              styles: [
                '.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}.mat-calendar-hidden-label{display:none}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })();
      const De = {
        transformPanel: (0, Ut.X$)('transformPanel', [
          (0, Ut.eR)(
            'void => enter-dropdown',
            (0, Ut.jt)(
              '120ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Ut.F4)([
                (0, Ut.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ]),
            ),
          ),
          (0, Ut.eR)(
            'void => enter-dialog',
            (0, Ut.jt)(
              '150ms cubic-bezier(0, 0, 0.2, 1)',
              (0, Ut.F4)([
                (0, Ut.oB)({ opacity: 0, transform: 'scale(0.7)' }),
                (0, Ut.oB)({ transform: 'none', opacity: 1 }),
              ]),
            ),
          ),
          (0, Ut.eR)(
            '* => void',
            (0, Ut.jt)('100ms linear', (0, Ut.oB)({ opacity: 0 })),
          ),
        ]),
        fadeInCalendar: (0, Ut.X$)('fadeInCalendar', [
          (0, Ut.SB)('void', (0, Ut.oB)({ opacity: 0 })),
          (0, Ut.SB)('enter', (0, Ut.oB)({ opacity: 1 })),
          (0, Ut.eR)(
            'void => *',
            (0, Ut.jt)('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ),
        ]),
      };
      let Ee = 0;
      const qe = new a.OlP('mat-datepicker-scroll-strategy'),
        Wt = {
          provide: qe,
          deps: [Ln.aV],
          useFactory: function ht(_) {
            return () => _.scrollStrategies.reposition();
          },
        },
        jt = (0, Be.pj)(
          class {
            constructor(_) {
              this._elementRef = _;
            }
          },
        );
      let xn = (() => {
          class _ extends jt {
            constructor(r, c, g, T, ge, lt) {
              super(r),
                (this._changeDetectorRef = c),
                (this._globalModel = g),
                (this._dateAdapter = T),
                (this._rangeSelectionStrategy = ge),
                (this._subscriptions = new Ct.w0()),
                (this._animationDone = new $e.x()),
                (this._isAnimating = !1),
                (this._actionsPortal = null),
                (this._closeButtonText = lt.closeCalendarLabel);
            }
            ngOnInit() {
              this._animationState = this.datepicker.touchUi
                ? 'enter-dialog'
                : 'enter-dropdown';
            }
            ngAfterViewInit() {
              this._subscriptions.add(
                this.datepicker.stateChanges.subscribe(() => {
                  this._changeDetectorRef.markForCheck();
                }),
              ),
                this._calendar.focusActiveCell();
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(), this._animationDone.complete();
            }
            _handleUserSelection(r) {
              const c = this._model.selection,
                g = r.value,
                T = c instanceof bi;
              if (T && this._rangeSelectionStrategy) {
                const ge = this._rangeSelectionStrategy.selectionFinished(
                  g,
                  c,
                  r.event,
                );
                this._model.updateSelection(ge, this);
              } else
                g &&
                  (T || !this._dateAdapter.sameDate(g, c)) &&
                  this._model.add(g);
              (!this._model || this._model.isComplete()) &&
                !this._actionsPortal &&
                this.datepicker.close();
            }
            _handleUserDragDrop(r) {
              this._model.updateSelection(r.value, this);
            }
            _startExitAnimation() {
              (this._animationState = 'void'),
                this._changeDetectorRef.markForCheck();
            }
            _handleAnimationEvent(r) {
              (this._isAnimating = 'start' === r.phaseName),
                this._isAnimating || this._animationDone.next();
            }
            _getSelected() {
              return this._model.selection;
            }
            _applyPendingSelection() {
              this._model !== this._globalModel &&
                this._globalModel.updateSelection(this._model.selection, this);
            }
            _assignActions(r, c) {
              (this._model = r ? this._globalModel.clone() : this._globalModel),
                (this._actionsPortal = r),
                c && this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(yi),
                a.Y36(Be._A),
                a.Y36(Li, 8),
                a.Y36(G),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-datepicker-content']],
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(q, 5), 2 & r)) {
                  let g;
                  a.iGM((g = a.CRH())) && (c._calendar = g.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-content'],
              hostVars: 3,
              hostBindings: function (r, c) {
                1 & r &&
                  a.WFA('@transformPanel.start', function (T) {
                    return c._handleAnimationEvent(T);
                  })('@transformPanel.done', function (T) {
                    return c._handleAnimationEvent(T);
                  }),
                  2 & r &&
                    (a.d8E('@transformPanel', c._animationState),
                    a.ekj(
                      'mat-datepicker-content-touch',
                      c.datepicker.touchUi,
                    ));
              },
              inputs: { color: 'color' },
              exportAs: ['matDatepickerContent'],
              features: [a.qOj],
              decls: 5,
              vars: 26,
              consts: [
                [
                  'cdkTrapFocus',
                  '',
                  'role',
                  'dialog',
                  1,
                  'mat-datepicker-content-container',
                ],
                [
                  3,
                  'id',
                  'ngClass',
                  'startAt',
                  'startView',
                  'minDate',
                  'maxDate',
                  'dateFilter',
                  'headerComponent',
                  'selected',
                  'dateClass',
                  'comparisonStart',
                  'comparisonEnd',
                  'startDateAccessibleName',
                  'endDateAccessibleName',
                  'yearSelected',
                  'monthSelected',
                  'viewChanged',
                  '_userSelection',
                  '_userDragDrop',
                ],
                [3, 'cdkPortalOutlet'],
                [
                  'type',
                  'button',
                  'mat-raised-button',
                  '',
                  1,
                  'mat-datepicker-close-button',
                  3,
                  'color',
                  'focus',
                  'blur',
                  'click',
                ],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.TgZ(0, 'div', 0)(1, 'mat-calendar', 1),
                    a.NdJ('yearSelected', function (T) {
                      return c.datepicker._selectYear(T);
                    })('monthSelected', function (T) {
                      return c.datepicker._selectMonth(T);
                    })('viewChanged', function (T) {
                      return c.datepicker._viewChanged(T);
                    })('_userSelection', function (T) {
                      return c._handleUserSelection(T);
                    })('_userDragDrop', function (T) {
                      return c._handleUserDragDrop(T);
                    }),
                    a.qZA(),
                    a.YNc(2, Io, 0, 0, 'ng-template', 2),
                    a.TgZ(3, 'button', 3),
                    a.NdJ('focus', function () {
                      return (c._closeButtonFocused = !0);
                    })('blur', function () {
                      return (c._closeButtonFocused = !1);
                    })('click', function () {
                      return c.datepicker.close();
                    }),
                    a._uU(4),
                    a.qZA()()),
                  2 & r)
                ) {
                  let g;
                  a.ekj(
                    'mat-datepicker-content-container-with-custom-header',
                    c.datepicker.calendarHeaderComponent,
                  )(
                    'mat-datepicker-content-container-with-actions',
                    c._actionsPortal,
                  ),
                    a.uIk('aria-modal', !0)(
                      'aria-labelledby',
                      null !== (g = c._dialogLabelId) && void 0 !== g
                        ? g
                        : void 0,
                    ),
                    a.xp6(1),
                    a.Q6J('id', c.datepicker.id)(
                      'ngClass',
                      c.datepicker.panelClass,
                    )('startAt', c.datepicker.startAt)(
                      'startView',
                      c.datepicker.startView,
                    )('minDate', c.datepicker._getMinDate())(
                      'maxDate',
                      c.datepicker._getMaxDate(),
                    )('dateFilter', c.datepicker._getDateFilter())(
                      'headerComponent',
                      c.datepicker.calendarHeaderComponent,
                    )('selected', c._getSelected())(
                      'dateClass',
                      c.datepicker.dateClass,
                    )('comparisonStart', c.comparisonStart)(
                      'comparisonEnd',
                      c.comparisonEnd,
                    )('@fadeInCalendar', 'enter')(
                      'startDateAccessibleName',
                      c.startDateAccessibleName,
                    )('endDateAccessibleName', c.endDateAccessibleName),
                    a.xp6(1),
                    a.Q6J('cdkPortalOutlet', c._actionsPortal),
                    a.xp6(1),
                    a.ekj('cdk-visually-hidden', !c._closeButtonFocused),
                    a.Q6J('color', c.color || 'primary'),
                    a.xp6(1),
                    a.Oqu(c._closeButtonText);
                }
              },
              dependencies: [s.mk, Lt.lW, $.mK, Bn.Pl, q],
              styles: [
                '.mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}',
              ],
              encapsulation: 2,
              data: { animation: [De.transformPanel, De.fadeInCalendar] },
              changeDetection: 0,
            })),
            _
          );
        })(),
        sn = (() => {
          class _ {
            get startAt() {
              return (
                this._startAt ||
                (this.datepickerInput
                  ? this.datepickerInput.getStartValue()
                  : null)
              );
            }
            set startAt(r) {
              this._startAt = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
            }
            get color() {
              return (
                this._color ||
                (this.datepickerInput
                  ? this.datepickerInput.getThemePalette()
                  : void 0)
              );
            }
            set color(r) {
              this._color = r;
            }
            get touchUi() {
              return this._touchUi;
            }
            set touchUi(r) {
              this._touchUi = (0, Pt.Ig)(r);
            }
            get disabled() {
              return void 0 === this._disabled && this.datepickerInput
                ? this.datepickerInput.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              const c = (0, Pt.Ig)(r);
              c !== this._disabled &&
                ((this._disabled = c), this.stateChanges.next(void 0));
            }
            get restoreFocus() {
              return this._restoreFocus;
            }
            set restoreFocus(r) {
              this._restoreFocus = (0, Pt.Ig)(r);
            }
            get panelClass() {
              return this._panelClass;
            }
            set panelClass(r) {
              this._panelClass = (0, Pt.du)(r);
            }
            get opened() {
              return this._opened;
            }
            set opened(r) {
              (0, Pt.Ig)(r) ? this.open() : this.close();
            }
            _getMinDate() {
              return this.datepickerInput && this.datepickerInput.min;
            }
            _getMaxDate() {
              return this.datepickerInput && this.datepickerInput.max;
            }
            _getDateFilter() {
              return this.datepickerInput && this.datepickerInput.dateFilter;
            }
            constructor(r, c, g, T, ge, lt, ln) {
              (this._overlay = r),
                (this._ngZone = c),
                (this._viewContainerRef = g),
                (this._dateAdapter = ge),
                (this._dir = lt),
                (this._model = ln),
                (this._inputStateChanges = Ct.w0.EMPTY),
                (this._document = (0, a.f3M)(s.K0)),
                (this.startView = 'month'),
                (this._touchUi = !1),
                (this.xPosition = 'start'),
                (this.yPosition = 'below'),
                (this._restoreFocus = !0),
                (this.yearSelected = new a.vpe()),
                (this.monthSelected = new a.vpe()),
                (this.viewChanged = new a.vpe(!0)),
                (this.openedStream = new a.vpe()),
                (this.closedStream = new a.vpe()),
                (this._opened = !1),
                (this.id = 'mat-datepicker-' + Ee++),
                (this._focusedElementBeforeOpen = null),
                (this._backdropHarnessClass = `${this.id}-backdrop`),
                (this.stateChanges = new $e.x()),
                (this._scrollStrategy = T);
            }
            ngOnChanges(r) {
              const c = r.xPosition || r.yPosition;
              if (c && !c.firstChange && this._overlayRef) {
                const g = this._overlayRef.getConfig().positionStrategy;
                g instanceof Ln._G &&
                  (this._setConnectedPositions(g),
                  this.opened && this._overlayRef.updatePosition());
              }
              this.stateChanges.next(void 0);
            }
            ngOnDestroy() {
              this._destroyOverlay(),
                this.close(),
                this._inputStateChanges.unsubscribe(),
                this.stateChanges.complete();
            }
            select(r) {
              this._model.add(r);
            }
            _selectYear(r) {
              this.yearSelected.emit(r);
            }
            _selectMonth(r) {
              this.monthSelected.emit(r);
            }
            _viewChanged(r) {
              this.viewChanged.emit(r);
            }
            registerInput(r) {
              return (
                this._inputStateChanges.unsubscribe(),
                (this.datepickerInput = r),
                (this._inputStateChanges = r.stateChanges.subscribe(() =>
                  this.stateChanges.next(void 0),
                )),
                this._model
              );
            }
            registerActions(r) {
              (this._actionsPortal = r),
                this._componentRef?.instance._assignActions(r, !0);
            }
            removeActions(r) {
              r === this._actionsPortal &&
                ((this._actionsPortal = null),
                this._componentRef?.instance._assignActions(null, !0));
            }
            open() {
              this._opened ||
                this.disabled ||
                this._componentRef?.instance._isAnimating ||
                ((this._focusedElementBeforeOpen = (0, Hn.ht)()),
                this._openOverlay(),
                (this._opened = !0),
                this.openedStream.emit());
            }
            close() {
              if (!this._opened || this._componentRef?.instance._isAnimating)
                return;
              const r =
                  this._restoreFocus &&
                  this._focusedElementBeforeOpen &&
                  'function' == typeof this._focusedElementBeforeOpen.focus,
                c = () => {
                  this._opened &&
                    ((this._opened = !1), this.closedStream.emit());
                };
              if (this._componentRef) {
                const { instance: g, location: T } = this._componentRef;
                g._startExitAnimation(),
                  g._animationDone.pipe((0, en.q)(1)).subscribe(() => {
                    const ge = this._document.activeElement;
                    r &&
                      (!ge ||
                        ge === this._document.activeElement ||
                        T.nativeElement.contains(ge)) &&
                      this._focusedElementBeforeOpen.focus(),
                      (this._focusedElementBeforeOpen = null),
                      this._destroyOverlay();
                  });
              }
              r ? setTimeout(c) : c();
            }
            _applyPendingSelection() {
              this._componentRef?.instance?._applyPendingSelection();
            }
            _forwardContentValues(r) {
              (r.datepicker = this),
                (r.color = this.color),
                (r._dialogLabelId = this.datepickerInput.getOverlayLabelId()),
                r._assignActions(this._actionsPortal, !1);
            }
            _openOverlay() {
              this._destroyOverlay();
              const r = this.touchUi,
                c = new Bn.C5(xn, this._viewContainerRef),
                g = (this._overlayRef = this._overlay.create(
                  new Ln.X_({
                    positionStrategy: r
                      ? this._getDialogStrategy()
                      : this._getDropdownStrategy(),
                    hasBackdrop: !0,
                    backdropClass: [
                      r
                        ? 'cdk-overlay-dark-backdrop'
                        : 'mat-overlay-transparent-backdrop',
                      this._backdropHarnessClass,
                    ],
                    direction: this._dir,
                    scrollStrategy: r
                      ? this._overlay.scrollStrategies.block()
                      : this._scrollStrategy(),
                    panelClass: 'mat-datepicker-' + (r ? 'dialog' : 'popup'),
                  }),
                ));
              this._getCloseStream(g).subscribe(T => {
                T && T.preventDefault(), this.close();
              }),
                g.keydownEvents().subscribe(T => {
                  const ge = T.keyCode;
                  (ge === z.LH ||
                    ge === z.JH ||
                    ge === z.oh ||
                    ge === z.SV ||
                    ge === z.Ku ||
                    ge === z.VM) &&
                    T.preventDefault();
                }),
                (this._componentRef = g.attach(c)),
                this._forwardContentValues(this._componentRef.instance),
                r ||
                  this._ngZone.onStable
                    .pipe((0, en.q)(1))
                    .subscribe(() => g.updatePosition());
            }
            _destroyOverlay() {
              this._overlayRef &&
                (this._overlayRef.dispose(),
                (this._overlayRef = this._componentRef = null));
            }
            _getDialogStrategy() {
              return this._overlay
                .position()
                .global()
                .centerHorizontally()
                .centerVertically();
            }
            _getDropdownStrategy() {
              const r = this._overlay
                .position()
                .flexibleConnectedTo(
                  this.datepickerInput.getConnectedOverlayOrigin(),
                )
                .withTransformOriginOn('.mat-datepicker-content')
                .withFlexibleDimensions(!1)
                .withViewportMargin(8)
                .withLockedPosition();
              return this._setConnectedPositions(r);
            }
            _setConnectedPositions(r) {
              const c = 'end' === this.xPosition ? 'end' : 'start',
                g = 'start' === c ? 'end' : 'start',
                T = 'above' === this.yPosition ? 'bottom' : 'top',
                ge = 'top' === T ? 'bottom' : 'top';
              return r.withPositions([
                { originX: c, originY: ge, overlayX: c, overlayY: T },
                { originX: c, originY: T, overlayX: c, overlayY: ge },
                { originX: g, originY: ge, overlayX: g, overlayY: T },
                { originX: g, originY: T, overlayX: g, overlayY: ge },
              ]);
            }
            _getCloseStream(r) {
              const c = ['ctrlKey', 'shiftKey', 'metaKey'];
              return (0, Mt.T)(
                r.backdropClick(),
                r.detachments(),
                r
                  .keydownEvents()
                  .pipe(
                    (0, At.h)(
                      g =>
                        (g.keyCode === z.hY && !(0, z.Vb)(g)) ||
                        (this.datepickerInput &&
                          (0, z.Vb)(g, 'altKey') &&
                          g.keyCode === z.LH &&
                          c.every(T => !(0, z.Vb)(g, T))),
                    ),
                  ),
              );
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(Ln.aV),
                a.Y36(a.R0b),
                a.Y36(a.s_b),
                a.Y36(qe),
                a.Y36(Be._A, 8),
                a.Y36(Ii.Is, 8),
                a.Y36(yi),
              );
            }),
            (_.ɵdir = a.lG2({
              type: _,
              inputs: {
                calendarHeaderComponent: 'calendarHeaderComponent',
                startAt: 'startAt',
                startView: 'startView',
                color: 'color',
                touchUi: 'touchUi',
                disabled: 'disabled',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                restoreFocus: 'restoreFocus',
                dateClass: 'dateClass',
                panelClass: 'panelClass',
                opened: 'opened',
              },
              outputs: {
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                viewChanged: 'viewChanged',
                openedStream: 'opened',
                closedStream: 'closed',
              },
              features: [a.TTD],
            })),
            _
          );
        })(),
        pn = (() => {
          class _ extends sn {}
          return (
            (_.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(_)))(c || _);
              };
            })()),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-datepicker']],
              exportAs: ['matDatepicker'],
              features: [a._Bn([Xo, { provide: sn, useExisting: _ }]), a.qOj],
              decls: 0,
              vars: 0,
              template: function (r, c) {},
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })();
      class bn {
        constructor(F, r) {
          (this.target = F),
            (this.targetElement = r),
            (this.value = this.target.value);
        }
      }
      let jn = (() => {
        class _ {
          get value() {
            return this._model
              ? this._getValueFromModel(this._model.selection)
              : this._pendingValue;
          }
          set value(r) {
            this._assignValueProgrammatically(r);
          }
          get disabled() {
            return !!this._disabled || this._parentDisabled();
          }
          set disabled(r) {
            const c = (0, Pt.Ig)(r),
              g = this._elementRef.nativeElement;
            this._disabled !== c &&
              ((this._disabled = c), this.stateChanges.next(void 0)),
              c && this._isInitialized && g.blur && g.blur();
          }
          _getValidators() {
            return [
              this._parseValidator,
              this._minValidator,
              this._maxValidator,
              this._filterValidator,
            ];
          }
          _registerModel(r) {
            (this._model = r),
              this._valueChangesSubscription.unsubscribe(),
              this._pendingValue && this._assignValue(this._pendingValue),
              (this._valueChangesSubscription =
                this._model.selectionChanged.subscribe(c => {
                  if (this._shouldHandleChangeEvent(c)) {
                    const g = this._getValueFromModel(c.selection);
                    (this._lastValueValid = this._isValidValue(g)),
                      this._cvaOnChange(g),
                      this._onTouched(),
                      this._formatValue(g),
                      this.dateInput.emit(
                        new bn(this, this._elementRef.nativeElement),
                      ),
                      this.dateChange.emit(
                        new bn(this, this._elementRef.nativeElement),
                      );
                  }
                }));
          }
          constructor(r, c, g) {
            (this._elementRef = r),
              (this._dateAdapter = c),
              (this._dateFormats = g),
              (this.dateChange = new a.vpe()),
              (this.dateInput = new a.vpe()),
              (this.stateChanges = new $e.x()),
              (this._onTouched = () => {}),
              (this._validatorOnChange = () => {}),
              (this._cvaOnChange = () => {}),
              (this._valueChangesSubscription = Ct.w0.EMPTY),
              (this._localeSubscription = Ct.w0.EMPTY),
              (this._parseValidator = () =>
                this._lastValueValid
                  ? null
                  : {
                      matDatepickerParse: {
                        text: this._elementRef.nativeElement.value,
                      },
                    }),
              (this._filterValidator = T => {
                const ge = this._dateAdapter.getValidDateOrNull(
                  this._dateAdapter.deserialize(T.value),
                );
                return !ge || this._matchesFilter(ge)
                  ? null
                  : { matDatepickerFilter: !0 };
              }),
              (this._minValidator = T => {
                const ge = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(T.value),
                  ),
                  lt = this._getMinDate();
                return !lt || !ge || this._dateAdapter.compareDate(lt, ge) <= 0
                  ? null
                  : { matDatepickerMin: { min: lt, actual: ge } };
              }),
              (this._maxValidator = T => {
                const ge = this._dateAdapter.getValidDateOrNull(
                    this._dateAdapter.deserialize(T.value),
                  ),
                  lt = this._getMaxDate();
                return !lt || !ge || this._dateAdapter.compareDate(lt, ge) >= 0
                  ? null
                  : { matDatepickerMax: { max: lt, actual: ge } };
              }),
              (this._lastValueValid = !1),
              (this._localeSubscription = c.localeChanges.subscribe(() => {
                this._assignValueProgrammatically(this.value);
              }));
          }
          ngAfterViewInit() {
            this._isInitialized = !0;
          }
          ngOnChanges(r) {
            (function Qn(_, F) {
              const r = Object.keys(_);
              for (let c of r) {
                const { previousValue: g, currentValue: T } = _[c];
                if (!F.isDateInstance(g) || !F.isDateInstance(T)) return !0;
                if (!F.sameDate(g, T)) return !0;
              }
              return !1;
            })(r, this._dateAdapter) && this.stateChanges.next(void 0);
          }
          ngOnDestroy() {
            this._valueChangesSubscription.unsubscribe(),
              this._localeSubscription.unsubscribe(),
              this.stateChanges.complete();
          }
          registerOnValidatorChange(r) {
            this._validatorOnChange = r;
          }
          validate(r) {
            return this._validator ? this._validator(r) : null;
          }
          writeValue(r) {
            this._assignValueProgrammatically(r);
          }
          registerOnChange(r) {
            this._cvaOnChange = r;
          }
          registerOnTouched(r) {
            this._onTouched = r;
          }
          setDisabledState(r) {
            this.disabled = r;
          }
          _onKeydown(r) {
            (0, z.Vb)(r, 'altKey') &&
              r.keyCode === z.JH &&
              ['ctrlKey', 'shiftKey', 'metaKey'].every(T => !(0, z.Vb)(r, T)) &&
              !this._elementRef.nativeElement.readOnly &&
              (this._openPopup(), r.preventDefault());
          }
          _onInput(r) {
            const c = this._lastValueValid;
            let g = this._dateAdapter.parse(
              r,
              this._dateFormats.parse.dateInput,
            );
            (this._lastValueValid = this._isValidValue(g)),
              (g = this._dateAdapter.getValidDateOrNull(g));
            const T = !this._dateAdapter.sameDate(g, this.value);
            !g || T
              ? this._cvaOnChange(g)
              : (r && !this.value && this._cvaOnChange(g),
                c !== this._lastValueValid && this._validatorOnChange()),
              T &&
                (this._assignValue(g),
                this.dateInput.emit(
                  new bn(this, this._elementRef.nativeElement),
                ));
          }
          _onChange() {
            this.dateChange.emit(new bn(this, this._elementRef.nativeElement));
          }
          _onBlur() {
            this.value && this._formatValue(this.value), this._onTouched();
          }
          _formatValue(r) {
            this._elementRef.nativeElement.value =
              null != r
                ? this._dateAdapter.format(
                    r,
                    this._dateFormats.display.dateInput,
                  )
                : '';
          }
          _assignValue(r) {
            this._model
              ? (this._assignValueToModel(r), (this._pendingValue = null))
              : (this._pendingValue = r);
          }
          _isValidValue(r) {
            return !r || this._dateAdapter.isValid(r);
          }
          _parentDisabled() {
            return !1;
          }
          _assignValueProgrammatically(r) {
            (r = this._dateAdapter.deserialize(r)),
              (this._lastValueValid = this._isValidValue(r)),
              (r = this._dateAdapter.getValidDateOrNull(r)),
              this._assignValue(r),
              this._formatValue(r);
          }
          _matchesFilter(r) {
            const c = this._getDateFilter();
            return !c || c(r);
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(a.Y36(a.SBq), a.Y36(Be._A, 8), a.Y36(Be.sG, 8));
          }),
          (_.ɵdir = a.lG2({
            type: _,
            inputs: { value: 'value', disabled: 'disabled' },
            outputs: { dateChange: 'dateChange', dateInput: 'dateInput' },
            features: [a.TTD],
          })),
          _
        );
      })();
      const Ai = {
          provide: hn.JU,
          useExisting: (0, a.Gpc)(() => ni),
          multi: !0,
        },
        Ui = { provide: hn.Cf, useExisting: (0, a.Gpc)(() => ni), multi: !0 };
      let ni = (() => {
          class _ extends jn {
            set matDatepicker(r) {
              r &&
                ((this._datepicker = r),
                (this._closedSubscription = r.closedStream.subscribe(() =>
                  this._onTouched(),
                )),
                this._registerModel(r.registerInput(this)));
            }
            get min() {
              return this._min;
            }
            set min(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._min) ||
                ((this._min = c), this._validatorOnChange());
            }
            get max() {
              return this._max;
            }
            set max(r) {
              const c = this._dateAdapter.getValidDateOrNull(
                this._dateAdapter.deserialize(r),
              );
              this._dateAdapter.sameDate(c, this._max) ||
                ((this._max = c), this._validatorOnChange());
            }
            get dateFilter() {
              return this._dateFilter;
            }
            set dateFilter(r) {
              const c = this._matchesFilter(this.value);
              (this._dateFilter = r),
                this._matchesFilter(this.value) !== c &&
                  this._validatorOnChange();
            }
            constructor(r, c, g, T) {
              super(r, c, g),
                (this._formField = T),
                (this._closedSubscription = Ct.w0.EMPTY),
                (this._validator = hn.kI.compose(super._getValidators()));
            }
            getConnectedOverlayOrigin() {
              return this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._elementRef;
            }
            getOverlayLabelId() {
              return this._formField
                ? this._formField.getLabelId()
                : this._elementRef.nativeElement.getAttribute(
                    'aria-labelledby',
                  );
            }
            getThemePalette() {
              return this._formField ? this._formField.color : void 0;
            }
            getStartValue() {
              return this.value;
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this._closedSubscription.unsubscribe();
            }
            _openPopup() {
              this._datepicker && this._datepicker.open();
            }
            _getValueFromModel(r) {
              return r;
            }
            _assignValueToModel(r) {
              this._model && this._model.updateSelection(r, this);
            }
            _getMinDate() {
              return this._min;
            }
            _getMaxDate() {
              return this._max;
            }
            _getDateFilter() {
              return this._dateFilter;
            }
            _shouldHandleChangeEvent(r) {
              return r.source !== this;
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(Be._A, 8),
                a.Y36(Be.sG, 8),
                a.Y36(Xn.G_, 8),
              );
            }),
            (_.ɵdir = a.lG2({
              type: _,
              selectors: [['input', 'matDatepicker', '']],
              hostAttrs: [1, 'mat-datepicker-input'],
              hostVars: 6,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('input', function (T) {
                    return c._onInput(T.target.value);
                  })('change', function () {
                    return c._onChange();
                  })('blur', function () {
                    return c._onBlur();
                  })('keydown', function (T) {
                    return c._onKeydown(T);
                  }),
                  2 & r &&
                    (a.Ikx('disabled', c.disabled),
                    a.uIk('aria-haspopup', c._datepicker ? 'dialog' : null)(
                      'aria-owns',
                      ((null == c._datepicker ? null : c._datepicker.opened) &&
                        c._datepicker.id) ||
                        null,
                    )('min', c.min ? c._dateAdapter.toIso8601(c.min) : null)(
                      'max',
                      c.max ? c._dateAdapter.toIso8601(c.max) : null,
                    )(
                      'data-mat-calendar',
                      c._datepicker ? c._datepicker.id : null,
                    ));
              },
              inputs: {
                matDatepicker: 'matDatepicker',
                min: 'min',
                max: 'max',
                dateFilter: ['matDatepickerFilter', 'dateFilter'],
              },
              exportAs: ['matDatepickerInput'],
              features: [
                a._Bn([Ai, Ui, { provide: Fr.Jk, useExisting: _ }]),
                a.qOj,
              ],
            })),
            _
          );
        })(),
        wr = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵdir = a.lG2({
              type: _,
              selectors: [['', 'matDatepickerToggleIcon', '']],
            })),
            _
          );
        })(),
        Gi = (() => {
          class _ {
            get disabled() {
              return void 0 === this._disabled && this.datepicker
                ? this.datepicker.disabled
                : !!this._disabled;
            }
            set disabled(r) {
              this._disabled = (0, Pt.Ig)(r);
            }
            constructor(r, c, g) {
              (this._intl = r),
                (this._changeDetectorRef = c),
                (this._stateChanges = Ct.w0.EMPTY);
              const T = Number(g);
              this.tabIndex = T || 0 === T ? T : null;
            }
            ngOnChanges(r) {
              r.datepicker && this._watchStateChanges();
            }
            ngOnDestroy() {
              this._stateChanges.unsubscribe();
            }
            ngAfterContentInit() {
              this._watchStateChanges();
            }
            _open(r) {
              this.datepicker &&
                !this.disabled &&
                (this.datepicker.open(), r.stopPropagation());
            }
            _watchStateChanges() {
              const r = this.datepicker
                  ? this.datepicker.stateChanges
                  : (0, an.of)(),
                c =
                  this.datepicker && this.datepicker.datepickerInput
                    ? this.datepicker.datepickerInput.stateChanges
                    : (0, an.of)(),
                g = this.datepicker
                  ? (0, Mt.T)(
                      this.datepicker.openedStream,
                      this.datepicker.closedStream,
                    )
                  : (0, an.of)();
              this._stateChanges.unsubscribe(),
                (this._stateChanges = (0, Mt.T)(
                  this._intl.changes,
                  r,
                  c,
                  g,
                ).subscribe(() => this._changeDetectorRef.markForCheck()));
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(a.Y36(G), a.Y36(a.sBO), a.$8M('tabindex'));
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-datepicker-toggle']],
              contentQueries: function (r, c, g) {
                if ((1 & r && a.Suo(g, wr, 5), 2 & r)) {
                  let T;
                  a.iGM((T = a.CRH())) && (c._customIcon = T.first);
                }
              },
              viewQuery: function (r, c) {
                if ((1 & r && a.Gf(Pi, 5), 2 & r)) {
                  let g;
                  a.iGM((g = a.CRH())) && (c._button = g.first);
                }
              },
              hostAttrs: [1, 'mat-datepicker-toggle'],
              hostVars: 8,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('click', function (T) {
                    return c._open(T);
                  }),
                  2 & r &&
                    (a.uIk('tabindex', null)(
                      'data-mat-calendar',
                      c.datepicker ? c.datepicker.id : null,
                    ),
                    a.ekj(
                      'mat-datepicker-toggle-active',
                      c.datepicker && c.datepicker.opened,
                    )(
                      'mat-accent',
                      c.datepicker && 'accent' === c.datepicker.color,
                    )(
                      'mat-warn',
                      c.datepicker && 'warn' === c.datepicker.color,
                    ));
              },
              inputs: {
                datepicker: ['for', 'datepicker'],
                tabIndex: 'tabIndex',
                ariaLabel: ['aria-label', 'ariaLabel'],
                disabled: 'disabled',
                disableRipple: 'disableRipple',
              },
              exportAs: ['matDatepickerToggle'],
              features: [a.TTD],
              ngContentSelectors: yn,
              decls: 4,
              vars: 6,
              consts: [
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  3,
                  'disabled',
                  'disableRipple',
                ],
                ['button', ''],
                [
                  'class',
                  'mat-datepicker-toggle-default-icon',
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  4,
                  'ngIf',
                ],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'fill',
                  'currentColor',
                  'focusable',
                  'false',
                  1,
                  'mat-datepicker-toggle-default-icon',
                ],
                [
                  'd',
                  'M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z',
                ],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.F$t(ao),
                  a.TgZ(0, 'button', 0, 1),
                  a.YNc(2, Lr, 2, 0, 'svg', 2),
                  a.Hsn(3),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('disabled', c.disabled)(
                      'disableRipple',
                      c.disableRipple,
                    ),
                    a.uIk('aria-haspopup', c.datepicker ? 'dialog' : null)(
                      'aria-label',
                      c.ariaLabel || c._intl.openCalendarLabel,
                    )('tabindex', c.disabled ? -1 : c.tabIndex),
                    a.xp6(2),
                    a.Q6J('ngIf', !c._customIcon));
              },
              dependencies: [s.O5, Lt.RK],
              styles: [
                '.mat-datepicker-toggle{pointer-events:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })(),
        ii = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({
              providers: [G, Wt],
              imports: [s.ez, Lt.ot, Ln.U8, $.rt, Bn.eL, Be.BQ, Ci.ZD],
            })),
            _
          );
        })();
      class nr {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(F = !1, r, c = !0, g) {
          (this._multiple = F),
            (this._emitChanges = c),
            (this.compareWith = g),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new $e.x()),
            r &&
              r.length &&
              (F
                ? r.forEach(T => this._markSelected(T))
                : this._markSelected(r[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...F) {
          this._verifyValueAssignment(F), F.forEach(c => this._markSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        deselect(...F) {
          this._verifyValueAssignment(F),
            F.forEach(c => this._unmarkSelected(c));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        setSelection(...F) {
          this._verifyValueAssignment(F);
          const r = this.selected,
            c = new Set(F);
          F.forEach(T => this._markSelected(T)),
            r.filter(T => !c.has(T)).forEach(T => this._unmarkSelected(T));
          const g = this._hasQueuedChanges();
          return this._emitChangeEvent(), g;
        }
        toggle(F) {
          return this.isSelected(F) ? this.deselect(F) : this.select(F);
        }
        clear(F = !0) {
          this._unmarkAll();
          const r = this._hasQueuedChanges();
          return F && this._emitChangeEvent(), r;
        }
        isSelected(F) {
          return this._selection.has(this._getConcreteValue(F));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(F) {
          this._multiple && this.selected && this._selected.sort(F);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(F) {
          (F = this._getConcreteValue(F)),
            this.isSelected(F) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(F) || this._selection.add(F),
              this._emitChanges && this._selectedToEmit.push(F));
        }
        _unmarkSelected(F) {
          (F = this._getConcreteValue(F)),
            this.isSelected(F) &&
              (this._selection.delete(F),
              this._emitChanges && this._deselectedToEmit.push(F));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach(F => this._unmarkSelected(F));
        }
        _verifyValueAssignment(F) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(F) {
          if (this.compareWith) {
            for (let r of this._selection) if (this.compareWith(F, r)) return r;
            return F;
          }
          return F;
        }
      }
      var es = D(1884);
      const ba = ['trigger'],
        Jr = ['panel'];
      function xs(_, F) {
        if ((1 & _ && (a.TgZ(0, 'span', 10), a._uU(1), a.qZA()), 2 & _)) {
          const r = a.oxw();
          a.xp6(1), a.Oqu(r.placeholder);
        }
      }
      function fs(_, F) {
        if ((1 & _ && (a.TgZ(0, 'span', 14), a._uU(1), a.qZA()), 2 & _)) {
          const r = a.oxw(2);
          a.xp6(1), a.Oqu(r.triggerValue);
        }
      }
      function Es(_, F) {
        1 & _ && a.Hsn(0, 0, ['*ngSwitchCase', 'true']);
      }
      function Ys(_, F) {
        if (
          (1 & _ &&
            (a.TgZ(0, 'span', 11),
            a.YNc(1, fs, 2, 1, 'span', 12),
            a.YNc(2, Es, 1, 0, 'ng-content', 13),
            a.qZA()),
          2 & _)
        ) {
          const r = a.oxw();
          a.Q6J('ngSwitch', !!r.customTrigger),
            a.xp6(2),
            a.Q6J('ngSwitchCase', !0);
        }
      }
      function Ms(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.O4$(),
            a.kcU(),
            a.TgZ(0, 'div', 15, 16),
            a.NdJ('@transformPanel.done', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._panelDoneAnimatingStream.next(g.toState));
            })('keydown', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T._handleKeydown(g));
            }),
            a.Hsn(2, 1),
            a.qZA();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Gre(
            'mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ',
            r._getPanelTheme(),
            '',
          ),
            a.Q6J('ngClass', r.panelClass)('@transformPanel', 'showing'),
            a.uIk('id', r.id + '-panel')('aria-multiselectable', r.multiple)(
              'aria-label',
              r.ariaLabel || null,
            )('aria-labelledby', r._getPanelAriaLabelledby());
        }
      }
      const ir = [[['mat-select-trigger']], '*'],
        ya = ['mat-select-trigger', '*'],
        ts = {
          transformPanelWrap: (0, Ut.X$)('transformPanelWrap', [
            (0, Ut.eR)(
              '* => void',
              (0, Ut.IO)('@transformPanel', [(0, Ut.pV)()], { optional: !0 }),
            ),
          ]),
          transformPanel: (0, Ut.X$)('transformPanel', [
            (0, Ut.SB)(
              'void',
              (0, Ut.oB)({ opacity: 0, transform: 'scale(1, 0.8)' }),
            ),
            (0, Ut.eR)(
              'void => showing',
              (0, Ut.jt)(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                (0, Ut.oB)({ opacity: 1, transform: 'scale(1, 1)' }),
              ),
            ),
            (0, Ut.eR)(
              '* => void',
              (0, Ut.jt)('100ms linear', (0, Ut.oB)({ opacity: 0 })),
            ),
          ]),
        };
      let xa = 0;
      const ps = new a.OlP('mat-select-scroll-strategy'),
        ws = new a.OlP('MAT_SELECT_CONFIG'),
        As = {
          provide: ps,
          deps: [Ln.aV],
          useFactory: function To(_) {
            return () => _.scrollStrategies.reposition();
          },
        },
        cr = new a.OlP('MatSelectTrigger');
      class Ho {
        constructor(F, r) {
          (this.source = F), (this.value = r);
        }
      }
      const Uo = (0, Be.Kr)(
        (0, Be.sb)(
          (0, Be.Id)(
            (0, Be.FD)(
              class {
                constructor(_, F, r, c, g) {
                  (this._elementRef = _),
                    (this._defaultErrorStateMatcher = F),
                    (this._parentForm = r),
                    (this._parentFormGroup = c),
                    (this.ngControl = g),
                    (this.stateChanges = new $e.x());
                }
              },
            ),
          ),
        ),
      );
      let Ea = (() => {
          class _ extends Uo {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(r) {
              (this._placeholder = r), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(hn.kI.required) ??
                !1
              );
            }
            set required(r) {
              (this._required = (0, Pt.Ig)(r)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(r) {
              this._multiple = (0, Pt.Ig)(r);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(r) {
              this._disableOptionCentering = (0, Pt.Ig)(r);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(r) {
              (this._compareWith = r),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(r) {
              this._assignValue(r) && this._onChange(r);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(r) {
              this._typeaheadDebounceInterval = (0, Pt.su)(r);
            }
            get id() {
              return this._id;
            }
            set id(r) {
              (this._id = r || this._uid), this.stateChanges.next();
            }
            constructor(r, c, g, T, ge, lt, ln, In, Yn, Si, Oo, bs, Qd, rl) {
              super(ge, T, ln, In, Si),
                (this._viewportRuler = r),
                (this._changeDetectorRef = c),
                (this._ngZone = g),
                (this._dir = lt),
                (this._parentFormField = Yn),
                (this._liveAnnouncer = Qd),
                (this._defaultOptions = rl),
                (this._panelOpen = !1),
                (this._compareWith = (to, ol) => to === ol),
                (this._uid = 'mat-select-' + xa++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new $e.x()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + xa++),
                (this._panelDoneAnimatingStream = new $e.x()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = (0, Mi.P)(() => {
                  const to = this.options;
                  return to
                    ? to.changes.pipe(
                        (0, Nt.O)(to),
                        (0, Yt.w)(() =>
                          (0, Mt.T)(...to.map(ol => ol.onSelectionChange)),
                        ),
                      )
                    : this._ngZone.onStable.pipe(
                        (0, en.q)(1),
                        (0, Yt.w)(() => this.optionSelectionChanges),
                      );
                })),
                (this.openedChange = new a.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  (0, At.h)(to => to),
                  (0, Qt.U)(() => {}),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, At.h)(to => !to),
                  (0, Qt.U)(() => {}),
                )),
                (this.selectionChange = new a.vpe()),
                (this.valueChange = new a.vpe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != rl?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    rl.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = bs),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(Oo) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new nr(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe((0, es.x)(), (0, tn.R)(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe((0, tn.R)(this._destroy))
                  .subscribe(r => {
                    r.added.forEach(c => c.select()),
                      r.removed.forEach(c => c.deselect());
                  }),
                this.options.changes
                  .pipe((0, Nt.O)(null), (0, tn.R)(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const r = this._getTriggerAriaLabelledby(),
                c = this.ngControl;
              if (r !== this._triggerAriaLabelledBy) {
                const g = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = r),
                  r
                    ? g.setAttribute('aria-labelledby', r)
                    : g.removeAttribute('aria-labelledby');
              }
              c &&
                (this._previousControl !== c.control &&
                  (void 0 !== this._previousControl &&
                    null !== c.disabled &&
                    c.disabled !== this.disabled &&
                    (this.disabled = c.disabled),
                  (this._previousControl = c.control)),
                this.updateErrorState());
            }
            ngOnChanges(r) {
              (r.disabled || r.userAriaDescribedBy) && this.stateChanges.next(),
                r.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval,
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? 'rtl' : 'ltr',
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(r) {
              this._assignValue(r);
            }
            registerOnChange(r) {
              this._onChange = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              (this.disabled = r),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const r = this._selectionModel.selected.map(c => c.viewValue);
                return this._isRtl() && r.reverse(), r.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(r) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(r)
                  : this._handleClosedKeydown(r));
            }
            _handleClosedKeydown(r) {
              const c = r.keyCode,
                g = c === z.JH || c === z.LH || c === z.oh || c === z.SV,
                T = c === z.K5 || c === z.L_,
                ge = this._keyManager;
              if (
                (!ge.isTyping() && T && !(0, z.Vb)(r)) ||
                ((this.multiple || r.altKey) && g)
              )
                r.preventDefault(), this.open();
              else if (!this.multiple) {
                const lt = this.selected;
                ge.onKeydown(r);
                const ln = this.selected;
                ln &&
                  lt !== ln &&
                  this._liveAnnouncer.announce(ln.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(r) {
              const c = this._keyManager,
                g = r.keyCode,
                T = g === z.JH || g === z.LH,
                ge = c.isTyping();
              if (T && r.altKey) r.preventDefault(), this.close();
              else if (
                ge ||
                (g !== z.K5 && g !== z.L_) ||
                !c.activeItem ||
                (0, z.Vb)(r)
              )
                if (!ge && this._multiple && g === z.A && r.ctrlKey) {
                  r.preventDefault();
                  const lt = this.options.some(
                    ln => !ln.disabled && !ln.selected,
                  );
                  this.options.forEach(ln => {
                    ln.disabled || (lt ? ln.select() : ln.deselect());
                  });
                } else {
                  const lt = c.activeItemIndex;
                  c.onKeydown(r),
                    this._multiple &&
                      T &&
                      r.shiftKey &&
                      c.activeItem &&
                      c.activeItemIndex !== lt &&
                      c.activeItem._selectViaInteraction();
                }
              else r.preventDefault(), c.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange
                .pipe((0, en.q)(1))
                .subscribe(() => {
                  this._changeDetectorRef.detectChanges(),
                    this._positioningSettled();
                });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(r) {
              if (
                (this.options.forEach(c => c.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && r)
              )
                Array.isArray(r),
                  r.forEach(c => this._selectOptionByValue(c)),
                  this._sortValues();
              else {
                const c = this._selectOptionByValue(r);
                c
                  ? this._keyManager.updateActiveItem(c)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(r) {
              const c = this.options.find(g => {
                if (this._selectionModel.isSelected(g)) return !1;
                try {
                  return null != g.value && this._compareWith(g.value, r);
                } catch {
                  return !1;
                }
              });
              return c && this._selectionModel.select(c), c;
            }
            _assignValue(r) {
              return (
                !!(r !== this._value || (this._multiple && Array.isArray(r))) &&
                (this.options && this._setSelectionByValue(r),
                (this._value = r),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new $.s1(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0,
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const r = (0, Mt.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe((0, tn.R)(r)).subscribe(c => {
                this._onSelect(c.source, c.isUserInput),
                  c.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                (0, Mt.T)(...this.options.map(c => c._stateChanges))
                  .pipe((0, tn.R)(r))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(r, c) {
              const g = this._selectionModel.isSelected(r);
              null != r.value || this._multiple
                ? (g !== r.selected &&
                    (r.selected
                      ? this._selectionModel.select(r)
                      : this._selectionModel.deselect(r)),
                  c && this._keyManager.setActiveItem(r),
                  this.multiple && (this._sortValues(), c && this.focus()))
                : (r.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(r.value)),
                g !== this._selectionModel.isSelected(r) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const r = this.options.toArray();
                this._selectionModel.sort((c, g) =>
                  this.sortComparator
                    ? this.sortComparator(c, g, r)
                    : r.indexOf(c) - r.indexOf(g),
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(r) {
              let c = null;
              (c = this.multiple
                ? this.selected.map(g => g.value)
                : this.selected
                ? this.selected.value
                : r),
                (this._value = c),
                this.valueChange.emit(c),
                this._onChange(c),
                this.selectionChange.emit(this._getChangeEvent(c)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0],
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(r) {
              this._elementRef.nativeElement.focus(r);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (r ? r + ' ' : '') + this.ariaLabelledby
                : r;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const r = this._parentFormField?.getLabelId();
              let c = (r ? r + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (c += ' ' + this.ariaLabelledby), c;
            }
            _panelDoneAnimating(r) {
              this.openedChange.emit(r);
            }
            setDescribedByIds(r) {
              r.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    r.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(Ci.rL),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.Y36(Be.rD),
                a.Y36(a.SBq),
                a.Y36(Ii.Is, 8),
                a.Y36(hn.F, 8),
                a.Y36(hn.sg, 8),
                a.Y36(Xn.G_, 8),
                a.Y36(hn.a5, 10),
                a.$8M('tabindex'),
                a.Y36(ps),
                a.Y36($.Kd),
                a.Y36(ws, 8),
              );
            }),
            (_.ɵdir = a.lG2({
              type: _,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(ba, 5), a.Gf(Jr, 5), a.Gf(Ln.pI, 5)), 2 & r)
                ) {
                  let g;
                  a.iGM((g = a.CRH())) && (c.trigger = g.first),
                    a.iGM((g = a.CRH())) && (c.panel = g.first),
                    a.iGM((g = a.CRH())) && (c._overlayDir = g.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                panelClass: 'panelClass',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                sortComparator: 'sortComparator',
                id: 'id',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [a.qOj, a.TTD],
            })),
            _
          );
        })(),
        yo = (() => {
          class _ extends Ea {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'top',
                  },
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-mdc-select-panel-above',
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe((0, tn.R)(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(r) {
              const c = this.options.toArray()[r];
              if (c) {
                const g = this.panel.nativeElement,
                  T = (0, Be.CB)(r, this.options, this.optionGroups),
                  ge = c._getHostElement();
                g.scrollTop =
                  0 === r && 1 === T
                    ? 0
                    : (0, Be.jH)(
                        ge.offsetTop,
                        ge.offsetHeight,
                        g.scrollTop,
                        g.offsetHeight,
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(r) {
              return new Ho(this, r);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof Ln.xu
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(r) {
              (this._hideSingleSelectionIndicator = (0, Pt.Ig)(r)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const r of this.options)
                  r._changeDetectorRef.markForCheck();
            }
          }
          return (
            (_.ɵfac = (function () {
              let F;
              return function (c) {
                return (F || (F = a.n5z(_)))(c || _);
              };
            })()),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-select']],
              contentQueries: function (r, c, g) {
                if (
                  (1 & r &&
                    (a.Suo(g, cr, 5), a.Suo(g, Be.ey, 5), a.Suo(g, Be.K7, 5)),
                  2 & r)
                ) {
                  let T;
                  a.iGM((T = a.CRH())) && (c.customTrigger = T.first),
                    a.iGM((T = a.CRH())) && (c.options = T),
                    a.iGM((T = a.CRH())) && (c.optionGroups = T);
                }
              },
              hostAttrs: [
                'role',
                'combobox',
                'aria-autocomplete',
                'none',
                'aria-haspopup',
                'listbox',
                1,
                'mat-mdc-select',
              ],
              hostVars: 19,
              hostBindings: function (r, c) {
                1 & r &&
                  a.NdJ('keydown', function (T) {
                    return c._handleKeydown(T);
                  })('focus', function () {
                    return c._onFocus();
                  })('blur', function () {
                    return c._onBlur();
                  }),
                  2 & r &&
                    (a.uIk('id', c.id)('tabindex', c.tabIndex)(
                      'aria-controls',
                      c.panelOpen ? c.id + '-panel' : null,
                    )('aria-expanded', c.panelOpen)(
                      'aria-label',
                      c.ariaLabel || null,
                    )('aria-required', c.required.toString())(
                      'aria-disabled',
                      c.disabled.toString(),
                    )('aria-invalid', c.errorState)(
                      'aria-activedescendant',
                      c._getAriaActiveDescendant(),
                    ),
                    a.ekj('mat-mdc-select-disabled', c.disabled)(
                      'mat-mdc-select-invalid',
                      c.errorState,
                    )('mat-mdc-select-required', c.required)(
                      'mat-mdc-select-empty',
                      c.empty,
                    )('mat-mdc-select-multiple', c.multiple));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
                hideSingleSelectionIndicator: 'hideSingleSelectionIndicator',
              },
              exportAs: ['matSelect'],
              features: [
                a._Bn([
                  { provide: Xn.Eo, useExisting: _ },
                  { provide: Be.HF, useExisting: _ },
                ]),
                a.qOj,
              ],
              ngContentSelectors: ya,
              decls: 11,
              vars: 11,
              consts: [
                [
                  'cdk-overlay-origin',
                  '',
                  1,
                  'mat-mdc-select-trigger',
                  3,
                  'click',
                ],
                ['fallbackOverlayOrigin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-mdc-select-value', 3, 'ngSwitch'],
                [
                  'class',
                  'mat-mdc-select-placeholder mat-mdc-select-min-line',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'class',
                  'mat-mdc-select-value-text',
                  3,
                  'ngSwitch',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'mat-mdc-select-arrow-wrapper'],
                [1, 'mat-mdc-select-arrow'],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'focusable',
                  'false',
                ],
                ['d', 'M7 10l5 5 5-5z'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayWidth',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-mdc-select-placeholder', 'mat-mdc-select-min-line'],
                [1, 'mat-mdc-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-mdc-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-mdc-select-min-line'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(ir),
                    a.TgZ(0, 'div', 0, 1),
                    a.NdJ('click', function () {
                      return c.toggle();
                    }),
                    a.TgZ(3, 'div', 2),
                    a.YNc(4, xs, 2, 1, 'span', 3),
                    a.YNc(5, Ys, 3, 2, 'span', 4),
                    a.qZA(),
                    a.TgZ(6, 'div', 5)(7, 'div', 6),
                    a.O4$(),
                    a.TgZ(8, 'svg', 7),
                    a._UZ(9, 'path', 8),
                    a.qZA()()()(),
                    a.YNc(10, Ms, 3, 9, 'ng-template', 9),
                    a.NdJ('backdropClick', function () {
                      return c.close();
                    })('attach', function () {
                      return c._onAttached();
                    })('detach', function () {
                      return c.close();
                    })),
                  2 & r)
                ) {
                  const g = a.MAs(1);
                  a.uIk('aria-owns', c.panelOpen ? c.id + '-panel' : null),
                    a.xp6(3),
                    a.Q6J('ngSwitch', c.empty),
                    a.uIk('id', c._valueId),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !0),
                    a.xp6(1),
                    a.Q6J('ngSwitchCase', !1),
                    a.xp6(5),
                    a.Q6J(
                      'cdkConnectedOverlayPanelClass',
                      c._overlayPanelClass,
                    )('cdkConnectedOverlayScrollStrategy', c._scrollStrategy)(
                      'cdkConnectedOverlayOrigin',
                      c._preferredOverlayOrigin || g,
                    )('cdkConnectedOverlayOpen', c.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      c._positions,
                    )('cdkConnectedOverlayWidth', c._overlayWidth);
                }
              },
              dependencies: [s.mk, s.RF, s.n9, s.ED, Ln.pI, Ln.xu],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [ts.transformPanel] },
              changeDetection: 0,
            })),
            _
          );
        })(),
        ms = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({
              providers: [As],
              imports: [s.ez, Ln.U8, Be.Ng, Be.BQ, Ci.ZD, Xn.lN, Be.Ng, Be.BQ],
            })),
            _
          );
        })();
      function Is(_, F) {
        if (
          (1 & _ &&
            (a.TgZ(0, 'mat-form-field', 11)(1, 'mat-label'),
            a._uU(2, 'Choose a date'),
            a.qZA(),
            a._UZ(3, 'input', 12)(4, 'mat-datepicker-toggle', 13)(
              5,
              'mat-datepicker',
              null,
              14,
            ),
            a.qZA()),
          2 & _)
        ) {
          const r = a.MAs(6),
            c = a.oxw();
          a.xp6(3),
            a.Q6J('formControl', c.noteForm.controls.date)('matDatepicker', r),
            a.xp6(1),
            a.Q6J('for', r);
        }
      }
      const ns = function (_) {
        return ['select-text', _];
      };
      function is(_, F) {
        if (
          (1 & _ &&
            (a.TgZ(0, 'mat-option', 15)(1, 'div', 16), a._uU(2), a.qZA()()),
          2 & _)
        ) {
          const r = F.$implicit;
          a.Q6J('value', r),
            a.xp6(1),
            a.Q6J('ngClass', a.VKq(3, ns, r)),
            a.xp6(1),
            a.Oqu(r);
        }
      }
      const co = 'default',
        ks = [co, 'red', 'green', 'blue', 'yellow'];
      let jo = (() => {
        class _ {
          constructor(r, c, g, T) {
            (this.fb = r),
              (this.dialogRef = c),
              (this.store = g),
              (this.data = T),
              (this.styles = ks),
              (this.noteForm = this.fb.group({
                title: ['', [hn.kI.required]],
                date: [new Date(), [hn.kI.required]],
                color: [co],
              })),
              this.noteForm.setValue({
                title: T.note?.title || '',
                date: T.note?.date
                  ? new Date(T.note.date)
                  : T.date || new Date(),
                color: T.note?.color || co,
              }),
              (this.note = T.note),
              (this.date = T.date),
              (this.withDate = T.withDate);
          }
          ngOnInit() {
            this.successSubscription = this.store
              .select(je)
              .pipe((0, At.h)(Boolean))
              .subscribe(() => {
                if (
                  (this.dialogRef.close(),
                  this.store.dispatch(He()),
                  this.withDate && this.date)
                ) {
                  const r = rt(this.date),
                    c = pt(this.date);
                  this.store.dispatch(se({ startDate: ee(r), endDate: ee(c) }));
                } else this.store.dispatch(te());
              });
          }
          ngOnDestroy() {
            this.successSubscription?.unsubscribe();
          }
          save() {
            const { title: r, date: c, color: g } = this.noteForm.value;
            if (!r || !c) return;
            const T = this.note
              ? {
                  ...this.note,
                  title: r,
                  date: this.withDate ? dt(c) : void 0,
                  color: g,
                }
              : {
                  title: r,
                  date: this.withDate ? dt(c) : void 0,
                  color: g,
                  completed: !1,
                };
            this.store.dispatch(this.note?.id ? ae(T) : he(T));
          }
          delete() {
            this.note && this.store.dispatch(fe(this.note));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(
              a.Y36(hn.qu),
              a.Y36(zr),
              a.Y36(N.yh),
              a.Y36(Ao),
            );
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['app-note-dialog']],
            decls: 16,
            vars: 7,
            consts: [
              [
                'mat-dialog-content',
                '',
                'data-testid',
                'note-dialog',
                1,
                'dialog',
              ],
              ['novalidate', '', 1, 'form', 3, 'formGroup', 'keydown.enter'],
              [
                'matInput',
                '',
                'data-testid',
                'title',
                'autofocus',
                '',
                3,
                'formControl',
              ],
              [1, 'dialog-row'],
              ['class', 'dialog-calendar', 'appearance', 'fill', 4, 'ngIf'],
              [1, 'dialog-select'],
              ['required', '', 3, 'formControl'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              [1, 'dialog-footer'],
              [
                'color',
                'secondary',
                'mat-raised-button',
                '',
                'data-testid',
                'delete',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              [
                'color',
                'primary',
                'mat-raised-button',
                '',
                'data-testid',
                'save',
                1,
                'button',
                'dialog-button',
                3,
                'disabled',
                'click',
              ],
              ['appearance', 'fill', 1, 'dialog-calendar'],
              [
                'matInput',
                '',
                'data-testid',
                'date',
                3,
                'formControl',
                'matDatepicker',
              ],
              ['matIconSuffix', '', 3, 'for'],
              ['picker', ''],
              [3, 'value'],
              [3, 'ngClass'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'form', 1),
                a.NdJ('keydown.enter', function () {
                  return !c.noteForm.invalid && c.save();
                }),
                a.TgZ(2, 'mat-form-field'),
                a._UZ(3, 'input', 2),
                a.qZA(),
                a.TgZ(4, 'div', 3),
                a.YNc(5, Is, 7, 3, 'mat-form-field', 4),
                a.TgZ(6, 'mat-form-field', 5)(7, 'mat-label'),
                a._uU(8, 'Style'),
                a.qZA(),
                a.TgZ(9, 'mat-select', 6),
                a.YNc(10, is, 3, 5, 'mat-option', 7),
                a.qZA()()()()(),
                a.TgZ(11, 'div', 8)(12, 'button', 9),
                a.NdJ('click', function () {
                  return c.delete();
                }),
                a._uU(13, ' Delete '),
                a.qZA(),
                a.TgZ(14, 'button', 10),
                a.NdJ('click', function () {
                  return c.save();
                }),
                a._uU(15, ' Save '),
                a.qZA()()),
                2 & r &&
                  (a.xp6(1),
                  a.Q6J('formGroup', c.noteForm),
                  a.xp6(2),
                  a.Q6J('formControl', c.noteForm.controls.title),
                  a.xp6(2),
                  a.Q6J('ngIf', c.withDate),
                  a.xp6(4),
                  a.Q6J('formControl', c.noteForm.controls.color),
                  a.xp6(1),
                  a.Q6J('ngForOf', c.styles),
                  a.xp6(2),
                  a.Q6J('disabled', !(null != c.note && c.note.id)),
                  a.xp6(2),
                  a.Q6J('disabled', c.noteForm.invalid));
            },
            dependencies: [
              s.mk,
              s.sg,
              s.O5,
              Lt.lW,
              Xn.KE,
              Xn.hX,
              Xn.R9,
              hn._Y,
              hn.Fj,
              hn.JJ,
              hn.JL,
              hn.Q7,
              hn.oH,
              hn.sg,
              Fr.Nt,
              pn,
              ni,
              Gi,
              Yr,
              yo,
              Be.ey,
            ],
            styles: [
              '.dialog-row[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between}.dialog-color[_ngcontent-%COMP%]{margin-left:20px;display:flex;cursor:pointer}.dialog-color[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer}.dialog-calendar[_ngcontent-%COMP%], .dialog-select[_ngcontent-%COMP%]{display:flex}.dialog-button[_ngcontent-%COMP%]{width:100px}.dialog-button[_ngcontent-%COMP%]:not(:first-child){margin-left:12px}.dialog-footer[_ngcontent-%COMP%]{padding:0 20px 20px;display:flex;justify-content:space-between}.select-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:70px;text-align:center}@media only screen and (min-width: 1020px){.dialog[_ngcontent-%COMP%]{width:400px}.dialog-row[_ngcontent-%COMP%]{flex-direction:row}.dialog-select[_ngcontent-%COMP%]{width:200px}.dialog-calendar[_ngcontent-%COMP%]{margin-right:20px}}',
            ],
          })),
          _
        );
      })();
      const Hr = (_, F) => {
          const r = _.map(c => ({
            id: c.id,
            text: c.title,
            color: c.color,
            completed: c.completed,
          }));
          if (_.length < F) {
            const c = F - _.length;
            for (let g = 0; g < c; g++) r.push({});
          }
          return r;
        },
        qa = ['input'],
        Ma = ['label'],
        ei = ['*'],
        Xa = new a.OlP('mat-checkbox-default-options', {
          providedIn: 'root',
          factory: Ja,
        });
      function Ja() {
        return { color: 'accent', clickAction: 'check-indeterminate' };
      }
      const Wl = {
        provide: hn.JU,
        useExisting: (0, a.Gpc)(() => Aa),
        multi: !0,
      };
      class Kl {}
      let gs = 0;
      const el = Ja(),
        wa = (0, Be.sb)(
          (0, Be.pj)(
            (0, Be.Kr)(
              (0, Be.Id)(
                class {
                  constructor(_) {
                    this._elementRef = _;
                  }
                },
              ),
            ),
          ),
        );
      let rs = (() => {
          class _ extends wa {
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            get required() {
              return this._required;
            }
            set required(r) {
              this._required = (0, Pt.Ig)(r);
            }
            constructor(r, c, g, T, ge, lt, ln) {
              super(c),
                (this._changeDetectorRef = g),
                (this._ngZone = T),
                (this._animationMode = lt),
                (this._options = ln),
                (this.ariaLabel = ''),
                (this.ariaLabelledby = null),
                (this.labelPosition = 'after'),
                (this.name = null),
                (this.change = new a.vpe()),
                (this.indeterminateChange = new a.vpe()),
                (this._onTouched = () => {}),
                (this._currentAnimationClass = ''),
                (this._currentCheckState = 0),
                (this._controlValueAccessorChangeFn = () => {}),
                (this._checked = !1),
                (this._disabled = !1),
                (this._indeterminate = !1),
                (this._options = this._options || el),
                (this.color = this.defaultColor =
                  this._options.color || el.color),
                (this.tabIndex = parseInt(ge) || 0),
                (this.id = this._uniqueId = `${r}${++gs}`);
            }
            ngAfterViewInit() {
              this._syncIndeterminate(this._indeterminate);
            }
            get checked() {
              return this._checked;
            }
            set checked(r) {
              const c = (0, Pt.Ig)(r);
              c != this.checked &&
                ((this._checked = c), this._changeDetectorRef.markForCheck());
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(r) {
              const c = (0, Pt.Ig)(r);
              c !== this.disabled &&
                ((this._disabled = c), this._changeDetectorRef.markForCheck());
            }
            get indeterminate() {
              return this._indeterminate;
            }
            set indeterminate(r) {
              const c = r != this._indeterminate;
              (this._indeterminate = (0, Pt.Ig)(r)),
                c &&
                  (this._transitionCheckState(
                    this._indeterminate ? 3 : this.checked ? 1 : 2,
                  ),
                  this.indeterminateChange.emit(this._indeterminate)),
                this._syncIndeterminate(this._indeterminate);
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
            writeValue(r) {
              this.checked = !!r;
            }
            registerOnChange(r) {
              this._controlValueAccessorChangeFn = r;
            }
            registerOnTouched(r) {
              this._onTouched = r;
            }
            setDisabledState(r) {
              this.disabled = r;
            }
            _transitionCheckState(r) {
              let c = this._currentCheckState,
                g = this._getAnimationTargetElement();
              if (
                c !== r &&
                g &&
                (this._currentAnimationClass &&
                  g.classList.remove(this._currentAnimationClass),
                (this._currentAnimationClass =
                  this._getAnimationClassForCheckStateTransition(c, r)),
                (this._currentCheckState = r),
                this._currentAnimationClass.length > 0)
              ) {
                g.classList.add(this._currentAnimationClass);
                const T = this._currentAnimationClass;
                this._ngZone.runOutsideAngular(() => {
                  setTimeout(() => {
                    g.classList.remove(T);
                  }, 1e3);
                });
              }
            }
            _emitChangeEvent() {
              this._controlValueAccessorChangeFn(this.checked),
                this.change.emit(this._createChangeEvent(this.checked)),
                this._inputElement &&
                  (this._inputElement.nativeElement.checked = this.checked);
            }
            toggle() {
              (this.checked = !this.checked),
                this._controlValueAccessorChangeFn(this.checked);
            }
            _handleInputClick() {
              const r = this._options?.clickAction;
              this.disabled || 'noop' === r
                ? !this.disabled &&
                  'noop' === r &&
                  ((this._inputElement.nativeElement.checked = this.checked),
                  (this._inputElement.nativeElement.indeterminate =
                    this.indeterminate))
                : (this.indeterminate &&
                    'check' !== r &&
                    Promise.resolve().then(() => {
                      (this._indeterminate = !1),
                        this.indeterminateChange.emit(this._indeterminate);
                    }),
                  (this._checked = !this._checked),
                  this._transitionCheckState(this._checked ? 1 : 2),
                  this._emitChangeEvent());
            }
            _onInteractionEvent(r) {
              r.stopPropagation();
            }
            _onBlur() {
              Promise.resolve().then(() => {
                this._onTouched(), this._changeDetectorRef.markForCheck();
              });
            }
            _getAnimationClassForCheckStateTransition(r, c) {
              if ('NoopAnimations' === this._animationMode) return '';
              switch (r) {
                case 0:
                  if (1 === c) return this._animationClasses.uncheckedToChecked;
                  if (3 == c)
                    return this._checked
                      ? this._animationClasses.checkedToIndeterminate
                      : this._animationClasses.uncheckedToIndeterminate;
                  break;
                case 2:
                  return 1 === c
                    ? this._animationClasses.uncheckedToChecked
                    : this._animationClasses.uncheckedToIndeterminate;
                case 1:
                  return 2 === c
                    ? this._animationClasses.checkedToUnchecked
                    : this._animationClasses.checkedToIndeterminate;
                case 3:
                  return 1 === c
                    ? this._animationClasses.indeterminateToChecked
                    : this._animationClasses.indeterminateToUnchecked;
              }
              return '';
            }
            _syncIndeterminate(r) {
              const c = this._inputElement;
              c && (c.nativeElement.indeterminate = r);
            }
          }
          return (
            (_.ɵfac = function (r) {
              a.$Z();
            }),
            (_.ɵdir = a.lG2({
              type: _,
              viewQuery: function (r, c) {
                if (
                  (1 & r && (a.Gf(qa, 5), a.Gf(Ma, 5), a.Gf(Be.wG, 5)), 2 & r)
                ) {
                  let g;
                  a.iGM((g = a.CRH())) && (c._inputElement = g.first),
                    a.iGM((g = a.CRH())) && (c._labelElement = g.first),
                    a.iGM((g = a.CRH())) && (c.ripple = g.first);
                }
              },
              inputs: {
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                id: 'id',
                required: 'required',
                labelPosition: 'labelPosition',
                name: 'name',
                value: 'value',
                checked: 'checked',
                disabled: 'disabled',
                indeterminate: 'indeterminate',
              },
              outputs: {
                change: 'change',
                indeterminateChange: 'indeterminateChange',
              },
              features: [a.qOj],
            })),
            _
          );
        })(),
        Aa = (() => {
          class _ extends rs {
            constructor(r, c, g, T, ge, lt) {
              super('mat-mdc-checkbox-', r, c, g, T, ge, lt),
                (this._animationClasses = {
                  uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',
                  uncheckedToIndeterminate:
                    'mdc-checkbox--anim-unchecked-indeterminate',
                  checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',
                  checkedToIndeterminate:
                    'mdc-checkbox--anim-checked-indeterminate',
                  indeterminateToChecked:
                    'mdc-checkbox--anim-indeterminate-checked',
                  indeterminateToUnchecked:
                    'mdc-checkbox--anim-indeterminate-unchecked',
                });
            }
            focus() {
              this._inputElement.nativeElement.focus();
            }
            _createChangeEvent(r) {
              const c = new Kl();
              return (c.source = this), (c.checked = r), c;
            }
            _getAnimationTargetElement() {
              return this._inputElement?.nativeElement;
            }
            _onInputClick() {
              super._handleInputClick();
            }
            _onTouchTargetClick() {
              super._handleInputClick(),
                this.disabled || this._inputElement.nativeElement.focus();
            }
            _preventBubblingFromLabel(r) {
              r.target &&
                this._labelElement.nativeElement.contains(r.target) &&
                r.stopPropagation();
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(
                a.Y36(a.SBq),
                a.Y36(a.sBO),
                a.Y36(a.R0b),
                a.$8M('tabindex'),
                a.Y36(a.QbO, 8),
                a.Y36(Xa, 8),
              );
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['mat-checkbox']],
              hostAttrs: [1, 'mat-mdc-checkbox'],
              hostVars: 12,
              hostBindings: function (r, c) {
                2 & r &&
                  (a.Ikx('id', c.id),
                  a.uIk('tabindex', null)('aria-label', null)(
                    'aria-labelledby',
                    null,
                  ),
                  a.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === c._animationMode,
                  )('mdc-checkbox--disabled', c.disabled)(
                    'mat-mdc-checkbox-disabled',
                    c.disabled,
                  )('mat-mdc-checkbox-checked', c.checked));
              },
              inputs: {
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
              },
              exportAs: ['matCheckbox'],
              features: [a._Bn([Wl]), a.qOj],
              ngContentSelectors: ei,
              decls: 15,
              vars: 19,
              consts: [
                [1, 'mdc-form-field', 3, 'click'],
                [1, 'mdc-checkbox'],
                ['checkbox', ''],
                [1, 'mat-mdc-checkbox-touch-target', 3, 'click'],
                [
                  'type',
                  'checkbox',
                  1,
                  'mdc-checkbox__native-control',
                  3,
                  'checked',
                  'indeterminate',
                  'disabled',
                  'id',
                  'required',
                  'tabIndex',
                  'blur',
                  'click',
                  'change',
                ],
                ['input', ''],
                [1, 'mdc-checkbox__ripple'],
                [1, 'mdc-checkbox__background'],
                [
                  'focusable',
                  'false',
                  'viewBox',
                  '0 0 24 24',
                  'aria-hidden',
                  'true',
                  1,
                  'mdc-checkbox__checkmark',
                ],
                [
                  'fill',
                  'none',
                  'd',
                  'M1.73,12.91 8.1,19.28 22.79,4.59',
                  1,
                  'mdc-checkbox__checkmark-path',
                ],
                [1, 'mdc-checkbox__mixedmark'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-checkbox-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                ],
                [3, 'for'],
                ['label', ''],
              ],
              template: function (r, c) {
                if (
                  (1 & r &&
                    (a.F$t(),
                    a.TgZ(0, 'div', 0),
                    a.NdJ('click', function (T) {
                      return c._preventBubblingFromLabel(T);
                    }),
                    a.TgZ(1, 'div', 1, 2)(3, 'div', 3),
                    a.NdJ('click', function () {
                      return c._onTouchTargetClick();
                    }),
                    a.qZA(),
                    a.TgZ(4, 'input', 4, 5),
                    a.NdJ('blur', function () {
                      return c._onBlur();
                    })('click', function () {
                      return c._onInputClick();
                    })('change', function (T) {
                      return c._onInteractionEvent(T);
                    }),
                    a.qZA(),
                    a._UZ(6, 'div', 6),
                    a.TgZ(7, 'div', 7),
                    a.O4$(),
                    a.TgZ(8, 'svg', 8),
                    a._UZ(9, 'path', 9),
                    a.qZA(),
                    a.kcU(),
                    a._UZ(10, 'div', 10),
                    a.qZA(),
                    a._UZ(11, 'div', 11),
                    a.qZA(),
                    a.TgZ(12, 'label', 12, 13),
                    a.Hsn(14),
                    a.qZA()()),
                  2 & r)
                ) {
                  const g = a.MAs(2);
                  a.ekj(
                    'mdc-form-field--align-end',
                    'before' == c.labelPosition,
                  ),
                    a.xp6(4),
                    a.ekj('mdc-checkbox--selected', c.checked),
                    a.Q6J('checked', c.checked)(
                      'indeterminate',
                      c.indeterminate,
                    )('disabled', c.disabled)('id', c.inputId)(
                      'required',
                      c.required,
                    )('tabIndex', c.tabIndex),
                    a.uIk('aria-label', c.ariaLabel || null)(
                      'aria-labelledby',
                      c.ariaLabelledby,
                    )('aria-describedby', c.ariaDescribedby)('name', c.name)(
                      'value',
                      c.value,
                    ),
                    a.xp6(7),
                    a.Q6J('matRippleTrigger', g)(
                      'matRippleDisabled',
                      c.disableRipple || c.disabled,
                    )('matRippleCentered', !0),
                    a.xp6(1),
                    a.Q6J('for', c.inputId);
                }
              },
              dependencies: [Be.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mdc-theme-secondary, #018786));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(.mdc-ripple-upgraded):focus.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF018786FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786));background-color:var(--mdc-checkbox-selected-pressed-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-checkbox .mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-checkbox .mdc-checkbox:hover .mdc-checkbox__native-control:not([disabled])~.mdc-checkbox__ripple{opacity:.04;transform:scale(1);transition:opacity 80ms 0 cubic-bezier(0, 0, 0.2, 1),transform 80ms 0 cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control:not([disabled]):focus~.mdc-checkbox__ripple{opacity:.16}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__native-control:focus:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, black)}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            _
          );
        })(),
        _s = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({})),
            _
          );
        })(),
        os = (() => {
          class _ {}
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵmod = a.oAB({ type: _ })),
            (_.ɵinj = a.cJS({ imports: [Be.BQ, Be.si, _s, Be.BQ, _s] })),
            _
          );
        })();
      function Sa(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.TgZ(0, 'mat-checkbox', 3),
            a.NdJ('ngModelChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG((T.row.completed = g));
            })('change', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.onChange(g));
            }),
            a.qZA();
        }
        if (2 & _) {
          const r = a.oxw();
          a.Q6J('ngModel', r.row.completed);
        }
      }
      const Ar = function (_) {
          return { row__interactive: _ };
        },
        Do = function (_, F) {
          return ['row-text', _, F];
        };
      let Ts = (() => {
          class _ {
            constructor() {
              (this.rowClick = new a.vpe()), (this.rowChange = new a.vpe());
            }
            get isInteractive() {
              return !!this.row.text || this.interactive;
            }
            onClick(r) {
              'checkbox' !== r.target?.getAttribute('type') &&
                (r.stopPropagation(),
                r.preventDefault(),
                this.rowClick.emit(this.row));
            }
            onChange({ checked: r }) {
              this.rowChange.emit({ ...this.row, completed: r });
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['app-row']],
              inputs: { row: 'row', interactive: 'interactive' },
              outputs: { rowClick: 'rowClick', rowChange: 'rowChange' },
              decls: 4,
              vars: 9,
              consts: [
                [1, 'row', 3, 'ngClass', 'click'],
                [3, 'ngClass'],
                [
                  'class',
                  'row-checkbox',
                  3,
                  'ngModel',
                  'ngModelChange',
                  'change',
                  4,
                  'ngIf',
                ],
                [1, 'row-checkbox', 3, 'ngModel', 'ngModelChange', 'change'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div', 0),
                  a.NdJ('click', function (T) {
                    return c.isInteractive ? c.onClick(T) : void 0;
                  }),
                  a.TgZ(1, 'span', 1),
                  a._uU(2),
                  a.qZA(),
                  a.YNc(3, Sa, 1, 1, 'mat-checkbox', 2),
                  a.qZA()),
                  2 & r &&
                    (a.Q6J('ngClass', a.VKq(4, Ar, c.isInteractive)),
                    a.xp6(1),
                    a.Q6J(
                      'ngClass',
                      a.WLB(
                        6,
                        Do,
                        c.row.color || '',
                        c.row.completed ? 'row-text__completed' : '',
                      ),
                    ),
                    a.xp6(1),
                    a.hij(' ', c.row.text, ' '),
                    a.xp6(1),
                    a.Q6J('ngIf', !!c.row.text));
              },
              dependencies: [s.mk, s.O5, hn.JJ, Aa, hn.On],
              styles: [
                '.row[_ngcontent-%COMP%]{height:23px;padding:8px 4px;font-size:13px;border-bottom:solid 1px #ddd;display:flex;align-items:center;justify-content:space-between}.row__interactive[_ngcontent-%COMP%]{cursor:pointer}.row__interactive[_ngcontent-%COMP%]:hover{border-bottom:solid 1px #3f51b5}.row-text[_ngcontent-%COMP%]{border-radius:50px;padding:2px 8px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.row-text__completed[_ngcontent-%COMP%]{text-decoration:line-through;opacity:.3}@media only screen and (min-width: 1020px){.row-checkbox[_ngcontent-%COMP%]{display:none}.row[_ngcontent-%COMP%]:hover   .row-checkbox[_ngcontent-%COMP%]{display:block}}',
              ],
              changeDetection: 0,
            })),
            _
          );
        })(),
        Os = (() => {
          class _ {
            transform(r) {
              return (_ => `${ie(_.getDate())}.${ie(_.getMonth() + 1)}`)(r);
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵpipe = a.Yjl({ name: 'dateWithMonth', type: _, pure: !0 })),
            _
          );
        })(),
        f = (() => {
          class _ {
            transform(r) {
              return (_ => K[_.getDay()])(r);
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵpipe = a.Yjl({ name: 'dayOfWeek', type: _, pure: !0 })),
            _
          );
        })();
      function m(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.openDialog(g.id));
            })('rowChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.updateCompleted(g));
            }),
            a.ALo(2, 'dateWithMonth'),
            a.qZA(),
            a.BQk();
        }
        if (2 & _) {
          const r = F.$implicit,
            c = F.index,
            g = a.oxw();
          a.xp6(1),
            a.Q6J('row', r)('interactive', c === g.notes.length),
            a.uIk('data-testid', a.lcZ(2, 3, g.date) + ' ' + c);
        }
      }
      const d = function (_) {
          return { 'day-date__active': _ };
        },
        C = function (_) {
          return { 'day-name__active': _ };
        };
      let O = (() => {
        class _ {
          constructor(r, c) {
            (this.dialog = r),
              (this.store = c),
              (this.notes = []),
              (this.rows = []);
          }
          ngOnInit() {
            (this.notesSubscription = this.store
              .select(ye, this.date.toISOString().split('T')[0])
              .subscribe(r => {
                this.notes = r ?? [];
                const c =
                  this.minRowCount > this.notes.length
                    ? this.minRowCount
                    : this.notes.length + 1;
                c > this.minRowCount &&
                  ((this.minRowCount = c),
                  this.store.dispatch(Ue({ count: c }))),
                  (this.rows = Hr(this.notes, c));
              })),
              (this.rowsCountSubscrption = this.store
                .select(Re, this.date.toISOString().split('T')[0])
                .subscribe(r => {
                  (this.minRowCount = r), (this.rows = Hr(this.notes, r));
                })),
              (this.rows = Hr(this.notes, this.minRowCount));
          }
          ngOnChanges(r) {
            r.minRowsCount &&
              (this.rows = Hr(this.notes, r.minRowsCount.currentValue));
          }
          ngOnDestroy() {
            this.rowsCountSubscrption?.unsubscribe(),
              this.notesSubscription?.unsubscribe();
          }
          get isActive() {
            return (_ => {
              const F = new Date();
              return (
                F.getFullYear() === _.getFullYear() &&
                F.getMonth() === _.getMonth() &&
                F.getDate() === _.getDate()
              );
            })(this.date);
          }
          openDialog(r) {
            const c = this.notes.find(g => g.id === r);
            this.dialog.open(jo, {
              data: { date: this.date, note: c, withDate: !0 },
            });
          }
          updateCompleted(r) {
            const c = this.notes.find(g => g.id === r.id);
            c && this.store.dispatch(ae({ ...c, completed: !!r.completed }));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(a.Y36(mi), a.Y36(N.yh));
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['app-day']],
            inputs: { date: 'date' },
            features: [a.TTD],
            decls: 9,
            vars: 13,
            consts: [
              [1, 'day'],
              [1, 'day-header'],
              [1, 'day-date', 3, 'ngClass'],
              [1, 'day-name', 3, 'ngClass'],
              [4, 'ngFor', 'ngForOf'],
              [3, 'row', 'interactive', 'rowClick', 'rowChange'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                a._uU(3),
                a.ALo(4, 'dateWithMonth'),
                a.qZA(),
                a.TgZ(5, 'span', 3),
                a._uU(6),
                a.ALo(7, 'dayOfWeek'),
                a.qZA()(),
                a.YNc(8, m, 3, 5, 'ng-container', 4),
                a.qZA()),
                2 & r &&
                  (a.xp6(2),
                  a.Q6J('ngClass', a.VKq(9, d, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(4, 5, c.date)),
                  a.xp6(2),
                  a.Q6J('ngClass', a.VKq(11, C, c.isActive)),
                  a.xp6(1),
                  a.Oqu(a.lcZ(7, 7, c.date)),
                  a.xp6(2),
                  a.Q6J('ngForOf', c.rows));
            },
            dependencies: [s.mk, s.sg, Ts, Os, f],
            styles: [
              '.day-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:2px solid #000;padding-bottom:12px;font-size:18px;line-height:28px}.day-date[_ngcontent-%COMP%]{font-weight:700}.day-date__active[_ngcontent-%COMP%]{color:#3f51b5}.day-name[_ngcontent-%COMP%]{color:#999}.day-name__active[_ngcontent-%COMP%]{color:#3f51b580}@media only screen and (min-width: 1020px){.day-header[_ngcontent-%COMP%]{font-size:21px}}',
            ],
          })),
          _
        );
      })();
      function H(_, F) {
        if (
          (1 & _ && (a.TgZ(0, 'div', 2), a._UZ(1, 'app-day', 3), a.qZA()),
          2 & _)
        ) {
          const r = F.$implicit;
          a.xp6(1), a.Q6J('date', r);
        }
      }
      let Z = (() => {
        class _ {
          ngOnInit() {
            this.fillDates(this.startDate);
          }
          ngOnChanges(r) {
            r.startDate && this.fillDates(r.startDate.currentValue);
          }
          fillDates(r) {
            this.dates = [];
            for (let c = 0; c < 7; c++) this.dates.push(ft(r, c));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)();
          }),
          (_.ɵcmp = a.Xpm({
            type: _,
            selectors: [['app-week']],
            inputs: { startDate: 'startDate' },
            features: [a.TTD],
            decls: 2,
            vars: 1,
            consts: [
              ['data-testid', 'calendar', 1, 'week'],
              ['class', 'week-day', 4, 'ngFor', 'ngForOf'],
              [1, 'week-day'],
              [3, 'date'],
            ],
            template: function (r, c) {
              1 & r &&
                (a.TgZ(0, 'div', 0), a.YNc(1, H, 2, 1, 'div', 1), a.qZA()),
                2 & r && (a.xp6(1), a.Q6J('ngForOf', c.dates));
            },
            dependencies: [s.sg, O],
            styles: [
              '[_nghost-%COMP%]{display:flex}.week[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px;flex:1}.week-day[_ngcontent-%COMP%]{margin-top:20px}@media only screen and (min-width: 1020px){.week[_ngcontent-%COMP%]{flex-direction:row}.week-day[_ngcontent-%COMP%]{width:calc((100% - 120px) / 7)}.week-day[_ngcontent-%COMP%]:not(:first-child){margin-left:20px}}',
            ],
          })),
          _
        );
      })();
      function Ve(_, F) {
        if (1 & _) {
          const r = a.EpF();
          a.ynx(0),
            a.TgZ(1, 'app-row', 5),
            a.NdJ('rowClick', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.openDialog(g.id));
            })('rowChange', function (g) {
              a.CHM(r);
              const T = a.oxw();
              return a.KtG(T.updateCompleted(g));
            }),
            a.qZA(),
            a.BQk();
        }
        if (2 & _) {
          const r = F.$implicit,
            c = F.index,
            g = a.oxw();
          a.xp6(1),
            a.Q6J('row', r)('interactive', c === g.notes.length),
            a.uIk('data-testid', 'row ' + (c + 1));
        }
      }
      let qt = (() => {
          class _ {
            constructor(r, c) {
              (this.dialog = r),
                (this.store = c),
                (this.notes = []),
                (this.rows = []),
                (this.minRowsCount = 12),
                (this.notesSubscription = this.store.select(Ge).subscribe(g => {
                  this.notes = g ?? [];
                  const T =
                    this.minRowsCount > this.notes.length
                      ? this.minRowsCount
                      : this.notes.length + 3 - (this.notes.length % 3);
                  T > this.minRowsCount && (this.minRowsCount = T),
                    (this.rows = Hr(this.notes, T));
                })),
                (this.rows = Hr(this.notes, 12));
            }
            ngOnDestroy() {
              this.notesSubscription.unsubscribe();
            }
            openDialog(r) {
              const c = this.notes.find(g => g.id === r);
              this.dialog.open(jo, { data: { note: c, withDate: !1 } });
            }
            updateCompleted(r) {
              const c = this.notes.find(g => g.id === r.id);
              c && this.store.dispatch(ae({ ...c, completed: !!r.completed }));
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)(a.Y36(mi), a.Y36(N.yh));
            }),
            (_.ɵcmp = a.Xpm({
              type: _,
              selectors: [['app-todo-list']],
              decls: 9,
              vars: 1,
              consts: [
                [1, 'todo-header'],
                [1, 'todo-title'],
                [
                  'mat-icon-button',
                  '',
                  'data-testid',
                  'add-todo',
                  1,
                  'todo-add',
                  3,
                  'click',
                ],
                ['data-testid', 'todo-list', 1, 'todo-list'],
                [4, 'ngFor', 'ngForOf'],
                [3, 'row', 'interactive', 'rowClick', 'rowChange'],
              ],
              template: function (r, c) {
                1 & r &&
                  (a.TgZ(0, 'div')(1, 'div', 0)(2, 'span', 1),
                  a._uU(3, 'Someday'),
                  a.qZA(),
                  a.TgZ(4, 'button', 2),
                  a.NdJ('click', function () {
                    return c.openDialog();
                  }),
                  a.TgZ(5, 'mat-icon'),
                  a._uU(6, 'add'),
                  a.qZA()()(),
                  a.TgZ(7, 'div', 3),
                  a.YNc(8, Ve, 2, 3, 'ng-container', 4),
                  a.qZA()()),
                  2 & r && (a.xp6(8), a.Q6J('ngForOf', c.rows));
              },
              dependencies: [s.sg, Lt.RK, b, Ts],
              styles: [
                '.todo-header[_ngcontent-%COMP%]{display:flex;align-items:center;padding-bottom:12px;margin-top:40px}.todo-title[_ngcontent-%COMP%]{font-size:18px;line-height:28px;font-weight:700;color:#555}.todo-add[_ngcontent-%COMP%]{margin-left:20px;color:#555}@media only screen and (min-width: 1020px){.todo-header[_ngcontent-%COMP%]{font-size:21px;max-width:32%}.todo-list[_ngcontent-%COMP%]{display:grid;grid-template-columns:32% 31% 31%;grid-template-rows:40px 40px 40px 40px;column-gap:2%}}',
              ],
            })),
            _
          );
        })(),
        on = (() => {
          class _ {
            transform(r) {
              return (_ => `${mt[_.getMonth()]} ${_.getFullYear()}`)(r);
            }
          }
          return (
            (_.ɵfac = function (r) {
              return new (r || _)();
            }),
            (_.ɵpipe = a.Yjl({ name: 'headerDate', type: _, pure: !0 })),
            _
          );
        })();
      const ji = [
        {
          path: '',
          component: (() => {
            class _ {
              constructor(r, c, g, T) {
                (this.store = r),
                  (this.snackBar = c),
                  (this.authService = g),
                  (this.router = T),
                  (this.startDate = rt(new Date())),
                  (this.endDate = pt(new Date()));
              }
              ngOnInit() {
                this.getNotes(),
                  this.store.dispatch(te()),
                  (this.errorSubscription = this.store
                    .select(Ye)
                    .pipe((0, At.h)(Boolean))
                    .subscribe(r => {
                      this.snackBar.open(r, void 0, { duration: 5e3 });
                    }));
              }
              ngOnDestroy() {
                this.errorSubscription?.unsubscribe();
              }
              onBackClick() {
                (this.startDate = Ne(this.startDate, 7)),
                  (this.endDate = Ne(this.endDate, 7)),
                  this.getNotes();
              }
              onForwardClick() {
                (this.startDate = ft(this.startDate, 7)),
                  (this.endDate = ft(this.endDate, 7)),
                  this.getNotes();
              }
              getNotes() {
                this.store.dispatch(
                  se({
                    startDate: ee(this.startDate),
                    endDate: ee(this.endDate),
                  }),
                );
              }
              logout() {
                this.store.dispatch((0, Le.kS)());
              }
            }
            return (
              (_.ɵfac = function (r) {
                return new (r || _)(
                  a.Y36(N.yh),
                  a.Y36(ot.ux),
                  a.Y36(Ke.e),
                  a.Y36(x.F0),
                );
              }),
              (_.ɵcmp = a.Xpm({
                type: _,
                selectors: [['app-calendar']],
                decls: 33,
                vars: 6,
                consts: [
                  [1, 'calendar'],
                  [1, 'calendar-header'],
                  [1, 'calendar-month'],
                  [1, 'calendar-buttons'],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__mini',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Back',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'primary',
                    'aria-label',
                    'Forward',
                    1,
                    'calendar-button',
                    'calendar-button__large',
                    3,
                    'click',
                  ],
                  [
                    'mat-mini-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__mini',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  [
                    'mat-fab',
                    '',
                    'color',
                    'basic',
                    'aria-label',
                    'Menu',
                    1,
                    'calendar-button__large',
                    'calendar-menu',
                    3,
                    'matMenuTriggerFor',
                  ],
                  ['menu', 'matMenu'],
                  ['mat-menu-item', '', 3, 'click'],
                  [3, 'startDate'],
                ],
                template: function (r, c) {
                  if (
                    (1 & r &&
                      (a.TgZ(0, 'div', 0)(1, 'div', 1)(2, 'span', 2),
                      a._uU(3),
                      a.ALo(4, 'headerDate'),
                      a.qZA(),
                      a.TgZ(5, 'div', 3)(6, 'button', 4),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(7, 'mat-icon'),
                      a._uU(8, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(9, 'button', 5),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(10, 'mat-icon'),
                      a._uU(11, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(12, 'button', 6),
                      a.NdJ('click', function () {
                        return c.onBackClick();
                      }),
                      a.TgZ(13, 'mat-icon'),
                      a._uU(14, 'arrow_back_ios_new'),
                      a.qZA()(),
                      a.TgZ(15, 'button', 7),
                      a.NdJ('click', function () {
                        return c.onForwardClick();
                      }),
                      a.TgZ(16, 'mat-icon'),
                      a._uU(17, 'arrow_forward_ios_new'),
                      a.qZA()(),
                      a.TgZ(18, 'button', 8)(19, 'mat-icon'),
                      a._uU(20, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(21, 'button', 9)(22, 'mat-icon'),
                      a._uU(23, 'more_vert'),
                      a.qZA()(),
                      a.TgZ(24, 'mat-menu', null, 10)(26, 'button', 11),
                      a.NdJ('click', function () {
                        return c.logout();
                      }),
                      a.TgZ(27, 'mat-icon'),
                      a._uU(28, 'logout'),
                      a.qZA(),
                      a.TgZ(29, 'span'),
                      a._uU(30, 'Logout'),
                      a.qZA()()()()(),
                      a._UZ(31, 'app-week', 12)(32, 'app-todo-list'),
                      a.qZA()),
                    2 & r)
                  ) {
                    const g = a.MAs(25);
                    a.xp6(3),
                      a.Oqu(a.lcZ(4, 4, c.startDate)),
                      a.xp6(15),
                      a.Q6J('matMenuTriggerFor', g),
                      a.xp6(3),
                      a.Q6J('matMenuTriggerFor', g),
                      a.xp6(10),
                      a.Q6J('startDate', c.startDate);
                  }
                },
                dependencies: [Lt.nh, Lt.cs, b, $i, Zi, hr, Z, qt, on],
                styles: [
                  '.calendar[_ngcontent-%COMP%]{padding:12px}.calendar-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.calendar-month[_ngcontent-%COMP%]{font-size:21px;line-height:36px;font-weight:700}.calendar-buttons[_ngcontent-%COMP%]{display:flex}.calendar-button__large[_ngcontent-%COMP%]{display:none}.calendar-button[_ngcontent-%COMP%]:not(:first-child){margin-left:8px}.calendar-menu[_ngcontent-%COMP%]{margin-left:20px}@media only screen and (min-width: 1020px){.calendar-button__large[_ngcontent-%COMP%]{display:block}.calendar-button__mini[_ngcontent-%COMP%]{display:none}.calendar-month[_ngcontent-%COMP%]{font-size:36px;line-height:42px}}',
                ],
              })),
              _
            );
          })(),
        },
      ];
      let Co = (() => {
        class _ {}
        return (
          (_.ɵfac = function (r) {
            return new (r || _)();
          }),
          (_.ɵmod = a.oAB({ type: _ })),
          (_.ɵinj = a.cJS({ imports: [x.Bz.forChild(ji), x.Bz] })),
          _
        );
      })();
      var Sr = D(3835);
      const dr = {
        randomUUID:
          typeof crypto < 'u' &&
          crypto.randomUUID &&
          crypto.randomUUID.bind(crypto),
      };
      let $o;
      const Yo = new Uint8Array(16);
      function ss() {
        if (
          !$o &&
          (($o =
            typeof crypto < 'u' &&
            crypto.getRandomValues &&
            crypto.getRandomValues.bind(crypto)),
          !$o)
        )
          throw new Error(
            'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
          );
        return $o(Yo);
      }
      const rr = [];
      for (let _ = 0; _ < 256; ++_) rr.push((_ + 256).toString(16).slice(1));
      const Ws = function Rs(_, F, r) {
          if (dr.randomUUID && !F && !_) return dr.randomUUID();
          const c = (_ = _ || {}).random || (_.rng || ss)();
          if (((c[6] = (15 & c[6]) | 64), (c[8] = (63 & c[8]) | 128), F)) {
            r = r || 0;
            for (let g = 0; g < 16; ++g) F[r + g] = c[g];
            return F;
          }
          return (function vs(_, F = 0) {
            return (
              rr[_[F + 0]] +
              rr[_[F + 1]] +
              rr[_[F + 2]] +
              rr[_[F + 3]] +
              '-' +
              rr[_[F + 4]] +
              rr[_[F + 5]] +
              '-' +
              rr[_[F + 6]] +
              rr[_[F + 7]] +
              '-' +
              rr[_[F + 8]] +
              rr[_[F + 9]] +
              '-' +
              rr[_[F + 10]] +
              rr[_[F + 11]] +
              rr[_[F + 12]] +
              rr[_[F + 13]] +
              rr[_[F + 14]] +
              rr[_[F + 15]]
            ).toLowerCase();
          })(c);
        },
        Fs = { headers: new Bt.WM({ 'Content-Type': 'application/json' }) };
      let nl = (() => {
        class _ {
          constructor(r) {
            this.http = r;
          }
          getNotes(r, c) {
            return this.http.get(`${Sr.k.apiUrl}/notes`, {
              params: r && c ? { from: r, to: c } : {},
              ...Fs,
            });
          }
          createNote(r) {
            const c = { ...r, id: Ws() };
            return this.http.post(`${Sr.k.apiUrl}/notes`, c, Fs);
          }
          updateNote(r) {
            return this.http.patch(`${Sr.k.apiUrl}/notes/${r.id}`, r, Fs);
          }
          deleteNote(r) {
            return this.http.delete(`${Sr.k.apiUrl}/notes/${r.id}`, Fs);
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(a.LFG(Bt.eN));
          }),
          (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac, providedIn: 'root' })),
          _
        );
      })();
      var eo = D(8776),
        xo = D(6129);
      let Ps = (() => {
        class _ {
          constructor(r, c) {
            (this.actions$ = r),
              (this.notesService = c),
              (this.loadCalendarNotes$ = (0, eo.GW)(() =>
                this.actions$.pipe(
                  (0, eo.l4)(se.type),
                  (0, xo.z)(({ startDate: g, endDate: T }) =>
                    this.notesService.getNotes(g, T).pipe(
                      (0, Qt.U)(ge => ue({ calendarNotes: ge })),
                      (0, dn.K)(ge =>
                        (0, an.of)(
                          ce({ error: ge?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.loadTodoNotes$ = (0, eo.GW)(() =>
                this.actions$.pipe(
                  (0, eo.l4)(te.type),
                  (0, xo.z)(() =>
                    this.notesService.getNotes().pipe(
                      (0, Qt.U)(g => _e({ todoNotes: g })),
                      (0, dn.K)(g =>
                        (0, an.of)(
                          ce({ error: g?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.createNote$ = (0, eo.GW)(() =>
                this.actions$.pipe(
                  (0, eo.l4)(he.type),
                  (0, xo.z)(g =>
                    this.notesService.createNote(g).pipe(
                      (0, Qt.U)(() => re()),
                      (0, dn.K)(T =>
                        (0, an.of)(
                          ce({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.updateNote$ = (0, eo.GW)(() =>
                this.actions$.pipe(
                  (0, eo.l4)(ae.type),
                  (0, xo.z)(g =>
                    this.notesService.updateNote(g).pipe(
                      (0, Qt.U)(() => re()),
                      (0, dn.K)(T =>
                        (0, an.of)(
                          ce({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              )),
              (this.deleteNote$ = (0, eo.GW)(() =>
                this.actions$.pipe(
                  (0, eo.l4)(fe.type),
                  (0, xo.z)(g =>
                    this.notesService.deleteNote(g).pipe(
                      (0, Qt.U)(() => re()),
                      (0, dn.K)(T =>
                        (0, an.of)(
                          ce({ error: T?.error?.message || 'Unknown error' }),
                        ),
                      ),
                    ),
                  ),
                ),
              ));
          }
        }
        return (
          (_.ɵfac = function (r) {
            return new (r || _)(a.LFG(eo.eX), a.LFG(nl));
          }),
          (_.ɵprov = a.Yz7({ token: _, factory: _.ɵfac })),
          _
        );
      })();
      const il = (0, N.Lq)(
        {
          loading: !1,
          todoNotes: [],
          loaded: !1,
          requestSuccess: !1,
          minRowsCount: 6,
        },
        (0, N.on)(se, _ => ({ ..._, error: void 0, loading: !0 })),
        (0, N.on)(te, _ => ({ ..._, error: void 0, loading: !0 })),
        (0, N.on)(ue, (_, { calendarNotes: F }) => ({
          ..._,
          error: void 0,
          loading: !1,
          loaded: !0,
          calendarNotes: F,
        })),
        (0, N.on)(_e, (_, { todoNotes: F }) => ({
          ..._,
          error: void 0,
          loading: !1,
          loaded: !0,
          todoNotes: F,
        })),
        (0, N.on)(ce, (_, { error: F }) => ({ ..._, error: F, loading: !1 })),
        (0, N.on)(he, _ => ({
          ..._,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, N.on)(ae, _ => ({
          ..._,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, N.on)(fe, _ => ({
          ..._,
          error: void 0,
          requestSuccess: !1,
          loading: !0,
        })),
        (0, N.on)(re, _ => ({
          ..._,
          error: void 0,
          requestSuccess: !0,
          loading: !1,
        })),
        (0, N.on)(He, _ => ({ ..._, requestSuccess: !1 })),
        (0, N.on)(Ue, (_, { count: F }) => ({ ..._, minRowsCount: F })),
      );
      let Ql = (() => {
        class _ {}
        return (
          (_.ɵfac = function (r) {
            return new (r || _)();
          }),
          (_.ɵmod = a.oAB({ type: _ })),
          (_.ɵinj = a.cJS({
            providers: [nl, Ke.e, { provide: Be.Ad, useValue: 'ru-RU' }],
            imports: [
              s.ez,
              Co,
              eo.sQ.forFeature([Ps]),
              N.Aw.forFeature('calendar', il),
              Lt.ot,
              w,
              Xn.lN,
              hn.UX,
              Fr.c,
              ii,
              No,
              Be.XK,
              ot.ZX,
              ms,
              fr,
              os,
              hn.u5,
            ],
          })),
          _
        );
      })();
    },
    3835: (Tt, Pe, D) => {
      D.d(Pe, { k: () => s });
      const s = { apiUrl: '/api', baseUrl: 'http://localhost:4200' };
    },
    4044: (Tt, Pe, D) => {
      var s = D(1481),
        x = D(4650),
        N = D(8252);
      let se = (() => {
        class B {
          constructor() {
            this.title = 'timepage';
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵcmp = x.Xpm({
            type: B,
            selectors: [['app-root']],
            decls: 2,
            vars: 0,
            consts: [['role', 'main', 1, 'content']],
            template: function (p, S) {
              1 & p && (x.TgZ(0, 'div', 0), x._UZ(1, 'router-outlet'), x.qZA());
            },
            dependencies: [N.lC],
          })),
          B
        );
      })();
      var te = D(7340);
      function _e(B) {
        return new x.vHH(3e3, !1);
      }
      function Pt() {
        return typeof window < 'u' && typeof window.document < 'u';
      }
      function an() {
        return (
          typeof process < 'u' &&
          '[object process]' === {}.toString.call(process)
        );
      }
      function ut(B) {
        switch (B.length) {
          case 0:
            return new te.ZN();
          case 1:
            return B[0];
          default:
            return new te.ZE(B);
        }
      }
      function Zt(B, h, p, S, V = new Map(), q = new Map()) {
        const De = [],
          Ee = [];
        let qe = -1,
          ht = null;
        if (
          (S.forEach(Wt => {
            const jt = Wt.get('offset'),
              xn = jt == qe,
              sn = (xn && ht) || new Map();
            Wt.forEach((pn, bn) => {
              let jn = bn,
                Qn = pn;
              if ('offset' !== bn)
                switch (((jn = h.normalizePropertyName(jn, De)), Qn)) {
                  case te.k1:
                    Qn = V.get(bn);
                    break;
                  case te.l3:
                    Qn = q.get(bn);
                    break;
                  default:
                    Qn = h.normalizeStyleValue(bn, jn, Qn, De);
                }
              sn.set(jn, Qn);
            }),
              xn || Ee.push(sn),
              (ht = sn),
              (qe = jt);
          }),
          De.length)
        )
          throw (function wt(B) {
            return new x.vHH(3502, !1);
          })();
        return Ee;
      }
      function Ct(B, h, p, S) {
        switch (h) {
          case 'start':
            B.onStart(() => S(p && yt(p, 'start', B)));
            break;
          case 'done':
            B.onDone(() => S(p && yt(p, 'done', B)));
            break;
          case 'destroy':
            B.onDestroy(() => S(p && yt(p, 'destroy', B)));
        }
      }
      function yt(B, h, p) {
        const q = Qt(
            B.element,
            B.triggerName,
            B.fromState,
            B.toState,
            h || B.phaseName,
            p.totalTime ?? B.totalTime,
            !!p.disabled,
          ),
          De = B._data;
        return null != De && (q._data = De), q;
      }
      function Qt(B, h, p, S, V = '', q = 0, De) {
        return {
          element: B,
          triggerName: h,
          fromState: p,
          toState: S,
          phaseName: V,
          totalTime: q,
          disabled: !!De,
        };
      }
      function dn(B, h, p) {
        let S = B.get(h);
        return S || B.set(h, (S = p)), S;
      }
      function wn(B) {
        const h = B.indexOf(':');
        return [B.substring(1, h), B.slice(h + 1)];
      }
      let Zn = (B, h) => !1,
        en = (B, h, p) => [],
        Bt = null;
      function Rn(B) {
        const h = B.parentNode || B.host;
        return h === Bt ? null : h;
      }
      (an() || typeof Element < 'u') &&
        (Pt()
          ? ((Bt = (() => document.documentElement)()),
            (Zn = (B, h) => {
              for (; h; ) {
                if (h === B) return !0;
                h = Rn(h);
              }
              return !1;
            }))
          : (Zn = (B, h) => B.contains(h)),
        (en = (B, h, p) => {
          if (p) return Array.from(B.querySelectorAll(h));
          const S = B.querySelector(h);
          return S ? [S] : [];
        }));
      let ne = null,
        Me = !1;
      const U = Zn,
        Ie = en;
      let me = (() => {
          class B {
            validateStyleProperty(p) {
              return (function ze(B) {
                ne ||
                  ((ne =
                    (function be() {
                      return typeof document < 'u' ? document.body : null;
                    })() || {}),
                  (Me = !!ne.style && 'WebkitAppearance' in ne.style));
                let h = !0;
                return (
                  ne.style &&
                    !(function W(B) {
                      return 'ebkit' == B.substring(1, 6);
                    })(B) &&
                    ((h = B in ne.style),
                    !h &&
                      Me &&
                      (h =
                        'Webkit' + B.charAt(0).toUpperCase() + B.slice(1) in
                        ne.style)),
                  h
                );
              })(p);
            }
            matchesElement(p, S) {
              return !1;
            }
            containsElement(p, S) {
              return U(p, S);
            }
            getParentElement(p) {
              return Rn(p);
            }
            query(p, S, V) {
              return Ie(p, S, V);
            }
            computeStyle(p, S, V) {
              return V || '';
            }
            animate(p, S, V, q, De, Ee = [], qe) {
              return new te.ZN(V, q);
            }
          }
          return (
            (B.ɵfac = function (p) {
              return new (p || B)();
            }),
            (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
            B
          );
        })(),
        pe = (() => {
          class B {}
          return (B.NOOP = new me()), B;
        })();
      const Xe = 1e3,
        Dn = 'ng-enter',
        Te = 'ng-leave',
        vt = 'ng-trigger',
        Je = '.ng-trigger',
        Et = 'ng-animating',
        ke = '.ng-animating';
      function R(B) {
        if ('number' == typeof B) return B;
        const h = B.match(/^(-?[\.\d]+)(m?s)/);
        return !h || h.length < 2 ? 0 : b(parseFloat(h[1]), h[2]);
      }
      function b(B, h) {
        return 's' === h ? B * Xe : B;
      }
      function w(B, h, p) {
        return B.hasOwnProperty('duration')
          ? B
          : (function $(B, h, p) {
              let V,
                q = 0,
                De = '';
              if ('string' == typeof B) {
                const Ee = B.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i,
                );
                if (null === Ee)
                  return h.push(_e()), { duration: 0, delay: 0, easing: '' };
                V = b(parseFloat(Ee[1]), Ee[2]);
                const qe = Ee[3];
                null != qe && (q = b(parseFloat(qe), Ee[4]));
                const ht = Ee[5];
                ht && (De = ht);
              } else V = B;
              if (!p) {
                let Ee = !1,
                  qe = h.length;
                V < 0 &&
                  (h.push(
                    (function ce() {
                      return new x.vHH(3100, !1);
                    })(),
                  ),
                  (Ee = !0)),
                  q < 0 &&
                    (h.push(
                      (function he() {
                        return new x.vHH(3101, !1);
                      })(),
                    ),
                    (Ee = !0)),
                  Ee && h.splice(qe, 0, _e());
              }
              return { duration: V, delay: q, easing: De };
            })(B, h, p);
      }
      function z(B, h = {}) {
        return (
          Object.keys(B).forEach(p => {
            h[p] = B[p];
          }),
          h
        );
      }
      function $e(B) {
        const h = new Map();
        return (
          Object.keys(B).forEach(p => {
            h.set(p, B[p]);
          }),
          h
        );
      }
      function Nt(B, h = new Map(), p) {
        if (p) for (let [S, V] of p) h.set(S, V);
        for (let [S, V] of B) h.set(S, V);
        return h;
      }
      function Yt(B, h, p) {
        return p ? h + ':' + p + ';' : '';
      }
      function tn(B) {
        let h = '';
        for (let p = 0; p < B.style.length; p++) {
          const S = B.style.item(p);
          h += Yt(0, S, B.style.getPropertyValue(S));
        }
        for (const p in B.style)
          B.style.hasOwnProperty(p) &&
            !p.startsWith('_') &&
            (h += Yt(0, Ut(p), B.style[p]));
        B.setAttribute('style', h);
      }
      function Oe(B, h, p) {
        B.style &&
          (h.forEach((S, V) => {
            const q = Bn(V);
            p && !p.has(V) && p.set(V, B.style[q]), (B.style[q] = S);
          }),
          an() && tn(B));
      }
      function Ce(B, h) {
        B.style &&
          (h.forEach((p, S) => {
            const V = Bn(S);
            B.style[V] = '';
          }),
          an() && tn(B));
      }
      function Q(B) {
        return Array.isArray(B) ? (1 == B.length ? B[0] : (0, te.vP)(B)) : B;
      }
      const ct = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function Ft(B) {
        let h = [];
        if ('string' == typeof B) {
          let p;
          for (; (p = ct.exec(B)); ) h.push(p[1]);
          ct.lastIndex = 0;
        }
        return h;
      }
      function Kt(B, h, p) {
        const S = B.toString(),
          V = S.replace(ct, (q, De) => {
            let Ee = h[De];
            return (
              null == Ee &&
                (p.push(
                  (function fe(B) {
                    return new x.vHH(3003, !1);
                  })(),
                ),
                (Ee = '')),
              Ee.toString()
            );
          });
        return V == S ? B : V;
      }
      function Cn(B) {
        const h = [];
        let p = B.next();
        for (; !p.done; ) h.push(p.value), (p = B.next());
        return h;
      }
      const Gn = /-+([a-z0-9])/g;
      function Bn(B) {
        return B.replace(Gn, (...h) => h[1].toUpperCase());
      }
      function Ut(B) {
        return B.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function Hn(B, h, p) {
        switch (h.type) {
          case 7:
            return B.visitTrigger(h, p);
          case 0:
            return B.visitState(h, p);
          case 1:
            return B.visitTransition(h, p);
          case 2:
            return B.visitSequence(h, p);
          case 3:
            return B.visitGroup(h, p);
          case 4:
            return B.visitAnimate(h, p);
          case 5:
            return B.visitKeyframes(h, p);
          case 6:
            return B.visitStyle(h, p);
          case 8:
            return B.visitReference(h, p);
          case 9:
            return B.visitAnimateChild(h, p);
          case 10:
            return B.visitAnimateRef(h, p);
          case 11:
            return B.visitQuery(h, p);
          case 12:
            return B.visitStagger(h, p);
          default:
            throw (function re(B) {
              return new x.vHH(3004, !1);
            })();
        }
      }
      function Ci(B, h) {
        return window.getComputedStyle(B)[h];
      }
      const Bi = '*';
      function Zi(B, h) {
        const p = [];
        return (
          'string' == typeof B
            ? B.split(/\s*,\s*/).forEach(S =>
                (function _i(B, h, p) {
                  if (':' == B[0]) {
                    const qe = (function $t(B, h) {
                      switch (B) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (p, S) => parseFloat(S) > parseFloat(p);
                        case ':decrement':
                          return (p, S) => parseFloat(S) < parseFloat(p);
                        default:
                          return (
                            h.push(
                              (function dt(B) {
                                return new x.vHH(3016, !1);
                              })(),
                            ),
                            '* => *'
                          );
                      }
                    })(B, p);
                    if ('function' == typeof qe) return void h.push(qe);
                    B = qe;
                  }
                  const S = B.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == S || S.length < 4)
                    return (
                      p.push(
                        (function nt(B) {
                          return new x.vHH(3015, !1);
                        })(),
                      ),
                      h
                    );
                  const V = S[1],
                    q = S[2],
                    De = S[3];
                  h.push(di(V, De));
                  '<' == q[0] && !(V == Bi && De == Bi) && h.push(di(De, V));
                })(S, p, h),
              )
            : p.push(B),
          p
        );
      }
      const fn = new Set(['true', '1']),
        Vn = new Set(['false', '0']);
      function di(B, h) {
        const p = fn.has(B) || Vn.has(B),
          S = fn.has(h) || Vn.has(h);
        return (V, q) => {
          let De = B == Bi || B == V,
            Ee = h == Bi || h == q;
          return (
            !De &&
              p &&
              'boolean' == typeof V &&
              (De = V ? fn.has(B) : Vn.has(B)),
            !Ee &&
              S &&
              'boolean' == typeof q &&
              (Ee = q ? fn.has(h) : Vn.has(h)),
            De && Ee
          );
        };
      }
      const Un = new RegExp('s*:selfs*,?', 'g');
      function hi(B, h, p, S) {
        return new Ei(B).build(h, p, S);
      }
      class Ei {
        constructor(h) {
          this._driver = h;
        }
        build(h, p, S) {
          const V = new Ti(p);
          return this._resetContextStyleTimingState(V), Hn(this, Q(h), V);
        }
        _resetContextStyleTimingState(h) {
          (h.currentQuerySelector = ''),
            (h.collectedStyles = new Map()),
            h.collectedStyles.set('', new Map()),
            (h.currentTime = 0);
        }
        visitTrigger(h, p) {
          let S = (p.queryCount = 0),
            V = (p.depCount = 0);
          const q = [],
            De = [];
          return (
            '@' == h.name.charAt(0) &&
              p.errors.push(
                (function Ue() {
                  return new x.vHH(3006, !1);
                })(),
              ),
            h.definitions.forEach(Ee => {
              if ((this._resetContextStyleTimingState(p), 0 == Ee.type)) {
                const qe = Ee,
                  ht = qe.name;
                ht
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach(Wt => {
                    (qe.name = Wt), q.push(this.visitState(qe, p));
                  }),
                  (qe.name = ht);
              } else if (1 == Ee.type) {
                const qe = this.visitTransition(Ee, p);
                (S += qe.queryCount), (V += qe.depCount), De.push(qe);
              } else
                p.errors.push(
                  (function rt() {
                    return new x.vHH(3007, !1);
                  })(),
                );
            }),
            {
              type: 7,
              name: h.name,
              states: q,
              transitions: De,
              queryCount: S,
              depCount: V,
              options: null,
            }
          );
        }
        visitState(h, p) {
          const S = this.visitStyle(h.styles, p),
            V = (h.options && h.options.params) || null;
          if (S.containsDynamicStyles) {
            const q = new Set(),
              De = V || {};
            S.styles.forEach(Ee => {
              Ee instanceof Map &&
                Ee.forEach(qe => {
                  Ft(qe).forEach(ht => {
                    De.hasOwnProperty(ht) || q.add(ht);
                  });
                });
            }),
              q.size &&
                (Cn(q.values()),
                p.errors.push(
                  (function pt(B, h) {
                    return new x.vHH(3008, !1);
                  })(),
                ));
          }
          return {
            type: 0,
            name: h.name,
            style: S,
            options: V ? { params: V } : null,
          };
        }
        visitTransition(h, p) {
          (p.queryCount = 0), (p.depCount = 0);
          const S = Hn(this, Q(h.animation), p);
          return {
            type: 1,
            matchers: Zi(h.expr, p.errors),
            animation: S,
            queryCount: p.queryCount,
            depCount: p.depCount,
            options: Oi(h.options),
          };
        }
        visitSequence(h, p) {
          return {
            type: 2,
            steps: h.steps.map(S => Hn(this, S, p)),
            options: Oi(h.options),
          };
        }
        visitGroup(h, p) {
          const S = p.currentTime;
          let V = 0;
          const q = h.steps.map(De => {
            p.currentTime = S;
            const Ee = Hn(this, De, p);
            return (V = Math.max(V, p.currentTime)), Ee;
          });
          return (
            (p.currentTime = V), { type: 3, steps: q, options: Oi(h.options) }
          );
        }
        visitAnimate(h, p) {
          const S = (function ur(B, h) {
            if (B.hasOwnProperty('duration')) return B;
            if ('number' == typeof B) return oi(w(B, h).duration, 0, '');
            const p = B;
            if (
              p.split(/\s+/).some(q => '{' == q.charAt(0) && '{' == q.charAt(1))
            ) {
              const q = oi(0, 0, '');
              return (q.dynamic = !0), (q.strValue = p), q;
            }
            const V = w(p, h);
            return oi(V.duration, V.delay, V.easing);
          })(h.timings, p.errors);
          p.currentAnimateTimings = S;
          let V,
            q = h.styles ? h.styles : (0, te.oB)({});
          if (5 == q.type) V = this.visitKeyframes(q, p);
          else {
            let De = h.styles,
              Ee = !1;
            if (!De) {
              Ee = !0;
              const ht = {};
              S.easing && (ht.easing = S.easing), (De = (0, te.oB)(ht));
            }
            p.currentTime += S.duration + S.delay;
            const qe = this.visitStyle(De, p);
            (qe.isEmptyStep = Ee), (V = qe);
          }
          return (
            (p.currentAnimateTimings = null),
            { type: 4, timings: S, style: V, options: null }
          );
        }
        visitStyle(h, p) {
          const S = this._makeStyleAst(h, p);
          return this._validateStyleAst(S, p), S;
        }
        _makeStyleAst(h, p) {
          const S = [],
            V = Array.isArray(h.styles) ? h.styles : [h.styles];
          for (let Ee of V)
            'string' == typeof Ee
              ? Ee === te.l3
                ? S.push(Ee)
                : p.errors.push(new x.vHH(3002, !1))
              : S.push($e(Ee));
          let q = !1,
            De = null;
          return (
            S.forEach(Ee => {
              if (
                Ee instanceof Map &&
                (Ee.has('easing') &&
                  ((De = Ee.get('easing')), Ee.delete('easing')),
                !q)
              )
                for (let qe of Ee.values())
                  if (qe.toString().indexOf('{{') >= 0) {
                    q = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: S,
              easing: De,
              offset: h.offset,
              containsDynamicStyles: q,
              options: null,
            }
          );
        }
        _validateStyleAst(h, p) {
          const S = p.currentAnimateTimings;
          let V = p.currentTime,
            q = p.currentTime;
          S && q > 0 && (q -= S.duration + S.delay),
            h.styles.forEach(De => {
              'string' != typeof De &&
                De.forEach((Ee, qe) => {
                  const ht = p.collectedStyles.get(p.currentQuerySelector),
                    Wt = ht.get(qe);
                  let jt = !0;
                  Wt &&
                    (q != V &&
                      q >= Wt.startTime &&
                      V <= Wt.endTime &&
                      (p.errors.push(
                        (function st(B, h, p, S, V) {
                          return new x.vHH(3010, !1);
                        })(),
                      ),
                      (jt = !1)),
                    (q = Wt.startTime)),
                    jt && ht.set(qe, { startTime: q, endTime: V }),
                    p.options &&
                      (function we(B, h, p) {
                        const S = h.params || {},
                          V = Ft(B);
                        V.length &&
                          V.forEach(q => {
                            S.hasOwnProperty(q) ||
                              p.push(
                                (function ae(B) {
                                  return new x.vHH(3001, !1);
                                })(),
                              );
                          });
                      })(Ee, p.options, p.errors);
                });
            });
        }
        visitKeyframes(h, p) {
          const S = { type: 5, styles: [], options: null };
          if (!p.currentAnimateTimings)
            return (
              p.errors.push(
                (function mt() {
                  return new x.vHH(3011, !1);
                })(),
              ),
              S
            );
          let q = 0;
          const De = [];
          let Ee = !1,
            qe = !1,
            ht = 0;
          const Wt = h.steps.map(Qn => {
            const Ai = this._makeStyleAst(Qn, p);
            let Ui =
                null != Ai.offset
                  ? Ai.offset
                  : (function $i(B) {
                      if ('string' == typeof B) return null;
                      let h = null;
                      if (Array.isArray(B))
                        B.forEach(p => {
                          if (p instanceof Map && p.has('offset')) {
                            const S = p;
                            (h = parseFloat(S.get('offset'))),
                              S.delete('offset');
                          }
                        });
                      else if (B instanceof Map && B.has('offset')) {
                        const p = B;
                        (h = parseFloat(p.get('offset'))), p.delete('offset');
                      }
                      return h;
                    })(Ai.styles),
              ni = 0;
            return (
              null != Ui && (q++, (ni = Ai.offset = Ui)),
              (qe = qe || ni < 0 || ni > 1),
              (Ee = Ee || ni < ht),
              (ht = ni),
              De.push(ni),
              Ai
            );
          });
          qe &&
            p.errors.push(
              (function K() {
                return new x.vHH(3012, !1);
              })(),
            ),
            Ee &&
              p.errors.push(
                (function ie() {
                  return new x.vHH(3200, !1);
                })(),
              );
          const jt = h.steps.length;
          let xn = 0;
          q > 0 && q < jt
            ? p.errors.push(
                (function ee() {
                  return new x.vHH(3202, !1);
                })(),
              )
            : 0 == q && (xn = 1 / (jt - 1));
          const sn = jt - 1,
            pn = p.currentTime,
            bn = p.currentAnimateTimings,
            jn = bn.duration;
          return (
            Wt.forEach((Qn, Ai) => {
              const Ui = xn > 0 ? (Ai == sn ? 1 : xn * Ai) : De[Ai],
                ni = Ui * jn;
              (p.currentTime = pn + bn.delay + ni),
                (bn.duration = ni),
                this._validateStyleAst(Qn, p),
                (Qn.offset = Ui),
                S.styles.push(Qn);
            }),
            S
          );
        }
        visitReference(h, p) {
          return {
            type: 8,
            animation: Hn(this, Q(h.animation), p),
            options: Oi(h.options),
          };
        }
        visitAnimateChild(h, p) {
          return p.depCount++, { type: 9, options: Oi(h.options) };
        }
        visitAnimateRef(h, p) {
          return {
            type: 10,
            animation: this.visitReference(h.animation, p),
            options: Oi(h.options),
          };
        }
        visitQuery(h, p) {
          const S = p.currentQuerySelector,
            V = h.options || {};
          p.queryCount++, (p.currentQuery = h);
          const [q, De] = (function fi(B) {
            const h = !!B.split(/\s*,\s*/).find(p => ':self' == p);
            return (
              h && (B = B.replace(Un, '')),
              (B = B.replace(/@\*/g, Je)
                .replace(/@\w+/g, p => Je + '-' + p.slice(1))
                .replace(/:animating/g, ke)),
              [B, h]
            );
          })(h.selector);
          (p.currentQuerySelector = S.length ? S + ' ' + q : q),
            dn(p.collectedStyles, p.currentQuerySelector, new Map());
          const Ee = Hn(this, Q(h.animation), p);
          return (
            (p.currentQuery = null),
            (p.currentQuerySelector = S),
            {
              type: 11,
              selector: q,
              limit: V.limit || 0,
              optional: !!V.optional,
              includeSelf: De,
              animation: Ee,
              originalSelector: h.selector,
              options: Oi(h.options),
            }
          );
        }
        visitStagger(h, p) {
          p.currentQuery ||
            p.errors.push(
              (function X() {
                return new x.vHH(3013, !1);
              })(),
            );
          const S =
            'full' === h.timings
              ? { duration: 0, delay: 0, easing: 'full' }
              : w(h.timings, p.errors, !0);
          return {
            type: 12,
            animation: Hn(this, Q(h.animation), p),
            timings: S,
            options: null,
          };
        }
      }
      class Ti {
        constructor(h) {
          (this.errors = h),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Oi(B) {
        return (
          B
            ? (B = z(B)).params &&
              (B.params = (function _n(B) {
                return B ? z(B) : null;
              })(B.params))
            : (B = {}),
          B
        );
      }
      function oi(B, h, p) {
        return { duration: B, delay: h, easing: p };
      }
      function Qi(B, h, p, S, V, q, De = null, Ee = !1) {
        return {
          type: 1,
          element: B,
          keyframes: h,
          preStyleProps: p,
          postStyleProps: S,
          duration: V,
          delay: q,
          totalTime: V + q,
          easing: De,
          subTimeline: Ee,
        };
      }
      class Vi {
        constructor() {
          this._map = new Map();
        }
        get(h) {
          return this._map.get(h) || [];
        }
        append(h, p) {
          let S = this._map.get(h);
          S || this._map.set(h, (S = [])), S.push(...p);
        }
        has(h) {
          return this._map.has(h);
        }
        clear() {
          this._map.clear();
        }
      }
      const fr = new RegExp(':enter', 'g'),
        Mi = new RegExp(':leave', 'g');
      function qi(
        B,
        h,
        p,
        S,
        V,
        q = new Map(),
        De = new Map(),
        Ee,
        qe,
        ht = [],
      ) {
        return new or().buildKeyframes(B, h, p, S, V, q, De, Ee, qe, ht);
      }
      class or {
        buildKeyframes(h, p, S, V, q, De, Ee, qe, ht, Wt = []) {
          ht = ht || new Vi();
          const jt = new Xi(h, p, ht, V, q, Wt, []);
          jt.options = qe;
          const xn = qe.delay ? R(qe.delay) : 0;
          jt.currentTimeline.delayNextStep(xn),
            jt.currentTimeline.setStyles([De], null, jt.errors, qe),
            Hn(this, S, jt);
          const sn = jt.timelines.filter(pn => pn.containsAnimation());
          if (sn.length && Ee.size) {
            let pn;
            for (let bn = sn.length - 1; bn >= 0; bn--) {
              const jn = sn[bn];
              if (jn.element === p) {
                pn = jn;
                break;
              }
            }
            pn &&
              !pn.allowOnlyTimelineStyles() &&
              pn.setStyles([Ee], null, jt.errors, qe);
          }
          return sn.length
            ? sn.map(pn => pn.buildKeyframes())
            : [Qi(p, [], [], [], 0, xn, '', !1)];
        }
        visitTrigger(h, p) {}
        visitState(h, p) {}
        visitTransition(h, p) {}
        visitAnimateChild(h, p) {
          const S = p.subInstructions.get(p.element);
          if (S) {
            const V = p.createSubContext(h.options),
              q = p.currentTimeline.currentTime,
              De = this._visitSubInstructions(S, V, V.options);
            q != De && p.transformIntoNewTimeline(De);
          }
          p.previousNode = h;
        }
        visitAnimateRef(h, p) {
          const S = p.createSubContext(h.options);
          S.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [h.options, h.animation.options],
              p,
              S,
            ),
            this.visitReference(h.animation, S),
            p.transformIntoNewTimeline(S.currentTimeline.currentTime),
            (p.previousNode = h);
        }
        _applyAnimationRefDelays(h, p, S) {
          for (const V of h) {
            const q = V?.delay;
            if (q) {
              const De =
                'number' == typeof q ? q : R(Kt(q, V?.params ?? {}, p.errors));
              S.delayNextStep(De);
            }
          }
        }
        _visitSubInstructions(h, p, S) {
          let q = p.currentTimeline.currentTime;
          const De = null != S.duration ? R(S.duration) : null,
            Ee = null != S.delay ? R(S.delay) : null;
          return (
            0 !== De &&
              h.forEach(qe => {
                const ht = p.appendInstructionToTimeline(qe, De, Ee);
                q = Math.max(q, ht.duration + ht.delay);
              }),
            q
          );
        }
        visitReference(h, p) {
          p.updateOptions(h.options, !0),
            Hn(this, h.animation, p),
            (p.previousNode = h);
        }
        visitSequence(h, p) {
          const S = p.subContextCount;
          let V = p;
          const q = h.options;
          if (
            q &&
            (q.params || q.delay) &&
            ((V = p.createSubContext(q)),
            V.transformIntoNewTimeline(),
            null != q.delay)
          ) {
            6 == V.previousNode.type &&
              (V.currentTimeline.snapshotCurrentStyles(),
              (V.previousNode = pr));
            const De = R(q.delay);
            V.delayNextStep(De);
          }
          h.steps.length &&
            (h.steps.forEach(De => Hn(this, De, V)),
            V.currentTimeline.applyStylesToKeyframe(),
            V.subContextCount > S && V.transformIntoNewTimeline()),
            (p.previousNode = h);
        }
        visitGroup(h, p) {
          const S = [];
          let V = p.currentTimeline.currentTime;
          const q = h.options && h.options.delay ? R(h.options.delay) : 0;
          h.steps.forEach(De => {
            const Ee = p.createSubContext(h.options);
            q && Ee.delayNextStep(q),
              Hn(this, De, Ee),
              (V = Math.max(V, Ee.currentTimeline.currentTime)),
              S.push(Ee.currentTimeline);
          }),
            S.forEach(De => p.currentTimeline.mergeTimelineCollectedStyles(De)),
            p.transformIntoNewTimeline(V),
            (p.previousNode = h);
        }
        _visitTiming(h, p) {
          if (h.dynamic) {
            const S = h.strValue;
            return w(p.params ? Kt(S, p.params, p.errors) : S, p.errors);
          }
          return { duration: h.duration, delay: h.delay, easing: h.easing };
        }
        visitAnimate(h, p) {
          const S = (p.currentAnimateTimings = this._visitTiming(h.timings, p)),
            V = p.currentTimeline;
          S.delay && (p.incrementTime(S.delay), V.snapshotCurrentStyles());
          const q = h.style;
          5 == q.type
            ? this.visitKeyframes(q, p)
            : (p.incrementTime(S.duration),
              this.visitStyle(q, p),
              V.applyStylesToKeyframe()),
            (p.currentAnimateTimings = null),
            (p.previousNode = h);
        }
        visitStyle(h, p) {
          const S = p.currentTimeline,
            V = p.currentAnimateTimings;
          !V && S.hasCurrentStyleProperties() && S.forwardFrame();
          const q = (V && V.easing) || h.easing;
          h.isEmptyStep
            ? S.applyEmptyStep(q)
            : S.setStyles(h.styles, q, p.errors, p.options),
            (p.previousNode = h);
        }
        visitKeyframes(h, p) {
          const S = p.currentAnimateTimings,
            V = p.currentTimeline.duration,
            q = S.duration,
            Ee = p.createSubContext().currentTimeline;
          (Ee.easing = S.easing),
            h.styles.forEach(qe => {
              Ee.forwardTime((qe.offset || 0) * q),
                Ee.setStyles(qe.styles, qe.easing, p.errors, p.options),
                Ee.applyStylesToKeyframe();
            }),
            p.currentTimeline.mergeTimelineCollectedStyles(Ee),
            p.transformIntoNewTimeline(V + q),
            (p.previousNode = h);
        }
        visitQuery(h, p) {
          const S = p.currentTimeline.currentTime,
            V = h.options || {},
            q = V.delay ? R(V.delay) : 0;
          q &&
            (6 === p.previousNode.type ||
              (0 == S && p.currentTimeline.hasCurrentStyleProperties())) &&
            (p.currentTimeline.snapshotCurrentStyles(), (p.previousNode = pr));
          let De = S;
          const Ee = p.invokeQuery(
            h.selector,
            h.originalSelector,
            h.limit,
            h.includeSelf,
            !!V.optional,
            p.errors,
          );
          p.currentQueryTotal = Ee.length;
          let qe = null;
          Ee.forEach((ht, Wt) => {
            p.currentQueryIndex = Wt;
            const jt = p.createSubContext(h.options, ht);
            q && jt.delayNextStep(q),
              ht === p.element && (qe = jt.currentTimeline),
              Hn(this, h.animation, jt),
              jt.currentTimeline.applyStylesToKeyframe(),
              (De = Math.max(De, jt.currentTimeline.currentTime));
          }),
            (p.currentQueryIndex = 0),
            (p.currentQueryTotal = 0),
            p.transformIntoNewTimeline(De),
            qe &&
              (p.currentTimeline.mergeTimelineCollectedStyles(qe),
              p.currentTimeline.snapshotCurrentStyles()),
            (p.previousNode = h);
        }
        visitStagger(h, p) {
          const S = p.parentContext,
            V = p.currentTimeline,
            q = h.timings,
            De = Math.abs(q.duration),
            Ee = De * (p.currentQueryTotal - 1);
          let qe = De * p.currentQueryIndex;
          switch (q.duration < 0 ? 'reverse' : q.easing) {
            case 'reverse':
              qe = Ee - qe;
              break;
            case 'full':
              qe = S.currentStaggerTime;
          }
          const Wt = p.currentTimeline;
          qe && Wt.delayNextStep(qe);
          const jt = Wt.currentTime;
          Hn(this, h.animation, p),
            (p.previousNode = h),
            (S.currentStaggerTime =
              V.currentTime - jt + (V.startTime - S.currentTimeline.startTime));
        }
      }
      const pr = {};
      class Xi {
        constructor(h, p, S, V, q, De, Ee, qe) {
          (this._driver = h),
            (this.element = p),
            (this.subInstructions = S),
            (this._enterClassName = V),
            (this._leaveClassName = q),
            (this.errors = De),
            (this.timelines = Ee),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = pr),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = qe || new Fi(this._driver, p, 0)),
            Ee.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(h, p) {
          if (!h) return;
          const S = h;
          let V = this.options;
          null != S.duration && (V.duration = R(S.duration)),
            null != S.delay && (V.delay = R(S.delay));
          const q = S.params;
          if (q) {
            let De = V.params;
            De || (De = this.options.params = {}),
              Object.keys(q).forEach(Ee => {
                (!p || !De.hasOwnProperty(Ee)) &&
                  (De[Ee] = Kt(q[Ee], De, this.errors));
              });
          }
        }
        _copyOptions() {
          const h = {};
          if (this.options) {
            const p = this.options.params;
            if (p) {
              const S = (h.params = {});
              Object.keys(p).forEach(V => {
                S[V] = p[V];
              });
            }
          }
          return h;
        }
        createSubContext(h = null, p, S) {
          const V = p || this.element,
            q = new Xi(
              this._driver,
              V,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(V, S || 0),
            );
          return (
            (q.previousNode = this.previousNode),
            (q.currentAnimateTimings = this.currentAnimateTimings),
            (q.options = this._copyOptions()),
            q.updateOptions(h),
            (q.currentQueryIndex = this.currentQueryIndex),
            (q.currentQueryTotal = this.currentQueryTotal),
            (q.parentContext = this),
            this.subContextCount++,
            q
          );
        }
        transformIntoNewTimeline(h) {
          return (
            (this.previousNode = pr),
            (this.currentTimeline = this.currentTimeline.fork(this.element, h)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(h, p, S) {
          const V = {
              duration: p ?? h.duration,
              delay: this.currentTimeline.currentTime + (S ?? 0) + h.delay,
              easing: '',
            },
            q = new J(
              this._driver,
              h.element,
              h.keyframes,
              h.preStyleProps,
              h.postStyleProps,
              V,
              h.stretchStartingKeyframe,
            );
          return this.timelines.push(q), V;
        }
        incrementTime(h) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + h);
        }
        delayNextStep(h) {
          h > 0 && this.currentTimeline.delayNextStep(h);
        }
        invokeQuery(h, p, S, V, q, De) {
          let Ee = [];
          if ((V && Ee.push(this.element), h.length > 0)) {
            h = (h = h.replace(fr, '.' + this._enterClassName)).replace(
              Mi,
              '.' + this._leaveClassName,
            );
            let ht = this._driver.query(this.element, h, 1 != S);
            0 !== S &&
              (ht =
                S < 0 ? ht.slice(ht.length + S, ht.length) : ht.slice(0, S)),
              Ee.push(...ht);
          }
          return (
            !q &&
              0 == Ee.length &&
              De.push(
                (function Ae(B) {
                  return new x.vHH(3014, !1);
                })(),
              ),
            Ee
          );
        }
      }
      class Fi {
        constructor(h, p, S, V) {
          (this._driver = h),
            (this.element = p),
            (this.startTime = S),
            (this._elementTimelineStylesLookup = V),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(p)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                p,
                this._localTimelineStyles,
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(h) {
          const p = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || p
            ? (this.forwardTime(this.currentTime + h),
              p && this.snapshotCurrentStyles())
            : (this.startTime += h);
        }
        fork(h, p) {
          return (
            this.applyStylesToKeyframe(),
            new Fi(
              this._driver,
              h,
              p || this.currentTime,
              this._elementTimelineStylesLookup,
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(h) {
          this.applyStylesToKeyframe(),
            (this.duration = h),
            this._loadKeyframe();
        }
        _updateStyle(h, p) {
          this._localTimelineStyles.set(h, p),
            this._globalTimelineStyles.set(h, p),
            this._styleSummary.set(h, { time: this.currentTime, value: p });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(h) {
          h && this._previousKeyframe.set('easing', h);
          for (let [p, S] of this._globalTimelineStyles)
            this._backFill.set(p, S || te.l3),
              this._currentKeyframe.set(p, te.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(h, p, S, V) {
          p && this._previousKeyframe.set('easing', p);
          const q = (V && V.params) || {},
            De = (function Se(B, h) {
              const p = new Map();
              let S;
              return (
                B.forEach(V => {
                  if ('*' === V) {
                    S = S || h.keys();
                    for (let q of S) p.set(q, te.l3);
                  } else Nt(V, p);
                }),
                p
              );
            })(h, this._globalTimelineStyles);
          for (let [Ee, qe] of De) {
            const ht = Kt(qe, q, S);
            this._pendingStyles.set(Ee, ht),
              this._localTimelineStyles.has(Ee) ||
                this._backFill.set(
                  Ee,
                  this._globalTimelineStyles.get(Ee) ?? te.l3,
                ),
              this._updateStyle(Ee, ht);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((h, p) => {
              this._currentKeyframe.set(p, h);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((h, p) => {
              this._currentKeyframe.has(p) || this._currentKeyframe.set(p, h);
            }));
        }
        snapshotCurrentStyles() {
          for (let [h, p] of this._localTimelineStyles)
            this._pendingStyles.set(h, p), this._updateStyle(h, p);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const h = [];
          for (let p in this._currentKeyframe) h.push(p);
          return h;
        }
        mergeTimelineCollectedStyles(h) {
          h._styleSummary.forEach((p, S) => {
            const V = this._styleSummary.get(S);
            (!V || p.time > V.time) && this._updateStyle(S, p.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const h = new Set(),
            p = new Set(),
            S = 1 === this._keyframes.size && 0 === this.duration;
          let V = [];
          this._keyframes.forEach((Ee, qe) => {
            const ht = Nt(Ee, new Map(), this._backFill);
            ht.forEach((Wt, jt) => {
              Wt === te.k1 ? h.add(jt) : Wt === te.l3 && p.add(jt);
            }),
              S || ht.set('offset', qe / this.duration),
              V.push(ht);
          });
          const q = h.size ? Cn(h.values()) : [],
            De = p.size ? Cn(p.values()) : [];
          if (S) {
            const Ee = V[0],
              qe = new Map(Ee);
            Ee.set('offset', 0), qe.set('offset', 1), (V = [Ee, qe]);
          }
          return Qi(
            this.element,
            V,
            q,
            De,
            this.duration,
            this.startTime,
            this.easing,
            !1,
          );
        }
      }
      class J extends Fi {
        constructor(h, p, S, V, q, De, Ee = !1) {
          super(h, p, De.delay),
            (this.keyframes = S),
            (this.preStyleProps = V),
            (this.postStyleProps = q),
            (this._stretchStartingKeyframe = Ee),
            (this.timings = {
              duration: De.duration,
              delay: De.delay,
              easing: De.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let h = this.keyframes,
            { delay: p, duration: S, easing: V } = this.timings;
          if (this._stretchStartingKeyframe && p) {
            const q = [],
              De = S + p,
              Ee = p / De,
              qe = Nt(h[0]);
            qe.set('offset', 0), q.push(qe);
            const ht = Nt(h[0]);
            ht.set('offset', We(Ee)), q.push(ht);
            const Wt = h.length - 1;
            for (let jt = 1; jt <= Wt; jt++) {
              let xn = Nt(h[jt]);
              const sn = xn.get('offset');
              xn.set('offset', We((p + sn * S) / De)), q.push(xn);
            }
            (S = De), (p = 0), (V = ''), (h = q);
          }
          return Qi(
            this.element,
            h,
            this.preStyleProps,
            this.postStyleProps,
            S,
            p,
            V,
            !0,
          );
        }
      }
      function We(B, h = 3) {
        const p = Math.pow(10, h - 1);
        return Math.round(B * p) / p;
      }
      class St {}
      const un = new Set([
        'width',
        'height',
        'minWidth',
        'minHeight',
        'maxWidth',
        'maxHeight',
        'left',
        'top',
        'bottom',
        'right',
        'fontSize',
        'outlineWidth',
        'outlineOffset',
        'paddingTop',
        'paddingLeft',
        'paddingBottom',
        'paddingRight',
        'marginTop',
        'marginLeft',
        'marginBottom',
        'marginRight',
        'borderRadius',
        'borderWidth',
        'borderTopWidth',
        'borderLeftWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'textIndent',
        'perspective',
      ]);
      class vn extends St {
        normalizePropertyName(h, p) {
          return Bn(h);
        }
        normalizeStyleValue(h, p, S, V) {
          let q = '';
          const De = S.toString().trim();
          if (un.has(p) && 0 !== S && '0' !== S)
            if ('number' == typeof S) q = 'px';
            else {
              const Ee = S.match(/^[+-]?[\d\.]+([a-z]*)$/);
              Ee &&
                0 == Ee[1].length &&
                V.push(
                  (function He(B, h) {
                    return new x.vHH(3005, !1);
                  })(),
                );
            }
          return De + q;
        }
      }
      function Fn(B, h, p, S, V, q, De, Ee, qe, ht, Wt, jt, xn) {
        return {
          type: 0,
          element: B,
          triggerName: h,
          isRemovalTransition: V,
          fromState: p,
          fromStyles: q,
          toState: S,
          toStyles: De,
          timelines: Ee,
          queriedElements: qe,
          preStyleProps: ht,
          postStyleProps: Wt,
          totalTime: jt,
          errors: xn,
        };
      }
      const qn = {};
      class Tn {
        constructor(h, p, S) {
          (this._triggerName = h), (this.ast = p), (this._stateStyles = S);
        }
        match(h, p, S, V) {
          return (function jr(B, h, p, S, V) {
            return B.some(q => q(h, p, S, V));
          })(this.ast.matchers, h, p, S, V);
        }
        buildStyles(h, p, S) {
          let V = this._stateStyles.get('*');
          return (
            void 0 !== h && (V = this._stateStyles.get(h?.toString()) || V),
            V ? V.buildStyles(p, S) : new Map()
          );
        }
        build(h, p, S, V, q, De, Ee, qe, ht, Wt) {
          const jt = [],
            xn = (this.ast.options && this.ast.options.params) || qn,
            pn = this.buildStyles(S, (Ee && Ee.params) || qn, jt),
            bn = (qe && qe.params) || qn,
            jn = this.buildStyles(V, bn, jt),
            Qn = new Set(),
            Ai = new Map(),
            Ui = new Map(),
            ni = 'void' === V,
            wr = { params: mr(bn, xn), delay: this.ast.options?.delay },
            Gi = Wt
              ? []
              : qi(h, p, this.ast.animation, q, De, pn, jn, wr, ht, jt);
          let y = 0;
          if (
            (Gi.forEach(A => {
              y = Math.max(A.duration + A.delay, y);
            }),
            jt.length)
          )
            return Fn(
              p,
              this._triggerName,
              S,
              V,
              ni,
              pn,
              jn,
              [],
              [],
              Ai,
              Ui,
              y,
              jt,
            );
          Gi.forEach(A => {
            const j = A.element,
              le = dn(Ai, j, new Set());
            A.preStyleProps.forEach(gt => le.add(gt));
            const tt = dn(Ui, j, new Set());
            A.postStyleProps.forEach(gt => tt.add(gt)), j !== p && Qn.add(j);
          });
          const P = Cn(Qn.values());
          return Fn(p, this._triggerName, S, V, ni, pn, jn, Gi, P, Ai, Ui, y);
        }
      }
      function mr(B, h) {
        const p = z(h);
        for (const S in B) B.hasOwnProperty(S) && null != B[S] && (p[S] = B[S]);
        return p;
      }
      class _r {
        constructor(h, p, S) {
          (this.styles = h), (this.defaultParams = p), (this.normalizer = S);
        }
        buildStyles(h, p) {
          const S = new Map(),
            V = z(this.defaultParams);
          return (
            Object.keys(h).forEach(q => {
              const De = h[q];
              null !== De && (V[q] = De);
            }),
            this.styles.styles.forEach(q => {
              'string' != typeof q &&
                q.forEach((De, Ee) => {
                  De && (De = Kt(De, V, p));
                  const qe = this.normalizer.normalizePropertyName(Ee, p);
                  (De = this.normalizer.normalizeStyleValue(Ee, qe, De, p)),
                    S.set(Ee, De);
                });
            }),
            S
          );
        }
      }
      class fo {
        constructor(h, p, S) {
          (this.name = h),
            (this.ast = p),
            (this._normalizer = S),
            (this.transitionFactories = []),
            (this.states = new Map()),
            p.states.forEach(V => {
              this.states.set(
                V.name,
                new _r(V.style, (V.options && V.options.params) || {}, S),
              );
            }),
            ar(this.states, 'true', '1'),
            ar(this.states, 'false', '0'),
            p.transitions.forEach(V => {
              this.transitionFactories.push(new Tn(h, V, this.states));
            }),
            (this.fallbackTransition = (function io(B, h, p) {
              return new Tn(
                B,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(De, Ee) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                h,
              );
            })(h, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(h, p, S, V) {
          return (
            this.transitionFactories.find(De => De.match(h, p, S, V)) || null
          );
        }
        matchStyles(h, p, S) {
          return this.fallbackTransition.buildStyles(h, p, S);
        }
      }
      function ar(B, h, p) {
        B.has(h)
          ? B.has(p) || B.set(p, B.get(h))
          : B.has(p) && B.set(h, B.get(p));
      }
      const po = new Vi();
      class zr {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(h, p) {
          const S = [],
            V = [],
            q = hi(this._driver, p, S, V);
          if (S.length)
            throw (function Ge(B) {
              return new x.vHH(3503, !1);
            })();
          this._animations.set(h, q);
        }
        _buildPlayer(h, p, S) {
          const V = h.element,
            q = Zt(0, this._normalizer, 0, h.keyframes, p, S);
          return this._driver.animate(
            V,
            q,
            h.duration,
            h.delay,
            h.easing,
            [],
            !0,
          );
        }
        create(h, p, S = {}) {
          const V = [],
            q = this._animations.get(h);
          let De;
          const Ee = new Map();
          if (
            (q
              ? ((De = qi(
                  this._driver,
                  p,
                  q,
                  Dn,
                  Te,
                  new Map(),
                  new Map(),
                  S,
                  po,
                  V,
                )),
                De.forEach(Wt => {
                  const jt = dn(Ee, Wt.element, new Map());
                  Wt.postStyleProps.forEach(xn => jt.set(xn, null));
                }))
              : (V.push(
                  (function Ye() {
                    return new x.vHH(3300, !1);
                  })(),
                ),
                (De = [])),
            V.length)
          )
            throw (function xe(B) {
              return new x.vHH(3504, !1);
            })();
          Ee.forEach((Wt, jt) => {
            Wt.forEach((xn, sn) => {
              Wt.set(sn, this._driver.computeStyle(jt, sn, te.l3));
            });
          });
          const ht = ut(
            De.map(Wt => {
              const jt = Ee.get(Wt.element);
              return this._buildPlayer(Wt, new Map(), jt);
            }),
          );
          return (
            this._playersById.set(h, ht),
            ht.onDestroy(() => this.destroy(h)),
            this.players.push(ht),
            ht
          );
        }
        destroy(h) {
          const p = this._getPlayer(h);
          p.destroy(), this._playersById.delete(h);
          const S = this.players.indexOf(p);
          S >= 0 && this.players.splice(S, 1);
        }
        _getPlayer(h) {
          const p = this._playersById.get(h);
          if (!p)
            throw (function je(B) {
              return new x.vHH(3301, !1);
            })();
          return p;
        }
        listen(h, p, S, V) {
          const q = Qt(p, '', '', '');
          return Ct(this._getPlayer(h), S, q, V), () => {};
        }
        command(h, p, S, V) {
          if ('register' == S) return void this.register(h, V[0]);
          if ('create' == S) return void this.create(h, p, V[0] || {});
          const q = this._getPlayer(h);
          switch (S) {
            case 'play':
              q.play();
              break;
            case 'pause':
              q.pause();
              break;
            case 'reset':
              q.reset();
              break;
            case 'restart':
              q.restart();
              break;
            case 'finish':
              q.finish();
              break;
            case 'init':
              q.init();
              break;
            case 'setPosition':
              q.setPosition(parseFloat(V[0]));
              break;
            case 'destroy':
              this.destroy(h);
          }
        }
      }
      const wo = 'ng-animate-queued',
        $r = 'ng-animate-disabled',
        So = [],
        br = {
          namespaceId: '',
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Ji = {
          namespaceId: '',
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        mi = '__ng_removed';
      class Or {
        get params() {
          return this.options.params;
        }
        constructor(h, p = '') {
          this.namespaceId = p;
          const S = h && h.hasOwnProperty('value');
          if (
            ((this.value = (function so(B) {
              return B ?? null;
            })(S ? h.value : h)),
            S)
          ) {
            const q = z(h);
            delete q.value, (this.options = q);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(h) {
          const p = h.params;
          if (p) {
            const S = this.options.params;
            Object.keys(p).forEach(V => {
              null == S[V] && (S[V] = p[V]);
            });
          }
        }
      }
      const yr = 'void',
        go = new Or(yr);
      class Yr {
        constructor(h, p, S) {
          (this.id = h),
            (this.hostElement = p),
            (this._engine = S),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + h),
            ci(p, this._hostClassName);
        }
        listen(h, p, S, V) {
          if (!this._triggers.has(p))
            throw (function ye(B, h) {
              return new x.vHH(3302, !1);
            })();
          if (null == S || 0 == S.length)
            throw (function Re(B) {
              return new x.vHH(3303, !1);
            })();
          if (
            !(function Xn(B) {
              return 'start' == B || 'done' == B;
            })(S)
          )
            throw (function Le(B, h) {
              return new x.vHH(3400, !1);
            })();
          const q = dn(this._elementListeners, h, []),
            De = { name: p, phase: S, callback: V };
          q.push(De);
          const Ee = dn(this._engine.statesByElement, h, new Map());
          return (
            Ee.has(p) || (ci(h, vt), ci(h, vt + '-' + p), Ee.set(p, go)),
            () => {
              this._engine.afterFlush(() => {
                const qe = q.indexOf(De);
                qe >= 0 && q.splice(qe, 1),
                  this._triggers.has(p) || Ee.delete(p);
              });
            }
          );
        }
        register(h, p) {
          return !this._triggers.has(h) && (this._triggers.set(h, p), !0);
        }
        _getTrigger(h) {
          const p = this._triggers.get(h);
          if (!p)
            throw (function a(B) {
              return new x.vHH(3401, !1);
            })();
          return p;
        }
        trigger(h, p, S, V = !0) {
          const q = this._getTrigger(p),
            De = new oo(this.id, p, h);
          let Ee = this._engine.statesByElement.get(h);
          Ee ||
            (ci(h, vt),
            ci(h, vt + '-' + p),
            this._engine.statesByElement.set(h, (Ee = new Map())));
          let qe = Ee.get(p);
          const ht = new Or(S, this.id);
          if (
            (!(S && S.hasOwnProperty('value')) &&
              qe &&
              ht.absorbOptions(qe.options),
            Ee.set(p, ht),
            qe || (qe = go),
            ht.value !== yr && qe.value === ht.value)
          ) {
            if (
              !(function Dr(B, h) {
                const p = Object.keys(B),
                  S = Object.keys(h);
                if (p.length != S.length) return !1;
                for (let V = 0; V < p.length; V++) {
                  const q = p[V];
                  if (!h.hasOwnProperty(q) || B[q] !== h[q]) return !1;
                }
                return !0;
              })(qe.params, ht.params)
            ) {
              const bn = [],
                jn = q.matchStyles(qe.value, qe.params, bn),
                Qn = q.matchStyles(ht.value, ht.params, bn);
              bn.length
                ? this._engine.reportError(bn)
                : this._engine.afterFlush(() => {
                    Ce(h, jn), Oe(h, Qn);
                  });
            }
            return;
          }
          const xn = dn(this._engine.playersByElement, h, []);
          xn.forEach(bn => {
            bn.namespaceId == this.id &&
              bn.triggerName == p &&
              bn.queued &&
              bn.destroy();
          });
          let sn = q.matchTransition(qe.value, ht.value, h, ht.params),
            pn = !1;
          if (!sn) {
            if (!V) return;
            (sn = q.fallbackTransition), (pn = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: h,
              triggerName: p,
              transition: sn,
              fromState: qe,
              toState: ht,
              player: De,
              isFallbackTransition: pn,
            }),
            pn ||
              (ci(h, wo),
              De.onStart(() => {
                si(h, wo);
              })),
            De.onDone(() => {
              let bn = this.players.indexOf(De);
              bn >= 0 && this.players.splice(bn, 1);
              const jn = this._engine.playersByElement.get(h);
              if (jn) {
                let Qn = jn.indexOf(De);
                Qn >= 0 && jn.splice(Qn, 1);
              }
            }),
            this.players.push(De),
            xn.push(De),
            De
          );
        }
        deregister(h) {
          this._triggers.delete(h),
            this._engine.statesByElement.forEach(p => p.delete(h)),
            this._elementListeners.forEach((p, S) => {
              this._elementListeners.set(
                S,
                p.filter(V => V.name != h),
              );
            });
        }
        clearElementCache(h) {
          this._engine.statesByElement.delete(h),
            this._elementListeners.delete(h);
          const p = this._engine.playersByElement.get(h);
          p &&
            (p.forEach(S => S.destroy()),
            this._engine.playersByElement.delete(h));
        }
        _signalRemovalForInnerTriggers(h, p) {
          const S = this._engine.driver.query(h, Je, !0);
          S.forEach(V => {
            if (V[mi]) return;
            const q = this._engine.fetchNamespacesByElement(V);
            q.size
              ? q.forEach(De => De.triggerLeaveAnimation(V, p, !1, !0))
              : this.clearElementCache(V);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              S.forEach(V => this.clearElementCache(V)),
            );
        }
        triggerLeaveAnimation(h, p, S, V) {
          const q = this._engine.statesByElement.get(h),
            De = new Map();
          if (q) {
            const Ee = [];
            if (
              (q.forEach((qe, ht) => {
                if ((De.set(ht, qe.value), this._triggers.has(ht))) {
                  const Wt = this.trigger(h, ht, yr, V);
                  Wt && Ee.push(Wt);
                }
              }),
              Ee.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, h, !0, p, De),
                S && ut(Ee).onDone(() => this._engine.processLeaveNode(h)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(h) {
          const p = this._elementListeners.get(h),
            S = this._engine.statesByElement.get(h);
          if (p && S) {
            const V = new Set();
            p.forEach(q => {
              const De = q.name;
              if (V.has(De)) return;
              V.add(De);
              const qe = this._triggers.get(De).fallbackTransition,
                ht = S.get(De) || go,
                Wt = new Or(yr),
                jt = new oo(this.id, De, h);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: h,
                  triggerName: De,
                  transition: qe,
                  fromState: ht,
                  toState: Wt,
                  player: jt,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(h, p) {
          const S = this._engine;
          if (
            (h.childElementCount && this._signalRemovalForInnerTriggers(h, p),
            this.triggerLeaveAnimation(h, p, !0))
          )
            return;
          let V = !1;
          if (S.totalAnimations) {
            const q = S.players.length ? S.playersByQueriedElement.get(h) : [];
            if (q && q.length) V = !0;
            else {
              let De = h;
              for (; (De = De.parentNode); )
                if (S.statesByElement.get(De)) {
                  V = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(h), V))
            S.markElementAsRemoved(this.id, h, !1, p);
          else {
            const q = h[mi];
            (!q || q === br) &&
              (S.afterFlush(() => this.clearElementCache(h)),
              S.destroyInnerAnimations(h),
              S._onRemovalComplete(h, p));
          }
        }
        insertNode(h, p) {
          ci(h, this._hostClassName);
        }
        drainQueuedTransitions(h) {
          const p = [];
          return (
            this._queue.forEach(S => {
              const V = S.player;
              if (V.destroyed) return;
              const q = S.element,
                De = this._elementListeners.get(q);
              De &&
                De.forEach(Ee => {
                  if (Ee.name == S.triggerName) {
                    const qe = Qt(
                      q,
                      S.triggerName,
                      S.fromState.value,
                      S.toState.value,
                    );
                    (qe._data = h), Ct(S.player, Ee.phase, qe, Ee.callback);
                  }
                }),
                V.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      V.destroy();
                    })
                  : p.push(S);
            }),
            (this._queue = []),
            p.sort((S, V) => {
              const q = S.transition.ast.depCount,
                De = V.transition.ast.depCount;
              return 0 == q || 0 == De
                ? q - De
                : this._engine.driver.containsElement(S.element, V.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(h) {
          this.players.forEach(p => p.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, h);
        }
        elementContainsData(h) {
          let p = !1;
          return (
            this._elementListeners.has(h) && (p = !0),
            (p = !!this._queue.find(S => S.element === h) || p),
            p
          );
        }
      }
      class Rr {
        _onRemovalComplete(h, p) {
          this.onRemovalComplete(h, p);
        }
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this.driver = p),
            (this._normalizer = S),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (V, q) => {});
        }
        get queuedPlayers() {
          const h = [];
          return (
            this._namespaceList.forEach(p => {
              p.players.forEach(S => {
                S.queued && h.push(S);
              });
            }),
            h
          );
        }
        createNamespace(h, p) {
          const S = new Yr(h, p, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, p)
              ? this._balanceNamespaceList(S, p)
              : (this.newHostElements.set(p, S), this.collectEnterElement(p)),
            (this._namespaceLookup[h] = S)
          );
        }
        _balanceNamespaceList(h, p) {
          const S = this._namespaceList,
            V = this.namespacesByHostElement;
          if (S.length - 1 >= 0) {
            let De = !1,
              Ee = this.driver.getParentElement(p);
            for (; Ee; ) {
              const qe = V.get(Ee);
              if (qe) {
                const ht = S.indexOf(qe);
                S.splice(ht + 1, 0, h), (De = !0);
                break;
              }
              Ee = this.driver.getParentElement(Ee);
            }
            De || S.unshift(h);
          } else S.push(h);
          return V.set(p, h), h;
        }
        register(h, p) {
          let S = this._namespaceLookup[h];
          return S || (S = this.createNamespace(h, p)), S;
        }
        registerTrigger(h, p, S) {
          let V = this._namespaceLookup[h];
          V && V.register(p, S) && this.totalAnimations++;
        }
        destroy(h, p) {
          if (!h) return;
          const S = this._fetchNamespace(h);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(S.hostElement),
              delete this._namespaceLookup[h];
            const V = this._namespaceList.indexOf(S);
            V >= 0 && this._namespaceList.splice(V, 1);
          }),
            this.afterFlushAnimationsDone(() => S.destroy(p));
        }
        _fetchNamespace(h) {
          return this._namespaceLookup[h];
        }
        fetchNamespacesByElement(h) {
          const p = new Set(),
            S = this.statesByElement.get(h);
          if (S)
            for (let V of S.values())
              if (V.namespaceId) {
                const q = this._fetchNamespace(V.namespaceId);
                q && p.add(q);
              }
          return p;
        }
        trigger(h, p, S, V) {
          if (Gr(p)) {
            const q = this._fetchNamespace(h);
            if (q) return q.trigger(p, S, V), !0;
          }
          return !1;
        }
        insertNode(h, p, S, V) {
          if (!Gr(p)) return;
          const q = p[mi];
          if (q && q.setForRemoval) {
            (q.setForRemoval = !1), (q.setForMove = !0);
            const De = this.collectedLeaveElements.indexOf(p);
            De >= 0 && this.collectedLeaveElements.splice(De, 1);
          }
          if (h) {
            const De = this._fetchNamespace(h);
            De && De.insertNode(p, S);
          }
          V && this.collectEnterElement(p);
        }
        collectEnterElement(h) {
          this.collectedEnterElements.push(h);
        }
        markElementAsDisabled(h, p) {
          p
            ? this.disabledNodes.has(h) ||
              (this.disabledNodes.add(h), ci(h, $r))
            : this.disabledNodes.has(h) &&
              (this.disabledNodes.delete(h), si(h, $r));
        }
        removeNode(h, p, S, V) {
          if (Gr(p)) {
            const q = h ? this._fetchNamespace(h) : null;
            if (
              (q ? q.removeNode(p, V) : this.markElementAsRemoved(h, p, !1, V),
              S)
            ) {
              const De = this.namespacesByHostElement.get(p);
              De && De.id !== h && De.removeNode(p, V);
            }
          } else this._onRemovalComplete(p, V);
        }
        markElementAsRemoved(h, p, S, V, q) {
          this.collectedLeaveElements.push(p),
            (p[mi] = {
              namespaceId: h,
              setForRemoval: V,
              hasAnimation: S,
              removedBeforeQueried: !1,
              previousTriggersValues: q,
            });
        }
        listen(h, p, S, V, q) {
          return Gr(p) ? this._fetchNamespace(h).listen(p, S, V, q) : () => {};
        }
        _buildInstruction(h, p, S, V, q) {
          return h.transition.build(
            this.driver,
            h.element,
            h.fromState.value,
            h.toState.value,
            S,
            V,
            h.fromState.options,
            h.toState.options,
            p,
            q,
          );
        }
        destroyInnerAnimations(h) {
          let p = this.driver.query(h, Je, !0);
          p.forEach(S => this.destroyActiveAnimationsForElement(S)),
            0 != this.playersByQueriedElement.size &&
              ((p = this.driver.query(h, ke, !0)),
              p.forEach(S => this.finishActiveQueriedAnimationOnElement(S)));
        }
        destroyActiveAnimationsForElement(h) {
          const p = this.playersByElement.get(h);
          p &&
            p.forEach(S => {
              S.queued ? (S.markedForDestroy = !0) : S.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(h) {
          const p = this.playersByQueriedElement.get(h);
          p && p.forEach(S => S.finish());
        }
        whenRenderingDone() {
          return new Promise(h => {
            if (this.players.length) return ut(this.players).onDone(() => h());
            h();
          });
        }
        processLeaveNode(h) {
          const p = h[mi];
          if (p && p.setForRemoval) {
            if (((h[mi] = br), p.namespaceId)) {
              this.destroyInnerAnimations(h);
              const S = this._fetchNamespace(p.namespaceId);
              S && S.clearElementCache(h);
            }
            this._onRemovalComplete(h, p.setForRemoval);
          }
          h.classList?.contains($r) && this.markElementAsDisabled(h, !1),
            this.driver.query(h, '.ng-animate-disabled', !0).forEach(S => {
              this.markElementAsDisabled(S, !1);
            });
        }
        flush(h = -1) {
          let p = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((S, V) =>
                this._balanceNamespaceList(S, V),
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let S = 0; S < this.collectedEnterElements.length; S++)
              ci(this.collectedEnterElements[S], 'ng-star-inserted');
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const S = [];
            try {
              p = this._flushAnimations(S, h);
            } finally {
              for (let V = 0; V < S.length; V++) S[V]();
            }
          } else
            for (let S = 0; S < this.collectedLeaveElements.length; S++)
              this.processLeaveNode(this.collectedLeaveElements[S]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach(S => S()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const S = this._whenQuietFns;
            (this._whenQuietFns = []),
              p.length
                ? ut(p).onDone(() => {
                    S.forEach(V => V());
                  })
                : S.forEach(V => V());
          }
        }
        reportError(h) {
          throw (function ot(B) {
            return new x.vHH(3402, !1);
          })();
        }
        _flushAnimations(h, p) {
          const S = new Vi(),
            V = [],
            q = new Map(),
            De = [],
            Ee = new Map(),
            qe = new Map(),
            ht = new Map(),
            Wt = new Set();
          this.disabledNodes.forEach(Rt => {
            Wt.add(Rt);
            const zt = this.driver.query(Rt, '.ng-animate-queued', !0);
            for (let Ht = 0; Ht < zt.length; Ht++) Wt.add(zt[Ht]);
          });
          const jt = this.bodyNode,
            xn = Array.from(this.statesByElement.keys()),
            sn = li(xn, this.collectedEnterElements),
            pn = new Map();
          let bn = 0;
          sn.forEach((Rt, zt) => {
            const Ht = Dn + bn++;
            pn.set(zt, Ht), Rt.forEach(mn => ci(mn, Ht));
          });
          const jn = [],
            Qn = new Set(),
            Ai = new Set();
          for (let Rt = 0; Rt < this.collectedLeaveElements.length; Rt++) {
            const zt = this.collectedLeaveElements[Rt],
              Ht = zt[mi];
            Ht &&
              Ht.setForRemoval &&
              (jn.push(zt),
              Qn.add(zt),
              Ht.hasAnimation
                ? this.driver
                    .query(zt, '.ng-star-inserted', !0)
                    .forEach(mn => Qn.add(mn))
                : Ai.add(zt));
          }
          const Ui = new Map(),
            ni = li(xn, Array.from(Qn));
          ni.forEach((Rt, zt) => {
            const Ht = Te + bn++;
            Ui.set(zt, Ht), Rt.forEach(mn => ci(mn, Ht));
          }),
            h.push(() => {
              sn.forEach((Rt, zt) => {
                const Ht = pn.get(zt);
                Rt.forEach(mn => si(mn, Ht));
              }),
                ni.forEach((Rt, zt) => {
                  const Ht = Ui.get(zt);
                  Rt.forEach(mn => si(mn, Ht));
                }),
                jn.forEach(Rt => {
                  this.processLeaveNode(Rt);
                });
            });
          const wr = [],
            Gi = [];
          for (let Rt = this._namespaceList.length - 1; Rt >= 0; Rt--)
            this._namespaceList[Rt].drainQueuedTransitions(p).forEach(Ht => {
              const mn = Ht.player,
                gn = Ht.element;
              if ((wr.push(mn), this.collectedEnterElements.length)) {
                const Di = gn[mi];
                if (Di && Di.setForMove) {
                  if (
                    Di.previousTriggersValues &&
                    Di.previousTriggersValues.has(Ht.triggerName)
                  ) {
                    const lr = Di.previousTriggersValues.get(Ht.triggerName),
                      nr = this.statesByElement.get(Ht.element);
                    if (nr && nr.has(Ht.triggerName)) {
                      const bo = nr.get(Ht.triggerName);
                      (bo.value = lr), nr.set(Ht.triggerName, bo);
                    }
                  }
                  return void mn.destroy();
                }
              }
              const $n = !jt || !this.driver.containsElement(jt, gn),
                gi = Ui.get(gn),
                ii = pn.get(gn),
                Nn = this._buildInstruction(Ht, S, ii, gi, $n);
              if (Nn.errors && Nn.errors.length) return void Gi.push(Nn);
              if ($n)
                return (
                  mn.onStart(() => Ce(gn, Nn.fromStyles)),
                  mn.onDestroy(() => Oe(gn, Nn.toStyles)),
                  void V.push(mn)
                );
              if (Ht.isFallbackTransition)
                return (
                  mn.onStart(() => Ce(gn, Nn.fromStyles)),
                  mn.onDestroy(() => Oe(gn, Nn.toStyles)),
                  void V.push(mn)
                );
              const tr = [];
              Nn.timelines.forEach(Di => {
                (Di.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Di.element) || tr.push(Di);
              }),
                (Nn.timelines = tr),
                S.append(gn, Nn.timelines),
                De.push({ instruction: Nn, player: mn, element: gn }),
                Nn.queriedElements.forEach(Di => dn(Ee, Di, []).push(mn)),
                Nn.preStyleProps.forEach((Di, lr) => {
                  if (Di.size) {
                    let nr = qe.get(lr);
                    nr || qe.set(lr, (nr = new Set())),
                      Di.forEach((bo, Cs) => nr.add(Cs));
                  }
                }),
                Nn.postStyleProps.forEach((Di, lr) => {
                  let nr = ht.get(lr);
                  nr || ht.set(lr, (nr = new Set())),
                    Di.forEach((bo, Cs) => nr.add(Cs));
                });
            });
          if (Gi.length) {
            const Rt = [];
            Gi.forEach(zt => {
              Rt.push(
                (function Lt(B, h) {
                  return new x.vHH(3505, !1);
                })(),
              );
            }),
              wr.forEach(zt => zt.destroy()),
              this.reportError(Rt);
          }
          const y = new Map(),
            P = new Map();
          De.forEach(Rt => {
            const zt = Rt.element;
            S.has(zt) &&
              (P.set(zt, zt),
              this._beforeAnimationBuild(
                Rt.player.namespaceId,
                Rt.instruction,
                y,
              ));
          }),
            V.forEach(Rt => {
              const zt = Rt.element;
              this._getPreviousPlayers(
                zt,
                !1,
                Rt.namespaceId,
                Rt.triggerName,
                null,
              ).forEach(mn => {
                dn(y, zt, []).push(mn), mn.destroy();
              });
            });
          const A = jn.filter(Rt => wi(Rt, qe, ht)),
            j = new Map();
          Wr(j, this.driver, Ai, ht, te.l3).forEach(Rt => {
            wi(Rt, qe, ht) && A.push(Rt);
          });
          const tt = new Map();
          sn.forEach((Rt, zt) => {
            Wr(tt, this.driver, new Set(Rt), qe, te.k1);
          }),
            A.forEach(Rt => {
              const zt = j.get(Rt),
                Ht = tt.get(Rt);
              j.set(
                Rt,
                new Map([
                  ...Array.from(zt?.entries() ?? []),
                  ...Array.from(Ht?.entries() ?? []),
                ]),
              );
            });
          const gt = [],
            rn = [],
            zn = {};
          De.forEach(Rt => {
            const { element: zt, player: Ht, instruction: mn } = Rt;
            if (S.has(zt)) {
              if (Wt.has(zt))
                return (
                  Ht.onDestroy(() => Oe(zt, mn.toStyles)),
                  (Ht.disabled = !0),
                  Ht.overrideTotalTime(mn.totalTime),
                  void V.push(Ht)
                );
              let gn = zn;
              if (P.size > 1) {
                let gi = zt;
                const ii = [];
                for (; (gi = gi.parentNode); ) {
                  const Nn = P.get(gi);
                  if (Nn) {
                    gn = Nn;
                    break;
                  }
                  ii.push(gi);
                }
                ii.forEach(Nn => P.set(Nn, gn));
              }
              const $n = this._buildAnimation(Ht.namespaceId, mn, y, q, tt, j);
              if ((Ht.setRealPlayer($n), gn === zn)) gt.push(Ht);
              else {
                const gi = this.playersByElement.get(gn);
                gi && gi.length && (Ht.parentPlayer = ut(gi)), V.push(Ht);
              }
            } else
              Ce(zt, mn.fromStyles),
                Ht.onDestroy(() => Oe(zt, mn.toStyles)),
                rn.push(Ht),
                Wt.has(zt) && V.push(Ht);
          }),
            rn.forEach(Rt => {
              const zt = q.get(Rt.element);
              if (zt && zt.length) {
                const Ht = ut(zt);
                Rt.setRealPlayer(Ht);
              }
            }),
            V.forEach(Rt => {
              Rt.parentPlayer
                ? Rt.syncPlayerEvents(Rt.parentPlayer)
                : Rt.destroy();
            });
          for (let Rt = 0; Rt < jn.length; Rt++) {
            const zt = jn[Rt],
              Ht = zt[mi];
            if ((si(zt, Te), Ht && Ht.hasAnimation)) continue;
            let mn = [];
            if (Ee.size) {
              let $n = Ee.get(zt);
              $n && $n.length && mn.push(...$n);
              let gi = this.driver.query(zt, ke, !0);
              for (let ii = 0; ii < gi.length; ii++) {
                let Nn = Ee.get(gi[ii]);
                Nn && Nn.length && mn.push(...Nn);
              }
            }
            const gn = mn.filter($n => !$n.destroyed);
            gn.length ? vi(this, zt, gn) : this.processLeaveNode(zt);
          }
          return (
            (jn.length = 0),
            gt.forEach(Rt => {
              this.players.push(Rt),
                Rt.onDone(() => {
                  Rt.destroy();
                  const zt = this.players.indexOf(Rt);
                  this.players.splice(zt, 1);
                }),
                Rt.play();
            }),
            gt
          );
        }
        elementContainsData(h, p) {
          let S = !1;
          const V = p[mi];
          return (
            V && V.setForRemoval && (S = !0),
            this.playersByElement.has(p) && (S = !0),
            this.playersByQueriedElement.has(p) && (S = !0),
            this.statesByElement.has(p) && (S = !0),
            this._fetchNamespace(h).elementContainsData(p) || S
          );
        }
        afterFlush(h) {
          this._flushFns.push(h);
        }
        afterFlushAnimationsDone(h) {
          this._whenQuietFns.push(h);
        }
        _getPreviousPlayers(h, p, S, V, q) {
          let De = [];
          if (p) {
            const Ee = this.playersByQueriedElement.get(h);
            Ee && (De = Ee);
          } else {
            const Ee = this.playersByElement.get(h);
            if (Ee) {
              const qe = !q || q == yr;
              Ee.forEach(ht => {
                ht.queued || (!qe && ht.triggerName != V) || De.push(ht);
              });
            }
          }
          return (
            (S || V) &&
              (De = De.filter(
                Ee =>
                  !((S && S != Ee.namespaceId) || (V && V != Ee.triggerName)),
              )),
            De
          );
        }
        _beforeAnimationBuild(h, p, S) {
          const q = p.element,
            De = p.isRemovalTransition ? void 0 : h,
            Ee = p.isRemovalTransition ? void 0 : p.triggerName;
          for (const qe of p.timelines) {
            const ht = qe.element,
              Wt = ht !== q,
              jt = dn(S, ht, []);
            this._getPreviousPlayers(ht, Wt, De, Ee, p.toState).forEach(sn => {
              const pn = sn.getRealPlayer();
              pn.beforeDestroy && pn.beforeDestroy(), sn.destroy(), jt.push(sn);
            });
          }
          Ce(q, p.fromStyles);
        }
        _buildAnimation(h, p, S, V, q, De) {
          const Ee = p.triggerName,
            qe = p.element,
            ht = [],
            Wt = new Set(),
            jt = new Set(),
            xn = p.timelines.map(pn => {
              const bn = pn.element;
              Wt.add(bn);
              const jn = bn[mi];
              if (jn && jn.removedBeforeQueried)
                return new te.ZN(pn.duration, pn.delay);
              const Qn = bn !== qe,
                Ai = (function Kr(B) {
                  const h = [];
                  return Zr(B, h), h;
                })((S.get(bn) || So).map(y => y.getRealPlayer())).filter(
                  y => !!y.element && y.element === bn,
                ),
                Ui = q.get(bn),
                ni = De.get(bn),
                wr = Zt(0, this._normalizer, 0, pn.keyframes, Ui, ni),
                Gi = this._buildPlayer(pn, wr, Ai);
              if ((pn.subTimeline && V && jt.add(bn), Qn)) {
                const y = new oo(h, Ee, bn);
                y.setRealPlayer(Gi), ht.push(y);
              }
              return Gi;
            });
          ht.forEach(pn => {
            dn(this.playersByQueriedElement, pn.element, []).push(pn),
              pn.onDone(() =>
                (function No(B, h, p) {
                  let S = B.get(h);
                  if (S) {
                    if (S.length) {
                      const V = S.indexOf(p);
                      S.splice(V, 1);
                    }
                    0 == S.length && B.delete(h);
                  }
                  return S;
                })(this.playersByQueriedElement, pn.element, pn),
              );
          }),
            Wt.forEach(pn => ci(pn, Et));
          const sn = ut(xn);
          return (
            sn.onDestroy(() => {
              Wt.forEach(pn => si(pn, Et)), Oe(qe, p.toStyles);
            }),
            jt.forEach(pn => {
              dn(V, pn, []).push(sn);
            }),
            sn
          );
        }
        _buildPlayer(h, p, S) {
          return p.length > 0
            ? this.driver.animate(
                h.element,
                p,
                h.duration,
                h.delay,
                h.easing,
                S,
              )
            : new te.ZN(h.duration, h.delay);
        }
      }
      class oo {
        constructor(h, p, S) {
          (this.namespaceId = h),
            (this.triggerName = p),
            (this.element = S),
            (this._player = new te.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(h) {
          this._containsRealPlayer ||
            ((this._player = h),
            this._queuedCallbacks.forEach((p, S) => {
              p.forEach(V => Ct(h, S, void 0, V));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(h.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(h) {
          this.totalTime = h;
        }
        syncPlayerEvents(h) {
          const p = this._player;
          p.triggerCallback && h.onStart(() => p.triggerCallback('start')),
            h.onDone(() => this.finish()),
            h.onDestroy(() => this.destroy());
        }
        _queueEvent(h, p) {
          dn(this._queuedCallbacks, h, []).push(p);
        }
        onDone(h) {
          this.queued && this._queueEvent('done', h), this._player.onDone(h);
        }
        onStart(h) {
          this.queued && this._queueEvent('start', h), this._player.onStart(h);
        }
        onDestroy(h) {
          this.queued && this._queueEvent('destroy', h),
            this._player.onDestroy(h);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(h) {
          this.queued || this._player.setPosition(h);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(h) {
          const p = this._player;
          p.triggerCallback && p.triggerCallback(h);
        }
      }
      function Gr(B) {
        return B && 1 === B.nodeType;
      }
      function Fr(B, h) {
        const p = B.style.display;
        return (B.style.display = h ?? 'none'), p;
      }
      function Wr(B, h, p, S, V) {
        const q = [];
        p.forEach(qe => q.push(Fr(qe)));
        const De = [];
        S.forEach((qe, ht) => {
          const Wt = new Map();
          qe.forEach(jt => {
            const xn = h.computeStyle(ht, jt, V);
            Wt.set(jt, xn),
              (!xn || 0 == xn.length) && ((ht[mi] = Ji), De.push(ht));
          }),
            B.set(ht, Wt);
        });
        let Ee = 0;
        return p.forEach(qe => Fr(qe, q[Ee++])), De;
      }
      function li(B, h) {
        const p = new Map();
        if ((B.forEach(Ee => p.set(Ee, [])), 0 == h.length)) return p;
        const S = 1,
          V = new Set(h),
          q = new Map();
        function De(Ee) {
          if (!Ee) return S;
          let qe = q.get(Ee);
          if (qe) return qe;
          const ht = Ee.parentNode;
          return (
            (qe = p.has(ht) ? ht : V.has(ht) ? S : De(ht)), q.set(Ee, qe), qe
          );
        }
        return (
          h.forEach(Ee => {
            const qe = De(Ee);
            qe !== S && p.get(qe).push(Ee);
          }),
          p
        );
      }
      function ci(B, h) {
        B.classList?.add(h);
      }
      function si(B, h) {
        B.classList?.remove(h);
      }
      function vi(B, h, p) {
        ut(p).onDone(() => B.processLeaveNode(h));
      }
      function Zr(B, h) {
        for (let p = 0; p < B.length; p++) {
          const S = B[p];
          S instanceof te.ZE ? Zr(S.players, h) : h.push(S);
        }
      }
      function wi(B, h, p) {
        const S = p.get(B);
        if (!S) return !1;
        let V = h.get(B);
        return V ? S.forEach(q => V.add(q)) : h.set(B, S), p.delete(B), !0;
      }
      class Cr {
        constructor(h, p, S) {
          (this.bodyNode = h),
            (this._driver = p),
            (this._normalizer = S),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (V, q) => {}),
            (this._transitionEngine = new Rr(h, p, S)),
            (this._timelineEngine = new zr(h, p, S)),
            (this._transitionEngine.onRemovalComplete = (V, q) =>
              this.onRemovalComplete(V, q));
        }
        registerTrigger(h, p, S, V, q) {
          const De = h + '-' + V;
          let Ee = this._triggerCache[De];
          if (!Ee) {
            const qe = [],
              ht = [],
              Wt = hi(this._driver, q, qe, ht);
            if (qe.length)
              throw (function Gt(B, h) {
                return new x.vHH(3404, !1);
              })();
            (Ee = (function ho(B, h, p) {
              return new fo(B, h, p);
            })(V, Wt, this._normalizer)),
              (this._triggerCache[De] = Ee);
          }
          this._transitionEngine.registerTrigger(p, V, Ee);
        }
        register(h, p) {
          this._transitionEngine.register(h, p);
        }
        destroy(h, p) {
          this._transitionEngine.destroy(h, p);
        }
        onInsert(h, p, S, V) {
          this._transitionEngine.insertNode(h, p, S, V);
        }
        onRemove(h, p, S, V) {
          this._transitionEngine.removeNode(h, p, V || !1, S);
        }
        disableAnimations(h, p) {
          this._transitionEngine.markElementAsDisabled(h, p);
        }
        process(h, p, S, V) {
          if ('@' == S.charAt(0)) {
            const [q, De] = wn(S);
            this._timelineEngine.command(q, p, De, V);
          } else this._transitionEngine.trigger(h, p, S, V);
        }
        listen(h, p, S, V, q) {
          if ('@' == S.charAt(0)) {
            const [De, Ee] = wn(S);
            return this._timelineEngine.listen(De, p, Ee, q);
          }
          return this._transitionEngine.listen(h, p, S, V, q);
        }
        flush(h = -1) {
          this._transitionEngine.flush(h);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players,
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let Io = (() => {
        class B {
          constructor(p, S, V) {
            (this._element = p),
              (this._startStyles = S),
              (this._endStyles = V),
              (this._state = 0);
            let q = B.initialStylesByElement.get(p);
            q || B.initialStylesByElement.set(p, (q = new Map())),
              (this._initialStyles = q);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Oe(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Oe(this._element, this._initialStyles),
                this._endStyles &&
                  (Oe(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (B.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Ce(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Ce(this._element, this._endStyles),
                  (this._endStyles = null)),
                Oe(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (B.initialStylesByElement = new WeakMap()), B;
      })();
      function Pi(B) {
        let h = null;
        return (
          B.forEach((p, S) => {
            (function Lr(B) {
              return 'display' === B || 'position' === B;
            })(S) && ((h = h || new Map()), h.set(S, p));
          }),
          h
        );
      }
      class ao {
        constructor(h, p, S, V) {
          (this.element = h),
            (this.keyframes = p),
            (this.options = S),
            (this._specialStyles = V),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = S.duration),
            (this._delay = S.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(h => h()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const h = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            h,
            this.options,
          )),
            (this._finalKeyframe = h.length ? h[h.length - 1] : new Map()),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(h) {
          const p = [];
          return (
            h.forEach(S => {
              p.push(Object.fromEntries(S));
            }),
            p
          );
        }
        _triggerWebAnimation(h, p, S) {
          return h.animate(this._convertKeyframesToObject(p), S);
        }
        onStart(h) {
          this._originalOnStartFns.push(h), this._onStartFns.push(h);
        }
        onDone(h) {
          this._originalOnDoneFns.push(h), this._onDoneFns.push(h);
        }
        onDestroy(h) {
          this._onDestroyFns.push(h);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach(h => h()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach(h => h()),
            (this._onDestroyFns = []));
        }
        setPosition(h) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = h * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const h = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((S, V) => {
              'offset' !== V &&
                h.set(V, this._finished ? S : Ci(this.element, V));
            }),
            (this.currentSnapshot = h);
        }
        triggerCallback(h) {
          const p = 'start' === h ? this._onStartFns : this._onDoneFns;
          p.forEach(S => S()), (p.length = 0);
        }
      }
      class yn {
        validateStyleProperty(h) {
          return !0;
        }
        validateAnimatableStyleProperty(h) {
          return !0;
        }
        matchesElement(h, p) {
          return !1;
        }
        containsElement(h, p) {
          return U(h, p);
        }
        getParentElement(h) {
          return Rn(h);
        }
        query(h, p, S) {
          return Ie(h, p, S);
        }
        computeStyle(h, p, S) {
          return window.getComputedStyle(h)[p];
        }
        animate(h, p, S, V, q, De = []) {
          const qe = {
            duration: S,
            delay: V,
            fill: 0 == V ? 'both' : 'forwards',
          };
          q && (qe.easing = q);
          const ht = new Map(),
            Wt = De.filter(sn => sn instanceof ao);
          (function Ii(B, h) {
            return 0 === B || 0 === h;
          })(S, V) &&
            Wt.forEach(sn => {
              sn.currentSnapshot.forEach((pn, bn) => ht.set(bn, pn));
            });
          let jt = (function Mt(B) {
            return B.length
              ? B[0] instanceof Map
                ? B
                : B.map(h => $e(h))
              : [];
          })(p).map(sn => Nt(sn));
          jt = (function Ln(B, h, p) {
            if (p.size && h.length) {
              let S = h[0],
                V = [];
              if (
                (p.forEach((q, De) => {
                  S.has(De) || V.push(De), S.set(De, q);
                }),
                V.length)
              )
                for (let q = 1; q < h.length; q++) {
                  let De = h[q];
                  V.forEach(Ee => De.set(Ee, Ci(B, Ee)));
                }
            }
            return h;
          })(h, jt, ht);
          const xn = (function Pr(B, h) {
            let p = null,
              S = null;
            return (
              Array.isArray(h) && h.length
                ? ((p = Pi(h[0])), h.length > 1 && (S = Pi(h[h.length - 1])))
                : h instanceof Map && (p = Pi(h)),
              p || S ? new Io(B, p, S) : null
            );
          })(h, jt);
          return new ao(h, jt, qe, xn);
        }
      }
      var xr = D(6895);
      let k = (() => {
        class B extends te._j {
          constructor(p, S) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = p.createRenderer(S.body, {
                id: '0',
                encapsulation: x.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(p) {
            const S = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const V = Array.isArray(p) ? (0, te.vP)(p) : p;
            return (
              G(this._renderer, null, S, 'register', [V]),
              new I(S, this._renderer)
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(xr.K0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class I extends te.LC {
        constructor(h, p) {
          super(), (this._id = h), (this._renderer = p);
        }
        create(h, p) {
          return new M(this._id, h, p || {}, this._renderer);
        }
      }
      class M {
        constructor(h, p, S, V) {
          (this.id = h),
            (this.element = p),
            (this._renderer = V),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', S);
        }
        _listen(h, p) {
          return this._renderer.listen(this.element, `@@${this.id}:${h}`, p);
        }
        _command(h, ...p) {
          return G(this._renderer, this.element, this.id, h, p);
        }
        onDone(h) {
          this._listen('done', h);
        }
        onStart(h) {
          this._listen('start', h);
        }
        onDestroy(h) {
          this._listen('destroy', h);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(h) {
          this._command('setPosition', h);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function G(B, h, p, S, V) {
        return B.setProperty(h, `@@${p}:${S}`, V);
      }
      const nn = '@.disabled';
      let Kn = (() => {
        class B {
          constructor(p, S, V) {
            (this.delegate = p),
              (this.engine = S),
              (this._zone = V),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (S.onRemovalComplete = (q, De) => {
                const Ee = De?.parentNode(q);
                Ee && De.removeChild(Ee, q);
              });
          }
          createRenderer(p, S) {
            const q = this.delegate.createRenderer(p, S);
            if (!(p && S && S.data && S.data.animation)) {
              let Wt = this._rendererCache.get(q);
              return (
                Wt ||
                  ((Wt = new at('', q, this.engine, () =>
                    this._rendererCache.delete(q),
                  )),
                  this._rendererCache.set(q, Wt)),
                Wt
              );
            }
            const De = S.id,
              Ee = S.id + '-' + this._currentId;
            this._currentId++, this.engine.register(Ee, p);
            const qe = Wt => {
              Array.isArray(Wt)
                ? Wt.forEach(qe)
                : this.engine.registerTrigger(De, Ee, p, Wt.name, Wt);
            };
            return (
              S.data.animation.forEach(qe), new Sn(this, Ee, q, this.engine)
            );
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(p, S, V) {
            p >= 0 && p < this._microtaskId
              ? this._zone.run(() => S(V))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach(q => {
                        const [De, Ee] = q;
                        De(Ee);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([S, V]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(x.FYo), x.LFG(Cr), x.LFG(x.R0b));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
          B
        );
      })();
      class at {
        constructor(h, p, S, V) {
          (this.namespaceId = h),
            (this.delegate = p),
            (this.engine = S),
            (this._onDestroy = V),
            (this.destroyNode = this.delegate.destroyNode
              ? q => p.destroyNode(q)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(h, p) {
          return this.delegate.createElement(h, p);
        }
        createComment(h) {
          return this.delegate.createComment(h);
        }
        createText(h) {
          return this.delegate.createText(h);
        }
        appendChild(h, p) {
          this.delegate.appendChild(h, p),
            this.engine.onInsert(this.namespaceId, p, h, !1);
        }
        insertBefore(h, p, S, V = !0) {
          this.delegate.insertBefore(h, p, S),
            this.engine.onInsert(this.namespaceId, p, h, V);
        }
        removeChild(h, p, S) {
          this.engine.onRemove(this.namespaceId, p, this.delegate, S);
        }
        selectRootElement(h, p) {
          return this.delegate.selectRootElement(h, p);
        }
        parentNode(h) {
          return this.delegate.parentNode(h);
        }
        nextSibling(h) {
          return this.delegate.nextSibling(h);
        }
        setAttribute(h, p, S, V) {
          this.delegate.setAttribute(h, p, S, V);
        }
        removeAttribute(h, p, S) {
          this.delegate.removeAttribute(h, p, S);
        }
        addClass(h, p) {
          this.delegate.addClass(h, p);
        }
        removeClass(h, p) {
          this.delegate.removeClass(h, p);
        }
        setStyle(h, p, S, V) {
          this.delegate.setStyle(h, p, S, V);
        }
        removeStyle(h, p, S) {
          this.delegate.removeStyle(h, p, S);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0) && p == nn
            ? this.disableAnimations(h, !!S)
            : this.delegate.setProperty(h, p, S);
        }
        setValue(h, p) {
          this.delegate.setValue(h, p);
        }
        listen(h, p, S) {
          return this.delegate.listen(h, p, S);
        }
        disableAnimations(h, p) {
          this.engine.disableAnimations(h, p);
        }
      }
      class Sn extends at {
        constructor(h, p, S, V, q) {
          super(p, S, V, q), (this.factory = h), (this.namespaceId = p);
        }
        setProperty(h, p, S) {
          '@' == p.charAt(0)
            ? '.' == p.charAt(1) && p == nn
              ? this.disableAnimations(h, (S = void 0 === S || !!S))
              : this.engine.process(this.namespaceId, h, p.slice(1), S)
            : this.delegate.setProperty(h, p, S);
        }
        listen(h, p, S) {
          if ('@' == p.charAt(0)) {
            const V = (function gr(B) {
              switch (B) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return B;
              }
            })(h);
            let q = p.slice(1),
              De = '';
            return (
              '@' != q.charAt(0) &&
                ([q, De] = (function Qr(B) {
                  const h = B.indexOf('.');
                  return [B.substring(0, h), B.slice(h + 1)];
                })(q)),
              this.engine.listen(this.namespaceId, V, q, De, Ee => {
                this.factory.scheduleListenerCallback(Ee._data || -1, S, Ee);
              })
            );
          }
          return this.delegate.listen(h, p, S);
        }
      }
      const yi = [
          { provide: te._j, useClass: k },
          {
            provide: St,
            useFactory: function Bo() {
              return new vn();
            },
          },
          {
            provide: Cr,
            useClass: (() => {
              class B extends Cr {
                constructor(p, S, V, q) {
                  super(p.body, S, V);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (B.ɵfac = function (p) {
                  return new (p || B)(
                    x.LFG(xr.K0),
                    x.LFG(pe),
                    x.LFG(St),
                    x.LFG(x.z2F),
                  );
                }),
                (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac })),
                B
              );
            })(),
          },
          {
            provide: x.FYo,
            useFactory: function bi(B, h, p) {
              return new Kn(B, h, p);
            },
            deps: [s.se, Cr, x.R0b],
          },
        ],
        _o = [
          { provide: pe, useFactory: () => new yn() },
          { provide: x.QbO, useValue: 'BrowserAnimations' },
          ...yi,
        ],
        ko = [
          { provide: pe, useClass: me },
          { provide: x.QbO, useValue: 'NoopAnimations' },
          ...yi,
        ];
      let hs = (() => {
        class B {
          static withConfig(p) {
            return { ngModule: B, providers: p.disableAnimations ? ko : _o };
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ providers: _o, imports: [s.b2] })),
          B
        );
      })();
      var Li = D(8776),
        qr = D(1831),
        Nr = D(568),
        Er = D(4653),
        Xr = D(9549);
      const Br = [
        {
          path: 'auth',
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 568))
              .then(B => B.AuthModule),
        },
        {
          path: 'calendar',
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 4653))
              .then(B => B.CalendarModule),
        },
        { path: '', redirectTo: '/calendar', pathMatch: 'full' },
      ];
      let er = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B })),
          (B.ɵinj = x.cJS({ imports: [N.Bz.forRoot(Br), N.Bz] })),
          B
        );
      })();
      var Vo = D(262);
      let vo = (() => {
        class B {
          constructor(p) {
            this.router = p;
          }
          intercept(p, S) {
            return S.handle(
              p.clone({
                headers: p.headers.set(
                  'x-access-token',
                  localStorage.getItem('token') || '',
                ),
              }),
            ).pipe(
              (0, Vo.K)(q => {
                throw (
                  (401 === q.status && this.router.navigate(['/auth/signin']),
                  q)
                );
              }),
            );
          }
        }
        return (
          (B.ɵfac = function (p) {
            return new (p || B)(x.LFG(N.F0));
          }),
          (B.ɵprov = x.Yz7({ token: B, factory: B.ɵfac, providedIn: 'root' })),
          B
        );
      })();
      var lo = D(529);
      let Mr = (() => {
        class B {}
        return (
          (B.ɵfac = function (p) {
            return new (p || B)();
          }),
          (B.ɵmod = x.oAB({ type: B, bootstrap: [se] })),
          (B.ɵinj = x.cJS({
            providers: [
              { provide: Xr.o2, useValue: { appearance: 'outline' } },
              { provide: lo.TP, useClass: vo, multi: !0 },
            ],
            imports: [
              s.b2,
              hs,
              Li.sQ.forRoot([]),
              qr.Aw.forRoot({}, {}),
              Nr.AuthModule,
              Er.CalendarModule,
              er,
            ],
          })),
          B
        );
      })();
      s.q6()
        .bootstrapModule(Mr)
        .catch(B => console.error(B));
    },
    1135: (Tt, Pe, D) => {
      D.d(Pe, { X: () => x });
      var s = D(7579);
      class x extends s.x {
        constructor(se) {
          super(), (this._value = se);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(se) {
          const te = super._subscribe(se);
          return !te.closed && se.next(this._value), te;
        }
        getValue() {
          const { hasError: se, thrownError: te, _value: ue } = this;
          if (se) throw te;
          return this._throwIfClosed(), ue;
        }
        next(se) {
          super.next((this._value = se));
        }
      }
    },
    9751: (Tt, Pe, D) => {
      D.d(Pe, { y: () => ce });
      var s = D(930),
        x = D(727),
        N = D(8822),
        se = D(9635),
        te = D(2416),
        ue = D(576),
        _e = D(2806);
      let ce = (() => {
        class re {
          constructor(Ue) {
            Ue && (this._subscribe = Ue);
          }
          lift(Ue) {
            const rt = new re();
            return (rt.source = this), (rt.operator = Ue), rt;
          }
          subscribe(Ue, rt, pt) {
            const Ne = (function fe(re) {
              return (
                (re && re instanceof s.Lv) ||
                ((function ae(re) {
                  return (
                    re &&
                    (0, ue.m)(re.next) &&
                    (0, ue.m)(re.error) &&
                    (0, ue.m)(re.complete)
                  );
                })(re) &&
                  (0, x.Nn)(re))
              );
            })(Ue)
              ? Ue
              : new s.Hp(Ue, rt, pt);
            return (
              (0, _e.x)(() => {
                const { operator: ft, source: st } = this;
                Ne.add(
                  ft
                    ? ft.call(Ne, st)
                    : st
                    ? this._subscribe(Ne)
                    : this._trySubscribe(Ne),
                );
              }),
              Ne
            );
          }
          _trySubscribe(Ue) {
            try {
              return this._subscribe(Ue);
            } catch (rt) {
              Ue.error(rt);
            }
          }
          forEach(Ue, rt) {
            return new (rt = he(rt))((pt, Ne) => {
              const ft = new s.Hp({
                next: st => {
                  try {
                    Ue(st);
                  } catch (mt) {
                    Ne(mt), ft.unsubscribe();
                  }
                },
                error: Ne,
                complete: pt,
              });
              this.subscribe(ft);
            });
          }
          _subscribe(Ue) {
            var rt;
            return null === (rt = this.source) || void 0 === rt
              ? void 0
              : rt.subscribe(Ue);
          }
          [N.L]() {
            return this;
          }
          pipe(...Ue) {
            return (0, se.U)(Ue)(this);
          }
          toPromise(Ue) {
            return new (Ue = he(Ue))((rt, pt) => {
              let Ne;
              this.subscribe(
                ft => (Ne = ft),
                ft => pt(ft),
                () => rt(Ne),
              );
            });
          }
        }
        return (re.create = He => new re(He)), re;
      })();
      function he(re) {
        var He;
        return null !== (He = re ?? te.v.Promise) && void 0 !== He
          ? He
          : Promise;
      }
    },
    7579: (Tt, Pe, D) => {
      D.d(Pe, { x: () => _e });
      var s = D(9751),
        x = D(727);
      const se = (0, D(3888).d)(
        he =>
          function () {
            he(this),
              (this.name = 'ObjectUnsubscribedError'),
              (this.message = 'object unsubscribed');
          },
      );
      var te = D(8737),
        ue = D(2806);
      let _e = (() => {
        class he extends s.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(fe) {
            const re = new ce(this, this);
            return (re.operator = fe), re;
          }
          _throwIfClosed() {
            if (this.closed) throw new se();
          }
          next(fe) {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const re of this.currentObservers) re.next(fe);
              }
            });
          }
          error(fe) {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = fe);
                const { observers: re } = this;
                for (; re.length; ) re.shift().error(fe);
              }
            });
          }
          complete() {
            (0, ue.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: fe } = this;
                for (; fe.length; ) fe.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var fe;
            return (
              (null === (fe = this.observers) || void 0 === fe
                ? void 0
                : fe.length) > 0
            );
          }
          _trySubscribe(fe) {
            return this._throwIfClosed(), super._trySubscribe(fe);
          }
          _subscribe(fe) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(fe),
              this._innerSubscribe(fe)
            );
          }
          _innerSubscribe(fe) {
            const { hasError: re, isStopped: He, observers: Ue } = this;
            return re || He
              ? x.Lc
              : ((this.currentObservers = null),
                Ue.push(fe),
                new x.w0(() => {
                  (this.currentObservers = null), (0, te.P)(Ue, fe);
                }));
          }
          _checkFinalizedStatuses(fe) {
            const { hasError: re, thrownError: He, isStopped: Ue } = this;
            re ? fe.error(He) : Ue && fe.complete();
          }
          asObservable() {
            const fe = new s.y();
            return (fe.source = this), fe;
          }
        }
        return (he.create = (ae, fe) => new ce(ae, fe)), he;
      })();
      class ce extends _e {
        constructor(ae, fe) {
          super(), (this.destination = ae), (this.source = fe);
        }
        next(ae) {
          var fe, re;
          null ===
            (re =
              null === (fe = this.destination) || void 0 === fe
                ? void 0
                : fe.next) ||
            void 0 === re ||
            re.call(fe, ae);
        }
        error(ae) {
          var fe, re;
          null ===
            (re =
              null === (fe = this.destination) || void 0 === fe
                ? void 0
                : fe.error) ||
            void 0 === re ||
            re.call(fe, ae);
        }
        complete() {
          var ae, fe;
          null ===
            (fe =
              null === (ae = this.destination) || void 0 === ae
                ? void 0
                : ae.complete) ||
            void 0 === fe ||
            fe.call(ae);
        }
        _subscribe(ae) {
          var fe, re;
          return null !==
            (re =
              null === (fe = this.source) || void 0 === fe
                ? void 0
                : fe.subscribe(ae)) && void 0 !== re
            ? re
            : x.Lc;
        }
      }
    },
    930: (Tt, Pe, D) => {
      D.d(Pe, { Hp: () => pt, Lv: () => re });
      var s = D(576),
        x = D(727),
        N = D(2416),
        se = D(7849),
        te = D(5032);
      const ue = he('C', void 0, void 0);
      function he(K, ie, ee) {
        return { kind: K, value: ie, error: ee };
      }
      var ae = D(3410),
        fe = D(2806);
      class re extends x.w0 {
        constructor(ie) {
          super(),
            (this.isStopped = !1),
            ie
              ? ((this.destination = ie), (0, x.Nn)(ie) && ie.add(this))
              : (this.destination = mt);
        }
        static create(ie, ee, X) {
          return new pt(ie, ee, X);
        }
        next(ie) {
          this.isStopped
            ? st(
                (function ce(K) {
                  return he('N', K, void 0);
                })(ie),
                this,
              )
            : this._next(ie);
        }
        error(ie) {
          this.isStopped
            ? st(
                (function _e(K) {
                  return he('E', void 0, K);
                })(ie),
                this,
              )
            : ((this.isStopped = !0), this._error(ie));
        }
        complete() {
          this.isStopped
            ? st(ue, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(ie) {
          this.destination.next(ie);
        }
        _error(ie) {
          try {
            this.destination.error(ie);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const He = Function.prototype.bind;
      function Ue(K, ie) {
        return He.call(K, ie);
      }
      class rt {
        constructor(ie) {
          this.partialObserver = ie;
        }
        next(ie) {
          const { partialObserver: ee } = this;
          if (ee.next)
            try {
              ee.next(ie);
            } catch (X) {
              Ne(X);
            }
        }
        error(ie) {
          const { partialObserver: ee } = this;
          if (ee.error)
            try {
              ee.error(ie);
            } catch (X) {
              Ne(X);
            }
          else Ne(ie);
        }
        complete() {
          const { partialObserver: ie } = this;
          if (ie.complete)
            try {
              ie.complete();
            } catch (ee) {
              Ne(ee);
            }
        }
      }
      class pt extends re {
        constructor(ie, ee, X) {
          let Ae;
          if ((super(), (0, s.m)(ie) || !ie))
            Ae = {
              next: ie ?? void 0,
              error: ee ?? void 0,
              complete: X ?? void 0,
            };
          else {
            let nt;
            this && N.v.useDeprecatedNextContext
              ? ((nt = Object.create(ie)),
                (nt.unsubscribe = () => this.unsubscribe()),
                (Ae = {
                  next: ie.next && Ue(ie.next, nt),
                  error: ie.error && Ue(ie.error, nt),
                  complete: ie.complete && Ue(ie.complete, nt),
                }))
              : (Ae = ie);
          }
          this.destination = new rt(Ae);
        }
      }
      function Ne(K) {
        N.v.useDeprecatedSynchronousErrorHandling ? (0, fe.O)(K) : (0, se.h)(K);
      }
      function st(K, ie) {
        const { onStoppedNotification: ee } = N.v;
        ee && ae.z.setTimeout(() => ee(K, ie));
      }
      const mt = {
        closed: !0,
        next: te.Z,
        error: function ft(K) {
          throw K;
        },
        complete: te.Z,
      };
    },
    727: (Tt, Pe, D) => {
      D.d(Pe, { Lc: () => ue, w0: () => te, Nn: () => _e });
      var s = D(576);
      const N = (0, D(3888).d)(
        he =>
          function (fe) {
            he(this),
              (this.message = fe
                ? `${fe.length} errors occurred during unsubscription:\n${fe
                    .map((re, He) => `${He + 1}) ${re.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = fe);
          },
      );
      var se = D(8737);
      class te {
        constructor(ae) {
          (this.initialTeardown = ae),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let ae;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: fe } = this;
            if (fe)
              if (((this._parentage = null), Array.isArray(fe)))
                for (const Ue of fe) Ue.remove(this);
              else fe.remove(this);
            const { initialTeardown: re } = this;
            if ((0, s.m)(re))
              try {
                re();
              } catch (Ue) {
                ae = Ue instanceof N ? Ue.errors : [Ue];
              }
            const { _finalizers: He } = this;
            if (He) {
              this._finalizers = null;
              for (const Ue of He)
                try {
                  ce(Ue);
                } catch (rt) {
                  (ae = ae ?? []),
                    rt instanceof N
                      ? (ae = [...ae, ...rt.errors])
                      : ae.push(rt);
                }
            }
            if (ae) throw new N(ae);
          }
        }
        add(ae) {
          var fe;
          if (ae && ae !== this)
            if (this.closed) ce(ae);
            else {
              if (ae instanceof te) {
                if (ae.closed || ae._hasParent(this)) return;
                ae._addParent(this);
              }
              (this._finalizers =
                null !== (fe = this._finalizers) && void 0 !== fe
                  ? fe
                  : []).push(ae);
            }
        }
        _hasParent(ae) {
          const { _parentage: fe } = this;
          return fe === ae || (Array.isArray(fe) && fe.includes(ae));
        }
        _addParent(ae) {
          const { _parentage: fe } = this;
          this._parentage = Array.isArray(fe)
            ? (fe.push(ae), fe)
            : fe
            ? [fe, ae]
            : ae;
        }
        _removeParent(ae) {
          const { _parentage: fe } = this;
          fe === ae
            ? (this._parentage = null)
            : Array.isArray(fe) && (0, se.P)(fe, ae);
        }
        remove(ae) {
          const { _finalizers: fe } = this;
          fe && (0, se.P)(fe, ae), ae instanceof te && ae._removeParent(this);
        }
      }
      te.EMPTY = (() => {
        const he = new te();
        return (he.closed = !0), he;
      })();
      const ue = te.EMPTY;
      function _e(he) {
        return (
          he instanceof te ||
          (he &&
            'closed' in he &&
            (0, s.m)(he.remove) &&
            (0, s.m)(he.add) &&
            (0, s.m)(he.unsubscribe))
        );
      }
      function ce(he) {
        (0, s.m)(he) ? he() : he.unsubscribe();
      }
    },
    2416: (Tt, Pe, D) => {
      D.d(Pe, { v: () => s });
      const s = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    9841: (Tt, Pe, D) => {
      D.d(Pe, { a: () => ae });
      var s = D(9751),
        x = D(4742),
        N = D(457),
        se = D(4671),
        te = D(3268),
        ue = D(3269),
        _e = D(1810),
        ce = D(5403),
        he = D(9672);
      function ae(...He) {
        const Ue = (0, ue.yG)(He),
          rt = (0, ue.jO)(He),
          { args: pt, keys: Ne } = (0, x.D)(He);
        if (0 === pt.length) return (0, N.D)([], Ue);
        const ft = new s.y(
          (function fe(He, Ue, rt = se.y) {
            return pt => {
              re(
                Ue,
                () => {
                  const { length: Ne } = He,
                    ft = new Array(Ne);
                  let st = Ne,
                    mt = Ne;
                  for (let K = 0; K < Ne; K++)
                    re(
                      Ue,
                      () => {
                        const ie = (0, N.D)(He[K], Ue);
                        let ee = !1;
                        ie.subscribe(
                          (0, ce.x)(
                            pt,
                            X => {
                              (ft[K] = X),
                                ee || ((ee = !0), mt--),
                                mt || pt.next(rt(ft.slice()));
                            },
                            () => {
                              --st || pt.complete();
                            },
                          ),
                        );
                      },
                      pt,
                    );
                },
                pt,
              );
            };
          })(pt, Ue, Ne ? st => (0, _e.n)(Ne, st) : se.y),
        );
        return rt ? ft.pipe((0, te.Z)(rt)) : ft;
      }
      function re(He, Ue, rt) {
        He ? (0, he.f)(rt, He, Ue) : Ue();
      }
    },
    7272: (Tt, Pe, D) => {
      D.d(Pe, { z: () => te });
      var s = D(8189),
        N = D(3269),
        se = D(457);
      function te(...ue) {
        return (function x() {
          return (0, s.J)(1);
        })()((0, se.D)(ue, (0, N.yG)(ue)));
      }
    },
    9770: (Tt, Pe, D) => {
      D.d(Pe, { P: () => N });
      var s = D(9751),
        x = D(8421);
      function N(se) {
        return new s.y(te => {
          (0, x.Xf)(se()).subscribe(te);
        });
      }
    },
    515: (Tt, Pe, D) => {
      D.d(Pe, { E: () => x });
      const x = new (D(9751).y)(te => te.complete());
    },
    4128: (Tt, Pe, D) => {
      D.d(Pe, { D: () => ce });
      var s = D(9751),
        x = D(4742),
        N = D(8421),
        se = D(3269),
        te = D(5403),
        ue = D(3268),
        _e = D(1810);
      function ce(...he) {
        const ae = (0, se.jO)(he),
          { args: fe, keys: re } = (0, x.D)(he),
          He = new s.y(Ue => {
            const { length: rt } = fe;
            if (!rt) return void Ue.complete();
            const pt = new Array(rt);
            let Ne = rt,
              ft = rt;
            for (let st = 0; st < rt; st++) {
              let mt = !1;
              (0, N.Xf)(fe[st]).subscribe(
                (0, te.x)(
                  Ue,
                  K => {
                    mt || ((mt = !0), ft--), (pt[st] = K);
                  },
                  () => Ne--,
                  void 0,
                  () => {
                    (!Ne || !mt) &&
                      (ft || Ue.next(re ? (0, _e.n)(re, pt) : pt),
                      Ue.complete());
                  },
                ),
              );
            }
          });
        return ae ? He.pipe((0, ue.Z)(ae)) : He;
      }
    },
    457: (Tt, Pe, D) => {
      D.d(Pe, { D: () => ee });
      var s = D(8421),
        x = D(5363),
        N = D(4482);
      function se(X, Ae = 0) {
        return (0, N.e)((nt, dt) => {
          dt.add(X.schedule(() => nt.subscribe(dt), Ae));
        });
      }
      var _e = D(9751),
        he = D(2202),
        ae = D(576),
        fe = D(9672);
      function He(X, Ae) {
        if (!X) throw new Error('Iterable cannot be null');
        return new _e.y(nt => {
          (0, fe.f)(nt, Ae, () => {
            const dt = X[Symbol.asyncIterator]();
            (0, fe.f)(
              nt,
              Ae,
              () => {
                dt.next().then(At => {
                  At.done ? nt.complete() : nt.next(At.value);
                });
              },
              0,
              !0,
            );
          });
        });
      }
      var Ue = D(3670),
        rt = D(8239),
        pt = D(1144),
        Ne = D(6495),
        ft = D(2206),
        st = D(4532),
        mt = D(3260);
      function ee(X, Ae) {
        return Ae
          ? (function ie(X, Ae) {
              if (null != X) {
                if ((0, Ue.c)(X))
                  return (function te(X, Ae) {
                    return (0, s.Xf)(X).pipe(se(Ae), (0, x.Q)(Ae));
                  })(X, Ae);
                if ((0, pt.z)(X))
                  return (function ce(X, Ae) {
                    return new _e.y(nt => {
                      let dt = 0;
                      return Ae.schedule(function () {
                        dt === X.length
                          ? nt.complete()
                          : (nt.next(X[dt++]), nt.closed || this.schedule());
                      });
                    });
                  })(X, Ae);
                if ((0, rt.t)(X))
                  return (function ue(X, Ae) {
                    return (0, s.Xf)(X).pipe(se(Ae), (0, x.Q)(Ae));
                  })(X, Ae);
                if ((0, ft.D)(X)) return He(X, Ae);
                if ((0, Ne.T)(X))
                  return (function re(X, Ae) {
                    return new _e.y(nt => {
                      let dt;
                      return (
                        (0, fe.f)(nt, Ae, () => {
                          (dt = X[he.h]()),
                            (0, fe.f)(
                              nt,
                              Ae,
                              () => {
                                let At, _t;
                                try {
                                  ({ value: At, done: _t } = dt.next());
                                } catch (Gt) {
                                  return void nt.error(Gt);
                                }
                                _t ? nt.complete() : nt.next(At);
                              },
                              0,
                              !0,
                            );
                        }),
                        () => (0, ae.m)(dt?.return) && dt.return()
                      );
                    });
                  })(X, Ae);
                if ((0, mt.L)(X))
                  return (function K(X, Ae) {
                    return He((0, mt.Q)(X), Ae);
                  })(X, Ae);
              }
              throw (0, st.z)(X);
            })(X, Ae)
          : (0, s.Xf)(X);
      }
    },
    8421: (Tt, Pe, D) => {
      D.d(Pe, { Xf: () => He });
      var s = D(655),
        x = D(1144),
        N = D(8239),
        se = D(9751),
        te = D(3670),
        ue = D(2206),
        _e = D(4532),
        ce = D(6495),
        he = D(3260),
        ae = D(576),
        fe = D(7849),
        re = D(8822);
      function He(K) {
        if (K instanceof se.y) return K;
        if (null != K) {
          if ((0, te.c)(K))
            return (function Ue(K) {
              return new se.y(ie => {
                const ee = K[re.L]();
                if ((0, ae.m)(ee.subscribe)) return ee.subscribe(ie);
                throw new TypeError(
                  'Provided object does not correctly implement Symbol.observable',
                );
              });
            })(K);
          if ((0, x.z)(K))
            return (function rt(K) {
              return new se.y(ie => {
                for (let ee = 0; ee < K.length && !ie.closed; ee++)
                  ie.next(K[ee]);
                ie.complete();
              });
            })(K);
          if ((0, N.t)(K))
            return (function pt(K) {
              return new se.y(ie => {
                K.then(
                  ee => {
                    ie.closed || (ie.next(ee), ie.complete());
                  },
                  ee => ie.error(ee),
                ).then(null, fe.h);
              });
            })(K);
          if ((0, ue.D)(K)) return ft(K);
          if ((0, ce.T)(K))
            return (function Ne(K) {
              return new se.y(ie => {
                for (const ee of K) if ((ie.next(ee), ie.closed)) return;
                ie.complete();
              });
            })(K);
          if ((0, he.L)(K))
            return (function st(K) {
              return ft((0, he.Q)(K));
            })(K);
        }
        throw (0, _e.z)(K);
      }
      function ft(K) {
        return new se.y(ie => {
          (function mt(K, ie) {
            var ee, X, Ae, nt;
            return (0, s.mG)(this, void 0, void 0, function* () {
              try {
                for (ee = (0, s.KL)(K); !(X = yield ee.next()).done; )
                  if ((ie.next(X.value), ie.closed)) return;
              } catch (dt) {
                Ae = { error: dt };
              } finally {
                try {
                  X && !X.done && (nt = ee.return) && (yield nt.call(ee));
                } finally {
                  if (Ae) throw Ae.error;
                }
              }
              ie.complete();
            });
          })(K, ie).catch(ee => ie.error(ee));
        });
      }
    },
    6451: (Tt, Pe, D) => {
      D.d(Pe, { T: () => ue });
      var s = D(8189),
        x = D(8421),
        N = D(515),
        se = D(3269),
        te = D(457);
      function ue(..._e) {
        const ce = (0, se.yG)(_e),
          he = (0, se._6)(_e, 1 / 0),
          ae = _e;
        return ae.length
          ? 1 === ae.length
            ? (0, x.Xf)(ae[0])
            : (0, s.J)(he)((0, te.D)(ae, ce))
          : N.E;
      }
    },
    9646: (Tt, Pe, D) => {
      D.d(Pe, { of: () => N });
      var s = D(3269),
        x = D(457);
      function N(...se) {
        const te = (0, s.yG)(se);
        return (0, x.D)(se, te);
      }
    },
    2843: (Tt, Pe, D) => {
      D.d(Pe, { _: () => N });
      var s = D(9751),
        x = D(576);
      function N(se, te) {
        const ue = (0, x.m)(se) ? se : () => se,
          _e = ce => ce.error(ue());
        return new s.y(te ? ce => te.schedule(_e, 0, ce) : _e);
      }
    },
    5963: (Tt, Pe, D) => {
      D.d(Pe, { H: () => te });
      var s = D(9751),
        x = D(4986),
        N = D(3532);
      function te(ue = 0, _e, ce = x.P) {
        let he = -1;
        return (
          null != _e && ((0, N.K)(_e) ? (ce = _e) : (he = _e)),
          new s.y(ae => {
            let fe = (function se(ue) {
              return ue instanceof Date && !isNaN(ue);
            })(ue)
              ? +ue - ce.now()
              : ue;
            fe < 0 && (fe = 0);
            let re = 0;
            return ce.schedule(function () {
              ae.closed ||
                (ae.next(re++),
                0 <= he ? this.schedule(void 0, he) : ae.complete());
            }, fe);
          })
        );
      }
    },
    5403: (Tt, Pe, D) => {
      D.d(Pe, { Q: () => N, x: () => x });
      var s = D(930);
      function x(se, te, ue, _e, ce) {
        return new N(se, te, ue, _e, ce);
      }
      class N extends s.Lv {
        constructor(te, ue, _e, ce, he, ae) {
          super(te),
            (this.onFinalize = he),
            (this.shouldUnsubscribe = ae),
            (this._next = ue
              ? function (fe) {
                  try {
                    ue(fe);
                  } catch (re) {
                    te.error(re);
                  }
                }
              : super._next),
            (this._error = ce
              ? function (fe) {
                  try {
                    ce(fe);
                  } catch (re) {
                    te.error(re);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = _e
              ? function () {
                  try {
                    _e();
                  } catch (fe) {
                    te.error(fe);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var te;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: ue } = this;
            super.unsubscribe(),
              !ue &&
                (null === (te = this.onFinalize) ||
                  void 0 === te ||
                  te.call(this));
          }
        }
      }
    },
    262: (Tt, Pe, D) => {
      D.d(Pe, { K: () => se });
      var s = D(8421),
        x = D(5403),
        N = D(4482);
      function se(te) {
        return (0, N.e)((ue, _e) => {
          let ae,
            ce = null,
            he = !1;
          (ce = ue.subscribe(
            (0, x.x)(_e, void 0, void 0, fe => {
              (ae = (0, s.Xf)(te(fe, se(te)(ue)))),
                ce
                  ? (ce.unsubscribe(), (ce = null), ae.subscribe(_e))
                  : (he = !0);
            }),
          )),
            he && (ce.unsubscribe(), (ce = null), ae.subscribe(_e));
        });
      }
    },
    4351: (Tt, Pe, D) => {
      D.d(Pe, { b: () => N });
      var s = D(5577),
        x = D(576);
      function N(se, te) {
        return (0, x.m)(te) ? (0, s.z)(se, te, 1) : (0, s.z)(se, 1);
      }
    },
    8372: (Tt, Pe, D) => {
      D.d(Pe, { b: () => se });
      var s = D(4986),
        x = D(4482),
        N = D(5403);
      function se(te, ue = s.z) {
        return (0, x.e)((_e, ce) => {
          let he = null,
            ae = null,
            fe = null;
          const re = () => {
            if (he) {
              he.unsubscribe(), (he = null);
              const Ue = ae;
              (ae = null), ce.next(Ue);
            }
          };
          function He() {
            const Ue = fe + te,
              rt = ue.now();
            if (rt < Ue)
              return (he = this.schedule(void 0, Ue - rt)), void ce.add(he);
            re();
          }
          _e.subscribe(
            (0, N.x)(
              ce,
              Ue => {
                (ae = Ue),
                  (fe = ue.now()),
                  he || ((he = ue.schedule(He, te)), ce.add(he));
              },
              () => {
                re(), ce.complete();
              },
              void 0,
              () => {
                ae = he = null;
              },
            ),
          );
        });
      }
    },
    1884: (Tt, Pe, D) => {
      D.d(Pe, { x: () => se });
      var s = D(4671),
        x = D(4482),
        N = D(5403);
      function se(ue, _e = s.y) {
        return (
          (ue = ue ?? te),
          (0, x.e)((ce, he) => {
            let ae,
              fe = !0;
            ce.subscribe(
              (0, N.x)(he, re => {
                const He = _e(re);
                (fe || !ue(ae, He)) && ((fe = !1), (ae = He), he.next(re));
              }),
            );
          })
        );
      }
      function te(ue, _e) {
        return ue === _e;
      }
    },
    6129: (Tt, Pe, D) => {
      D.d(Pe, { z: () => te });
      var s = D(4004),
        x = D(8421),
        N = D(4482),
        se = D(5403);
      function te(ue, _e) {
        return _e
          ? ce =>
              ce.pipe(
                te((he, ae) =>
                  (0, x.Xf)(ue(he, ae)).pipe(
                    (0, s.U)((fe, re) => _e(he, fe, ae, re)),
                  ),
                ),
              )
          : (0, N.e)((ce, he) => {
              let ae = 0,
                fe = null,
                re = !1;
              ce.subscribe(
                (0, se.x)(
                  he,
                  He => {
                    fe ||
                      ((fe = (0, se.x)(he, void 0, () => {
                        (fe = null), re && he.complete();
                      })),
                      (0, x.Xf)(ue(He, ae++)).subscribe(fe));
                  },
                  () => {
                    (re = !0), !fe && he.complete();
                  },
                ),
              );
            });
      }
    },
    9300: (Tt, Pe, D) => {
      D.d(Pe, { h: () => N });
      var s = D(4482),
        x = D(5403);
      function N(se, te) {
        return (0, s.e)((ue, _e) => {
          let ce = 0;
          ue.subscribe(
            (0, x.x)(_e, he => se.call(te, he, ce++) && _e.next(he)),
          );
        });
      }
    },
    8746: (Tt, Pe, D) => {
      D.d(Pe, { x: () => x });
      var s = D(4482);
      function x(N) {
        return (0, s.e)((se, te) => {
          try {
            se.subscribe(te);
          } finally {
            te.add(N);
          }
        });
      }
    },
    8502: (Tt, Pe, D) => {
      D.d(Pe, { l: () => se });
      var s = D(4482),
        x = D(5403),
        N = D(5032);
      function se() {
        return (0, s.e)((te, ue) => {
          te.subscribe((0, x.x)(ue, N.Z));
        });
      }
    },
    4004: (Tt, Pe, D) => {
      D.d(Pe, { U: () => N });
      var s = D(4482),
        x = D(5403);
      function N(se, te) {
        return (0, s.e)((ue, _e) => {
          let ce = 0;
          ue.subscribe(
            (0, x.x)(_e, he => {
              _e.next(se.call(te, he, ce++));
            }),
          );
        });
      }
    },
    9718: (Tt, Pe, D) => {
      D.d(Pe, { h: () => x });
      var s = D(4004);
      function x(N) {
        return (0, s.U)(() => N);
      }
    },
    8189: (Tt, Pe, D) => {
      D.d(Pe, { J: () => N });
      var s = D(5577),
        x = D(4671);
      function N(se = 1 / 0) {
        return (0, s.z)(x.y, se);
      }
    },
    5577: (Tt, Pe, D) => {
      D.d(Pe, { z: () => ce });
      var s = D(4004),
        x = D(8421),
        N = D(4482),
        se = D(9672),
        te = D(5403),
        _e = D(576);
      function ce(he, ae, fe = 1 / 0) {
        return (0, _e.m)(ae)
          ? ce(
              (re, He) =>
                (0, s.U)((Ue, rt) => ae(re, Ue, He, rt))((0, x.Xf)(he(re, He))),
              fe,
            )
          : ('number' == typeof ae && (fe = ae),
            (0, N.e)((re, He) =>
              (function ue(he, ae, fe, re, He, Ue, rt, pt) {
                const Ne = [];
                let ft = 0,
                  st = 0,
                  mt = !1;
                const K = () => {
                    mt && !Ne.length && !ft && ae.complete();
                  },
                  ie = X => (ft < re ? ee(X) : Ne.push(X)),
                  ee = X => {
                    Ue && ae.next(X), ft++;
                    let Ae = !1;
                    (0, x.Xf)(fe(X, st++)).subscribe(
                      (0, te.x)(
                        ae,
                        nt => {
                          He?.(nt), Ue ? ie(nt) : ae.next(nt);
                        },
                        () => {
                          Ae = !0;
                        },
                        void 0,
                        () => {
                          if (Ae)
                            try {
                              for (ft--; Ne.length && ft < re; ) {
                                const nt = Ne.shift();
                                rt ? (0, se.f)(ae, rt, () => ee(nt)) : ee(nt);
                              }
                              K();
                            } catch (nt) {
                              ae.error(nt);
                            }
                        },
                      ),
                    );
                  };
                return (
                  he.subscribe(
                    (0, te.x)(ae, ie, () => {
                      (mt = !0), K();
                    }),
                  ),
                  () => {
                    pt?.();
                  }
                );
              })(re, He, he, fe),
            ));
      }
    },
    5363: (Tt, Pe, D) => {
      D.d(Pe, { Q: () => se });
      var s = D(9672),
        x = D(4482),
        N = D(5403);
      function se(te, ue = 0) {
        return (0, x.e)((_e, ce) => {
          _e.subscribe(
            (0, N.x)(
              ce,
              he => (0, s.f)(ce, te, () => ce.next(he), ue),
              () => (0, s.f)(ce, te, () => ce.complete(), ue),
              he => (0, s.f)(ce, te, () => ce.error(he), ue),
            ),
          );
        });
      }
    },
    5026: (Tt, Pe, D) => {
      D.d(Pe, { R: () => se });
      var s = D(4482),
        x = D(5403);
      function se(te, ue) {
        return (0, s.e)(
          (function N(te, ue, _e, ce, he) {
            return (ae, fe) => {
              let re = _e,
                He = ue,
                Ue = 0;
              ae.subscribe(
                (0, x.x)(
                  fe,
                  rt => {
                    const pt = Ue++;
                    (He = re ? te(He, rt, pt) : ((re = !0), rt)),
                      ce && fe.next(He);
                  },
                  he &&
                    (() => {
                      re && fe.next(He), fe.complete();
                    }),
                ),
              );
            };
          })(te, ue, arguments.length >= 2, !0),
        );
      }
    },
    3099: (Tt, Pe, D) => {
      D.d(Pe, { B: () => te });
      var s = D(8421),
        x = D(7579),
        N = D(930),
        se = D(4482);
      function te(_e = {}) {
        const {
          connector: ce = () => new x.x(),
          resetOnError: he = !0,
          resetOnComplete: ae = !0,
          resetOnRefCountZero: fe = !0,
        } = _e;
        return re => {
          let He,
            Ue,
            rt,
            pt = 0,
            Ne = !1,
            ft = !1;
          const st = () => {
              Ue?.unsubscribe(), (Ue = void 0);
            },
            mt = () => {
              st(), (He = rt = void 0), (Ne = ft = !1);
            },
            K = () => {
              const ie = He;
              mt(), ie?.unsubscribe();
            };
          return (0, se.e)((ie, ee) => {
            pt++, !ft && !Ne && st();
            const X = (rt = rt ?? ce());
            ee.add(() => {
              pt--, 0 === pt && !ft && !Ne && (Ue = ue(K, fe));
            }),
              X.subscribe(ee),
              !He &&
                pt > 0 &&
                ((He = new N.Hp({
                  next: Ae => X.next(Ae),
                  error: Ae => {
                    (ft = !0), st(), (Ue = ue(mt, he, Ae)), X.error(Ae);
                  },
                  complete: () => {
                    (Ne = !0), st(), (Ue = ue(mt, ae)), X.complete();
                  },
                })),
                (0, s.Xf)(ie).subscribe(He));
          })(re);
        };
      }
      function ue(_e, ce, ...he) {
        if (!0 === ce) return void _e();
        if (!1 === ce) return;
        const ae = new N.Hp({
          next: () => {
            ae.unsubscribe(), _e();
          },
        });
        return (0, s.Xf)(ce(...he)).subscribe(ae);
      }
    },
    5684: (Tt, Pe, D) => {
      D.d(Pe, { T: () => x });
      var s = D(9300);
      function x(N) {
        return (0, s.h)((se, te) => N <= te);
      }
    },
    8675: (Tt, Pe, D) => {
      D.d(Pe, { O: () => se });
      var s = D(7272),
        x = D(3269),
        N = D(4482);
      function se(...te) {
        const ue = (0, x.yG)(te);
        return (0, N.e)((_e, ce) => {
          (ue ? (0, s.z)(te, _e, ue) : (0, s.z)(te, _e)).subscribe(ce);
        });
      }
    },
    3900: (Tt, Pe, D) => {
      D.d(Pe, { w: () => se });
      var s = D(8421),
        x = D(4482),
        N = D(5403);
      function se(te, ue) {
        return (0, x.e)((_e, ce) => {
          let he = null,
            ae = 0,
            fe = !1;
          const re = () => fe && !he && ce.complete();
          _e.subscribe(
            (0, N.x)(
              ce,
              He => {
                he?.unsubscribe();
                let Ue = 0;
                const rt = ae++;
                (0, s.Xf)(te(He, rt)).subscribe(
                  (he = (0, N.x)(
                    ce,
                    pt => ce.next(ue ? ue(He, pt, rt, Ue++) : pt),
                    () => {
                      (he = null), re();
                    },
                  )),
                );
              },
              () => {
                (fe = !0), re();
              },
            ),
          );
        });
      }
    },
    5698: (Tt, Pe, D) => {
      D.d(Pe, { q: () => se });
      var s = D(515),
        x = D(4482),
        N = D(5403);
      function se(te) {
        return te <= 0
          ? () => s.E
          : (0, x.e)((ue, _e) => {
              let ce = 0;
              ue.subscribe(
                (0, N.x)(_e, he => {
                  ++ce <= te && (_e.next(he), te <= ce && _e.complete());
                }),
              );
            });
      }
    },
    2722: (Tt, Pe, D) => {
      D.d(Pe, { R: () => te });
      var s = D(4482),
        x = D(5403),
        N = D(8421),
        se = D(5032);
      function te(ue) {
        return (0, s.e)((_e, ce) => {
          (0, N.Xf)(ue).subscribe((0, x.x)(ce, () => ce.complete(), se.Z)),
            !ce.closed && _e.subscribe(ce);
        });
      }
    },
    2529: (Tt, Pe, D) => {
      D.d(Pe, { o: () => N });
      var s = D(4482),
        x = D(5403);
      function N(se, te = !1) {
        return (0, s.e)((ue, _e) => {
          let ce = 0;
          ue.subscribe(
            (0, x.x)(_e, he => {
              const ae = se(he, ce++);
              (ae || te) && _e.next(he), !ae && _e.complete();
            }),
          );
        });
      }
    },
    8505: (Tt, Pe, D) => {
      D.d(Pe, { b: () => te });
      var s = D(576),
        x = D(4482),
        N = D(5403),
        se = D(4671);
      function te(ue, _e, ce) {
        const he =
          (0, s.m)(ue) || _e || ce ? { next: ue, error: _e, complete: ce } : ue;
        return he
          ? (0, x.e)((ae, fe) => {
              var re;
              null === (re = he.subscribe) || void 0 === re || re.call(he);
              let He = !0;
              ae.subscribe(
                (0, N.x)(
                  fe,
                  Ue => {
                    var rt;
                    null === (rt = he.next) || void 0 === rt || rt.call(he, Ue),
                      fe.next(Ue);
                  },
                  () => {
                    var Ue;
                    (He = !1),
                      null === (Ue = he.complete) ||
                        void 0 === Ue ||
                        Ue.call(he),
                      fe.complete();
                  },
                  Ue => {
                    var rt;
                    (He = !1),
                      null === (rt = he.error) ||
                        void 0 === rt ||
                        rt.call(he, Ue),
                      fe.error(Ue);
                  },
                  () => {
                    var Ue, rt;
                    He &&
                      (null === (Ue = he.unsubscribe) ||
                        void 0 === Ue ||
                        Ue.call(he)),
                      null === (rt = he.finalize) ||
                        void 0 === rt ||
                        rt.call(he);
                  },
                ),
              );
            })
          : se.y;
      }
    },
    4408: (Tt, Pe, D) => {
      D.d(Pe, { o: () => te });
      var s = D(727);
      class x extends s.w0 {
        constructor(_e, ce) {
          super();
        }
        schedule(_e, ce = 0) {
          return this;
        }
      }
      const N = {
        setInterval(ue, _e, ...ce) {
          const { delegate: he } = N;
          return he?.setInterval
            ? he.setInterval(ue, _e, ...ce)
            : setInterval(ue, _e, ...ce);
        },
        clearInterval(ue) {
          const { delegate: _e } = N;
          return (_e?.clearInterval || clearInterval)(ue);
        },
        delegate: void 0,
      };
      var se = D(8737);
      class te extends x {
        constructor(_e, ce) {
          super(_e, ce),
            (this.scheduler = _e),
            (this.work = ce),
            (this.pending = !1);
        }
        schedule(_e, ce = 0) {
          var he;
          if (this.closed) return this;
          this.state = _e;
          const ae = this.id,
            fe = this.scheduler;
          return (
            null != ae && (this.id = this.recycleAsyncId(fe, ae, ce)),
            (this.pending = !0),
            (this.delay = ce),
            (this.id =
              null !== (he = this.id) && void 0 !== he
                ? he
                : this.requestAsyncId(fe, this.id, ce)),
            this
          );
        }
        requestAsyncId(_e, ce, he = 0) {
          return N.setInterval(_e.flush.bind(_e, this), he);
        }
        recycleAsyncId(_e, ce, he = 0) {
          if (null != he && this.delay === he && !1 === this.pending) return ce;
          null != ce && N.clearInterval(ce);
        }
        execute(_e, ce) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const he = this._execute(_e, ce);
          if (he) return he;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(_e, ce) {
          let ae,
            he = !1;
          try {
            this.work(_e);
          } catch (fe) {
            (he = !0),
              (ae = fe || new Error('Scheduled action threw falsy error'));
          }
          if (he) return this.unsubscribe(), ae;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: _e, scheduler: ce } = this,
              { actions: he } = ce;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, se.P)(he, this),
              null != _e && (this.id = this.recycleAsyncId(ce, _e, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    640: (Tt, Pe, D) => {
      D.d(Pe, { v: () => N });
      const s = { now: () => (s.delegate || Date).now(), delegate: void 0 };
      class x {
        constructor(te, ue = x.now) {
          (this.schedulerActionCtor = te), (this.now = ue);
        }
        schedule(te, ue = 0, _e) {
          return new this.schedulerActionCtor(this, te).schedule(_e, ue);
        }
      }
      x.now = s.now;
      class N extends x {
        constructor(te, ue = x.now) {
          super(te, ue), (this.actions = []), (this._active = !1);
        }
        flush(te) {
          const { actions: ue } = this;
          if (this._active) return void ue.push(te);
          let _e;
          this._active = !0;
          do {
            if ((_e = te.execute(te.state, te.delay))) break;
          } while ((te = ue.shift()));
          if (((this._active = !1), _e)) {
            for (; (te = ue.shift()); ) te.unsubscribe();
            throw _e;
          }
        }
      }
    },
    3101: (Tt, Pe, D) => {
      D.d(Pe, { E: () => Ue });
      var s = D(4408);
      let N,
        x = 1;
      const se = {};
      function te(pt) {
        return pt in se && (delete se[pt], !0);
      }
      const ue = {
          setImmediate(pt) {
            const Ne = x++;
            return (
              (se[Ne] = !0),
              N || (N = Promise.resolve()),
              N.then(() => te(Ne) && pt()),
              Ne
            );
          },
          clearImmediate(pt) {
            te(pt);
          },
        },
        { setImmediate: ce, clearImmediate: he } = ue,
        ae = {
          setImmediate(...pt) {
            const { delegate: Ne } = ae;
            return (Ne?.setImmediate || ce)(...pt);
          },
          clearImmediate(pt) {
            const { delegate: Ne } = ae;
            return (Ne?.clearImmediate || he)(pt);
          },
          delegate: void 0,
        };
      var re = D(640);
      const Ue = new (class He extends re.v {
        flush(Ne) {
          this._active = !0;
          const ft = this._scheduled;
          this._scheduled = void 0;
          const { actions: st } = this;
          let mt;
          Ne = Ne || st.shift();
          do {
            if ((mt = Ne.execute(Ne.state, Ne.delay))) break;
          } while ((Ne = st[0]) && Ne.id === ft && st.shift());
          if (((this._active = !1), mt)) {
            for (; (Ne = st[0]) && Ne.id === ft && st.shift(); )
              Ne.unsubscribe();
            throw mt;
          }
        }
      })(
        class fe extends s.o {
          constructor(Ne, ft) {
            super(Ne, ft), (this.scheduler = Ne), (this.work = ft);
          }
          requestAsyncId(Ne, ft, st = 0) {
            return null !== st && st > 0
              ? super.requestAsyncId(Ne, ft, st)
              : (Ne.actions.push(this),
                Ne._scheduled ||
                  (Ne._scheduled = ae.setImmediate(Ne.flush.bind(Ne, void 0))));
          }
          recycleAsyncId(Ne, ft, st = 0) {
            var mt;
            if (null != st ? st > 0 : this.delay > 0)
              return super.recycleAsyncId(Ne, ft, st);
            const { actions: K } = Ne;
            null != ft &&
              (null === (mt = K[K.length - 1]) || void 0 === mt
                ? void 0
                : mt.id) !== ft &&
              (ae.clearImmediate(ft),
              Ne._scheduled === ft && (Ne._scheduled = void 0));
          }
        },
      );
    },
    4986: (Tt, Pe, D) => {
      D.d(Pe, { P: () => se, z: () => N });
      var s = D(4408);
      const N = new (D(640).v)(s.o),
        se = N;
    },
    3410: (Tt, Pe, D) => {
      D.d(Pe, { z: () => s });
      const s = {
        setTimeout(x, N, ...se) {
          const { delegate: te } = s;
          return te?.setTimeout
            ? te.setTimeout(x, N, ...se)
            : setTimeout(x, N, ...se);
        },
        clearTimeout(x) {
          const { delegate: N } = s;
          return (N?.clearTimeout || clearTimeout)(x);
        },
        delegate: void 0,
      };
    },
    2202: (Tt, Pe, D) => {
      D.d(Pe, { h: () => x });
      const x = (function s() {
        return 'function' == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : '@@iterator';
      })();
    },
    8822: (Tt, Pe, D) => {
      D.d(Pe, { L: () => s });
      const s =
        ('function' == typeof Symbol && Symbol.observable) || '@@observable';
    },
    3269: (Tt, Pe, D) => {
      D.d(Pe, { _6: () => ue, jO: () => se, yG: () => te });
      var s = D(576),
        x = D(3532);
      function N(_e) {
        return _e[_e.length - 1];
      }
      function se(_e) {
        return (0, s.m)(N(_e)) ? _e.pop() : void 0;
      }
      function te(_e) {
        return (0, x.K)(N(_e)) ? _e.pop() : void 0;
      }
      function ue(_e, ce) {
        return 'number' == typeof N(_e) ? _e.pop() : ce;
      }
    },
    4742: (Tt, Pe, D) => {
      D.d(Pe, { D: () => te });
      const { isArray: s } = Array,
        { getPrototypeOf: x, prototype: N, keys: se } = Object;
      function te(_e) {
        if (1 === _e.length) {
          const ce = _e[0];
          if (s(ce)) return { args: ce, keys: null };
          if (
            (function ue(_e) {
              return _e && 'object' == typeof _e && x(_e) === N;
            })(ce)
          ) {
            const he = se(ce);
            return { args: he.map(ae => ce[ae]), keys: he };
          }
        }
        return { args: _e, keys: null };
      }
    },
    8737: (Tt, Pe, D) => {
      function s(x, N) {
        if (x) {
          const se = x.indexOf(N);
          0 <= se && x.splice(se, 1);
        }
      }
      D.d(Pe, { P: () => s });
    },
    3888: (Tt, Pe, D) => {
      function s(x) {
        const se = x(te => {
          Error.call(te), (te.stack = new Error().stack);
        });
        return (
          (se.prototype = Object.create(Error.prototype)),
          (se.prototype.constructor = se),
          se
        );
      }
      D.d(Pe, { d: () => s });
    },
    1810: (Tt, Pe, D) => {
      function s(x, N) {
        return x.reduce((se, te, ue) => ((se[te] = N[ue]), se), {});
      }
      D.d(Pe, { n: () => s });
    },
    2806: (Tt, Pe, D) => {
      D.d(Pe, { O: () => se, x: () => N });
      var s = D(2416);
      let x = null;
      function N(te) {
        if (s.v.useDeprecatedSynchronousErrorHandling) {
          const ue = !x;
          if ((ue && (x = { errorThrown: !1, error: null }), te(), ue)) {
            const { errorThrown: _e, error: ce } = x;
            if (((x = null), _e)) throw ce;
          }
        } else te();
      }
      function se(te) {
        s.v.useDeprecatedSynchronousErrorHandling &&
          x &&
          ((x.errorThrown = !0), (x.error = te));
      }
    },
    9672: (Tt, Pe, D) => {
      function s(x, N, se, te = 0, ue = !1) {
        const _e = N.schedule(function () {
          se(), ue ? x.add(this.schedule(null, te)) : this.unsubscribe();
        }, te);
        if ((x.add(_e), !ue)) return _e;
      }
      D.d(Pe, { f: () => s });
    },
    4671: (Tt, Pe, D) => {
      function s(x) {
        return x;
      }
      D.d(Pe, { y: () => s });
    },
    1144: (Tt, Pe, D) => {
      D.d(Pe, { z: () => s });
      const s = x => x && 'number' == typeof x.length && 'function' != typeof x;
    },
    2206: (Tt, Pe, D) => {
      D.d(Pe, { D: () => x });
      var s = D(576);
      function x(N) {
        return Symbol.asyncIterator && (0, s.m)(N?.[Symbol.asyncIterator]);
      }
    },
    576: (Tt, Pe, D) => {
      function s(x) {
        return 'function' == typeof x;
      }
      D.d(Pe, { m: () => s });
    },
    3670: (Tt, Pe, D) => {
      D.d(Pe, { c: () => N });
      var s = D(8822),
        x = D(576);
      function N(se) {
        return (0, x.m)(se[s.L]);
      }
    },
    6495: (Tt, Pe, D) => {
      D.d(Pe, { T: () => N });
      var s = D(2202),
        x = D(576);
      function N(se) {
        return (0, x.m)(se?.[s.h]);
      }
    },
    8239: (Tt, Pe, D) => {
      D.d(Pe, { t: () => x });
      var s = D(576);
      function x(N) {
        return (0, s.m)(N?.then);
      }
    },
    3260: (Tt, Pe, D) => {
      D.d(Pe, { L: () => se, Q: () => N });
      var s = D(655),
        x = D(576);
      function N(te) {
        return (0, s.FC)(this, arguments, function* () {
          const _e = te.getReader();
          try {
            for (;;) {
              const { value: ce, done: he } = yield (0, s.qq)(_e.read());
              if (he) return yield (0, s.qq)(void 0);
              yield yield (0, s.qq)(ce);
            }
          } finally {
            _e.releaseLock();
          }
        });
      }
      function se(te) {
        return (0, x.m)(te?.getReader);
      }
    },
    3532: (Tt, Pe, D) => {
      D.d(Pe, { K: () => x });
      var s = D(576);
      function x(N) {
        return N && (0, s.m)(N.schedule);
      }
    },
    4482: (Tt, Pe, D) => {
      D.d(Pe, { A: () => x, e: () => N });
      var s = D(576);
      function x(se) {
        return (0, s.m)(se?.lift);
      }
      function N(se) {
        return te => {
          if (x(te))
            return te.lift(function (ue) {
              try {
                return se(ue, this);
              } catch (_e) {
                this.error(_e);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
    },
    3268: (Tt, Pe, D) => {
      D.d(Pe, { Z: () => se });
      var s = D(4004);
      const { isArray: x } = Array;
      function se(te) {
        return (0, s.U)(ue =>
          (function N(te, ue) {
            return x(ue) ? te(...ue) : te(ue);
          })(te, ue),
        );
      }
    },
    5032: (Tt, Pe, D) => {
      function s() {}
      D.d(Pe, { Z: () => s });
    },
    9635: (Tt, Pe, D) => {
      D.d(Pe, { U: () => N, z: () => x });
      var s = D(4671);
      function x(...se) {
        return N(se);
      }
      function N(se) {
        return 0 === se.length
          ? s.y
          : 1 === se.length
          ? se[0]
          : function (ue) {
              return se.reduce((_e, ce) => ce(_e), ue);
            };
      }
    },
    7849: (Tt, Pe, D) => {
      D.d(Pe, { h: () => N });
      var s = D(2416),
        x = D(3410);
      function N(se) {
        x.z.setTimeout(() => {
          const { onUnhandledError: te } = s.v;
          if (!te) throw se;
          te(se);
        });
      }
    },
    4532: (Tt, Pe, D) => {
      function s(x) {
        return new TypeError(
          `You provided ${
            null !== x && 'object' == typeof x ? 'an invalid object' : `'${x}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`,
        );
      }
      D.d(Pe, { z: () => s });
    },
    655: (Tt, Pe, D) => {
      function re(Ge, Ye, xe, je) {
        return new (xe || (xe = Promise))(function (Re, Le) {
          function a(Lt) {
            try {
              Ke(je.next(Lt));
            } catch (Be) {
              Le(Be);
            }
          }
          function ot(Lt) {
            try {
              Ke(je.throw(Lt));
            } catch (Be) {
              Le(Be);
            }
          }
          function Ke(Lt) {
            Lt.done
              ? Re(Lt.value)
              : (function ye(Re) {
                  return Re instanceof xe
                    ? Re
                    : new xe(function (Le) {
                        Le(Re);
                      });
                })(Lt.value).then(a, ot);
          }
          Ke((je = je.apply(Ge, Ye || [])).next());
        });
      }
      function K(Ge) {
        return this instanceof K ? ((this.v = Ge), this) : new K(Ge);
      }
      function ie(Ge, Ye, xe) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var ye,
          je = xe.apply(Ge, Ye || []),
          Re = [];
        return (
          (ye = {}),
          Le('next'),
          Le('throw'),
          Le('return'),
          (ye[Symbol.asyncIterator] = function () {
            return this;
          }),
          ye
        );
        function Le(Pt) {
          je[Pt] &&
            (ye[Pt] = function (an) {
              return new Promise(function (ut, Zt) {
                Re.push([Pt, an, ut, Zt]) > 1 || a(Pt, an);
              });
            });
        }
        function a(Pt, an) {
          try {
            !(function ot(Pt) {
              Pt.value instanceof K
                ? Promise.resolve(Pt.value.v).then(Ke, Lt)
                : Be(Re[0][2], Pt);
            })(je[Pt](an));
          } catch (ut) {
            Be(Re[0][3], ut);
          }
        }
        function Ke(Pt) {
          a('next', Pt);
        }
        function Lt(Pt) {
          a('throw', Pt);
        }
        function Be(Pt, an) {
          Pt(an), Re.shift(), Re.length && a(Re[0][0], Re[0][1]);
        }
      }
      function X(Ge) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var xe,
          Ye = Ge[Symbol.asyncIterator];
        return Ye
          ? Ye.call(Ge)
          : ((Ge = (function pt(Ge) {
              var Ye = 'function' == typeof Symbol && Symbol.iterator,
                xe = Ye && Ge[Ye],
                je = 0;
              if (xe) return xe.call(Ge);
              if (Ge && 'number' == typeof Ge.length)
                return {
                  next: function () {
                    return (
                      Ge && je >= Ge.length && (Ge = void 0),
                      { value: Ge && Ge[je++], done: !Ge }
                    );
                  },
                };
              throw new TypeError(
                Ye
                  ? 'Object is not iterable.'
                  : 'Symbol.iterator is not defined.',
              );
            })(Ge)),
            (xe = {}),
            je('next'),
            je('throw'),
            je('return'),
            (xe[Symbol.asyncIterator] = function () {
              return this;
            }),
            xe);
        function je(Re) {
          xe[Re] =
            Ge[Re] &&
            function (Le) {
              return new Promise(function (a, ot) {
                !(function ye(Re, Le, a, ot) {
                  Promise.resolve(ot).then(function (Ke) {
                    Re({ value: Ke, done: a });
                  }, Le);
                })(a, ot, (Le = Ge[Re](Le)).done, Le.value);
              });
            };
        }
      }
      D.d(Pe, { FC: () => ie, KL: () => X, mG: () => re, qq: () => K });
    },
    7340: (Tt, Pe, D) => {
      D.d(Pe, {
        F4: () => ae,
        IO: () => rt,
        LC: () => x,
        SB: () => he,
        X$: () => se,
        ZE: () => st,
        ZN: () => ft,
        _j: () => s,
        eR: () => fe,
        jt: () => te,
        k1: () => mt,
        l3: () => N,
        oB: () => ce,
        pV: () => He,
        ru: () => ue,
        vP: () => _e,
      });
      class s {}
      class x {}
      const N = '*';
      function se(K, ie) {
        return { type: 7, name: K, definitions: ie, options: {} };
      }
      function te(K, ie = null) {
        return { type: 4, styles: ie, timings: K };
      }
      function ue(K, ie = null) {
        return { type: 3, steps: K, options: ie };
      }
      function _e(K, ie = null) {
        return { type: 2, steps: K, options: ie };
      }
      function ce(K) {
        return { type: 6, styles: K, offset: null };
      }
      function he(K, ie, ee) {
        return { type: 0, name: K, styles: ie, options: ee };
      }
      function ae(K) {
        return { type: 5, steps: K };
      }
      function fe(K, ie, ee = null) {
        return { type: 1, expr: K, animation: ie, options: ee };
      }
      function He(K = null) {
        return { type: 9, options: K };
      }
      function rt(K, ie, ee = null) {
        return { type: 11, selector: K, animation: ie, options: ee };
      }
      function Ne(K) {
        Promise.resolve().then(K);
      }
      class ft {
        constructor(ie = 0, ee = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = ie + ee);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(ie => ie()),
            (this._onDoneFns = []));
        }
        onStart(ie) {
          this._originalOnStartFns.push(ie), this._onStartFns.push(ie);
        }
        onDone(ie) {
          this._originalOnDoneFns.push(ie), this._onDoneFns.push(ie);
        }
        onDestroy(ie) {
          this._onDestroyFns.push(ie);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Ne(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach(ie => ie()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach(ie => ie()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(ie) {
          this._position = this.totalTime ? ie * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(ie) {
          const ee = 'start' == ie ? this._onStartFns : this._onDoneFns;
          ee.forEach(X => X()), (ee.length = 0);
        }
      }
      class st {
        constructor(ie) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = ie);
          let ee = 0,
            X = 0,
            Ae = 0;
          const nt = this.players.length;
          0 == nt
            ? Ne(() => this._onFinish())
            : this.players.forEach(dt => {
                dt.onDone(() => {
                  ++ee == nt && this._onFinish();
                }),
                  dt.onDestroy(() => {
                    ++X == nt && this._onDestroy();
                  }),
                  dt.onStart(() => {
                    ++Ae == nt && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (dt, At) => Math.max(dt, At.totalTime),
              0,
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach(ie => ie()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach(ie => ie.init());
        }
        onStart(ie) {
          this._onStartFns.push(ie);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach(ie => ie()),
            (this._onStartFns = []));
        }
        onDone(ie) {
          this._onDoneFns.push(ie);
        }
        onDestroy(ie) {
          this._onDestroyFns.push(ie);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach(ie => ie.play());
        }
        pause() {
          this.players.forEach(ie => ie.pause());
        }
        restart() {
          this.players.forEach(ie => ie.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach(ie => ie.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach(ie => ie.destroy()),
            this._onDestroyFns.forEach(ie => ie()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach(ie => ie.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(ie) {
          const ee = ie * this.totalTime;
          this.players.forEach(X => {
            const Ae = X.totalTime ? Math.min(1, ee / X.totalTime) : 1;
            X.setPosition(Ae);
          });
        }
        getPosition() {
          const ie = this.players.reduce(
            (ee, X) => (null === ee || X.totalTime > ee.totalTime ? X : ee),
            null,
          );
          return null != ie ? ie.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach(ie => {
            ie.beforeDestroy && ie.beforeDestroy();
          });
        }
        triggerCallback(ie) {
          const ee = 'start' == ie ? this._onStartFns : this._onDoneFns;
          ee.forEach(X => X()), (ee.length = 0);
        }
      }
      const mt = '!';
    },
    2687: (Tt, Pe, D) => {
      D.d(Pe, {
        Em: () => Ye,
        Kd: () => me,
        X6: () => Rn,
        ic: () => je,
        kH: () => Dn,
        mK: () => Qt,
        qV: () => yt,
        qm: () => Et,
        rt: () => ke,
        s1: () => Ge,
        tE: () => Ot,
        yG: () => it,
      });
      var s = D(6895),
        x = D(4650),
        N = D(3353),
        se = D(7579),
        te = D(727),
        ue = D(1135),
        _e = D(9646),
        ce = D(9521),
        he = D(8505),
        ae = D(8372),
        fe = D(9300),
        re = D(4004),
        He = D(5698),
        Ue = D(5684),
        rt = D(1884),
        pt = D(2722),
        Ne = D(1281),
        ft = D(9643),
        st = D(2289);
      class wt {
        constructor(b) {
          (this._items = b),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new se.x()),
            (this._typeaheadSubscription = te.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = w => w.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new se.x()),
            (this.change = new se.x()),
            b instanceof x.n_E &&
              (this._itemChangesSubscription = b.changes.subscribe(w => {
                if (this._activeItem) {
                  const z = w.toArray().indexOf(this._activeItem);
                  z > -1 &&
                    z !== this._activeItemIndex &&
                    (this._activeItemIndex = z);
                }
              }));
        }
        skipPredicate(b) {
          return (this._skipPredicateFn = b), this;
        }
        withWrap(b = !0) {
          return (this._wrap = b), this;
        }
        withVerticalOrientation(b = !0) {
          return (this._vertical = b), this;
        }
        withHorizontalOrientation(b) {
          return (this._horizontal = b), this;
        }
        withAllowedModifierKeys(b) {
          return (this._allowedModifierKeys = b), this;
        }
        withTypeAhead(b = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, he.b)(w => this._pressedLetters.push(w)),
                (0, ae.b)(b),
                (0, fe.h)(() => this._pressedLetters.length > 0),
                (0, re.U)(() => this._pressedLetters.join('')),
              )
              .subscribe(w => {
                const $ = this._getItemsArray();
                for (let z = 1; z < $.length + 1; z++) {
                  const $e = (this._activeItemIndex + z) % $.length,
                    Mt = $[$e];
                  if (
                    !this._skipPredicateFn(Mt) &&
                    0 === Mt.getLabel().toUpperCase().trim().indexOf(w)
                  ) {
                    this.setActiveItem($e);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(b = !0) {
          return (this._homeAndEnd = b), this;
        }
        withPageUpDown(b = !0, w = 10) {
          return (this._pageUpAndDown = { enabled: b, delta: w }), this;
        }
        setActiveItem(b) {
          const w = this._activeItem;
          this.updateActiveItem(b),
            this._activeItem !== w && this.change.next(this._activeItemIndex);
        }
        onKeydown(b) {
          const w = b.keyCode,
            z = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              $e => !b[$e] || this._allowedModifierKeys.indexOf($e) > -1,
            );
          switch (w) {
            case ce.Mf:
              return void this.tabOut.next();
            case ce.JH:
              if (this._vertical && z) {
                this.setNextItemActive();
                break;
              }
              return;
            case ce.LH:
              if (this._vertical && z) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case ce.SV:
              if (this._horizontal && z) {
                'rtl' === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case ce.oh:
              if (this._horizontal && z) {
                'rtl' === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case ce.Sd:
              if (this._homeAndEnd && z) {
                this.setFirstItemActive();
                break;
              }
              return;
            case ce.uR:
              if (this._homeAndEnd && z) {
                this.setLastItemActive();
                break;
              }
              return;
            case ce.Ku:
              if (this._pageUpAndDown.enabled && z) {
                const $e = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex($e > 0 ? $e : 0, 1);
                break;
              }
              return;
            case ce.VM:
              if (this._pageUpAndDown.enabled && z) {
                const $e = this._activeItemIndex + this._pageUpAndDown.delta,
                  Mt = this._getItemsArray().length;
                this._setActiveItemByIndex($e < Mt ? $e : Mt - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (z || (0, ce.Vb)(b, 'shiftKey')) &&
                (b.key && 1 === b.key.length
                  ? this._letterKeyStream.next(b.key.toLocaleUpperCase())
                  : ((w >= ce.A && w <= ce.Z) || (w >= ce.xE && w <= ce.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(w)))
              );
          }
          (this._pressedLetters = []), b.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(b) {
          const w = this._getItemsArray(),
            $ = 'number' == typeof b ? b : w.indexOf(b);
          (this._activeItem = w[$] ?? null), (this._activeItemIndex = $);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(b) {
          this._wrap
            ? this._setActiveInWrapMode(b)
            : this._setActiveInDefaultMode(b);
        }
        _setActiveInWrapMode(b) {
          const w = this._getItemsArray();
          for (let $ = 1; $ <= w.length; $++) {
            const z = (this._activeItemIndex + b * $ + w.length) % w.length;
            if (!this._skipPredicateFn(w[z])) return void this.setActiveItem(z);
          }
        }
        _setActiveInDefaultMode(b) {
          this._setActiveItemByIndex(this._activeItemIndex + b, b);
        }
        _setActiveItemByIndex(b, w) {
          const $ = this._getItemsArray();
          if ($[b]) {
            for (; this._skipPredicateFn($[b]); ) if (!$[(b += w)]) return;
            this.setActiveItem(b);
          }
        }
        _getItemsArray() {
          return this._items instanceof x.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class Ge extends wt {
        setActiveItem(b) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(b),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class Ye extends wt {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(b) {
          return (this._origin = b), this;
        }
        setActiveItem(b) {
          super.setActiveItem(b),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let je = (() => {
        class R {
          constructor(w) {
            this._platform = w;
          }
          isDisabled(w) {
            return w.hasAttribute('disabled');
          }
          isVisible(w) {
            return (
              (function Re(R) {
                return !!(
                  R.offsetWidth ||
                  R.offsetHeight ||
                  ('function' == typeof R.getClientRects &&
                    R.getClientRects().length)
                );
              })(w) && 'visible' === getComputedStyle(w).visibility
            );
          }
          isTabbable(w) {
            if (!this._platform.isBrowser) return !1;
            const $ = (function ye(R) {
              try {
                return R.frameElement;
              } catch {
                return null;
              }
            })(
              (function Zt(R) {
                return (
                  (R.ownerDocument && R.ownerDocument.defaultView) || window
                );
              })(w),
            );
            if ($ && (-1 === Pt($) || !this.isVisible($))) return !1;
            let z = w.nodeName.toLowerCase(),
              $e = Pt(w);
            return w.hasAttribute('contenteditable')
              ? -1 !== $e
              : !(
                  'iframe' === z ||
                  'object' === z ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function an(R) {
                      let b = R.nodeName.toLowerCase(),
                        w = 'input' === b && R.type;
                      return (
                        'text' === w ||
                        'password' === w ||
                        'select' === b ||
                        'textarea' === b
                      );
                    })(w))
                ) &&
                  ('audio' === z
                    ? !!w.hasAttribute('controls') && -1 !== $e
                    : 'video' === z
                    ? -1 !== $e &&
                      (null !== $e ||
                        this._platform.FIREFOX ||
                        w.hasAttribute('controls'))
                    : w.tabIndex >= 0);
          }
          isFocusable(w, $) {
            return (
              (function ut(R) {
                return (
                  !(function a(R) {
                    return (
                      (function Ke(R) {
                        return 'input' == R.nodeName.toLowerCase();
                      })(R) && 'hidden' == R.type
                    );
                  })(R) &&
                  ((function Le(R) {
                    let b = R.nodeName.toLowerCase();
                    return (
                      'input' === b ||
                      'select' === b ||
                      'button' === b ||
                      'textarea' === b
                    );
                  })(R) ||
                    (function ot(R) {
                      return (
                        (function Lt(R) {
                          return 'a' == R.nodeName.toLowerCase();
                        })(R) && R.hasAttribute('href')
                      );
                    })(R) ||
                    R.hasAttribute('contenteditable') ||
                    Be(R))
                );
              })(w) &&
              !this.isDisabled(w) &&
              ($?.ignoreVisibility || this.isVisible(w))
            );
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(x.LFG(N.t4));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac, providedIn: 'root' })),
          R
        );
      })();
      function Be(R) {
        if (!R.hasAttribute('tabindex') || void 0 === R.tabIndex) return !1;
        let b = R.getAttribute('tabindex');
        return !(!b || isNaN(parseInt(b, 10)));
      }
      function Pt(R) {
        if (!Be(R)) return null;
        const b = parseInt(R.getAttribute('tabindex') || '', 10);
        return isNaN(b) ? -1 : b;
      }
      class Ct {
        get enabled() {
          return this._enabled;
        }
        set enabled(b) {
          (this._enabled = b),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(b, this._startAnchor),
              this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        constructor(b, w, $, z, $e = !1) {
          (this._element = b),
            (this._checker = w),
            (this._ngZone = $),
            (this._document = z),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            $e || this.attachAnchors();
        }
        destroy() {
          const b = this._startAnchor,
            w = this._endAnchor;
          b &&
            (b.removeEventListener('focus', this.startAnchorListener),
            b.remove()),
            w &&
              (w.removeEventListener('focus', this.endAnchorListener),
              w.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  'focus',
                  this.startAnchorListener,
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    'focus',
                    this.endAnchorListener,
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element,
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling,
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(b) {
          return new Promise(w => {
            this._executeOnStable(() => w(this.focusInitialElement(b)));
          });
        }
        focusFirstTabbableElementWhenReady(b) {
          return new Promise(w => {
            this._executeOnStable(() => w(this.focusFirstTabbableElement(b)));
          });
        }
        focusLastTabbableElementWhenReady(b) {
          return new Promise(w => {
            this._executeOnStable(() => w(this.focusLastTabbableElement(b)));
          });
        }
        _getRegionBoundary(b) {
          const w = this._element.querySelectorAll(
            `[cdk-focus-region-${b}], [cdkFocusRegion${b}], [cdk-focus-${b}]`,
          );
          return 'start' == b
            ? w.length
              ? w[0]
              : this._getFirstTabbableElement(this._element)
            : w.length
            ? w[w.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(b) {
          const w = this._element.querySelector(
            '[cdk-focus-initial], [cdkFocusInitial]',
          );
          if (w) {
            if (!this._checker.isFocusable(w)) {
              const $ = this._getFirstTabbableElement(w);
              return $?.focus(b), !!$;
            }
            return w.focus(b), !0;
          }
          return this.focusFirstTabbableElement(b);
        }
        focusFirstTabbableElement(b) {
          const w = this._getRegionBoundary('start');
          return w && w.focus(b), !!w;
        }
        focusLastTabbableElement(b) {
          const w = this._getRegionBoundary('end');
          return w && w.focus(b), !!w;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const w = b.children;
          for (let $ = 0; $ < w.length; $++) {
            const z =
              w[$].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(w[$])
                : null;
            if (z) return z;
          }
          return null;
        }
        _getLastTabbableElement(b) {
          if (this._checker.isFocusable(b) && this._checker.isTabbable(b))
            return b;
          const w = b.children;
          for (let $ = w.length - 1; $ >= 0; $--) {
            const z =
              w[$].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(w[$])
                : null;
            if (z) return z;
          }
          return null;
        }
        _createAnchor() {
          const b = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, b),
            b.classList.add('cdk-visually-hidden'),
            b.classList.add('cdk-focus-trap-anchor'),
            b.setAttribute('aria-hidden', 'true'),
            b
          );
        }
        _toggleAnchorTabIndex(b, w) {
          b ? w.setAttribute('tabindex', '0') : w.removeAttribute('tabindex');
        }
        toggleAnchors(b) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(b, this._startAnchor),
            this._toggleAnchorTabIndex(b, this._endAnchor));
        }
        _executeOnStable(b) {
          this._ngZone.isStable
            ? b()
            : this._ngZone.onStable.pipe((0, He.q)(1)).subscribe(b);
        }
      }
      let yt = (() => {
          class R {
            constructor(w, $, z) {
              (this._checker = w), (this._ngZone = $), (this._document = z);
            }
            create(w, $ = !1) {
              return new Ct(w, this._checker, this._ngZone, this._document, $);
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(x.LFG(je), x.LFG(x.R0b), x.LFG(s.K0));
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        Qt = (() => {
          class R {
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(w) {
              this.focusTrap.enabled = (0, Ne.Ig)(w);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(w) {
              this._autoCapture = (0, Ne.Ig)(w);
            }
            constructor(w, $, z) {
              (this._elementRef = w),
                (this._focusTrapFactory = $),
                (this._previouslyFocusedElement = null),
                (this.focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                  !0,
                ));
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(),
                  (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture && this._captureFocus();
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
            ngOnChanges(w) {
              const $ = w.autoCapture;
              $ &&
                !$.firstChange &&
                this.autoCapture &&
                this.focusTrap.hasAttached() &&
                this._captureFocus();
            }
            _captureFocus() {
              (this._previouslyFocusedElement = (0, N.ht)()),
                this.focusTrap.focusInitialElementWhenReady();
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(x.Y36(x.SBq), x.Y36(yt), x.Y36(s.K0));
            }),
            (R.ɵdir = x.lG2({
              type: R,
              selectors: [['', 'cdkTrapFocus', '']],
              inputs: {
                enabled: ['cdkTrapFocus', 'enabled'],
                autoCapture: ['cdkTrapFocusAutoCapture', 'autoCapture'],
              },
              exportAs: ['cdkTrapFocus'],
              features: [x.TTD],
            })),
            R
          );
        })();
      function Rn(R) {
        return 0 === R.buttons || (0 === R.offsetX && 0 === R.offsetY);
      }
      function it(R) {
        const b =
          (R.touches && R.touches[0]) ||
          (R.changedTouches && R.changedTouches[0]);
        return !(
          !b ||
          -1 !== b.identifier ||
          (null != b.radiusX && 1 !== b.radiusX) ||
          (null != b.radiusY && 1 !== b.radiusY)
        );
      }
      const W = new x.OlP('cdk-input-modality-detector-options'),
        ne = { ignoreKeys: [ce.zL, ce.jx, ce.b2, ce.MW, ce.JU] },
        ze = (0, N.i$)({ passive: !0, capture: !0 });
      let ve = (() => {
        class R {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(w, $, z, $e) {
            (this._platform = w),
              (this._mostRecentTarget = null),
              (this._modality = new ue.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = Mt => {
                this._options?.ignoreKeys?.some(Xt => Xt === Mt.keyCode) ||
                  (this._modality.next('keyboard'),
                  (this._mostRecentTarget = (0, N.sA)(Mt)));
              }),
              (this._onMousedown = Mt => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(Rn(Mt) ? 'keyboard' : 'mouse'),
                  (this._mostRecentTarget = (0, N.sA)(Mt)));
              }),
              (this._onTouchstart = Mt => {
                it(Mt)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = (0, N.sA)(Mt)));
              }),
              (this._options = { ...ne, ...$e }),
              (this.modalityDetected = this._modality.pipe((0, Ue.T)(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, rt.x)())),
              w.isBrowser &&
                $.runOutsideAngular(() => {
                  z.addEventListener('keydown', this._onKeydown, ze),
                    z.addEventListener('mousedown', this._onMousedown, ze),
                    z.addEventListener('touchstart', this._onTouchstart, ze);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, ze),
                document.removeEventListener(
                  'mousedown',
                  this._onMousedown,
                  ze,
                ),
                document.removeEventListener(
                  'touchstart',
                  this._onTouchstart,
                  ze,
                ));
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(
              x.LFG(N.t4),
              x.LFG(x.R0b),
              x.LFG(s.K0),
              x.LFG(W, 8),
            );
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac, providedIn: 'root' })),
          R
        );
      })();
      const be = new x.OlP('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function U() {
            return null;
          },
        }),
        Ie = new x.OlP('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let de = 0,
        me = (() => {
          class R {
            constructor(w, $, z, $e) {
              (this._ngZone = $),
                (this._defaultOptions = $e),
                (this._document = z),
                (this._liveElement = w || this._createLiveElement());
            }
            announce(w, ...$) {
              const z = this._defaultOptions;
              let $e, Mt;
              return (
                1 === $.length && 'number' == typeof $[0]
                  ? (Mt = $[0])
                  : ([$e, Mt] = $),
                this.clear(),
                clearTimeout(this._previousTimeout),
                $e || ($e = z && z.politeness ? z.politeness : 'polite'),
                null == Mt && z && (Mt = z.duration),
                this._liveElement.setAttribute('aria-live', $e),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        Xt => (this._currentResolve = Xt),
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = w),
                        'number' == typeof Mt &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            Mt,
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  ),
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const w = 'cdk-live-announcer-element',
                $ = this._document.getElementsByClassName(w),
                z = this._document.createElement('div');
              for (let $e = 0; $e < $.length; $e++) $[$e].remove();
              return (
                z.classList.add(w),
                z.classList.add('cdk-visually-hidden'),
                z.setAttribute('aria-atomic', 'true'),
                z.setAttribute('aria-live', 'polite'),
                (z.id = 'cdk-live-announcer-' + de++),
                this._document.body.appendChild(z),
                z
              );
            }
            _exposeAnnouncerToModals(w) {
              const $ = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              for (let z = 0; z < $.length; z++) {
                const $e = $[z],
                  Mt = $e.getAttribute('aria-owns');
                Mt
                  ? -1 === Mt.indexOf(w) &&
                    $e.setAttribute('aria-owns', Mt + ' ' + w)
                  : $e.setAttribute('aria-owns', w);
              }
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(
                x.LFG(be, 8),
                x.LFG(x.R0b),
                x.LFG(s.K0),
                x.LFG(Ie, 8),
              );
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })();
      const Xe = new x.OlP('cdk-focus-monitor-default-options'),
        xt = (0, N.i$)({ passive: !0, capture: !0 });
      let Ot = (() => {
          class R {
            constructor(w, $, z, $e, Mt) {
              (this._ngZone = w),
                (this._platform = $),
                (this._inputModalityDetector = z),
                (this._origin = null),
                (this._windowFocused = !1),
                (this._originFromTouchInteraction = !1),
                (this._elementInfo = new Map()),
                (this._monitoredElementCount = 0),
                (this._rootNodeFocusListenerCount = new Map()),
                (this._windowFocusListener = () => {
                  (this._windowFocused = !0),
                    (this._windowFocusTimeoutId = window.setTimeout(
                      () => (this._windowFocused = !1),
                    ));
                }),
                (this._stopInputModalityDetector = new se.x()),
                (this._rootNodeFocusAndBlurListener = Xt => {
                  for (let Yt = (0, N.sA)(Xt); Yt; Yt = Yt.parentElement)
                    'focus' === Xt.type
                      ? this._onFocus(Xt, Yt)
                      : this._onBlur(Xt, Yt);
                }),
                (this._document = $e),
                (this._detectionMode = Mt?.detectionMode || 0);
            }
            monitor(w, $ = !1) {
              const z = (0, Ne.fI)(w);
              if (!this._platform.isBrowser || 1 !== z.nodeType)
                return (0, _e.of)(null);
              const $e = (0, N.kV)(z) || this._getDocument(),
                Mt = this._elementInfo.get(z);
              if (Mt) return $ && (Mt.checkChildren = !0), Mt.subject;
              const Xt = {
                checkChildren: $,
                subject: new se.x(),
                rootNode: $e,
              };
              return (
                this._elementInfo.set(z, Xt),
                this._registerGlobalListeners(Xt),
                Xt.subject
              );
            }
            stopMonitoring(w) {
              const $ = (0, Ne.fI)(w),
                z = this._elementInfo.get($);
              z &&
                (z.subject.complete(),
                this._setClasses($),
                this._elementInfo.delete($),
                this._removeGlobalListeners(z));
            }
            focusVia(w, $, z) {
              const $e = (0, Ne.fI)(w);
              $e === this._getDocument().activeElement
                ? this._getClosestElementsInfo($e).forEach(([Xt, Nt]) =>
                    this._originChanged(Xt, $, Nt),
                  )
                : (this._setOrigin($),
                  'function' == typeof $e.focus && $e.focus(z));
            }
            ngOnDestroy() {
              this._elementInfo.forEach((w, $) => this.stopMonitoring($));
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _getFocusOrigin(w) {
              return this._origin
                ? this._originFromTouchInteraction
                  ? this._shouldBeAttributedToTouch(w)
                    ? 'touch'
                    : 'program'
                  : this._origin
                : this._windowFocused && this._lastFocusOrigin
                ? this._lastFocusOrigin
                : w && this._isLastInteractionFromInputLabel(w)
                ? 'mouse'
                : 'program';
            }
            _shouldBeAttributedToTouch(w) {
              return (
                1 === this._detectionMode ||
                !!w?.contains(this._inputModalityDetector._mostRecentTarget)
              );
            }
            _setClasses(w, $) {
              w.classList.toggle('cdk-focused', !!$),
                w.classList.toggle('cdk-touch-focused', 'touch' === $),
                w.classList.toggle('cdk-keyboard-focused', 'keyboard' === $),
                w.classList.toggle('cdk-mouse-focused', 'mouse' === $),
                w.classList.toggle('cdk-program-focused', 'program' === $);
            }
            _setOrigin(w, $ = !1) {
              this._ngZone.runOutsideAngular(() => {
                (this._origin = w),
                  (this._originFromTouchInteraction = 'touch' === w && $),
                  0 === this._detectionMode &&
                    (clearTimeout(this._originTimeoutId),
                    (this._originTimeoutId = setTimeout(
                      () => (this._origin = null),
                      this._originFromTouchInteraction ? 650 : 1,
                    )));
              });
            }
            _onFocus(w, $) {
              const z = this._elementInfo.get($),
                $e = (0, N.sA)(w);
              !z ||
                (!z.checkChildren && $ !== $e) ||
                this._originChanged($, this._getFocusOrigin($e), z);
            }
            _onBlur(w, $) {
              const z = this._elementInfo.get($);
              !z ||
                (z.checkChildren &&
                  w.relatedTarget instanceof Node &&
                  $.contains(w.relatedTarget)) ||
                (this._setClasses($), this._emitOrigin(z, null));
            }
            _emitOrigin(w, $) {
              w.subject.observers.length &&
                this._ngZone.run(() => w.subject.next($));
            }
            _registerGlobalListeners(w) {
              if (!this._platform.isBrowser) return;
              const $ = w.rootNode,
                z = this._rootNodeFocusListenerCount.get($) || 0;
              z ||
                this._ngZone.runOutsideAngular(() => {
                  $.addEventListener(
                    'focus',
                    this._rootNodeFocusAndBlurListener,
                    xt,
                  ),
                    $.addEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      xt,
                    );
                }),
                this._rootNodeFocusListenerCount.set($, z + 1),
                1 == ++this._monitoredElementCount &&
                  (this._ngZone.runOutsideAngular(() => {
                    this._getWindow().addEventListener(
                      'focus',
                      this._windowFocusListener,
                    );
                  }),
                  this._inputModalityDetector.modalityDetected
                    .pipe((0, pt.R)(this._stopInputModalityDetector))
                    .subscribe($e => {
                      this._setOrigin($e, !0);
                    }));
            }
            _removeGlobalListeners(w) {
              const $ = w.rootNode;
              if (this._rootNodeFocusListenerCount.has($)) {
                const z = this._rootNodeFocusListenerCount.get($);
                z > 1
                  ? this._rootNodeFocusListenerCount.set($, z - 1)
                  : ($.removeEventListener(
                      'focus',
                      this._rootNodeFocusAndBlurListener,
                      xt,
                    ),
                    $.removeEventListener(
                      'blur',
                      this._rootNodeFocusAndBlurListener,
                      xt,
                    ),
                    this._rootNodeFocusListenerCount.delete($));
              }
              --this._monitoredElementCount ||
                (this._getWindow().removeEventListener(
                  'focus',
                  this._windowFocusListener,
                ),
                this._stopInputModalityDetector.next(),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._originTimeoutId));
            }
            _originChanged(w, $, z) {
              this._setClasses(w, $),
                this._emitOrigin(z, $),
                (this._lastFocusOrigin = $);
            }
            _getClosestElementsInfo(w) {
              const $ = [];
              return (
                this._elementInfo.forEach((z, $e) => {
                  ($e === w || (z.checkChildren && $e.contains(w))) &&
                    $.push([$e, z]);
                }),
                $
              );
            }
            _isLastInteractionFromInputLabel(w) {
              const { _mostRecentTarget: $, mostRecentModality: z } =
                this._inputModalityDetector;
              if (
                'mouse' !== z ||
                !$ ||
                $ === w ||
                ('INPUT' !== w.nodeName && 'TEXTAREA' !== w.nodeName) ||
                w.disabled
              )
                return !1;
              const $e = w.labels;
              if ($e)
                for (let Mt = 0; Mt < $e.length; Mt++)
                  if ($e[Mt].contains($)) return !0;
              return !1;
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(
                x.LFG(x.R0b),
                x.LFG(N.t4),
                x.LFG(ve),
                x.LFG(s.K0, 8),
                x.LFG(Xe, 8),
              );
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        Dn = (() => {
          class R {
            constructor(w, $) {
              (this._elementRef = w),
                (this._focusMonitor = $),
                (this._focusOrigin = null),
                (this.cdkFocusChange = new x.vpe());
            }
            get focusOrigin() {
              return this._focusOrigin;
            }
            ngAfterViewInit() {
              const w = this._elementRef.nativeElement;
              this._monitorSubscription = this._focusMonitor
                .monitor(
                  w,
                  1 === w.nodeType && w.hasAttribute('cdkMonitorSubtreeFocus'),
                )
                .subscribe($ => {
                  (this._focusOrigin = $), this.cdkFocusChange.emit($);
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._monitorSubscription &&
                  this._monitorSubscription.unsubscribe();
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(x.Y36(x.SBq), x.Y36(Ot));
            }),
            (R.ɵdir = x.lG2({
              type: R,
              selectors: [
                ['', 'cdkMonitorElementFocus', ''],
                ['', 'cdkMonitorSubtreeFocus', ''],
              ],
              outputs: { cdkFocusChange: 'cdkFocusChange' },
              exportAs: ['cdkMonitorFocus'],
            })),
            R
          );
        })();
      const Te = 'cdk-high-contrast-black-on-white',
        vt = 'cdk-high-contrast-white-on-black',
        Je = 'cdk-high-contrast-active';
      let Et = (() => {
          class R {
            constructor(w, $) {
              (this._platform = w),
                (this._document = $),
                (this._breakpointSubscription = (0, x.f3M)(st.Yg)
                  .observe('(forced-colors: active)')
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const w = this._document.createElement('div');
              (w.style.backgroundColor = 'rgb(1,2,3)'),
                (w.style.position = 'absolute'),
                this._document.body.appendChild(w);
              const $ = this._document.defaultView || window,
                z = $ && $.getComputedStyle ? $.getComputedStyle(w) : null,
                $e = ((z && z.backgroundColor) || '').replace(/ /g, '');
              switch ((w.remove(), $e)) {
                case 'rgb(0,0,0)':
                case 'rgb(45,50,54)':
                case 'rgb(32,32,32)':
                  return 2;
                case 'rgb(255,255,255)':
                case 'rgb(255,250,239)':
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const w = this._document.body.classList;
                w.remove(Je, Te, vt), (this._hasCheckedHighContrastMode = !0);
                const $ = this.getHighContrastMode();
                1 === $ ? w.add(Je, Te) : 2 === $ && w.add(Je, vt);
              }
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(x.LFG(N.t4), x.LFG(s.K0));
            }),
            (R.ɵprov = x.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: 'root',
            })),
            R
          );
        })(),
        ke = (() => {
          class R {
            constructor(w) {
              w._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (R.ɵfac = function (w) {
              return new (w || R)(x.LFG(Et));
            }),
            (R.ɵmod = x.oAB({ type: R })),
            (R.ɵinj = x.cJS({ imports: [ft.Q8] })),
            R
          );
        })();
    },
    445: (Tt, Pe, D) => {
      D.d(Pe, { Is: () => _e, vT: () => he });
      var s = D(4650),
        x = D(6895);
      const N = new s.OlP('cdk-dir-doc', {
          providedIn: 'root',
          factory: function se() {
            return (0, s.f3M)(x.K0);
          },
        }),
        te =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let _e = (() => {
          class ae {
            constructor(re) {
              (this.value = 'ltr'),
                (this.change = new s.vpe()),
                re &&
                  (this.value = (function ue(ae) {
                    const fe = ae?.toLowerCase() || '';
                    return 'auto' === fe &&
                      typeof navigator < 'u' &&
                      navigator?.language
                      ? te.test(navigator.language)
                        ? 'rtl'
                        : 'ltr'
                      : 'rtl' === fe
                      ? 'rtl'
                      : 'ltr';
                  })(
                    (re.body ? re.body.dir : null) ||
                      (re.documentElement ? re.documentElement.dir : null) ||
                      'ltr',
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)(s.LFG(N, 8));
            }),
            (ae.ɵprov = s.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        he = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)();
            }),
            (ae.ɵmod = s.oAB({ type: ae })),
            (ae.ɵinj = s.cJS({})),
            ae
          );
        })();
    },
    1281: (Tt, Pe, D) => {
      D.d(Pe, {
        Eq: () => te,
        HM: () => ue,
        Ig: () => x,
        du: () => ce,
        fI: () => _e,
        su: () => N,
      });
      var s = D(4650);
      function x(he) {
        return null != he && 'false' != `${he}`;
      }
      function N(he, ae = 0) {
        return (function se(he) {
          return !isNaN(parseFloat(he)) && !isNaN(Number(he));
        })(he)
          ? Number(he)
          : ae;
      }
      function te(he) {
        return Array.isArray(he) ? he : [he];
      }
      function ue(he) {
        return null == he ? '' : 'string' == typeof he ? he : `${he}px`;
      }
      function _e(he) {
        return he instanceof s.SBq ? he.nativeElement : he;
      }
      function ce(he, ae = /\s+/) {
        const fe = [];
        if (null != he) {
          const re = Array.isArray(he) ? he : `${he}`.split(ae);
          for (const He of re) {
            const Ue = `${He}`.trim();
            Ue && fe.push(Ue);
          }
        }
        return fe;
      }
    },
    9521: (Tt, Pe, D) => {
      D.d(Pe, {
        A: () => a,
        JH: () => mt,
        JU: () => ue,
        K5: () => te,
        Ku: () => He,
        LH: () => ft,
        L_: () => re,
        MW: () => Ie,
        Mf: () => N,
        SV: () => st,
        Sd: () => pt,
        VM: () => Ue,
        Vb: () => hi,
        Z: () => U,
        aO: () => xe,
        b2: () => Un,
        hY: () => fe,
        jx: () => _e,
        oh: () => Ne,
        uR: () => rt,
        xE: () => Ae,
        zL: () => ce,
      });
      const N = 9,
        te = 13,
        ue = 16,
        _e = 17,
        ce = 18,
        fe = 27,
        re = 32,
        He = 33,
        Ue = 34,
        rt = 35,
        pt = 36,
        Ne = 37,
        ft = 38,
        st = 39,
        mt = 40,
        Ae = 48,
        xe = 57,
        a = 65,
        U = 90,
        Ie = 91,
        Un = 224;
      function hi(An, ...Ei) {
        return Ei.length
          ? Ei.some(fi => An[fi])
          : An.altKey || An.shiftKey || An.ctrlKey || An.metaKey;
      }
    },
    2289: (Tt, Pe, D) => {
      D.d(Pe, { Yg: () => mt, u3: () => ie });
      var s = D(4650),
        x = D(1281),
        N = D(7579),
        se = D(9841),
        te = D(7272),
        ue = D(9751),
        _e = D(5698),
        ce = D(5684),
        he = D(8372),
        ae = D(4004),
        fe = D(8675),
        re = D(2722),
        He = D(3353);
      const rt = new Set();
      let pt,
        Ne = (() => {
          class ee {
            constructor(Ae) {
              (this._platform = Ae),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : st);
            }
            matchMedia(Ae) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function ft(ee) {
                    if (!rt.has(ee))
                      try {
                        pt ||
                          ((pt = document.createElement('style')),
                          pt.setAttribute('type', 'text/css'),
                          document.head.appendChild(pt)),
                          pt.sheet &&
                            (pt.sheet.insertRule(`@media ${ee} {body{ }}`, 0),
                            rt.add(ee));
                      } catch (X) {
                        console.error(X);
                      }
                  })(Ae),
                this._matchMedia(Ae)
              );
            }
          }
          return (
            (ee.ɵfac = function (Ae) {
              return new (Ae || ee)(s.LFG(He.t4));
            }),
            (ee.ɵprov = s.Yz7({
              token: ee,
              factory: ee.ɵfac,
              providedIn: 'root',
            })),
            ee
          );
        })();
      function st(ee) {
        return {
          matches: 'all' === ee || '' === ee,
          media: ee,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let mt = (() => {
        class ee {
          constructor(Ae, nt) {
            (this._mediaMatcher = Ae),
              (this._zone = nt),
              (this._queries = new Map()),
              (this._destroySubject = new N.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(Ae) {
            return K((0, x.Eq)(Ae)).some(
              dt => this._registerQuery(dt).mql.matches,
            );
          }
          observe(Ae) {
            const dt = K((0, x.Eq)(Ae)).map(
              _t => this._registerQuery(_t).observable,
            );
            let At = (0, se.a)(dt);
            return (
              (At = (0, te.z)(
                At.pipe((0, _e.q)(1)),
                At.pipe((0, ce.T)(1), (0, he.b)(0)),
              )),
              At.pipe(
                (0, ae.U)(_t => {
                  const Gt = { matches: !1, breakpoints: {} };
                  return (
                    _t.forEach(({ matches: wt, query: Ge }) => {
                      (Gt.matches = Gt.matches || wt),
                        (Gt.breakpoints[Ge] = wt);
                    }),
                    Gt
                  );
                }),
              )
            );
          }
          _registerQuery(Ae) {
            if (this._queries.has(Ae)) return this._queries.get(Ae);
            const nt = this._mediaMatcher.matchMedia(Ae),
              At = {
                observable: new ue.y(_t => {
                  const Gt = wt => this._zone.run(() => _t.next(wt));
                  return (
                    nt.addListener(Gt),
                    () => {
                      nt.removeListener(Gt);
                    }
                  );
                }).pipe(
                  (0, fe.O)(nt),
                  (0, ae.U)(({ matches: _t }) => ({ query: Ae, matches: _t })),
                  (0, re.R)(this._destroySubject),
                ),
                mql: nt,
              };
            return this._queries.set(Ae, At), At;
          }
        }
        return (
          (ee.ɵfac = function (Ae) {
            return new (Ae || ee)(s.LFG(Ne), s.LFG(s.R0b));
          }),
          (ee.ɵprov = s.Yz7({
            token: ee,
            factory: ee.ɵfac,
            providedIn: 'root',
          })),
          ee
        );
      })();
      function K(ee) {
        return ee
          .map(X => X.split(','))
          .reduce((X, Ae) => X.concat(Ae))
          .map(X => X.trim());
      }
      const ie = {
        XSmall: '(max-width: 599.98px)',
        Small: '(min-width: 600px) and (max-width: 959.98px)',
        Medium: '(min-width: 960px) and (max-width: 1279.98px)',
        Large: '(min-width: 1280px) and (max-width: 1919.98px)',
        XLarge: '(min-width: 1920px)',
        Handset:
          '(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)',
        Tablet:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        Web: '(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)',
        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',
        TabletPortrait:
          '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',
        WebPortrait: '(min-width: 840px) and (orientation: portrait)',
        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',
        TabletLandscape:
          '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',
        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',
      };
    },
    9643: (Tt, Pe, D) => {
      D.d(Pe, { Q8: () => he, wD: () => ce });
      var s = D(1281),
        x = D(4650),
        N = D(9751),
        se = D(7579),
        te = D(8372);
      let ue = (() => {
          class ae {
            create(re) {
              return typeof MutationObserver > 'u'
                ? null
                : new MutationObserver(re);
            }
          }
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)();
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        _e = (() => {
          class ae {
            constructor(re) {
              (this._mutationObserverFactory = re),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((re, He) =>
                this._cleanupObserver(He),
              );
            }
            observe(re) {
              const He = (0, s.fI)(re);
              return new N.y(Ue => {
                const pt = this._observeElement(He).subscribe(Ue);
                return () => {
                  pt.unsubscribe(), this._unobserveElement(He);
                };
              });
            }
            _observeElement(re) {
              if (this._observedElements.has(re))
                this._observedElements.get(re).count++;
              else {
                const He = new se.x(),
                  Ue = this._mutationObserverFactory.create(rt => He.next(rt));
                Ue &&
                  Ue.observe(re, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(re, {
                    observer: Ue,
                    stream: He,
                    count: 1,
                  });
              }
              return this._observedElements.get(re).stream;
            }
            _unobserveElement(re) {
              this._observedElements.has(re) &&
                (this._observedElements.get(re).count--,
                this._observedElements.get(re).count ||
                  this._cleanupObserver(re));
            }
            _cleanupObserver(re) {
              if (this._observedElements.has(re)) {
                const { observer: He, stream: Ue } =
                  this._observedElements.get(re);
                He && He.disconnect(),
                  Ue.complete(),
                  this._observedElements.delete(re);
              }
            }
          }
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)(x.LFG(ue));
            }),
            (ae.ɵprov = x.Yz7({
              token: ae,
              factory: ae.ɵfac,
              providedIn: 'root',
            })),
            ae
          );
        })(),
        ce = (() => {
          class ae {
            get disabled() {
              return this._disabled;
            }
            set disabled(re) {
              (this._disabled = (0, s.Ig)(re)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(re) {
              (this._debounce = (0, s.su)(re)), this._subscribe();
            }
            constructor(re, He, Ue) {
              (this._contentObserver = re),
                (this._elementRef = He),
                (this._ngZone = Ue),
                (this.event = new x.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const re = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? re.pipe((0, te.b)(this.debounce)) : re
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)(x.Y36(_e), x.Y36(x.SBq), x.Y36(x.R0b));
            }),
            (ae.ɵdir = x.lG2({
              type: ae,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: {
                disabled: ['cdkObserveContentDisabled', 'disabled'],
                debounce: 'debounce',
              },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            ae
          );
        })(),
        he = (() => {
          class ae {}
          return (
            (ae.ɵfac = function (re) {
              return new (re || ae)();
            }),
            (ae.ɵmod = x.oAB({ type: ae })),
            (ae.ɵinj = x.cJS({ providers: [ue] })),
            ae
          );
        })();
    },
    8184: (Tt, Pe, D) => {
      D.d(Pe, {
        Iu: () => je,
        U8: () => Bt,
        X_: () => Ae,
        Xj: () => xe,
        _G: () => Le,
        aV: () => Ct,
        pI: () => wn,
        xu: () => dn,
      });
      var s = D(44),
        x = D(6895),
        N = D(4650),
        se = D(1281),
        te = D(3353),
        ue = D(9300),
        _e = D(5698),
        ce = D(2722),
        he = D(2529),
        ae = D(445),
        fe = D(4080),
        re = D(7579),
        He = D(727),
        Ue = D(6451),
        rt = D(9521);
      const pt = (0, te.Mq)();
      class Ne {
        constructor(W, ne) {
          (this._viewportRuler = W),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = ne);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const W = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = W.style.left || ''),
              (this._previousHTMLStyles.top = W.style.top || ''),
              (W.style.left = (0, se.HM)(-this._previousScrollPosition.left)),
              (W.style.top = (0, se.HM)(-this._previousScrollPosition.top)),
              W.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const W = this._document.documentElement,
              Me = W.style,
              ze = this._document.body.style,
              ve = Me.scrollBehavior || '',
              be = ze.scrollBehavior || '';
            (this._isEnabled = !1),
              (Me.left = this._previousHTMLStyles.left),
              (Me.top = this._previousHTMLStyles.top),
              W.classList.remove('cdk-global-scrollblock'),
              pt && (Me.scrollBehavior = ze.scrollBehavior = 'auto'),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top,
              ),
              pt && ((Me.scrollBehavior = ve), (ze.scrollBehavior = be));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              'cdk-global-scrollblock',
            ) ||
            this._isEnabled
          )
            return !1;
          const ne = this._document.body,
            Me = this._viewportRuler.getViewportSize();
          return ne.scrollHeight > Me.height || ne.scrollWidth > Me.width;
        }
      }
      class st {
        constructor(W, ne, Me, ze) {
          (this._scrollDispatcher = W),
            (this._ngZone = ne),
            (this._viewportRuler = Me),
            (this._config = ze),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(W) {
          this._overlayRef = W;
        }
        enable() {
          if (this._scrollSubscription) return;
          const W = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              (0, ue.h)(
                ne =>
                  !ne ||
                  !this._overlayRef.overlayElement.contains(
                    ne.getElementRef().nativeElement,
                  ),
              ),
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = W.subscribe(() => {
                const ne = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(ne - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = W.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class mt {
        enable() {}
        disable() {}
        attach() {}
      }
      function K(it, W) {
        return W.some(
          ne =>
            it.bottom < ne.top ||
            it.top > ne.bottom ||
            it.right < ne.left ||
            it.left > ne.right,
        );
      }
      function ie(it, W) {
        return W.some(
          ne =>
            it.top < ne.top ||
            it.bottom > ne.bottom ||
            it.left < ne.left ||
            it.right > ne.right,
        );
      }
      class ee {
        constructor(W, ne, Me, ze) {
          (this._scrollDispatcher = W),
            (this._viewportRuler = ne),
            (this._ngZone = Me),
            (this._config = ze),
            (this._scrollSubscription = null);
        }
        attach(W) {
          this._overlayRef = W;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const ne =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: Me, height: ze } =
                      this._viewportRuler.getViewportSize();
                  K(ne, [
                    {
                      width: Me,
                      height: ze,
                      bottom: ze,
                      right: Me,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let X = (() => {
        class it {
          constructor(ne, Me, ze, ve) {
            (this._scrollDispatcher = ne),
              (this._viewportRuler = Me),
              (this._ngZone = ze),
              (this.noop = () => new mt()),
              (this.close = be =>
                new st(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  be,
                )),
              (this.block = () => new Ne(this._viewportRuler, this._document)),
              (this.reposition = be =>
                new ee(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  be,
                )),
              (this._document = ve);
          }
        }
        return (
          (it.ɵfac = function (ne) {
            return new (ne || it)(
              N.LFG(s.mF),
              N.LFG(s.rL),
              N.LFG(N.R0b),
              N.LFG(x.K0),
            );
          }),
          (it.ɵprov = N.Yz7({
            token: it,
            factory: it.ɵfac,
            providedIn: 'root',
          })),
          it
        );
      })();
      class Ae {
        constructor(W) {
          if (
            ((this.scrollStrategy = new mt()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            W)
          ) {
            const ne = Object.keys(W);
            for (const Me of ne) void 0 !== W[Me] && (this[Me] = W[Me]);
          }
        }
      }
      class At {
        constructor(W, ne) {
          (this.connectionPair = W), (this.scrollableViewProperties = ne);
        }
      }
      let wt = (() => {
          class it {
            constructor(ne) {
              (this._attachedOverlays = []), (this._document = ne);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(ne) {
              this.remove(ne), this._attachedOverlays.push(ne);
            }
            remove(ne) {
              const Me = this._attachedOverlays.indexOf(ne);
              Me > -1 && this._attachedOverlays.splice(Me, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(N.LFG(x.K0));
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })(),
        Ge = (() => {
          class it extends wt {
            constructor(ne, Me) {
              super(ne),
                (this._ngZone = Me),
                (this._keydownListener = ze => {
                  const ve = this._attachedOverlays;
                  for (let be = ve.length - 1; be > -1; be--)
                    if (ve[be]._keydownEvents.observers.length > 0) {
                      const U = ve[be]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => U.next(ze))
                        : U.next(ze);
                      break;
                    }
                });
            }
            add(ne) {
              super.add(ne),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          'keydown',
                          this._keydownListener,
                        ),
                      )
                    : this._document.body.addEventListener(
                        'keydown',
                        this._keydownListener,
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  'keydown',
                  this._keydownListener,
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(N.LFG(x.K0), N.LFG(N.R0b, 8));
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })(),
        Ye = (() => {
          class it extends wt {
            constructor(ne, Me, ze) {
              super(ne),
                (this._platform = Me),
                (this._ngZone = ze),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = ve => {
                  this._pointerDownEventTarget = (0, te.sA)(ve);
                }),
                (this._clickListener = ve => {
                  const be = (0, te.sA)(ve),
                    U =
                      'click' === ve.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : be;
                  this._pointerDownEventTarget = null;
                  const Ie = this._attachedOverlays.slice();
                  for (let de = Ie.length - 1; de > -1; de--) {
                    const me = Ie[de];
                    if (
                      me._outsidePointerEvents.observers.length < 1 ||
                      !me.hasAttached()
                    )
                      continue;
                    if (
                      me.overlayElement.contains(be) ||
                      me.overlayElement.contains(U)
                    )
                      break;
                    const pe = me._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => pe.next(ve))
                      : pe.next(ve);
                  }
                });
            }
            add(ne) {
              if ((super.add(ne), !this._isAttached)) {
                const Me = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(Me),
                    )
                  : this._addEventListeners(Me),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = Me.style.cursor),
                    (Me.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const ne = this._document.body;
                ne.removeEventListener(
                  'pointerdown',
                  this._pointerDownListener,
                  !0,
                ),
                  ne.removeEventListener('click', this._clickListener, !0),
                  ne.removeEventListener('auxclick', this._clickListener, !0),
                  ne.removeEventListener(
                    'contextmenu',
                    this._clickListener,
                    !0,
                  ),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((ne.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(ne) {
              ne.addEventListener('pointerdown', this._pointerDownListener, !0),
                ne.addEventListener('click', this._clickListener, !0),
                ne.addEventListener('auxclick', this._clickListener, !0),
                ne.addEventListener('contextmenu', this._clickListener, !0);
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(N.LFG(x.K0), N.LFG(te.t4), N.LFG(N.R0b, 8));
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })(),
        xe = (() => {
          class it {
            constructor(ne, Me) {
              (this._platform = Me), (this._document = ne);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const ne = 'cdk-overlay-container';
              if (this._platform.isBrowser || (0, te.Oy)()) {
                const ze = this._document.querySelectorAll(
                  `.${ne}[platform="server"], .${ne}[platform="test"]`,
                );
                for (let ve = 0; ve < ze.length; ve++) ze[ve].remove();
              }
              const Me = this._document.createElement('div');
              Me.classList.add(ne),
                (0, te.Oy)()
                  ? Me.setAttribute('platform', 'test')
                  : this._platform.isBrowser ||
                    Me.setAttribute('platform', 'server'),
                this._document.body.appendChild(Me),
                (this._containerElement = Me);
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(N.LFG(x.K0), N.LFG(te.t4));
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })();
      class je {
        constructor(W, ne, Me, ze, ve, be, U, Ie, de, me = !1) {
          (this._portalOutlet = W),
            (this._host = ne),
            (this._pane = Me),
            (this._config = ze),
            (this._ngZone = ve),
            (this._keyboardDispatcher = be),
            (this._document = U),
            (this._location = Ie),
            (this._outsideClickDispatcher = de),
            (this._animationsDisabled = me),
            (this._backdropElement = null),
            (this._backdropClick = new re.x()),
            (this._attachments = new re.x()),
            (this._detachments = new re.x()),
            (this._locationChanges = He.w0.EMPTY),
            (this._backdropClickHandler = pe => this._backdropClick.next(pe)),
            (this._backdropTransitionendHandler = pe => {
              this._disposeBackdrop(pe.target);
            }),
            (this._keydownEvents = new re.x()),
            (this._outsidePointerEvents = new re.x()),
            ze.scrollStrategy &&
              ((this._scrollStrategy = ze.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = ze.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(W) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const ne = this._portalOutlet.attach(W);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, _e.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose(),
              )),
            this._outsideClickDispatcher.add(this),
            'function' == typeof ne?.onDestroy &&
              ne.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach()),
                  );
              }),
            ne
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const W = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            W
          );
        }
        dispose() {
          const W = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            W && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(W) {
          W !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = W),
            this.hasAttached() && (W.attach(this), this.updatePosition()));
        }
        updateSize(W) {
          (this._config = { ...this._config, ...W }), this._updateElementSize();
        }
        setDirection(W) {
          (this._config = { ...this._config, direction: W }),
            this._updateElementDirection();
        }
        addPanelClass(W) {
          this._pane && this._toggleClasses(this._pane, W, !0);
        }
        removePanelClass(W) {
          this._pane && this._toggleClasses(this._pane, W, !1);
        }
        getDirection() {
          const W = this._config.direction;
          return W ? ('string' == typeof W ? W : W.value) : 'ltr';
        }
        updateScrollStrategy(W) {
          W !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = W),
            this.hasAttached() && (W.attach(this), W.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const W = this._pane.style;
          (W.width = (0, se.HM)(this._config.width)),
            (W.height = (0, se.HM)(this._config.height)),
            (W.minWidth = (0, se.HM)(this._config.minWidth)),
            (W.minHeight = (0, se.HM)(this._config.minHeight)),
            (W.maxWidth = (0, se.HM)(this._config.maxWidth)),
            (W.maxHeight = (0, se.HM)(this._config.maxHeight));
        }
        _togglePointerEvents(W) {
          this._pane.style.pointerEvents = W ? '' : 'none';
        }
        _attachBackdrop() {
          const W = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                'cdk-overlay-backdrop-noop-animation',
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0,
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host,
            ),
            this._backdropElement.addEventListener(
              'click',
              this._backdropClickHandler,
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < 'u'
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(W);
                  });
                })
              : this._backdropElement.classList.add(W);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const W = this._backdropElement;
          if (W) {
            if (this._animationsDisabled) return void this._disposeBackdrop(W);
            W.classList.remove('cdk-overlay-backdrop-showing'),
              this._ngZone.runOutsideAngular(() => {
                W.addEventListener(
                  'transitionend',
                  this._backdropTransitionendHandler,
                );
              }),
              (W.style.pointerEvents = 'none'),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(W);
                }, 500),
              ));
          }
        }
        _toggleClasses(W, ne, Me) {
          const ze = (0, se.Eq)(ne || []).filter(ve => !!ve);
          ze.length &&
            (Me ? W.classList.add(...ze) : W.classList.remove(...ze));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const W = this._ngZone.onStable
              .pipe((0, ce.R)((0, Ue.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1,
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  W.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const W = this._scrollStrategy;
          W && (W.disable(), W.detach && W.detach());
        }
        _disposeBackdrop(W) {
          W &&
            (W.removeEventListener('click', this._backdropClickHandler),
            W.removeEventListener(
              'transitionend',
              this._backdropTransitionendHandler,
            ),
            W.remove(),
            this._backdropElement === W && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const ye = 'cdk-overlay-connected-position-bounding-box',
        Re = /([A-Za-z%]+)$/;
      class Le {
        get positions() {
          return this._preferredPositions;
        }
        constructor(W, ne, Me, ze, ve) {
          (this._viewportRuler = ne),
            (this._document = Me),
            (this._platform = ze),
            (this._overlayContainer = ve),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new re.x()),
            (this._resizeSubscription = He.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(W);
        }
        attach(W) {
          this._validatePositions(),
            W.hostElement.classList.add(ye),
            (this._overlayRef = W),
            (this._boundingBox = W.hostElement),
            (this._pane = W.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const W = this._originRect,
            ne = this._overlayRect,
            Me = this._viewportRect,
            ze = this._containerRect,
            ve = [];
          let be;
          for (let U of this._preferredPositions) {
            let Ie = this._getOriginPoint(W, ze, U),
              de = this._getOverlayPoint(Ie, ne, U),
              me = this._getOverlayFit(de, ne, Me, U);
            if (me.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(U, Ie);
            this._canFitWithFlexibleDimensions(me, de, Me)
              ? ve.push({
                  position: U,
                  origin: Ie,
                  overlayRect: ne,
                  boundingBoxRect: this._calculateBoundingBoxRect(Ie, U),
                })
              : (!be || be.overlayFit.visibleArea < me.visibleArea) &&
                (be = {
                  overlayFit: me,
                  overlayPoint: de,
                  originPoint: Ie,
                  position: U,
                  overlayRect: ne,
                });
          }
          if (ve.length) {
            let U = null,
              Ie = -1;
            for (const de of ve) {
              const me =
                de.boundingBoxRect.width *
                de.boundingBoxRect.height *
                (de.position.weight || 1);
              me > Ie && ((Ie = me), (U = de));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(U.position, U.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(be.position, be.originPoint)
            );
          this._applyPosition(be.position, be.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              a(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(ye),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const W = this._lastPosition;
          if (W) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const ne = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              W,
            );
            this._applyPosition(W, ne);
          } else this.apply();
        }
        withScrollableContainers(W) {
          return (this._scrollables = W), this;
        }
        withPositions(W) {
          return (
            (this._preferredPositions = W),
            -1 === W.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(W) {
          return (this._viewportMargin = W), this;
        }
        withFlexibleDimensions(W = !0) {
          return (this._hasFlexibleDimensions = W), this;
        }
        withGrowAfterOpen(W = !0) {
          return (this._growAfterOpen = W), this;
        }
        withPush(W = !0) {
          return (this._canPush = W), this;
        }
        withLockedPosition(W = !0) {
          return (this._positionLocked = W), this;
        }
        setOrigin(W) {
          return (this._origin = W), this;
        }
        withDefaultOffsetX(W) {
          return (this._offsetX = W), this;
        }
        withDefaultOffsetY(W) {
          return (this._offsetY = W), this;
        }
        withTransformOriginOn(W) {
          return (this._transformOriginSelector = W), this;
        }
        _getOriginPoint(W, ne, Me) {
          let ze, ve;
          if ('center' == Me.originX) ze = W.left + W.width / 2;
          else {
            const be = this._isRtl() ? W.right : W.left,
              U = this._isRtl() ? W.left : W.right;
            ze = 'start' == Me.originX ? be : U;
          }
          return (
            ne.left < 0 && (ze -= ne.left),
            (ve =
              'center' == Me.originY
                ? W.top + W.height / 2
                : 'top' == Me.originY
                ? W.top
                : W.bottom),
            ne.top < 0 && (ve -= ne.top),
            { x: ze, y: ve }
          );
        }
        _getOverlayPoint(W, ne, Me) {
          let ze, ve;
          return (
            (ze =
              'center' == Me.overlayX
                ? -ne.width / 2
                : 'start' === Me.overlayX
                ? this._isRtl()
                  ? -ne.width
                  : 0
                : this._isRtl()
                ? 0
                : -ne.width),
            (ve =
              'center' == Me.overlayY
                ? -ne.height / 2
                : 'top' == Me.overlayY
                ? 0
                : -ne.height),
            { x: W.x + ze, y: W.y + ve }
          );
        }
        _getOverlayFit(W, ne, Me, ze) {
          const ve = Ke(ne);
          let { x: be, y: U } = W,
            Ie = this._getOffset(ze, 'x'),
            de = this._getOffset(ze, 'y');
          Ie && (be += Ie), de && (U += de);
          let Xe = 0 - U,
            xt = U + ve.height - Me.height,
            Ot = this._subtractOverflows(
              ve.width,
              0 - be,
              be + ve.width - Me.width,
            ),
            Dn = this._subtractOverflows(ve.height, Xe, xt),
            Te = Ot * Dn;
          return {
            visibleArea: Te,
            isCompletelyWithinViewport: ve.width * ve.height === Te,
            fitsInViewportVertically: Dn === ve.height,
            fitsInViewportHorizontally: Ot == ve.width,
          };
        }
        _canFitWithFlexibleDimensions(W, ne, Me) {
          if (this._hasFlexibleDimensions) {
            const ze = Me.bottom - ne.y,
              ve = Me.right - ne.x,
              be = ot(this._overlayRef.getConfig().minHeight),
              U = ot(this._overlayRef.getConfig().minWidth);
            return (
              (W.fitsInViewportVertically || (null != be && be <= ze)) &&
              (W.fitsInViewportHorizontally || (null != U && U <= ve))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(W, ne, Me) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: W.x + this._previousPushAmount.x,
              y: W.y + this._previousPushAmount.y,
            };
          const ze = Ke(ne),
            ve = this._viewportRect,
            be = Math.max(W.x + ze.width - ve.width, 0),
            U = Math.max(W.y + ze.height - ve.height, 0),
            Ie = Math.max(ve.top - Me.top - W.y, 0),
            de = Math.max(ve.left - Me.left - W.x, 0);
          let me = 0,
            pe = 0;
          return (
            (me =
              ze.width <= ve.width
                ? de || -be
                : W.x < this._viewportMargin
                ? ve.left - Me.left - W.x
                : 0),
            (pe =
              ze.height <= ve.height
                ? Ie || -U
                : W.y < this._viewportMargin
                ? ve.top - Me.top - W.y
                : 0),
            (this._previousPushAmount = { x: me, y: pe }),
            { x: W.x + me, y: W.y + pe }
          );
        }
        _applyPosition(W, ne) {
          if (
            (this._setTransformOrigin(W),
            this._setOverlayElementStyles(ne, W),
            this._setBoundingBoxStyles(ne, W),
            W.panelClass && this._addPanelClasses(W.panelClass),
            (this._lastPosition = W),
            this._positionChanges.observers.length)
          ) {
            const Me = this._getScrollVisibility(),
              ze = new At(W, Me);
            this._positionChanges.next(ze);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(W) {
          if (!this._transformOriginSelector) return;
          const ne = this._boundingBox.querySelectorAll(
            this._transformOriginSelector,
          );
          let Me,
            ze = W.overlayY;
          Me =
            'center' === W.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === W.overlayX
                ? 'right'
                : 'left'
              : 'start' === W.overlayX
              ? 'left'
              : 'right';
          for (let ve = 0; ve < ne.length; ve++)
            ne[ve].style.transformOrigin = `${Me} ${ze}`;
        }
        _calculateBoundingBoxRect(W, ne) {
          const Me = this._viewportRect,
            ze = this._isRtl();
          let ve, be, U, me, pe, Xe;
          if ('top' === ne.overlayY)
            (be = W.y), (ve = Me.height - be + this._viewportMargin);
          else if ('bottom' === ne.overlayY)
            (U = Me.height - W.y + 2 * this._viewportMargin),
              (ve = Me.height - U + this._viewportMargin);
          else {
            const xt = Math.min(Me.bottom - W.y + Me.top, W.y),
              Ot = this._lastBoundingBoxSize.height;
            (ve = 2 * xt),
              (be = W.y - xt),
              ve > Ot &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (be = W.y - Ot / 2);
          }
          if (('end' === ne.overlayX && !ze) || ('start' === ne.overlayX && ze))
            (Xe = Me.width - W.x + this._viewportMargin),
              (me = W.x - this._viewportMargin);
          else if (
            ('start' === ne.overlayX && !ze) ||
            ('end' === ne.overlayX && ze)
          )
            (pe = W.x), (me = Me.right - W.x);
          else {
            const xt = Math.min(Me.right - W.x + Me.left, W.x),
              Ot = this._lastBoundingBoxSize.width;
            (me = 2 * xt),
              (pe = W.x - xt),
              me > Ot &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (pe = W.x - Ot / 2);
          }
          return {
            top: be,
            left: pe,
            bottom: U,
            right: Xe,
            width: me,
            height: ve,
          };
        }
        _setBoundingBoxStyles(W, ne) {
          const Me = this._calculateBoundingBoxRect(W, ne);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((Me.height = Math.min(
              Me.height,
              this._lastBoundingBoxSize.height,
            )),
            (Me.width = Math.min(Me.width, this._lastBoundingBoxSize.width)));
          const ze = {};
          if (this._hasExactPosition())
            (ze.top = ze.left = '0'),
              (ze.bottom = ze.right = ze.maxHeight = ze.maxWidth = ''),
              (ze.width = ze.height = '100%');
          else {
            const ve = this._overlayRef.getConfig().maxHeight,
              be = this._overlayRef.getConfig().maxWidth;
            (ze.height = (0, se.HM)(Me.height)),
              (ze.top = (0, se.HM)(Me.top)),
              (ze.bottom = (0, se.HM)(Me.bottom)),
              (ze.width = (0, se.HM)(Me.width)),
              (ze.left = (0, se.HM)(Me.left)),
              (ze.right = (0, se.HM)(Me.right)),
              (ze.alignItems =
                'center' === ne.overlayX
                  ? 'center'
                  : 'end' === ne.overlayX
                  ? 'flex-end'
                  : 'flex-start'),
              (ze.justifyContent =
                'center' === ne.overlayY
                  ? 'center'
                  : 'bottom' === ne.overlayY
                  ? 'flex-end'
                  : 'flex-start'),
              ve && (ze.maxHeight = (0, se.HM)(ve)),
              be && (ze.maxWidth = (0, se.HM)(be));
          }
          (this._lastBoundingBoxSize = Me), a(this._boundingBox.style, ze);
        }
        _resetBoundingBoxStyles() {
          a(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          a(this._pane.style, {
            top: '',
            left: '',
            bottom: '',
            right: '',
            position: '',
            transform: '',
          });
        }
        _setOverlayElementStyles(W, ne) {
          const Me = {},
            ze = this._hasExactPosition(),
            ve = this._hasFlexibleDimensions,
            be = this._overlayRef.getConfig();
          if (ze) {
            const me = this._viewportRuler.getViewportScrollPosition();
            a(Me, this._getExactOverlayY(ne, W, me)),
              a(Me, this._getExactOverlayX(ne, W, me));
          } else Me.position = 'static';
          let U = '',
            Ie = this._getOffset(ne, 'x'),
            de = this._getOffset(ne, 'y');
          Ie && (U += `translateX(${Ie}px) `),
            de && (U += `translateY(${de}px)`),
            (Me.transform = U.trim()),
            be.maxHeight &&
              (ze
                ? (Me.maxHeight = (0, se.HM)(be.maxHeight))
                : ve && (Me.maxHeight = '')),
            be.maxWidth &&
              (ze
                ? (Me.maxWidth = (0, se.HM)(be.maxWidth))
                : ve && (Me.maxWidth = '')),
            a(this._pane.style, Me);
        }
        _getExactOverlayY(W, ne, Me) {
          let ze = { top: '', bottom: '' },
            ve = this._getOverlayPoint(ne, this._overlayRect, W);
          return (
            this._isPushed &&
              (ve = this._pushOverlayOnScreen(ve, this._overlayRect, Me)),
            'bottom' === W.overlayY
              ? (ze.bottom =
                  this._document.documentElement.clientHeight -
                  (ve.y + this._overlayRect.height) +
                  'px')
              : (ze.top = (0, se.HM)(ve.y)),
            ze
          );
        }
        _getExactOverlayX(W, ne, Me) {
          let be,
            ze = { left: '', right: '' },
            ve = this._getOverlayPoint(ne, this._overlayRect, W);
          return (
            this._isPushed &&
              (ve = this._pushOverlayOnScreen(ve, this._overlayRect, Me)),
            (be = this._isRtl()
              ? 'end' === W.overlayX
                ? 'left'
                : 'right'
              : 'end' === W.overlayX
              ? 'right'
              : 'left'),
            'right' === be
              ? (ze.right =
                  this._document.documentElement.clientWidth -
                  (ve.x + this._overlayRect.width) +
                  'px')
              : (ze.left = (0, se.HM)(ve.x)),
            ze
          );
        }
        _getScrollVisibility() {
          const W = this._getOriginRect(),
            ne = this._pane.getBoundingClientRect(),
            Me = this._scrollables.map(ze =>
              ze.getElementRef().nativeElement.getBoundingClientRect(),
            );
          return {
            isOriginClipped: ie(W, Me),
            isOriginOutsideView: K(W, Me),
            isOverlayClipped: ie(ne, Me),
            isOverlayOutsideView: K(ne, Me),
          };
        }
        _subtractOverflows(W, ...ne) {
          return ne.reduce((Me, ze) => Me - Math.max(ze, 0), W);
        }
        _getNarrowedViewportRect() {
          const W = this._document.documentElement.clientWidth,
            ne = this._document.documentElement.clientHeight,
            Me = this._viewportRuler.getViewportScrollPosition();
          return {
            top: Me.top + this._viewportMargin,
            left: Me.left + this._viewportMargin,
            right: Me.left + W - this._viewportMargin,
            bottom: Me.top + ne - this._viewportMargin,
            width: W - 2 * this._viewportMargin,
            height: ne - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(W, ne) {
          return 'x' === ne
            ? null == W.offsetX
              ? this._offsetX
              : W.offsetX
            : null == W.offsetY
            ? this._offsetY
            : W.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(W) {
          this._pane &&
            (0, se.Eq)(W).forEach(ne => {
              '' !== ne &&
                -1 === this._appliedPanelClasses.indexOf(ne) &&
                (this._appliedPanelClasses.push(ne),
                this._pane.classList.add(ne));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach(W => {
              this._pane.classList.remove(W);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const W = this._origin;
          if (W instanceof N.SBq)
            return W.nativeElement.getBoundingClientRect();
          if (W instanceof Element) return W.getBoundingClientRect();
          const ne = W.width || 0,
            Me = W.height || 0;
          return {
            top: W.y,
            bottom: W.y + Me,
            left: W.x,
            right: W.x + ne,
            height: Me,
            width: ne,
          };
        }
      }
      function a(it, W) {
        for (let ne in W) W.hasOwnProperty(ne) && (it[ne] = W[ne]);
        return it;
      }
      function ot(it) {
        if ('number' != typeof it && null != it) {
          const [W, ne] = it.split(Re);
          return ne && 'px' !== ne ? null : parseFloat(W);
        }
        return it || null;
      }
      function Ke(it) {
        return {
          top: Math.floor(it.top),
          right: Math.floor(it.right),
          bottom: Math.floor(it.bottom),
          left: Math.floor(it.left),
          width: Math.floor(it.width),
          height: Math.floor(it.height),
        };
      }
      const Pt = 'cdk-global-overlay-wrapper';
      class an {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._alignItems = ''),
            (this._xPosition = ''),
            (this._xOffset = ''),
            (this._width = ''),
            (this._height = ''),
            (this._isDisposed = !1);
        }
        attach(W) {
          const ne = W.getConfig();
          (this._overlayRef = W),
            this._width && !ne.width && W.updateSize({ width: this._width }),
            this._height &&
              !ne.height &&
              W.updateSize({ height: this._height }),
            W.hostElement.classList.add(Pt),
            (this._isDisposed = !1);
        }
        top(W = '') {
          return (
            (this._bottomOffset = ''),
            (this._topOffset = W),
            (this._alignItems = 'flex-start'),
            this
          );
        }
        left(W = '') {
          return (this._xOffset = W), (this._xPosition = 'left'), this;
        }
        bottom(W = '') {
          return (
            (this._topOffset = ''),
            (this._bottomOffset = W),
            (this._alignItems = 'flex-end'),
            this
          );
        }
        right(W = '') {
          return (this._xOffset = W), (this._xPosition = 'right'), this;
        }
        start(W = '') {
          return (this._xOffset = W), (this._xPosition = 'start'), this;
        }
        end(W = '') {
          return (this._xOffset = W), (this._xPosition = 'end'), this;
        }
        width(W = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: W })
              : (this._width = W),
            this
          );
        }
        height(W = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: W })
              : (this._height = W),
            this
          );
        }
        centerHorizontally(W = '') {
          return this.left(W), (this._xPosition = 'center'), this;
        }
        centerVertically(W = '') {
          return this.top(W), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const W = this._overlayRef.overlayElement.style,
            ne = this._overlayRef.hostElement.style,
            Me = this._overlayRef.getConfig(),
            { width: ze, height: ve, maxWidth: be, maxHeight: U } = Me,
            Ie = !(
              ('100%' !== ze && '100vw' !== ze) ||
              (be && '100%' !== be && '100vw' !== be)
            ),
            de = !(
              ('100%' !== ve && '100vh' !== ve) ||
              (U && '100%' !== U && '100vh' !== U)
            ),
            me = this._xPosition,
            pe = this._xOffset,
            Xe = 'rtl' === this._overlayRef.getConfig().direction;
          let xt = '',
            Ot = '',
            Dn = '';
          Ie
            ? (Dn = 'flex-start')
            : 'center' === me
            ? ((Dn = 'center'), Xe ? (Ot = pe) : (xt = pe))
            : Xe
            ? 'left' === me || 'end' === me
              ? ((Dn = 'flex-end'), (xt = pe))
              : ('right' === me || 'start' === me) &&
                ((Dn = 'flex-start'), (Ot = pe))
            : 'left' === me || 'start' === me
            ? ((Dn = 'flex-start'), (xt = pe))
            : ('right' === me || 'end' === me) &&
              ((Dn = 'flex-end'), (Ot = pe)),
            (W.position = this._cssPosition),
            (W.marginLeft = Ie ? '0' : xt),
            (W.marginTop = de ? '0' : this._topOffset),
            (W.marginBottom = this._bottomOffset),
            (W.marginRight = Ie ? '0' : Ot),
            (ne.justifyContent = Dn),
            (ne.alignItems = de ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const W = this._overlayRef.overlayElement.style,
            ne = this._overlayRef.hostElement,
            Me = ne.style;
          ne.classList.remove(Pt),
            (Me.justifyContent =
              Me.alignItems =
              W.marginTop =
              W.marginBottom =
              W.marginLeft =
              W.marginRight =
              W.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let ut = (() => {
          class it {
            constructor(ne, Me, ze, ve) {
              (this._viewportRuler = ne),
                (this._document = Me),
                (this._platform = ze),
                (this._overlayContainer = ve);
            }
            global() {
              return new an();
            }
            flexibleConnectedTo(ne) {
              return new Le(
                ne,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer,
              );
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(
                N.LFG(s.rL),
                N.LFG(x.K0),
                N.LFG(te.t4),
                N.LFG(xe),
              );
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })(),
        Zt = 0,
        Ct = (() => {
          class it {
            constructor(ne, Me, ze, ve, be, U, Ie, de, me, pe, Xe, xt) {
              (this.scrollStrategies = ne),
                (this._overlayContainer = Me),
                (this._componentFactoryResolver = ze),
                (this._positionBuilder = ve),
                (this._keyboardDispatcher = be),
                (this._injector = U),
                (this._ngZone = Ie),
                (this._document = de),
                (this._directionality = me),
                (this._location = pe),
                (this._outsideClickDispatcher = Xe),
                (this._animationsModuleType = xt);
            }
            create(ne) {
              const Me = this._createHostElement(),
                ze = this._createPaneElement(Me),
                ve = this._createPortalOutlet(ze),
                be = new Ae(ne);
              return (
                (be.direction = be.direction || this._directionality.value),
                new je(
                  ve,
                  Me,
                  ze,
                  be,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  'NoopAnimations' === this._animationsModuleType,
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(ne) {
              const Me = this._document.createElement('div');
              return (
                (Me.id = 'cdk-overlay-' + Zt++),
                Me.classList.add('cdk-overlay-pane'),
                ne.appendChild(Me),
                Me
              );
            }
            _createHostElement() {
              const ne = this._document.createElement('div');
              return (
                this._overlayContainer.getContainerElement().appendChild(ne), ne
              );
            }
            _createPortalOutlet(ne) {
              return (
                this._appRef || (this._appRef = this._injector.get(N.z2F)),
                new fe.u0(
                  ne,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document,
                )
              );
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(
                N.LFG(X),
                N.LFG(xe),
                N.LFG(N._Vd),
                N.LFG(ut),
                N.LFG(Ge),
                N.LFG(N.zs3),
                N.LFG(N.R0b),
                N.LFG(x.K0),
                N.LFG(ae.Is),
                N.LFG(x.Ye),
                N.LFG(Ye),
                N.LFG(N.QbO, 8),
              );
            }),
            (it.ɵprov = N.Yz7({
              token: it,
              factory: it.ɵfac,
              providedIn: 'root',
            })),
            it
          );
        })();
      const yt = [
          {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top',
          },
          {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'top',
            overlayX: 'end',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'bottom',
            overlayX: 'end',
            overlayY: 'top',
          },
        ],
        Qt = new N.OlP('cdk-connected-overlay-scroll-strategy');
      let dn = (() => {
          class it {
            constructor(ne) {
              this.elementRef = ne;
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(N.Y36(N.SBq));
            }),
            (it.ɵdir = N.lG2({
              type: it,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
              standalone: !0,
            })),
            it
          );
        })(),
        wn = (() => {
          class it {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(ne) {
              (this._offsetX = ne),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(ne) {
              (this._offsetY = ne),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(ne) {
              this._hasBackdrop = (0, se.Ig)(ne);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(ne) {
              this._lockPosition = (0, se.Ig)(ne);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(ne) {
              this._flexibleDimensions = (0, se.Ig)(ne);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(ne) {
              this._growAfterOpen = (0, se.Ig)(ne);
            }
            get push() {
              return this._push;
            }
            set push(ne) {
              this._push = (0, se.Ig)(ne);
            }
            constructor(ne, Me, ze, ve, be) {
              (this._overlay = ne),
                (this._dir = be),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = He.w0.EMPTY),
                (this._attachSubscription = He.w0.EMPTY),
                (this._detachSubscription = He.w0.EMPTY),
                (this._positionSubscription = He.w0.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new N.vpe()),
                (this.positionChange = new N.vpe()),
                (this.attach = new N.vpe()),
                (this.detach = new N.vpe()),
                (this.overlayKeydown = new N.vpe()),
                (this.overlayOutsideClick = new N.vpe()),
                (this._templatePortal = new fe.UE(Me, ze)),
                (this._scrollStrategyFactory = ve),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(ne) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                ne.origin && this.open && this._position.apply()),
                ne.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = yt);
              const ne = (this._overlayRef = this._overlay.create(
                this._buildConfig(),
              ));
              (this._attachSubscription = ne
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = ne
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                ne.keydownEvents().subscribe(Me => {
                  this.overlayKeydown.next(Me),
                    Me.keyCode === rt.hY &&
                      !this.disableClose &&
                      !(0, rt.Vb)(Me) &&
                      (Me.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe(Me => {
                  this.overlayOutsideClick.next(Me);
                });
            }
            _buildConfig() {
              const ne = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                Me = new Ae({
                  direction: this._dir,
                  positionStrategy: ne,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (Me.width = this.width),
                (this.height || 0 === this.height) && (Me.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (Me.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (Me.minHeight = this.minHeight),
                this.backdropClass && (Me.backdropClass = this.backdropClass),
                this.panelClass && (Me.panelClass = this.panelClass),
                Me
              );
            }
            _updatePositionStrategy(ne) {
              const Me = this.positions.map(ze => ({
                originX: ze.originX,
                originY: ze.originY,
                overlayX: ze.overlayX,
                overlayY: ze.overlayY,
                offsetX: ze.offsetX || this.offsetX,
                offsetY: ze.offsetY || this.offsetY,
                panelClass: ze.panelClass || void 0,
              }));
              return ne
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(Me)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const ne = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin(),
                );
              return this._updatePositionStrategy(ne), ne;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof dn
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe(ne => {
                        this.backdropClick.emit(ne);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (0, he.o)(() => this.positionChange.observers.length > 0),
                    )
                    .subscribe(ne => {
                      this.positionChange.emit(ne),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (it.ɵfac = function (ne) {
              return new (ne || it)(
                N.Y36(Ct),
                N.Y36(N.Rgc),
                N.Y36(N.s_b),
                N.Y36(Qt),
                N.Y36(ae.Is, 8),
              );
            }),
            (it.ɵdir = N.lG2({
              type: it,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                positionStrategy: [
                  'cdkConnectedOverlayPositionStrategy',
                  'positionStrategy',
                ],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: [
                  'cdkConnectedOverlayBackdropClass',
                  'backdropClass',
                ],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                viewportMargin: [
                  'cdkConnectedOverlayViewportMargin',
                  'viewportMargin',
                ],
                scrollStrategy: [
                  'cdkConnectedOverlayScrollStrategy',
                  'scrollStrategy',
                ],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: [
                  'cdkConnectedOverlayDisableClose',
                  'disableClose',
                ],
                transformOriginSelector: [
                  'cdkConnectedOverlayTransformOriginOn',
                  'transformOriginSelector',
                ],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: [
                  'cdkConnectedOverlayLockPosition',
                  'lockPosition',
                ],
                flexibleDimensions: [
                  'cdkConnectedOverlayFlexibleDimensions',
                  'flexibleDimensions',
                ],
                growAfterOpen: [
                  'cdkConnectedOverlayGrowAfterOpen',
                  'growAfterOpen',
                ],
                push: ['cdkConnectedOverlayPush', 'push'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              standalone: !0,
              features: [N.TTD],
            })),
            it
          );
        })();
      const en = {
        provide: Qt,
        deps: [Ct],
        useFactory: function Zn(it) {
          return () => it.scrollStrategies.reposition();
        },
      };
      let Bt = (() => {
        class it {}
        return (
          (it.ɵfac = function (ne) {
            return new (ne || it)();
          }),
          (it.ɵmod = N.oAB({ type: it })),
          (it.ɵinj = N.cJS({
            providers: [Ct, en],
            imports: [ae.vT, fe.eL, s.Cl, s.Cl],
          })),
          it
        );
      })();
    },
    3353: (Tt, Pe, D) => {
      D.d(Pe, {
        Mq: () => Ue,
        Oy: () => K,
        _i: () => rt,
        ht: () => st,
        i$: () => fe,
        kV: () => ft,
        qK: () => ce,
        sA: () => mt,
        t4: () => se,
      });
      var s = D(4650),
        x = D(6895);
      let N;
      try {
        N = typeof Intl < 'u' && Intl.v8BreakIterator;
      } catch {
        N = !1;
      }
      let ue,
        se = (() => {
          class ie {
            constructor(X) {
              (this._platformId = X),
                (this.isBrowser = this._platformId
                  ? (0, x.NF)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !N) &&
                  typeof CSS < 'u' &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !('MSStream' in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (ie.ɵfac = function (X) {
              return new (X || ie)(s.LFG(s.Lbi));
            }),
            (ie.ɵprov = s.Yz7({
              token: ie,
              factory: ie.ɵfac,
              providedIn: 'root',
            })),
            ie
          );
        })();
      const _e = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function ce() {
        if (ue) return ue;
        if ('object' != typeof document || !document)
          return (ue = new Set(_e)), ue;
        let ie = document.createElement('input');
        return (
          (ue = new Set(
            _e.filter(ee => (ie.setAttribute('type', ee), ie.type === ee)),
          )),
          ue
        );
      }
      let he, re, He, pt;
      function fe(ie) {
        return (function ae() {
          if (null == he && typeof window < 'u')
            try {
              window.addEventListener(
                'test',
                null,
                Object.defineProperty({}, 'passive', { get: () => (he = !0) }),
              );
            } finally {
              he = he || !1;
            }
          return he;
        })()
          ? ie
          : !!ie.capture;
      }
      function Ue() {
        if (null == He) {
          if (
            'object' != typeof document ||
            !document ||
            'function' != typeof Element ||
            !Element
          )
            return (He = !1), He;
          if ('scrollBehavior' in document.documentElement.style) He = !0;
          else {
            const ie = Element.prototype.scrollTo;
            He = !!ie && !/\{\s*\[native code\]\s*\}/.test(ie.toString());
          }
        }
        return He;
      }
      function rt() {
        if ('object' != typeof document || !document) return 0;
        if (null == re) {
          const ie = document.createElement('div'),
            ee = ie.style;
          (ie.dir = 'rtl'),
            (ee.width = '1px'),
            (ee.overflow = 'auto'),
            (ee.visibility = 'hidden'),
            (ee.pointerEvents = 'none'),
            (ee.position = 'absolute');
          const X = document.createElement('div'),
            Ae = X.style;
          (Ae.width = '2px'),
            (Ae.height = '1px'),
            ie.appendChild(X),
            document.body.appendChild(ie),
            (re = 0),
            0 === ie.scrollLeft &&
              ((ie.scrollLeft = 1), (re = 0 === ie.scrollLeft ? 1 : 2)),
            ie.remove();
        }
        return re;
      }
      function ft(ie) {
        if (
          (function Ne() {
            if (null == pt) {
              const ie = typeof document < 'u' ? document.head : null;
              pt = !(!ie || (!ie.createShadowRoot && !ie.attachShadow));
            }
            return pt;
          })()
        ) {
          const ee = ie.getRootNode ? ie.getRootNode() : null;
          if (typeof ShadowRoot < 'u' && ShadowRoot && ee instanceof ShadowRoot)
            return ee;
        }
        return null;
      }
      function st() {
        let ie =
          typeof document < 'u' && document ? document.activeElement : null;
        for (; ie && ie.shadowRoot; ) {
          const ee = ie.shadowRoot.activeElement;
          if (ee === ie) break;
          ie = ee;
        }
        return ie;
      }
      function mt(ie) {
        return ie.composedPath ? ie.composedPath()[0] : ie.target;
      }
      function K() {
        return (
          (typeof __karma__ < 'u' && !!__karma__) ||
          (typeof jasmine < 'u' && !!jasmine) ||
          (typeof jest < 'u' && !!jest) ||
          (typeof Mocha < 'u' && !!Mocha)
        );
      }
    },
    4080: (Tt, Pe, D) => {
      D.d(Pe, {
        C5: () => ae,
        Pl: () => st,
        UE: () => fe,
        eL: () => K,
        en: () => He,
        u0: () => rt,
      });
      var s = D(4650),
        x = D(6895);
      class he {
        attach(X) {
          return (this._attachedHost = X), X.attach(this);
        }
        detach() {
          let X = this._attachedHost;
          null != X && ((this._attachedHost = null), X.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(X) {
          this._attachedHost = X;
        }
      }
      class ae extends he {
        constructor(X, Ae, nt, dt, At) {
          super(),
            (this.component = X),
            (this.viewContainerRef = Ae),
            (this.injector = nt),
            (this.componentFactoryResolver = dt),
            (this.projectableNodes = At);
        }
      }
      class fe extends he {
        constructor(X, Ae, nt, dt) {
          super(),
            (this.templateRef = X),
            (this.viewContainerRef = Ae),
            (this.context = nt),
            (this.injector = dt);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(X, Ae = this.context) {
          return (this.context = Ae), super.attach(X);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class re extends he {
        constructor(X) {
          super(), (this.element = X instanceof s.SBq ? X.nativeElement : X);
        }
      }
      class He {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(X) {
          return X instanceof ae
            ? ((this._attachedPortal = X), this.attachComponentPortal(X))
            : X instanceof fe
            ? ((this._attachedPortal = X), this.attachTemplatePortal(X))
            : this.attachDomPortal && X instanceof re
            ? ((this._attachedPortal = X), this.attachDomPortal(X))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(X) {
          this._disposeFn = X;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class rt extends He {
        constructor(X, Ae, nt, dt, At) {
          super(),
            (this.outletElement = X),
            (this._componentFactoryResolver = Ae),
            (this._appRef = nt),
            (this._defaultInjector = dt),
            (this.attachDomPortal = _t => {
              const Gt = _t.element,
                wt = this._document.createComment('dom-portal');
              Gt.parentNode.insertBefore(wt, Gt),
                this.outletElement.appendChild(Gt),
                (this._attachedPortal = _t),
                super.setDisposeFn(() => {
                  wt.parentNode && wt.parentNode.replaceChild(Gt, wt);
                });
            }),
            (this._document = At);
        }
        attachComponentPortal(X) {
          const nt = (
            X.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(X.component);
          let dt;
          return (
            X.viewContainerRef
              ? ((dt = X.viewContainerRef.createComponent(
                  nt,
                  X.viewContainerRef.length,
                  X.injector || X.viewContainerRef.injector,
                  X.projectableNodes || void 0,
                )),
                this.setDisposeFn(() => dt.destroy()))
              : ((dt = nt.create(
                  X.injector || this._defaultInjector || s.zs3.NULL,
                )),
                this._appRef.attachView(dt.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(dt.hostView),
                    dt.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(dt)),
            (this._attachedPortal = X),
            dt
          );
        }
        attachTemplatePortal(X) {
          let Ae = X.viewContainerRef,
            nt = Ae.createEmbeddedView(X.templateRef, X.context, {
              injector: X.injector,
            });
          return (
            nt.rootNodes.forEach(dt => this.outletElement.appendChild(dt)),
            nt.detectChanges(),
            this.setDisposeFn(() => {
              let dt = Ae.indexOf(nt);
              -1 !== dt && Ae.remove(dt);
            }),
            (this._attachedPortal = X),
            nt
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(X) {
          return X.hostView.rootNodes[0];
        }
      }
      let st = (() => {
          class ee extends He {
            constructor(Ae, nt, dt) {
              super(),
                (this._componentFactoryResolver = Ae),
                (this._viewContainerRef = nt),
                (this._isInitialized = !1),
                (this.attached = new s.vpe()),
                (this.attachDomPortal = At => {
                  const _t = At.element,
                    Gt = this._document.createComment('dom-portal');
                  At.setAttachedHost(this),
                    _t.parentNode.insertBefore(Gt, _t),
                    this._getRootNode().appendChild(_t),
                    (this._attachedPortal = At),
                    super.setDisposeFn(() => {
                      Gt.parentNode && Gt.parentNode.replaceChild(_t, Gt);
                    });
                }),
                (this._document = dt);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(Ae) {
              (this.hasAttached() && !Ae && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                Ae && super.attach(Ae),
                (this._attachedPortal = Ae || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(Ae) {
              Ae.setAttachedHost(this);
              const nt =
                  null != Ae.viewContainerRef
                    ? Ae.viewContainerRef
                    : this._viewContainerRef,
                At = (
                  Ae.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(Ae.component),
                _t = nt.createComponent(
                  At,
                  nt.length,
                  Ae.injector || nt.injector,
                  Ae.projectableNodes || void 0,
                );
              return (
                nt !== this._viewContainerRef &&
                  this._getRootNode().appendChild(_t.hostView.rootNodes[0]),
                super.setDisposeFn(() => _t.destroy()),
                (this._attachedPortal = Ae),
                (this._attachedRef = _t),
                this.attached.emit(_t),
                _t
              );
            }
            attachTemplatePortal(Ae) {
              Ae.setAttachedHost(this);
              const nt = this._viewContainerRef.createEmbeddedView(
                Ae.templateRef,
                Ae.context,
                { injector: Ae.injector },
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = Ae),
                (this._attachedRef = nt),
                this.attached.emit(nt),
                nt
              );
            }
            _getRootNode() {
              const Ae = this._viewContainerRef.element.nativeElement;
              return Ae.nodeType === Ae.ELEMENT_NODE ? Ae : Ae.parentNode;
            }
          }
          return (
            (ee.ɵfac = function (Ae) {
              return new (Ae || ee)(s.Y36(s._Vd), s.Y36(s.s_b), s.Y36(x.K0));
            }),
            (ee.ɵdir = s.lG2({
              type: ee,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [s.qOj],
            })),
            ee
          );
        })(),
        K = (() => {
          class ee {}
          return (
            (ee.ɵfac = function (Ae) {
              return new (Ae || ee)();
            }),
            (ee.ɵmod = s.oAB({ type: ee })),
            (ee.ɵinj = s.cJS({})),
            ee
          );
        })();
    },
    44: (Tt, Pe, D) => {
      D.d(Pe, { ZD: () => Me, mF: () => Zt, Cl: () => ze, rL: () => Qt });
      var s = D(1281),
        x = D(4650),
        N = D(7579),
        se = D(9646),
        te = D(9751),
        ue = D(8421),
        _e = D(5577),
        ce = D(1144),
        he = D(576),
        ae = D(3268);
      const fe = ['addListener', 'removeListener'],
        re = ['addEventListener', 'removeEventListener'],
        He = ['on', 'off'];
      function Ue(ve, be, U, Ie) {
        if (((0, he.m)(U) && ((Ie = U), (U = void 0)), Ie))
          return Ue(ve, be, U).pipe((0, ae.Z)(Ie));
        const [de, me] = (function ft(ve) {
          return (
            (0, he.m)(ve.addEventListener) && (0, he.m)(ve.removeEventListener)
          );
        })(ve)
          ? re.map(pe => Xe => ve[pe](be, Xe, U))
          : (function pt(ve) {
              return (0, he.m)(ve.addListener) && (0, he.m)(ve.removeListener);
            })(ve)
          ? fe.map(rt(ve, be))
          : (function Ne(ve) {
              return (0, he.m)(ve.on) && (0, he.m)(ve.off);
            })(ve)
          ? He.map(rt(ve, be))
          : [];
        if (!de && (0, ce.z)(ve))
          return (0, _e.z)(pe => Ue(pe, be, U))((0, ue.Xf)(ve));
        if (!de) throw new TypeError('Invalid event target');
        return new te.y(pe => {
          const Xe = (...xt) => pe.next(1 < xt.length ? xt : xt[0]);
          return de(Xe), () => me(Xe);
        });
      }
      function rt(ve, be) {
        return U => Ie => ve[U](be, Ie);
      }
      var st = D(4408),
        mt = D(727);
      const K = {
        schedule(ve) {
          let be = requestAnimationFrame,
            U = cancelAnimationFrame;
          const { delegate: Ie } = K;
          Ie &&
            ((be = Ie.requestAnimationFrame), (U = Ie.cancelAnimationFrame));
          const de = be(me => {
            (U = void 0), ve(me);
          });
          return new mt.w0(() => U?.(de));
        },
        requestAnimationFrame(...ve) {
          const { delegate: be } = K;
          return (be?.requestAnimationFrame || requestAnimationFrame)(...ve);
        },
        cancelAnimationFrame(...ve) {
          const { delegate: be } = K;
          return (be?.cancelAnimationFrame || cancelAnimationFrame)(...ve);
        },
        delegate: void 0,
      };
      var ee = D(640);
      const Ae = new (class X extends ee.v {
        flush(be) {
          this._active = !0;
          const U = this._scheduled;
          this._scheduled = void 0;
          const { actions: Ie } = this;
          let de;
          be = be || Ie.shift();
          do {
            if ((de = be.execute(be.state, be.delay))) break;
          } while ((be = Ie[0]) && be.id === U && Ie.shift());
          if (((this._active = !1), de)) {
            for (; (be = Ie[0]) && be.id === U && Ie.shift(); )
              be.unsubscribe();
            throw de;
          }
        }
      })(
        class ie extends st.o {
          constructor(be, U) {
            super(be, U), (this.scheduler = be), (this.work = U);
          }
          requestAsyncId(be, U, Ie = 0) {
            return null !== Ie && Ie > 0
              ? super.requestAsyncId(be, U, Ie)
              : (be.actions.push(this),
                be._scheduled ||
                  (be._scheduled = K.requestAnimationFrame(() =>
                    be.flush(void 0),
                  )));
          }
          recycleAsyncId(be, U, Ie = 0) {
            var de;
            if (null != Ie ? Ie > 0 : this.delay > 0)
              return super.recycleAsyncId(be, U, Ie);
            const { actions: me } = be;
            null != U &&
              (null === (de = me[me.length - 1]) || void 0 === de
                ? void 0
                : de.id) !== U &&
              (K.cancelAnimationFrame(U), (be._scheduled = void 0));
          }
        },
      );
      var dt = D(3101),
        At = D(4986),
        _t = D(4482),
        Gt = D(5403),
        Ge = D(5963);
      function Ye(ve, be = At.z) {
        return (function wt(ve) {
          return (0, _t.e)((be, U) => {
            let Ie = !1,
              de = null,
              me = null,
              pe = !1;
            const Xe = () => {
                if ((me?.unsubscribe(), (me = null), Ie)) {
                  Ie = !1;
                  const Ot = de;
                  (de = null), U.next(Ot);
                }
                pe && U.complete();
              },
              xt = () => {
                (me = null), pe && U.complete();
              };
            be.subscribe(
              (0, Gt.x)(
                U,
                Ot => {
                  (Ie = !0),
                    (de = Ot),
                    me ||
                      (0, ue.Xf)(ve(Ot)).subscribe((me = (0, Gt.x)(U, Xe, xt)));
                },
                () => {
                  (pe = !0), (!Ie || !me || me.closed) && U.complete();
                },
              ),
            );
          });
        })(() => (0, Ge.H)(ve, be));
      }
      var xe = D(9300),
        je = D(2722),
        ye = D(8675),
        Re = D(3353),
        Le = D(6895),
        a = D(445);
      const ot = ['contentWrapper'],
        Ke = ['*'],
        Lt = new x.OlP('VIRTUAL_SCROLL_STRATEGY');
      let Zt = (() => {
          class ve {
            constructor(U, Ie, de) {
              (this._ngZone = U),
                (this._platform = Ie),
                (this._scrolled = new N.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = de);
            }
            register(U) {
              this.scrollContainers.has(U) ||
                this.scrollContainers.set(
                  U,
                  U.elementScrolled().subscribe(() => this._scrolled.next(U)),
                );
            }
            deregister(U) {
              const Ie = this.scrollContainers.get(U);
              Ie && (Ie.unsubscribe(), this.scrollContainers.delete(U));
            }
            scrolled(U = 20) {
              return this._platform.isBrowser
                ? new te.y(Ie => {
                    this._globalSubscription || this._addGlobalListener();
                    const de =
                      U > 0
                        ? this._scrolled.pipe(Ye(U)).subscribe(Ie)
                        : this._scrolled.subscribe(Ie);
                    return (
                      this._scrolledCount++,
                      () => {
                        de.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, se.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((U, Ie) => this.deregister(Ie)),
                this._scrolled.complete();
            }
            ancestorScrolled(U, Ie) {
              const de = this.getAncestorScrollContainers(U);
              return this.scrolled(Ie).pipe(
                (0, xe.h)(me => !me || de.indexOf(me) > -1),
              );
            }
            getAncestorScrollContainers(U) {
              const Ie = [];
              return (
                this.scrollContainers.forEach((de, me) => {
                  this._scrollableContainsElement(me, U) && Ie.push(me);
                }),
                Ie
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(U, Ie) {
              let de = (0, s.fI)(Ie),
                me = U.getElementRef().nativeElement;
              do {
                if (de == me) return !0;
              } while ((de = de.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Ue(this._getWindow().document, 'scroll').subscribe(() =>
                  this._scrolled.next(),
                ),
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)(x.LFG(x.R0b), x.LFG(Re.t4), x.LFG(Le.K0, 8));
            }),
            (ve.ɵprov = x.Yz7({
              token: ve,
              factory: ve.ɵfac,
              providedIn: 'root',
            })),
            ve
          );
        })(),
        Ct = (() => {
          class ve {
            constructor(U, Ie, de, me) {
              (this.elementRef = U),
                (this.scrollDispatcher = Ie),
                (this.ngZone = de),
                (this.dir = me),
                (this._destroyed = new N.x()),
                (this._elementScrolled = new te.y(pe =>
                  this.ngZone.runOutsideAngular(() =>
                    Ue(this.elementRef.nativeElement, 'scroll')
                      .pipe((0, je.R)(this._destroyed))
                      .subscribe(pe),
                  ),
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(U) {
              const Ie = this.elementRef.nativeElement,
                de = this.dir && 'rtl' == this.dir.value;
              null == U.left && (U.left = de ? U.end : U.start),
                null == U.right && (U.right = de ? U.start : U.end),
                null != U.bottom &&
                  (U.top = Ie.scrollHeight - Ie.clientHeight - U.bottom),
                de && 0 != (0, Re._i)()
                  ? (null != U.left &&
                      (U.right = Ie.scrollWidth - Ie.clientWidth - U.left),
                    2 == (0, Re._i)()
                      ? (U.left = U.right)
                      : 1 == (0, Re._i)() &&
                        (U.left = U.right ? -U.right : U.right))
                  : null != U.right &&
                    (U.left = Ie.scrollWidth - Ie.clientWidth - U.right),
                this._applyScrollToOptions(U);
            }
            _applyScrollToOptions(U) {
              const Ie = this.elementRef.nativeElement;
              (0, Re.Mq)()
                ? Ie.scrollTo(U)
                : (null != U.top && (Ie.scrollTop = U.top),
                  null != U.left && (Ie.scrollLeft = U.left));
            }
            measureScrollOffset(U) {
              const Ie = 'left',
                me = this.elementRef.nativeElement;
              if ('top' == U) return me.scrollTop;
              if ('bottom' == U)
                return me.scrollHeight - me.clientHeight - me.scrollTop;
              const pe = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == U
                  ? (U = pe ? 'right' : Ie)
                  : 'end' == U && (U = pe ? Ie : 'right'),
                pe && 2 == (0, Re._i)()
                  ? U == Ie
                    ? me.scrollWidth - me.clientWidth - me.scrollLeft
                    : me.scrollLeft
                  : pe && 1 == (0, Re._i)()
                  ? U == Ie
                    ? me.scrollLeft + me.scrollWidth - me.clientWidth
                    : -me.scrollLeft
                  : U == Ie
                  ? me.scrollLeft
                  : me.scrollWidth - me.clientWidth - me.scrollLeft
              );
            }
          }
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)(
                x.Y36(x.SBq),
                x.Y36(Zt),
                x.Y36(x.R0b),
                x.Y36(a.Is, 8),
              );
            }),
            (ve.ɵdir = x.lG2({
              type: ve,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
              standalone: !0,
            })),
            ve
          );
        })(),
        Qt = (() => {
          class ve {
            constructor(U, Ie, de) {
              (this._platform = U),
                (this._change = new N.x()),
                (this._changeListener = me => {
                  this._change.next(me);
                }),
                (this._document = de),
                Ie.runOutsideAngular(() => {
                  if (U.isBrowser) {
                    const me = this._getWindow();
                    me.addEventListener('resize', this._changeListener),
                      me.addEventListener(
                        'orientationchange',
                        this._changeListener,
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const U = this._getWindow();
                U.removeEventListener('resize', this._changeListener),
                  U.removeEventListener(
                    'orientationchange',
                    this._changeListener,
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const U = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), U;
            }
            getViewportRect() {
              const U = this.getViewportScrollPosition(),
                { width: Ie, height: de } = this.getViewportSize();
              return {
                top: U.top,
                left: U.left,
                bottom: U.top + de,
                right: U.left + Ie,
                height: de,
                width: Ie,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const U = this._document,
                Ie = this._getWindow(),
                de = U.documentElement,
                me = de.getBoundingClientRect();
              return {
                top:
                  -me.top ||
                  U.body.scrollTop ||
                  Ie.scrollY ||
                  de.scrollTop ||
                  0,
                left:
                  -me.left ||
                  U.body.scrollLeft ||
                  Ie.scrollX ||
                  de.scrollLeft ||
                  0,
              };
            }
            change(U = 20) {
              return U > 0 ? this._change.pipe(Ye(U)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const U = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: U.innerWidth, height: U.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)(x.LFG(Re.t4), x.LFG(x.R0b), x.LFG(Le.K0, 8));
            }),
            (ve.ɵprov = x.Yz7({
              token: ve,
              factory: ve.ɵfac,
              providedIn: 'root',
            })),
            ve
          );
        })();
      const dn = new x.OlP('VIRTUAL_SCROLLABLE');
      let wn = (() => {
        class ve extends Ct {
          constructor(U, Ie, de, me) {
            super(U, Ie, de, me);
          }
          measureViewportSize(U) {
            const Ie = this.elementRef.nativeElement;
            return 'horizontal' === U ? Ie.clientWidth : Ie.clientHeight;
          }
        }
        return (
          (ve.ɵfac = function (U) {
            return new (U || ve)(
              x.Y36(x.SBq),
              x.Y36(Zt),
              x.Y36(x.R0b),
              x.Y36(a.Is, 8),
            );
          }),
          (ve.ɵdir = x.lG2({ type: ve, features: [x.qOj] })),
          ve
        );
      })();
      const en = typeof requestAnimationFrame < 'u' ? Ae : dt.E;
      let Bt = (() => {
          class ve extends wn {
            get orientation() {
              return this._orientation;
            }
            set orientation(U) {
              this._orientation !== U &&
                ((this._orientation = U), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(U) {
              this._appendOnly = (0, s.Ig)(U);
            }
            constructor(U, Ie, de, me, pe, Xe, xt, Ot) {
              super(U, Xe, de, pe),
                (this.elementRef = U),
                (this._changeDetectorRef = Ie),
                (this._scrollStrategy = me),
                (this.scrollable = Ot),
                (this._platform = (0, x.f3M)(Re.t4)),
                (this._detachedSubject = new N.x()),
                (this._renderedRangeSubject = new N.x()),
                (this._orientation = 'vertical'),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new te.y(Dn =>
                  this._scrollStrategy.scrolledIndexChange.subscribe(Te =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => Dn.next(Te)),
                    ),
                  ),
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ''),
                (this._totalContentHeight = ''),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = mt.w0.EMPTY),
                (this._viewportChanges = xt.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    'cdk-virtual-scrollable',
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe((0, ye.O)(null), Ye(0, en))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled(),
                        ),
                      this._markChangeDetectionNeeded();
                  }),
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(U) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = U),
                  this._forOf.dataStream
                    .pipe((0, je.R)(this._detachedSubject))
                    .subscribe(Ie => {
                      const de = Ie.length;
                      de !== this._dataLength &&
                        ((this._dataLength = de),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(U) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                U
              ];
            }
            setTotalContentSize(U) {
              this._totalContentSize !== U &&
                ((this._totalContentSize = U),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(U) {
              (function Zn(ve, be) {
                return ve.start == be.start && ve.end == be.end;
              })(this._renderedRange, U) ||
                (this.appendOnly &&
                  (U = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, U.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = U)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered(),
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(U, Ie = 'to-start') {
              U = this.appendOnly && 'to-start' === Ie ? 0 : U;
              const me = 'horizontal' == this.orientation,
                pe = me ? 'X' : 'Y';
              let xt = `translate${pe}(${Number(
                (me && this.dir && 'rtl' == this.dir.value ? -1 : 1) * U,
              )}px)`;
              (this._renderedContentOffset = U),
                'to-end' === Ie &&
                  ((xt += ` translate${pe}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != xt &&
                  ((this._renderedContentTransform = xt),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset,
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(U, Ie = 'auto') {
              const de = { behavior: Ie };
              'horizontal' === this.orientation ? (de.start = U) : (de.top = U),
                this.scrollable.scrollTo(de);
            }
            scrollToIndex(U, Ie = 'auto') {
              this._scrollStrategy.scrollToIndex(U, Ie);
            }
            measureScrollOffset(U) {
              let Ie;
              return (
                (Ie =
                  this.scrollable == this
                    ? de => super.measureScrollOffset(de)
                    : de => this.scrollable.measureScrollOffset(de)),
                Math.max(
                  0,
                  Ie(
                    U ?? ('horizontal' === this.orientation ? 'start' : 'top'),
                  ) - this.measureViewportOffset(),
                )
              );
            }
            measureViewportOffset(U) {
              let Ie;
              const pe = 'rtl' == this.dir?.value;
              Ie =
                'start' == U
                  ? pe
                    ? 'right'
                    : 'left'
                  : 'end' == U
                  ? pe
                    ? 'left'
                    : 'right'
                  : U || ('horizontal' === this.orientation ? 'left' : 'top');
              const Xe =
                this.scrollable.measureBoundingClientRectWithScrollOffset(Ie);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[Ie] - Xe
              );
            }
            measureRenderedContentSize() {
              const U = this._contentWrapper.nativeElement;
              return 'horizontal' === this.orientation
                ? U.offsetWidth
                : U.offsetHeight;
            }
            measureRangeSize(U) {
              return this._forOf
                ? this._forOf.measureRangeSize(U, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation,
              );
            }
            _markChangeDetectionNeeded(U) {
              U && this._runAfterChangeDetection.push(U),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    }),
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const U = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const Ie of U) Ie();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                'horizontal' === this.orientation
                  ? ''
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  'horizontal' === this.orientation
                    ? `${this._totalContentSize}px`
                    : '');
            }
          }
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)(
                x.Y36(x.SBq),
                x.Y36(x.sBO),
                x.Y36(x.R0b),
                x.Y36(Lt, 8),
                x.Y36(a.Is, 8),
                x.Y36(Zt),
                x.Y36(Qt),
                x.Y36(dn, 8),
              );
            }),
            (ve.ɵcmp = x.Xpm({
              type: ve,
              selectors: [['cdk-virtual-scroll-viewport']],
              viewQuery: function (U, Ie) {
                if ((1 & U && x.Gf(ot, 7), 2 & U)) {
                  let de;
                  x.iGM((de = x.CRH())) && (Ie._contentWrapper = de.first);
                }
              },
              hostAttrs: [1, 'cdk-virtual-scroll-viewport'],
              hostVars: 4,
              hostBindings: function (U, Ie) {
                2 & U &&
                  x.ekj(
                    'cdk-virtual-scroll-orientation-horizontal',
                    'horizontal' === Ie.orientation,
                  )(
                    'cdk-virtual-scroll-orientation-vertical',
                    'horizontal' !== Ie.orientation,
                  );
              },
              inputs: { orientation: 'orientation', appendOnly: 'appendOnly' },
              outputs: { scrolledIndexChange: 'scrolledIndexChange' },
              standalone: !0,
              features: [
                x._Bn([
                  {
                    provide: Ct,
                    useFactory: (be, U) => be || U,
                    deps: [[new x.FiY(), new x.tBr(dn)], ve],
                  },
                ]),
                x.qOj,
                x.jDz,
              ],
              ngContentSelectors: Ke,
              decls: 4,
              vars: 4,
              consts: [
                [1, 'cdk-virtual-scroll-content-wrapper'],
                ['contentWrapper', ''],
                [1, 'cdk-virtual-scroll-spacer'],
              ],
              template: function (U, Ie) {
                1 & U &&
                  (x.F$t(),
                  x.TgZ(0, 'div', 0, 1),
                  x.Hsn(2),
                  x.qZA(),
                  x._UZ(3, 'div', 2)),
                  2 & U &&
                    (x.xp6(3),
                    x.Udp('width', Ie._totalContentWidth)(
                      'height',
                      Ie._totalContentHeight,
                    ));
              },
              styles: [
                'cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ve
          );
        })(),
        Me = (() => {
          class ve {}
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)();
            }),
            (ve.ɵmod = x.oAB({ type: ve })),
            (ve.ɵinj = x.cJS({})),
            ve
          );
        })(),
        ze = (() => {
          class ve {}
          return (
            (ve.ɵfac = function (U) {
              return new (U || ve)();
            }),
            (ve.ɵmod = x.oAB({ type: ve })),
            (ve.ɵinj = x.cJS({ imports: [a.vT, Me, Bt, a.vT, Me] })),
            ve
          );
        })();
    },
    6895: (Tt, Pe, D) => {
      D.d(Pe, {
        Do: () => st,
        ED: () => oi,
        EM: () => yr,
        HT: () => se,
        JF: () => No,
        K0: () => ue,
        Mx: () => Zi,
        NF: () => So,
        O5: () => fi,
        RF: () => ur,
        S$: () => pt,
        V_: () => he,
        Ye: () => mt,
        b0: () => ft,
        bD: () => $r,
        ez: () => Ao,
        mk: () => fn,
        n9: () => Oi,
        q: () => N,
        sg: () => hi,
        tP: () => fr,
        w_: () => te,
      });
      var s = D(4650);
      let x = null;
      function N() {
        return x;
      }
      function se(y) {
        x || (x = y);
      }
      class te {}
      const ue = new s.OlP('DocumentToken');
      let _e = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function ce() {
                return (0, s.LFG)(ae);
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      const he = new s.OlP('Location Initialized');
      let ae = (() => {
        class y extends _e {
          constructor(A) {
            super(),
              (this._doc = A),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return N().getBaseHref(this._doc);
          }
          onPopState(A) {
            const j = N().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('popstate', A, !1),
              () => j.removeEventListener('popstate', A)
            );
          }
          onHashChange(A) {
            const j = N().getGlobalEventTarget(this._doc, 'window');
            return (
              j.addEventListener('hashchange', A, !1),
              () => j.removeEventListener('hashchange', A)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(A) {
            this._location.pathname = A;
          }
          pushState(A, j, le) {
            fe()
              ? this._history.pushState(A, j, le)
              : (this._location.hash = le);
          }
          replaceState(A, j, le) {
            fe()
              ? this._history.replaceState(A, j, le)
              : (this._location.hash = le);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(A = 0) {
            this._history.go(A);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.LFG(ue));
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (function re() {
                return new ae((0, s.LFG)(ue));
              })();
            },
            providedIn: 'platform',
          })),
          y
        );
      })();
      function fe() {
        return !!window.history.pushState;
      }
      function He(y, P) {
        if (0 == y.length) return P;
        if (0 == P.length) return y;
        let A = 0;
        return (
          y.endsWith('/') && A++,
          P.startsWith('/') && A++,
          2 == A ? y + P.substring(1) : 1 == A ? y + P : y + '/' + P
        );
      }
      function Ue(y) {
        const P = y.match(/#|\?|$/),
          A = (P && P.index) || y.length;
        return y.slice(0, A - ('/' === y[A - 1] ? 1 : 0)) + y.slice(A);
      }
      function rt(y) {
        return y && '?' !== y[0] ? '?' + y : y;
      }
      let pt = (() => {
        class y {
          historyGo(A) {
            throw new Error('Not implemented');
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)();
          }),
          (y.ɵprov = s.Yz7({
            token: y,
            factory: function () {
              return (0, s.f3M)(ft);
            },
            providedIn: 'root',
          })),
          y
        );
      })();
      const Ne = new s.OlP('appBaseHref');
      let ft = (() => {
          class y extends pt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._removeListenerFns = []),
                (this._baseHref =
                  j ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, s.f3M)(ue).location?.origin ??
                  '');
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(A) {
              return He(this._baseHref, A);
            }
            path(A = !1) {
              const j =
                  this._platformLocation.pathname +
                  rt(this._platformLocation.search),
                le = this._platformLocation.hash;
              return le && A ? `${j}${le}` : j;
            }
            pushState(A, j, le, tt) {
              const gt = this.prepareExternalUrl(le + rt(tt));
              this._platformLocation.pushState(A, j, gt);
            }
            replaceState(A, j, le, tt) {
              const gt = this.prepareExternalUrl(le + rt(tt));
              this._platformLocation.replaceState(A, j, gt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(_e), s.LFG(Ne, 8));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: y.ɵfac,
              providedIn: 'root',
            })),
            y
          );
        })(),
        st = (() => {
          class y extends pt {
            constructor(A, j) {
              super(),
                (this._platformLocation = A),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != j && (this._baseHref = j);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(A) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(A),
                this._platformLocation.onHashChange(A),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(A = !1) {
              let j = this._platformLocation.hash;
              return null == j && (j = '#'), j.length > 0 ? j.substring(1) : j;
            }
            prepareExternalUrl(A) {
              const j = He(this._baseHref, A);
              return j.length > 0 ? '#' + j : j;
            }
            pushState(A, j, le, tt) {
              let gt = this.prepareExternalUrl(le + rt(tt));
              0 == gt.length && (gt = this._platformLocation.pathname),
                this._platformLocation.pushState(A, j, gt);
            }
            replaceState(A, j, le, tt) {
              let gt = this.prepareExternalUrl(le + rt(tt));
              0 == gt.length && (gt = this._platformLocation.pathname),
                this._platformLocation.replaceState(A, j, gt);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(A = 0) {
              this._platformLocation.historyGo?.(A);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(_e), s.LFG(Ne, 8));
            }),
            (y.ɵprov = s.Yz7({ token: y, factory: y.ɵfac })),
            y
          );
        })(),
        mt = (() => {
          class y {
            constructor(A) {
              (this._subject = new s.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = A);
              const j = this._locationStrategy.getBaseHref();
              (this._basePath = (function X(y) {
                if (new RegExp('^(https?:)?//').test(y)) {
                  const [, A] = y.split(/\/\/[^\/]+/);
                  return A;
                }
                return y;
              })(Ue(ee(j)))),
                this._locationStrategy.onPopState(le => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: le.state,
                    type: le.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(A = !1) {
              return this.normalize(this._locationStrategy.path(A));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(A, j = '') {
              return this.path() == this.normalize(A + rt(j));
            }
            normalize(A) {
              return y.stripTrailingSlash(
                (function ie(y, P) {
                  if (!y || !P.startsWith(y)) return P;
                  const A = P.substring(y.length);
                  return '' === A || ['/', ';', '?', '#'].includes(A[0])
                    ? A
                    : P;
                })(this._basePath, ee(A)),
              );
            }
            prepareExternalUrl(A) {
              return (
                A && '/' !== A[0] && (A = '/' + A),
                this._locationStrategy.prepareExternalUrl(A)
              );
            }
            go(A, j = '', le = null) {
              this._locationStrategy.pushState(le, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + rt(j)),
                  le,
                );
            }
            replaceState(A, j = '', le = null) {
              this._locationStrategy.replaceState(le, '', A, j),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(A + rt(j)),
                  le,
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(A = 0) {
              this._locationStrategy.historyGo?.(A);
            }
            onUrlChange(A) {
              return (
                this._urlChangeListeners.push(A),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe(j => {
                    this._notifyUrlChangeListeners(j.url, j.state);
                  })),
                () => {
                  const j = this._urlChangeListeners.indexOf(A);
                  this._urlChangeListeners.splice(j, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(A = '', j) {
              this._urlChangeListeners.forEach(le => le(A, j));
            }
            subscribe(A, j, le) {
              return this._subject.subscribe({
                next: A,
                error: j,
                complete: le,
              });
            }
          }
          return (
            (y.normalizeQueryParams = rt),
            (y.joinWithSlash = He),
            (y.stripTrailingSlash = Ue),
            (y.ɵfac = function (A) {
              return new (A || y)(s.LFG(pt));
            }),
            (y.ɵprov = s.Yz7({
              token: y,
              factory: function () {
                return (function K() {
                  return new mt((0, s.LFG)(pt));
                })();
              },
              providedIn: 'root',
            })),
            y
          );
        })();
      function ee(y) {
        return y.replace(/\/index.html$/, '');
      }
      function Zi(y, P) {
        P = encodeURIComponent(P);
        for (const A of y.split(';')) {
          const j = A.indexOf('='),
            [le, tt] = -1 == j ? [A, ''] : [A.slice(0, j), A.slice(j + 1)];
          if (le.trim() === P) return decodeURIComponent(tt);
        }
        return null;
      }
      const _i = /\s+/,
        $t = [];
      let fn = (() => {
        class y {
          constructor(A, j, le, tt) {
            (this._iterableDiffers = A),
              (this._keyValueDiffers = j),
              (this._ngEl = le),
              (this._renderer = tt),
              (this.initialClasses = $t),
              (this.stateMap = new Map());
          }
          set klass(A) {
            this.initialClasses = null != A ? A.trim().split(_i) : $t;
          }
          set ngClass(A) {
            this.rawClass = 'string' == typeof A ? A.trim().split(_i) : A;
          }
          ngDoCheck() {
            for (const j of this.initialClasses) this._updateState(j, !0);
            const A = this.rawClass;
            if (Array.isArray(A) || A instanceof Set)
              for (const j of A) this._updateState(j, !0);
            else if (null != A)
              for (const j of Object.keys(A))
                this._updateState(j, Boolean(A[j]));
            this._applyStateDiff();
          }
          _updateState(A, j) {
            const le = this.stateMap.get(A);
            void 0 !== le
              ? (le.enabled !== j && ((le.changed = !0), (le.enabled = j)),
                (le.touched = !0))
              : this.stateMap.set(A, { enabled: j, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const A of this.stateMap) {
              const j = A[0],
                le = A[1];
              le.changed
                ? (this._toggleClass(j, le.enabled), (le.changed = !1))
                : le.touched ||
                  (le.enabled && this._toggleClass(j, !1),
                  this.stateMap.delete(j)),
                (le.touched = !1);
            }
          }
          _toggleClass(A, j) {
            (A = A.trim()).length > 0 &&
              A.split(_i).forEach(le => {
                j
                  ? this._renderer.addClass(this._ngEl.nativeElement, le)
                  : this._renderer.removeClass(this._ngEl.nativeElement, le);
              });
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(
              s.Y36(s.ZZ4),
              s.Y36(s.aQg),
              s.Y36(s.SBq),
              s.Y36(s.Qsj),
            );
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            standalone: !0,
          })),
          y
        );
      })();
      class Un {
        constructor(P, A, j, le) {
          (this.$implicit = P),
            (this.ngForOf = A),
            (this.index = j),
            (this.count = le);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let hi = (() => {
        class y {
          set ngForOf(A) {
            (this._ngForOf = A), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(A) {
            this._trackByFn = A;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(A, j, le) {
            (this._viewContainer = A),
              (this._template = j),
              (this._differs = le),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(A) {
            A && (this._template = A);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const A = this._ngForOf;
              !this._differ &&
                A &&
                (this._differ = this._differs
                  .find(A)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const A = this._differ.diff(this._ngForOf);
              A && this._applyChanges(A);
            }
          }
          _applyChanges(A) {
            const j = this._viewContainer;
            A.forEachOperation((le, tt, gt) => {
              if (null == le.previousIndex)
                j.createEmbeddedView(
                  this._template,
                  new Un(le.item, this._ngForOf, -1, -1),
                  null === gt ? void 0 : gt,
                );
              else if (null == gt) j.remove(null === tt ? void 0 : tt);
              else if (null !== tt) {
                const rn = j.get(tt);
                j.move(rn, gt), An(rn, le);
              }
            });
            for (let le = 0, tt = j.length; le < tt; le++) {
              const rn = j.get(le).context;
              (rn.index = le), (rn.count = tt), (rn.ngForOf = this._ngForOf);
            }
            A.forEachIdentityChange(le => {
              An(j.get(le.currentIndex), le);
            });
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(s.ZZ4));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: {
              ngForOf: 'ngForOf',
              ngForTrackBy: 'ngForTrackBy',
              ngForTemplate: 'ngForTemplate',
            },
            standalone: !0,
          })),
          y
        );
      })();
      function An(y, P) {
        y.context.$implicit = P.item;
      }
      let fi = (() => {
        class y {
          constructor(A, j) {
            (this._viewContainer = A),
              (this._context = new _n()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = j);
          }
          set ngIf(A) {
            (this._context.$implicit = this._context.ngIf = A),
              this._updateView();
          }
          set ngIfThen(A) {
            Ti('ngIfThen', A),
              (this._thenTemplateRef = A),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(A) {
            Ti('ngIfElse', A),
              (this._elseTemplateRef = A),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context,
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context,
                  )));
          }
          static ngTemplateContextGuard(A, j) {
            return !0;
          }
        }
        return (
          (y.ɵfac = function (A) {
            return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc));
          }),
          (y.ɵdir = s.lG2({
            type: y,
            selectors: [['', 'ngIf', '']],
            inputs: {
              ngIf: 'ngIf',
              ngIfThen: 'ngIfThen',
              ngIfElse: 'ngIfElse',
            },
            standalone: !0,
          })),
          y
        );
      })();
      class _n {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Ti(y, P) {
        if (P && !P.createEmbeddedView)
          throw new Error(
            `${y} must be a TemplateRef, but received '${(0, s.AaK)(P)}'.`,
          );
      }
      class $i {
        constructor(P, A) {
          (this._viewContainerRef = P),
            (this._templateRef = A),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(P) {
          P && !this._created
            ? this.create()
            : !P && this._created && this.destroy();
        }
      }
      let ur = (() => {
          class y {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(A) {
              (this._ngSwitch = A),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(A) {
              this._defaultViews.push(A);
            }
            _matchCase(A) {
              const j = A == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || j),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                j
              );
            }
            _updateDefaultCases(A) {
              if (this._defaultViews.length > 0 && A !== this._defaultUsed) {
                this._defaultUsed = A;
                for (const j of this._defaultViews) j.enforceState(A);
              }
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitch', '']],
              inputs: { ngSwitch: 'ngSwitch' },
              standalone: !0,
            })),
            y
          );
        })(),
        Oi = (() => {
          class y {
            constructor(A, j, le) {
              (this.ngSwitch = le), le._addCase(), (this._view = new $i(A, j));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase),
              );
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(ur, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
              standalone: !0,
            })),
            y
          );
        })(),
        oi = (() => {
          class y {
            constructor(A, j, le) {
              le._addDefault(new $i(A, j));
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(ur, 9));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngSwitchDefault', '']],
              standalone: !0,
            })),
            y
          );
        })(),
        fr = (() => {
          class y {
            constructor(A) {
              (this._viewContainerRef = A),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(A) {
              if (A.ngTemplateOutlet || A.ngTemplateOutletInjector) {
                const j = this._viewContainerRef;
                if (
                  (this._viewRef && j.remove(j.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: le,
                    ngTemplateOutletContext: tt,
                    ngTemplateOutletInjector: gt,
                  } = this;
                  this._viewRef = j.createEmbeddedView(
                    le,
                    tt,
                    gt ? { injector: gt } : void 0,
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  A.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (y.ɵfac = function (A) {
              return new (A || y)(s.Y36(s.s_b));
            }),
            (y.ɵdir = s.lG2({
              type: y,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: {
                ngTemplateOutletContext: 'ngTemplateOutletContext',
                ngTemplateOutlet: 'ngTemplateOutlet',
                ngTemplateOutletInjector: 'ngTemplateOutletInjector',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            y
          );
        })(),
        Ao = (() => {
          class y {}
          return (
            (y.ɵfac = function (A) {
              return new (A || y)();
            }),
            (y.ɵmod = s.oAB({ type: y })),
            (y.ɵinj = s.cJS({})),
            y
          );
        })();
      const $r = 'browser';
      function So(y) {
        return y === $r;
      }
      let yr = (() => {
        class y {}
        return (
          (y.ɵprov = (0, s.Yz7)({
            token: y,
            providedIn: 'root',
            factory: () => new go((0, s.LFG)(ue), window),
          })),
          y
        );
      })();
      class go {
        constructor(P, A) {
          (this.document = P), (this.window = A), (this.offset = () => [0, 0]);
        }
        setOffset(P) {
          this.offset = Array.isArray(P) ? () => P : P;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(P) {
          this.supportsScrolling() && this.window.scrollTo(P[0], P[1]);
        }
        scrollToAnchor(P) {
          if (!this.supportsScrolling()) return;
          const A = (function Rr(y, P) {
            const A = y.getElementById(P) || y.getElementsByName(P)[0];
            if (A) return A;
            if (
              'function' == typeof y.createTreeWalker &&
              y.body &&
              (y.body.createShadowRoot || y.body.attachShadow)
            ) {
              const j = y.createTreeWalker(y.body, NodeFilter.SHOW_ELEMENT);
              let le = j.currentNode;
              for (; le; ) {
                const tt = le.shadowRoot;
                if (tt) {
                  const gt =
                    tt.getElementById(P) || tt.querySelector(`[name="${P}"]`);
                  if (gt) return gt;
                }
                le = j.nextNode();
              }
            }
            return null;
          })(this.document, P);
          A && (this.scrollToElement(A), A.focus());
        }
        setHistoryScrollRestoration(P) {
          if (this.supportScrollRestoration()) {
            const A = this.window.history;
            A && A.scrollRestoration && (A.scrollRestoration = P);
          }
        }
        scrollToElement(P) {
          const A = P.getBoundingClientRect(),
            j = A.left + this.window.pageXOffset,
            le = A.top + this.window.pageYOffset,
            tt = this.offset();
          this.window.scrollTo(j - tt[0], le - tt[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const P =
              Yr(this.window.history) ||
              Yr(Object.getPrototypeOf(this.window.history));
            return !(!P || (!P.writable && !P.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              'pageXOffset' in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function Yr(y) {
        return Object.getOwnPropertyDescriptor(y, 'scrollRestoration');
      }
      class No {}
    },
    529: (Tt, Pe, D) => {
      D.d(Pe, { JF: () => Je, TP: () => Re, WM: () => ae, eN: () => Ye });
      var s = D(6895),
        x = D(4650),
        N = D(9646),
        se = D(9751),
        te = D(4351),
        ue = D(9300),
        _e = D(4004);
      class ce {}
      class he {}
      class ae {
        constructor(b) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            b
              ? (this.lazyInit =
                  'string' == typeof b
                    ? () => {
                        (this.headers = new Map()),
                          b.split('\n').forEach(w => {
                            const $ = w.indexOf(':');
                            if ($ > 0) {
                              const z = w.slice(0, $),
                                $e = z.toLowerCase(),
                                Mt = w.slice($ + 1).trim();
                              this.maybeSetNormalizedName(z, $e),
                                this.headers.has($e)
                                  ? this.headers.get($e).push(Mt)
                                  : this.headers.set($e, [Mt]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.entries(b).forEach(([w, $]) => {
                            let z;
                            if (
                              ((z =
                                'string' == typeof $
                                  ? [$]
                                  : 'number' == typeof $
                                  ? [$.toString()]
                                  : $.map($e => $e.toString())),
                              z.length > 0)
                            ) {
                              const $e = w.toLowerCase();
                              this.headers.set($e, z),
                                this.maybeSetNormalizedName(w, $e);
                            }
                          });
                      })
              : (this.headers = new Map());
        }
        has(b) {
          return this.init(), this.headers.has(b.toLowerCase());
        }
        get(b) {
          this.init();
          const w = this.headers.get(b.toLowerCase());
          return w && w.length > 0 ? w[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(b) {
          return this.init(), this.headers.get(b.toLowerCase()) || null;
        }
        append(b, w) {
          return this.clone({ name: b, value: w, op: 'a' });
        }
        set(b, w) {
          return this.clone({ name: b, value: w, op: 's' });
        }
        delete(b, w) {
          return this.clone({ name: b, value: w, op: 'd' });
        }
        maybeSetNormalizedName(b, w) {
          this.normalizedNames.has(w) || this.normalizedNames.set(w, b);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ae
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach(b => this.applyUpdate(b)),
              (this.lazyUpdate = null)));
        }
        copyFrom(b) {
          b.init(),
            Array.from(b.headers.keys()).forEach(w => {
              this.headers.set(w, b.headers.get(w)),
                this.normalizedNames.set(w, b.normalizedNames.get(w));
            });
        }
        clone(b) {
          const w = new ae();
          return (
            (w.lazyInit =
              this.lazyInit && this.lazyInit instanceof ae
                ? this.lazyInit
                : this),
            (w.lazyUpdate = (this.lazyUpdate || []).concat([b])),
            w
          );
        }
        applyUpdate(b) {
          const w = b.name.toLowerCase();
          switch (b.op) {
            case 'a':
            case 's':
              let $ = b.value;
              if (('string' == typeof $ && ($ = [$]), 0 === $.length)) return;
              this.maybeSetNormalizedName(b.name, w);
              const z = ('a' === b.op ? this.headers.get(w) : void 0) || [];
              z.push(...$), this.headers.set(w, z);
              break;
            case 'd':
              const $e = b.value;
              if ($e) {
                let Mt = this.headers.get(w);
                if (!Mt) return;
                (Mt = Mt.filter(Xt => -1 === $e.indexOf(Xt))),
                  0 === Mt.length
                    ? (this.headers.delete(w), this.normalizedNames.delete(w))
                    : this.headers.set(w, Mt);
              } else this.headers.delete(w), this.normalizedNames.delete(w);
          }
        }
        forEach(b) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach(w =>
              b(this.normalizedNames.get(w), this.headers.get(w)),
            );
        }
      }
      class re {
        encodeKey(b) {
          return pt(b);
        }
        encodeValue(b) {
          return pt(b);
        }
        decodeKey(b) {
          return decodeURIComponent(b);
        }
        decodeValue(b) {
          return decodeURIComponent(b);
        }
      }
      const Ue = /%(\d[a-f0-9])/gi,
        rt = {
          40: '@',
          '3A': ':',
          24: '$',
          '2C': ',',
          '3B': ';',
          '3D': '=',
          '3F': '?',
          '2F': '/',
        };
      function pt(R) {
        return encodeURIComponent(R).replace(Ue, (b, w) => rt[w] ?? b);
      }
      function Ne(R) {
        return `${R}`;
      }
      class ft {
        constructor(b = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = b.encoder || new re()),
            b.fromString)
          ) {
            if (b.fromObject)
              throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function He(R, b) {
              const w = new Map();
              return (
                R.length > 0 &&
                  R.replace(/^\?/, '')
                    .split('&')
                    .forEach(z => {
                      const $e = z.indexOf('='),
                        [Mt, Xt] =
                          -1 == $e
                            ? [b.decodeKey(z), '']
                            : [
                                b.decodeKey(z.slice(0, $e)),
                                b.decodeValue(z.slice($e + 1)),
                              ],
                        Nt = w.get(Mt) || [];
                      Nt.push(Xt), w.set(Mt, Nt);
                    }),
                w
              );
            })(b.fromString, this.encoder);
          } else
            b.fromObject
              ? ((this.map = new Map()),
                Object.keys(b.fromObject).forEach(w => {
                  const $ = b.fromObject[w],
                    z = Array.isArray($) ? $.map(Ne) : [Ne($)];
                  this.map.set(w, z);
                }))
              : (this.map = null);
        }
        has(b) {
          return this.init(), this.map.has(b);
        }
        get(b) {
          this.init();
          const w = this.map.get(b);
          return w ? w[0] : null;
        }
        getAll(b) {
          return this.init(), this.map.get(b) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(b, w) {
          return this.clone({ param: b, value: w, op: 'a' });
        }
        appendAll(b) {
          const w = [];
          return (
            Object.keys(b).forEach($ => {
              const z = b[$];
              Array.isArray(z)
                ? z.forEach($e => {
                    w.push({ param: $, value: $e, op: 'a' });
                  })
                : w.push({ param: $, value: z, op: 'a' });
            }),
            this.clone(w)
          );
        }
        set(b, w) {
          return this.clone({ param: b, value: w, op: 's' });
        }
        delete(b, w) {
          return this.clone({ param: b, value: w, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map(b => {
                const w = this.encoder.encodeKey(b);
                return this.map
                  .get(b)
                  .map($ => w + '=' + this.encoder.encodeValue($))
                  .join('&');
              })
              .filter(b => '' !== b)
              .join('&')
          );
        }
        clone(b) {
          const w = new ft({ encoder: this.encoder });
          return (
            (w.cloneFrom = this.cloneFrom || this),
            (w.updates = (this.updates || []).concat(b)),
            w
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach(b => this.map.set(b, this.cloneFrom.map.get(b))),
              this.updates.forEach(b => {
                switch (b.op) {
                  case 'a':
                  case 's':
                    const w =
                      ('a' === b.op ? this.map.get(b.param) : void 0) || [];
                    w.push(Ne(b.value)), this.map.set(b.param, w);
                    break;
                  case 'd':
                    if (void 0 === b.value) {
                      this.map.delete(b.param);
                      break;
                    }
                    {
                      let $ = this.map.get(b.param) || [];
                      const z = $.indexOf(Ne(b.value));
                      -1 !== z && $.splice(z, 1),
                        $.length > 0
                          ? this.map.set(b.param, $)
                          : this.map.delete(b.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class mt {
        constructor() {
          this.map = new Map();
        }
        set(b, w) {
          return this.map.set(b, w), this;
        }
        get(b) {
          return (
            this.map.has(b) || this.map.set(b, b.defaultValue()),
            this.map.get(b)
          );
        }
        delete(b) {
          return this.map.delete(b), this;
        }
        has(b) {
          return this.map.has(b);
        }
        keys() {
          return this.map.keys();
        }
      }
      function ie(R) {
        return typeof ArrayBuffer < 'u' && R instanceof ArrayBuffer;
      }
      function ee(R) {
        return typeof Blob < 'u' && R instanceof Blob;
      }
      function X(R) {
        return typeof FormData < 'u' && R instanceof FormData;
      }
      class nt {
        constructor(b, w, $, z) {
          let $e;
          if (
            ((this.url = w),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = b.toUpperCase()),
            (function K(R) {
              switch (R) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || z
              ? ((this.body = void 0 !== $ ? $ : null), ($e = z))
              : ($e = $),
            $e &&
              ((this.reportProgress = !!$e.reportProgress),
              (this.withCredentials = !!$e.withCredentials),
              $e.responseType && (this.responseType = $e.responseType),
              $e.headers && (this.headers = $e.headers),
              $e.context && (this.context = $e.context),
              $e.params && (this.params = $e.params)),
            this.headers || (this.headers = new ae()),
            this.context || (this.context = new mt()),
            this.params)
          ) {
            const Mt = this.params.toString();
            if (0 === Mt.length) this.urlWithParams = w;
            else {
              const Xt = w.indexOf('?');
              this.urlWithParams =
                w + (-1 === Xt ? '?' : Xt < w.length - 1 ? '&' : '') + Mt;
            }
          } else (this.params = new ft()), (this.urlWithParams = w);
        }
        serializeBody() {
          return null === this.body
            ? null
            : ie(this.body) ||
              ee(this.body) ||
              X(this.body) ||
              (function Ae(R) {
                return (
                  typeof URLSearchParams < 'u' && R instanceof URLSearchParams
                );
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof ft
            ? this.body.toString()
            : 'object' == typeof this.body ||
              'boolean' == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || X(this.body)
            ? null
            : ee(this.body)
            ? this.body.type || null
            : ie(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof ft
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body ||
              'number' == typeof this.body ||
              'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(b = {}) {
          const w = b.method || this.method,
            $ = b.url || this.url,
            z = b.responseType || this.responseType,
            $e = void 0 !== b.body ? b.body : this.body,
            Mt =
              void 0 !== b.withCredentials
                ? b.withCredentials
                : this.withCredentials,
            Xt =
              void 0 !== b.reportProgress
                ? b.reportProgress
                : this.reportProgress;
          let Nt = b.headers || this.headers,
            Yt = b.params || this.params;
          const tn = b.context ?? this.context;
          return (
            void 0 !== b.setHeaders &&
              (Nt = Object.keys(b.setHeaders).reduce(
                (Oe, Ce) => Oe.set(Ce, b.setHeaders[Ce]),
                Nt,
              )),
            b.setParams &&
              (Yt = Object.keys(b.setParams).reduce(
                (Oe, Ce) => Oe.set(Ce, b.setParams[Ce]),
                Yt,
              )),
            new nt(w, $, $e, {
              params: Yt,
              headers: Nt,
              context: tn,
              reportProgress: Xt,
              responseType: z,
              withCredentials: Mt,
            })
          );
        }
      }
      var dt = (() => (
        ((dt = dt || {})[(dt.Sent = 0)] = 'Sent'),
        (dt[(dt.UploadProgress = 1)] = 'UploadProgress'),
        (dt[(dt.ResponseHeader = 2)] = 'ResponseHeader'),
        (dt[(dt.DownloadProgress = 3)] = 'DownloadProgress'),
        (dt[(dt.Response = 4)] = 'Response'),
        (dt[(dt.User = 5)] = 'User'),
        dt
      ))();
      class At {
        constructor(b, w = 200, $ = 'OK') {
          (this.headers = b.headers || new ae()),
            (this.status = void 0 !== b.status ? b.status : w),
            (this.statusText = b.statusText || $),
            (this.url = b.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class _t extends At {
        constructor(b = {}) {
          super(b), (this.type = dt.ResponseHeader);
        }
        clone(b = {}) {
          return new _t({
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class Gt extends At {
        constructor(b = {}) {
          super(b),
            (this.type = dt.Response),
            (this.body = void 0 !== b.body ? b.body : null);
        }
        clone(b = {}) {
          return new Gt({
            body: void 0 !== b.body ? b.body : this.body,
            headers: b.headers || this.headers,
            status: void 0 !== b.status ? b.status : this.status,
            statusText: b.statusText || this.statusText,
            url: b.url || this.url || void 0,
          });
        }
      }
      class wt extends At {
        constructor(b) {
          super(b, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${b.url || '(unknown url)'}`
                : `Http failure response for ${b.url || '(unknown url)'}: ${
                    b.status
                  } ${b.statusText}`),
            (this.error = b.error || null);
        }
      }
      function Ge(R, b) {
        return {
          body: b,
          headers: R.headers,
          context: R.context,
          observe: R.observe,
          params: R.params,
          reportProgress: R.reportProgress,
          responseType: R.responseType,
          withCredentials: R.withCredentials,
        };
      }
      let Ye = (() => {
        class R {
          constructor(w) {
            this.handler = w;
          }
          request(w, $, z = {}) {
            let $e;
            if (w instanceof nt) $e = w;
            else {
              let Nt, Yt;
              (Nt = z.headers instanceof ae ? z.headers : new ae(z.headers)),
                z.params &&
                  (Yt =
                    z.params instanceof ft
                      ? z.params
                      : new ft({ fromObject: z.params })),
                ($e = new nt(w, $, void 0 !== z.body ? z.body : null, {
                  headers: Nt,
                  context: z.context,
                  params: Yt,
                  reportProgress: z.reportProgress,
                  responseType: z.responseType || 'json',
                  withCredentials: z.withCredentials,
                }));
            }
            const Mt = (0, N.of)($e).pipe(
              (0, te.b)(Nt => this.handler.handle(Nt)),
            );
            if (w instanceof nt || 'events' === z.observe) return Mt;
            const Xt = Mt.pipe((0, ue.h)(Nt => Nt instanceof Gt));
            switch (z.observe || 'body') {
              case 'body':
                switch ($e.responseType) {
                  case 'arraybuffer':
                    return Xt.pipe(
                      (0, _e.U)(Nt => {
                        if (
                          null !== Nt.body &&
                          !(Nt.body instanceof ArrayBuffer)
                        )
                          throw new Error('Response is not an ArrayBuffer.');
                        return Nt.body;
                      }),
                    );
                  case 'blob':
                    return Xt.pipe(
                      (0, _e.U)(Nt => {
                        if (null !== Nt.body && !(Nt.body instanceof Blob))
                          throw new Error('Response is not a Blob.');
                        return Nt.body;
                      }),
                    );
                  case 'text':
                    return Xt.pipe(
                      (0, _e.U)(Nt => {
                        if (null !== Nt.body && 'string' != typeof Nt.body)
                          throw new Error('Response is not a string.');
                        return Nt.body;
                      }),
                    );
                  default:
                    return Xt.pipe((0, _e.U)(Nt => Nt.body));
                }
              case 'response':
                return Xt;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${z.observe}}`,
                );
            }
          }
          delete(w, $ = {}) {
            return this.request('DELETE', w, $);
          }
          get(w, $ = {}) {
            return this.request('GET', w, $);
          }
          head(w, $ = {}) {
            return this.request('HEAD', w, $);
          }
          jsonp(w, $) {
            return this.request('JSONP', w, {
              params: new ft().append($, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(w, $ = {}) {
            return this.request('OPTIONS', w, $);
          }
          patch(w, $, z = {}) {
            return this.request('PATCH', w, Ge(z, $));
          }
          post(w, $, z = {}) {
            return this.request('POST', w, Ge(z, $));
          }
          put(w, $, z = {}) {
            return this.request('PUT', w, Ge(z, $));
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(x.LFG(ce));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      function xe(R, b) {
        return b(R);
      }
      function je(R, b) {
        return (w, $) => b.intercept(w, { handle: z => R(z, $) });
      }
      const Re = new x.OlP('HTTP_INTERCEPTORS'),
        Le = new x.OlP('HTTP_INTERCEPTOR_FNS');
      function a() {
        let R = null;
        return (b, w) => (
          null === R &&
            (R = ((0, x.f3M)(Re, { optional: !0 }) ?? []).reduceRight(je, xe)),
          R(b, w)
        );
      }
      let ot = (() => {
        class R extends ce {
          constructor(w, $) {
            super(),
              (this.backend = w),
              (this.injector = $),
              (this.chain = null);
          }
          handle(w) {
            if (null === this.chain) {
              const $ = Array.from(new Set(this.injector.get(Le)));
              this.chain = $.reduceRight(
                (z, $e) =>
                  (function ye(R, b, w) {
                    return ($, z) => w.runInContext(() => b($, $e => R($e, z)));
                  })(z, $e, this.injector),
                xe,
              );
            }
            return this.chain(w, $ => this.backend.handle($));
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(x.LFG(he), x.LFG(x.lqb));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      const wn = /^\)\]\}',?\n/;
      let en = (() => {
        class R {
          constructor(w) {
            this.xhrFactory = w;
          }
          handle(w) {
            if ('JSONP' === w.method)
              throw new Error(
                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.',
              );
            return new se.y($ => {
              const z = this.xhrFactory.build();
              if (
                (z.open(w.method, w.urlWithParams),
                w.withCredentials && (z.withCredentials = !0),
                w.headers.forEach((Q, we) =>
                  z.setRequestHeader(Q, we.join(',')),
                ),
                w.headers.has('Accept') ||
                  z.setRequestHeader(
                    'Accept',
                    'application/json, text/plain, */*',
                  ),
                !w.headers.has('Content-Type'))
              ) {
                const Q = w.detectContentTypeHeader();
                null !== Q && z.setRequestHeader('Content-Type', Q);
              }
              if (w.responseType) {
                const Q = w.responseType.toLowerCase();
                z.responseType = 'json' !== Q ? Q : 'text';
              }
              const $e = w.serializeBody();
              let Mt = null;
              const Xt = () => {
                  if (null !== Mt) return Mt;
                  const Q = z.statusText || 'OK',
                    we = new ae(z.getAllResponseHeaders()),
                    ct =
                      (function Zn(R) {
                        return 'responseURL' in R && R.responseURL
                          ? R.responseURL
                          : /^X-Request-URL:/m.test(R.getAllResponseHeaders())
                          ? R.getResponseHeader('X-Request-URL')
                          : null;
                      })(z) || w.url;
                  return (
                    (Mt = new _t({
                      headers: we,
                      status: z.status,
                      statusText: Q,
                      url: ct,
                    })),
                    Mt
                  );
                },
                Nt = () => {
                  let {
                      headers: Q,
                      status: we,
                      statusText: ct,
                      url: Ft,
                    } = Xt(),
                    Kt = null;
                  204 !== we &&
                    (Kt =
                      typeof z.response > 'u' ? z.responseText : z.response),
                    0 === we && (we = Kt ? 200 : 0);
                  let Cn = we >= 200 && we < 300;
                  if ('json' === w.responseType && 'string' == typeof Kt) {
                    const Gn = Kt;
                    Kt = Kt.replace(wn, '');
                    try {
                      Kt = '' !== Kt ? JSON.parse(Kt) : null;
                    } catch (Bn) {
                      (Kt = Gn),
                        Cn && ((Cn = !1), (Kt = { error: Bn, text: Kt }));
                    }
                  }
                  Cn
                    ? ($.next(
                        new Gt({
                          body: Kt,
                          headers: Q,
                          status: we,
                          statusText: ct,
                          url: Ft || void 0,
                        }),
                      ),
                      $.complete())
                    : $.error(
                        new wt({
                          error: Kt,
                          headers: Q,
                          status: we,
                          statusText: ct,
                          url: Ft || void 0,
                        }),
                      );
                },
                Yt = Q => {
                  const { url: we } = Xt(),
                    ct = new wt({
                      error: Q,
                      status: z.status || 0,
                      statusText: z.statusText || 'Unknown Error',
                      url: we || void 0,
                    });
                  $.error(ct);
                };
              let tn = !1;
              const Oe = Q => {
                  tn || ($.next(Xt()), (tn = !0));
                  let we = { type: dt.DownloadProgress, loaded: Q.loaded };
                  Q.lengthComputable && (we.total = Q.total),
                    'text' === w.responseType &&
                      z.responseText &&
                      (we.partialText = z.responseText),
                    $.next(we);
                },
                Ce = Q => {
                  let we = { type: dt.UploadProgress, loaded: Q.loaded };
                  Q.lengthComputable && (we.total = Q.total), $.next(we);
                };
              return (
                z.addEventListener('load', Nt),
                z.addEventListener('error', Yt),
                z.addEventListener('timeout', Yt),
                z.addEventListener('abort', Yt),
                w.reportProgress &&
                  (z.addEventListener('progress', Oe),
                  null !== $e &&
                    z.upload &&
                    z.upload.addEventListener('progress', Ce)),
                z.send($e),
                $.next({ type: dt.Sent }),
                () => {
                  z.removeEventListener('error', Yt),
                    z.removeEventListener('abort', Yt),
                    z.removeEventListener('load', Nt),
                    z.removeEventListener('timeout', Yt),
                    w.reportProgress &&
                      (z.removeEventListener('progress', Oe),
                      null !== $e &&
                        z.upload &&
                        z.upload.removeEventListener('progress', Ce)),
                    z.readyState !== z.DONE && z.abort();
                }
              );
            });
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(x.LFG(s.JF));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      const Bt = new x.OlP('XSRF_ENABLED'),
        it = new x.OlP('XSRF_COOKIE_NAME', {
          providedIn: 'root',
          factory: () => 'XSRF-TOKEN',
        }),
        ne = new x.OlP('XSRF_HEADER_NAME', {
          providedIn: 'root',
          factory: () => 'X-XSRF-TOKEN',
        });
      class Me {}
      let ze = (() => {
        class R {
          constructor(w, $, z) {
            (this.doc = w),
              (this.platform = $),
              (this.cookieName = z),
              (this.lastCookieString = ''),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ('server' === this.platform) return null;
            const w = this.doc.cookie || '';
            return (
              w !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, s.Mx)(w, this.cookieName)),
                (this.lastCookieString = w)),
              this.lastToken
            );
          }
        }
        return (
          (R.ɵfac = function (w) {
            return new (w || R)(x.LFG(s.K0), x.LFG(x.Lbi), x.LFG(it));
          }),
          (R.ɵprov = x.Yz7({ token: R, factory: R.ɵfac })),
          R
        );
      })();
      function ve(R, b) {
        const w = R.url.toLowerCase();
        if (
          !(0, x.f3M)(Bt) ||
          'GET' === R.method ||
          'HEAD' === R.method ||
          w.startsWith('http://') ||
          w.startsWith('https://')
        )
          return b(R);
        const $ = (0, x.f3M)(Me).getToken(),
          z = (0, x.f3M)(ne);
        return (
          null != $ &&
            !R.headers.has(z) &&
            (R = R.clone({ headers: R.headers.set(z, $) })),
          b(R)
        );
      }
      var U = (() => (
        ((U = U || {})[(U.Interceptors = 0)] = 'Interceptors'),
        (U[(U.LegacyInterceptors = 1)] = 'LegacyInterceptors'),
        (U[(U.CustomXsrfConfiguration = 2)] = 'CustomXsrfConfiguration'),
        (U[(U.NoXsrfProtection = 3)] = 'NoXsrfProtection'),
        (U[(U.JsonpSupport = 4)] = 'JsonpSupport'),
        (U[(U.RequestsMadeViaParent = 5)] = 'RequestsMadeViaParent'),
        U
      ))();
      function Ie(R, b) {
        return { ɵkind: R, ɵproviders: b };
      }
      function de(...R) {
        const b = [
          Ye,
          en,
          ot,
          { provide: ce, useExisting: ot },
          { provide: he, useExisting: en },
          { provide: Le, useValue: ve, multi: !0 },
          { provide: Bt, useValue: !0 },
          { provide: Me, useClass: ze },
        ];
        for (const w of R) b.push(...w.ɵproviders);
        return (0, x.MR2)(b);
      }
      const pe = new x.OlP('LEGACY_INTERCEPTOR_FN');
      let Je = (() => {
        class R {}
        return (
          (R.ɵfac = function (w) {
            return new (w || R)();
          }),
          (R.ɵmod = x.oAB({ type: R })),
          (R.ɵinj = x.cJS({
            providers: [
              de(
                Ie(U.LegacyInterceptors, [
                  { provide: pe, useFactory: a },
                  { provide: Le, useExisting: pe, multi: !0 },
                ]),
              ),
            ],
          })),
          R
        );
      })();
    },
    4650: (Tt, Pe, D) => {
      D.d(Pe, {
        $8M: () => Is,
        $WT: () => ai,
        $Z: () => _h,
        AFp: () => _m,
        ALo: () => Bp,
        AaK: () => ce,
        BQk: () => Sl,
        CHM: () => gr,
        CRH: () => Kp,
        CZH: () => Ul,
        CqO: () => qh,
        D6c: () => BD,
        EJc: () => eD,
        EiD: () => Pu,
        EpF: () => Zh,
        F$t: () => nf,
        F4k: () => Qh,
        FYo: () => Qu,
        FiY: () => ss,
        Gf: () => Gp,
        GfV: () => qu,
        Gpc: () => fe,
        Gre: () => Nf,
        Hsn: () => rf,
        Ikx: () => dd,
        JOm: () => Go,
        JVY: () => Pg,
        JZr: () => pt,
        KtG: () => Qr,
        L6k: () => Lg,
        LAX: () => Bg,
        LFG: () => Je,
        Lbi: () => Q0,
        Lck: () => Wy,
        MAs: () => Wh,
        MMx: () => yd,
        MR2: () => t_,
        NdJ: () => ed,
        O4$: () => pn,
        OlP: () => ei,
        Oqu: () => cd,
        P3R: () => Bu,
        PXZ: () => mD,
        Q6J: () => Qc,
        QGY: () => Jc,
        QbO: () => q0,
        Qsj: () => g_,
        R0b: () => Mo,
        RDi: () => Sg,
        Rgc: () => Za,
        SBq: () => Pa,
        Sil: () => nD,
        Suo: () => Wp,
        TTD: () => Or,
        TgZ: () => Ml,
        Udp: () => sd,
        VKq: () => Tp,
        W1O: () => Xp,
        WFA: () => td,
        WLB: () => Op,
        X6Q: () => yD,
        XFs: () => Bt,
        Xpm: () => Cn,
        Xts: () => bc,
        Y36: () => ta,
        YKP: () => Cp,
        YNc: () => Gh,
        Yjl: () => ki,
        Yz7: () => Be,
        Z0I: () => Zt,
        ZZ4: () => Yd,
        _Bn: () => Dp,
        _UZ: () => Xc,
        _Vd: () => Fa,
        _c5: () => LD,
        _uU: () => Sf,
        aQg: () => Gd,
        c2e: () => X0,
        cJS: () => an,
        cg1: () => hd,
        d8E: () => ud,
        dDg: () => uD,
        dqk: () => ze,
        eBb: () => Ng,
        eFA: () => km,
        eJc: () => Id,
        ekj: () => ad,
        eoX: () => wm,
        f3M: () => ke,
        g9A: () => bm,
        h0i: () => ma,
        hGG: () => ND,
        hij: () => Tl,
        iGM: () => Yp,
        ifc: () => Nt,
        ip1: () => gm,
        jDz: () => Ep,
        kL8: () => Wf,
        kcU: () => jn,
        lG2: () => Ci,
        lcZ: () => Vp,
        lqb: () => Vs,
        lri: () => Em,
        mCW: () => ul,
        n5z: () => Ea,
        n_E: () => Ll,
        oAB: () => Ii,
        oxw: () => tf,
        pB0: () => Vg,
        q3G: () => Wi,
        qLn: () => La,
        qOj: () => Gc,
        qZA: () => wl,
        qzn: () => Qs,
        rWj: () => Mm,
        sBO: () => DD,
        s_b: () => Bl,
        soG: () => jl,
        tBr: () => Yo,
        tb: () => Sm,
        tp0: () => vs,
        uIk: () => Zc,
        vHH: () => Ne,
        vpe: () => qo,
        wAp: () => En,
        xp6: () => rh,
        ynx: () => Al,
        z2F: () => zl,
        z3N: () => as,
        zSh: () => xc,
        zs3: () => Hs,
      });
      var s = D(7579),
        x = D(727),
        N = D(9751),
        se = D(6451),
        te = D(3099);
      function ue(e) {
        for (let t in e) if (e[t] === ue) return t;
        throw Error('Could not find renamed property on target object.');
      }
      function _e(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function ce(e) {
        if ('string' == typeof e) return e;
        if (Array.isArray(e)) return '[' + e.map(ce).join(', ') + ']';
        if (null == e) return '' + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const t = e.toString();
        if (null == t) return '' + t;
        const n = t.indexOf('\n');
        return -1 === n ? t : t.substring(0, n);
      }
      function he(e, t) {
        return null == e || '' === e
          ? null === t
            ? ''
            : t
          : null == t || '' === t
          ? e
          : e + ' ' + t;
      }
      const ae = ue({ __forward_ref__: ue });
      function fe(e) {
        return (
          (e.__forward_ref__ = fe),
          (e.toString = function () {
            return ce(this());
          }),
          e
        );
      }
      function re(e) {
        return He(e) ? e() : e;
      }
      function He(e) {
        return (
          'function' == typeof e &&
          e.hasOwnProperty(ae) &&
          e.__forward_ref__ === fe
        );
      }
      function Ue(e) {
        return e && !!e.ɵproviders;
      }
      const pt = 'https://g.co/ng/security#xss';
      class Ne extends Error {
        constructor(t, n) {
          super(ft(t, n)), (this.code = t);
        }
      }
      function ft(e, t) {
        return `NG0${Math.abs(e)}${t ? ': ' + t.trim() : ''}`;
      }
      function st(e) {
        return 'string' == typeof e ? e : null == e ? '' : String(e);
      }
      function X(e, t) {
        throw new Ne(-201, !1);
      }
      function Le(e, t) {
        null == e &&
          (function a(e, t, n, i) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == i ? '' : ` [Expected=> ${n} ${i} ${t} <=Actual]`),
            );
          })(t, e, null, '!=');
      }
      function Be(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function an(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function ut(e) {
        return Ct(e, dn) || Ct(e, Zn);
      }
      function Zt(e) {
        return null !== ut(e);
      }
      function Ct(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function Qt(e) {
        return e && (e.hasOwnProperty(wn) || e.hasOwnProperty(en))
          ? e[wn]
          : null;
      }
      const dn = ue({ ɵprov: ue }),
        wn = ue({ ɵinj: ue }),
        Zn = ue({ ngInjectableDef: ue }),
        en = ue({ ngInjectorDef: ue });
      var Bt = (() => (
        ((Bt = Bt || {})[(Bt.Default = 0)] = 'Default'),
        (Bt[(Bt.Host = 1)] = 'Host'),
        (Bt[(Bt.Self = 2)] = 'Self'),
        (Bt[(Bt.SkipSelf = 4)] = 'SkipSelf'),
        (Bt[(Bt.Optional = 8)] = 'Optional'),
        Bt
      ))();
      let Rn;
      function W(e) {
        const t = Rn;
        return (Rn = e), t;
      }
      function ne(e, t, n) {
        const i = ut(e);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : n & Bt.Optional
          ? null
          : void 0 !== t
          ? t
          : void X(ce(e));
      }
      const ze = (() =>
          (typeof globalThis < 'u' && globalThis) ||
          (typeof global < 'u' && global) ||
          (typeof window < 'u' && window) ||
          (typeof self < 'u' &&
            typeof WorkerGlobalScope < 'u' &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Ie = {},
        de = '__NG_DI_FLAG__',
        me = 'ngTempTokenPath',
        pe = 'ngTokenPath',
        Xe = /\n/gm,
        xt = '\u0275',
        Ot = '__source';
      let Dn;
      function Te(e) {
        const t = Dn;
        return (Dn = e), t;
      }
      function vt(e, t = Bt.Default) {
        if (void 0 === Dn) throw new Ne(-203, !1);
        return null === Dn
          ? ne(e, void 0, t)
          : Dn.get(e, t & Bt.Optional ? null : void 0, t);
      }
      function Je(e, t = Bt.Default) {
        return (
          (function it() {
            return Rn;
          })() || vt
        )(re(e), t);
      }
      function ke(e, t = Bt.Default) {
        return Je(e, R(t));
      }
      function R(e) {
        return typeof e > 'u' || 'number' == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function b(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const i = re(e[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Ne(900, !1);
            let o,
              l = Bt.Default;
            for (let u = 0; u < i.length; u++) {
              const v = i[u],
                E = $(v);
              'number' == typeof E
                ? -1 === E
                  ? (o = v.token)
                  : (l |= E)
                : (o = v);
            }
            t.push(Je(o, l));
          } else t.push(Je(i));
        }
        return t;
      }
      function w(e, t) {
        return (e[de] = t), (e.prototype[de] = t), e;
      }
      function $(e) {
        return e[de];
      }
      function Mt(e) {
        return { toString: e }.toString();
      }
      var Xt = (() => (
          ((Xt = Xt || {})[(Xt.OnPush = 0)] = 'OnPush'),
          (Xt[(Xt.Default = 1)] = 'Default'),
          Xt
        ))(),
        Nt = (() => {
          return (
            ((e = Nt || (Nt = {}))[(e.Emulated = 0)] = 'Emulated'),
            (e[(e.None = 2)] = 'None'),
            (e[(e.ShadowDom = 3)] = 'ShadowDom'),
            Nt
          );
          var e;
        })();
      const Yt = {},
        tn = [],
        Oe = ue({ ɵcmp: ue }),
        Ce = ue({ ɵdir: ue }),
        Q = ue({ ɵpipe: ue }),
        we = ue({ ɵmod: ue }),
        ct = ue({ ɵfac: ue }),
        Ft = ue({ __NG_ELEMENT_ID__: ue });
      let Kt = 0;
      function Cn(e) {
        return Mt(() => {
          const t = Tr(e),
            n = {
              ...t,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === Xt.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              data: e.data || {},
              encapsulation: e.encapsulation || Nt.Emulated,
              id: 'c' + Kt++,
              styles: e.styles || tn,
              _: null,
              schemas: e.schemas || null,
              tView: null,
            };
          Bi(n);
          const i = e.dependencies;
          return (n.directiveDefs = Zi(i, !1)), (n.pipeDefs = Zi(i, !0)), n;
        });
      }
      function Bn(e) {
        return kn(e) || ri(e);
      }
      function Ut(e) {
        return null !== e;
      }
      function Ii(e) {
        return Mt(() => ({
          type: e.type,
          bootstrap: e.bootstrap || tn,
          declarations: e.declarations || tn,
          imports: e.imports || tn,
          exports: e.exports || tn,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function Hn(e, t) {
        if (null == e) return Yt;
        const n = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let o = e[i],
              l = o;
            Array.isArray(o) && ((l = o[1]), (o = o[0])),
              (n[o] = i),
              t && (t[o] = l);
          }
        return n;
      }
      function Ci(e) {
        return Mt(() => {
          const t = Tr(e);
          return Bi(t), t;
        });
      }
      function ki(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function kn(e) {
        return e[Oe] || null;
      }
      function ri(e) {
        return e[Ce] || null;
      }
      function ti(e) {
        return e[Q] || null;
      }
      function ai(e) {
        const t = kn(e) || ri(e) || ti(e);
        return null !== t && t.standalone;
      }
      function xi(e, t) {
        const n = e[we] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${ce(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function Tr(e) {
        const t = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: t,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          selectors: e.selectors || tn,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: Hn(e.inputs, t),
          outputs: Hn(e.outputs),
        };
      }
      function Bi(e) {
        e.features?.forEach(t => t(e));
      }
      function Zi(e, t) {
        if (!e) return null;
        const n = t ? ti : Bn;
        return () =>
          ('function' == typeof e ? e() : e).map(i => n(i)).filter(Ut);
      }
      const _i = 0,
        $t = 1,
        fn = 2,
        Vn = 3,
        di = 4,
        ui = 5,
        Un = 6,
        hi = 7,
        An = 8,
        Ei = 9,
        fi = 10,
        _n = 11,
        Ti = 12,
        $i = 13,
        ur = 14,
        Oi = 15,
        oi = 16,
        Qi = 17,
        Vi = 18,
        Hi = 19,
        hr = 20,
        fr = 21,
        hn = 22,
        qi = 1,
        or = 2,
        pr = 7,
        Xi = 8,
        Fi = 9,
        J = 10;
      function Se(e) {
        return Array.isArray(e) && 'object' == typeof e[qi];
      }
      function Ze(e) {
        return Array.isArray(e) && !0 === e[qi];
      }
      function St(e) {
        return 0 != (4 & e.flags);
      }
      function It(e) {
        return e.componentOffset > -1;
      }
      function un(e) {
        return 1 == (1 & e.flags);
      }
      function vn(e) {
        return !!e.template;
      }
      function Fn(e) {
        return 0 != (256 & e[fn]);
      }
      function Ji(e, t) {
        return e.hasOwnProperty(ct) ? e[ct] : null;
      }
      class mi {
        constructor(t, n, i) {
          (this.previousValue = t),
            (this.currentValue = n),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Or() {
        return yr;
      }
      function yr(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = Yr), go;
      }
      function go() {
        const e = oo(this),
          t = e?.current;
        if (t) {
          const n = e.previous;
          if (n === Yt) e.previous = t;
          else for (let i in t) n[i] = t[i];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function Yr(e, t, n, i) {
        const o = this.declaredInputs[n],
          l =
            oo(e) ||
            (function No(e, t) {
              return (e[Rr] = t);
            })(e, { previous: Yt, current: null }),
          u = l.current || (l.current = {}),
          v = l.previous,
          E = v[o];
        (u[o] = new mi(E && E.currentValue, t, v === Yt)), (e[i] = t);
      }
      Or.ngInherit = !0;
      const Rr = '__ngSimpleChanges__';
      function oo(e) {
        return e[Rr] || null;
      }
      const Xn = function (e, t, n) {},
        Fr = 'svg';
      function li(e) {
        for (; Array.isArray(e); ) e = e[_i];
        return e;
      }
      function si(e, t) {
        return li(t[e]);
      }
      function vi(e, t) {
        return li(t[e.index]);
      }
      function Zr(e, t) {
        return e.data[t];
      }
      function Dr(e, t) {
        return e[t];
      }
      function wi(e, t) {
        const n = t[e];
        return Se(n) ? n : n[_i];
      }
      function Pr(e) {
        return 64 == (64 & e[fn]);
      }
      function Pi(e, t) {
        return null == t ? null : e[t];
      }
      function Lr(e) {
        e[Vi] = 0;
      }
      function ao(e, t) {
        e[ui] += t;
        let n = e,
          i = e[Vn];
        for (
          ;
          null !== i && ((1 === t && 1 === n[ui]) || (-1 === t && 0 === n[ui]));

        )
          (i[ui] += t), (n = i), (i = i[Vn]);
      }
      const yn = { lFrame: q(null), bindingsEnabled: !0 };
      function et() {
        return yn.bindingsEnabled;
      }
      function at() {
        return yn.lFrame.lView;
      }
      function Sn() {
        return yn.lFrame.tView;
      }
      function gr(e) {
        return (yn.lFrame.contextLView = e), e[An];
      }
      function Qr(e) {
        return (yn.lFrame.contextLView = null), e;
      }
      function Jn() {
        let e = Bo();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function Bo() {
        return yn.lFrame.currentTNode;
      }
      function yi(e, t) {
        const n = yn.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function _o() {
        return yn.lFrame.isParent;
      }
      function ko() {
        yn.lFrame.isParent = !1;
      }
      function Yi() {
        const e = yn.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function Nr() {
        return yn.lFrame.bindingIndex++;
      }
      function Er(e) {
        const t = yn.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function er(e, t) {
        const n = yn.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), vo(t);
      }
      function vo(e) {
        yn.lFrame.currentDirectiveIndex = e;
      }
      function lo(e) {
        const t = yn.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function Mr() {
        return yn.lFrame.currentQueryIndex;
      }
      function B(e) {
        yn.lFrame.currentQueryIndex = e;
      }
      function h(e) {
        const t = e[$t];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[Un] : null;
      }
      function p(e, t, n) {
        if (n & Bt.SkipSelf) {
          let o = t,
            l = e;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              n & Bt.Host ||
              ((o = h(l)), null === o || ((l = l[Oi]), 10 & o.type)));

          );
          if (null === o) return !1;
          (t = o), (e = l);
        }
        const i = (yn.lFrame = V());
        return (i.currentTNode = t), (i.lView = e), !0;
      }
      function S(e) {
        const t = V(),
          n = e[$t];
        (yn.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function V() {
        const e = yn.lFrame,
          t = null === e ? null : e.child;
        return null === t ? q(e) : t;
      }
      function q(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function De() {
        const e = yn.lFrame;
        return (
          (yn.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const Ee = De;
      function qe() {
        const e = De();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function jt() {
        return yn.lFrame.selectedIndex;
      }
      function xn(e) {
        yn.lFrame.selectedIndex = e;
      }
      function sn() {
        const e = yn.lFrame;
        return Zr(e.tView, e.selectedIndex);
      }
      function pn() {
        yn.lFrame.currentNamespace = Fr;
      }
      function jn() {
        !(function Qn() {
          yn.lFrame.currentNamespace = null;
        })();
      }
      function ni(e, t) {
        for (let n = t.directiveStart, i = t.directiveEnd; n < i; n++) {
          const l = e.data[n].type.prototype,
            {
              ngAfterContentInit: u,
              ngAfterContentChecked: v,
              ngAfterViewInit: E,
              ngAfterViewChecked: L,
              ngOnDestroy: Y,
            } = l;
          u && (e.contentHooks ?? (e.contentHooks = [])).push(-n, u),
            v &&
              ((e.contentHooks ?? (e.contentHooks = [])).push(n, v),
              (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, v)),
            E && (e.viewHooks ?? (e.viewHooks = [])).push(-n, E),
            L &&
              ((e.viewHooks ?? (e.viewHooks = [])).push(n, L),
              (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, L)),
            null != Y && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, Y);
        }
      }
      function wr(e, t, n) {
        P(e, t, 3, n);
      }
      function Gi(e, t, n, i) {
        (3 & e[fn]) === n && P(e, t, n, i);
      }
      function y(e, t) {
        let n = e[fn];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[fn] = n));
      }
      function P(e, t, n, i) {
        const l = i ?? -1,
          u = t.length - 1;
        let v = 0;
        for (let E = void 0 !== i ? 65535 & e[Vi] : 0; E < u; E++)
          if ('number' == typeof t[E + 1]) {
            if (((v = t[E]), null != i && v >= i)) break;
          } else
            t[E] < 0 && (e[Vi] += 65536),
              (v < l || -1 == l) &&
                (A(e, n, t, E), (e[Vi] = (4294901760 & e[Vi]) + E + 2)),
              E++;
      }
      function A(e, t, n, i) {
        const o = n[i] < 0,
          l = n[i + 1],
          v = e[o ? -n[i] : n[i]];
        if (o) {
          if (e[fn] >> 11 < e[Vi] >> 16 && (3 & e[fn]) === t) {
            (e[fn] += 2048), Xn(4, v, l);
            try {
              l.call(v);
            } finally {
              Xn(5, v, l);
            }
          }
        } else {
          Xn(4, v, l);
          try {
            l.call(v);
          } finally {
            Xn(5, v, l);
          }
        }
      }
      const j = -1;
      class le {
        constructor(t, n, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = n),
            (this.injectImpl = i);
        }
      }
      function gn(e, t, n) {
        let i = 0;
        for (; i < n.length; ) {
          const o = n[i];
          if ('number' == typeof o) {
            if (0 !== o) break;
            i++;
            const l = n[i++],
              u = n[i++],
              v = n[i++];
            e.setAttribute(t, u, v, l);
          } else {
            const l = o,
              u = n[++i];
            gi(l) ? e.setProperty(t, l, u) : e.setAttribute(t, l, u), i++;
          }
        }
        return i;
      }
      function $n(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function gi(e) {
        return 64 === e.charCodeAt(0);
      }
      function ii(e, t) {
        if (null !== t && 0 !== t.length)
          if (null === e || 0 === e.length) e = t.slice();
          else {
            let n = -1;
            for (let i = 0; i < t.length; i++) {
              const o = t[i];
              'number' == typeof o
                ? (n = o)
                : 0 === n ||
                  Nn(e, n, o, null, -1 === n || 2 === n ? t[++i] : null);
            }
          }
        return e;
      }
      function Nn(e, t, n, i, o) {
        let l = 0,
          u = e.length;
        if (-1 === t) u = -1;
        else
          for (; l < e.length; ) {
            const v = e[l++];
            if ('number' == typeof v) {
              if (v === t) {
                u = -1;
                break;
              }
              if (v > t) {
                u = l - 1;
                break;
              }
            }
          }
        for (; l < e.length; ) {
          const v = e[l];
          if ('number' == typeof v) break;
          if (v === n) {
            if (null === i) return void (null !== o && (e[l + 1] = o));
            if (i === e[l + 1]) return void (e[l + 2] = o);
          }
          l++, null !== i && l++, null !== o && l++;
        }
        -1 !== u && (e.splice(u, 0, t), (l = u + 1)),
          e.splice(l++, 0, n),
          null !== i && e.splice(l++, 0, i),
          null !== o && e.splice(l++, 0, o);
      }
      function tr(e) {
        return e !== j;
      }
      function Vr(e) {
        return 32767 & e;
      }
      function lr(e, t) {
        let n = (function Di(e) {
            return e >> 16;
          })(e),
          i = t;
        for (; n > 0; ) (i = i[Oi]), n--;
        return i;
      }
      let nr = !0;
      function bo(e) {
        const t = nr;
        return (nr = e), t;
      }
      const va = 255,
        es = 5;
      let ba = 0;
      const Jr = {};
      function fs(e, t) {
        const n = Ys(e, t);
        if (-1 !== n) return n;
        const i = t[$t];
        i.firstCreatePass &&
          ((e.injectorIndex = t.length),
          Es(i.data, e),
          Es(t, null),
          Es(i.blueprint, null));
        const o = Ms(e, t),
          l = e.injectorIndex;
        if (tr(o)) {
          const u = Vr(o),
            v = lr(o, t),
            E = v[$t].data;
          for (let L = 0; L < 8; L++) t[l + L] = v[u + L] | E[u + L];
        }
        return (t[l + 8] = o), l;
      }
      function Es(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Ys(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Ms(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          i = null,
          o = t;
        for (; null !== o; ) {
          if (((i = ms(o)), null === i)) return j;
          if ((n++, (o = o[Oi]), -1 !== i.injectorIndex))
            return i.injectorIndex | (n << 16);
        }
        return j;
      }
      function ir(e, t, n) {
        !(function xs(e, t, n) {
          let i;
          'string' == typeof n
            ? (i = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(Ft) && (i = n[Ft]),
            null == i && (i = n[Ft] = ba++);
          const o = i & va;
          t.data[e + (o >> es)] |= 1 << o;
        })(e, t, n);
      }
      function ts(e, t, n) {
        if (n & Bt.Optional || void 0 !== e) return e;
        X();
      }
      function Da(e, t, n, i) {
        if (
          (n & Bt.Optional && void 0 === i && (i = null),
          !(n & (Bt.Self | Bt.Host)))
        ) {
          const o = e[Ei],
            l = W(void 0);
          try {
            return o ? o.get(t, i, n & Bt.Optional) : ne(t, i, n & Bt.Optional);
          } finally {
            W(l);
          }
        }
        return ts(i, 0, n);
      }
      function Ca(e, t, n, i = Bt.Default, o) {
        if (null !== e) {
          if (1024 & t[fn]) {
            const u = (function yo(e, t, n, i, o) {
              let l = e,
                u = t;
              for (
                ;
                null !== l && null !== u && 1024 & u[fn] && !(256 & u[fn]);

              ) {
                const v = Gs(l, u, n, i | Bt.Self, Jr);
                if (v !== Jr) return v;
                let E = l.parent;
                if (!E) {
                  const L = u[fr];
                  if (L) {
                    const Y = L.get(n, Jr, i);
                    if (Y !== Jr) return Y;
                  }
                  (E = ms(u)), (u = u[Oi]);
                }
                l = E;
              }
              return o;
            })(e, t, n, i, Jr);
            if (u !== Jr) return u;
          }
          const l = Gs(e, t, n, i, Jr);
          if (l !== Jr) return l;
        }
        return Da(t, n, i, o);
      }
      function Gs(e, t, n, i, o) {
        const l = (function ws(e) {
          if ('string' == typeof e) return e.charCodeAt(0) || 0;
          const t = e.hasOwnProperty(Ft) ? e[Ft] : void 0;
          return 'number' == typeof t ? (t >= 0 ? t & va : Uo) : t;
        })(n);
        if ('function' == typeof l) {
          if (!p(t, e, i)) return i & Bt.Host ? ts(o, 0, i) : Da(t, n, i, o);
          try {
            const u = l(i);
            if (null != u || i & Bt.Optional) return u;
            X();
          } finally {
            Ee();
          }
        } else if ('number' == typeof l) {
          let u = null,
            v = Ys(e, t),
            E = j,
            L = i & Bt.Host ? t[oi][Un] : null;
          for (
            (-1 === v || i & Bt.SkipSelf) &&
            ((E = -1 === v ? Ms(e, t) : t[v + 8]),
            E !== j && cr(i, !1)
              ? ((u = t[$t]), (v = Vr(E)), (t = lr(E, t)))
              : (v = -1));
            -1 !== v;

          ) {
            const Y = t[$t];
            if (As(l, v, Y.data)) {
              const oe = xa(v, t, n, u, i, L);
              if (oe !== Jr) return oe;
            }
            (E = t[v + 8]),
              E !== j && cr(i, t[$t].data[v + 8] === L) && As(l, v, t)
                ? ((u = Y), (v = Vr(E)), (t = lr(E, t)))
                : (v = -1);
          }
        }
        return o;
      }
      function xa(e, t, n, i, o, l) {
        const u = t[$t],
          v = u.data[e + 8],
          Y = ps(
            v,
            u,
            n,
            null == i ? It(v) && nr : i != u && 0 != (3 & v.type),
            o & Bt.Host && l === v,
          );
        return null !== Y ? To(t, u, Y, v) : Jr;
      }
      function ps(e, t, n, i, o) {
        const l = e.providerIndexes,
          u = t.data,
          v = 1048575 & l,
          E = e.directiveStart,
          Y = l >> 20,
          Fe = o ? v + Y : e.directiveEnd;
        for (let Qe = i ? v : v + Y; Qe < Fe; Qe++) {
          const bt = u[Qe];
          if ((Qe < E && n === bt) || (Qe >= E && bt.type === n)) return Qe;
        }
        if (o) {
          const Qe = u[E];
          if (Qe && vn(Qe) && Qe.type === n) return E;
        }
        return null;
      }
      function To(e, t, n, i) {
        let o = e[n];
        const l = t.data;
        if (
          (function tt(e) {
            return e instanceof le;
          })(o)
        ) {
          const u = o;
          u.resolving &&
            (function K(e, t) {
              const n = t ? `. Dependency path: ${t.join(' > ')} > ${e}` : '';
              throw new Ne(
                -200,
                `Circular dependency in DI detected for ${e}${n}`,
              );
            })(
              (function mt(e) {
                return 'function' == typeof e
                  ? e.name || e.toString()
                  : 'object' == typeof e &&
                    null != e &&
                    'function' == typeof e.type
                  ? e.type.name || e.type.toString()
                  : st(e);
              })(l[n]),
            );
          const v = bo(u.canSeeViewProviders);
          u.resolving = !0;
          const E = u.injectImpl ? W(u.injectImpl) : null;
          p(e, i, Bt.Default);
          try {
            (o = e[n] = u.factory(void 0, l, e, i)),
              t.firstCreatePass &&
                n >= i.directiveStart &&
                (function Ui(e, t, n) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: l,
                  } = t.type.prototype;
                  if (i) {
                    const u = yr(t);
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, u),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, u);
                  }
                  o &&
                    (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o),
                    l &&
                      ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, l),
                      (
                        n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])
                      ).push(e, l));
                })(n, l[n], t);
          } finally {
            null !== E && W(E), bo(v), (u.resolving = !1), Ee();
          }
        }
        return o;
      }
      function As(e, t, n) {
        return !!(n[t + (e >> es)] & (1 << e));
      }
      function cr(e, t) {
        return !(e & Bt.Self || (e & Bt.Host && t));
      }
      class Ho {
        constructor(t, n) {
          (this._tNode = t), (this._lView = n);
        }
        get(t, n, i) {
          return Ca(this._tNode, this._lView, t, R(i), n);
        }
      }
      function Uo() {
        return new Ho(Jn(), at());
      }
      function Ea(e) {
        return Mt(() => {
          const t = e.prototype.constructor,
            n = t[ct] || Ss(t),
            i = Object.prototype;
          let o = Object.getPrototypeOf(e.prototype).constructor;
          for (; o && o !== i; ) {
            const l = o[ct] || Ss(o);
            if (l && l !== n) return l;
            o = Object.getPrototypeOf(o);
          }
          return l => new l();
        });
      }
      function Ss(e) {
        return He(e)
          ? () => {
              const t = Ss(re(e));
              return t && t();
            }
          : Ji(e);
      }
      function ms(e) {
        const t = e[$t],
          n = t.type;
        return 2 === n ? t.declTNode : 1 === n ? e[Un] : null;
      }
      function Is(e) {
        return (function ya(e, t) {
          if ('class' === t) return e.classes;
          if ('style' === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const i = n.length;
            let o = 0;
            for (; o < i; ) {
              const l = n[o];
              if ($n(l)) break;
              if (0 === l) o += 2;
              else if ('number' == typeof l)
                for (o++; o < i && 'string' == typeof n[o]; ) o++;
              else {
                if (l === t) return n[o + 1];
                o += 2;
              }
            }
          }
          return null;
        })(Jn(), e);
      }
      const is = '__parameters__';
      function Hr(e, t, n) {
        return Mt(() => {
          const i = (function jo(e) {
            return function (...n) {
              if (e) {
                const i = e(...n);
                for (const o in i) this[o] = i[o];
              }
            };
          })(t);
          function o(...l) {
            if (this instanceof o) return i.apply(this, l), this;
            const u = new o(...l);
            return (v.annotation = u), v;
            function v(E, L, Y) {
              const oe = E.hasOwnProperty(is)
                ? E[is]
                : Object.defineProperty(E, is, { value: [] })[is];
              for (; oe.length <= Y; ) oe.push(null);
              return (oe[Y] = oe[Y] || []).push(u), E;
            }
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      class ei {
        constructor(t, n) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof n
              ? (this.__NG_ELEMENT_ID__ = n)
              : void 0 !== n &&
                (this.ɵprov = Be({
                  token: this,
                  providedIn: n.providedIn || 'root',
                  factory: n.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function Do(e, t) {
        e.forEach(n => (Array.isArray(n) ? Do(n, t) : t(n)));
      }
      function Ts(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function Os(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function f(e, t) {
        const n = [];
        for (let i = 0; i < e; i++) n.push(t);
        return n;
      }
      function H(e, t, n) {
        let i = Ve(e, t);
        return (
          i >= 0
            ? (e[1 | i] = n)
            : ((i = ~i),
              (function C(e, t, n, i) {
                let o = e.length;
                if (o == t) e.push(n, i);
                else if (1 === o) e.push(i, e[0]), (e[0] = n);
                else {
                  for (o--, e.push(e[o - 1], e[o]); o > t; )
                    (e[o] = e[o - 2]), o--;
                  (e[t] = n), (e[t + 1] = i);
                }
              })(e, i, t, n)),
          i
        );
      }
      function Z(e, t) {
        const n = Ve(e, t);
        if (n >= 0) return e[1 | n];
      }
      function Ve(e, t) {
        return (function qt(e, t, n) {
          let i = 0,
            o = e.length >> n;
          for (; o !== i; ) {
            const l = i + ((o - i) >> 1),
              u = e[l << n];
            if (t === u) return l << n;
            u > t ? (o = l) : (i = l + 1);
          }
          return ~(o << n);
        })(e, t, 1);
      }
      const Yo = w(
          Hr('Inject', e => ({ token: e })),
          -1,
        ),
        ss = w(Hr('Optional'), 8),
        vs = w(Hr('SkipSelf'), 4);
      var Go = (() => (
        ((Go = Go || {})[(Go.Important = 1)] = 'Important'),
        (Go[(Go.DashCase = 2)] = 'DashCase'),
        Go
      ))();
      const Xl = new Map();
      let qm = 0;
      const ec = '__ngContext__';
      function Ir(e, t) {
        Se(t)
          ? ((e[ec] = t[hr]),
            (function Jm(e) {
              Xl.set(e[hr], e);
            })(t))
          : (e[ec] = t);
      }
      let tc;
      function nc(e, t) {
        return tc(e, t);
      }
      function ka(e) {
        const t = e[Vn];
        return Ze(t) ? t[Vn] : t;
      }
      function ic(e) {
        return cu(e[$i]);
      }
      function rc(e) {
        return cu(e[di]);
      }
      function cu(e) {
        for (; null !== e && !Ze(e); ) e = e[di];
        return e;
      }
      function Ks(e, t, n, i, o) {
        if (null != i) {
          let l,
            u = !1;
          Ze(i) ? (l = i) : Se(i) && ((u = !0), (i = i[_i]));
          const v = li(i);
          0 === e && null !== n
            ? null == o
              ? mu(t, n, v)
              : Ls(t, n, v, o || null, !0)
            : 1 === e && null !== n
            ? Ls(t, n, v, o || null, !0)
            : 2 === e
            ? (function uc(e, t, n) {
                const i = sl(e, t);
                i &&
                  (function bg(e, t, n, i) {
                    e.removeChild(t, n, i);
                  })(e, i, t, n);
              })(t, v, u)
            : 3 === e && t.destroyNode(v),
            null != l &&
              (function Cg(e, t, n, i, o) {
                const l = n[pr];
                l !== li(n) && Ks(t, e, i, l, o);
                for (let v = J; v < n.length; v++) {
                  const E = n[v];
                  Ta(E[$t], E, e, t, i, l);
                }
              })(t, e, l, n, o);
        }
      }
      function sc(e, t, n) {
        return e.createElement(t, n);
      }
      function uu(e, t) {
        const n = e[Fi],
          i = n.indexOf(t),
          o = t[Vn];
        512 & t[fn] && ((t[fn] &= -513), ao(o, -1)), n.splice(i, 1);
      }
      function ac(e, t) {
        if (e.length <= J) return;
        const n = J + t,
          i = e[n];
        if (i) {
          const o = i[Qi];
          null !== o && o !== e && uu(o, i), t > 0 && (e[n - 1][di] = i[di]);
          const l = Os(e, J + t);
          !(function ug(e, t) {
            Ta(e, t, t[_n], 2, null, null), (t[_i] = null), (t[Un] = null);
          })(i[$t], i);
          const u = l[Hi];
          null !== u && u.detachView(l[$t]),
            (i[Vn] = null),
            (i[di] = null),
            (i[fn] &= -65);
        }
        return i;
      }
      function hu(e, t) {
        if (!(128 & t[fn])) {
          const n = t[_n];
          n.destroyNode && Ta(e, t, n, 3, null, null),
            (function pg(e) {
              let t = e[$i];
              if (!t) return lc(e[$t], e);
              for (; t; ) {
                let n = null;
                if (Se(t)) n = t[$i];
                else {
                  const i = t[J];
                  i && (n = i);
                }
                if (!n) {
                  for (; t && !t[di] && t !== e; )
                    Se(t) && lc(t[$t], t), (t = t[Vn]);
                  null === t && (t = e),
                    Se(t) && lc(t[$t], t),
                    (n = t && t[di]);
                }
                t = n;
              }
            })(t);
        }
      }
      function lc(e, t) {
        if (!(128 & t[fn])) {
          (t[fn] &= -65),
            (t[fn] |= 128),
            (function vg(e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const o = t[n[i]];
                  if (!(o instanceof le)) {
                    const l = n[i + 1];
                    if (Array.isArray(l))
                      for (let u = 0; u < l.length; u += 2) {
                        const v = o[l[u]],
                          E = l[u + 1];
                        Xn(4, v, E);
                        try {
                          E.call(v);
                        } finally {
                          Xn(5, v, E);
                        }
                      }
                    else {
                      Xn(4, o, l);
                      try {
                        l.call(o);
                      } finally {
                        Xn(5, o, l);
                      }
                    }
                  }
                }
            })(e, t),
            (function _g(e, t) {
              const n = e.cleanup,
                i = t[hi];
              let o = -1;
              if (null !== n)
                for (let l = 0; l < n.length - 1; l += 2)
                  if ('string' == typeof n[l]) {
                    const u = n[l + 3];
                    u >= 0 ? i[(o = u)]() : i[(o = -u)].unsubscribe(), (l += 2);
                  } else {
                    const u = i[(o = n[l + 1])];
                    n[l].call(u);
                  }
              if (null !== i) {
                for (let l = o + 1; l < i.length; l++) (0, i[l])();
                t[hi] = null;
              }
            })(e, t),
            1 === t[$t].type && t[_n].destroy();
          const n = t[Qi];
          if (null !== n && Ze(t[Vn])) {
            n !== t[Vn] && uu(n, t);
            const i = t[Hi];
            null !== i && i.detachView(e);
          }
          !(function eg(e) {
            Xl.delete(e[hr]);
          })(t);
        }
      }
      function fu(e, t, n) {
        return (function pu(e, t, n) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return n[_i];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: l } = e.data[i.directiveStart + o];
              if (l === Nt.None || l === Nt.Emulated) return null;
            }
            return vi(i, n);
          }
        })(e, t.parent, n);
      }
      function Ls(e, t, n, i, o) {
        e.insertBefore(t, n, i, o);
      }
      function mu(e, t, n) {
        e.appendChild(t, n);
      }
      function gu(e, t, n, i, o) {
        null !== i ? Ls(e, t, n, i, o) : mu(e, t, n);
      }
      function sl(e, t) {
        return e.parentNode(t);
      }
      function _u(e, t, n) {
        return bu(e, t, n);
      }
      let cc,
        cl,
        pc,
        dl,
        bu = function vu(e, t, n) {
          return 40 & e.type ? vi(e, n) : null;
        };
      function al(e, t, n, i) {
        const o = fu(e, i, t),
          l = t[_n],
          v = _u(i.parent || t[Un], i, t);
        if (null != o)
          if (Array.isArray(n))
            for (let E = 0; E < n.length; E++) gu(l, o, n[E], v, !1);
          else gu(l, o, n, v, !1);
        void 0 !== cc && cc(l, i, t, n, o);
      }
      function ll(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return vi(t, e);
          if (4 & n) return dc(-1, e[t.index]);
          if (8 & n) {
            const i = t.child;
            if (null !== i) return ll(e, i);
            {
              const o = e[t.index];
              return Ze(o) ? dc(-1, o) : li(o);
            }
          }
          if (32 & n) return nc(t, e)() || li(e[t.index]);
          {
            const i = Du(e, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : ll(ka(e[oi]), i)
              : ll(e, t.next);
          }
        }
        return null;
      }
      function Du(e, t) {
        return null !== t ? e[oi][Un].projection[t.projection] : null;
      }
      function dc(e, t) {
        const n = J + e + 1;
        if (n < t.length) {
          const i = t[n],
            o = i[$t].firstChild;
          if (null !== o) return ll(i, o);
        }
        return t[pr];
      }
      function hc(e, t, n, i, o, l, u) {
        for (; null != n; ) {
          const v = i[n.index],
            E = n.type;
          if (
            (u && 0 === t && (v && Ir(li(v), i), (n.flags |= 2)),
            32 != (32 & n.flags))
          )
            if (8 & E) hc(e, t, n.child, i, o, l, !1), Ks(t, e, o, v, l);
            else if (32 & E) {
              const L = nc(n, i);
              let Y;
              for (; (Y = L()); ) Ks(t, e, o, Y, l);
              Ks(t, e, o, v, l);
            } else 16 & E ? Cu(e, t, i, n, o, l) : Ks(t, e, o, v, l);
          n = u ? n.projectionNext : n.next;
        }
      }
      function Ta(e, t, n, i, o, l) {
        hc(n, i, e.firstChild, t, o, l, !1);
      }
      function Cu(e, t, n, i, o, l) {
        const u = n[oi],
          E = u[Un].projection[i.projection];
        if (Array.isArray(E))
          for (let L = 0; L < E.length; L++) Ks(t, e, o, E[L], l);
        else hc(e, t, E, u[Vn], o, l, !0);
      }
      function xu(e, t, n) {
        '' === n
          ? e.removeAttribute(t, 'class')
          : e.setAttribute(t, 'class', n);
      }
      function Eu(e, t, n) {
        const { mergedAttrs: i, classes: o, styles: l } = n;
        null !== i && gn(e, t, i),
          null !== o && xu(e, t, o),
          null !== l &&
            (function Eg(e, t, n) {
              e.setAttribute(t, 'style', n);
            })(e, t, l);
      }
      function Zs(e) {
        return (
          (function fc() {
            if (void 0 === cl && ((cl = null), ze.trustedTypes))
              try {
                cl = ze.trustedTypes.createPolicy('angular', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return cl;
          })()?.createHTML(e) || e
        );
      }
      function Sg(e) {
        pc = e;
      }
      function Su(e) {
        return (
          (function mc() {
            if (void 0 === dl && ((dl = null), ze.trustedTypes))
              try {
                dl = ze.trustedTypes.createPolicy('angular#unsafe-bypass', {
                  createHTML: e => e,
                  createScript: e => e,
                  createScriptURL: e => e,
                });
              } catch {}
            return dl;
          })()?.createScriptURL(e) || e
        );
      }
      class Ns {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${pt})`;
        }
      }
      class Ig extends Ns {
        getTypeName() {
          return 'HTML';
        }
      }
      class kg extends Ns {
        getTypeName() {
          return 'Style';
        }
      }
      class Tg extends Ns {
        getTypeName() {
          return 'Script';
        }
      }
      class Og extends Ns {
        getTypeName() {
          return 'URL';
        }
      }
      class Rg extends Ns {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function as(e) {
        return e instanceof Ns ? e.changingThisBreaksApplicationSecurity : e;
      }
      function Qs(e, t) {
        const n = (function Fg(e) {
          return (e instanceof Ns && e.getTypeName()) || null;
        })(e);
        if (null != n && n !== t) {
          if ('ResourceURL' === n && 'URL' === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${n} (see ${pt})`);
        }
        return n === t;
      }
      function Pg(e) {
        return new Ig(e);
      }
      function Lg(e) {
        return new kg(e);
      }
      function Ng(e) {
        return new Tg(e);
      }
      function Bg(e) {
        return new Og(e);
      }
      function Vg(e) {
        return new Rg(e);
      }
      class Hg {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const n = new window.DOMParser().parseFromString(
              Zs(t),
              'text/html',
            ).body;
            return null === n
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (n.removeChild(n.firstChild), n);
          } catch {
            return null;
          }
        }
      }
      class Ug {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                'sanitization-inert',
              ));
        }
        getInertBodyElement(t) {
          const n = this.inertDocument.createElement('template');
          return (n.innerHTML = Zs(t)), n;
        }
      }
      const zg = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function ul(e) {
        return (e = String(e)).match(zg) ? e : 'unsafe:' + e;
      }
      function ls(e) {
        const t = {};
        for (const n of e.split(',')) t[n] = !0;
        return t;
      }
      function Oa(...e) {
        const t = {};
        for (const n of e)
          for (const i in n) n.hasOwnProperty(i) && (t[i] = !0);
        return t;
      }
      const ku = ls('area,br,col,hr,img,wbr'),
        Tu = ls('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Ou = ls('rp,rt'),
        gc = Oa(
          ku,
          Oa(
            Tu,
            ls(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul',
            ),
          ),
          Oa(
            Ou,
            ls(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video',
            ),
          ),
          Oa(Ou, Tu),
        ),
        _c = ls('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        Ru = Oa(
          _c,
          ls(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width',
          ),
          ls(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext',
          ),
        ),
        $g = ls('script,style,template');
      class Yg {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let n = t.firstChild,
            i = !0;
          for (; n; )
            if (
              (n.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(n))
                : n.nodeType === Node.TEXT_NODE
                ? this.chars(n.nodeValue)
                : (this.sanitizedSomething = !0),
              i && n.firstChild)
            )
              n = n.firstChild;
            else
              for (; n; ) {
                n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                let o = this.checkClobberedElement(n, n.nextSibling);
                if (o) {
                  n = o;
                  break;
                }
                n = this.checkClobberedElement(n, n.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const n = t.nodeName.toLowerCase();
          if (!gc.hasOwnProperty(n))
            return (this.sanitizedSomething = !0), !$g.hasOwnProperty(n);
          this.buf.push('<'), this.buf.push(n);
          const i = t.attributes;
          for (let o = 0; o < i.length; o++) {
            const l = i.item(o),
              u = l.name,
              v = u.toLowerCase();
            if (!Ru.hasOwnProperty(v)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let E = l.value;
            _c[v] && (E = ul(E)), this.buf.push(' ', u, '="', Fu(E), '"');
          }
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const n = t.nodeName.toLowerCase();
          gc.hasOwnProperty(n) &&
            !ku.hasOwnProperty(n) &&
            (this.buf.push('</'), this.buf.push(n), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(Fu(t));
        }
        checkClobberedElement(t, n) {
          if (
            n &&
            (t.compareDocumentPosition(n) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`,
            );
          return n;
        }
      }
      const Gg = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Wg = /([^\#-~ |!])/g;
      function Fu(e) {
        return e
          .replace(/&/g, '&amp;')
          .replace(Gg, function (t) {
            return (
              '&#' +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ';'
            );
          })
          .replace(Wg, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let hl;
      function Pu(e, t) {
        let n = null;
        try {
          hl =
            hl ||
            (function Iu(e) {
              const t = new Ug(e);
              return (function jg() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Zs(''),
                    'text/html',
                  );
                } catch {
                  return !1;
                }
              })()
                ? new Hg(t)
                : t;
            })(e);
          let i = t ? String(t) : '';
          n = hl.getInertBodyElement(i);
          let o = 5,
            l = i;
          do {
            if (0 === o)
              throw new Error(
                'Failed to sanitize html because the input is unstable',
              );
            o--, (i = l), (l = n.innerHTML), (n = hl.getInertBodyElement(i));
          } while (i !== l);
          return Zs(new Yg().sanitizeChildren(vc(n) || n));
        } finally {
          if (n) {
            const i = vc(n) || n;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function vc(e) {
        return 'content' in e &&
          (function Kg(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Wi = (() => (
        ((Wi = Wi || {})[(Wi.NONE = 0)] = 'NONE'),
        (Wi[(Wi.HTML = 1)] = 'HTML'),
        (Wi[(Wi.STYLE = 2)] = 'STYLE'),
        (Wi[(Wi.SCRIPT = 3)] = 'SCRIPT'),
        (Wi[(Wi.URL = 4)] = 'URL'),
        (Wi[(Wi.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        Wi
      ))();
      function Lu(e) {
        const t = Ra();
        return t
          ? t.sanitize(Wi.URL, e) || ''
          : Qs(e, 'URL')
          ? as(e)
          : ul(st(e));
      }
      function Nu(e) {
        const t = Ra();
        if (t) return Su(t.sanitize(Wi.RESOURCE_URL, e) || '');
        if (Qs(e, 'ResourceURL')) return Su(as(e));
        throw new Ne(904, !1);
      }
      function Bu(e, t, n) {
        return (function e_(e, t) {
          return ('src' === t &&
            ('embed' === e ||
              'frame' === e ||
              'iframe' === e ||
              'media' === e ||
              'script' === e)) ||
            ('href' === t && ('base' === e || 'link' === e))
            ? Nu
            : Lu;
        })(
          t,
          n,
        )(e);
      }
      function Ra() {
        const e = at();
        return e && e[Ti];
      }
      const bc = new ei('ENVIRONMENT_INITIALIZER'),
        Vu = new ei('INJECTOR', -1),
        Hu = new ei('INJECTOR_DEF_TYPES');
      class Uu {
        get(t, n = Ie) {
          if (n === Ie) {
            const i = new Error(`NullInjectorError: No provider for ${ce(t)}!`);
            throw ((i.name = 'NullInjectorError'), i);
          }
          return n;
        }
      }
      function t_(e) {
        return { ɵproviders: e };
      }
      function n_(...e) {
        return { ɵproviders: ju(0, e), ɵfromNgModule: !0 };
      }
      function ju(e, ...t) {
        const n = [],
          i = new Set();
        let o;
        return (
          Do(t, l => {
            const u = l;
            yc(u, n, [], i) && (o || (o = []), o.push(u));
          }),
          void 0 !== o && zu(o, n),
          n
        );
      }
      function zu(e, t) {
        for (let n = 0; n < e.length; n++) {
          const { providers: o } = e[n];
          Dc(o, l => {
            t.push(l);
          });
        }
      }
      function yc(e, t, n, i) {
        if (!(e = re(e))) return !1;
        let o = null,
          l = Qt(e);
        const u = !l && kn(e);
        if (l || u) {
          if (u && !u.standalone) return !1;
          o = e;
        } else {
          const E = e.ngModule;
          if (((l = Qt(E)), !l)) return !1;
          o = E;
        }
        const v = i.has(o);
        if (u) {
          if (v) return !1;
          if ((i.add(o), u.dependencies)) {
            const E =
              'function' == typeof u.dependencies
                ? u.dependencies()
                : u.dependencies;
            for (const L of E) yc(L, t, n, i);
          }
        } else {
          if (!l) return !1;
          {
            if (null != l.imports && !v) {
              let L;
              i.add(o);
              try {
                Do(l.imports, Y => {
                  yc(Y, t, n, i) && (L || (L = []), L.push(Y));
                });
              } finally {
              }
              void 0 !== L && zu(L, t);
            }
            if (!v) {
              const L = Ji(o) || (() => new o());
              t.push(
                { provide: o, useFactory: L, deps: tn },
                { provide: Hu, useValue: o, multi: !0 },
                { provide: bc, useValue: () => Je(o), multi: !0 },
              );
            }
            const E = l.providers;
            null == E ||
              v ||
              Dc(E, Y => {
                t.push(Y);
              });
          }
        }
        return o !== e && void 0 !== e.providers;
      }
      function Dc(e, t) {
        for (let n of e)
          Ue(n) && (n = n.ɵproviders), Array.isArray(n) ? Dc(n, t) : t(n);
      }
      const i_ = ue({ provide: String, useValue: ue });
      function Cc(e) {
        return null !== e && 'object' == typeof e && i_ in e;
      }
      function Bs(e) {
        return 'function' == typeof e;
      }
      const xc = new ei('Set Injector scope.'),
        fl = {},
        o_ = {};
      let Ec;
      function pl() {
        return void 0 === Ec && (Ec = new Uu()), Ec;
      }
      class Vs {}
      class Gu extends Vs {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, n, i, o) {
          super(),
            (this.parent = n),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            wc(t, u => this.processProvider(u)),
            this.records.set(Vu, qs(void 0, this)),
            o.has('environment') && this.records.set(Vs, qs(void 0, this));
          const l = this.records.get(xc);
          null != l && 'string' == typeof l.value && this.scopes.add(l.value),
            (this.injectorDefTypes = new Set(this.get(Hu.multi, tn, Bt.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const n = Te(this),
            i = W(void 0);
          try {
            return t();
          } finally {
            Te(n), W(i);
          }
        }
        get(t, n = Ie, i = Bt.Default) {
          this.assertNotDestroyed(), (i = R(i));
          const o = Te(this),
            l = W(void 0);
          try {
            if (!(i & Bt.SkipSelf)) {
              let v = this.records.get(t);
              if (void 0 === v) {
                const E =
                  (function d_(e) {
                    return (
                      'function' == typeof e ||
                      ('object' == typeof e && e instanceof ei)
                    );
                  })(t) && ut(t);
                (v = E && this.injectableDefInScope(E) ? qs(Mc(t), fl) : null),
                  this.records.set(t, v);
              }
              if (null != v) return this.hydrate(t, v);
            }
            return (i & Bt.Self ? pl() : this.parent).get(
              t,
              (n = i & Bt.Optional && n === Ie ? null : n),
            );
          } catch (u) {
            if ('NullInjectorError' === u.name) {
              if (((u[me] = u[me] || []).unshift(ce(t)), o)) throw u;
              return (function z(e, t, n, i) {
                const o = e[me];
                throw (
                  (t[Ot] && o.unshift(t[Ot]),
                  (e.message = (function $e(e, t, n, i = null) {
                    e =
                      e && '\n' === e.charAt(0) && e.charAt(1) == xt
                        ? e.slice(2)
                        : e;
                    let o = ce(t);
                    if (Array.isArray(t)) o = t.map(ce).join(' -> ');
                    else if ('object' == typeof t) {
                      let l = [];
                      for (let u in t)
                        if (t.hasOwnProperty(u)) {
                          let v = t[u];
                          l.push(
                            u +
                              ':' +
                              ('string' == typeof v
                                ? JSON.stringify(v)
                                : ce(v)),
                          );
                        }
                      o = `{${l.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${o}]: ${e.replace(
                      Xe,
                      '\n  ',
                    )}`;
                  })('\n' + e.message, o, n, i)),
                  (e[pe] = o),
                  (e[me] = null),
                  e)
                );
              })(u, t, 'R3InjectorError', this.source);
            }
            throw u;
          } finally {
            W(l), Te(o);
          }
        }
        resolveInjectorInitializers() {
          const t = Te(this),
            n = W(void 0);
          try {
            const i = this.get(bc.multi, tn, Bt.Self);
            for (const o of i) o();
          } finally {
            Te(t), W(n);
          }
        }
        toString() {
          const t = [],
            n = this.records;
          for (const i of n.keys()) t.push(ce(i));
          return `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Ne(205, !1);
        }
        processProvider(t) {
          let n = Bs((t = re(t))) ? t : re(t && t.provide);
          const i = (function a_(e) {
            return Cc(e) ? qs(void 0, e.useValue) : qs(Wu(e), fl);
          })(t);
          if (Bs(t) || !0 !== t.multi) this.records.get(n);
          else {
            let o = this.records.get(n);
            o ||
              ((o = qs(void 0, fl, !0)),
              (o.factory = () => b(o.multi)),
              this.records.set(n, o)),
              (n = t),
              o.multi.push(t);
          }
          this.records.set(n, i);
        }
        hydrate(t, n) {
          return (
            n.value === fl && ((n.value = o_), (n.value = n.factory())),
            'object' == typeof n.value &&
              n.value &&
              (function c_(e) {
                return (
                  null !== e &&
                  'object' == typeof e &&
                  'function' == typeof e.ngOnDestroy
                );
              })(n.value) &&
              this._ngOnDestroyHooks.add(n.value),
            n.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const n = re(t.providedIn);
          return 'string' == typeof n
            ? 'any' === n || this.scopes.has(n)
            : this.injectorDefTypes.has(n);
        }
      }
      function Mc(e) {
        const t = ut(e),
          n = null !== t ? t.factory : Ji(e);
        if (null !== n) return n;
        if (e instanceof ei) throw new Ne(204, !1);
        if (e instanceof Function)
          return (function s_(e) {
            const t = e.length;
            if (t > 0) throw (f(t, '?'), new Ne(204, !1));
            const n = (function yt(e) {
              return (e && (e[dn] || e[Zn])) || null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Ne(204, !1);
      }
      function Wu(e, t, n) {
        let i;
        if (Bs(e)) {
          const o = re(e);
          return Ji(o) || Mc(o);
        }
        if (Cc(e)) i = () => re(e.useValue);
        else if (
          (function Yu(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          i = () => e.useFactory(...b(e.deps || []));
        else if (
          (function $u(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => Je(re(e.useExisting));
        else {
          const o = re(e && (e.useClass || e.provide));
          if (
            !(function l_(e) {
              return !!e.deps;
            })(e)
          )
            return Ji(o) || Mc(o);
          i = () => new o(...b(e.deps));
        }
        return i;
      }
      function qs(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function wc(e, t) {
        for (const n of e)
          Array.isArray(n) ? wc(n, t) : n && Ue(n) ? wc(n.ɵproviders, t) : t(n);
      }
      class u_ {}
      class Ku {}
      class f_ {
        resolveComponentFactory(t) {
          throw (function h_(e) {
            const t = Error(
              `No component factory found for ${ce(
                e,
              )}. Did you add it to @NgModule.entryComponents?`,
            );
            return (t.ngComponent = e), t;
          })(t);
        }
      }
      let Fa = (() => {
        class e {}
        return (e.NULL = new f_()), e;
      })();
      function p_() {
        return Xs(Jn(), at());
      }
      function Xs(e, t) {
        return new Pa(vi(e, t));
      }
      let Pa = (() => {
        class e {
          constructor(n) {
            this.nativeElement = n;
          }
        }
        return (e.__NG_ELEMENT_ID__ = p_), e;
      })();
      function m_(e) {
        return e instanceof Pa ? e.nativeElement : e;
      }
      class Qu {}
      let g_ = (() => {
          class e {}
          return (
            (e.__NG_ELEMENT_ID__ = () =>
              (function __() {
                const e = at(),
                  n = wi(Jn().index, e);
                return (Se(n) ? n : e)[_n];
              })()),
            e
          );
        })(),
        v_ = (() => {
          class e {}
          return (
            (e.ɵprov = Be({
              token: e,
              providedIn: 'root',
              factory: () => null,
            })),
            e
          );
        })();
      class qu {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const b_ = new qu('15.2.8'),
        Ac = {},
        Sc = 'ngOriginalError';
      function Ic(e) {
        return e[Sc];
      }
      class La {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const n = this._findOriginalError(t);
          this._console.error('ERROR', t),
            n && this._console.error('ORIGINAL ERROR', n);
        }
        _findOriginalError(t) {
          let n = t && Ic(t);
          for (; n && Ic(n); ) n = Ic(n);
          return n || null;
        }
      }
      function cs(e) {
        return e instanceof Function ? e() : e;
      }
      function Ju(e, t, n) {
        let i = e.length;
        for (;;) {
          const o = e.indexOf(t, n);
          if (-1 === o) return o;
          if (0 === o || e.charCodeAt(o - 1) <= 32) {
            const l = t.length;
            if (o + l === i || e.charCodeAt(o + l) <= 32) return o;
          }
          n = o + 1;
        }
      }
      const eh = 'ng-template';
      function k_(e, t, n) {
        let i = 0,
          o = !0;
        for (; i < e.length; ) {
          let l = e[i++];
          if ('string' == typeof l && o) {
            const u = e[i++];
            if (n && 'class' === l && -1 !== Ju(u.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === l) {
              for (; i < e.length && 'string' == typeof (l = e[i++]); )
                if (l.toLowerCase() === t) return !0;
              return !1;
            }
            'number' == typeof l && (o = !1);
          }
        }
        return !1;
      }
      function th(e) {
        return 4 === e.type && e.value !== eh;
      }
      function T_(e, t, n) {
        return t === (4 !== e.type || n ? e.value : eh);
      }
      function O_(e, t, n) {
        let i = 4;
        const o = e.attrs || [],
          l = (function P_(e) {
            for (let t = 0; t < e.length; t++) if ($n(e[t])) return t;
            return e.length;
          })(o);
        let u = !1;
        for (let v = 0; v < t.length; v++) {
          const E = t[v];
          if ('number' != typeof E) {
            if (!u)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ('' !== E && !T_(e, E, n)) || ('' === E && 1 === t.length))
                ) {
                  if (Ro(i)) return !1;
                  u = !0;
                }
              } else {
                const L = 8 & i ? E : t[++v];
                if (8 & i && null !== e.attrs) {
                  if (!k_(e.attrs, L, n)) {
                    if (Ro(i)) return !1;
                    u = !0;
                  }
                  continue;
                }
                const oe = R_(8 & i ? 'class' : E, o, th(e), n);
                if (-1 === oe) {
                  if (Ro(i)) return !1;
                  u = !0;
                  continue;
                }
                if ('' !== L) {
                  let Fe;
                  Fe = oe > l ? '' : o[oe + 1].toLowerCase();
                  const Qe = 8 & i ? Fe : null;
                  if ((Qe && -1 !== Ju(Qe, L, 0)) || (2 & i && L !== Fe)) {
                    if (Ro(i)) return !1;
                    u = !0;
                  }
                }
              }
          } else {
            if (!u && !Ro(i) && !Ro(E)) return !1;
            if (u && Ro(E)) continue;
            (u = !1), (i = E | (1 & i));
          }
        }
        return Ro(i) || u;
      }
      function Ro(e) {
        return 0 == (1 & e);
      }
      function R_(e, t, n, i) {
        if (null === t) return -1;
        let o = 0;
        if (i || !n) {
          let l = !1;
          for (; o < t.length; ) {
            const u = t[o];
            if (u === e) return o;
            if (3 === u || 6 === u) l = !0;
            else {
              if (1 === u || 2 === u) {
                let v = t[++o];
                for (; 'string' == typeof v; ) v = t[++o];
                continue;
              }
              if (4 === u) break;
              if (0 === u) {
                o += 4;
                continue;
              }
            }
            o += l ? 1 : 2;
          }
          return -1;
        }
        return (function L_(e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const i = e[n];
              if ('number' == typeof i) return -1;
              if (i === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function nh(e, t, n = !1) {
        for (let i = 0; i < t.length; i++) if (O_(e, t[i], n)) return !0;
        return !1;
      }
      function N_(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const i = t[n];
          if (e.length === i.length) {
            for (let o = 0; o < e.length; o++) if (e[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function ih(e, t) {
        return e ? ':not(' + t.trim() + ')' : t;
      }
      function B_(e) {
        let t = e[0],
          n = 1,
          i = 2,
          o = '',
          l = !1;
        for (; n < e.length; ) {
          let u = e[n];
          if ('string' == typeof u)
            if (2 & i) {
              const v = e[++n];
              o += '[' + u + (v.length > 0 ? '="' + v + '"' : '') + ']';
            } else 8 & i ? (o += '.' + u) : 4 & i && (o += ' ' + u);
          else
            '' !== o && !Ro(u) && ((t += ih(l, o)), (o = '')),
              (i = u),
              (l = l || !Ro(i));
          n++;
        }
        return '' !== o && (t += ih(l, o)), t;
      }
      const Pn = {};
      function rh(e) {
        oh(Sn(), at(), jt() + e, !1);
      }
      function oh(e, t, n, i) {
        if (!i)
          if (3 == (3 & t[fn])) {
            const l = e.preOrderCheckHooks;
            null !== l && wr(t, l, n);
          } else {
            const l = e.preOrderHooks;
            null !== l && Gi(t, l, 0, n);
          }
        xn(n);
      }
      function ch(e, t = null, n = null, i) {
        const o = dh(e, t, n, i);
        return o.resolveInjectorInitializers(), o;
      }
      function dh(e, t = null, n = null, i, o = new Set()) {
        const l = [n || tn, n_(e)];
        return (
          (i = i || ('object' == typeof e ? void 0 : ce(e))),
          new Gu(l, t || pl(), i || null, o)
        );
      }
      let Hs = (() => {
        class e {
          static create(n, i) {
            if (Array.isArray(n)) return ch({ name: '' }, i, n, '');
            {
              const o = n.name ?? '';
              return ch({ name: o }, n.parent, n.providers, o);
            }
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = Ie),
          (e.NULL = new Uu()),
          (e.ɵprov = Be({
            token: e,
            providedIn: 'any',
            factory: () => Je(Vu),
          })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      function ta(e, t = Bt.Default) {
        const n = at();
        return null === n ? Je(e, t) : Ca(Jn(), n, re(e), t);
      }
      function _h() {
        throw new Error('invalid');
      }
      function vh(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const l = n[i + 1];
            if (-1 !== l) {
              const u = e.data[l];
              B(n[i]), u.contentQueries(2, t[l], l);
            }
          }
      }
      function gl(e, t, n, i, o, l, u, v, E, L, Y) {
        const oe = t.blueprint.slice();
        return (
          (oe[_i] = o),
          (oe[fn] = 76 | i),
          (null !== Y || (e && 1024 & e[fn])) && (oe[fn] |= 1024),
          Lr(oe),
          (oe[Vn] = oe[Oi] = e),
          (oe[An] = n),
          (oe[fi] = u || (e && e[fi])),
          (oe[_n] = v || (e && e[_n])),
          (oe[Ti] = E || (e && e[Ti]) || null),
          (oe[Ei] = L || (e && e[Ei]) || null),
          (oe[Un] = l),
          (oe[hr] = (function Xm() {
            return qm++;
          })()),
          (oe[fr] = Y),
          (oe[oi] = 2 == t.type ? e[oi] : oe),
          oe
        );
      }
      function na(e, t, n, i, o) {
        let l = e.data[t];
        if (null === l)
          (l = (function Fc(e, t, n, i, o) {
            const l = Bo(),
              u = _o(),
              E = (e.data[t] = (function dv(e, t, n, i, o, l) {
                return {
                  type: n,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: o,
                  attrs: l,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tView: null,
                  next: null,
                  prev: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, u ? l : l && l.parent, n, t, i, o));
            return (
              null === e.firstChild && (e.firstChild = E),
              null !== l &&
                (u
                  ? null == l.child && null !== E.parent && (l.child = E)
                  : null === l.next && ((l.next = E), (E.prev = l))),
              E
            );
          })(e, t, n, i, o)),
            (function Xr() {
              return yn.lFrame.inI18n;
            })() && (l.flags |= 32);
        else if (64 & l.type) {
          (l.type = n), (l.value = i), (l.attrs = o);
          const u = (function bi() {
            const e = yn.lFrame,
              t = e.currentTNode;
            return e.isParent ? t : t.parent;
          })();
          l.injectorIndex = null === u ? -1 : u.injectorIndex;
        }
        return yi(l, !0), l;
      }
      function Na(e, t, n, i) {
        if (0 === n) return -1;
        const o = t.length;
        for (let l = 0; l < n; l++)
          t.push(i), e.blueprint.push(i), e.data.push(null);
        return o;
      }
      function Pc(e, t, n) {
        S(t);
        try {
          const i = e.viewQuery;
          null !== i && $c(1, i, n);
          const o = e.template;
          null !== o && bh(e, t, o, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && vh(e, t),
            e.staticViewQueries && $c(2, e.viewQuery, n);
          const l = e.components;
          null !== l &&
            (function av(e, t) {
              for (let n = 0; n < t.length; n++) kv(e, t[n]);
            })(t, l);
        } catch (i) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[fn] &= -5), qe();
        }
      }
      function _l(e, t, n, i) {
        const o = t[fn];
        if (128 != (128 & o)) {
          S(t);
          try {
            Lr(t),
              (function qr(e) {
                return (yn.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== n && bh(e, t, n, 2, i);
            const u = 3 == (3 & o);
            if (u) {
              const L = e.preOrderCheckHooks;
              null !== L && wr(t, L, null);
            } else {
              const L = e.preOrderHooks;
              null !== L && Gi(t, L, 0, null), y(t, 0);
            }
            if (
              ((function Sv(e) {
                for (let t = ic(e); null !== t; t = rc(t)) {
                  if (!t[or]) continue;
                  const n = t[Fi];
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    512 & o[fn] || ao(o[Vn], 1), (o[fn] |= 512);
                  }
                }
              })(t),
              (function Av(e) {
                for (let t = ic(e); null !== t; t = rc(t))
                  for (let n = J; n < t.length; n++) {
                    const i = t[n],
                      o = i[$t];
                    Pr(i) && _l(o, i, o.template, i[An]);
                  }
              })(t),
              null !== e.contentQueries && vh(e, t),
              u)
            ) {
              const L = e.contentCheckHooks;
              null !== L && wr(t, L);
            } else {
              const L = e.contentHooks;
              null !== L && Gi(t, L, 1), y(t, 1);
            }
            !(function ov(e, t) {
              const n = e.hostBindingOpCodes;
              if (null !== n)
                try {
                  for (let i = 0; i < n.length; i++) {
                    const o = n[i];
                    if (o < 0) xn(~o);
                    else {
                      const l = o,
                        u = n[++i],
                        v = n[++i];
                      er(u, l), v(2, t[l]);
                    }
                  }
                } finally {
                  xn(-1);
                }
            })(e, t);
            const v = e.components;
            null !== v &&
              (function sv(e, t) {
                for (let n = 0; n < t.length; n++) Iv(e, t[n]);
              })(t, v);
            const E = e.viewQuery;
            if ((null !== E && $c(2, E, i), u)) {
              const L = e.viewCheckHooks;
              null !== L && wr(t, L);
            } else {
              const L = e.viewHooks;
              null !== L && Gi(t, L, 2), y(t, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (t[fn] &= -41),
              512 & t[fn] && ((t[fn] &= -513), ao(t[Vn], -1));
          } finally {
            qe();
          }
        }
      }
      function bh(e, t, n, i, o) {
        const l = jt(),
          u = 2 & i;
        try {
          xn(-1),
            u && t.length > hn && oh(e, t, hn, !1),
            Xn(u ? 2 : 0, o),
            n(i, o);
        } finally {
          xn(l), Xn(u ? 3 : 1, o);
        }
      }
      function Lc(e, t, n) {
        if (St(t)) {
          const o = t.directiveEnd;
          for (let l = t.directiveStart; l < o; l++) {
            const u = e.data[l];
            u.contentQueries && u.contentQueries(1, n[l], l);
          }
        }
      }
      function Nc(e, t, n) {
        et() &&
          ((function _v(e, t, n, i) {
            const o = n.directiveStart,
              l = n.directiveEnd;
            It(n) &&
              (function Ev(e, t, n) {
                const i = vi(t, e),
                  o = yh(n),
                  l = e[fi],
                  u = vl(
                    e,
                    gl(
                      e,
                      o,
                      null,
                      n.onPush ? 32 : 16,
                      i,
                      t,
                      l,
                      l.createRenderer(i, n),
                      null,
                      null,
                      null,
                    ),
                  );
                e[t.index] = u;
              })(t, n, e.data[o + n.componentOffset]),
              e.firstCreatePass || fs(n, t),
              Ir(i, t);
            const u = n.initialInputs;
            for (let v = o; v < l; v++) {
              const E = e.data[v],
                L = To(t, e, v, n);
              Ir(L, t),
                null !== u && Mv(0, v - o, L, E, 0, u),
                vn(E) && (wi(n.index, t)[An] = To(t, e, v, n));
            }
          })(e, t, n, vi(n, t)),
          64 == (64 & n.flags) && Mh(e, t, n));
      }
      function Bc(e, t, n = vi) {
        const i = t.localNames;
        if (null !== i) {
          let o = t.index + 1;
          for (let l = 0; l < i.length; l += 2) {
            const u = i[l + 1],
              v = -1 === u ? n(t, e) : e[u];
            e[o++] = v;
          }
        }
      }
      function yh(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = Vc(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
            ))
          : t;
      }
      function Vc(e, t, n, i, o, l, u, v, E, L) {
        const Y = hn + i,
          oe = Y + o,
          Fe = (function lv(e, t) {
            const n = [];
            for (let i = 0; i < t; i++) n.push(i < e ? null : Pn);
            return n;
          })(Y, oe),
          Qe = 'function' == typeof L ? L() : L;
        return (Fe[$t] = {
          type: e,
          blueprint: Fe,
          template: n,
          queries: null,
          viewQuery: v,
          declTNode: t,
          data: Fe.slice().fill(null, Y),
          bindingStartIndex: Y,
          expandoStartIndex: oe,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof l ? l() : l,
          pipeRegistry: 'function' == typeof u ? u() : u,
          firstChild: null,
          schemas: E,
          consts: Qe,
          incompleteFirstPass: !1,
        });
      }
      function Dh(e, t, n, i) {
        const o = Ah(t);
        null === n
          ? o.push(i)
          : (o.push(n), e.firstCreatePass && Sh(e).push(i, o.length - 1));
      }
      function Ch(e, t, n, i) {
        for (let o in e)
          if (e.hasOwnProperty(o)) {
            n = null === n ? {} : n;
            const l = e[o];
            null === i
              ? xh(n, t, o, l)
              : i.hasOwnProperty(o) && xh(n, t, i[o], l);
          }
        return n;
      }
      function xh(e, t, n, i) {
        e.hasOwnProperty(n) ? e[n].push(t, i) : (e[n] = [t, i]);
      }
      function uo(e, t, n, i, o, l, u, v) {
        const E = vi(t, n);
        let Y,
          L = t.inputs;
        !v && null != L && (Y = L[i])
          ? (Yc(e, n, Y, i, o),
            It(t) &&
              (function fv(e, t) {
                const n = wi(t, e);
                16 & n[fn] || (n[fn] |= 32);
              })(n, t.index))
          : 3 & t.type &&
            ((i = (function hv(e) {
              return 'class' === e
                ? 'className'
                : 'for' === e
                ? 'htmlFor'
                : 'formaction' === e
                ? 'formAction'
                : 'innerHtml' === e
                ? 'innerHTML'
                : 'readonly' === e
                ? 'readOnly'
                : 'tabindex' === e
                ? 'tabIndex'
                : e;
            })(i)),
            (o = null != u ? u(o, t.value || '', i) : o),
            l.setProperty(E, i, o));
      }
      function Hc(e, t, n, i) {
        if (et()) {
          const o = null === i ? null : { '': -1 },
            l = (function bv(e, t) {
              const n = e.directiveRegistry;
              let i = null,
                o = null;
              if (n)
                for (let l = 0; l < n.length; l++) {
                  const u = n[l];
                  if (nh(t, u.selectors, !1))
                    if ((i || (i = []), vn(u)))
                      if (null !== u.findHostDirectiveDefs) {
                        const v = [];
                        (o = o || new Map()),
                          u.findHostDirectiveDefs(u, v, o),
                          i.unshift(...v, u),
                          Uc(e, t, v.length);
                      } else i.unshift(u), Uc(e, t, 0);
                    else
                      (o = o || new Map()),
                        u.findHostDirectiveDefs?.(u, i, o),
                        i.push(u);
                }
              return null === i ? null : [i, o];
            })(e, n);
          let u, v;
          null === l ? (u = v = null) : ([u, v] = l),
            null !== u && Eh(e, t, n, u, o, v),
            o &&
              (function yv(e, t, n) {
                if (t) {
                  const i = (e.localNames = []);
                  for (let o = 0; o < t.length; o += 2) {
                    const l = n[t[o + 1]];
                    if (null == l) throw new Ne(-301, !1);
                    i.push(t[o], l);
                  }
                }
              })(n, i, o);
        }
        n.mergedAttrs = ii(n.mergedAttrs, n.attrs);
      }
      function Eh(e, t, n, i, o, l) {
        for (let L = 0; L < i.length; L++) ir(fs(n, t), e, i[L].type);
        !(function Cv(e, t, n) {
          (e.flags |= 1),
            (e.directiveStart = t),
            (e.directiveEnd = t + n),
            (e.providerIndexes = t);
        })(n, e.data.length, i.length);
        for (let L = 0; L < i.length; L++) {
          const Y = i[L];
          Y.providersResolver && Y.providersResolver(Y);
        }
        let u = !1,
          v = !1,
          E = Na(e, t, i.length, null);
        for (let L = 0; L < i.length; L++) {
          const Y = i[L];
          (n.mergedAttrs = ii(n.mergedAttrs, Y.hostAttrs)),
            xv(e, n, t, E, Y),
            Dv(E, Y, o),
            null !== Y.contentQueries && (n.flags |= 4),
            (null !== Y.hostBindings ||
              null !== Y.hostAttrs ||
              0 !== Y.hostVars) &&
              (n.flags |= 64);
          const oe = Y.type.prototype;
          !u &&
            (oe.ngOnChanges || oe.ngOnInit || oe.ngDoCheck) &&
            ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index),
            (u = !0)),
            !v &&
              (oe.ngOnChanges || oe.ngDoCheck) &&
              ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(
                n.index,
              ),
              (v = !0)),
            E++;
        }
        !(function uv(e, t, n) {
          const o = t.directiveEnd,
            l = e.data,
            u = t.attrs,
            v = [];
          let E = null,
            L = null;
          for (let Y = t.directiveStart; Y < o; Y++) {
            const oe = l[Y],
              Fe = n ? n.get(oe) : null,
              bt = Fe ? Fe.outputs : null;
            (E = Ch(oe.inputs, Y, E, Fe ? Fe.inputs : null)),
              (L = Ch(oe.outputs, Y, L, bt));
            const Vt = null === E || null === u || th(t) ? null : wv(E, Y, u);
            v.push(Vt);
          }
          null !== E &&
            (E.hasOwnProperty('class') && (t.flags |= 8),
            E.hasOwnProperty('style') && (t.flags |= 16)),
            (t.initialInputs = v),
            (t.inputs = E),
            (t.outputs = L);
        })(e, n, l);
      }
      function Mh(e, t, n) {
        const i = n.directiveStart,
          o = n.directiveEnd,
          l = n.index,
          u = (function Vo() {
            return yn.lFrame.currentDirectiveIndex;
          })();
        try {
          xn(l);
          for (let v = i; v < o; v++) {
            const E = e.data[v],
              L = t[v];
            vo(v),
              (null !== E.hostBindings ||
                0 !== E.hostVars ||
                null !== E.hostAttrs) &&
                vv(E, L);
          }
        } finally {
          xn(-1), vo(u);
        }
      }
      function vv(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function Uc(e, t, n) {
        (t.componentOffset = n),
          (e.components ?? (e.components = [])).push(t.index);
      }
      function Dv(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) n[t.exportAs[i]] = e;
          vn(t) && (n[''] = e);
        }
      }
      function xv(e, t, n, i, o) {
        e.data[i] = o;
        const l = o.factory || (o.factory = Ji(o.type)),
          u = new le(l, vn(o), ta);
        (e.blueprint[i] = u),
          (n[i] = u),
          (function mv(e, t, n, i, o) {
            const l = o.hostBindings;
            if (l) {
              let u = e.hostBindingOpCodes;
              null === u && (u = e.hostBindingOpCodes = []);
              const v = ~t.index;
              (function gv(e) {
                let t = e.length;
                for (; t > 0; ) {
                  const n = e[--t];
                  if ('number' == typeof n && n < 0) return n;
                }
                return 0;
              })(u) != v && u.push(v),
                u.push(n, i, l);
            }
          })(e, t, i, Na(e, n, o.hostVars, Pn), o);
      }
      function Wo(e, t, n, i, o, l) {
        const u = vi(e, t);
        !(function jc(e, t, n, i, o, l, u) {
          if (null == l) e.removeAttribute(t, o, n);
          else {
            const v = null == u ? st(l) : u(l, i || '', o);
            e.setAttribute(t, o, v, n);
          }
        })(t[_n], u, l, e.value, n, i, o);
      }
      function Mv(e, t, n, i, o, l) {
        const u = l[t];
        if (null !== u) {
          const v = i.setInput;
          for (let E = 0; E < u.length; ) {
            const L = u[E++],
              Y = u[E++],
              oe = u[E++];
            null !== v ? i.setInput(n, oe, L, Y) : (n[Y] = oe);
          }
        }
      }
      function wv(e, t, n) {
        let i = null,
          o = 0;
        for (; o < n.length; ) {
          const l = n[o];
          if (0 !== l)
            if (5 !== l) {
              if ('number' == typeof l) break;
              if (e.hasOwnProperty(l)) {
                null === i && (i = []);
                const u = e[l];
                for (let v = 0; v < u.length; v += 2)
                  if (u[v] === t) {
                    i.push(l, u[v + 1], n[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function wh(e, t, n, i) {
        return [e, !0, !1, t, null, 0, i, n, null, null];
      }
      function Iv(e, t) {
        const n = wi(t, e);
        if (Pr(n)) {
          const i = n[$t];
          48 & n[fn] ? _l(i, n, i.template, n[An]) : n[ui] > 0 && zc(n);
        }
      }
      function zc(e) {
        for (let i = ic(e); null !== i; i = rc(i))
          for (let o = J; o < i.length; o++) {
            const l = i[o];
            if (Pr(l))
              if (512 & l[fn]) {
                const u = l[$t];
                _l(u, l, u.template, l[An]);
              } else l[ui] > 0 && zc(l);
          }
        const n = e[$t].components;
        if (null !== n)
          for (let i = 0; i < n.length; i++) {
            const o = wi(n[i], e);
            Pr(o) && o[ui] > 0 && zc(o);
          }
      }
      function kv(e, t) {
        const n = wi(t, e),
          i = n[$t];
        (function Tv(e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(i, n),
          Pc(i, n, n[An]);
      }
      function vl(e, t) {
        return e[$i] ? (e[ur][di] = t) : (e[$i] = t), (e[ur] = t), t;
      }
      function bl(e) {
        for (; e; ) {
          e[fn] |= 32;
          const t = ka(e);
          if (Fn(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function yl(e, t, n, i = !0) {
        const o = t[fi];
        o.begin && o.begin();
        try {
          _l(e, t, e.template, n);
        } catch (u) {
          throw (i && kh(t, u), u);
        } finally {
          o.end && o.end();
        }
      }
      function $c(e, t, n) {
        B(0), t(e, n);
      }
      function Ah(e) {
        return e[hi] || (e[hi] = []);
      }
      function Sh(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Ih(e, t, n) {
        return (
          (null === e || vn(e)) &&
            (n = (function ci(e) {
              for (; Array.isArray(e); ) {
                if ('object' == typeof e[qi]) return e;
                e = e[_i];
              }
              return null;
            })(n[t.index])),
          n[_n]
        );
      }
      function kh(e, t) {
        const n = e[Ei],
          i = n ? n.get(La, null) : null;
        i && i.handleError(t);
      }
      function Yc(e, t, n, i, o) {
        for (let l = 0; l < n.length; ) {
          const u = n[l++],
            v = n[l++],
            E = t[u],
            L = e.data[u];
          null !== L.setInput ? L.setInput(E, o, i, v) : (E[v] = o);
        }
      }
      function Dl(e, t, n) {
        let i = n ? e.styles : null,
          o = n ? e.classes : null,
          l = 0;
        if (null !== t)
          for (let u = 0; u < t.length; u++) {
            const v = t[u];
            'number' == typeof v
              ? (l = v)
              : 1 == l
              ? (o = he(o, v))
              : 2 == l && (i = he(i, v + ': ' + t[++u] + ';'));
          }
        n ? (e.styles = i) : (e.stylesWithoutHost = i),
          n ? (e.classes = o) : (e.classesWithoutHost = o);
      }
      function Cl(e, t, n, i, o = !1) {
        for (; null !== n; ) {
          const l = t[n.index];
          if ((null !== l && i.push(li(l)), Ze(l)))
            for (let v = J; v < l.length; v++) {
              const E = l[v],
                L = E[$t].firstChild;
              null !== L && Cl(E[$t], E, L, i);
            }
          const u = n.type;
          if (8 & u) Cl(e, t, n.child, i);
          else if (32 & u) {
            const v = nc(n, t);
            let E;
            for (; (E = v()); ) i.push(E);
          } else if (16 & u) {
            const v = Du(t, n);
            if (Array.isArray(v)) i.push(...v);
            else {
              const E = ka(t[oi]);
              Cl(E[$t], E, v, i, !0);
            }
          }
          n = o ? n.projectionNext : n.next;
        }
        return i;
      }
      class Ba {
        get rootNodes() {
          const t = this._lView,
            n = t[$t];
          return Cl(n, t, n.firstChild, []);
        }
        constructor(t, n) {
          (this._lView = t),
            (this._cdRefInjectingView = n),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[An];
        }
        set context(t) {
          this._lView[An] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[fn]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Vn];
            if (Ze(t)) {
              const n = t[Xi],
                i = n ? n.indexOf(this) : -1;
              i > -1 && (ac(t, i), Os(n, i));
            }
            this._attachedToViewContainer = !1;
          }
          hu(this._lView[$t], this._lView);
        }
        onDestroy(t) {
          Dh(this._lView[$t], this._lView, null, t);
        }
        markForCheck() {
          bl(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[fn] &= -65;
        }
        reattach() {
          this._lView[fn] |= 64;
        }
        detectChanges() {
          yl(this._lView[$t], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Ne(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function fg(e, t) {
              Ta(e, t, t[_n], 2, null, null);
            })(this._lView[$t], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Ne(902, !1);
          this._appRef = t;
        }
      }
      class Ov extends Ba {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          yl(t[$t], t, t[An], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Th extends Fa {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const n = kn(t);
          return new Va(n, this.ngModule);
        }
      }
      function Oh(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      class Fv {
        constructor(t, n) {
          (this.injector = t), (this.parentInjector = n);
        }
        get(t, n, i) {
          i = R(i);
          const o = this.injector.get(t, Ac, i);
          return o !== Ac || n === Ac ? o : this.parentInjector.get(t, n, i);
        }
      }
      class Va extends Ku {
        get inputs() {
          return Oh(this.componentDef.inputs);
        }
        get outputs() {
          return Oh(this.componentDef.outputs);
        }
        constructor(t, n) {
          super(),
            (this.componentDef = t),
            (this.ngModule = n),
            (this.componentType = t.type),
            (this.selector = (function V_(e) {
              return e.map(B_).join(',');
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!n);
        }
        create(t, n, i, o) {
          let l = (o = o || this.ngModule) instanceof Vs ? o : o?.injector;
          l &&
            null !== this.componentDef.getStandaloneInjector &&
            (l = this.componentDef.getStandaloneInjector(l) || l);
          const u = l ? new Fv(t, l) : t,
            v = u.get(Qu, null);
          if (null === v) throw new Ne(407, !1);
          const E = u.get(v_, null),
            L = v.createRenderer(null, this.componentDef),
            Y = this.componentDef.selectors[0][0] || 'div',
            oe = i
              ? (function cv(e, t, n) {
                  return e.selectRootElement(t, n === Nt.ShadowDom);
                })(L, i, this.componentDef.encapsulation)
              : sc(
                  L,
                  Y,
                  (function Rv(e) {
                    const t = e.toLowerCase();
                    return 'svg' === t ? Fr : 'math' === t ? 'math' : null;
                  })(Y),
                ),
            Fe = this.componentDef.onPush ? 288 : 272,
            Qe = Vc(0, null, null, 1, 0, null, null, null, null, null),
            bt = gl(null, Qe, null, Fe, null, null, v, L, E, u, null);
          let Vt, Jt;
          S(bt);
          try {
            const cn = this.componentDef;
            let Mn,
              kt = null;
            cn.findHostDirectiveDefs
              ? ((Mn = []),
                (kt = new Map()),
                cn.findHostDirectiveDefs(cn, Mn, kt),
                Mn.push(cn))
              : (Mn = [cn]);
            const On = (function Lv(e, t) {
                const n = e[$t],
                  i = hn;
                return (e[i] = t), na(n, i, 2, '#host', null);
              })(bt, oe),
              Ri = (function Nv(e, t, n, i, o, l, u, v) {
                const E = o[$t];
                !(function Bv(e, t, n, i) {
                  for (const o of e)
                    t.mergedAttrs = ii(t.mergedAttrs, o.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Dl(t, t.mergedAttrs, !0), null !== n && Eu(i, n, t));
                })(i, e, t, u);
                const L = l.createRenderer(t, n),
                  Y = gl(
                    o,
                    yh(n),
                    null,
                    n.onPush ? 32 : 16,
                    o[e.index],
                    e,
                    l,
                    L,
                    v || null,
                    null,
                    null,
                  );
                return (
                  E.firstCreatePass && Uc(E, e, i.length - 1),
                  vl(o, Y),
                  (o[e.index] = Y)
                );
              })(On, oe, cn, Mn, bt, v, L);
            (Jt = Zr(Qe, hn)),
              oe &&
                (function Hv(e, t, n, i) {
                  if (i) gn(e, n, ['ng-version', b_.full]);
                  else {
                    const { attrs: o, classes: l } = (function H_(e) {
                      const t = [],
                        n = [];
                      let i = 1,
                        o = 2;
                      for (; i < e.length; ) {
                        let l = e[i];
                        if ('string' == typeof l)
                          2 === o
                            ? '' !== l && t.push(l, e[++i])
                            : 8 === o && n.push(l);
                        else {
                          if (!Ro(o)) break;
                          o = l;
                        }
                        i++;
                      }
                      return { attrs: t, classes: n };
                    })(t.selectors[0]);
                    o && gn(e, n, o),
                      l && l.length > 0 && xu(e, n, l.join(' '));
                  }
                })(L, cn, oe, i),
              void 0 !== n &&
                (function Uv(e, t, n) {
                  const i = (e.projection = []);
                  for (let o = 0; o < t.length; o++) {
                    const l = n[o];
                    i.push(null != l ? Array.from(l) : null);
                  }
                })(Jt, this.ngContentSelectors, n),
              (Vt = (function Vv(e, t, n, i, o, l) {
                const u = Jn(),
                  v = o[$t],
                  E = vi(u, o);
                Eh(v, o, u, n, null, i);
                for (let Y = 0; Y < n.length; Y++)
                  Ir(To(o, v, u.directiveStart + Y, u), o);
                Mh(v, o, u), E && Ir(E, o);
                const L = To(o, v, u.directiveStart + u.componentOffset, u);
                if (((e[An] = o[An] = L), null !== l))
                  for (const Y of l) Y(L, t);
                return Lc(v, u, e), L;
              })(Ri, cn, Mn, kt, bt, [jv])),
              Pc(Qe, bt, null);
          } finally {
            qe();
          }
          return new Pv(this.componentType, Vt, Xs(Jt, bt), bt, Jt);
        }
      }
      class Pv extends u_ {
        constructor(t, n, i, o, l) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = l),
            (this.instance = n),
            (this.hostView = this.changeDetectorRef = new Ov(o)),
            (this.componentType = t);
        }
        setInput(t, n) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[t])) {
            const l = this._rootLView;
            Yc(l[$t], l, o, t, n), bl(wi(this._tNode.index, l));
          }
        }
        get injector() {
          return new Ho(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function jv() {
        const e = Jn();
        ni(at()[$t], e);
      }
      function Gc(e) {
        let t = (function Rh(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          n = !0;
        const i = [e];
        for (; t; ) {
          let o;
          if (vn(e)) o = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Ne(903, !1);
            o = t.ɵdir;
          }
          if (o) {
            if (n) {
              i.push(o);
              const u = e;
              (u.inputs = Wc(e.inputs)),
                (u.declaredInputs = Wc(e.declaredInputs)),
                (u.outputs = Wc(e.outputs));
              const v = o.hostBindings;
              v && Gv(e, v);
              const E = o.viewQuery,
                L = o.contentQueries;
              if (
                (E && $v(e, E),
                L && Yv(e, L),
                _e(e.inputs, o.inputs),
                _e(e.declaredInputs, o.declaredInputs),
                _e(e.outputs, o.outputs),
                vn(o) && o.data.animation)
              ) {
                const Y = e.data;
                Y.animation = (Y.animation || []).concat(o.data.animation);
              }
            }
            const l = o.features;
            if (l)
              for (let u = 0; u < l.length; u++) {
                const v = l[u];
                v && v.ngInherit && v(e), v === Gc && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function zv(e) {
          let t = 0,
            n = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const o = e[i];
            (o.hostVars = t += o.hostVars),
              (o.hostAttrs = ii(o.hostAttrs, (n = ii(n, o.hostAttrs))));
          }
        })(i);
      }
      function Wc(e) {
        return e === Yt ? {} : e === tn ? [] : e;
      }
      function $v(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function Yv(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (i, o, l) => {
              t(i, o, l), n(i, o, l);
            }
          : t;
      }
      function Gv(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (i, o) => {
              t(i, o), n(i, o);
            }
          : t;
      }
      function xl(e) {
        return (
          !!Kc(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function Kc(e) {
        return null !== e && ('function' == typeof e || 'object' == typeof e);
      }
      function Ko(e, t, n) {
        return (e[t] = n);
      }
      function kr(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function Zc(e, t, n, i) {
        const o = at();
        return kr(o, Nr(), t) && (Sn(), Wo(sn(), o, e, t, n, i)), Zc;
      }
      function ra(e, t, n, i) {
        return kr(e, Nr(), n) ? t + st(n) + i : Pn;
      }
      function Gh(e, t, n, i, o, l, u, v) {
        const E = at(),
          L = Sn(),
          Y = e + hn,
          oe = L.firstCreatePass
            ? (function nb(e, t, n, i, o, l, u, v, E) {
                const L = t.consts,
                  Y = na(t, e, 4, u || null, Pi(L, v));
                Hc(t, n, Y, Pi(L, E)), ni(t, Y);
                const oe = (Y.tView = Vc(
                  2,
                  Y,
                  i,
                  o,
                  l,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  L,
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, Y),
                    (oe.queries = t.queries.embeddedTView(Y))),
                  Y
                );
              })(Y, L, E, t, n, i, o, l, u)
            : L.data[Y];
        yi(oe, !1);
        const Fe = E[_n].createComment('');
        al(L, E, Fe, oe),
          Ir(Fe, E),
          vl(E, (E[Y] = wh(Fe, E, Fe, oe))),
          un(oe) && Nc(L, E, oe),
          null != u && Bc(E, oe, v);
      }
      function Wh(e) {
        return Dr(
          (function hs() {
            return yn.lFrame.contextLView;
          })(),
          hn + e,
        );
      }
      function Qc(e, t, n) {
        const i = at();
        return kr(i, Nr(), t) && uo(Sn(), sn(), i, e, t, i[_n], n, !1), Qc;
      }
      function qc(e, t, n, i, o) {
        const u = o ? 'class' : 'style';
        Yc(e, n, t.inputs[u], u, i);
      }
      function Ml(e, t, n, i) {
        const o = at(),
          l = Sn(),
          u = hn + e,
          v = o[_n],
          E = l.firstCreatePass
            ? (function rb(e, t, n, i, o, l) {
                const u = t.consts,
                  E = na(t, e, 2, i, Pi(u, o));
                return (
                  Hc(t, n, E, Pi(u, l)),
                  null !== E.attrs && Dl(E, E.attrs, !1),
                  null !== E.mergedAttrs && Dl(E, E.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, E),
                  E
                );
              })(u, l, o, t, n, i)
            : l.data[u],
          L = (o[u] = sc(
            v,
            t,
            (function Ai() {
              return yn.lFrame.currentNamespace;
            })(),
          )),
          Y = un(E);
        return (
          yi(E, !0),
          Eu(v, L, E),
          32 != (32 & E.flags) && al(l, o, L, E),
          0 ===
            (function I() {
              return yn.lFrame.elementDepthCount;
            })() && Ir(L, o),
          (function M() {
            yn.lFrame.elementDepthCount++;
          })(),
          Y && (Nc(l, o, E), Lc(l, E, o)),
          null !== i && Bc(o, E),
          Ml
        );
      }
      function wl() {
        let e = Jn();
        _o() ? ko() : ((e = e.parent), yi(e, !1));
        const t = e;
        !(function G() {
          yn.lFrame.elementDepthCount--;
        })();
        const n = Sn();
        return (
          n.firstCreatePass && (ni(n, e), St(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function Rt(e) {
              return 0 != (8 & e.flags);
            })(t) &&
            qc(n, t, at(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function zt(e) {
              return 0 != (16 & e.flags);
            })(t) &&
            qc(n, t, at(), t.stylesWithoutHost, !1),
          wl
        );
      }
      function Xc(e, t, n, i) {
        return Ml(e, t, n, i), wl(), Xc;
      }
      function Al(e, t, n) {
        const i = at(),
          o = Sn(),
          l = e + hn,
          u = o.firstCreatePass
            ? (function ob(e, t, n, i, o) {
                const l = t.consts,
                  u = Pi(l, i),
                  v = na(t, e, 8, 'ng-container', u);
                return (
                  null !== u && Dl(v, u, !0),
                  Hc(t, n, v, Pi(l, o)),
                  null !== t.queries && t.queries.elementStart(t, v),
                  v
                );
              })(l, o, i, t, n)
            : o.data[l];
        yi(u, !0);
        const v = (i[l] = i[_n].createComment(''));
        return (
          al(o, i, v, u),
          Ir(v, i),
          un(u) && (Nc(o, i, u), Lc(o, u, i)),
          null != n && Bc(i, u),
          Al
        );
      }
      function Sl() {
        let e = Jn();
        const t = Sn();
        return (
          _o() ? ko() : ((e = e.parent), yi(e, !1)),
          t.firstCreatePass && (ni(t, e), St(e) && t.queries.elementEnd(e)),
          Sl
        );
      }
      function Zh() {
        return at();
      }
      function Jc(e) {
        return !!e && 'function' == typeof e.then;
      }
      function Qh(e) {
        return !!e && 'function' == typeof e.subscribe;
      }
      const qh = Qh;
      function ed(e, t, n, i) {
        const o = at(),
          l = Sn(),
          u = Jn();
        return Xh(l, o, o[_n], u, e, t, i), ed;
      }
      function td(e, t) {
        const n = Jn(),
          i = at(),
          o = Sn();
        return Xh(o, i, Ih(lo(o.data), n, i), n, e, t), td;
      }
      function Xh(e, t, n, i, o, l, u) {
        const v = un(i),
          L = e.firstCreatePass && Sh(e),
          Y = t[An],
          oe = Ah(t);
        let Fe = !0;
        if (3 & i.type || u) {
          const Vt = vi(i, t),
            Jt = u ? u(Vt) : Vt,
            cn = oe.length,
            Mn = u ? On => u(li(On[i.index])) : i.index;
          let kt = null;
          if (
            (!u &&
              v &&
              (kt = (function sb(e, t, n, i) {
                const o = e.cleanup;
                if (null != o)
                  for (let l = 0; l < o.length - 1; l += 2) {
                    const u = o[l];
                    if (u === n && o[l + 1] === i) {
                      const v = t[hi],
                        E = o[l + 2];
                      return v.length > E ? v[E] : null;
                    }
                    'string' == typeof u && (l += 2);
                  }
                return null;
              })(e, t, o, i.index)),
            null !== kt)
          )
            ((kt.__ngLastListenerFn__ || kt).__ngNextListenerFn__ = l),
              (kt.__ngLastListenerFn__ = l),
              (Fe = !1);
          else {
            l = ef(i, t, Y, l, !1);
            const On = n.listen(Jt, o, l);
            oe.push(l, On), L && L.push(o, Mn, cn, cn + 1);
          }
        } else l = ef(i, t, Y, l, !1);
        const Qe = i.outputs;
        let bt;
        if (Fe && null !== Qe && (bt = Qe[o])) {
          const Vt = bt.length;
          if (Vt)
            for (let Jt = 0; Jt < Vt; Jt += 2) {
              const Ri = t[bt[Jt]][bt[Jt + 1]].subscribe(l),
                Ki = oe.length;
              oe.push(l, Ri), L && L.push(o, i.index, Ki, -(Ki + 1));
            }
        }
      }
      function Jh(e, t, n, i) {
        try {
          return Xn(6, t, n), !1 !== n(i);
        } catch (o) {
          return kh(e, o), !1;
        } finally {
          Xn(7, t, n);
        }
      }
      function ef(e, t, n, i, o) {
        return function l(u) {
          if (u === Function) return i;
          bl(e.componentOffset > -1 ? wi(e.index, t) : t);
          let E = Jh(t, n, i, u),
            L = l.__ngNextListenerFn__;
          for (; L; ) (E = Jh(t, n, L, u) && E), (L = L.__ngNextListenerFn__);
          return o && !1 === E && (u.preventDefault(), (u.returnValue = !1)), E;
        };
      }
      function tf(e = 1) {
        return (function ht(e) {
          return (yn.lFrame.contextLView = (function Wt(e, t) {
            for (; e > 0; ) (t = t[Oi]), e--;
            return t;
          })(e, yn.lFrame.contextLView))[An];
        })(e);
      }
      function ab(e, t) {
        let n = null;
        const i = (function F_(e) {
          const t = e.attrs;
          if (null != t) {
            const n = t.indexOf(5);
            if (!(1 & n)) return t[n + 1];
          }
          return null;
        })(e);
        for (let o = 0; o < t.length; o++) {
          const l = t[o];
          if ('*' !== l) {
            if (null === i ? nh(e, l, !0) : N_(i, l)) return o;
          } else n = o;
        }
        return n;
      }
      function nf(e) {
        const t = at()[oi][Un];
        if (!t.projection) {
          const i = (t.projection = f(e ? e.length : 1, null)),
            o = i.slice();
          let l = t.child;
          for (; null !== l; ) {
            const u = e ? ab(l, e) : 0;
            null !== u &&
              (o[u] ? (o[u].projectionNext = l) : (i[u] = l), (o[u] = l)),
              (l = l.next);
          }
        }
      }
      function rf(e, t = 0, n) {
        const i = at(),
          o = Sn(),
          l = na(o, hn + e, 16, null, n || null);
        null === l.projection && (l.projection = t),
          ko(),
          32 != (32 & l.flags) &&
            (function Dg(e, t, n) {
              Cu(t[_n], 0, t, n, fu(e, n, t), _u(n.parent || t[Un], n, t));
            })(o, i, l);
      }
      function Il(e, t) {
        return (e << 17) | (t << 2);
      }
      function ys(e) {
        return (e >> 17) & 32767;
      }
      function id(e) {
        return 2 | e;
      }
      function js(e) {
        return (131068 & e) >> 2;
      }
      function rd(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function od(e) {
        return 1 | e;
      }
      function mf(e, t, n, i, o) {
        const l = e[n + 1],
          u = null === t;
        let v = i ? ys(l) : js(l),
          E = !1;
        for (; 0 !== v && (!1 === E || u); ) {
          const Y = e[v + 1];
          fb(e[v], t) && ((E = !0), (e[v + 1] = i ? od(Y) : id(Y))),
            (v = i ? ys(Y) : js(Y));
        }
        E && (e[n + 1] = i ? id(l) : od(l));
      }
      function fb(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || 'string' != typeof t) && Ve(e, t) >= 0)
        );
      }
      const sr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function gf(e) {
        return e.substring(sr.key, sr.keyEnd);
      }
      function _f(e, t) {
        const n = sr.textEnd;
        return n === t
          ? -1
          : ((t = sr.keyEnd =
              (function _b(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (sr.key = t), n)),
            ha(e, t, n));
      }
      function ha(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function sd(e, t, n) {
        return Fo(e, t, n, !1), sd;
      }
      function ad(e, t) {
        return Fo(e, t, null, !0), ad;
      }
      function Qo(e, t) {
        for (
          let n = (function mb(e) {
            return (
              (function bf(e) {
                (sr.key = 0),
                  (sr.keyEnd = 0),
                  (sr.value = 0),
                  (sr.valueEnd = 0),
                  (sr.textEnd = e.length);
              })(e),
              _f(e, ha(e, 0, sr.textEnd))
            );
          })(t);
          n >= 0;
          n = _f(t, n)
        )
          H(e, gf(t), !0);
      }
      function Fo(e, t, n, i) {
        const o = at(),
          l = Sn(),
          u = Er(2);
        l.firstUpdatePass && xf(l, e, u, i),
          t !== Pn &&
            kr(o, u, t) &&
            Mf(
              l,
              l.data[jt()],
              o,
              o[_n],
              e,
              (o[u + 1] = (function Ib(e, t) {
                return (
                  null == e ||
                    '' === e ||
                    ('string' == typeof t
                      ? (e += t)
                      : 'object' == typeof e && (e = ce(as(e)))),
                  e
                );
              })(t, n)),
              i,
              u,
            );
      }
      function Cf(e, t) {
        return t >= e.expandoStartIndex;
      }
      function xf(e, t, n, i) {
        const o = e.data;
        if (null === o[n + 1]) {
          const l = o[jt()],
            u = Cf(e, n);
          Af(l, i) && null === t && !u && (t = !1),
            (t = (function Cb(e, t, n, i) {
              const o = lo(e);
              let l = i ? t.residualClasses : t.residualStyles;
              if (null === o)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((n = Ua((n = ld(null, e, t, n, i)), t.attrs, i)),
                  (l = null));
              else {
                const u = t.directiveStylingLast;
                if (-1 === u || e[u] !== o)
                  if (((n = ld(o, e, t, n, i)), null === l)) {
                    let E = (function xb(e, t, n) {
                      const i = n ? t.classBindings : t.styleBindings;
                      if (0 !== js(i)) return e[ys(i)];
                    })(e, t, i);
                    void 0 !== E &&
                      Array.isArray(E) &&
                      ((E = ld(null, e, t, E[1], i)),
                      (E = Ua(E, t.attrs, i)),
                      (function Eb(e, t, n, i) {
                        e[ys(n ? t.classBindings : t.styleBindings)] = i;
                      })(e, t, i, E));
                  } else
                    l = (function Mb(e, t, n) {
                      let i;
                      const o = t.directiveEnd;
                      for (let l = 1 + t.directiveStylingLast; l < o; l++)
                        i = Ua(i, e[l].hostAttrs, n);
                      return Ua(i, t.attrs, n);
                    })(e, t, i);
              }
              return (
                void 0 !== l &&
                  (i ? (t.residualClasses = l) : (t.residualStyles = l)),
                n
              );
            })(o, l, t, i)),
            (function ub(e, t, n, i, o, l) {
              let u = l ? t.classBindings : t.styleBindings,
                v = ys(u),
                E = js(u);
              e[i] = n;
              let Y,
                L = !1;
              if (
                (Array.isArray(n)
                  ? ((Y = n[1]), (null === Y || Ve(n, Y) > 0) && (L = !0))
                  : (Y = n),
                o)
              )
                if (0 !== E) {
                  const Fe = ys(e[v + 1]);
                  (e[i + 1] = Il(Fe, v)),
                    0 !== Fe && (e[Fe + 1] = rd(e[Fe + 1], i)),
                    (e[v + 1] = (function cb(e, t) {
                      return (131071 & e) | (t << 17);
                    })(e[v + 1], i));
                } else
                  (e[i + 1] = Il(v, 0)),
                    0 !== v && (e[v + 1] = rd(e[v + 1], i)),
                    (v = i);
              else
                (e[i + 1] = Il(E, 0)),
                  0 === v ? (v = i) : (e[E + 1] = rd(e[E + 1], i)),
                  (E = i);
              L && (e[i + 1] = id(e[i + 1])),
                mf(e, Y, i, !0),
                mf(e, Y, i, !1),
                (function hb(e, t, n, i, o) {
                  const l = o ? e.residualClasses : e.residualStyles;
                  null != l &&
                    'string' == typeof t &&
                    Ve(l, t) >= 0 &&
                    (n[i + 1] = od(n[i + 1]));
                })(t, Y, e, i, l),
                (u = Il(v, E)),
                l ? (t.classBindings = u) : (t.styleBindings = u);
            })(o, l, t, n, u, i);
        }
      }
      function ld(e, t, n, i, o) {
        let l = null;
        const u = n.directiveEnd;
        let v = n.directiveStylingLast;
        for (
          -1 === v ? (v = n.directiveStart) : v++;
          v < u && ((l = t[v]), (i = Ua(i, l.hostAttrs, o)), l !== e);

        )
          v++;
        return null !== e && (n.directiveStylingLast = v), i;
      }
      function Ua(e, t, n) {
        const i = n ? 1 : 2;
        let o = -1;
        if (null !== t)
          for (let l = 0; l < t.length; l++) {
            const u = t[l];
            'number' == typeof u
              ? (o = u)
              : o === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ['', e]),
                H(e, u, !!n || t[++l]));
          }
        return void 0 === e ? null : e;
      }
      function Mf(e, t, n, i, o, l, u, v) {
        if (!(3 & t.type)) return;
        const E = e.data,
          L = E[v + 1],
          Y = (function db(e) {
            return 1 == (1 & e);
          })(L)
            ? wf(E, t, n, o, js(L), u)
            : void 0;
        kl(Y) ||
          (kl(l) ||
            ((function lb(e) {
              return 2 == (2 & e);
            })(L) &&
              (l = wf(E, null, n, o, v, u))),
          (function xg(e, t, n, i, o) {
            if (t) o ? e.addClass(n, i) : e.removeClass(n, i);
            else {
              let l = -1 === i.indexOf('-') ? void 0 : Go.DashCase;
              null == o
                ? e.removeStyle(n, i, l)
                : ('string' == typeof o &&
                    o.endsWith('!important') &&
                    ((o = o.slice(0, -10)), (l |= Go.Important)),
                  e.setStyle(n, i, o, l));
            }
          })(i, u, si(jt(), n), o, l));
      }
      function wf(e, t, n, i, o, l) {
        const u = null === t;
        let v;
        for (; o > 0; ) {
          const E = e[o],
            L = Array.isArray(E),
            Y = L ? E[1] : E,
            oe = null === Y;
          let Fe = n[o + 1];
          Fe === Pn && (Fe = oe ? tn : void 0);
          let Qe = oe ? Z(Fe, i) : Y === i ? Fe : void 0;
          if ((L && !kl(Qe) && (Qe = Z(E, i)), kl(Qe) && ((v = Qe), u)))
            return v;
          const bt = e[o + 1];
          o = u ? ys(bt) : js(bt);
        }
        if (null !== t) {
          let E = l ? t.residualClasses : t.residualStyles;
          null != E && (v = Z(E, i));
        }
        return v;
      }
      function kl(e) {
        return void 0 !== e;
      }
      function Af(e, t) {
        return 0 != (e.flags & (t ? 8 : 16));
      }
      function Sf(e, t = '') {
        const n = at(),
          i = Sn(),
          o = e + hn,
          l = i.firstCreatePass ? na(i, o, 1, t, null) : i.data[o],
          u = (n[o] = (function oc(e, t) {
            return e.createText(t);
          })(n[_n], t));
        al(i, n, u, l), yi(l, !1);
      }
      function cd(e) {
        return Tl('', e, ''), cd;
      }
      function Tl(e, t, n) {
        const i = at(),
          o = ra(i, e, t, n);
        return (
          o !== Pn &&
            (function ds(e, t, n) {
              const i = si(t, e);
              !(function du(e, t, n) {
                e.setValue(t, n);
              })(e[_n], i, n);
            })(i, jt(), o),
          Tl
        );
      }
      function Nf(e, t, n) {
        !(function Po(e, t, n, i) {
          const o = Sn(),
            l = Er(2);
          o.firstUpdatePass && xf(o, null, l, i);
          const u = at();
          if (n !== Pn && kr(u, l, n)) {
            const v = o.data[jt()];
            if (Af(v, i) && !Cf(o, l)) {
              let E = i ? v.classesWithoutHost : v.stylesWithoutHost;
              null !== E && (n = he(E, n || '')), qc(o, v, u, n, i);
            } else
              !(function Sb(e, t, n, i, o, l, u, v) {
                o === Pn && (o = tn);
                let E = 0,
                  L = 0,
                  Y = 0 < o.length ? o[0] : null,
                  oe = 0 < l.length ? l[0] : null;
                for (; null !== Y || null !== oe; ) {
                  const Fe = E < o.length ? o[E + 1] : void 0,
                    Qe = L < l.length ? l[L + 1] : void 0;
                  let Vt,
                    bt = null;
                  Y === oe
                    ? ((E += 2), (L += 2), Fe !== Qe && ((bt = oe), (Vt = Qe)))
                    : null === oe || (null !== Y && Y < oe)
                    ? ((E += 2), (bt = Y))
                    : ((L += 2), (bt = oe), (Vt = Qe)),
                    null !== bt && Mf(e, t, n, i, bt, Vt, u, v),
                    (Y = E < o.length ? o[E] : null),
                    (oe = L < l.length ? l[L] : null);
                }
              })(
                o,
                v,
                u,
                u[_n],
                u[l + 1],
                (u[l + 1] = (function wb(e, t, n) {
                  if (null == n || '' === n) return tn;
                  const i = [],
                    o = as(n);
                  if (Array.isArray(o))
                    for (let l = 0; l < o.length; l++) e(i, o[l], !0);
                  else if ('object' == typeof o)
                    for (const l in o) o.hasOwnProperty(l) && e(i, l, o[l]);
                  else 'string' == typeof o && t(i, o);
                  return i;
                })(e, t, n)),
                i,
                l,
              );
          }
        })(H, Qo, ra(at(), e, t, n), !0);
      }
      function dd(e, t, n) {
        const i = at();
        return kr(i, Nr(), t) && uo(Sn(), sn(), i, e, t, i[_n], n, !0), dd;
      }
      function ud(e, t, n) {
        const i = at();
        if (kr(i, Nr(), t)) {
          const l = Sn(),
            u = sn();
          uo(l, u, i, e, t, Ih(lo(l.data), u, i), n, !0);
        }
        return ud;
      }
      const zs = void 0;
      var Kb = [
        'en',
        [['a', 'p'], ['AM', 'PM'], zs],
        [['AM', 'PM'], zs, zs],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
          ],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        zs,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',
          ],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        zs,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', zs, "{1} 'at' {0}", zs],
        [
          '.',
          ',',
          ';',
          '%',
          '+',
          '-',
          'E',
          '\xd7',
          '\u2030',
          '\u221e',
          'NaN',
          ':',
        ],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function Wb(e) {
          const n = Math.floor(Math.abs(e)),
            i = e.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === n && 0 === i ? 1 : 5;
        },
      ];
      let fa = {};
      function hd(e) {
        const t = (function Zb(e) {
          return e.toLowerCase().replace(/_/g, '-');
        })(e);
        let n = Kf(t);
        if (n) return n;
        const i = t.split('-')[0];
        if (((n = Kf(i)), n)) return n;
        if ('en' === i) return Kb;
        throw new Ne(701, !1);
      }
      function Wf(e) {
        return hd(e)[En.PluralCase];
      }
      function Kf(e) {
        return (
          e in fa ||
            (fa[e] =
              ze.ng &&
              ze.ng.common &&
              ze.ng.common.locales &&
              ze.ng.common.locales[e]),
          fa[e]
        );
      }
      var En = (() => (
        ((En = En || {})[(En.LocaleId = 0)] = 'LocaleId'),
        (En[(En.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (En[(En.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (En[(En.DaysFormat = 3)] = 'DaysFormat'),
        (En[(En.DaysStandalone = 4)] = 'DaysStandalone'),
        (En[(En.MonthsFormat = 5)] = 'MonthsFormat'),
        (En[(En.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (En[(En.Eras = 7)] = 'Eras'),
        (En[(En.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (En[(En.WeekendRange = 9)] = 'WeekendRange'),
        (En[(En.DateFormat = 10)] = 'DateFormat'),
        (En[(En.TimeFormat = 11)] = 'TimeFormat'),
        (En[(En.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (En[(En.NumberSymbols = 13)] = 'NumberSymbols'),
        (En[(En.NumberFormats = 14)] = 'NumberFormats'),
        (En[(En.CurrencyCode = 15)] = 'CurrencyCode'),
        (En[(En.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (En[(En.CurrencyName = 17)] = 'CurrencyName'),
        (En[(En.Currencies = 18)] = 'Currencies'),
        (En[(En.Directionality = 19)] = 'Directionality'),
        (En[(En.PluralCase = 20)] = 'PluralCase'),
        (En[(En.ExtraData = 21)] = 'ExtraData'),
        En
      ))();
      const pa = 'en-US';
      let Zf = pa;
      function md(e, t, n, i, o) {
        if (((e = re(e)), Array.isArray(e)))
          for (let l = 0; l < e.length; l++) md(e[l], t, n, i, o);
        else {
          const l = Sn(),
            u = at();
          let v = Bs(e) ? e : re(e.provide),
            E = Wu(e);
          const L = Jn(),
            Y = 1048575 & L.providerIndexes,
            oe = L.directiveStart,
            Fe = L.providerIndexes >> 20;
          if (Bs(e) || !e.multi) {
            const Qe = new le(E, o, ta),
              bt = _d(v, t, o ? Y : Y + Fe, oe);
            -1 === bt
              ? (ir(fs(L, u), l, v),
                gd(l, e, t.length),
                t.push(v),
                L.directiveStart++,
                L.directiveEnd++,
                o && (L.providerIndexes += 1048576),
                n.push(Qe),
                u.push(Qe))
              : ((n[bt] = Qe), (u[bt] = Qe));
          } else {
            const Qe = _d(v, t, Y + Fe, oe),
              bt = _d(v, t, Y, Y + Fe),
              Jt = bt >= 0 && n[bt];
            if ((o && !Jt) || (!o && !(Qe >= 0 && n[Qe]))) {
              ir(fs(L, u), l, v);
              const cn = (function Gy(e, t, n, i, o) {
                const l = new le(e, n, ta);
                return (
                  (l.multi = []),
                  (l.index = t),
                  (l.componentProviders = 0),
                  yp(l, o, i && !n),
                  l
                );
              })(o ? Yy : $y, n.length, o, i, E);
              !o && Jt && (n[bt].providerFactory = cn),
                gd(l, e, t.length, 0),
                t.push(v),
                L.directiveStart++,
                L.directiveEnd++,
                o && (L.providerIndexes += 1048576),
                n.push(cn),
                u.push(cn);
            } else gd(l, e, Qe > -1 ? Qe : bt, yp(n[o ? bt : Qe], E, !o && i));
            !o && i && Jt && n[bt].componentProviders++;
          }
        }
      }
      function gd(e, t, n, i) {
        const o = Bs(t),
          l = (function r_(e) {
            return !!e.useClass;
          })(t);
        if (o || l) {
          const E = (l ? re(t.useClass) : t).prototype.ngOnDestroy;
          if (E) {
            const L = e.destroyHooks || (e.destroyHooks = []);
            if (!o && t.multi) {
              const Y = L.indexOf(n);
              -1 === Y ? L.push(n, [i, E]) : L[Y + 1].push(i, E);
            } else L.push(n, E);
          }
        }
      }
      function yp(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function _d(e, t, n, i) {
        for (let o = n; o < i; o++) if (t[o] === e) return o;
        return -1;
      }
      function $y(e, t, n, i) {
        return vd(this.multi, []);
      }
      function Yy(e, t, n, i) {
        const o = this.multi;
        let l;
        if (this.providerFactory) {
          const u = this.providerFactory.componentProviders,
            v = To(n, n[$t], this.providerFactory.index, i);
          (l = v.slice(0, u)), vd(o, l);
          for (let E = u; E < v.length; E++) l.push(v[E]);
        } else (l = []), vd(o, l);
        return l;
      }
      function vd(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function Dp(e, t = []) {
        return n => {
          n.providersResolver = (i, o) =>
            (function zy(e, t, n) {
              const i = Sn();
              if (i.firstCreatePass) {
                const o = vn(e);
                md(n, i.data, i.blueprint, o, !0),
                  md(t, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(e) : e, t);
        };
      }
      class ma {}
      class Cp {}
      function Wy(e, t) {
        return new xp(e, t ?? null);
      }
      class xp extends ma {
        constructor(t, n) {
          super(),
            (this._parent = n),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Th(this));
          const i = xi(t);
          (this._bootstrapComponents = cs(i.bootstrap)),
            (this._r3Injector = dh(
              t,
              n,
              [
                { provide: ma, useValue: this },
                { provide: Fa, useValue: this.componentFactoryResolver },
              ],
              ce(t),
              new Set(['environment']),
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach(n => n()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class bd extends Cp {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new xp(this.moduleType, t);
        }
      }
      class Ky extends ma {
        constructor(t, n, i) {
          super(),
            (this.componentFactoryResolver = new Th(this)),
            (this.instance = null);
          const o = new Gu(
            [
              ...t,
              { provide: ma, useValue: this },
              { provide: Fa, useValue: this.componentFactoryResolver },
            ],
            n || pl(),
            i,
            new Set(['environment']),
          );
          (this.injector = o), o.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function yd(e, t, n = null) {
        return new Ky(e, t, n).injector;
      }
      let Zy = (() => {
        class e {
          constructor(n) {
            (this._injector = n), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(n) {
            if (!n.standalone) return null;
            if (!this.cachedInjectors.has(n.id)) {
              const i = ju(0, n.type),
                o =
                  i.length > 0
                    ? yd([i], this._injector, `Standalone[${n.type.name}]`)
                    : null;
              this.cachedInjectors.set(n.id, o);
            }
            return this.cachedInjectors.get(n.id);
          }
          ngOnDestroy() {
            try {
              for (const n of this.cachedInjectors.values())
                null !== n && n.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (e.ɵprov = Be({
            token: e,
            providedIn: 'environment',
            factory: () => new e(Je(Vs)),
          })),
          e
        );
      })();
      function Ep(e) {
        e.getStandaloneInjector = t =>
          t.get(Zy).getOrCreateStandaloneInjector(e);
      }
      function Tp(e, t, n, i) {
        return Rp(at(), Yi(), e, t, n, i);
      }
      function Op(e, t, n, i, o) {
        return (function Fp(e, t, n, i, o, l, u) {
          const v = t + n;
          return (function Us(e, t, n, i) {
            const o = kr(e, t, n);
            return kr(e, t + 1, i) || o;
          })(e, v, o, l)
            ? Ko(e, v + 2, u ? i.call(u, o, l) : i(o, l))
            : Wa(e, v + 2);
        })(at(), Yi(), e, t, n, i, o);
      }
      function Wa(e, t) {
        const n = e[t];
        return n === Pn ? void 0 : n;
      }
      function Rp(e, t, n, i, o, l) {
        const u = t + n;
        return kr(e, u, o)
          ? Ko(e, u + 1, l ? i.call(l, o) : i(o))
          : Wa(e, u + 1);
      }
      function Bp(e, t) {
        const n = Sn();
        let i;
        const o = e + hn;
        n.firstCreatePass
          ? ((i = (function f0(e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const i = t[n];
                  if (e === i.name) return i;
                }
            })(t, n.pipeRegistry)),
            (n.data[o] = i),
            i.onDestroy &&
              (n.destroyHooks ?? (n.destroyHooks = [])).push(o, i.onDestroy))
          : (i = n.data[o]);
        const l = i.factory || (i.factory = Ji(i.type)),
          u = W(ta);
        try {
          const v = bo(!1),
            E = l();
          return (
            bo(v),
            (function ib(e, t, n, i) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = i);
            })(n, at(), o, E),
            E
          );
        } finally {
          W(u);
        }
      }
      function Vp(e, t, n) {
        const i = e + hn,
          o = at(),
          l = Dr(o, i);
        return (function Ka(e, t) {
          return e[$t].data[t].pure;
        })(o, i)
          ? Rp(o, Yi(), t, l.transform, n, l)
          : l.transform(n);
      }
      function Cd(e) {
        return t => {
          setTimeout(e, void 0, t);
        };
      }
      const qo = class v0 extends s.x {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, n, i) {
          let o = t,
            l = n || (() => null),
            u = i;
          if (t && 'object' == typeof t) {
            const E = t;
            (o = E.next?.bind(E)),
              (l = E.error?.bind(E)),
              (u = E.complete?.bind(E));
          }
          this.__isAsync && ((l = Cd(l)), o && (o = Cd(o)), u && (u = Cd(u)));
          const v = super.subscribe({ next: o, error: l, complete: u });
          return t instanceof x.w0 && t.add(v), v;
        }
      };
      function b0() {
        return this._results[Symbol.iterator]();
      }
      class Ll {
        get changes() {
          return this._changes || (this._changes = new qo());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const n = Ll.prototype;
          n[Symbol.iterator] || (n[Symbol.iterator] = b0);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, n) {
          return this._results.reduce(t, n);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, n) {
          const i = this;
          i.dirty = !1;
          const o = (function Ar(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function Sa(e, t, n) {
            if (e.length !== t.length) return !1;
            for (let i = 0; i < e.length; i++) {
              let o = e[i],
                l = t[i];
              if ((n && ((o = n(o)), (l = n(l))), l !== o)) return !1;
            }
            return !0;
          })(i._results, o, n)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let Za = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = C0), e;
      })();
      const y0 = Za,
        D0 = class extends y0 {
          constructor(t, n, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = n),
              (this.elementRef = i);
          }
          createEmbeddedView(t, n) {
            const i = this._declarationTContainer.tView,
              o = gl(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                n || null,
              );
            o[Qi] = this._declarationLView[this._declarationTContainer.index];
            const u = this._declarationLView[Hi];
            return (
              null !== u && (o[Hi] = u.createEmbeddedView(i)),
              Pc(i, o, t),
              new Ba(o)
            );
          }
        };
      function C0() {
        return Nl(Jn(), at());
      }
      function Nl(e, t) {
        return 4 & e.type ? new D0(t, e, Xs(e, t)) : null;
      }
      let Bl = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = x0), e;
      })();
      function x0() {
        return jp(Jn(), at());
      }
      const E0 = Bl,
        Hp = class extends E0 {
          constructor(t, n, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = n),
              (this._hostLView = i);
          }
          get element() {
            return Xs(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ho(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Ms(this._hostTNode, this._hostLView);
            if (tr(t)) {
              const n = lr(t, this._hostLView),
                i = Vr(t);
              return new Ho(n[$t].data[i + 8], n);
            }
            return new Ho(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const n = Up(this._lContainer);
            return (null !== n && n[t]) || null;
          }
          get length() {
            return this._lContainer.length - J;
          }
          createEmbeddedView(t, n, i) {
            let o, l;
            'number' == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (l = i.injector));
            const u = t.createEmbeddedView(n || {}, l);
            return this.insert(u, o), u;
          }
          createComponent(t, n, i, o, l) {
            const u =
              t &&
              !(function os(e) {
                return 'function' == typeof e;
              })(t);
            let v;
            if (u) v = n;
            else {
              const oe = n || {};
              (v = oe.index),
                (i = oe.injector),
                (o = oe.projectableNodes),
                (l = oe.environmentInjector || oe.ngModuleRef);
            }
            const E = u ? t : new Va(kn(t)),
              L = i || this.parentInjector;
            if (!l && null == E.ngModule) {
              const Fe = (u ? L : this.parentInjector).get(Vs, null);
              Fe && (l = Fe);
            }
            const Y = E.create(L, o, void 0, l);
            return this.insert(Y.hostView, v), Y;
          }
          insert(t, n) {
            const i = t._lView,
              o = i[$t];
            if (
              (function Io(e) {
                return Ze(e[Vn]);
              })(i)
            ) {
              const Y = this.indexOf(t);
              if (-1 !== Y) this.detach(Y);
              else {
                const oe = i[Vn],
                  Fe = new Hp(oe, oe[Un], oe[Vn]);
                Fe.detach(Fe.indexOf(t));
              }
            }
            const l = this._adjustIndex(n),
              u = this._lContainer;
            !(function mg(e, t, n, i) {
              const o = J + i,
                l = n.length;
              i > 0 && (n[o - 1][di] = t),
                i < l - J
                  ? ((t[di] = n[o]), Ts(n, J + i, t))
                  : (n.push(t), (t[di] = null)),
                (t[Vn] = n);
              const u = t[Qi];
              null !== u &&
                n !== u &&
                (function gg(e, t) {
                  const n = e[Fi];
                  t[oi] !== t[Vn][Vn][oi] && (e[or] = !0),
                    null === n ? (e[Fi] = [t]) : n.push(t);
                })(u, t);
              const v = t[Hi];
              null !== v && v.insertView(e), (t[fn] |= 64);
            })(o, i, u, l);
            const v = dc(l, u),
              E = i[_n],
              L = sl(E, u[pr]);
            return (
              null !== L &&
                (function hg(e, t, n, i, o, l) {
                  (i[_i] = o), (i[Un] = t), Ta(e, i, n, 1, o, l);
                })(o, u[Un], E, i, L, v),
              t.attachToViewContainerRef(),
              Ts(xd(u), l, t),
              t
            );
          }
          move(t, n) {
            return this.insert(t, n);
          }
          indexOf(t) {
            const n = Up(this._lContainer);
            return null !== n ? n.indexOf(t) : -1;
          }
          remove(t) {
            const n = this._adjustIndex(t, -1),
              i = ac(this._lContainer, n);
            i && (Os(xd(this._lContainer), n), hu(i[$t], i));
          }
          detach(t) {
            const n = this._adjustIndex(t, -1),
              i = ac(this._lContainer, n);
            return i && null != Os(xd(this._lContainer), n) ? new Ba(i) : null;
          }
          _adjustIndex(t, n = 0) {
            return t ?? this.length + n;
          }
        };
      function Up(e) {
        return e[Xi];
      }
      function xd(e) {
        return e[Xi] || (e[Xi] = []);
      }
      function jp(e, t) {
        let n;
        const i = t[e.index];
        if (Ze(i)) n = i;
        else {
          let o;
          if (8 & e.type) o = li(i);
          else {
            const l = t[_n];
            o = l.createComment('');
            const u = vi(e, t);
            Ls(
              l,
              sl(l, u),
              o,
              (function yg(e, t) {
                return e.nextSibling(t);
              })(l, u),
              !1,
            );
          }
          (t[e.index] = n = wh(i, t, o, e)), vl(t, n);
        }
        return new Hp(n, e, t);
      }
      class Ed {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Ed(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Md {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const n = t.queries;
          if (null !== n) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : n.length,
              o = [];
            for (let l = 0; l < i; l++) {
              const u = n.getByIndex(l);
              o.push(this.queries[u.indexInDeclarationView].clone());
            }
            return new Md(o);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let n = 0; n < this.queries.length; n++)
            null !== qp(t, n).matches && this.queries[n].setDirty();
        }
      }
      class zp {
        constructor(t, n, i = null) {
          (this.predicate = t), (this.flags = n), (this.read = i);
        }
      }
      class wd {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, n);
        }
        elementEnd(t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementEnd(t);
        }
        embeddedTView(t) {
          let n = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== n ? n.length : 0,
              l = this.getByIndex(i).embeddedTView(t, o);
            l &&
              ((l.indexInDeclarationView = i),
              null !== n ? n.push(l) : (n = [l]));
          }
          return null !== n ? new wd(n) : null;
        }
        template(t, n) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, n);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Ad {
        constructor(t, n = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = n);
        }
        elementStart(t, n) {
          this.isApplyingToNode(n) && this.matchTNode(t, n);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, n) {
          this.elementStart(t, n);
        }
        embeddedTView(t, n) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, n),
              new Ad(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const n = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== n; ) i = i.parent;
            return n === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, n) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const l = i[o];
              this.matchTNodeWithReadOption(t, n, M0(n, l)),
                this.matchTNodeWithReadOption(t, n, ps(n, t, l, !1, !1));
            }
          else
            i === Za
              ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1)
              : this.matchTNodeWithReadOption(t, n, ps(n, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, n, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === Pa || o === Bl || (o === Za && 4 & n.type))
                this.addMatch(n.index, -2);
              else {
                const l = ps(n, t, o, !1, !1);
                null !== l && this.addMatch(n.index, l);
              }
            else this.addMatch(n.index, i);
          }
        }
        addMatch(t, n) {
          null === this.matches
            ? (this.matches = [t, n])
            : this.matches.push(t, n);
        }
      }
      function M0(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) if (n[i] === t) return n[i + 1];
        return null;
      }
      function A0(e, t, n, i) {
        return -1 === n
          ? (function w0(e, t) {
              return 11 & e.type ? Xs(e, t) : 4 & e.type ? Nl(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function S0(e, t, n) {
              return n === Pa
                ? Xs(t, e)
                : n === Za
                ? Nl(t, e)
                : n === Bl
                ? jp(t, e)
                : void 0;
            })(e, t, i)
          : To(e, e[$t], n, t);
      }
      function $p(e, t, n, i) {
        const o = t[Hi].queries[i];
        if (null === o.matches) {
          const l = e.data,
            u = n.matches,
            v = [];
          for (let E = 0; E < u.length; E += 2) {
            const L = u[E];
            v.push(L < 0 ? null : A0(t, l[L], u[E + 1], n.metadata.read));
          }
          o.matches = v;
        }
        return o.matches;
      }
      function Sd(e, t, n, i) {
        const o = e.queries.getByIndex(n),
          l = o.matches;
        if (null !== l) {
          const u = $p(e, t, o, n);
          for (let v = 0; v < l.length; v += 2) {
            const E = l[v];
            if (E > 0) i.push(u[v / 2]);
            else {
              const L = l[v + 1],
                Y = t[-E];
              for (let oe = J; oe < Y.length; oe++) {
                const Fe = Y[oe];
                Fe[Qi] === Fe[Vn] && Sd(Fe[$t], Fe, L, i);
              }
              if (null !== Y[Fi]) {
                const oe = Y[Fi];
                for (let Fe = 0; Fe < oe.length; Fe++) {
                  const Qe = oe[Fe];
                  Sd(Qe[$t], Qe, L, i);
                }
              }
            }
          }
        }
        return i;
      }
      function Yp(e) {
        const t = at(),
          n = Sn(),
          i = Mr();
        B(i + 1);
        const o = qp(n, i);
        if (
          e.dirty &&
          (function Cr(e) {
            return 4 == (4 & e[fn]);
          })(t) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) e.reset([]);
          else {
            const l = o.crossesNgTemplate ? Sd(n, t, i, []) : $p(n, t, o, i);
            e.reset(l, m_), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Gp(e, t, n) {
        const i = Sn();
        i.firstCreatePass &&
          (Qp(i, new zp(e, t, n), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          Zp(i, at(), t);
      }
      function Wp(e, t, n, i) {
        const o = Sn();
        if (o.firstCreatePass) {
          const l = Jn();
          Qp(o, new zp(t, n, i), l.index),
            (function k0(e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (n.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(o, e),
            2 == (2 & n) && (o.staticContentQueries = !0);
        }
        Zp(o, at(), n);
      }
      function Kp() {
        return (function I0(e, t) {
          return e[Hi].queries[t].queryList;
        })(at(), Mr());
      }
      function Zp(e, t, n) {
        const i = new Ll(4 == (4 & n));
        Dh(e, t, i, i.destroy),
          null === t[Hi] && (t[Hi] = new Md()),
          t[Hi].queries.push(new Ed(i));
      }
      function Qp(e, t, n) {
        null === e.queries && (e.queries = new wd()),
          e.queries.track(new Ad(t, n));
      }
      function qp(e, t) {
        return e.queries.getByIndex(t);
      }
      function Xp(e, t) {
        return Nl(e, t);
      }
      function Id(e) {
        return !!xi(e);
      }
      function Hl(...e) {}
      const gm = new ei('Application Initializer');
      let Ul = (() => {
        class e {
          constructor(n) {
            (this.appInits = n),
              (this.resolve = Hl),
              (this.reject = Hl),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, o) => {
                (this.resolve = i), (this.reject = o);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const n = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let o = 0; o < this.appInits.length; o++) {
                const l = this.appInits[o]();
                if (Jc(l)) n.push(l);
                else if (qh(l)) {
                  const u = new Promise((v, E) => {
                    l.subscribe({ complete: v, error: E });
                  });
                  n.push(u);
                }
              }
            Promise.all(n)
              .then(() => {
                i();
              })
              .catch(o => {
                this.reject(o);
              }),
              0 === n.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(gm, 8));
          }),
          (e.ɵprov = Be({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const _m = new ei('AppId', {
        providedIn: 'root',
        factory: function vm() {
          return `${Fd()}${Fd()}${Fd()}`;
        },
      });
      function Fd() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const bm = new ei('Platform Initializer'),
        Q0 = new ei('Platform ID', {
          providedIn: 'platform',
          factory: () => 'unknown',
        }),
        q0 = new ei('AnimationModuleType');
      let X0 = (() => {
        class e {
          log(n) {
            console.log(n);
          }
          warn(n) {
            console.warn(n);
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = Be({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      const jl = new ei('LocaleId', {
          providedIn: 'root',
          factory: () =>
            ke(jl, Bt.Optional | Bt.SkipSelf) ||
            (function J0() {
              return (typeof $localize < 'u' && $localize.locale) || pa;
            })(),
        }),
        eD = new ei('DefaultCurrencyCode', {
          providedIn: 'root',
          factory: () => 'USD',
        });
      class tD {
        constructor(t, n) {
          (this.ngModuleFactory = t), (this.componentFactories = n);
        }
      }
      let nD = (() => {
        class e {
          compileModuleSync(n) {
            return new bd(n);
          }
          compileModuleAsync(n) {
            return Promise.resolve(this.compileModuleSync(n));
          }
          compileModuleAndAllComponentsSync(n) {
            const i = this.compileModuleSync(n),
              l = cs(xi(n).declarations).reduce((u, v) => {
                const E = kn(v);
                return E && u.push(new Va(E)), u;
              }, []);
            return new tD(i, l);
          }
          compileModuleAndAllComponentsAsync(n) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(n));
          }
          clearCache() {}
          clearCacheFor(n) {}
          getModuleId(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)();
          }),
          (e.ɵprov = Be({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      const oD = (() => Promise.resolve(0))();
      function Pd(e) {
        typeof Zone > 'u'
          ? oD.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
      }
      class Mo {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: n = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new qo(!1)),
            (this.onMicrotaskEmpty = new qo(!1)),
            (this.onStable = new qo(!1)),
            (this.onError = new qo(!1)),
            typeof Zone > 'u')
          )
            throw new Ne(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && n),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function sD() {
              let e = ze.requestAnimationFrame,
                t = ze.cancelAnimationFrame;
              if (typeof Zone < 'u' && e && t) {
                const n = e[Zone.__symbol__('OriginalDelegate')];
                n && (e = n);
                const i = t[Zone.__symbol__('OriginalDelegate')];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function cD(e) {
              const t = () => {
                !(function lD(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(ze, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            'fakeTopEventTask',
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                Nd(e),
                                (e.isCheckStableRunning = !0),
                                Ld(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {},
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    Nd(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, i, o, l, u, v) => {
                  try {
                    return Cm(e), n.invokeTask(o, l, u, v);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      'eventTask' === l.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      t(),
                      xm(e);
                  }
                },
                onInvoke: (n, i, o, l, u, v, E) => {
                  try {
                    return Cm(e), n.invoke(o, l, u, v, E);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && t(), xm(e);
                  }
                },
                onHasTask: (n, i, o, l) => {
                  n.hasTask(o, l),
                    i === o &&
                      ('microTask' == l.change
                        ? ((e._hasPendingMicrotasks = l.microTask),
                          Nd(e),
                          Ld(e))
                        : 'macroTask' == l.change &&
                          (e.hasPendingMacrotasks = l.macroTask));
                },
                onHandleError: (n, i, o, l) => (
                  n.handleError(o, l),
                  e.runOutsideAngular(() => e.onError.emit(l)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < 'u' && !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Mo.isInAngularZone()) throw new Ne(909, !1);
        }
        static assertNotInAngularZone() {
          if (Mo.isInAngularZone()) throw new Ne(909, !1);
        }
        run(t, n, i) {
          return this._inner.run(t, n, i);
        }
        runTask(t, n, i, o) {
          const l = this._inner,
            u = l.scheduleEventTask('NgZoneEvent: ' + o, t, aD, Hl, Hl);
          try {
            return l.runTask(u, n, i);
          } finally {
            l.cancelTask(u);
          }
        }
        runGuarded(t, n, i) {
          return this._inner.runGuarded(t, n, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const aD = {};
      function Ld(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function Nd(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function Cm(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function xm(e) {
        e._nesting--, Ld(e);
      }
      class dD {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new qo()),
            (this.onMicrotaskEmpty = new qo()),
            (this.onStable = new qo()),
            (this.onError = new qo());
        }
        run(t, n, i) {
          return t.apply(n, i);
        }
        runGuarded(t, n, i) {
          return t.apply(n, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, n, i, o) {
          return t.apply(n, i);
        }
      }
      const Em = new ei(''),
        Mm = new ei('');
      let Bd,
        uD = (() => {
          class e {
            constructor(n, i, o) {
              (this._ngZone = n),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Bd ||
                  ((function hD(e) {
                    Bd = e;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                n.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > 'u'
                      ? null
                      : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Mo.assertNotInAngularZone(),
                        Pd(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Pd(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let n = this._callbacks.pop();
                    clearTimeout(n.timeoutId), n.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let n = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  i =>
                    !i.updateCb ||
                    !i.updateCb(n) ||
                    (clearTimeout(i.timeoutId), !1),
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map(n => ({
                    source: n.source,
                    creationLocation: n.creationLocation,
                    data: n.data,
                  }))
                : [];
            }
            addCallback(n, i, o) {
              let l = -1;
              i &&
                i > 0 &&
                (l = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    u => u.timeoutId !== l,
                  )),
                    n(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: n, timeoutId: l, updateCb: o });
            }
            whenStable(n, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?',
                );
              this.addCallback(n, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(n) {
              this.registry.registerApplication(n, this);
            }
            unregisterApplication(n) {
              this.registry.unregisterApplication(n);
            }
            findProviders(n, i, o) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)(Je(Mo), Je(wm), Je(Mm));
            }),
            (e.ɵprov = Be({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        wm = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(n, i) {
              this._applications.set(n, i);
            }
            unregisterApplication(n) {
              this._applications.delete(n);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(n) {
              return this._applications.get(n) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(n, i = !0) {
              return Bd?.findTestabilityInTree(this, n, i) ?? null;
            }
          }
          return (
            (e.ɵfac = function (n) {
              return new (n || e)();
            }),
            (e.ɵprov = Be({
              token: e,
              factory: e.ɵfac,
              providedIn: 'platform',
            })),
            e
          );
        })();
      const us = !1;
      let Ds = null;
      const Am = new ei('AllowMultipleToken'),
        Vd = new ei('PlatformDestroyListeners'),
        Sm = new ei('appBootstrapListener');
      class mD {
        constructor(t, n) {
          (this.name = t), (this.token = n);
        }
      }
      function km(e, t, n = []) {
        const i = `Platform: ${t}`,
          o = new ei(i);
        return (l = []) => {
          let u = Hd();
          if (!u || u.injector.get(Am, !1)) {
            const v = [...n, ...l, { provide: o, useValue: !0 }];
            e
              ? e(v)
              : (function gD(e) {
                  if (Ds && !Ds.get(Am, !1)) throw new Ne(400, !1);
                  Ds = e;
                  const t = e.get(Om);
                  (function Im(e) {
                    const t = e.get(bm, null);
                    t && t.forEach(n => n());
                  })(e);
                })(
                  (function Tm(e = [], t) {
                    return Hs.create({
                      name: t,
                      providers: [
                        { provide: xc, useValue: 'platform' },
                        { provide: Vd, useValue: new Set([() => (Ds = null)]) },
                        ...e,
                      ],
                    });
                  })(v, i),
                );
          }
          return (function vD(e) {
            const t = Hd();
            if (!t) throw new Ne(401, !1);
            return t;
          })();
        };
      }
      function Hd() {
        return Ds?.get(Om) ?? null;
      }
      let Om = (() => {
        class e {
          constructor(n) {
            (this._injector = n),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(n, i) {
            const o = (function Fm(e, t) {
                let n;
                return (
                  (n =
                    'noop' === e
                      ? new dD()
                      : ('zone.js' === e ? void 0 : e) || new Mo(t)),
                  n
                );
              })(
                i?.ngZone,
                (function Rm(e) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!e || !e.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!e || !e.ngZoneRunCoalescing) || !1,
                  };
                })(i),
              ),
              l = [{ provide: Mo, useValue: o }];
            return o.run(() => {
              const u = Hs.create({
                  providers: l,
                  parent: this.injector,
                  name: n.moduleType.name,
                }),
                v = n.create(u),
                E = v.injector.get(La, null);
              if (!E) throw new Ne(402, !1);
              return (
                o.runOutsideAngular(() => {
                  const L = o.onError.subscribe({
                    next: Y => {
                      E.handleError(Y);
                    },
                  });
                  v.onDestroy(() => {
                    $l(this._modules, v), L.unsubscribe();
                  });
                }),
                (function Pm(e, t, n) {
                  try {
                    const i = n();
                    return Jc(i)
                      ? i.catch(o => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(E, o, () => {
                  const L = v.injector.get(Ul);
                  return (
                    L.runInitializers(),
                    L.donePromise.then(
                      () => (
                        (function Qf(e) {
                          Le(e, 'Expected localeId to be defined'),
                            'string' == typeof e &&
                              (Zf = e.toLowerCase().replace(/_/g, '-'));
                        })(v.injector.get(jl, pa) || pa),
                        this._moduleDoBootstrap(v),
                        v
                      ),
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(n, i = []) {
            const o = Lm({}, i);
            return (function fD(e, t, n) {
              const i = new bd(n);
              return Promise.resolve(i);
            })(0, 0, n).then(l => this.bootstrapModuleFactory(l, o));
          }
          _moduleDoBootstrap(n) {
            const i = n.injector.get(zl);
            if (n._bootstrapComponents.length > 0)
              n._bootstrapComponents.forEach(o => i.bootstrap(o));
            else {
              if (!n.instance.ngDoBootstrap) throw new Ne(-403, !1);
              n.instance.ngDoBootstrap(i);
            }
            this._modules.push(n);
          }
          onDestroy(n) {
            this._destroyListeners.push(n);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Ne(404, !1);
            this._modules.slice().forEach(i => i.destroy()),
              this._destroyListeners.forEach(i => i());
            const n = this._injector.get(Vd, null);
            n && (n.forEach(i => i()), n.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(Hs));
          }),
          (e.ɵprov = Be({ token: e, factory: e.ɵfac, providedIn: 'platform' })),
          e
        );
      })();
      function Lm(e, t) {
        return Array.isArray(t) ? t.reduce(Lm, e) : { ...e, ...t };
      }
      let zl = (() => {
        class e {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(n, i, o) {
            (this._zone = n),
              (this._injector = i),
              (this._exceptionHandler = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const l = new N.y(v => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    v.next(this._stable), v.complete();
                  });
              }),
              u = new N.y(v => {
                let E;
                this._zone.runOutsideAngular(() => {
                  E = this._zone.onStable.subscribe(() => {
                    Mo.assertNotInAngularZone(),
                      Pd(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), v.next(!0));
                      });
                  });
                });
                const L = this._zone.onUnstable.subscribe(() => {
                  Mo.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        v.next(!1);
                      }));
                });
                return () => {
                  E.unsubscribe(), L.unsubscribe();
                };
              });
            this.isStable = (0, se.T)(l, u.pipe((0, te.B)()));
          }
          bootstrap(n, i) {
            const o = n instanceof Ku;
            if (!this._injector.get(Ul).done) {
              !o && ai(n);
              throw new Ne(405, us);
            }
            let u;
            (u = o ? n : this._injector.get(Fa).resolveComponentFactory(n)),
              this.componentTypes.push(u.componentType);
            const v = (function pD(e) {
                return e.isBoundToModule;
              })(u)
                ? void 0
                : this._injector.get(ma),
              L = u.create(Hs.NULL, [], i || u.selector, v),
              Y = L.location.nativeElement,
              oe = L.injector.get(Em, null);
            return (
              oe?.registerApplication(Y),
              L.onDestroy(() => {
                this.detachView(L.hostView),
                  $l(this.components, L),
                  oe?.unregisterApplication(Y);
              }),
              this._loadComponent(L),
              L
            );
          }
          tick() {
            if (this._runningTick) throw new Ne(101, !1);
            try {
              this._runningTick = !0;
              for (let n of this._views) n.detectChanges();
            } catch (n) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(n),
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(n) {
            const i = n;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(n) {
            const i = n;
            $l(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(n) {
            this.attachView(n.hostView), this.tick(), this.components.push(n);
            const i = this._injector.get(Sm, []);
            i.push(...this._bootstrapListeners), i.forEach(o => o(n));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach(n => n()),
                  this._views.slice().forEach(n => n.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(n) {
            return (
              this._destroyListeners.push(n),
              () => $l(this._destroyListeners, n)
            );
          }
          destroy() {
            if (this._destroyed) throw new Ne(406, !1);
            const n = this._injector;
            n.destroy && !n.destroyed && n.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(Mo), Je(Vs), Je(La));
          }),
          (e.ɵprov = Be({ token: e, factory: e.ɵfac, providedIn: 'root' })),
          e
        );
      })();
      function $l(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function yD() {
        return !1;
      }
      let DD = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = CD), e;
      })();
      function CD(e) {
        return (function xD(e, t, n) {
          if (It(e) && !n) {
            const i = wi(e.index, t);
            return new Ba(i, i);
          }
          return 47 & e.type ? new Ba(t[oi], t) : null;
        })(Jn(), at(), 16 == (16 & e));
      }
      class Um {
        constructor() {}
        supports(t) {
          return xl(t);
        }
        create(t) {
          return new ID(t);
        }
      }
      const SD = (e, t) => t;
      class ID {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || SD);
        }
        forEachItem(t) {
          let n;
          for (n = this._itHead; null !== n; n = n._next) t(n);
        }
        forEachOperation(t) {
          let n = this._itHead,
            i = this._removalsHead,
            o = 0,
            l = null;
          for (; n || i; ) {
            const u = !i || (n && n.currentIndex < zm(i, o, l)) ? n : i,
              v = zm(u, o, l),
              E = u.currentIndex;
            if (u === i) o--, (i = i._nextRemoved);
            else if (((n = n._next), null == u.previousIndex)) o++;
            else {
              l || (l = []);
              const L = v - o,
                Y = E - o;
              if (L != Y) {
                for (let Fe = 0; Fe < L; Fe++) {
                  const Qe = Fe < l.length ? l[Fe] : (l[Fe] = 0),
                    bt = Qe + Fe;
                  Y <= bt && bt < L && (l[Fe] = Qe + 1);
                }
                l[u.previousIndex] = Y - L;
              }
            }
            v !== E && t(u, v, E);
          }
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousItHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachMovedItem(t) {
          let n;
          for (n = this._movesHead; null !== n; n = n._nextMoved) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        forEachIdentityChange(t) {
          let n;
          for (
            n = this._identityChangesHead;
            null !== n;
            n = n._nextIdentityChange
          )
            t(n);
        }
        diff(t) {
          if ((null == t && (t = []), !xl(t))) throw new Ne(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let o,
            l,
            u,
            n = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let v = 0; v < this.length; v++)
              (l = t[v]),
                (u = this._trackByFn(v, l)),
                null !== n && Object.is(n.trackById, u)
                  ? (i && (n = this._verifyReinsertion(n, l, u, v)),
                    Object.is(n.item, l) || this._addIdentityChange(n, l))
                  : ((n = this._mismatch(n, l, u, v)), (i = !0)),
                (n = n._next);
          } else
            (o = 0),
              (function Jv(e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Symbol.iterator]();
                  let i;
                  for (; !(i = n.next()).done; ) t(i.value);
                }
              })(t, v => {
                (u = this._trackByFn(o, v)),
                  null !== n && Object.is(n.trackById, u)
                    ? (i && (n = this._verifyReinsertion(n, v, u, o)),
                      Object.is(n.item, v) || this._addIdentityChange(n, v))
                    : ((n = this._mismatch(n, v, u, o)), (i = !0)),
                  (n = n._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(n), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, n, i, o) {
          let l;
          return (
            null === t ? (l = this._itTail) : ((l = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, l, o))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, l, o))
              : (t = this._addAfter(new kD(n, i), l, o)),
            t
          );
        }
        _verifyReinsertion(t, n, i, o) {
          let l =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== l
              ? (t = this._reinsertAfter(l, t._prev, o))
              : t.currentIndex != o &&
                ((t.currentIndex = o), this._addToMoves(t, o)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const n = t._next;
            this._addToRemovals(this._unlink(t)), (t = n);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, n, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const o = t._prevRemoved,
            l = t._nextRemoved;
          return (
            null === o ? (this._removalsHead = l) : (o._nextRemoved = l),
            null === l ? (this._removalsTail = o) : (l._prevRemoved = o),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, n, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, n, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, n, i) {
          return (
            this._insertAfter(t, n, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, n, i) {
          const o = null === n ? this._itHead : n._next;
          return (
            (t._next = o),
            (t._prev = n),
            null === o ? (this._itTail = t) : (o._prev = t),
            null === n ? (this._itHead = t) : (n._next = t),
            null === this._linkedRecords && (this._linkedRecords = new jm()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const n = t._prev,
            i = t._next;
          return (
            null === n ? (this._itHead = i) : (n._next = i),
            null === i ? (this._itTail = n) : (i._prev = n),
            t
          );
        }
        _addToMoves(t, n) {
          return (
            t.previousIndex === n ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new jm()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, n) {
          return (
            (t.item = n),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class kD {
        constructor(t, n) {
          (this.item = t),
            (this.trackById = n),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class TD {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, n) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === n || n <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const n = t._prevDup,
            i = t._nextDup;
          return (
            null === n ? (this._head = i) : (n._nextDup = i),
            null === i ? (this._tail = n) : (i._prevDup = n),
            null === this._head
          );
        }
      }
      class jm {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const n = t.trackById;
          let i = this.map.get(n);
          i || ((i = new TD()), this.map.set(n, i)), i.add(t);
        }
        get(t, n) {
          const o = this.map.get(t);
          return o ? o.get(t, n) : null;
        }
        remove(t) {
          const n = t.trackById;
          return this.map.get(n).remove(t) && this.map.delete(n), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function zm(e, t, n) {
        const i = e.previousIndex;
        if (null === i) return i;
        let o = 0;
        return n && i < n.length && (o = n[i]), i + t + o;
      }
      class $m {
        constructor() {}
        supports(t) {
          return t instanceof Map || Kc(t);
        }
        create() {
          return new OD();
        }
      }
      class OD {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let n;
          for (n = this._mapHead; null !== n; n = n._next) t(n);
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousMapHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachChangedItem(t) {
          let n;
          for (n = this._changesHead; null !== n; n = n._nextChanged) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Kc(t))) throw new Ne(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let n = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, o) => {
              if (n && n.key === o)
                this._maybeAddToChanges(n, i),
                  (this._appendAfter = n),
                  (n = n._next);
              else {
                const l = this._getOrCreateRecordForKey(o, i);
                n = this._insertBeforeOrAppend(n, l);
              }
            }),
            n)
          ) {
            n._prev && (n._prev._next = null), (this._removalsHead = n);
            for (let i = n; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, n) {
          if (t) {
            const i = t._prev;
            return (
              (n._next = t),
              (n._prev = i),
              (t._prev = n),
              i && (i._next = n),
              t === this._mapHead && (this._mapHead = n),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = n), (n._prev = this._appendAfter))
              : (this._mapHead = n),
            (this._appendAfter = n),
            null
          );
        }
        _getOrCreateRecordForKey(t, n) {
          if (this._records.has(t)) {
            const o = this._records.get(t);
            this._maybeAddToChanges(o, n);
            const l = o._prev,
              u = o._next;
            return (
              l && (l._next = u),
              u && (u._prev = l),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new RD(t);
          return (
            this._records.set(t, i),
            (i.currentValue = n),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, n) {
          Object.is(n, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = n),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, n) {
          t instanceof Map
            ? t.forEach(n)
            : Object.keys(t).forEach(i => n(t[i], i));
        }
      }
      class RD {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Ym() {
        return new Yd([new Um()]);
      }
      let Yd = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (null != i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || Ym()),
              deps: [[e, new vs(), new ss()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (null != i) return i;
            throw new Ne(901, !1);
          }
        }
        return (e.ɵprov = Be({ token: e, providedIn: 'root', factory: Ym })), e;
      })();
      function Gm() {
        return new Gd([new $m()]);
      }
      let Gd = (() => {
        class e {
          constructor(n) {
            this.factories = n;
          }
          static create(n, i) {
            if (i) {
              const o = i.factories.slice();
              n = n.concat(o);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: i => e.create(n, i || Gm()),
              deps: [[e, new vs(), new ss()]],
            };
          }
          find(n) {
            const i = this.factories.find(o => o.supports(n));
            if (i) return i;
            throw new Ne(901, !1);
          }
        }
        return (e.ɵprov = Be({ token: e, providedIn: 'root', factory: Gm })), e;
      })();
      const LD = km(null, 'core', []);
      let ND = (() => {
        class e {
          constructor(n) {}
        }
        return (
          (e.ɵfac = function (n) {
            return new (n || e)(Je(zl));
          }),
          (e.ɵmod = Ii({ type: e })),
          (e.ɵinj = an({})),
          e
        );
      })();
      function BD(e) {
        return 'boolean' == typeof e ? e : null != e && 'false' !== e;
      }
    },
    4006: (Tt, Pe, D) => {
      D.d(Pe, {
        Cf: () => ft,
        F: () => Un,
        Fj: () => Ue,
        JJ: () => en,
        JL: () => Bt,
        JU: () => ce,
        On: () => fr,
        Q7: () => Rr,
        UX: () => xr,
        Zs: () => oo,
        _Y: () => hn,
        a5: () => Qt,
        kI: () => K,
        oH: () => It,
        qu: () => Io,
        sg: () => vn,
        u5: () => yn,
      });
      var s = D(4650),
        x = D(6895),
        N = D(457),
        se = D(4128),
        te = D(4004);
      let ue = (() => {
          class k {
            constructor(M, G) {
              (this._renderer = M),
                (this._elementRef = G),
                (this.onChange = et => {}),
                (this.onTouched = () => {});
            }
            setProperty(M, G) {
              this._renderer.setProperty(this._elementRef.nativeElement, M, G);
            }
            registerOnTouched(M) {
              this.onTouched = M;
            }
            registerOnChange(M) {
              this.onChange = M;
            }
            setDisabledState(M) {
              this.setProperty('disabled', M);
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)(s.Y36(s.Qsj), s.Y36(s.SBq));
            }),
            (k.ɵdir = s.lG2({ type: k })),
            k
          );
        })(),
        _e = (() => {
          class k extends ue {}
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({ type: k, features: [s.qOj] })),
            k
          );
        })();
      const ce = new s.OlP('NgValueAccessor'),
        fe = { provide: ce, useExisting: (0, s.Gpc)(() => Ue), multi: !0 },
        He = new s.OlP('CompositionEventMode');
      let Ue = (() => {
        class k extends ue {
          constructor(M, G, et) {
            super(M, G),
              (this._compositionMode = et),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function re() {
                  const k = (0, x.q)() ? (0, x.q)().getUserAgent() : '';
                  return /android (\d+)/.test(k.toLowerCase());
                })());
          }
          writeValue(M) {
            this.setProperty('value', M ?? '');
          }
          _handleInput(M) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(M);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(M) {
            (this._composing = !1), this._compositionMode && this.onChange(M);
          }
        }
        return (
          (k.ɵfac = function (M) {
            return new (M || k)(s.Y36(s.Qsj), s.Y36(s.SBq), s.Y36(He, 8));
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (M, G) {
              1 & M &&
                s.NdJ('input', function (nn) {
                  return G._handleInput(nn.target.value);
                })('blur', function () {
                  return G.onTouched();
                })('compositionstart', function () {
                  return G._compositionStart();
                })('compositionend', function (nn) {
                  return G._compositionEnd(nn.target.value);
                });
            },
            features: [s._Bn([fe]), s.qOj],
          })),
          k
        );
      })();
      const rt = !1;
      function pt(k) {
        return (
          null == k ||
          (('string' == typeof k || Array.isArray(k)) && 0 === k.length)
        );
      }
      function Ne(k) {
        return null != k && 'number' == typeof k.length;
      }
      const ft = new s.OlP('NgValidators'),
        st = new s.OlP('NgAsyncValidators'),
        mt =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class K {
        static min(I) {
          return (function ie(k) {
            return I => {
              if (pt(I.value) || pt(k)) return null;
              const M = parseFloat(I.value);
              return !isNaN(M) && M < k
                ? { min: { min: k, actual: I.value } }
                : null;
            };
          })(I);
        }
        static max(I) {
          return (function ee(k) {
            return I => {
              if (pt(I.value) || pt(k)) return null;
              const M = parseFloat(I.value);
              return !isNaN(M) && M > k
                ? { max: { max: k, actual: I.value } }
                : null;
            };
          })(I);
        }
        static required(I) {
          return X(I);
        }
        static requiredTrue(I) {
          return Ae(I);
        }
        static email(I) {
          return (function nt(k) {
            return pt(k.value) || mt.test(k.value) ? null : { email: !0 };
          })(I);
        }
        static minLength(I) {
          return (function dt(k) {
            return I =>
              pt(I.value) || !Ne(I.value)
                ? null
                : I.value.length < k
                ? {
                    minlength: {
                      requiredLength: k,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static maxLength(I) {
          return (function At(k) {
            return I =>
              Ne(I.value) && I.value.length > k
                ? {
                    maxlength: {
                      requiredLength: k,
                      actualLength: I.value.length,
                    },
                  }
                : null;
          })(I);
        }
        static pattern(I) {
          return (function _t(k) {
            if (!k) return Gt;
            let I, M;
            return (
              'string' == typeof k
                ? ((M = ''),
                  '^' !== k.charAt(0) && (M += '^'),
                  (M += k),
                  '$' !== k.charAt(k.length - 1) && (M += '$'),
                  (I = new RegExp(M)))
                : ((M = k.toString()), (I = k)),
              G => {
                if (pt(G.value)) return null;
                const et = G.value;
                return I.test(et)
                  ? null
                  : { pattern: { requiredPattern: M, actualValue: et } };
              }
            );
          })(I);
        }
        static nullValidator(I) {
          return null;
        }
        static compose(I) {
          return Re(I);
        }
        static composeAsync(I) {
          return a(I);
        }
      }
      function X(k) {
        return pt(k.value) ? { required: !0 } : null;
      }
      function Ae(k) {
        return !0 === k.value ? null : { required: !0 };
      }
      function Gt(k) {
        return null;
      }
      function wt(k) {
        return null != k;
      }
      function Ge(k) {
        const I = (0, s.QGY)(k) ? (0, N.D)(k) : k;
        if (rt && !(0, s.CqO)(I)) {
          let M = 'Expected async validator to return Promise or Observable.';
          throw (
            ('object' == typeof k &&
              (M +=
                ' Are you using a synchronous validator where an async validator is expected?'),
            new s.vHH(-1101, M))
          );
        }
        return I;
      }
      function Ye(k) {
        let I = {};
        return (
          k.forEach(M => {
            I = null != M ? { ...I, ...M } : I;
          }),
          0 === Object.keys(I).length ? null : I
        );
      }
      function xe(k, I) {
        return I.map(M => M(k));
      }
      function ye(k) {
        return k.map(I =>
          (function je(k) {
            return !k.validate;
          })(I)
            ? I
            : M => I.validate(M),
        );
      }
      function Re(k) {
        if (!k) return null;
        const I = k.filter(wt);
        return 0 == I.length
          ? null
          : function (M) {
              return Ye(xe(M, I));
            };
      }
      function Le(k) {
        return null != k ? Re(ye(k)) : null;
      }
      function a(k) {
        if (!k) return null;
        const I = k.filter(wt);
        return 0 == I.length
          ? null
          : function (M) {
              const G = xe(M, I).map(Ge);
              return (0, se.D)(G).pipe((0, te.U)(Ye));
            };
      }
      function ot(k) {
        return null != k ? a(ye(k)) : null;
      }
      function Ke(k, I) {
        return null === k ? [I] : Array.isArray(k) ? [...k, I] : [k, I];
      }
      function Lt(k) {
        return k._rawValidators;
      }
      function Be(k) {
        return k._rawAsyncValidators;
      }
      function Pt(k) {
        return k ? (Array.isArray(k) ? k : [k]) : [];
      }
      function an(k, I) {
        return Array.isArray(k) ? k.includes(I) : k === I;
      }
      function ut(k, I) {
        const M = Pt(I);
        return (
          Pt(k).forEach(et => {
            an(M, et) || M.push(et);
          }),
          M
        );
      }
      function Zt(k, I) {
        return Pt(I).filter(M => !an(k, M));
      }
      class Ct {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(I) {
          (this._rawValidators = I || []),
            (this._composedValidatorFn = Le(this._rawValidators));
        }
        _setAsyncValidators(I) {
          (this._rawAsyncValidators = I || []),
            (this._composedAsyncValidatorFn = ot(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(I) {
          this._onDestroyCallbacks.push(I);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach(I => I()),
            (this._onDestroyCallbacks = []);
        }
        reset(I) {
          this.control && this.control.reset(I);
        }
        hasError(I, M) {
          return !!this.control && this.control.hasError(I, M);
        }
        getError(I, M) {
          return this.control ? this.control.getError(I, M) : null;
        }
      }
      class yt extends Ct {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Qt extends Ct {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class dn {
        constructor(I) {
          this._cd = I;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let en = (() => {
          class k extends dn {
            constructor(M) {
              super(M);
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)(s.Y36(Qt, 2));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (M, G) {
                2 & M &&
                  s.ekj('ng-untouched', G.isUntouched)(
                    'ng-touched',
                    G.isTouched,
                  )('ng-pristine', G.isPristine)('ng-dirty', G.isDirty)(
                    'ng-valid',
                    G.isValid,
                  )('ng-invalid', G.isInvalid)('ng-pending', G.isPending);
              },
              features: [s.qOj],
            })),
            k
          );
        })(),
        Bt = (() => {
          class k extends dn {
            constructor(M) {
              super(M);
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)(s.Y36(yt, 10));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (M, G) {
                2 & M &&
                  s.ekj('ng-untouched', G.isUntouched)(
                    'ng-touched',
                    G.isTouched,
                  )('ng-pristine', G.isPristine)('ng-dirty', G.isDirty)(
                    'ng-valid',
                    G.isValid,
                  )('ng-invalid', G.isInvalid)('ng-pending', G.isPending)(
                    'ng-submitted',
                    G.isSubmitted,
                  );
              },
              features: [s.qOj],
            })),
            k
          );
        })();
      function Xe(k, I) {
        return k ? `with name: '${I}'` : `at index: ${I}`;
      }
      const Te = !1,
        vt = 'VALID',
        Je = 'INVALID',
        Et = 'PENDING',
        ke = 'DISABLED';
      function R(k) {
        return (z(k) ? k.validators : k) || null;
      }
      function w(k, I) {
        return (z(I) ? I.asyncValidators : k) || null;
      }
      function z(k) {
        return null != k && !Array.isArray(k) && 'object' == typeof k;
      }
      function $e(k, I, M) {
        const G = k.controls;
        if (!(I ? Object.keys(G) : G).length)
          throw new s.vHH(
            1e3,
            Te
              ? (function xt(k) {
                  return `\n    There are no form controls registered with this ${
                    k ? 'group' : 'array'
                  } yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;
                })(I)
              : '',
          );
        if (!G[M])
          throw new s.vHH(
            1001,
            Te
              ? (function Ot(k, I) {
                  return `Cannot find form control ${Xe(k, I)}`;
                })(I, M)
              : '',
          );
      }
      function Mt(k, I, M) {
        k._forEachChild((G, et) => {
          if (void 0 === M[et])
            throw new s.vHH(
              1002,
              Te
                ? (function Dn(k, I) {
                    return `Must supply a value for form control ${Xe(k, I)}`;
                  })(I, et)
                : '',
            );
        });
      }
      class Xt {
        constructor(I, M) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(I),
            this._assignAsyncValidators(M);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(I) {
          this._rawValidators = this._composedValidatorFn = I;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(I) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = I;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === vt;
        }
        get invalid() {
          return this.status === Je;
        }
        get pending() {
          return this.status == Et;
        }
        get disabled() {
          return this.status === ke;
        }
        get enabled() {
          return this.status !== ke;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : 'change';
        }
        setValidators(I) {
          this._assignValidators(I);
        }
        setAsyncValidators(I) {
          this._assignAsyncValidators(I);
        }
        addValidators(I) {
          this.setValidators(ut(I, this._rawValidators));
        }
        addAsyncValidators(I) {
          this.setAsyncValidators(ut(I, this._rawAsyncValidators));
        }
        removeValidators(I) {
          this.setValidators(Zt(I, this._rawValidators));
        }
        removeAsyncValidators(I) {
          this.setAsyncValidators(Zt(I, this._rawAsyncValidators));
        }
        hasValidator(I) {
          return an(this._rawValidators, I);
        }
        hasAsyncValidator(I) {
          return an(this._rawAsyncValidators, I);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(I = {}) {
          (this.touched = !0),
            this._parent && !I.onlySelf && this._parent.markAsTouched(I);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild(I => I.markAllAsTouched());
        }
        markAsUntouched(I = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild(M => {
              M.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        markAsDirty(I = {}) {
          (this.pristine = !1),
            this._parent && !I.onlySelf && this._parent.markAsDirty(I);
        }
        markAsPristine(I = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild(M => {
              M.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        markAsPending(I = {}) {
          (this.status = Et),
            !1 !== I.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !I.onlySelf && this._parent.markAsPending(I);
        }
        disable(I = {}) {
          const M = this._parentMarkedDirty(I.onlySelf);
          (this.status = ke),
            (this.errors = null),
            this._forEachChild(G => {
              G.disable({ ...I, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...I, skipPristineCheck: M }),
            this._onDisabledChange.forEach(G => G(!0));
        }
        enable(I = {}) {
          const M = this._parentMarkedDirty(I.onlySelf);
          (this.status = vt),
            this._forEachChild(G => {
              G.enable({ ...I, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            }),
            this._updateAncestors({ ...I, skipPristineCheck: M }),
            this._onDisabledChange.forEach(G => G(!1));
        }
        _updateAncestors(I) {
          this._parent &&
            !I.onlySelf &&
            (this._parent.updateValueAndValidity(I),
            I.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(I) {
          this._parent = I;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(I = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === vt || this.status === Et) &&
                this._runAsyncValidator(I.emitEvent)),
            !1 !== I.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !I.onlySelf &&
              this._parent.updateValueAndValidity(I);
        }
        _updateTreeValidity(I = { emitEvent: !0 }) {
          this._forEachChild(M => M._updateTreeValidity(I)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: I.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? ke : vt;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(I) {
          if (this.asyncValidator) {
            (this.status = Et), (this._hasOwnPendingAsyncValidator = !0);
            const M = Ge(this.asyncValidator(this));
            this._asyncValidationSubscription = M.subscribe(G => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(G, { emitEvent: I });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(I, M = {}) {
          (this.errors = I), this._updateControlsErrors(!1 !== M.emitEvent);
        }
        get(I) {
          let M = I;
          return null == M ||
            (Array.isArray(M) || (M = M.split('.')), 0 === M.length)
            ? null
            : M.reduce((G, et) => G && G._find(et), this);
        }
        getError(I, M) {
          const G = M ? this.get(M) : this;
          return G && G.errors ? G.errors[I] : null;
        }
        hasError(I, M) {
          return !!this.getError(I, M);
        }
        get root() {
          let I = this;
          for (; I._parent; ) I = I._parent;
          return I;
        }
        _updateControlsErrors(I) {
          (this.status = this._calculateStatus()),
            I && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(I);
        }
        _initObservables() {
          (this.valueChanges = new s.vpe()), (this.statusChanges = new s.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? ke
            : this.errors
            ? Je
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Et)
            ? Et
            : this._anyControlsHaveStatus(Je)
            ? Je
            : vt;
        }
        _anyControlsHaveStatus(I) {
          return this._anyControls(M => M.status === I);
        }
        _anyControlsDirty() {
          return this._anyControls(I => I.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls(I => I.touched);
        }
        _updatePristine(I = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !I.onlySelf && this._parent._updatePristine(I);
        }
        _updateTouched(I = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !I.onlySelf && this._parent._updateTouched(I);
        }
        _registerOnCollectionChange(I) {
          this._onCollectionChange = I;
        }
        _setUpdateStrategy(I) {
          z(I) && null != I.updateOn && (this._updateOn = I.updateOn);
        }
        _parentMarkedDirty(I) {
          return (
            !I &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(I) {
          return null;
        }
        _assignValidators(I) {
          (this._rawValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedValidatorFn = (function b(k) {
              return Array.isArray(k) ? Le(k) : k || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(I) {
          (this._rawAsyncValidators = Array.isArray(I) ? I.slice() : I),
            (this._composedAsyncValidatorFn = (function $(k) {
              return Array.isArray(k) ? ot(k) : k || null;
            })(this._rawAsyncValidators));
        }
      }
      class Nt extends Xt {
        constructor(I, M, G) {
          super(R(M), w(G, M)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(M),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(I, M) {
          return this.controls[I]
            ? this.controls[I]
            : ((this.controls[I] = M),
              M.setParent(this),
              M._registerOnCollectionChange(this._onCollectionChange),
              M);
        }
        addControl(I, M, G = {}) {
          this.registerControl(I, M),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(I, M = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            this.updateValueAndValidity({ emitEvent: M.emitEvent }),
            this._onCollectionChange();
        }
        setControl(I, M, G = {}) {
          this.controls[I] &&
            this.controls[I]._registerOnCollectionChange(() => {}),
            delete this.controls[I],
            M && this.registerControl(I, M),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        contains(I) {
          return this.controls.hasOwnProperty(I) && this.controls[I].enabled;
        }
        setValue(I, M = {}) {
          Mt(this, !0, I),
            Object.keys(I).forEach(G => {
              $e(this, !0, G),
                this.controls[G].setValue(I[G], {
                  onlySelf: !0,
                  emitEvent: M.emitEvent,
                });
            }),
            this.updateValueAndValidity(M);
        }
        patchValue(I, M = {}) {
          null != I &&
            (Object.keys(I).forEach(G => {
              const et = this.controls[G];
              et &&
                et.patchValue(I[G], { onlySelf: !0, emitEvent: M.emitEvent });
            }),
            this.updateValueAndValidity(M));
        }
        reset(I = {}, M = {}) {
          this._forEachChild((G, et) => {
            G.reset(I[et], { onlySelf: !0, emitEvent: M.emitEvent });
          }),
            this._updatePristine(M),
            this._updateTouched(M),
            this.updateValueAndValidity(M);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (I, M, G) => ((I[G] = M.getRawValue()), I),
          );
        }
        _syncPendingControls() {
          let I = this._reduceChildren(
            !1,
            (M, G) => !!G._syncPendingControls() || M,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          Object.keys(this.controls).forEach(M => {
            const G = this.controls[M];
            G && I(G, M);
          });
        }
        _setUpControls() {
          this._forEachChild(I => {
            I.setParent(this),
              I._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(I) {
          for (const [M, G] of Object.entries(this.controls))
            if (this.contains(M) && I(G)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (M, G, et) => (
              (G.enabled || this.disabled) && (M[et] = G.value), M
            ),
          );
        }
        _reduceChildren(I, M) {
          let G = I;
          return (
            this._forEachChild((et, nn) => {
              G = M(G, et, nn);
            }),
            G
          );
        }
        _allControlsDisabled() {
          for (const I of Object.keys(this.controls))
            if (this.controls[I].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(I) {
          return this.controls.hasOwnProperty(I) ? this.controls[I] : null;
        }
      }
      class Oe extends Nt {}
      const Q = new s.OlP('CallSetDisabledState', {
          providedIn: 'root',
          factory: () => we,
        }),
        we = 'always';
      function Ft(k, I, M = we) {
        Bn(k, I),
          I.valueAccessor.writeValue(k.value),
          (k.disabled || 'always' === M) &&
            I.valueAccessor.setDisabledState?.(k.disabled),
          (function Ii(k, I) {
            I.valueAccessor.registerOnChange(M => {
              (k._pendingValue = M),
                (k._pendingChange = !0),
                (k._pendingDirty = !0),
                'change' === k.updateOn && Hn(k, I);
            });
          })(k, I),
          (function Ci(k, I) {
            const M = (G, et) => {
              I.valueAccessor.writeValue(G), et && I.viewToModelUpdate(G);
            };
            k.registerOnChange(M),
              I._registerOnDestroy(() => {
                k._unregisterOnChange(M);
              });
          })(k, I),
          (function Ln(k, I) {
            I.valueAccessor.registerOnTouched(() => {
              (k._pendingTouched = !0),
                'blur' === k.updateOn && k._pendingChange && Hn(k, I),
                'submit' !== k.updateOn && k.markAsTouched();
            });
          })(k, I),
          (function Gn(k, I) {
            if (I.valueAccessor.setDisabledState) {
              const M = G => {
                I.valueAccessor.setDisabledState(G);
              };
              k.registerOnDisabledChange(M),
                I._registerOnDestroy(() => {
                  k._unregisterOnDisabledChange(M);
                });
            }
          })(k, I);
      }
      function Kt(k, I, M = !0) {
        const G = () => {};
        I.valueAccessor &&
          (I.valueAccessor.registerOnChange(G),
          I.valueAccessor.registerOnTouched(G)),
          Ut(k, I),
          k &&
            (I._invokeOnDestroyCallbacks(),
            k._registerOnCollectionChange(() => {}));
      }
      function Cn(k, I) {
        k.forEach(M => {
          M.registerOnValidatorChange && M.registerOnValidatorChange(I);
        });
      }
      function Bn(k, I) {
        const M = Lt(k);
        null !== I.validator
          ? k.setValidators(Ke(M, I.validator))
          : 'function' == typeof M && k.setValidators([M]);
        const G = Be(k);
        null !== I.asyncValidator
          ? k.setAsyncValidators(Ke(G, I.asyncValidator))
          : 'function' == typeof G && k.setAsyncValidators([G]);
        const et = () => k.updateValueAndValidity();
        Cn(I._rawValidators, et), Cn(I._rawAsyncValidators, et);
      }
      function Ut(k, I) {
        let M = !1;
        if (null !== k) {
          if (null !== I.validator) {
            const et = Lt(k);
            if (Array.isArray(et) && et.length > 0) {
              const nn = et.filter(Kn => Kn !== I.validator);
              nn.length !== et.length && ((M = !0), k.setValidators(nn));
            }
          }
          if (null !== I.asyncValidator) {
            const et = Be(k);
            if (Array.isArray(et) && et.length > 0) {
              const nn = et.filter(Kn => Kn !== I.asyncValidator);
              nn.length !== et.length && ((M = !0), k.setAsyncValidators(nn));
            }
          }
        }
        const G = () => {};
        return Cn(I._rawValidators, G), Cn(I._rawAsyncValidators, G), M;
      }
      function Hn(k, I) {
        k._pendingDirty && k.markAsDirty(),
          k.setValue(k._pendingValue, { emitModelToViewChange: !1 }),
          I.viewToModelUpdate(k._pendingValue),
          (k._pendingChange = !1);
      }
      function ki(k, I) {
        Bn(k, I);
      }
      function Bi(k, I) {
        if (!k.hasOwnProperty('model')) return !1;
        const M = k.model;
        return !!M.isFirstChange() || !Object.is(I, M.currentValue);
      }
      function _i(k, I) {
        k._syncPendingControls(),
          I.forEach(M => {
            const G = M.control;
            'submit' === G.updateOn &&
              G._pendingChange &&
              (M.viewToModelUpdate(G._pendingValue), (G._pendingChange = !1));
          });
      }
      function $t(k, I) {
        if (!I) return null;
        let M, G, et;
        return (
          Array.isArray(I),
          I.forEach(nn => {
            nn.constructor === Ue
              ? (M = nn)
              : (function Zi(k) {
                  return Object.getPrototypeOf(k.constructor) === _e;
                })(nn)
              ? (G = nn)
              : (et = nn);
          }),
          et || G || M || null
        );
      }
      const di = { provide: yt, useExisting: (0, s.Gpc)(() => Un) },
        ui = (() => Promise.resolve())();
      let Un = (() => {
        class k extends yt {
          constructor(M, G, et) {
            super(),
              (this.callSetDisabledState = et),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new s.vpe()),
              (this.form = new Nt({}, Le(M), ot(G)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(M) {
            ui.then(() => {
              const G = this._findContainer(M.path);
              (M.control = G.registerControl(M.name, M.control)),
                Ft(M.control, M, this.callSetDisabledState),
                M.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(M);
            });
          }
          getControl(M) {
            return this.form.get(M.path);
          }
          removeControl(M) {
            ui.then(() => {
              const G = this._findContainer(M.path);
              G && G.removeControl(M.name), this._directives.delete(M);
            });
          }
          addFormGroup(M) {
            ui.then(() => {
              const G = this._findContainer(M.path),
                et = new Nt({});
              ki(et, M),
                G.registerControl(M.name, et),
                et.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(M) {
            ui.then(() => {
              const G = this._findContainer(M.path);
              G && G.removeControl(M.name);
            });
          }
          getFormGroup(M) {
            return this.form.get(M.path);
          }
          updateModel(M, G) {
            ui.then(() => {
              this.form.get(M.path).setValue(G);
            });
          }
          setValue(M) {
            this.control.setValue(M);
          }
          onSubmit(M) {
            return (
              (this.submitted = !0),
              _i(this.form, this._directives),
              this.ngSubmit.emit(M),
              'dialog' === M?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(M) {
            this.form.reset(M), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(M) {
            return M.pop(), M.length ? this.form.get(M) : this.form;
          }
        }
        return (
          (k.ɵfac = function (M) {
            return new (M || k)(s.Y36(ft, 10), s.Y36(st, 10), s.Y36(Q, 8));
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [
              ['form', 3, 'ngNoForm', '', 3, 'formGroup', ''],
              ['ng-form'],
              ['', 'ngForm', ''],
            ],
            hostBindings: function (M, G) {
              1 & M &&
                s.NdJ('submit', function (nn) {
                  return G.onSubmit(nn);
                })('reset', function () {
                  return G.onReset();
                });
            },
            inputs: { options: ['ngFormOptions', 'options'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [s._Bn([di]), s.qOj],
          })),
          k
        );
      })();
      function hi(k, I) {
        const M = k.indexOf(I);
        M > -1 && k.splice(M, 1);
      }
      function An(k) {
        return (
          'object' == typeof k &&
          null !== k &&
          2 === Object.keys(k).length &&
          'value' in k &&
          'disabled' in k
        );
      }
      const Ei = class extends Xt {
          constructor(I = null, M, G) {
            super(R(M), w(G, M)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(I),
              this._setUpdateStrategy(M),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              z(M) &&
                (M.nonNullable || M.initialValueIsDefault) &&
                (this.defaultValue = An(I) ? I.value : I);
          }
          setValue(I, M = {}) {
            (this.value = this._pendingValue = I),
              this._onChange.length &&
                !1 !== M.emitModelToViewChange &&
                this._onChange.forEach(G =>
                  G(this.value, !1 !== M.emitViewToModelChange),
                ),
              this.updateValueAndValidity(M);
          }
          patchValue(I, M = {}) {
            this.setValue(I, M);
          }
          reset(I = this.defaultValue, M = {}) {
            this._applyFormState(I),
              this.markAsPristine(M),
              this.markAsUntouched(M),
              this.setValue(this.value, M),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(I) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(I) {
            this._onChange.push(I);
          }
          _unregisterOnChange(I) {
            hi(this._onChange, I);
          }
          registerOnDisabledChange(I) {
            this._onDisabledChange.push(I);
          }
          _unregisterOnDisabledChange(I) {
            hi(this._onDisabledChange, I);
          }
          _forEachChild(I) {}
          _syncPendingControls() {
            return !(
              'submit' !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(I) {
            An(I)
              ? ((this.value = this._pendingValue = I.value),
                I.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = I);
          }
        },
        Hi = { provide: Qt, useExisting: (0, s.Gpc)(() => fr) },
        hr = (() => Promise.resolve())();
      let fr = (() => {
          class k extends Qt {
            constructor(M, G, et, nn, Kn, at) {
              super(),
                (this._changeDetectorRef = Kn),
                (this.callSetDisabledState = at),
                (this.control = new Ei()),
                (this._registered = !1),
                (this.update = new s.vpe()),
                (this._parent = M),
                this._setValidators(G),
                this._setAsyncValidators(et),
                (this.valueAccessor = $t(0, nn));
            }
            ngOnChanges(M) {
              if ((this._checkForErrors(), !this._registered || 'name' in M)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const G = M.name.previousValue;
                  this.formDirective.removeControl({
                    name: G,
                    path: this._getPath(G),
                  });
                }
                this._setUpControl();
              }
              'isDisabled' in M && this._updateDisabled(M),
                Bi(M, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(M) {
              (this.viewModel = M), this.update.emit(M);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Ft(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(M) {
              hr.then(() => {
                this.control.setValue(M, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(M) {
              const G = M.isDisabled.currentValue,
                et = 0 !== G && (0, s.D6c)(G);
              hr.then(() => {
                et && !this.control.disabled
                  ? this.control.disable()
                  : !et && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(M) {
              return this._parent
                ? (function ct(k, I) {
                    return [...I.path, k];
                  })(M, this._parent)
                : [M];
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)(
                s.Y36(yt, 9),
                s.Y36(ft, 10),
                s.Y36(st, 10),
                s.Y36(ce, 10),
                s.Y36(s.sBO, 8),
                s.Y36(Q, 8),
              );
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  '',
                  'ngModel',
                  '',
                  3,
                  'formControlName',
                  '',
                  3,
                  'formControl',
                  '',
                ],
              ],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [s._Bn([Hi]), s.qOj, s.TTD],
            })),
            k
          );
        })(),
        hn = (() => {
          class k {}
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                ['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', ''],
              ],
              hostAttrs: ['novalidate', ''],
            })),
            k
          );
        })(),
        Xi = (() => {
          class k {}
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({})),
            k
          );
        })();
      const Ze = new s.OlP('NgModelWithFormControlWarning'),
        St = { provide: Qt, useExisting: (0, s.Gpc)(() => It) };
      let It = (() => {
        class k extends Qt {
          set isDisabled(M) {}
          constructor(M, G, et, nn, Kn) {
            super(),
              (this._ngModelWarningConfig = nn),
              (this.callSetDisabledState = Kn),
              (this.update = new s.vpe()),
              (this._ngModelWarningSent = !1),
              this._setValidators(M),
              this._setAsyncValidators(G),
              (this.valueAccessor = $t(0, et));
          }
          ngOnChanges(M) {
            if (this._isControlChanged(M)) {
              const G = M.form.previousValue;
              G && Kt(G, this, !1),
                Ft(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Bi(M, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && Kt(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(M) {
            (this.viewModel = M), this.update.emit(M);
          }
          _isControlChanged(M) {
            return M.hasOwnProperty('form');
          }
        }
        return (
          (k._ngModelWarningSentOnce = !1),
          (k.ɵfac = function (M) {
            return new (M || k)(
              s.Y36(ft, 10),
              s.Y36(st, 10),
              s.Y36(ce, 10),
              s.Y36(Ze, 8),
              s.Y36(Q, 8),
            );
          }),
          (k.ɵdir = s.lG2({
            type: k,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [s._Bn([St]), s.qOj, s.TTD],
          })),
          k
        );
      })();
      const un = { provide: yt, useExisting: (0, s.Gpc)(() => vn) };
      let vn = (() => {
          class k extends yt {
            constructor(M, G, et) {
              super(),
                (this.callSetDisabledState = et),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new s.vpe()),
                this._setValidators(M),
                this._setAsyncValidators(G);
            }
            ngOnChanges(M) {
              this._checkFormPresent(),
                M.hasOwnProperty('form') &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (Ut(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(M) {
              const G = this.form.get(M.path);
              return (
                Ft(G, M, this.callSetDisabledState),
                G.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(M),
                G
              );
            }
            getControl(M) {
              return this.form.get(M.path);
            }
            removeControl(M) {
              Kt(M.control || null, M, !1),
                (function fn(k, I) {
                  const M = k.indexOf(I);
                  M > -1 && k.splice(M, 1);
                })(this.directives, M);
            }
            addFormGroup(M) {
              this._setUpFormContainer(M);
            }
            removeFormGroup(M) {
              this._cleanUpFormContainer(M);
            }
            getFormGroup(M) {
              return this.form.get(M.path);
            }
            addFormArray(M) {
              this._setUpFormContainer(M);
            }
            removeFormArray(M) {
              this._cleanUpFormContainer(M);
            }
            getFormArray(M) {
              return this.form.get(M.path);
            }
            updateModel(M, G) {
              this.form.get(M.path).setValue(G);
            }
            onSubmit(M) {
              return (
                (this.submitted = !0),
                _i(this.form, this.directives),
                this.ngSubmit.emit(M),
                'dialog' === M?.target?.method
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(M) {
              this.form.reset(M), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach(M => {
                const G = M.control,
                  et = this.form.get(M.path);
                G !== et &&
                  (Kt(G || null, M),
                  (k => k instanceof Ei)(et) &&
                    (Ft(et, M, this.callSetDisabledState), (M.control = et)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(M) {
              const G = this.form.get(M.path);
              ki(G, M), G.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(M) {
              if (this.form) {
                const G = this.form.get(M.path);
                G &&
                  (function kn(k, I) {
                    return Ut(k, I);
                  })(G, M) &&
                  G.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              Bn(this.form, this), this._oldForm && Ut(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)(s.Y36(ft, 10), s.Y36(st, 10), s.Y36(Q, 8));
            }),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [['', 'formGroup', '']],
              hostBindings: function (M, G) {
                1 & M &&
                  s.NdJ('submit', function (nn) {
                    return G.onSubmit(nn);
                  })('reset', function () {
                    return G.onReset();
                  });
              },
              inputs: { form: ['formGroup', 'form'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [s._Bn([un]), s.qOj, s.TTD],
            })),
            k
          );
        })(),
        br = (() => {
          class k {
            constructor() {
              this._validator = Gt;
            }
            ngOnChanges(M) {
              if (this.inputName in M) {
                const G = this.normalizeInput(M[this.inputName].currentValue);
                (this._enabled = this.enabled(G)),
                  (this._validator = this._enabled
                    ? this.createValidator(G)
                    : Gt),
                  this._onChange && this._onChange();
              }
            }
            validate(M) {
              return this._validator(M);
            }
            registerOnValidatorChange(M) {
              this._onChange = M;
            }
            enabled(M) {
              return null != M;
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵdir = s.lG2({ type: k, features: [s.TTD] })),
            k
          );
        })();
      const go = { provide: ft, useExisting: (0, s.Gpc)(() => Rr), multi: !0 },
        Yr = { provide: ft, useExisting: (0, s.Gpc)(() => oo), multi: !0 };
      let Rr = (() => {
          class k extends br {
            constructor() {
              super(...arguments),
                (this.inputName = 'required'),
                (this.normalizeInput = s.D6c),
                (this.createValidator = M => X);
            }
            enabled(M) {
              return M;
            }
          }
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  '',
                  'required',
                  '',
                  'formControlName',
                  '',
                  3,
                  'type',
                  'checkbox',
                ],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (M, G) {
                2 & M && s.uIk('required', G._enabled ? '' : null);
              },
              inputs: { required: 'required' },
              features: [s._Bn([go]), s.qOj],
            })),
            k
          );
        })(),
        oo = (() => {
          class k extends Rr {
            constructor() {
              super(...arguments), (this.createValidator = M => Ae);
            }
          }
          return (
            (k.ɵfac = (function () {
              let I;
              return function (G) {
                return (I || (I = s.n5z(k)))(G || k);
              };
            })()),
            (k.ɵdir = s.lG2({
              type: k,
              selectors: [
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControlName',
                  '',
                ],
                [
                  'input',
                  'type',
                  'checkbox',
                  'required',
                  '',
                  'formControl',
                  '',
                ],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (M, G) {
                2 & M && s.uIk('required', G._enabled ? '' : null);
              },
              features: [s._Bn([Yr]), s.qOj],
            })),
            k
          );
        })(),
        Zr = (() => {
          class k {}
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [Xi] })),
            k
          );
        })();
      class Dr extends Xt {
        constructor(I, M, G) {
          super(R(M), w(G, M)),
            (this.controls = I),
            this._initObservables(),
            this._setUpdateStrategy(M),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(I) {
          return this.controls[this._adjustIndex(I)];
        }
        push(I, M = {}) {
          this.controls.push(I),
            this._registerControl(I),
            this.updateValueAndValidity({ emitEvent: M.emitEvent }),
            this._onCollectionChange();
        }
        insert(I, M, G = {}) {
          this.controls.splice(I, 0, M),
            this._registerControl(M),
            this.updateValueAndValidity({ emitEvent: G.emitEvent });
        }
        removeAt(I, M = {}) {
          let G = this._adjustIndex(I);
          G < 0 && (G = 0),
            this.controls[G] &&
              this.controls[G]._registerOnCollectionChange(() => {}),
            this.controls.splice(G, 1),
            this.updateValueAndValidity({ emitEvent: M.emitEvent });
        }
        setControl(I, M, G = {}) {
          let et = this._adjustIndex(I);
          et < 0 && (et = 0),
            this.controls[et] &&
              this.controls[et]._registerOnCollectionChange(() => {}),
            this.controls.splice(et, 1),
            M && (this.controls.splice(et, 0, M), this._registerControl(M)),
            this.updateValueAndValidity({ emitEvent: G.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(I, M = {}) {
          Mt(this, !1, I),
            I.forEach((G, et) => {
              $e(this, !1, et),
                this.at(et).setValue(G, {
                  onlySelf: !0,
                  emitEvent: M.emitEvent,
                });
            }),
            this.updateValueAndValidity(M);
        }
        patchValue(I, M = {}) {
          null != I &&
            (I.forEach((G, et) => {
              this.at(et) &&
                this.at(et).patchValue(G, {
                  onlySelf: !0,
                  emitEvent: M.emitEvent,
                });
            }),
            this.updateValueAndValidity(M));
        }
        reset(I = [], M = {}) {
          this._forEachChild((G, et) => {
            G.reset(I[et], { onlySelf: !0, emitEvent: M.emitEvent });
          }),
            this._updatePristine(M),
            this._updateTouched(M),
            this.updateValueAndValidity(M);
        }
        getRawValue() {
          return this.controls.map(I => I.getRawValue());
        }
        clear(I = {}) {
          this.controls.length < 1 ||
            (this._forEachChild(M => M._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: I.emitEvent }));
        }
        _adjustIndex(I) {
          return I < 0 ? I + this.length : I;
        }
        _syncPendingControls() {
          let I = this.controls.reduce(
            (M, G) => !!G._syncPendingControls() || M,
            !1,
          );
          return I && this.updateValueAndValidity({ onlySelf: !0 }), I;
        }
        _forEachChild(I) {
          this.controls.forEach((M, G) => {
            I(M, G);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter(I => I.enabled || this.disabled)
            .map(I => I.value);
        }
        _anyControls(I) {
          return this.controls.some(M => M.enabled && I(M));
        }
        _setUpControls() {
          this._forEachChild(I => this._registerControl(I));
        }
        _allControlsDisabled() {
          for (const I of this.controls) if (I.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(I) {
          I.setParent(this),
            I._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(I) {
          return this.at(I) ?? null;
        }
      }
      function Pr(k) {
        return (
          !!k &&
          (void 0 !== k.asyncValidators ||
            void 0 !== k.validators ||
            void 0 !== k.updateOn)
        );
      }
      let Io = (() => {
          class k {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const M = new k();
              return (M.useNonNullable = !0), M;
            }
            group(M, G = null) {
              const et = this._reduceControls(M);
              let nn = {};
              return (
                Pr(G)
                  ? (nn = G)
                  : null !== G &&
                    ((nn.validators = G.validator),
                    (nn.asyncValidators = G.asyncValidator)),
                new Nt(et, nn)
              );
            }
            record(M, G = null) {
              const et = this._reduceControls(M);
              return new Oe(et, G);
            }
            control(M, G, et) {
              let nn = {};
              return this.useNonNullable
                ? (Pr(G)
                    ? (nn = G)
                    : ((nn.validators = G), (nn.asyncValidators = et)),
                  new Ei(M, { ...nn, nonNullable: !0 }))
                : new Ei(M, G, et);
            }
            array(M, G, et) {
              const nn = M.map(Kn => this._createControl(Kn));
              return new Dr(nn, G, et);
            }
            _reduceControls(M) {
              const G = {};
              return (
                Object.keys(M).forEach(et => {
                  G[et] = this._createControl(M[et]);
                }),
                G
              );
            }
            _createControl(M) {
              return M instanceof Ei || M instanceof Xt
                ? M
                : Array.isArray(M)
                ? this.control(
                    M[0],
                    M.length > 1 ? M[1] : null,
                    M.length > 2 ? M[2] : null,
                  )
                : this.control(M);
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵprov = s.Yz7({
              token: k,
              factory: k.ɵfac,
              providedIn: 'root',
            })),
            k
          );
        })(),
        yn = (() => {
          class k {
            static withConfig(M) {
              return {
                ngModule: k,
                providers: [
                  { provide: Q, useValue: M.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [Zr] })),
            k
          );
        })(),
        xr = (() => {
          class k {
            static withConfig(M) {
              return {
                ngModule: k,
                providers: [
                  {
                    provide: Ze,
                    useValue: M.warnOnNgModelWithFormControl ?? 'always',
                  },
                  { provide: Q, useValue: M.callSetDisabledState ?? we },
                ],
              };
            }
          }
          return (
            (k.ɵfac = function (M) {
              return new (M || k)();
            }),
            (k.ɵmod = s.oAB({ type: k })),
            (k.ɵinj = s.cJS({ imports: [Zr] })),
            k
          );
        })();
    },
    4859: (Tt, Pe, D) => {
      D.d(Pe, {
        RK: () => je,
        cs: () => wt,
        lW: () => Ae,
        nh: () => Ge,
        ot: () => Re,
      });
      var s = D(3353),
        x = D(4650),
        N = D(2687),
        se = D(3238),
        te = D(1281);
      const ue = ['mat-button', ''],
        _e = [
          [
            ['', 8, 'material-icons', 3, 'iconPositionEnd', ''],
            ['mat-icon', 3, 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 3, 'iconPositionEnd', ''],
          ],
          '*',
          [
            ['', 'iconPositionEnd', '', 8, 'material-icons'],
            ['mat-icon', 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 'iconPositionEnd', ''],
          ],
        ],
        ce = [
          '.material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])',
          '*',
          '.material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]',
        ],
        fe = ['mat-fab', ''],
        re = ['mat-mini-fab', ''],
        Ue = ['mat-icon-button', ''],
        rt = ['*'],
        st = [
          {
            selector: 'mat-button',
            mdcClasses: ['mdc-button', 'mat-mdc-button'],
          },
          {
            selector: 'mat-flat-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--unelevated',
              'mat-mdc-unelevated-button',
            ],
          },
          {
            selector: 'mat-raised-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--raised',
              'mat-mdc-raised-button',
            ],
          },
          {
            selector: 'mat-stroked-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--outlined',
              'mat-mdc-outlined-button',
            ],
          },
          { selector: 'mat-fab', mdcClasses: ['mdc-fab', 'mat-mdc-fab'] },
          {
            selector: 'mat-mini-fab',
            mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],
          },
          {
            selector: 'mat-icon-button',
            mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],
          },
        ],
        mt = (0, se.pj)(
          (0, se.Id)(
            (0, se.Kr)(
              class {
                constructor(Le) {
                  this._elementRef = Le;
                }
              },
            ),
          ),
        );
      let K = (() => {
          class Le extends mt {
            constructor(ot, Ke, Lt, Be) {
              super(ot),
                (this._platform = Ke),
                (this._ngZone = Lt),
                (this._animationMode = Be),
                (this._focusMonitor = (0, x.f3M)(N.tE)),
                (this._isFab = !1);
              const Pt = ot.nativeElement.classList;
              for (const an of st)
                this._hasHostAttributes(an.selector) &&
                  an.mdcClasses.forEach(ut => {
                    Pt.add(ut);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(ot = 'program', Ke) {
              ot
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    ot,
                    Ke,
                  )
                : this._elementRef.nativeElement.focus(Ke);
            }
            _hasHostAttributes(...ot) {
              return ot.some(Ke =>
                this._elementRef.nativeElement.hasAttribute(Ke),
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (Le.ɵfac = function (ot) {
              x.$Z();
            }),
            (Le.ɵdir = x.lG2({
              type: Le,
              viewQuery: function (ot, Ke) {
                if ((1 & ot && x.Gf(se.wG, 5), 2 & ot)) {
                  let Lt;
                  x.iGM((Lt = x.CRH())) && (Ke.ripple = Lt.first);
                }
              },
              features: [x.qOj],
            })),
            Le
          );
        })(),
        Ae = (() => {
          class Le extends K {
            constructor(ot, Ke, Lt, Be) {
              super(ot, Ke, Lt, Be);
            }
          }
          return (
            (Le.ɵfac = function (ot) {
              return new (ot || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-flat-button', ''],
                ['button', 'mat-stroked-button', ''],
              ],
              hostVars: 7,
              hostBindings: function (ot, Ke) {
                2 & ot &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: ue,
              ngContentSelectors: ce,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ot, Ke) {
                1 & ot &&
                  (x.F$t(_e),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ot &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [se.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })();
      const dt = new x.OlP('mat-mdc-fab-default-options', {
        providedIn: 'root',
        factory: At,
      });
      function At() {
        return { color: 'accent' };
      }
      const _t = At();
      let wt = (() => {
          class Le extends K {
            get extended() {
              return this._extended;
            }
            set extended(ot) {
              this._extended = (0, te.Ig)(ot);
            }
            constructor(ot, Ke, Lt, Be, Pt) {
              super(ot, Ke, Lt, Be),
                (this._options = Pt),
                (this._isFab = !0),
                (this._options = this._options || _t),
                (this.color = this.defaultColor =
                  this._options.color || _t.color);
            }
          }
          return (
            (Le.ɵfac = function (ot) {
              return new (ot || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(dt, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-fab', '']],
              hostVars: 11,
              hostBindings: function (ot, Ke) {
                2 & ot &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0)(
                    'mdc-fab--extended',
                    Ke.extended,
                  )('mat-mdc-extended-fab', Ke.extended));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                extended: 'extended',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: fe,
              ngContentSelectors: ce,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ot, Ke) {
                1 & ot &&
                  (x.F$t(_e),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ot &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [se.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        Ge = (() => {
          class Le extends K {
            constructor(ot, Ke, Lt, Be, Pt) {
              super(ot, Ke, Lt, Be),
                (this._options = Pt),
                (this._isFab = !0),
                (this._options = this._options || _t),
                (this.color = this.defaultColor =
                  this._options.color || _t.color);
            }
          }
          return (
            (Le.ɵfac = function (ot) {
              return new (ot || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
                x.Y36(dt, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-mini-fab', '']],
              hostVars: 7,
              hostBindings: function (ot, Ke) {
                2 & ot &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: re,
              ngContentSelectors: ce,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ot, Ke) {
                1 & ot &&
                  (x.F$t(_e),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x.TgZ(2, 'span', 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & ot &&
                    (x.ekj('mdc-button__ripple', !Ke._isFab)(
                      'mdc-fab__ripple',
                      Ke._isFab,
                    ),
                    x.xp6(6),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleTrigger',
                      Ke._elementRef.nativeElement,
                    ));
              },
              dependencies: [se.wG],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        je = (() => {
          class Le extends K {
            constructor(ot, Ke, Lt, Be) {
              super(ot, Ke, Lt, Be);
            }
          }
          return (
            (Le.ɵfac = function (ot) {
              return new (ot || Le)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            }),
            (Le.ɵcmp = x.Xpm({
              type: Le,
              selectors: [['button', 'mat-icon-button', '']],
              hostVars: 7,
              hostBindings: function (ot, Ke) {
                2 & ot &&
                  (x.uIk('disabled', Ke.disabled || null),
                  x.ekj(
                    '_mat-animation-noopable',
                    'NoopAnimations' === Ke._animationMode,
                  )('mat-unthemed', !Ke.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [x.qOj],
              attrs: Ue,
              ngContentSelectors: rt,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  'mat-mdc-button-persistent-ripple',
                  'mdc-icon-button__ripple',
                ],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (ot, Ke) {
                1 & ot &&
                  (x.F$t(),
                  x._UZ(0, 'span', 0),
                  x.Hsn(1),
                  x._UZ(2, 'span', 1)(3, 'span', 2)(4, 'span', 3)),
                  2 & ot &&
                    (x.xp6(3),
                    x.Q6J('matRippleDisabled', Ke._isRippleDisabled())(
                      'matRippleCentered',
                      !0,
                    )('matRippleTrigger', Ke._elementRef.nativeElement));
              },
              dependencies: [se.wG],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Le
          );
        })(),
        Re = (() => {
          class Le {}
          return (
            (Le.ɵfac = function (ot) {
              return new (ot || Le)();
            }),
            (Le.ɵmod = x.oAB({ type: Le })),
            (Le.ɵinj = x.cJS({ imports: [se.BQ, se.si, se.BQ] })),
            Le
          );
        })();
    },
    3238: (Tt, Pe, D) => {
      D.d(Pe, {
        _A: () => je,
        rD: () => Pt,
        sG: () => ye,
        Ad: () => Ye,
        K7: () => pe,
        HF: () => U,
        BQ: () => ee,
        XK: () => Lt,
        ey: () => Te,
        Ng: () => Et,
        wG: () => Me,
        si: () => ze,
        hu: () => Be,
        CB: () => vt,
        jH: () => Je,
        pj: () => At,
        Kr: () => _t,
        Id: () => dt,
        FD: () => wt,
        sb: () => Gt,
      });
      var s = D(4650),
        x = D(2687),
        N = D(445),
        te = D(6895),
        ue = D(3353),
        _e = D(1281),
        ce = D(7579),
        he = D(9521);
      const re = ['text'];
      function He(ke, R) {
        if ((1 & ke && s._UZ(0, 'mat-pseudo-checkbox', 6), 2 & ke)) {
          const b = s.oxw();
          s.Q6J('state', b.selected ? 'checked' : 'unchecked')(
            'disabled',
            b.disabled,
          );
        }
      }
      function Ue(ke, R) {
        if ((1 & ke && s._UZ(0, 'mat-pseudo-checkbox', 7), 2 & ke)) {
          const b = s.oxw();
          s.Q6J('disabled', b.disabled);
        }
      }
      function rt(ke, R) {
        if ((1 & ke && (s.TgZ(0, 'span', 8), s._uU(1), s.qZA()), 2 & ke)) {
          const b = s.oxw();
          s.xp6(1), s.hij('(', b.group.label, ')');
        }
      }
      const pt = [[['mat-icon']], '*'],
        Ne = ['mat-icon', '*'],
        ie = new s.OlP('mat-sanity-checks', {
          providedIn: 'root',
          factory: function K() {
            return !0;
          },
        });
      let ee = (() => {
        class ke {
          constructor(b, w, $) {
            (this._sanityChecks = w),
              (this._document = $),
              (this._hasDoneGlobalChecks = !1),
              b._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(b) {
            return (
              !(0, ue.Oy)() &&
              ('boolean' == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[b])
            );
          }
        }
        return (
          (ke.ɵfac = function (b) {
            return new (b || ke)(s.LFG(x.qm), s.LFG(ie, 8), s.LFG(te.K0));
          }),
          (ke.ɵmod = s.oAB({ type: ke })),
          (ke.ɵinj = s.cJS({ imports: [N.vT, N.vT] })),
          ke
        );
      })();
      function dt(ke) {
        return class extends ke {
          get disabled() {
            return this._disabled;
          }
          set disabled(R) {
            this._disabled = (0, _e.Ig)(R);
          }
          constructor(...R) {
            super(...R), (this._disabled = !1);
          }
        };
      }
      function At(ke, R) {
        return class extends ke {
          get color() {
            return this._color;
          }
          set color(b) {
            const w = b || this.defaultColor;
            w !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`,
                ),
              w && this._elementRef.nativeElement.classList.add(`mat-${w}`),
              (this._color = w));
          }
          constructor(...b) {
            super(...b), (this.defaultColor = R), (this.color = R);
          }
        };
      }
      function _t(ke) {
        return class extends ke {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(R) {
            this._disableRipple = (0, _e.Ig)(R);
          }
          constructor(...R) {
            super(...R), (this._disableRipple = !1);
          }
        };
      }
      function Gt(ke, R = 0) {
        return class extends ke {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(b) {
            this._tabIndex = null != b ? (0, _e.su)(b) : this.defaultTabIndex;
          }
          constructor(...b) {
            super(...b), (this._tabIndex = R), (this.defaultTabIndex = R);
          }
        };
      }
      function wt(ke) {
        return class extends ke {
          updateErrorState() {
            const R = this.errorState,
              z = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm,
              );
            z !== R && ((this.errorState = z), this.stateChanges.next());
          }
          constructor(...R) {
            super(...R), (this.errorState = !1);
          }
        };
      }
      const Ye = new s.OlP('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function xe() {
          return (0, s.f3M)(s.soG);
        },
      });
      class je {
        constructor() {
          (this._localeChanges = new ce.x()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(R) {
          return this.isDateInstance(R) && this.isValid(R) ? R : null;
        }
        deserialize(R) {
          return null == R || (this.isDateInstance(R) && this.isValid(R))
            ? R
            : this.invalid();
        }
        setLocale(R) {
          (this.locale = R), this._localeChanges.next();
        }
        compareDate(R, b) {
          return (
            this.getYear(R) - this.getYear(b) ||
            this.getMonth(R) - this.getMonth(b) ||
            this.getDate(R) - this.getDate(b)
          );
        }
        sameDate(R, b) {
          if (R && b) {
            let w = this.isValid(R),
              $ = this.isValid(b);
            return w && $ ? !this.compareDate(R, b) : w == $;
          }
          return R == b;
        }
        clampDate(R, b, w) {
          return b && this.compareDate(R, b) < 0
            ? b
            : w && this.compareDate(R, w) > 0
            ? w
            : R;
        }
      }
      const ye = new s.OlP('mat-date-formats'),
        Re =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function Le(ke, R) {
        const b = Array(ke);
        for (let w = 0; w < ke; w++) b[w] = R(w);
        return b;
      }
      let a = (() => {
        class ke extends je {
          constructor(b, w) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(b);
          }
          getYear(b) {
            return b.getFullYear();
          }
          getMonth(b) {
            return b.getMonth();
          }
          getDate(b) {
            return b.getDate();
          }
          getDayOfWeek(b) {
            return b.getDay();
          }
          getMonthNames(b) {
            const w = new Intl.DateTimeFormat(this.locale, {
              month: b,
              timeZone: 'utc',
            });
            return Le(12, $ => this._format(w, new Date(2017, $, 1)));
          }
          getDateNames() {
            const b = new Intl.DateTimeFormat(this.locale, {
              day: 'numeric',
              timeZone: 'utc',
            });
            return Le(31, w => this._format(b, new Date(2017, 0, w + 1)));
          }
          getDayOfWeekNames(b) {
            const w = new Intl.DateTimeFormat(this.locale, {
              weekday: b,
              timeZone: 'utc',
            });
            return Le(7, $ => this._format(w, new Date(2017, 0, $ + 1)));
          }
          getYearName(b) {
            const w = new Intl.DateTimeFormat(this.locale, {
              year: 'numeric',
              timeZone: 'utc',
            });
            return this._format(w, b);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(b) {
            return this.getDate(
              this._createDateWithOverflow(
                this.getYear(b),
                this.getMonth(b) + 1,
                0,
              ),
            );
          }
          clone(b) {
            return new Date(b.getTime());
          }
          createDate(b, w, $) {
            let z = this._createDateWithOverflow(b, w, $);
            return z.getMonth(), z;
          }
          today() {
            return new Date();
          }
          parse(b, w) {
            return 'number' == typeof b
              ? new Date(b)
              : b
              ? new Date(Date.parse(b))
              : null;
          }
          format(b, w) {
            if (!this.isValid(b))
              throw Error('NativeDateAdapter: Cannot format invalid date.');
            const $ = new Intl.DateTimeFormat(this.locale, {
              ...w,
              timeZone: 'utc',
            });
            return this._format($, b);
          }
          addCalendarYears(b, w) {
            return this.addCalendarMonths(b, 12 * w);
          }
          addCalendarMonths(b, w) {
            let $ = this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b) + w,
              this.getDate(b),
            );
            return (
              this.getMonth($) != (((this.getMonth(b) + w) % 12) + 12) % 12 &&
                ($ = this._createDateWithOverflow(
                  this.getYear($),
                  this.getMonth($),
                  0,
                )),
              $
            );
          }
          addCalendarDays(b, w) {
            return this._createDateWithOverflow(
              this.getYear(b),
              this.getMonth(b),
              this.getDate(b) + w,
            );
          }
          toIso8601(b) {
            return [
              b.getUTCFullYear(),
              this._2digit(b.getUTCMonth() + 1),
              this._2digit(b.getUTCDate()),
            ].join('-');
          }
          deserialize(b) {
            if ('string' == typeof b) {
              if (!b) return null;
              if (Re.test(b)) {
                let w = new Date(b);
                if (this.isValid(w)) return w;
              }
            }
            return super.deserialize(b);
          }
          isDateInstance(b) {
            return b instanceof Date;
          }
          isValid(b) {
            return !isNaN(b.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(b, w, $) {
            const z = new Date();
            return z.setFullYear(b, w, $), z.setHours(0, 0, 0, 0), z;
          }
          _2digit(b) {
            return ('00' + b).slice(-2);
          }
          _format(b, w) {
            const $ = new Date();
            return (
              $.setUTCFullYear(w.getFullYear(), w.getMonth(), w.getDate()),
              $.setUTCHours(
                w.getHours(),
                w.getMinutes(),
                w.getSeconds(),
                w.getMilliseconds(),
              ),
              b.format($)
            );
          }
        }
        return (
          (ke.ɵfac = function (b) {
            return new (b || ke)(s.LFG(Ye, 8), s.LFG(ue.t4));
          }),
          (ke.ɵprov = s.Yz7({ token: ke, factory: ke.ɵfac })),
          ke
        );
      })();
      const ot = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let Ke = (() => {
          class ke {}
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵmod = s.oAB({ type: ke })),
            (ke.ɵinj = s.cJS({ providers: [{ provide: je, useClass: a }] })),
            ke
          );
        })(),
        Lt = (() => {
          class ke {}
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵmod = s.oAB({ type: ke })),
            (ke.ɵinj = s.cJS({
              providers: [{ provide: ye, useValue: ot }],
              imports: [Ke],
            })),
            ke
          );
        })(),
        Be = (() => {
          class ke {
            isErrorState(b, w) {
              return !!(b && b.invalid && (b.dirty || (w && w.submitted)));
            }
          }
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵprov = s.Yz7({ token: ke, factory: ke.ɵfac })),
            ke
          );
        })(),
        Pt = (() => {
          class ke {
            isErrorState(b, w) {
              return !!(b && b.invalid && (b.touched || (w && w.submitted)));
            }
          }
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵprov = s.Yz7({
              token: ke,
              factory: ke.ɵfac,
              providedIn: 'root',
            })),
            ke
          );
        })();
      class yt {
        constructor(R, b, w, $ = !1) {
          (this._renderer = R),
            (this.element = b),
            (this.config = w),
            (this._animationForciblyDisabledThroughCss = $),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const Qt = (0, ue.i$)({ passive: !0, capture: !0 });
      class dn {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = R => {
              const b = (0, ue.sA)(R);
              b &&
                this._events.get(R.type)?.forEach((w, $) => {
                  ($ === b || $.contains(b)) &&
                    w.forEach(z => z.handleEvent(R));
                });
            });
        }
        addHandler(R, b, w, $) {
          const z = this._events.get(b);
          if (z) {
            const $e = z.get(w);
            $e ? $e.add($) : z.set(w, new Set([$]));
          } else
            this._events.set(b, new Map([[w, new Set([$])]])),
              R.runOutsideAngular(() => {
                document.addEventListener(b, this._delegateEventHandler, Qt);
              });
        }
        removeHandler(R, b, w) {
          const $ = this._events.get(R);
          if (!$) return;
          const z = $.get(b);
          z &&
            (z.delete(w),
            0 === z.size && $.delete(b),
            0 === $.size &&
              (this._events.delete(R),
              document.removeEventListener(R, this._delegateEventHandler, Qt)));
        }
      }
      const wn = { enterDuration: 225, exitDuration: 150 },
        en = (0, ue.i$)({ passive: !0, capture: !0 }),
        Bt = ['mousedown', 'touchstart'],
        Rn = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class it {
        constructor(R, b, w, $) {
          (this._target = R),
            (this._ngZone = b),
            (this._platform = $),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            $.isBrowser && (this._containerElement = (0, _e.fI)(w));
        }
        fadeInRipple(R, b, w = {}) {
          const $ = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            z = { ...wn, ...w.animation };
          w.centered &&
            ((R = $.left + $.width / 2), (b = $.top + $.height / 2));
          const $e =
              w.radius ||
              (function W(ke, R, b) {
                const w = Math.max(
                    Math.abs(ke - b.left),
                    Math.abs(ke - b.right),
                  ),
                  $ = Math.max(Math.abs(R - b.top), Math.abs(R - b.bottom));
                return Math.sqrt(w * w + $ * $);
              })(R, b, $),
            Mt = R - $.left,
            Xt = b - $.top,
            Nt = z.enterDuration,
            Yt = document.createElement('div');
          Yt.classList.add('mat-ripple-element'),
            (Yt.style.left = Mt - $e + 'px'),
            (Yt.style.top = Xt - $e + 'px'),
            (Yt.style.height = 2 * $e + 'px'),
            (Yt.style.width = 2 * $e + 'px'),
            null != w.color && (Yt.style.backgroundColor = w.color),
            (Yt.style.transitionDuration = `${Nt}ms`),
            this._containerElement.appendChild(Yt);
          const tn = window.getComputedStyle(Yt),
            Ce = tn.transitionDuration,
            Q =
              'none' === tn.transitionProperty ||
              '0s' === Ce ||
              '0s, 0s' === Ce ||
              (0 === $.width && 0 === $.height),
            we = new yt(this, Yt, w, Q);
          (Yt.style.transform = 'scale3d(1, 1, 1)'),
            (we.state = 0),
            w.persistent || (this._mostRecentTransientRipple = we);
          let ct = null;
          return (
            !Q &&
              (Nt || z.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const Ft = () => this._finishRippleTransition(we),
                  Kt = () => this._destroyRipple(we);
                Yt.addEventListener('transitionend', Ft),
                  Yt.addEventListener('transitioncancel', Kt),
                  (ct = { onTransitionEnd: Ft, onTransitionCancel: Kt });
              }),
            this._activeRipples.set(we, ct),
            (Q || !Nt) && this._finishRippleTransition(we),
            we
          );
        }
        fadeOutRipple(R) {
          if (2 === R.state || 3 === R.state) return;
          const b = R.element,
            w = { ...wn, ...R.config.animation };
          (b.style.transitionDuration = `${w.exitDuration}ms`),
            (b.style.opacity = '0'),
            (R.state = 2),
            (R._animationForciblyDisabledThroughCss || !w.exitDuration) &&
              this._finishRippleTransition(R);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach(R => R.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach(R => {
            R.config.persistent || R.fadeOut();
          });
        }
        setupTriggerEvents(R) {
          const b = (0, _e.fI)(R);
          !this._platform.isBrowser ||
            !b ||
            b === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = b),
            Bt.forEach(w => {
              it._eventManager.addHandler(this._ngZone, w, b, this);
            }));
        }
        handleEvent(R) {
          'mousedown' === R.type
            ? this._onMousedown(R)
            : 'touchstart' === R.type
            ? this._onTouchStart(R)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                Rn.forEach(b => {
                  this._triggerElement.addEventListener(b, this, en);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(R) {
          0 === R.state
            ? this._startFadeOutTransition(R)
            : 2 === R.state && this._destroyRipple(R);
        }
        _startFadeOutTransition(R) {
          const b = R === this._mostRecentTransientRipple,
            { persistent: w } = R.config;
          (R.state = 1), !w && (!b || !this._isPointerDown) && R.fadeOut();
        }
        _destroyRipple(R) {
          const b = this._activeRipples.get(R) ?? null;
          this._activeRipples.delete(R),
            this._activeRipples.size || (this._containerRect = null),
            R === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (R.state = 3),
            null !== b &&
              (R.element.removeEventListener(
                'transitionend',
                b.onTransitionEnd,
              ),
              R.element.removeEventListener(
                'transitioncancel',
                b.onTransitionCancel,
              )),
            R.element.remove();
        }
        _onMousedown(R) {
          const b = (0, x.X6)(R),
            w =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !b &&
            !w &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(R.clientX, R.clientY, this._target.rippleConfig));
        }
        _onTouchStart(R) {
          if (!this._target.rippleDisabled && !(0, x.yG)(R)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const b = R.changedTouches;
            for (let w = 0; w < b.length; w++)
              this.fadeInRipple(
                b[w].clientX,
                b[w].clientY,
                this._target.rippleConfig,
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach(R => {
              !R.config.persistent &&
                (1 === R.state ||
                  (R.config.terminateOnPointerUp && 0 === R.state)) &&
                R.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const R = this._triggerElement;
          R &&
            (Bt.forEach(b => it._eventManager.removeHandler(b, R, this)),
            this._pointerUpEventsRegistered &&
              Rn.forEach(b => R.removeEventListener(b, this, en)));
        }
      }
      it._eventManager = new dn();
      const ne = new s.OlP('mat-ripple-global-options');
      let Me = (() => {
          class ke {
            get disabled() {
              return this._disabled;
            }
            set disabled(b) {
              b && this.fadeOutAllNonPersistent(),
                (this._disabled = b),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(b) {
              (this._trigger = b), this._setupTriggerEventsIfEnabled();
            }
            constructor(b, w, $, z, $e) {
              (this._elementRef = b),
                (this._animationMode = $e),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = z || {}),
                (this._rippleRenderer = new it(this, w, b, $));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...('NoopAnimations' === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(b, w = 0, $) {
              return 'number' == typeof b
                ? this._rippleRenderer.fadeInRipple(b, w, {
                    ...this.rippleConfig,
                    ...$,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...b,
                  });
            }
          }
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(ue.t4),
                s.Y36(ne, 8),
                s.Y36(s.QbO, 8),
              );
            }),
            (ke.ɵdir = s.lG2({
              type: ke,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (b, w) {
                2 & b && s.ekj('mat-ripple-unbounded', w.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            ke
          );
        })(),
        ze = (() => {
          class ke {}
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵmod = s.oAB({ type: ke })),
            (ke.ɵinj = s.cJS({ imports: [ee, ee] })),
            ke
          );
        })(),
        ve = (() => {
          class ke {
            constructor(b) {
              (this._animationMode = b),
                (this.state = 'unchecked'),
                (this.disabled = !1),
                (this.appearance = 'full');
            }
          }
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)(s.Y36(s.QbO, 8));
            }),
            (ke.ɵcmp = s.Xpm({
              type: ke,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 12,
              hostBindings: function (b, w) {
                2 & b &&
                  s.ekj(
                    'mat-pseudo-checkbox-indeterminate',
                    'indeterminate' === w.state,
                  )('mat-pseudo-checkbox-checked', 'checked' === w.state)(
                    'mat-pseudo-checkbox-disabled',
                    w.disabled,
                  )('mat-pseudo-checkbox-minimal', 'minimal' === w.appearance)(
                    'mat-pseudo-checkbox-full',
                    'full' === w.appearance,
                  )(
                    '_mat-animation-noopable',
                    'NoopAnimations' === w._animationMode,
                  );
              },
              inputs: {
                state: 'state',
                disabled: 'disabled',
                appearance: 'appearance',
              },
              decls: 0,
              vars: 0,
              template: function (b, w) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ke
          );
        })(),
        be = (() => {
          class ke {}
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)();
            }),
            (ke.ɵmod = s.oAB({ type: ke })),
            (ke.ɵinj = s.cJS({ imports: [ee] })),
            ke
          );
        })();
      const U = new s.OlP('MAT_OPTION_PARENT_COMPONENT'),
        pe = new s.OlP('MatOptgroup');
      let xt = 0;
      class Ot {
        constructor(R, b = !1) {
          (this.source = R), (this.isUserInput = b);
        }
      }
      let Dn = (() => {
          class ke {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(b) {
              this._disabled = (0, _e.Ig)(b);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(b, w, $, z) {
              (this._element = b),
                (this._changeDetectorRef = w),
                (this._parent = $),
                (this.group = z),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + xt++),
                (this.onSelectionChange = new s.vpe()),
                (this._stateChanges = new ce.x());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(b, w) {
              const $ = this._getHostElement();
              'function' == typeof $.focus && $.focus(w);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(b) {
              (b.keyCode === he.K5 || b.keyCode === he.L_) &&
                !(0, he.Vb)(b) &&
                (this._selectViaInteraction(), b.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const b = this.viewValue;
                b !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = b));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(b = !1) {
              this.onSelectionChange.emit(new Ot(this, b));
            }
          }
          return (
            (ke.ɵfac = function (b) {
              s.$Z();
            }),
            (ke.ɵdir = s.lG2({
              type: ke,
              viewQuery: function (b, w) {
                if ((1 & b && s.Gf(re, 7), 2 & b)) {
                  let $;
                  s.iGM(($ = s.CRH())) && (w._text = $.first);
                }
              },
              inputs: { value: 'value', id: 'id', disabled: 'disabled' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            ke
          );
        })(),
        Te = (() => {
          class ke extends Dn {
            constructor(b, w, $, z) {
              super(b, w, $, z);
            }
          }
          return (
            (ke.ɵfac = function (b) {
              return new (b || ke)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(U, 8),
                s.Y36(pe, 8),
              );
            }),
            (ke.ɵcmp = s.Xpm({
              type: ke,
              selectors: [['mat-option']],
              hostAttrs: [
                'role',
                'option',
                1,
                'mat-mdc-option',
                'mdc-list-item',
              ],
              hostVars: 11,
              hostBindings: function (b, w) {
                1 & b &&
                  s.NdJ('click', function () {
                    return w._selectViaInteraction();
                  })('keydown', function (z) {
                    return w._handleKeydown(z);
                  }),
                  2 & b &&
                    (s.Ikx('id', w.id),
                    s.uIk('aria-selected', w.selected)(
                      'aria-disabled',
                      w.disabled.toString(),
                    ),
                    s.ekj('mdc-list-item--selected', w.selected)(
                      'mat-mdc-option-multiple',
                      w.multiple,
                    )('mat-mdc-option-active', w.active)(
                      'mdc-list-item--disabled',
                      w.disabled,
                    ));
              },
              exportAs: ['matOption'],
              features: [s.qOj],
              ngContentSelectors: Ne,
              decls: 8,
              vars: 5,
              consts: [
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'state',
                  'disabled',
                  4,
                  'ngIf',
                ],
                [1, 'mdc-list-item__primary-text'],
                ['text', ''],
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  3,
                  'disabled',
                  4,
                  'ngIf',
                ],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-option-ripple',
                  'mat-mdc-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                ],
                [1, 'mat-mdc-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [
                  'state',
                  'checked',
                  'appearance',
                  'minimal',
                  1,
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'disabled',
                ],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (b, w) {
                1 & b &&
                  (s.F$t(pt),
                  s.YNc(0, He, 1, 2, 'mat-pseudo-checkbox', 0),
                  s.Hsn(1),
                  s.TgZ(2, 'span', 1, 2),
                  s.Hsn(4, 1),
                  s.qZA(),
                  s.YNc(5, Ue, 1, 1, 'mat-pseudo-checkbox', 3),
                  s.YNc(6, rt, 2, 1, 'span', 4),
                  s._UZ(7, 'div', 5)),
                  2 & b &&
                    (s.Q6J('ngIf', w.multiple),
                    s.xp6(5),
                    s.Q6J(
                      'ngIf',
                      !w.multiple &&
                        w.selected &&
                        !w.hideSingleSelectionIndicator,
                    ),
                    s.xp6(1),
                    s.Q6J('ngIf', w.group && w.group._inert),
                    s.xp6(1),
                    s.Q6J('matRippleTrigger', w._getHostElement())(
                      'matRippleDisabled',
                      w.disabled || w.disableRipple,
                    ));
              },
              dependencies: [Me, te.O5, ve],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ke
          );
        })();
      function vt(ke, R, b) {
        if (b.length) {
          let w = R.toArray(),
            $ = b.toArray(),
            z = 0;
          for (let $e = 0; $e < ke + 1; $e++)
            w[$e].group && w[$e].group === $[z] && z++;
          return z;
        }
        return 0;
      }
      function Je(ke, R, b, w) {
        return ke < b ? ke : ke + R > b + w ? Math.max(0, ke - w + R) : b;
      }
      let Et = (() => {
        class ke {}
        return (
          (ke.ɵfac = function (b) {
            return new (b || ke)();
          }),
          (ke.ɵmod = s.oAB({ type: ke })),
          (ke.ɵinj = s.cJS({ imports: [ze, te.ez, ee, be] })),
          ke
        );
      })();
    },
    9549: (Tt, Pe, D) => {
      D.d(Pe, {
        Eo: () => Zn,
        G_: () => it,
        KE: () => U,
        R9: () => an,
        hX: () => ye,
        lN: () => Ie,
        o2: () => W,
      });
      var s = D(4650),
        x = D(445),
        N = D(3353),
        se = D(7579),
        te = D(6451),
        ue = D(2722),
        _e = D(6895),
        ce = D(1281),
        he = D(7340),
        ae = D(9643),
        fe = D(3238);
      const re = ['matFormFieldNotchedOutline', ''],
        He = ['*'],
        Ue = ['textField'],
        rt = ['iconPrefixContainer'],
        pt = ['textPrefixContainer'];
      function Ne(de, me) {
        1 & de && s._UZ(0, 'span', 19);
      }
      function ft(de, me) {
        if (1 & de) {
          const pe = s.EpF();
          s.TgZ(0, 'label', 17),
            s.NdJ('cdkObserveContent', function () {
              s.CHM(pe);
              const xt = s.oxw(2);
              return s.KtG(xt._refreshOutlineNotchWidth());
            }),
            s.Hsn(1, 1),
            s.YNc(2, Ne, 1, 0, 'span', 18),
            s.qZA();
        }
        if (2 & de) {
          const pe = s.oxw(2);
          s.Q6J('floating', pe._shouldLabelFloat())(
            'cdkObserveContentDisabled',
            !pe._hasOutline(),
          )('id', pe._labelId),
            s.uIk('for', pe._control.id)('aria-owns', pe._control.id),
            s.xp6(2),
            s.Q6J('ngIf', !pe.hideRequiredMarker && pe._control.required);
        }
      }
      function st(de, me) {
        if ((1 & de && s.YNc(0, ft, 3, 6, 'label', 16), 2 & de)) {
          const pe = s.oxw();
          s.Q6J('ngIf', pe._hasFloatingLabel());
        }
      }
      function mt(de, me) {
        1 & de && s._UZ(0, 'div', 20);
      }
      function K(de, me) {}
      function ie(de, me) {
        if ((1 & de && s.YNc(0, K, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw(2);
          const pe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', pe);
        }
      }
      function ee(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 21),
            s.YNc(1, ie, 1, 1, 'ng-template', 9),
            s.qZA()),
          2 & de)
        ) {
          const pe = s.oxw();
          s.Q6J('matFormFieldNotchedOutlineOpen', pe._shouldLabelFloat())(
            'matFormFieldNotchedOutlineLabelWidth',
            pe._labelWidth,
          ),
            s.xp6(1),
            s.Q6J('ngIf', !pe._forceDisplayInfixLabel());
        }
      }
      function X(de, me) {
        1 & de && (s.TgZ(0, 'div', 23, 24), s.Hsn(2, 2), s.qZA());
      }
      function Ae(de, me) {
        1 & de && (s.TgZ(0, 'div', 25, 26), s.Hsn(2, 3), s.qZA());
      }
      function nt(de, me) {}
      function dt(de, me) {
        if ((1 & de && s.YNc(0, nt, 0, 0, 'ng-template', 22), 2 & de)) {
          s.oxw();
          const pe = s.MAs(1);
          s.Q6J('ngTemplateOutlet', pe);
        }
      }
      function At(de, me) {
        1 & de && (s.TgZ(0, 'div', 27), s.Hsn(1, 4), s.qZA());
      }
      function _t(de, me) {
        1 & de && (s.TgZ(0, 'div', 28), s.Hsn(1, 5), s.qZA());
      }
      function Gt(de, me) {
        1 & de && s._UZ(0, 'div', 29);
      }
      function wt(de, me) {
        if ((1 & de && (s.TgZ(0, 'div', 30), s.Hsn(1, 6), s.qZA()), 2 & de)) {
          const pe = s.oxw();
          s.Q6J('@transitionMessages', pe._subscriptAnimationState);
        }
      }
      function Ge(de, me) {
        if ((1 & de && (s.TgZ(0, 'mat-hint', 34), s._uU(1), s.qZA()), 2 & de)) {
          const pe = s.oxw(2);
          s.Q6J('id', pe._hintLabelId), s.xp6(1), s.Oqu(pe.hintLabel);
        }
      }
      function Ye(de, me) {
        if (
          (1 & de &&
            (s.TgZ(0, 'div', 31),
            s.YNc(1, Ge, 2, 2, 'mat-hint', 32),
            s.Hsn(2, 7),
            s._UZ(3, 'div', 33),
            s.Hsn(4, 8),
            s.qZA()),
          2 & de)
        ) {
          const pe = s.oxw();
          s.Q6J('@transitionMessages', pe._subscriptAnimationState),
            s.xp6(1),
            s.Q6J('ngIf', pe.hintLabel);
        }
      }
      const xe = [
          '*',
          [['mat-label']],
          [
            ['', 'matPrefix', ''],
            ['', 'matIconPrefix', ''],
          ],
          [['', 'matTextPrefix', '']],
          [['', 'matTextSuffix', '']],
          [
            ['', 'matSuffix', ''],
            ['', 'matIconSuffix', ''],
          ],
          [['mat-error'], ['', 'matError', '']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        je = [
          '*',
          'mat-label',
          '[matPrefix], [matIconPrefix]',
          '[matTextPrefix]',
          '[matTextSuffix]',
          '[matSuffix], [matIconSuffix]',
          'mat-error, [matError]',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let ye = (() => {
        class de {}
        return (
          (de.ɵfac = function (pe) {
            return new (pe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de, selectors: [['mat-label']] })),
          de
        );
      })();
      const Le = new s.OlP('MatError');
      let ot = 0,
        Ke = (() => {
          class de {
            constructor() {
              (this.align = 'start'), (this.id = 'mat-mdc-hint-' + ot++);
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['mat-hint']],
              hostAttrs: [
                1,
                'mat-mdc-form-field-hint',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 4,
              hostBindings: function (pe, Xe) {
                2 & pe &&
                  (s.Ikx('id', Xe.id),
                  s.uIk('align', null),
                  s.ekj('mat-mdc-form-field-hint-end', 'end' === Xe.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            de
          );
        })();
      const Lt = new s.OlP('MatPrefix'),
        Pt = new s.OlP('MatSuffix');
      let an = (() => {
          class de {
            constructor() {
              this._isText = !1;
            }
            set _isTextSelector(pe) {
              this._isText = !0;
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)();
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [
                ['', 'matSuffix', ''],
                ['', 'matIconSuffix', ''],
                ['', 'matTextSuffix', ''],
              ],
              inputs: { _isTextSelector: ['matTextSuffix', '_isTextSelector'] },
              features: [s._Bn([{ provide: Pt, useExisting: de }])],
            })),
            de
          );
        })(),
        ut = (() => {
          class de {
            constructor(pe) {
              (this._elementRef = pe), (this.floating = !1);
            }
            getWidth() {
              return (function Zt(de) {
                if (null !== de.offsetParent) return de.scrollWidth;
                const pe = de.cloneNode(!0);
                pe.style.setProperty('position', 'absolute'),
                  pe.style.setProperty(
                    'transform',
                    'translate(-9999px, -9999px)',
                  ),
                  document.documentElement.appendChild(pe);
                const Xe = pe.scrollWidth;
                return pe.remove(), Xe;
              })(this._elementRef.nativeElement);
            }
            get element() {
              return this._elementRef.nativeElement;
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)(s.Y36(s.SBq));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['label', 'matFormFieldFloatingLabel', '']],
              hostAttrs: [1, 'mdc-floating-label', 'mat-mdc-floating-label'],
              hostVars: 2,
              hostBindings: function (pe, Xe) {
                2 & pe && s.ekj('mdc-floating-label--float-above', Xe.floating);
              },
              inputs: { floating: 'floating' },
            })),
            de
          );
        })();
      const Ct = 'mdc-line-ripple--active',
        yt = 'mdc-line-ripple--deactivating';
      let Qt = (() => {
          class de {
            constructor(pe, Xe) {
              (this._elementRef = pe),
                (this._handleTransitionEnd = xt => {
                  const Ot = this._elementRef.nativeElement.classList,
                    Dn = Ot.contains(yt);
                  'opacity' === xt.propertyName && Dn && Ot.remove(Ct, yt);
                }),
                Xe.runOutsideAngular(() => {
                  pe.nativeElement.addEventListener(
                    'transitionend',
                    this._handleTransitionEnd,
                  );
                });
            }
            activate() {
              const pe = this._elementRef.nativeElement.classList;
              pe.remove(yt), pe.add(Ct);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(yt);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                'transitionend',
                this._handleTransitionEnd,
              );
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵdir = s.lG2({
              type: de,
              selectors: [['div', 'matFormFieldLineRipple', '']],
              hostAttrs: [1, 'mdc-line-ripple'],
            })),
            de
          );
        })(),
        dn = (() => {
          class de {
            constructor(pe, Xe) {
              (this._elementRef = pe),
                (this._ngZone = Xe),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const pe = this._elementRef.nativeElement.querySelector(
                '.mdc-floating-label',
              );
              pe
                ? (this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--upgraded',
                  ),
                  'function' == typeof requestAnimationFrame &&
                    ((pe.style.transitionDuration = '0s'),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (pe.style.transitionDuration = ''),
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--no-label',
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : '0px'
                : null;
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)(s.Y36(s.SBq), s.Y36(s.R0b));
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['div', 'matFormFieldNotchedOutline', '']],
              hostAttrs: [1, 'mdc-notched-outline'],
              hostVars: 2,
              hostBindings: function (pe, Xe) {
                2 & pe && s.ekj('mdc-notched-outline--notched', Xe.open);
              },
              inputs: {
                labelWidth: [
                  'matFormFieldNotchedOutlineLabelWidth',
                  'labelWidth',
                ],
                open: ['matFormFieldNotchedOutlineOpen', 'open'],
              },
              attrs: re,
              ngContentSelectors: He,
              decls: 4,
              vars: 2,
              consts: [
                [1, 'mdc-notched-outline__leading'],
                [1, 'mdc-notched-outline__notch'],
                [1, 'mdc-notched-outline__trailing'],
              ],
              template: function (pe, Xe) {
                1 & pe &&
                  (s.F$t(),
                  s._UZ(0, 'div', 0),
                  s.TgZ(1, 'div', 1),
                  s.Hsn(2),
                  s.qZA(),
                  s._UZ(3, 'div', 2)),
                  2 & pe && (s.xp6(1), s.Udp('width', Xe._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            de
          );
        })();
      const wn = {
        transitionMessages: (0, he.X$)('transitionMessages', [
          (0, he.SB)(
            'enter',
            (0, he.oB)({ opacity: 1, transform: 'translateY(0%)' }),
          ),
          (0, he.eR)('void => enter', [
            (0, he.oB)({ opacity: 0, transform: 'translateY(-5px)' }),
            (0, he.jt)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Zn = (() => {
        class de {}
        return (
          (de.ɵfac = function (pe) {
            return new (pe || de)();
          }),
          (de.ɵdir = s.lG2({ type: de })),
          de
        );
      })();
      const it = new s.OlP('MatFormField'),
        W = new s.OlP('MAT_FORM_FIELD_DEFAULT_OPTIONS');
      let ne = 0,
        U = (() => {
          class de {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(pe) {
              this._hideRequiredMarker = (0, ce.Ig)(pe);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || 'auto';
            }
            set floatLabel(pe) {
              pe !== this._floatLabel &&
                ((this._floatLabel = pe),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(pe) {
              const Xe = this._appearance;
              (this._appearance = pe || this._defaults?.appearance || 'fill'),
                'outline' === this._appearance &&
                  this._appearance !== Xe &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                'fixed'
              );
            }
            set subscriptSizing(pe) {
              this._subscriptSizing =
                pe || this._defaults?.subscriptSizing || 'fixed';
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(pe) {
              (this._hintLabel = pe), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(pe) {
              this._explicitFormFieldControl = pe;
            }
            constructor(pe, Xe, xt, Ot, Dn, Te, vt, Je) {
              (this._elementRef = pe),
                (this._changeDetectorRef = Xe),
                (this._ngZone = xt),
                (this._dir = Ot),
                (this._platform = Dn),
                (this._defaults = Te),
                (this._animationMode = vt),
                (this._document = Je),
                (this._hideRequiredMarker = !1),
                (this.color = 'primary'),
                (this._appearance = 'fill'),
                (this._subscriptSizing = null),
                (this._hintLabel = ''),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = 'mat-mdc-form-field-label-' + ne++),
                (this._hintLabelId = 'mat-mdc-hint-' + ne++),
                (this._subscriptAnimationState = ''),
                (this._labelWidth = 0),
                (this._destroyed = new se.x()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                Te &&
                  (Te.appearance && (this.appearance = Te.appearance),
                  (this._hideRequiredMarker = Boolean(Te?.hideRequiredMarker)),
                  Te.color && (this.color = Te.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = 'enter'),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = 'always');
            }
            _initializeControl() {
              const pe = this._control;
              pe.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${pe.controlType}`,
                ),
                pe.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                pe.ngControl &&
                  pe.ngControl.valueChanges &&
                  pe.ngControl.valueChanges
                    .pipe((0, ue.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                pe => !pe._isText,
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  pe => pe._isText,
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  pe => !pe._isText,
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  pe => pe._isText,
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                (0, te.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes,
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  'mdc-text-field--focused',
                  this._control.focused,
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe((0, ue.R)(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe((0, ue.R)(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
                  );
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel;
            }
            _hasOutline() {
              return 'outline' === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(pe) {
              const Xe = this._control ? this._control.ngControl : null;
              return Xe && Xe[pe];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? 'error'
                : 'hint';
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let pe = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    pe.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const Xe = this._hintChildren
                      ? this._hintChildren.find(Ot => 'start' === Ot.align)
                      : null,
                    xt = this._hintChildren
                      ? this._hintChildren.find(Ot => 'end' === Ot.align)
                      : null;
                  Xe
                    ? pe.push(Xe.id)
                    : this._hintLabel && pe.push(this._hintLabelId),
                    xt && pe.push(xt.id);
                } else
                  this._errorChildren &&
                    pe.push(...this._errorChildren.map(Xe => Xe.id));
                this._control.setDescribedByIds(pe);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const pe = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (pe.style.transform = '');
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const Xe = this._iconPrefixContainer?.nativeElement,
                xt = this._textPrefixContainer?.nativeElement,
                Ot = Xe?.getBoundingClientRect().width ?? 0,
                Dn = xt?.getBoundingClientRect().width ?? 0;
              pe.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                'rtl' === this._dir.value ? '-1' : '1'
              } * (${
                Ot + Dn
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const pe = this._elementRef.nativeElement;
              if (pe.getRootNode) {
                const Xe = pe.getRootNode();
                return Xe && Xe !== pe;
              }
              return document.documentElement.contains(pe);
            }
          }
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(N.t4),
                s.Y36(W, 8),
                s.Y36(s.QbO, 8),
                s.Y36(_e.K0),
              );
            }),
            (de.ɵcmp = s.Xpm({
              type: de,
              selectors: [['mat-form-field']],
              contentQueries: function (pe, Xe, xt) {
                if (
                  (1 & pe &&
                    (s.Suo(xt, ye, 5),
                    s.Suo(xt, ye, 7),
                    s.Suo(xt, Zn, 5),
                    s.Suo(xt, Lt, 5),
                    s.Suo(xt, Pt, 5),
                    s.Suo(xt, Le, 5),
                    s.Suo(xt, Ke, 5)),
                  2 & pe)
                ) {
                  let Ot;
                  s.iGM((Ot = s.CRH())) && (Xe._labelChildNonStatic = Ot.first),
                    s.iGM((Ot = s.CRH())) && (Xe._labelChildStatic = Ot.first),
                    s.iGM((Ot = s.CRH())) && (Xe._formFieldControl = Ot.first),
                    s.iGM((Ot = s.CRH())) && (Xe._prefixChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (Xe._suffixChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (Xe._errorChildren = Ot),
                    s.iGM((Ot = s.CRH())) && (Xe._hintChildren = Ot);
                }
              },
              viewQuery: function (pe, Xe) {
                if (
                  (1 & pe &&
                    (s.Gf(Ue, 5),
                    s.Gf(rt, 5),
                    s.Gf(pt, 5),
                    s.Gf(ut, 5),
                    s.Gf(dn, 5),
                    s.Gf(Qt, 5)),
                  2 & pe)
                ) {
                  let xt;
                  s.iGM((xt = s.CRH())) && (Xe._textField = xt.first),
                    s.iGM((xt = s.CRH())) &&
                      (Xe._iconPrefixContainer = xt.first),
                    s.iGM((xt = s.CRH())) &&
                      (Xe._textPrefixContainer = xt.first),
                    s.iGM((xt = s.CRH())) && (Xe._floatingLabel = xt.first),
                    s.iGM((xt = s.CRH())) && (Xe._notchedOutline = xt.first),
                    s.iGM((xt = s.CRH())) && (Xe._lineRipple = xt.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-form-field'],
              hostVars: 42,
              hostBindings: function (pe, Xe) {
                2 & pe &&
                  s.ekj(
                    'mat-mdc-form-field-label-always-float',
                    Xe._shouldAlwaysFloat(),
                  )('mat-mdc-form-field-has-icon-prefix', Xe._hasIconPrefix)(
                    'mat-mdc-form-field-has-icon-suffix',
                    Xe._hasIconSuffix,
                  )('mat-form-field-invalid', Xe._control.errorState)(
                    'mat-form-field-disabled',
                    Xe._control.disabled,
                  )('mat-form-field-autofilled', Xe._control.autofilled)(
                    'mat-form-field-no-animations',
                    'NoopAnimations' === Xe._animationMode,
                  )('mat-form-field-appearance-fill', 'fill' == Xe.appearance)(
                    'mat-form-field-appearance-outline',
                    'outline' == Xe.appearance,
                  )(
                    'mat-form-field-hide-placeholder',
                    Xe._hasFloatingLabel() && !Xe._shouldLabelFloat(),
                  )('mat-focused', Xe._control.focused)(
                    'mat-primary',
                    'accent' !== Xe.color && 'warn' !== Xe.color,
                  )('mat-accent', 'accent' === Xe.color)(
                    'mat-warn',
                    'warn' === Xe.color,
                  )('ng-untouched', Xe._shouldForward('untouched'))(
                    'ng-touched',
                    Xe._shouldForward('touched'),
                  )('ng-pristine', Xe._shouldForward('pristine'))(
                    'ng-dirty',
                    Xe._shouldForward('dirty'),
                  )('ng-valid', Xe._shouldForward('valid'))(
                    'ng-invalid',
                    Xe._shouldForward('invalid'),
                  )('ng-pending', Xe._shouldForward('pending'));
              },
              inputs: {
                hideRequiredMarker: 'hideRequiredMarker',
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                subscriptSizing: 'subscriptSizing',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [s._Bn([{ provide: it, useExisting: de }])],
              ngContentSelectors: je,
              decls: 18,
              vars: 23,
              consts: [
                ['labelTemplate', ''],
                [1, 'mat-mdc-text-field-wrapper', 'mdc-text-field', 3, 'click'],
                ['textField', ''],
                ['class', 'mat-mdc-form-field-focus-overlay', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-flex'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-form-field-icon-prefix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-prefix', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-infix'],
                [3, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-suffix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-icon-suffix', 4, 'ngIf'],
                ['matFormFieldLineRipple', '', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-form-field-subscript-wrapper',
                  'mat-mdc-form-field-bottom-align',
                  3,
                  'ngSwitch',
                ],
                [
                  'class',
                  'mat-mdc-form-field-error-wrapper',
                  4,
                  'ngSwitchCase',
                ],
                ['class', 'mat-mdc-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                ],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-mdc-form-field-required-marker mdc-floating-label--required',
                  4,
                  'ngIf',
                ],
                [
                  'aria-hidden',
                  'true',
                  1,
                  'mat-mdc-form-field-required-marker',
                  'mdc-floating-label--required',
                ],
                [1, 'mat-mdc-form-field-focus-overlay'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                ],
                [3, 'ngTemplateOutlet'],
                [1, 'mat-mdc-form-field-icon-prefix'],
                ['iconPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-prefix'],
                ['textPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-suffix'],
                [1, 'mat-mdc-form-field-icon-suffix'],
                ['matFormFieldLineRipple', ''],
                [1, 'mat-mdc-form-field-error-wrapper'],
                [1, 'mat-mdc-form-field-hint-wrapper'],
                [3, 'id', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-hint-spacer'],
                [3, 'id'],
              ],
              template: function (pe, Xe) {
                1 & pe &&
                  (s.F$t(xe),
                  s.YNc(0, st, 1, 1, 'ng-template', null, 0, s.W1O),
                  s.TgZ(2, 'div', 1, 2),
                  s.NdJ('click', function (Ot) {
                    return (
                      Xe._control.onContainerClick &&
                      Xe._control.onContainerClick(Ot)
                    );
                  }),
                  s.YNc(4, mt, 1, 0, 'div', 3),
                  s.TgZ(5, 'div', 4),
                  s.YNc(6, ee, 2, 3, 'div', 5),
                  s.YNc(7, X, 3, 0, 'div', 6),
                  s.YNc(8, Ae, 3, 0, 'div', 7),
                  s.TgZ(9, 'div', 8),
                  s.YNc(10, dt, 1, 1, 'ng-template', 9),
                  s.Hsn(11),
                  s.qZA(),
                  s.YNc(12, At, 2, 0, 'div', 10),
                  s.YNc(13, _t, 2, 0, 'div', 11),
                  s.qZA(),
                  s.YNc(14, Gt, 1, 0, 'div', 12),
                  s.qZA(),
                  s.TgZ(15, 'div', 13),
                  s.YNc(16, wt, 2, 1, 'div', 14),
                  s.YNc(17, Ye, 5, 2, 'div', 15),
                  s.qZA()),
                  2 & pe &&
                    (s.xp6(2),
                    s.ekj('mdc-text-field--filled', !Xe._hasOutline())(
                      'mdc-text-field--outlined',
                      Xe._hasOutline(),
                    )('mdc-text-field--no-label', !Xe._hasFloatingLabel())(
                      'mdc-text-field--disabled',
                      Xe._control.disabled,
                    )('mdc-text-field--invalid', Xe._control.errorState),
                    s.xp6(2),
                    s.Q6J('ngIf', !Xe._hasOutline() && !Xe._control.disabled),
                    s.xp6(2),
                    s.Q6J('ngIf', Xe._hasOutline()),
                    s.xp6(1),
                    s.Q6J('ngIf', Xe._hasIconPrefix),
                    s.xp6(1),
                    s.Q6J('ngIf', Xe._hasTextPrefix),
                    s.xp6(2),
                    s.Q6J(
                      'ngIf',
                      !Xe._hasOutline() || Xe._forceDisplayInfixLabel(),
                    ),
                    s.xp6(2),
                    s.Q6J('ngIf', Xe._hasTextSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', Xe._hasIconSuffix),
                    s.xp6(1),
                    s.Q6J('ngIf', !Xe._hasOutline()),
                    s.xp6(1),
                    s.ekj(
                      'mat-mdc-form-field-subscript-dynamic-size',
                      'dynamic' === Xe.subscriptSizing,
                    ),
                    s.Q6J('ngSwitch', Xe._getDisplayedMessages()),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'error'),
                    s.xp6(1),
                    s.Q6J('ngSwitchCase', 'hint'));
              },
              dependencies: [_e.O5, _e.tP, _e.RF, _e.n9, ae.wD, Ke, ut, dn, Qt],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [wn.transitionMessages] },
              changeDetection: 0,
            })),
            de
          );
        })(),
        Ie = (() => {
          class de {}
          return (
            (de.ɵfac = function (pe) {
              return new (pe || de)();
            }),
            (de.ɵmod = s.oAB({ type: de })),
            (de.ɵinj = s.cJS({ imports: [fe.BQ, _e.ez, ae.Q8, fe.BQ] })),
            de
          );
        })();
    },
    4144: (Tt, Pe, D) => {
      D.d(Pe, { Jk: () => rt, Nt: () => st, c: () => mt });
      var s = D(1281),
        x = D(3353),
        N = D(4650),
        se = D(515),
        te = D(7579);
      const ue = (0, x.i$)({ passive: !0 });
      let _e = (() => {
          class K {
            constructor(ee, X) {
              (this._platform = ee),
                (this._ngZone = X),
                (this._monitoredElements = new Map());
            }
            monitor(ee) {
              if (!this._platform.isBrowser) return se.E;
              const X = (0, s.fI)(ee),
                Ae = this._monitoredElements.get(X);
              if (Ae) return Ae.subject;
              const nt = new te.x(),
                dt = 'cdk-text-field-autofilled',
                At = _t => {
                  'cdk-text-field-autofill-start' !== _t.animationName ||
                  X.classList.contains(dt)
                    ? 'cdk-text-field-autofill-end' === _t.animationName &&
                      X.classList.contains(dt) &&
                      (X.classList.remove(dt),
                      this._ngZone.run(() =>
                        nt.next({ target: _t.target, isAutofilled: !1 }),
                      ))
                    : (X.classList.add(dt),
                      this._ngZone.run(() =>
                        nt.next({ target: _t.target, isAutofilled: !0 }),
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  X.addEventListener('animationstart', At, ue),
                    X.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(X, {
                  subject: nt,
                  unlisten: () => {
                    X.removeEventListener('animationstart', At, ue);
                  },
                }),
                nt
              );
            }
            stopMonitoring(ee) {
              const X = (0, s.fI)(ee),
                Ae = this._monitoredElements.get(X);
              Ae &&
                (Ae.unlisten(),
                Ae.subject.complete(),
                X.classList.remove('cdk-text-field-autofill-monitored'),
                X.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(X));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((ee, X) =>
                this.stopMonitoring(X),
              );
            }
          }
          return (
            (K.ɵfac = function (ee) {
              return new (ee || K)(N.LFG(x.t4), N.LFG(N.R0b));
            }),
            (K.ɵprov = N.Yz7({
              token: K,
              factory: K.ɵfac,
              providedIn: 'root',
            })),
            K
          );
        })(),
        ae = (() => {
          class K {}
          return (
            (K.ɵfac = function (ee) {
              return new (ee || K)();
            }),
            (K.ɵmod = N.oAB({ type: K })),
            (K.ɵinj = N.cJS({})),
            K
          );
        })();
      var fe = D(4006),
        re = D(3238),
        He = D(9549);
      const rt = new N.OlP('MAT_INPUT_VALUE_ACCESSOR'),
        pt = [
          'button',
          'checkbox',
          'file',
          'hidden',
          'image',
          'radio',
          'range',
          'reset',
          'submit',
        ];
      let Ne = 0;
      const ft = (0, re.FD)(
        class {
          constructor(K, ie, ee, X) {
            (this._defaultErrorStateMatcher = K),
              (this._parentForm = ie),
              (this._parentFormGroup = ee),
              (this.ngControl = X),
              (this.stateChanges = new te.x());
          }
        },
      );
      let st = (() => {
          class K extends ft {
            get disabled() {
              return this._disabled;
            }
            set disabled(ee) {
              (this._disabled = (0, s.Ig)(ee)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(ee) {
              this._id = ee || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(fe.kI.required) ??
                !1
              );
            }
            set required(ee) {
              this._required = (0, s.Ig)(ee);
            }
            get type() {
              return this._type;
            }
            set type(ee) {
              (this._type = ee || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  (0, x.qK)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(ee) {
              ee !== this.value &&
                ((this._inputValueAccessor.value = ee),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(ee) {
              this._readonly = (0, s.Ig)(ee);
            }
            constructor(ee, X, Ae, nt, dt, At, _t, Gt, wt, Ge) {
              super(At, nt, dt, Ae),
                (this._elementRef = ee),
                (this._platform = X),
                (this._autofillMonitor = Gt),
                (this._formField = Ge),
                (this._uid = 'mat-input-' + Ne++),
                (this.focused = !1),
                (this.stateChanges = new te.x()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter(je => (0, x.qK)().has(je))),
                (this._iOSKeyupListener = je => {
                  const ye = je.target;
                  !ye.value &&
                    0 === ye.selectionStart &&
                    0 === ye.selectionEnd &&
                    (ye.setSelectionRange(1, 1), ye.setSelectionRange(0, 0));
                });
              const Ye = this._elementRef.nativeElement,
                xe = Ye.nodeName.toLowerCase();
              (this._inputValueAccessor = _t || Ye),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                X.IOS &&
                  wt.runOutsideAngular(() => {
                    ee.nativeElement.addEventListener(
                      'keyup',
                      this._iOSKeyupListener,
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === xe),
                (this._isTextarea = 'textarea' === xe),
                (this._isInFormField = !!Ge),
                this._isNativeSelect &&
                  (this.controlType = Ye.multiple
                    ? 'mat-native-select-multiple'
                    : 'mat-native-select');
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe(ee => {
                    (this.autofilled = ee.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement,
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    'keyup',
                    this._iOSKeyupListener,
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(ee) {
              this._elementRef.nativeElement.focus(ee);
            }
            _focusChanged(ee) {
              ee !== this.focused &&
                ((this.focused = ee), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const ee = this._elementRef.nativeElement.value;
              this._previousNativeValue !== ee &&
                ((this._previousNativeValue = ee), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const ee = this._getPlaceholder();
              if (ee !== this._previousPlaceholder) {
                const X = this._elementRef.nativeElement;
                (this._previousPlaceholder = ee),
                  ee
                    ? X.setAttribute('placeholder', ee)
                    : X.removeAttribute('placeholder');
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              pt.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let ee = this._elementRef.nativeElement.validity;
              return ee && ee.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const ee = this._elementRef.nativeElement,
                  X = ee.options[0];
                return (
                  this.focused ||
                  ee.multiple ||
                  !this.empty ||
                  !!(ee.selectedIndex > -1 && X && X.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(ee) {
              ee.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    ee.join(' '),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby',
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const ee = this._elementRef.nativeElement;
              return this._isNativeSelect && (ee.multiple || ee.size > 1);
            }
          }
          return (
            (K.ɵfac = function (ee) {
              return new (ee || K)(
                N.Y36(N.SBq),
                N.Y36(x.t4),
                N.Y36(fe.a5, 10),
                N.Y36(fe.F, 8),
                N.Y36(fe.sg, 8),
                N.Y36(re.rD),
                N.Y36(rt, 10),
                N.Y36(_e),
                N.Y36(N.R0b),
                N.Y36(He.G_, 8),
              );
            }),
            (K.ɵdir = N.lG2({
              type: K,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-mdc-input-element'],
              hostVars: 18,
              hostBindings: function (ee, X) {
                1 & ee &&
                  N.NdJ('focus', function () {
                    return X._focusChanged(!0);
                  })('blur', function () {
                    return X._focusChanged(!1);
                  })('input', function () {
                    return X._onInput();
                  }),
                  2 & ee &&
                    (N.Ikx('id', X.id)('disabled', X.disabled)(
                      'required',
                      X.required,
                    ),
                    N.uIk('name', X.name || null)(
                      'readonly',
                      (X.readonly && !X._isNativeSelect) || null,
                    )(
                      'aria-invalid',
                      X.empty && X.required ? null : X.errorState,
                    )('aria-required', X.required)('id', X.id),
                    N.ekj('mat-input-server', X._isServer)(
                      'mat-mdc-form-field-textarea-control',
                      X._isInFormField && X._isTextarea,
                    )('mat-mdc-form-field-input-control', X._isInFormField)(
                      'mdc-text-field__input',
                      X._isInFormField,
                    )('mat-mdc-native-select-inline', X._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [
                N._Bn([{ provide: He.Eo, useExisting: K }]),
                N.qOj,
                N.TTD,
              ],
            })),
            K
          );
        })(),
        mt = (() => {
          class K {}
          return (
            (K.ɵfac = function (ee) {
              return new (ee || K)();
            }),
            (K.ɵmod = N.oAB({ type: K })),
            (K.ɵinj = N.cJS({ imports: [re.BQ, He.lN, He.lN, ae, re.BQ] })),
            K
          );
        })();
    },
    7009: (Tt, Pe, D) => {
      D.d(Pe, { ZX: () => _t, ux: () => Ye });
      var s = D(4650),
        x = D(7579),
        N = D(6895),
        se = D(4859),
        te = D(7340),
        ue = D(4080),
        _e = D(3353),
        ce = D(5698),
        he = D(2722),
        ae = D(2687),
        fe = D(2289),
        re = D(8184),
        He = D(3238);
      function Ue(xe, je) {
        if (1 & xe) {
          const ye = s.EpF();
          s.TgZ(0, 'div', 2)(1, 'button', 3),
            s.NdJ('click', function () {
              s.CHM(ye);
              const Le = s.oxw();
              return s.KtG(Le.action());
            }),
            s._uU(2),
            s.qZA()();
        }
        if (2 & xe) {
          const ye = s.oxw();
          s.xp6(2), s.hij(' ', ye.data.action, ' ');
        }
      }
      const rt = ['label'];
      function pt(xe, je) {}
      const Ne = Math.pow(2, 31) - 1;
      class ft {
        constructor(je, ye) {
          (this._overlayRef = ye),
            (this._afterDismissed = new x.x()),
            (this._afterOpened = new x.x()),
            (this._onAction = new x.x()),
            (this._dismissedByAction = !1),
            (this.containerInstance = je),
            je._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(je) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(je, Ne),
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const st = new s.OlP('MatSnackBarData');
      class mt {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      let K = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)();
            }),
            (xe.ɵdir = s.lG2({
              type: xe,
              selectors: [['', 'matSnackBarLabel', '']],
              hostAttrs: [1, 'mat-mdc-snack-bar-label', 'mdc-snackbar__label'],
            })),
            xe
          );
        })(),
        ie = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)();
            }),
            (xe.ɵdir = s.lG2({
              type: xe,
              selectors: [['', 'matSnackBarActions', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-actions',
                'mdc-snackbar__actions',
              ],
            })),
            xe
          );
        })(),
        ee = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)();
            }),
            (xe.ɵdir = s.lG2({
              type: xe,
              selectors: [['', 'matSnackBarAction', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-action',
                'mdc-snackbar__action',
              ],
            })),
            xe
          );
        })(),
        X = (() => {
          class xe {
            constructor(ye, Re) {
              (this.snackBarRef = ye), (this.data = Re);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)(s.Y36(ft), s.Y36(st));
            }),
            (xe.ɵcmp = s.Xpm({
              type: xe,
              selectors: [['simple-snack-bar']],
              hostAttrs: [1, 'mat-mdc-simple-snack-bar'],
              exportAs: ['matSnackBar'],
              decls: 3,
              vars: 2,
              consts: [
                ['matSnackBarLabel', ''],
                ['matSnackBarActions', '', 4, 'ngIf'],
                ['matSnackBarActions', ''],
                ['mat-button', '', 'matSnackBarAction', '', 3, 'click'],
              ],
              template: function (ye, Re) {
                1 & ye &&
                  (s.TgZ(0, 'div', 0),
                  s._uU(1),
                  s.qZA(),
                  s.YNc(2, Ue, 3, 1, 'div', 1)),
                  2 & ye &&
                    (s.xp6(1),
                    s.hij(' ', Re.data.message, '\n'),
                    s.xp6(1),
                    s.Q6J('ngIf', Re.hasAction));
              },
              dependencies: [N.O5, se.lW, K, ie, ee],
              styles: ['.mat-mdc-simple-snack-bar{display:flex}'],
              encapsulation: 2,
              changeDetection: 0,
            })),
            xe
          );
        })();
      const Ae = {
        snackBarState: (0, te.X$)('state', [
          (0, te.SB)(
            'void, hidden',
            (0, te.oB)({ transform: 'scale(0.8)', opacity: 0 }),
          ),
          (0, te.SB)(
            'visible',
            (0, te.oB)({ transform: 'scale(1)', opacity: 1 }),
          ),
          (0, te.eR)(
            '* => visible',
            (0, te.jt)('150ms cubic-bezier(0, 0, 0.2, 1)'),
          ),
          (0, te.eR)(
            '* => void, * => hidden',
            (0, te.jt)(
              '75ms cubic-bezier(0.4, 0.0, 1, 1)',
              (0, te.oB)({ opacity: 0 }),
            ),
          ),
        ]),
      };
      let nt = 0,
        dt = (() => {
          class xe extends ue.en {
            constructor(ye, Re, Le, a, ot) {
              super(),
                (this._ngZone = ye),
                (this._elementRef = Re),
                (this._changeDetectorRef = Le),
                (this._platform = a),
                (this.snackBarConfig = ot),
                (this._document = (0, s.f3M)(N.K0)),
                (this._trackedModals = new Set()),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new x.x()),
                (this._onExit = new x.x()),
                (this._onEnter = new x.x()),
                (this._animationState = 'void'),
                (this._liveElementId = 'mat-snack-bar-container-live-' + nt++),
                (this.attachDomPortal = Ke => {
                  this._assertNotAttached();
                  const Lt = this._portalOutlet.attachDomPortal(Ke);
                  return this._afterPortalAttached(), Lt;
                }),
                (this._live =
                  'assertive' !== ot.politeness || ot.announcementMessage
                    ? 'off' === ot.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(ye) {
              this._assertNotAttached();
              const Re = this._portalOutlet.attachComponentPortal(ye);
              return this._afterPortalAttached(), Re;
            }
            attachTemplatePortal(ye) {
              this._assertNotAttached();
              const Re = this._portalOutlet.attachTemplatePortal(ye);
              return this._afterPortalAttached(), Re;
            }
            onAnimationEnd(ye) {
              const { fromState: Re, toState: Le } = ye;
              if (
                ((('void' === Le && 'void' !== Re) || 'hidden' === Le) &&
                  this._completeExit(),
                'visible' === Le)
              ) {
                const a = this._onEnter;
                this._ngZone.run(() => {
                  a.next(), a.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = 'hidden'),
                    this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0),
                this._clearFromModals(),
                this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe((0, ce.q)(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const ye = this._elementRef.nativeElement,
                Re = this.snackBarConfig.panelClass;
              Re &&
                (Array.isArray(Re)
                  ? Re.forEach(Le => ye.classList.add(Le))
                  : ye.classList.add(Re)),
                this._exposeToModals();
            }
            _exposeToModals() {
              const ye = this._liveElementId,
                Re = this._document.querySelectorAll(
                  'body > .cdk-overlay-container [aria-modal="true"]',
                );
              for (let Le = 0; Le < Re.length; Le++) {
                const a = Re[Le],
                  ot = a.getAttribute('aria-owns');
                this._trackedModals.add(a),
                  ot
                    ? -1 === ot.indexOf(ye) &&
                      a.setAttribute('aria-owns', ot + ' ' + ye)
                    : a.setAttribute('aria-owns', ye);
              }
            }
            _clearFromModals() {
              this._trackedModals.forEach(ye => {
                const Re = ye.getAttribute('aria-owns');
                if (Re) {
                  const Le = Re.replace(this._liveElementId, '').trim();
                  Le.length > 0
                    ? ye.setAttribute('aria-owns', Le)
                    : ye.removeAttribute('aria-owns');
                }
              }),
                this._trackedModals.clear();
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const ye =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-hidden]',
                        ),
                      Re =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-live]',
                        );
                    if (ye && Re) {
                      let Le = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        ye.contains(document.activeElement) &&
                        (Le = document.activeElement),
                        ye.removeAttribute('aria-hidden'),
                        Re.appendChild(ye),
                        Le?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)(
                s.Y36(s.R0b),
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(_e.t4),
                s.Y36(mt),
              );
            }),
            (xe.ɵdir = s.lG2({
              type: xe,
              viewQuery: function (ye, Re) {
                if ((1 & ye && s.Gf(ue.Pl, 7), 2 & ye)) {
                  let Le;
                  s.iGM((Le = s.CRH())) && (Re._portalOutlet = Le.first);
                }
              },
              features: [s.qOj],
            })),
            xe
          );
        })(),
        At = (() => {
          class xe extends dt {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const ye = this._label.nativeElement,
                Re = 'mdc-snackbar__label';
              ye.classList.toggle(Re, !ye.querySelector(`.${Re}`));
            }
          }
          return (
            (xe.ɵfac = (function () {
              let je;
              return function (Re) {
                return (je || (je = s.n5z(xe)))(Re || xe);
              };
            })()),
            (xe.ɵcmp = s.Xpm({
              type: xe,
              selectors: [['mat-snack-bar-container']],
              viewQuery: function (ye, Re) {
                if ((1 & ye && s.Gf(rt, 7), 2 & ye)) {
                  let Le;
                  s.iGM((Le = s.CRH())) && (Re._label = Le.first);
                }
              },
              hostAttrs: [
                1,
                'mdc-snackbar',
                'mat-mdc-snack-bar-container',
                'mdc-snackbar--open',
              ],
              hostVars: 1,
              hostBindings: function (ye, Re) {
                1 & ye &&
                  s.WFA('@state.done', function (a) {
                    return Re.onAnimationEnd(a);
                  }),
                  2 & ye && s.d8E('@state', Re._animationState);
              },
              features: [s.qOj],
              decls: 6,
              vars: 3,
              consts: [
                [1, 'mdc-snackbar__surface'],
                [1, 'mat-mdc-snack-bar-label'],
                ['label', ''],
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (ye, Re) {
                1 & ye &&
                  (s.TgZ(0, 'div', 0)(1, 'div', 1, 2)(3, 'div', 3),
                  s.YNc(4, pt, 0, 0, 'ng-template', 4),
                  s.qZA(),
                  s._UZ(5, 'div'),
                  s.qZA()()),
                  2 & ye &&
                    (s.xp6(5),
                    s.uIk('aria-live', Re._live)('role', Re._role)(
                      'id',
                      Re._liveElementId,
                    ));
              },
              dependencies: [ue.Pl],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [Ae.snackBarState] },
            })),
            xe
          );
        })(),
        _t = (() => {
          class xe {}
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)();
            }),
            (xe.ɵmod = s.oAB({ type: xe })),
            (xe.ɵinj = s.cJS({
              imports: [re.U8, ue.eL, N.ez, se.ot, He.BQ, He.BQ],
            })),
            xe
          );
        })();
      const wt = new s.OlP('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function Gt() {
          return new mt();
        },
      });
      let Ge = (() => {
          class xe {
            get _openedSnackBarRef() {
              const ye = this._parentSnackBar;
              return ye ? ye._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(ye) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = ye)
                : (this._snackBarRefAtThisLevel = ye);
            }
            constructor(ye, Re, Le, a, ot, Ke) {
              (this._overlay = ye),
                (this._live = Re),
                (this._injector = Le),
                (this._breakpointObserver = a),
                (this._parentSnackBar = ot),
                (this._defaultConfig = Ke),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(ye, Re) {
              return this._attach(ye, Re);
            }
            openFromTemplate(ye, Re) {
              return this._attach(ye, Re);
            }
            open(ye, Re = '', Le) {
              const a = { ...this._defaultConfig, ...Le };
              return (
                (a.data = { message: ye, action: Re }),
                a.announcementMessage === ye &&
                  (a.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, a)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(ye, Re) {
              const a = s.zs3.create({
                  parent:
                    (Re &&
                      Re.viewContainerRef &&
                      Re.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: mt, useValue: Re }],
                }),
                ot = new ue.C5(
                  this.snackBarContainerComponent,
                  Re.viewContainerRef,
                  a,
                ),
                Ke = ye.attach(ot);
              return (Ke.instance.snackBarConfig = Re), Ke.instance;
            }
            _attach(ye, Re) {
              const Le = { ...new mt(), ...this._defaultConfig, ...Re },
                a = this._createOverlay(Le),
                ot = this._attachSnackBarContainer(a, Le),
                Ke = new ft(ot, a);
              if (ye instanceof s.Rgc) {
                const Lt = new ue.UE(ye, null, {
                  $implicit: Le.data,
                  snackBarRef: Ke,
                });
                Ke.instance = ot.attachTemplatePortal(Lt);
              } else {
                const Lt = this._createInjector(Le, Ke),
                  Be = new ue.C5(ye, void 0, Lt),
                  Pt = ot.attachComponentPortal(Be);
                Ke.instance = Pt.instance;
              }
              return (
                this._breakpointObserver
                  .observe(fe.u3.HandsetPortrait)
                  .pipe((0, he.R)(a.detachments()))
                  .subscribe(Lt => {
                    a.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      Lt.matches,
                    );
                  }),
                Le.announcementMessage &&
                  ot._onAnnounce.subscribe(() => {
                    this._live.announce(Le.announcementMessage, Le.politeness);
                  }),
                this._animateSnackBar(Ke, Le),
                (this._openedSnackBarRef = Ke),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(ye, Re) {
              ye.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == ye &&
                  (this._openedSnackBarRef = null),
                  Re.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      ye.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : ye.containerInstance.enter(),
                Re.duration &&
                  Re.duration > 0 &&
                  ye
                    .afterOpened()
                    .subscribe(() => ye._dismissAfter(Re.duration));
            }
            _createOverlay(ye) {
              const Re = new re.X_();
              Re.direction = ye.direction;
              let Le = this._overlay.position().global();
              const a = 'rtl' === ye.direction,
                ot =
                  'left' === ye.horizontalPosition ||
                  ('start' === ye.horizontalPosition && !a) ||
                  ('end' === ye.horizontalPosition && a),
                Ke = !ot && 'center' !== ye.horizontalPosition;
              return (
                ot
                  ? Le.left('0')
                  : Ke
                  ? Le.right('0')
                  : Le.centerHorizontally(),
                'top' === ye.verticalPosition ? Le.top('0') : Le.bottom('0'),
                (Re.positionStrategy = Le),
                this._overlay.create(Re)
              );
            }
            _createInjector(ye, Re) {
              return s.zs3.create({
                parent:
                  (ye && ye.viewContainerRef && ye.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: ft, useValue: Re },
                  { provide: st, useValue: ye.data },
                ],
              });
            }
          }
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)(
                s.LFG(re.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(fe.Yg),
                s.LFG(xe, 12),
                s.LFG(wt),
              );
            }),
            (xe.ɵprov = s.Yz7({ token: xe, factory: xe.ɵfac })),
            xe
          );
        })(),
        Ye = (() => {
          class xe extends Ge {
            constructor(ye, Re, Le, a, ot, Ke) {
              super(ye, Re, Le, a, ot, Ke),
                (this.simpleSnackBarComponent = X),
                (this.snackBarContainerComponent = At),
                (this.handsetCssClass = 'mat-mdc-snack-bar-handset');
            }
          }
          return (
            (xe.ɵfac = function (ye) {
              return new (ye || xe)(
                s.LFG(re.aV),
                s.LFG(ae.Kd),
                s.LFG(s.zs3),
                s.LFG(fe.Yg),
                s.LFG(xe, 12),
                s.LFG(wt),
              );
            }),
            (xe.ɵprov = s.Yz7({ token: xe, factory: xe.ɵfac, providedIn: _t })),
            xe
          );
        })();
    },
    1481: (Tt, Pe, D) => {
      D.d(Pe, {
        Dx: () => ve,
        H7: () => Xt,
        b2: () => it,
        q6: () => Zn,
        se: () => wt,
      });
      var s = D(6895),
        x = D(4650);
      class N extends s.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class se extends N {
        static makeCurrent() {
          (0, s.HT)(new se());
        }
        onAndCancel(Ce, Q, we) {
          return (
            Ce.addEventListener(Q, we, !1),
            () => {
              Ce.removeEventListener(Q, we, !1);
            }
          );
        }
        dispatchEvent(Ce, Q) {
          Ce.dispatchEvent(Q);
        }
        remove(Ce) {
          Ce.parentNode && Ce.parentNode.removeChild(Ce);
        }
        createElement(Ce, Q) {
          return (Q = Q || this.getDefaultDocument()).createElement(Ce);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(Ce) {
          return Ce.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(Ce) {
          return Ce instanceof DocumentFragment;
        }
        getGlobalEventTarget(Ce, Q) {
          return 'window' === Q
            ? window
            : 'document' === Q
            ? Ce
            : 'body' === Q
            ? Ce.body
            : null;
        }
        getBaseHref(Ce) {
          const Q = (function ue() {
            return (
              (te = te || document.querySelector('base')),
              te ? te.getAttribute('href') : null
            );
          })();
          return null == Q
            ? null
            : (function ce(Oe) {
                (_e = _e || document.createElement('a')),
                  _e.setAttribute('href', Oe);
                const Ce = _e.pathname;
                return '/' === Ce.charAt(0) ? Ce : `/${Ce}`;
              })(Q);
        }
        resetBaseElement() {
          te = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(Ce) {
          return (0, s.Mx)(document.cookie, Ce);
        }
      }
      let _e,
        te = null;
      const he = new x.OlP('TRANSITION_ID'),
        fe = [
          {
            provide: x.ip1,
            useFactory: function ae(Oe, Ce, Q) {
              return () => {
                Q.get(x.CZH).donePromise.then(() => {
                  const we = (0, s.q)(),
                    ct = Ce.querySelectorAll(`style[ng-transition="${Oe}"]`);
                  for (let Ft = 0; Ft < ct.length; Ft++) we.remove(ct[Ft]);
                });
              };
            },
            deps: [he, s.K0, x.zs3],
            multi: !0,
          },
        ];
      let He = (() => {
        class Oe {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (Oe.ɵfac = function (Q) {
            return new (Q || Oe)();
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const Ue = new x.OlP('EventManagerPlugins');
      let rt = (() => {
        class Oe {
          constructor(Q, we) {
            (this._zone = we),
              (this._eventNameToPlugin = new Map()),
              Q.forEach(ct => {
                ct.manager = this;
              }),
              (this._plugins = Q.slice().reverse());
          }
          addEventListener(Q, we, ct) {
            return this._findPluginFor(we).addEventListener(Q, we, ct);
          }
          addGlobalEventListener(Q, we, ct) {
            return this._findPluginFor(we).addGlobalEventListener(Q, we, ct);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(Q) {
            const we = this._eventNameToPlugin.get(Q);
            if (we) return we;
            const ct = this._plugins;
            for (let Ft = 0; Ft < ct.length; Ft++) {
              const Kt = ct[Ft];
              if (Kt.supports(Q)) return this._eventNameToPlugin.set(Q, Kt), Kt;
            }
            throw new Error(`No event manager plugin found for event ${Q}`);
          }
        }
        return (
          (Oe.ɵfac = function (Q) {
            return new (Q || Oe)(x.LFG(Ue), x.LFG(x.R0b));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      class pt {
        constructor(Ce) {
          this._doc = Ce;
        }
        addGlobalEventListener(Ce, Q, we) {
          const ct = (0, s.q)().getGlobalEventTarget(this._doc, Ce);
          if (!ct)
            throw new Error(`Unsupported event target ${ct} for event ${Q}`);
          return this.addEventListener(ct, Q, we);
        }
      }
      let Ne = (() => {
          class Oe {
            constructor() {
              this.usageCount = new Map();
            }
            addStyles(Q) {
              for (const we of Q)
                1 === this.changeUsageCount(we, 1) && this.onStyleAdded(we);
            }
            removeStyles(Q) {
              for (const we of Q)
                0 === this.changeUsageCount(we, -1) && this.onStyleRemoved(we);
            }
            onStyleRemoved(Q) {}
            onStyleAdded(Q) {}
            getAllStyles() {
              return this.usageCount.keys();
            }
            changeUsageCount(Q, we) {
              const ct = this.usageCount;
              let Ft = ct.get(Q) ?? 0;
              return (Ft += we), Ft > 0 ? ct.set(Q, Ft) : ct.delete(Q), Ft;
            }
            ngOnDestroy() {
              for (const Q of this.getAllStyles()) this.onStyleRemoved(Q);
              this.usageCount.clear();
            }
          }
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)();
            }),
            (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
            Oe
          );
        })(),
        ft = (() => {
          class Oe extends Ne {
            constructor(Q) {
              super(),
                (this.doc = Q),
                (this.styleRef = new Map()),
                (this.hostNodes = new Set()),
                this.resetHostNodes();
            }
            onStyleAdded(Q) {
              for (const we of this.hostNodes) this.addStyleToHost(we, Q);
            }
            onStyleRemoved(Q) {
              const we = this.styleRef;
              we.get(Q)?.forEach(Ft => Ft.remove()), we.delete(Q);
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes();
            }
            addHost(Q) {
              this.hostNodes.add(Q);
              for (const we of this.getAllStyles()) this.addStyleToHost(Q, we);
            }
            removeHost(Q) {
              this.hostNodes.delete(Q);
            }
            addStyleToHost(Q, we) {
              const ct = this.doc.createElement('style');
              (ct.textContent = we), Q.appendChild(ct);
              const Ft = this.styleRef.get(we);
              Ft ? Ft.push(ct) : this.styleRef.set(we, [ct]);
            }
            resetHostNodes() {
              const Q = this.hostNodes;
              Q.clear(), Q.add(this.doc.head);
            }
          }
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
            Oe
          );
        })();
      const st = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          math: 'http://www.w3.org/1998/MathML/',
        },
        mt = /%COMP%/g,
        nt = new x.OlP('RemoveStylesOnCompDestory', {
          providedIn: 'root',
          factory: () => !1,
        });
      function _t(Oe, Ce) {
        return Ce.flat(100).map(Q => Q.replace(mt, Oe));
      }
      function Gt(Oe) {
        return Ce => {
          if ('__ngUnwrap__' === Ce) return Oe;
          !1 === Oe(Ce) && (Ce.preventDefault(), (Ce.returnValue = !1));
        };
      }
      let wt = (() => {
        class Oe {
          constructor(Q, we, ct, Ft) {
            (this.eventManager = Q),
              (this.sharedStylesHost = we),
              (this.appId = ct),
              (this.removeStylesOnCompDestory = Ft),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Ge(Q));
          }
          createRenderer(Q, we) {
            if (!Q || !we) return this.defaultRenderer;
            const ct = this.getOrCreateRenderer(Q, we);
            return (
              ct instanceof Le
                ? ct.applyToHost(Q)
                : ct instanceof Re && ct.applyStyles(),
              ct
            );
          }
          getOrCreateRenderer(Q, we) {
            const ct = this.rendererByCompId;
            let Ft = ct.get(we.id);
            if (!Ft) {
              const Kt = this.eventManager,
                Cn = this.sharedStylesHost,
                Gn = this.removeStylesOnCompDestory;
              switch (we.encapsulation) {
                case x.ifc.Emulated:
                  Ft = new Le(Kt, Cn, we, this.appId, Gn);
                  break;
                case x.ifc.ShadowDom:
                  return new ye(Kt, Cn, Q, we);
                default:
                  Ft = new Re(Kt, Cn, we, Gn);
              }
              (Ft.onDestroy = () => ct.delete(we.id)), ct.set(we.id, Ft);
            }
            return Ft;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          begin() {}
          end() {}
        }
        return (
          (Oe.ɵfac = function (Q) {
            return new (Q || Oe)(x.LFG(rt), x.LFG(ft), x.LFG(x.AFp), x.LFG(nt));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      class Ge {
        constructor(Ce) {
          (this.eventManager = Ce),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(Ce, Q) {
          return Q
            ? document.createElementNS(st[Q] || Q, Ce)
            : document.createElement(Ce);
        }
        createComment(Ce) {
          return document.createComment(Ce);
        }
        createText(Ce) {
          return document.createTextNode(Ce);
        }
        appendChild(Ce, Q) {
          (je(Ce) ? Ce.content : Ce).appendChild(Q);
        }
        insertBefore(Ce, Q, we) {
          Ce && (je(Ce) ? Ce.content : Ce).insertBefore(Q, we);
        }
        removeChild(Ce, Q) {
          Ce && Ce.removeChild(Q);
        }
        selectRootElement(Ce, Q) {
          let we = 'string' == typeof Ce ? document.querySelector(Ce) : Ce;
          if (!we)
            throw new Error(`The selector "${Ce}" did not match any elements`);
          return Q || (we.textContent = ''), we;
        }
        parentNode(Ce) {
          return Ce.parentNode;
        }
        nextSibling(Ce) {
          return Ce.nextSibling;
        }
        setAttribute(Ce, Q, we, ct) {
          if (ct) {
            Q = ct + ':' + Q;
            const Ft = st[ct];
            Ft ? Ce.setAttributeNS(Ft, Q, we) : Ce.setAttribute(Q, we);
          } else Ce.setAttribute(Q, we);
        }
        removeAttribute(Ce, Q, we) {
          if (we) {
            const ct = st[we];
            ct ? Ce.removeAttributeNS(ct, Q) : Ce.removeAttribute(`${we}:${Q}`);
          } else Ce.removeAttribute(Q);
        }
        addClass(Ce, Q) {
          Ce.classList.add(Q);
        }
        removeClass(Ce, Q) {
          Ce.classList.remove(Q);
        }
        setStyle(Ce, Q, we, ct) {
          ct & (x.JOm.DashCase | x.JOm.Important)
            ? Ce.style.setProperty(
                Q,
                we,
                ct & x.JOm.Important ? 'important' : '',
              )
            : (Ce.style[Q] = we);
        }
        removeStyle(Ce, Q, we) {
          we & x.JOm.DashCase ? Ce.style.removeProperty(Q) : (Ce.style[Q] = '');
        }
        setProperty(Ce, Q, we) {
          Ce[Q] = we;
        }
        setValue(Ce, Q) {
          Ce.nodeValue = Q;
        }
        listen(Ce, Q, we) {
          return 'string' == typeof Ce
            ? this.eventManager.addGlobalEventListener(Ce, Q, Gt(we))
            : this.eventManager.addEventListener(Ce, Q, Gt(we));
        }
      }
      function je(Oe) {
        return 'TEMPLATE' === Oe.tagName && void 0 !== Oe.content;
      }
      class ye extends Ge {
        constructor(Ce, Q, we, ct) {
          super(Ce),
            (this.sharedStylesHost = Q),
            (this.hostEl = we),
            (this.shadowRoot = we.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const Ft = _t(ct.id, ct.styles);
          for (const Kt of Ft) {
            const Cn = document.createElement('style');
            (Cn.textContent = Kt), this.shadowRoot.appendChild(Cn);
          }
        }
        nodeOrShadowRoot(Ce) {
          return Ce === this.hostEl ? this.shadowRoot : Ce;
        }
        appendChild(Ce, Q) {
          return super.appendChild(this.nodeOrShadowRoot(Ce), Q);
        }
        insertBefore(Ce, Q, we) {
          return super.insertBefore(this.nodeOrShadowRoot(Ce), Q, we);
        }
        removeChild(Ce, Q) {
          return super.removeChild(this.nodeOrShadowRoot(Ce), Q);
        }
        parentNode(Ce) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(Ce)),
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Re extends Ge {
        constructor(Ce, Q, we, ct, Ft = we.id) {
          super(Ce),
            (this.sharedStylesHost = Q),
            (this.removeStylesOnCompDestory = ct),
            (this.rendererUsageCount = 0),
            (this.styles = _t(Ft, we.styles));
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles),
            this.rendererUsageCount++;
        }
        destroy() {
          this.removeStylesOnCompDestory &&
            (this.sharedStylesHost.removeStyles(this.styles),
            this.rendererUsageCount--,
            0 === this.rendererUsageCount && this.onDestroy?.());
        }
      }
      class Le extends Re {
        constructor(Ce, Q, we, ct, Ft) {
          const Kt = ct + '-' + we.id;
          super(Ce, Q, we, Ft, Kt),
            (this.contentAttr = (function dt(Oe) {
              return '_ngcontent-%COMP%'.replace(mt, Oe);
            })(Kt)),
            (this.hostAttr = (function At(Oe) {
              return '_nghost-%COMP%'.replace(mt, Oe);
            })(Kt));
        }
        applyToHost(Ce) {
          this.applyStyles(), this.setAttribute(Ce, this.hostAttr, '');
        }
        createElement(Ce, Q) {
          const we = super.createElement(Ce, Q);
          return super.setAttribute(we, this.contentAttr, ''), we;
        }
      }
      let a = (() => {
        class Oe extends pt {
          constructor(Q) {
            super(Q);
          }
          supports(Q) {
            return !0;
          }
          addEventListener(Q, we, ct) {
            return (
              Q.addEventListener(we, ct, !1),
              () => this.removeEventListener(Q, we, ct)
            );
          }
          removeEventListener(Q, we, ct) {
            return Q.removeEventListener(we, ct);
          }
        }
        return (
          (Oe.ɵfac = function (Q) {
            return new (Q || Oe)(x.LFG(s.K0));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const ot = ['alt', 'control', 'meta', 'shift'],
        Ke = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        Lt = {
          alt: Oe => Oe.altKey,
          control: Oe => Oe.ctrlKey,
          meta: Oe => Oe.metaKey,
          shift: Oe => Oe.shiftKey,
        };
      let Be = (() => {
        class Oe extends pt {
          constructor(Q) {
            super(Q);
          }
          supports(Q) {
            return null != Oe.parseEventName(Q);
          }
          addEventListener(Q, we, ct) {
            const Ft = Oe.parseEventName(we),
              Kt = Oe.eventCallback(Ft.fullKey, ct, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, s.q)().onAndCancel(Q, Ft.domEventName, Kt),
              );
          }
          static parseEventName(Q) {
            const we = Q.toLowerCase().split('.'),
              ct = we.shift();
            if (0 === we.length || ('keydown' !== ct && 'keyup' !== ct))
              return null;
            const Ft = Oe._normalizeKey(we.pop());
            let Kt = '',
              Cn = we.indexOf('code');
            if (
              (Cn > -1 && (we.splice(Cn, 1), (Kt = 'code.')),
              ot.forEach(Bn => {
                const Ut = we.indexOf(Bn);
                Ut > -1 && (we.splice(Ut, 1), (Kt += Bn + '.'));
              }),
              (Kt += Ft),
              0 != we.length || 0 === Ft.length)
            )
              return null;
            const Gn = {};
            return (Gn.domEventName = ct), (Gn.fullKey = Kt), Gn;
          }
          static matchEventFullKeyCode(Q, we) {
            let ct = Ke[Q.key] || Q.key,
              Ft = '';
            return (
              we.indexOf('code.') > -1 && ((ct = Q.code), (Ft = 'code.')),
              !(null == ct || !ct) &&
                ((ct = ct.toLowerCase()),
                ' ' === ct ? (ct = 'space') : '.' === ct && (ct = 'dot'),
                ot.forEach(Kt => {
                  Kt !== ct && (0, Lt[Kt])(Q) && (Ft += Kt + '.');
                }),
                (Ft += ct),
                Ft === we)
            );
          }
          static eventCallback(Q, we, ct) {
            return Ft => {
              Oe.matchEventFullKeyCode(Ft, Q) && ct.runGuarded(() => we(Ft));
            };
          }
          static _normalizeKey(Q) {
            return 'esc' === Q ? 'escape' : Q;
          }
        }
        return (
          (Oe.ɵfac = function (Q) {
            return new (Q || Oe)(x.LFG(s.K0));
          }),
          (Oe.ɵprov = x.Yz7({ token: Oe, factory: Oe.ɵfac })),
          Oe
        );
      })();
      const Zn = (0, x.eFA)(x._c5, 'browser', [
          { provide: x.Lbi, useValue: s.bD },
          {
            provide: x.g9A,
            useValue: function yt() {
              se.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: s.K0,
            useFactory: function dn() {
              return (0, x.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        en = new x.OlP(''),
        Bt = [
          {
            provide: x.rWj,
            useClass: class re {
              addToWindow(Ce) {
                (x.dqk.getAngularTestability = (we, ct = !0) => {
                  const Ft = Ce.findTestabilityInTree(we, ct);
                  if (null == Ft)
                    throw new Error('Could not find testability for element.');
                  return Ft;
                }),
                  (x.dqk.getAllAngularTestabilities = () =>
                    Ce.getAllTestabilities()),
                  (x.dqk.getAllAngularRootElements = () =>
                    Ce.getAllRootElements()),
                  x.dqk.frameworkStabilizers ||
                    (x.dqk.frameworkStabilizers = []),
                  x.dqk.frameworkStabilizers.push(we => {
                    const ct = x.dqk.getAllAngularTestabilities();
                    let Ft = ct.length,
                      Kt = !1;
                    const Cn = function (Gn) {
                      (Kt = Kt || Gn), Ft--, 0 == Ft && we(Kt);
                    };
                    ct.forEach(function (Gn) {
                      Gn.whenStable(Cn);
                    });
                  });
              }
              findTestabilityInTree(Ce, Q, we) {
                return null == Q
                  ? null
                  : Ce.getTestability(Q) ??
                      (we
                        ? (0, s.q)().isShadowRoot(Q)
                          ? this.findTestabilityInTree(Ce, Q.host, !0)
                          : this.findTestabilityInTree(Ce, Q.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: x.lri, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
          { provide: x.dDg, useClass: x.dDg, deps: [x.R0b, x.eoX, x.rWj] },
        ],
        Rn = [
          { provide: x.zSh, useValue: 'root' },
          {
            provide: x.qLn,
            useFactory: function Qt() {
              return new x.qLn();
            },
            deps: [],
          },
          { provide: Ue, useClass: a, multi: !0, deps: [s.K0, x.R0b, x.Lbi] },
          { provide: Ue, useClass: Be, multi: !0, deps: [s.K0] },
          { provide: wt, useClass: wt, deps: [rt, ft, x.AFp, nt] },
          { provide: x.FYo, useExisting: wt },
          { provide: Ne, useExisting: ft },
          { provide: ft, useClass: ft, deps: [s.K0] },
          { provide: rt, useClass: rt, deps: [Ue, x.R0b] },
          { provide: s.JF, useClass: He, deps: [] },
          [],
        ];
      let it = (() => {
          class Oe {
            constructor(Q) {}
            static withServerTransition(Q) {
              return {
                ngModule: Oe,
                providers: [
                  { provide: x.AFp, useValue: Q.appId },
                  { provide: he, useExisting: x.AFp },
                  fe,
                ],
              };
            }
          }
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)(x.LFG(en, 12));
            }),
            (Oe.ɵmod = x.oAB({ type: Oe })),
            (Oe.ɵinj = x.cJS({
              providers: [...Rn, ...Bt],
              imports: [s.ez, x.hGG],
            })),
            Oe
          );
        })(),
        ve = (() => {
          class Oe {
            constructor(Q) {
              this._doc = Q;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(Q) {
              this._doc.title = Q || '';
            }
          }
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Q) {
                let we = null;
                return (
                  (we = Q
                    ? new Q()
                    : (function ze() {
                        return new ve((0, x.LFG)(s.K0));
                      })()),
                  we
                );
              },
              providedIn: 'root',
            })),
            Oe
          );
        })();
      typeof window < 'u' && window;
      let Xt = (() => {
          class Oe {}
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)();
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Q) {
                let we = null;
                return (we = Q ? new (Q || Oe)() : x.LFG(Yt)), we;
              },
              providedIn: 'root',
            })),
            Oe
          );
        })(),
        Yt = (() => {
          class Oe extends Xt {
            constructor(Q) {
              super(), (this._doc = Q);
            }
            sanitize(Q, we) {
              if (null == we) return null;
              switch (Q) {
                case x.q3G.NONE:
                  return we;
                case x.q3G.HTML:
                  return (0, x.qzn)(we, 'HTML')
                    ? (0, x.z3N)(we)
                    : (0, x.EiD)(this._doc, String(we)).toString();
                case x.q3G.STYLE:
                  return (0, x.qzn)(we, 'Style') ? (0, x.z3N)(we) : we;
                case x.q3G.SCRIPT:
                  if ((0, x.qzn)(we, 'Script')) return (0, x.z3N)(we);
                  throw new Error('unsafe value used in a script context');
                case x.q3G.URL:
                  return (0, x.qzn)(we, 'URL')
                    ? (0, x.z3N)(we)
                    : (0, x.mCW)(String(we));
                case x.q3G.RESOURCE_URL:
                  if ((0, x.qzn)(we, 'ResourceURL')) return (0, x.z3N)(we);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${x.JZr})`,
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${Q} (see ${x.JZr})`,
                  );
              }
            }
            bypassSecurityTrustHtml(Q) {
              return (0, x.JVY)(Q);
            }
            bypassSecurityTrustStyle(Q) {
              return (0, x.L6k)(Q);
            }
            bypassSecurityTrustScript(Q) {
              return (0, x.eBb)(Q);
            }
            bypassSecurityTrustUrl(Q) {
              return (0, x.LAX)(Q);
            }
            bypassSecurityTrustResourceUrl(Q) {
              return (0, x.pB0)(Q);
            }
          }
          return (
            (Oe.ɵfac = function (Q) {
              return new (Q || Oe)(x.LFG(s.K0));
            }),
            (Oe.ɵprov = x.Yz7({
              token: Oe,
              factory: function (Q) {
                let we = null;
                return (
                  (we = Q
                    ? new Q()
                    : (function Nt(Oe) {
                        return new Yt(Oe.get(s.K0));
                      })(x.LFG(x.zs3))),
                  we
                );
              },
              providedIn: 'root',
            })),
            Oe
          );
        })();
    },
    8252: (Tt, Pe, D) => {
      D.d(Pe, { F0: () => ir, rH: () => ts, Bz: () => tl, lC: () => Or });
      var s = D(4650),
        x = D(457),
        N = D(9646),
        se = D(1135);
      const ue = (0, D(3888).d)(
        f =>
          function () {
            f(this),
              (this.name = 'EmptyError'),
              (this.message = 'no elements in sequence');
          },
      );
      var _e = D(9841),
        ce = D(7272),
        he = D(9770),
        ae = D(9635),
        fe = D(2843),
        re = D(9751),
        He = D(515),
        Ue = D(727),
        rt = D(4482),
        pt = D(5403);
      function Ne() {
        return (0, rt.e)((f, m) => {
          let d = null;
          f._refCount++;
          const C = (0, pt.x)(m, void 0, void 0, void 0, () => {
            if (!f || f._refCount <= 0 || 0 < --f._refCount)
              return void (d = null);
            const O = f._connection,
              H = d;
            (d = null),
              O && (!H || O === H) && O.unsubscribe(),
              m.unsubscribe();
          });
          f.subscribe(C), C.closed || (d = f.connect());
        });
      }
      class ft extends re.y {
        constructor(m, d) {
          super(),
            (this.source = m),
            (this.subjectFactory = d),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, rt.A)(m) && (this.lift = m.lift);
        }
        _subscribe(m) {
          return this.getSubject().subscribe(m);
        }
        getSubject() {
          const m = this._subject;
          return (
            (!m || m.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: m } = this;
          (this._subject = this._connection = null), m?.unsubscribe();
        }
        connect() {
          let m = this._connection;
          if (!m) {
            m = this._connection = new Ue.w0();
            const d = this.getSubject();
            m.add(
              this.source.subscribe(
                (0, pt.x)(
                  d,
                  void 0,
                  () => {
                    this._teardown(), d.complete();
                  },
                  C => {
                    this._teardown(), d.error(C);
                  },
                  () => this._teardown(),
                ),
              ),
            ),
              m.closed && ((this._connection = null), (m = Ue.w0.EMPTY));
          }
          return m;
        }
        refCount() {
          return Ne()(this);
        }
      }
      var st = D(7579),
        mt = D(6895),
        K = D(4004),
        ie = D(3900),
        ee = D(5698),
        X = D(8675),
        Ae = D(9300),
        nt = D(5577);
      function dt(f) {
        return (0, rt.e)((m, d) => {
          let C = !1;
          m.subscribe(
            (0, pt.x)(
              d,
              O => {
                (C = !0), d.next(O);
              },
              () => {
                C || d.next(f), d.complete();
              },
            ),
          );
        });
      }
      function At(f = _t) {
        return (0, rt.e)((m, d) => {
          let C = !1;
          m.subscribe(
            (0, pt.x)(
              d,
              O => {
                (C = !0), d.next(O);
              },
              () => (C ? d.complete() : d.error(f())),
            ),
          );
        });
      }
      function _t() {
        return new ue();
      }
      var Gt = D(4671);
      function wt(f, m) {
        const d = arguments.length >= 2;
        return C =>
          C.pipe(
            f ? (0, Ae.h)((O, H) => f(O, H, C)) : Gt.y,
            (0, ee.q)(1),
            d ? dt(m) : At(() => new ue()),
          );
      }
      var Ge = D(4351),
        Ye = D(8505),
        xe = D(262),
        je = D(5026);
      function ye(f) {
        return f <= 0
          ? () => He.E
          : (0, rt.e)((m, d) => {
              let C = [];
              m.subscribe(
                (0, pt.x)(
                  d,
                  O => {
                    C.push(O), f < C.length && C.shift();
                  },
                  () => {
                    for (const O of C) d.next(O);
                    d.complete();
                  },
                  void 0,
                  () => {
                    C = null;
                  },
                ),
              );
            });
      }
      function Re(f, m) {
        const d = arguments.length >= 2;
        return C =>
          C.pipe(
            f ? (0, Ae.h)((O, H) => f(O, H, C)) : Gt.y,
            ye(1),
            d ? dt(m) : At(() => new ue()),
          );
      }
      var Le = D(2529),
        a = D(9718),
        ot = D(8746),
        Ke = D(8189),
        Lt = D(1481);
      const Be = 'primary',
        Pt = Symbol('RouteTitle');
      class an {
        constructor(m) {
          this.params = m || {};
        }
        has(m) {
          return Object.prototype.hasOwnProperty.call(this.params, m);
        }
        get(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d[0] : d;
          }
          return null;
        }
        getAll(m) {
          if (this.has(m)) {
            const d = this.params[m];
            return Array.isArray(d) ? d : [d];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ut(f) {
        return new an(f);
      }
      function Zt(f, m, d) {
        const C = d.path.split('/');
        if (
          C.length > f.length ||
          ('full' === d.pathMatch && (m.hasChildren() || C.length < f.length))
        )
          return null;
        const O = {};
        for (let H = 0; H < C.length; H++) {
          const Z = C[H],
            Ve = f[H];
          if (Z.startsWith(':')) O[Z.substring(1)] = Ve;
          else if (Z !== Ve.path) return null;
        }
        return { consumed: f.slice(0, C.length), posParams: O };
      }
      function yt(f, m) {
        const d = f ? Object.keys(f) : void 0,
          C = m ? Object.keys(m) : void 0;
        if (!d || !C || d.length != C.length) return !1;
        let O;
        for (let H = 0; H < d.length; H++)
          if (((O = d[H]), !Qt(f[O], m[O]))) return !1;
        return !0;
      }
      function Qt(f, m) {
        if (Array.isArray(f) && Array.isArray(m)) {
          if (f.length !== m.length) return !1;
          const d = [...f].sort(),
            C = [...m].sort();
          return d.every((O, H) => C[H] === O);
        }
        return f === m;
      }
      function dn(f) {
        return Array.prototype.concat.apply([], f);
      }
      function wn(f) {
        return f.length > 0 ? f[f.length - 1] : null;
      }
      function en(f, m) {
        for (const d in f) f.hasOwnProperty(d) && m(f[d], d);
      }
      function Bt(f) {
        return (0, s.CqO)(f)
          ? f
          : (0, s.QGY)(f)
          ? (0, x.D)(Promise.resolve(f))
          : (0, N.of)(f);
      }
      const Rn = !1,
        it = {
          exact: function ze(f, m, d) {
            if (
              !xt(f.segments, m.segments) ||
              !Ie(f.segments, m.segments, d) ||
              f.numberOfChildren !== m.numberOfChildren
            )
              return !1;
            for (const C in m.children)
              if (!f.children[C] || !ze(f.children[C], m.children[C], d))
                return !1;
            return !0;
          },
          subset: be,
        },
        W = {
          exact: function Me(f, m) {
            return yt(f, m);
          },
          subset: function ve(f, m) {
            return (
              Object.keys(m).length <= Object.keys(f).length &&
              Object.keys(m).every(d => Qt(f[d], m[d]))
            );
          },
          ignored: () => !0,
        };
      function ne(f, m, d) {
        return (
          it[d.paths](f.root, m.root, d.matrixParams) &&
          W[d.queryParams](f.queryParams, m.queryParams) &&
          !('exact' === d.fragment && f.fragment !== m.fragment)
        );
      }
      function be(f, m, d) {
        return U(f, m, m.segments, d);
      }
      function U(f, m, d, C) {
        if (f.segments.length > d.length) {
          const O = f.segments.slice(0, d.length);
          return !(!xt(O, d) || m.hasChildren() || !Ie(O, d, C));
        }
        if (f.segments.length === d.length) {
          if (!xt(f.segments, d) || !Ie(f.segments, d, C)) return !1;
          for (const O in m.children)
            if (!f.children[O] || !be(f.children[O], m.children[O], C))
              return !1;
          return !0;
        }
        {
          const O = d.slice(0, f.segments.length),
            H = d.slice(f.segments.length);
          return (
            !!(xt(f.segments, O) && Ie(f.segments, O, C) && f.children[Be]) &&
            U(f.children[Be], m, H, C)
          );
        }
      }
      function Ie(f, m, d) {
        return m.every((C, O) => W[d](f[O].parameters, C.parameters));
      }
      class de {
        constructor(m = new me([], {}), d = {}, C = null) {
          (this.root = m), (this.queryParams = d), (this.fragment = C);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ut(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return vt.serialize(this);
        }
      }
      class me {
        constructor(m, d) {
          (this.segments = m),
            (this.children = d),
            (this.parent = null),
            en(d, (C, O) => (C.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Je(this);
        }
      }
      class pe {
        constructor(m, d) {
          (this.path = m), (this.parameters = d);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ut(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return $e(this);
        }
      }
      function xt(f, m) {
        return f.length === m.length && f.every((d, C) => d.path === m[C].path);
      }
      let Dn = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({
            token: f,
            factory: function () {
              return new Te();
            },
            providedIn: 'root',
          })),
          f
        );
      })();
      class Te {
        parse(m) {
          const d = new we(m);
          return new de(
            d.parseRootSegment(),
            d.parseQueryParams(),
            d.parseFragment(),
          );
        }
        serialize(m) {
          const d = `/${Et(m.root, !0)}`,
            C = (function Xt(f) {
              const m = Object.keys(f)
                .map(d => {
                  const C = f[d];
                  return Array.isArray(C)
                    ? C.map(O => `${R(d)}=${R(O)}`).join('&')
                    : `${R(d)}=${R(C)}`;
                })
                .filter(d => !!d);
              return m.length ? `?${m.join('&')}` : '';
            })(m.queryParams);
          return `${d}${C}${
            'string' == typeof m.fragment
              ? `#${(function b(f) {
                  return encodeURI(f);
                })(m.fragment)}`
              : ''
          }`;
        }
      }
      const vt = new Te();
      function Je(f) {
        return f.segments.map(m => $e(m)).join('/');
      }
      function Et(f, m) {
        if (!f.hasChildren()) return Je(f);
        if (m) {
          const d = f.children[Be] ? Et(f.children[Be], !1) : '',
            C = [];
          return (
            en(f.children, (O, H) => {
              H !== Be && C.push(`${H}:${Et(O, !1)}`);
            }),
            C.length > 0 ? `${d}(${C.join('//')})` : d
          );
        }
        {
          const d = (function Ot(f, m) {
            let d = [];
            return (
              en(f.children, (C, O) => {
                O === Be && (d = d.concat(m(C, O)));
              }),
              en(f.children, (C, O) => {
                O !== Be && (d = d.concat(m(C, O)));
              }),
              d
            );
          })(f, (C, O) =>
            O === Be ? [Et(f.children[Be], !1)] : [`${O}:${Et(C, !1)}`],
          );
          return 1 === Object.keys(f.children).length && null != f.children[Be]
            ? `${Je(f)}/${d[0]}`
            : `${Je(f)}/(${d.join('//')})`;
        }
      }
      function ke(f) {
        return encodeURIComponent(f)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function R(f) {
        return ke(f).replace(/%3B/gi, ';');
      }
      function w(f) {
        return ke(f)
          .replace(/\(/g, '%28')
          .replace(/\)/g, '%29')
          .replace(/%26/gi, '&');
      }
      function $(f) {
        return decodeURIComponent(f);
      }
      function z(f) {
        return $(f.replace(/\+/g, '%20'));
      }
      function $e(f) {
        return `${w(f.path)}${(function Mt(f) {
          return Object.keys(f)
            .map(m => `;${w(m)}=${w(f[m])}`)
            .join('');
        })(f.parameters)}`;
      }
      const Nt = /^[^\/()?;=#]+/;
      function Yt(f) {
        const m = f.match(Nt);
        return m ? m[0] : '';
      }
      const tn = /^[^=?&#]+/,
        Ce = /^[^&#]+/;
      class we {
        constructor(m) {
          (this.url = m), (this.remaining = m);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining ||
            this.peekStartsWith('?') ||
            this.peekStartsWith('#')
              ? new me([], {})
              : new me([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const m = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(m);
            } while (this.consumeOptional('&'));
          return m;
        }
        parseFragment() {
          return this.consumeOptional('#')
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const m = [];
          for (
            this.peekStartsWith('(') || m.push(this.parseSegment());
            this.peekStartsWith('/') &&
            !this.peekStartsWith('//') &&
            !this.peekStartsWith('/(');

          )
            this.capture('/'), m.push(this.parseSegment());
          let d = {};
          this.peekStartsWith('/(') &&
            (this.capture('/'), (d = this.parseParens(!0)));
          let C = {};
          return (
            this.peekStartsWith('(') && (C = this.parseParens(!1)),
            (m.length > 0 || Object.keys(d).length > 0) &&
              (C[Be] = new me(m, d)),
            C
          );
        }
        parseSegment() {
          const m = Yt(this.remaining);
          if ('' === m && this.peekStartsWith(';')) throw new s.vHH(4009, Rn);
          return this.capture(m), new pe($(m), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const m = {};
          for (; this.consumeOptional(';'); ) this.parseParam(m);
          return m;
        }
        parseParam(m) {
          const d = Yt(this.remaining);
          if (!d) return;
          this.capture(d);
          let C = '';
          if (this.consumeOptional('=')) {
            const O = Yt(this.remaining);
            O && ((C = O), this.capture(C));
          }
          m[$(d)] = $(C);
        }
        parseQueryParam(m) {
          const d = (function Oe(f) {
            const m = f.match(tn);
            return m ? m[0] : '';
          })(this.remaining);
          if (!d) return;
          this.capture(d);
          let C = '';
          if (this.consumeOptional('=')) {
            const Z = (function Q(f) {
              const m = f.match(Ce);
              return m ? m[0] : '';
            })(this.remaining);
            Z && ((C = Z), this.capture(C));
          }
          const O = z(d),
            H = z(C);
          if (m.hasOwnProperty(O)) {
            let Z = m[O];
            Array.isArray(Z) || ((Z = [Z]), (m[O] = Z)), Z.push(H);
          } else m[O] = H;
        }
        parseParens(m) {
          const d = {};
          for (
            this.capture('(');
            !this.consumeOptional(')') && this.remaining.length > 0;

          ) {
            const C = Yt(this.remaining),
              O = this.remaining[C.length];
            if ('/' !== O && ')' !== O && ';' !== O) throw new s.vHH(4010, Rn);
            let H;
            C.indexOf(':') > -1
              ? ((H = C.slice(0, C.indexOf(':'))),
                this.capture(H),
                this.capture(':'))
              : m && (H = Be);
            const Z = this.parseChildren();
            (d[H] = 1 === Object.keys(Z).length ? Z[Be] : new me([], Z)),
              this.consumeOptional('//');
          }
          return d;
        }
        peekStartsWith(m) {
          return this.remaining.startsWith(m);
        }
        consumeOptional(m) {
          return (
            !!this.peekStartsWith(m) &&
            ((this.remaining = this.remaining.substring(m.length)), !0)
          );
        }
        capture(m) {
          if (!this.consumeOptional(m)) throw new s.vHH(4011, Rn);
        }
      }
      function ct(f) {
        return f.segments.length > 0 ? new me([], { [Be]: f }) : f;
      }
      function Ft(f) {
        const m = {};
        for (const C of Object.keys(f.children)) {
          const H = Ft(f.children[C]);
          (H.segments.length > 0 || H.hasChildren()) && (m[C] = H);
        }
        return (function Kt(f) {
          if (1 === f.numberOfChildren && f.children[Be]) {
            const m = f.children[Be];
            return new me(f.segments.concat(m.segments), m.children);
          }
          return f;
        })(new me(f.segments, m));
      }
      function Cn(f) {
        return f instanceof de;
      }
      const Gn = !1;
      function Ln(f, m, d, C, O) {
        if (0 === d.length) return ki(m.root, m.root, m.root, C, O);
        const H = (function ti(f) {
          if ('string' == typeof f[0] && 1 === f.length && '/' === f[0])
            return new ri(!0, 0, f);
          let m = 0,
            d = !1;
          const C = f.reduce((O, H, Z) => {
            if ('object' == typeof H && null != H) {
              if (H.outlets) {
                const Ve = {};
                return (
                  en(H.outlets, (Dt, qt) => {
                    Ve[qt] = 'string' == typeof Dt ? Dt.split('/') : Dt;
                  }),
                  [...O, { outlets: Ve }]
                );
              }
              if (H.segmentPath) return [...O, H.segmentPath];
            }
            return 'string' != typeof H
              ? [...O, H]
              : 0 === Z
              ? (H.split('/').forEach((Ve, Dt) => {
                  (0 == Dt && '.' === Ve) ||
                    (0 == Dt && '' === Ve
                      ? (d = !0)
                      : '..' === Ve
                      ? m++
                      : '' != Ve && O.push(Ve));
                }),
                O)
              : [...O, H];
          }, []);
          return new ri(d, m, C);
        })(d);
        return H.toRoot()
          ? ki(m.root, m.root, new me([], {}), C, O)
          : (function Z(Dt) {
              const qt = (function Tr(f, m, d, C) {
                  if (f.isAbsolute) return new ai(m.root, !0, 0);
                  if (-1 === C) return new ai(d, d === m.root, 0);
                  return (function Bi(f, m, d) {
                    let C = f,
                      O = m,
                      H = d;
                    for (; H > O; ) {
                      if (((H -= O), (C = C.parent), !C))
                        throw new s.vHH(4005, Gn && "Invalid number of '../'");
                      O = C.segments.length;
                    }
                    return new ai(C, !1, O - H);
                  })(d, C + (Hn(f.commands[0]) ? 0 : 1), f.numberOfDoubleDots);
                })(H, m, f.snapshot?._urlSegment, Dt),
                on = qt.processChildren
                  ? $t(qt.segmentGroup, qt.index, H.commands)
                  : _i(qt.segmentGroup, qt.index, H.commands);
              return ki(m.root, qt.segmentGroup, on, C, O);
            })(f.snapshot?._lastPathIndex);
      }
      function Hn(f) {
        return (
          'object' == typeof f && null != f && !f.outlets && !f.segmentPath
        );
      }
      function Ci(f) {
        return 'object' == typeof f && null != f && f.outlets;
      }
      function ki(f, m, d, C, O) {
        let Z,
          H = {};
        C &&
          en(C, (Dt, qt) => {
            H[qt] = Array.isArray(Dt) ? Dt.map(on => `${on}`) : `${Dt}`;
          }),
          (Z = f === m ? d : kn(f, m, d));
        const Ve = ct(Ft(Z));
        return new de(Ve, H, O);
      }
      function kn(f, m, d) {
        const C = {};
        return (
          en(f.children, (O, H) => {
            C[H] = O === m ? d : kn(O, m, d);
          }),
          new me(f.segments, C)
        );
      }
      class ri {
        constructor(m, d, C) {
          if (
            ((this.isAbsolute = m),
            (this.numberOfDoubleDots = d),
            (this.commands = C),
            m && C.length > 0 && Hn(C[0]))
          )
            throw new s.vHH(
              4003,
              Gn && 'Root segment cannot have matrix parameters',
            );
          const O = C.find(Ci);
          if (O && O !== wn(C))
            throw new s.vHH(
              4004,
              Gn && '{outlets:{}} has to be the last command',
            );
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            '/' == this.commands[0]
          );
        }
      }
      class ai {
        constructor(m, d, C) {
          (this.segmentGroup = m), (this.processChildren = d), (this.index = C);
        }
      }
      function _i(f, m, d) {
        if (
          (f || (f = new me([], {})),
          0 === f.segments.length && f.hasChildren())
        )
          return $t(f, m, d);
        const C = (function fn(f, m, d) {
            let C = 0,
              O = m;
            const H = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; O < f.segments.length; ) {
              if (C >= d.length) return H;
              const Z = f.segments[O],
                Ve = d[C];
              if (Ci(Ve)) break;
              const Dt = `${Ve}`,
                qt = C < d.length - 1 ? d[C + 1] : null;
              if (O > 0 && void 0 === Dt) break;
              if (Dt && qt && 'object' == typeof qt && void 0 === qt.outlets) {
                if (!Un(Dt, qt, Z)) return H;
                C += 2;
              } else {
                if (!Un(Dt, {}, Z)) return H;
                C++;
              }
              O++;
            }
            return { match: !0, pathIndex: O, commandIndex: C };
          })(f, m, d),
          O = d.slice(C.commandIndex);
        if (C.match && C.pathIndex < f.segments.length) {
          const H = new me(f.segments.slice(0, C.pathIndex), {});
          return (
            (H.children[Be] = new me(
              f.segments.slice(C.pathIndex),
              f.children,
            )),
            $t(H, 0, O)
          );
        }
        return C.match && 0 === O.length
          ? new me(f.segments, {})
          : C.match && !f.hasChildren()
          ? Vn(f, m, d)
          : C.match
          ? $t(f, 0, O)
          : Vn(f, m, d);
      }
      function $t(f, m, d) {
        if (0 === d.length) return new me(f.segments, {});
        {
          const C = (function Zi(f) {
              return Ci(f[0]) ? f[0].outlets : { [Be]: f };
            })(d),
            O = {};
          if (
            !C[Be] &&
            f.children[Be] &&
            1 === f.numberOfChildren &&
            0 === f.children[Be].segments.length
          ) {
            const H = $t(f.children[Be], m, d);
            return new me(f.segments, H.children);
          }
          return (
            en(C, (H, Z) => {
              'string' == typeof H && (H = [H]),
                null !== H && (O[Z] = _i(f.children[Z], m, H));
            }),
            en(f.children, (H, Z) => {
              void 0 === C[Z] && (O[Z] = H);
            }),
            new me(f.segments, O)
          );
        }
      }
      function Vn(f, m, d) {
        const C = f.segments.slice(0, m);
        let O = 0;
        for (; O < d.length; ) {
          const H = d[O];
          if (Ci(H)) {
            const Dt = di(H.outlets);
            return new me(C, Dt);
          }
          if (0 === O && Hn(d[0])) {
            C.push(new pe(f.segments[m].path, ui(d[0]))), O++;
            continue;
          }
          const Z = Ci(H) ? H.outlets[Be] : `${H}`,
            Ve = O < d.length - 1 ? d[O + 1] : null;
          Z && Ve && Hn(Ve)
            ? (C.push(new pe(Z, ui(Ve))), (O += 2))
            : (C.push(new pe(Z, {})), O++);
        }
        return new me(C, {});
      }
      function di(f) {
        const m = {};
        return (
          en(f, (d, C) => {
            'string' == typeof d && (d = [d]),
              null !== d && (m[C] = Vn(new me([], {}), 0, d));
          }),
          m
        );
      }
      function ui(f) {
        const m = {};
        return en(f, (d, C) => (m[C] = `${d}`)), m;
      }
      function Un(f, m, d) {
        return f == d.path && yt(m, d.parameters);
      }
      const hi = 'imperative';
      class An {
        constructor(m, d) {
          (this.id = m), (this.url = d);
        }
      }
      class Ei extends An {
        constructor(m, d, C = 'imperative', O = null) {
          super(m, d),
            (this.type = 0),
            (this.navigationTrigger = C),
            (this.restoredState = O);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class fi extends An {
        constructor(m, d, C) {
          super(m, d), (this.urlAfterRedirects = C), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class _n extends An {
        constructor(m, d, C, O) {
          super(m, d), (this.reason = C), (this.code = O), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Ti extends An {
        constructor(m, d, C, O) {
          super(m, d), (this.reason = C), (this.code = O), (this.type = 16);
        }
      }
      class $i extends An {
        constructor(m, d, C, O) {
          super(m, d), (this.error = C), (this.target = O), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class ur extends An {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Oi extends An {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class oi extends An {
        constructor(m, d, C, O, H) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.shouldActivate = H),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Qi extends An {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Vi extends An {
        constructor(m, d, C, O) {
          super(m, d),
            (this.urlAfterRedirects = C),
            (this.state = O),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Hi {
        constructor(m) {
          (this.route = m), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class hr {
        constructor(m) {
          (this.route = m), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class fr {
        constructor(m) {
          (this.snapshot = m), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class hn {
        constructor(m) {
          (this.snapshot = m), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class Mi {
        constructor(m) {
          (this.snapshot = m), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class qi {
        constructor(m) {
          (this.snapshot = m), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class or {
        constructor(m, d, C) {
          (this.routerEvent = m),
            (this.position = d),
            (this.anchor = C),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let Fi = (() => {
          class f {
            createUrlTree(d, C, O, H, Z, Ve) {
              return Ln(d || C.root, O, H, Z, Ve);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
            f
          );
        })(),
        We = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function (m) {
                return Fi.ɵfac(m);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class Se {
        constructor(m) {
          this._root = m;
        }
        get root() {
          return this._root.value;
        }
        parent(m) {
          const d = this.pathFromRoot(m);
          return d.length > 1 ? d[d.length - 2] : null;
        }
        children(m) {
          const d = Ze(m, this._root);
          return d ? d.children.map(C => C.value) : [];
        }
        firstChild(m) {
          const d = Ze(m, this._root);
          return d && d.children.length > 0 ? d.children[0].value : null;
        }
        siblings(m) {
          const d = St(m, this._root);
          return d.length < 2
            ? []
            : d[d.length - 2].children.map(O => O.value).filter(O => O !== m);
        }
        pathFromRoot(m) {
          return St(m, this._root).map(d => d.value);
        }
      }
      function Ze(f, m) {
        if (f === m.value) return m;
        for (const d of m.children) {
          const C = Ze(f, d);
          if (C) return C;
        }
        return null;
      }
      function St(f, m) {
        if (f === m.value) return [m];
        for (const d of m.children) {
          const C = St(f, d);
          if (C.length) return C.unshift(m), C;
        }
        return [];
      }
      class It {
        constructor(m, d) {
          (this.value = m), (this.children = d);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function un(f) {
        const m = {};
        return f && f.children.forEach(d => (m[d.value.outlet] = d)), m;
      }
      class vn extends Se {
        constructor(m, d) {
          super(m), (this.snapshot = d), ho(this, m);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Fn(f, m) {
        const d = (function qn(f, m) {
            const Z = new mr([], {}, {}, '', {}, Be, m, null, f.root, -1, {});
            return new _r('', new It(Z, []));
          })(f, m),
          C = new se.X([new pe('', {})]),
          O = new se.X({}),
          H = new se.X({}),
          Z = new se.X({}),
          Ve = new se.X(''),
          Dt = new Tn(C, O, Z, Ve, H, Be, m, d.root);
        return (Dt.snapshot = d.root), new vn(new It(Dt, []), d);
      }
      class Tn {
        constructor(m, d, C, O, H, Z, Ve, Dt) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = C),
            (this.fragment = O),
            (this.data = H),
            (this.outlet = Z),
            (this.component = Ve),
            (this.title =
              this.data?.pipe((0, K.U)(qt => qt[Pt])) ?? (0, N.of)(void 0)),
            (this._futureSnapshot = Dt);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, K.U)(m => ut(m)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, K.U)(m => ut(m)),
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function pi(f, m = 'emptyOnly') {
        const d = f.pathFromRoot;
        let C = 0;
        if ('always' !== m)
          for (C = d.length - 1; C >= 1; ) {
            const O = d[C],
              H = d[C - 1];
            if (O.routeConfig && '' === O.routeConfig.path) C--;
            else {
              if (H.component) break;
              C--;
            }
          }
        return (function jr(f) {
          return f.reduce(
            (m, d) => ({
              params: { ...m.params, ...d.params },
              data: { ...m.data, ...d.data },
              resolve: {
                ...d.data,
                ...m.resolve,
                ...d.routeConfig?.data,
                ...d._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} },
          );
        })(d.slice(C));
      }
      class mr {
        get title() {
          return this.data?.[Pt];
        }
        constructor(m, d, C, O, H, Z, Ve, Dt, qt, on, Wn) {
          (this.url = m),
            (this.params = d),
            (this.queryParams = C),
            (this.fragment = O),
            (this.data = H),
            (this.outlet = Z),
            (this.component = Ve),
            (this.routeConfig = Dt),
            (this._urlSegment = qt),
            (this._lastPathIndex = on),
            (this._resolve = Wn);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ut(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ut(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map(C => C.toString())
            .join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class _r extends Se {
        constructor(m, d) {
          super(d), (this.url = m), ho(this, d);
        }
        toString() {
          return fo(this._root);
        }
      }
      function ho(f, m) {
        (m.value._routerState = f), m.children.forEach(d => ho(f, d));
      }
      function fo(f) {
        const m =
          f.children.length > 0 ? ` { ${f.children.map(fo).join(', ')} } ` : '';
        return `${f.value}${m}`;
      }
      function io(f) {
        if (f.snapshot) {
          const m = f.snapshot,
            d = f._futureSnapshot;
          (f.snapshot = d),
            yt(m.queryParams, d.queryParams) ||
              f.queryParams.next(d.queryParams),
            m.fragment !== d.fragment && f.fragment.next(d.fragment),
            yt(m.params, d.params) || f.params.next(d.params),
            (function Ct(f, m) {
              if (f.length !== m.length) return !1;
              for (let d = 0; d < f.length; ++d) if (!yt(f[d], m[d])) return !1;
              return !0;
            })(m.url, d.url) || f.url.next(d.url),
            yt(m.data, d.data) || f.data.next(d.data);
        } else
          (f.snapshot = f._futureSnapshot), f.data.next(f._futureSnapshot.data);
      }
      function ar(f, m) {
        const d =
          yt(f.params, m.params) &&
          (function Xe(f, m) {
            return (
              xt(f, m) && f.every((d, C) => yt(d.parameters, m[C].parameters))
            );
          })(f.url, m.url);
        return (
          d &&
          !(!f.parent != !m.parent) &&
          (!f.parent || ar(f.parent, m.parent))
        );
      }
      function zr(f, m, d) {
        if (d && f.shouldReuseRoute(m.value, d.value.snapshot)) {
          const C = d.value;
          C._futureSnapshot = m.value;
          const O = (function wo(f, m, d) {
            return m.children.map(C => {
              for (const O of d.children)
                if (f.shouldReuseRoute(C.value, O.value.snapshot))
                  return zr(f, C, O);
              return zr(f, C);
            });
          })(f, m, d);
          return new It(C, O);
        }
        {
          if (f.shouldAttach(m.value)) {
            const H = f.retrieve(m.value);
            if (null !== H) {
              const Z = H.route;
              return (
                (Z.value._futureSnapshot = m.value),
                (Z.children = m.children.map(Ve => zr(f, Ve))),
                Z
              );
            }
          }
          const C = (function Ao(f) {
              return new Tn(
                new se.X(f.url),
                new se.X(f.params),
                new se.X(f.queryParams),
                new se.X(f.fragment),
                new se.X(f.data),
                f.outlet,
                f.component,
                f,
              );
            })(m.value),
            O = m.children.map(H => zr(f, H));
          return new It(C, O);
        }
      }
      const $r = 'ngNavigationCancelingError';
      function vr(f, m) {
        const { redirectTo: d, navigationBehaviorOptions: C } = Cn(m)
            ? { redirectTo: m, navigationBehaviorOptions: void 0 }
            : m,
          O = ro(!1, 0, m);
        return (O.url = d), (O.navigationBehaviorOptions = C), O;
      }
      function ro(f, m, d) {
        const C = new Error('NavigationCancelingError: ' + (f || ''));
        return (C[$r] = !0), (C.cancellationCode = m), d && (C.url = d), C;
      }
      function mo(f) {
        return So(f) && Cn(f.url);
      }
      function So(f) {
        return f && f[$r];
      }
      class br {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new Ji()),
            (this.attachRef = null);
        }
      }
      let Ji = (() => {
        class f {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(d, C) {
            const O = this.getOrCreateContext(d);
            (O.outlet = C), this.contexts.set(d, O);
          }
          onChildOutletDestroyed(d) {
            const C = this.getContext(d);
            C && ((C.outlet = null), (C.attachRef = null));
          }
          onOutletDeactivated() {
            const d = this.contexts;
            return (this.contexts = new Map()), d;
          }
          onOutletReAttached(d) {
            this.contexts = d;
          }
          getOrCreateContext(d) {
            let C = this.getContext(d);
            return C || ((C = new br()), this.contexts.set(d, C)), C;
          }
          getContext(d) {
            return this.contexts.get(d) || null;
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const mi = !1;
      let Or = (() => {
        class f {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = Be),
              (this.activateEvents = new s.vpe()),
              (this.deactivateEvents = new s.vpe()),
              (this.attachEvents = new s.vpe()),
              (this.detachEvents = new s.vpe()),
              (this.parentContexts = (0, s.f3M)(Ji)),
              (this.location = (0, s.f3M)(s.s_b)),
              (this.changeDetector = (0, s.f3M)(s.sBO)),
              (this.environmentInjector = (0, s.f3M)(s.lqb));
          }
          ngOnChanges(d) {
            if (d.name) {
              const { firstChange: C, previousValue: O } = d.name;
              if (C) return;
              this.isTrackedInParentContexts(O) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(O)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(d) {
            return this.parentContexts.getContext(d)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const d = this.parentContexts.getContext(this.name);
            d?.route &&
              (d.attachRef
                ? this.attach(d.attachRef, d.route)
                : this.activateWith(d.route, d.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new s.vHH(4012, mi);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new s.vHH(4012, mi);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new s.vHH(4012, mi);
            this.location.detach();
            const d = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(d.instance),
              d
            );
          }
          attach(d, C) {
            (this.activated = d),
              (this._activatedRoute = C),
              this.location.insert(d.hostView),
              this.attachEvents.emit(d.instance);
          }
          deactivate() {
            if (this.activated) {
              const d = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(d);
            }
          }
          activateWith(d, C) {
            if (this.isActivated) throw new s.vHH(4013, mi);
            this._activatedRoute = d;
            const O = this.location,
              Z = d.snapshot.component,
              Ve = this.parentContexts.getOrCreateContext(this.name).children,
              Dt = new yr(d, Ve, O.injector);
            if (
              C &&
              (function go(f) {
                return !!f.resolveComponentFactory;
              })(C)
            ) {
              const qt = C.resolveComponentFactory(Z);
              this.activated = O.createComponent(qt, O.length, Dt);
            } else
              this.activated = O.createComponent(Z, {
                index: O.length,
                injector: Dt,
                environmentInjector: C ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵdir = s.lG2({
            type: f,
            selectors: [['router-outlet']],
            inputs: { name: 'name' },
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
            standalone: !0,
            features: [s.TTD],
          })),
          f
        );
      })();
      class yr {
        constructor(m, d, C) {
          (this.route = m), (this.childContexts = d), (this.parent = C);
        }
        get(m, d) {
          return m === Tn
            ? this.route
            : m === Ji
            ? this.childContexts
            : this.parent.get(m, d);
        }
      }
      let Yr = (() => {
        class f {}
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵcmp = s.Xpm({
            type: f,
            selectors: [['ng-component']],
            standalone: !0,
            features: [s.jDz],
            decls: 1,
            vars: 0,
            template: function (d, C) {
              1 & d && s._UZ(0, 'router-outlet');
            },
            dependencies: [Or],
            encapsulation: 2,
          })),
          f
        );
      })();
      function Rr(f, m) {
        return (
          f.providers &&
            !f._injector &&
            (f._injector = (0, s.MMx)(f.providers, m, `Route: ${f.path}`)),
          f._injector ?? m
        );
      }
      function ci(f) {
        const m = f.children && f.children.map(ci),
          d = m ? { ...f, children: m } : { ...f };
        return (
          !d.component &&
            !d.loadComponent &&
            (m || d.loadChildren) &&
            d.outlet &&
            d.outlet !== Be &&
            (d.component = Yr),
          d
        );
      }
      function si(f) {
        return f.outlet || Be;
      }
      function vi(f, m) {
        const d = f.filter(C => si(C) === m);
        return d.push(...f.filter(C => si(C) !== m)), d;
      }
      function Kr(f) {
        if (!f) return null;
        if (f.routeConfig?._injector) return f.routeConfig._injector;
        for (let m = f.parent; m; m = m.parent) {
          const d = m.routeConfig;
          if (d?._loadedInjector) return d._loadedInjector;
          if (d?._injector) return d._injector;
        }
        return null;
      }
      class Dr {
        constructor(m, d, C, O) {
          (this.routeReuseStrategy = m),
            (this.futureState = d),
            (this.currState = C),
            (this.forwardEvent = O);
        }
        activate(m) {
          const d = this.futureState._root,
            C = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(d, C, m),
            io(this.futureState.root),
            this.activateChildRoutes(d, C, m);
        }
        deactivateChildRoutes(m, d, C) {
          const O = un(d);
          m.children.forEach(H => {
            const Z = H.value.outlet;
            this.deactivateRoutes(H, O[Z], C), delete O[Z];
          }),
            en(O, (H, Z) => {
              this.deactivateRouteAndItsChildren(H, C);
            });
        }
        deactivateRoutes(m, d, C) {
          const O = m.value,
            H = d ? d.value : null;
          if (O === H)
            if (O.component) {
              const Z = C.getContext(O.outlet);
              Z && this.deactivateChildRoutes(m, d, Z.children);
            } else this.deactivateChildRoutes(m, d, C);
          else H && this.deactivateRouteAndItsChildren(d, C);
        }
        deactivateRouteAndItsChildren(m, d) {
          m.value.component &&
          this.routeReuseStrategy.shouldDetach(m.value.snapshot)
            ? this.detachAndStoreRouteSubtree(m, d)
            : this.deactivateRouteAndOutlet(m, d);
        }
        detachAndStoreRouteSubtree(m, d) {
          const C = d.getContext(m.value.outlet),
            O = C && m.value.component ? C.children : d,
            H = un(m);
          for (const Z of Object.keys(H))
            this.deactivateRouteAndItsChildren(H[Z], O);
          if (C && C.outlet) {
            const Z = C.outlet.detach(),
              Ve = C.children.onOutletDeactivated();
            this.routeReuseStrategy.store(m.value.snapshot, {
              componentRef: Z,
              route: m,
              contexts: Ve,
            });
          }
        }
        deactivateRouteAndOutlet(m, d) {
          const C = d.getContext(m.value.outlet),
            O = C && m.value.component ? C.children : d,
            H = un(m);
          for (const Z of Object.keys(H))
            this.deactivateRouteAndItsChildren(H[Z], O);
          C &&
            (C.outlet &&
              (C.outlet.deactivate(), C.children.onOutletDeactivated()),
            (C.attachRef = null),
            (C.resolver = null),
            (C.route = null));
        }
        activateChildRoutes(m, d, C) {
          const O = un(d);
          m.children.forEach(H => {
            this.activateRoutes(H, O[H.value.outlet], C),
              this.forwardEvent(new qi(H.value.snapshot));
          }),
            m.children.length && this.forwardEvent(new hn(m.value.snapshot));
        }
        activateRoutes(m, d, C) {
          const O = m.value,
            H = d ? d.value : null;
          if ((io(O), O === H))
            if (O.component) {
              const Z = C.getOrCreateContext(O.outlet);
              this.activateChildRoutes(m, d, Z.children);
            } else this.activateChildRoutes(m, d, C);
          else if (O.component) {
            const Z = C.getOrCreateContext(O.outlet);
            if (this.routeReuseStrategy.shouldAttach(O.snapshot)) {
              const Ve = this.routeReuseStrategy.retrieve(O.snapshot);
              this.routeReuseStrategy.store(O.snapshot, null),
                Z.children.onOutletReAttached(Ve.contexts),
                (Z.attachRef = Ve.componentRef),
                (Z.route = Ve.route.value),
                Z.outlet && Z.outlet.attach(Ve.componentRef, Ve.route.value),
                io(Ve.route.value),
                this.activateChildRoutes(m, null, Z.children);
            } else {
              const Ve = Kr(O.snapshot),
                Dt = Ve?.get(s._Vd) ?? null;
              (Z.attachRef = null),
                (Z.route = O),
                (Z.resolver = Dt),
                (Z.injector = Ve),
                Z.outlet && Z.outlet.activateWith(O, Z.injector),
                this.activateChildRoutes(m, null, Z.children);
            }
          } else this.activateChildRoutes(m, null, C);
        }
      }
      class wi {
        constructor(m) {
          (this.path = m), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Cr {
        constructor(m, d) {
          (this.component = m), (this.route = d);
        }
      }
      function Pr(f, m, d) {
        const C = f._root;
        return Lr(C, m ? m._root : null, d, [C.value]);
      }
      function Pi(f, m) {
        const d = Symbol(),
          C = m.get(f, d);
        return C === d
          ? 'function' != typeof f || (0, s.Z0I)(f)
            ? m.get(f)
            : f
          : C;
      }
      function Lr(
        f,
        m,
        d,
        C,
        O = { canDeactivateChecks: [], canActivateChecks: [] },
      ) {
        const H = un(m);
        return (
          f.children.forEach(Z => {
            (function ao(
              f,
              m,
              d,
              C,
              O = { canDeactivateChecks: [], canActivateChecks: [] },
            ) {
              const H = f.value,
                Z = m ? m.value : null,
                Ve = d ? d.getContext(f.value.outlet) : null;
              if (Z && H.routeConfig === Z.routeConfig) {
                const Dt = (function yn(f, m, d) {
                  if ('function' == typeof d) return d(f, m);
                  switch (d) {
                    case 'pathParamsChange':
                      return !xt(f.url, m.url);
                    case 'pathParamsOrQueryParamsChange':
                      return (
                        !xt(f.url, m.url) || !yt(f.queryParams, m.queryParams)
                      );
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !ar(f, m) || !yt(f.queryParams, m.queryParams);
                    default:
                      return !ar(f, m);
                  }
                })(Z, H, H.routeConfig.runGuardsAndResolvers);
                Dt
                  ? O.canActivateChecks.push(new wi(C))
                  : ((H.data = Z.data), (H._resolvedData = Z._resolvedData)),
                  Lr(f, m, H.component ? (Ve ? Ve.children : null) : d, C, O),
                  Dt &&
                    Ve &&
                    Ve.outlet &&
                    Ve.outlet.isActivated &&
                    O.canDeactivateChecks.push(new Cr(Ve.outlet.component, Z));
              } else
                Z && xr(m, Ve, O),
                  O.canActivateChecks.push(new wi(C)),
                  Lr(
                    f,
                    null,
                    H.component ? (Ve ? Ve.children : null) : d,
                    C,
                    O,
                  );
            })(Z, H[Z.value.outlet], d, C.concat([Z.value]), O),
              delete H[Z.value.outlet];
          }),
          en(H, (Z, Ve) => xr(Z, d.getContext(Ve), O)),
          O
        );
      }
      function xr(f, m, d) {
        const C = un(f),
          O = f.value;
        en(C, (H, Z) => {
          xr(H, O.component ? (m ? m.children.getContext(Z) : null) : m, d);
        }),
          d.canDeactivateChecks.push(
            new Cr(
              O.component && m && m.outlet && m.outlet.isActivated
                ? m.outlet.component
                : null,
              O,
            ),
          );
      }
      function k(f) {
        return 'function' == typeof f;
      }
      function gr(f) {
        return f instanceof ue || 'EmptyError' === f?.name;
      }
      const Qr = Symbol('INITIAL_VALUE');
      function Jn() {
        return (0, ie.w)(f =>
          (0, _e.a)(f.map(m => m.pipe((0, ee.q)(1), (0, X.O)(Qr)))).pipe(
            (0, K.U)(m => {
              for (const d of m)
                if (!0 !== d) {
                  if (d === Qr) return Qr;
                  if (!1 === d || d instanceof de) return d;
                }
              return !0;
            }),
            (0, Ae.h)(m => m !== Qr),
            (0, ee.q)(1),
          ),
        );
      }
      function Li(f) {
        return (0, ae.z)(
          (0, Ye.b)(m => {
            if (Cn(m)) throw vr(0, m);
          }),
          (0, K.U)(m => !0 === m),
        );
      }
      const Nr = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function Er(f, m, d, C, O) {
        const H = Xr(f, m, d);
        return H.matched
          ? (function qr(f, m, d, C) {
              const O = m.canMatch;
              if (!O || 0 === O.length) return (0, N.of)(!0);
              const H = O.map(Z => {
                const Ve = Pi(Z, f);
                return Bt(
                  (function Kn(f) {
                    return f && k(f.canMatch);
                  })(Ve)
                    ? Ve.canMatch(m, d)
                    : f.runInContext(() => Ve(m, d)),
                );
              });
              return (0, N.of)(H).pipe(Jn(), Li());
            })((C = Rr(m, C)), m, d).pipe(
              (0, K.U)(Z => (!0 === Z ? H : { ...Nr })),
            )
          : (0, N.of)(H);
      }
      function Xr(f, m, d) {
        if ('' === m.path)
          return 'full' === m.pathMatch && (f.hasChildren() || d.length > 0)
            ? { ...Nr }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: d,
                parameters: {},
                positionalParamSegments: {},
              };
        const O = (m.matcher || Zt)(d, f, m);
        if (!O) return { ...Nr };
        const H = {};
        en(O.posParams, (Ve, Dt) => {
          H[Dt] = Ve.path;
        });
        const Z =
          O.consumed.length > 0
            ? { ...H, ...O.consumed[O.consumed.length - 1].parameters }
            : H;
        return {
          matched: !0,
          consumedSegments: O.consumed,
          remainingSegments: d.slice(O.consumed.length),
          parameters: Z,
          positionalParamSegments: O.posParams ?? {},
        };
      }
      function Br(f, m, d, C) {
        if (
          d.length > 0 &&
          (function vo(f, m, d) {
            return d.some(C => Mr(f, m, C) && si(C) !== Be);
          })(f, d, C)
        ) {
          const H = new me(
            m,
            (function Vo(f, m, d, C) {
              const O = {};
              (O[Be] = C),
                (C._sourceSegment = f),
                (C._segmentIndexShift = m.length);
              for (const H of d)
                if ('' === H.path && si(H) !== Be) {
                  const Z = new me([], {});
                  (Z._sourceSegment = f),
                    (Z._segmentIndexShift = m.length),
                    (O[si(H)] = Z);
                }
              return O;
            })(f, m, C, new me(d, f.children)),
          );
          return (
            (H._sourceSegment = f),
            (H._segmentIndexShift = m.length),
            { segmentGroup: H, slicedSegments: [] }
          );
        }
        if (
          0 === d.length &&
          (function lo(f, m, d) {
            return d.some(C => Mr(f, m, C));
          })(f, d, C)
        ) {
          const H = new me(
            f.segments,
            (function er(f, m, d, C, O) {
              const H = {};
              for (const Z of C)
                if (Mr(f, d, Z) && !O[si(Z)]) {
                  const Ve = new me([], {});
                  (Ve._sourceSegment = f),
                    (Ve._segmentIndexShift = m.length),
                    (H[si(Z)] = Ve);
                }
              return { ...O, ...H };
            })(f, m, d, C, f.children),
          );
          return (
            (H._sourceSegment = f),
            (H._segmentIndexShift = m.length),
            { segmentGroup: H, slicedSegments: d }
          );
        }
        const O = new me(f.segments, f.children);
        return (
          (O._sourceSegment = f),
          (O._segmentIndexShift = m.length),
          { segmentGroup: O, slicedSegments: d }
        );
      }
      function Mr(f, m, d) {
        return (
          (!(f.hasChildren() || m.length > 0) || 'full' !== d.pathMatch) &&
          '' === d.path
        );
      }
      function B(f, m, d, C) {
        return (
          !!(si(f) === C || (C !== Be && Mr(m, d, f))) &&
          ('**' === f.path || Xr(m, f, d).matched)
        );
      }
      function h(f, m, d) {
        return 0 === m.length && !f.children[d];
      }
      const p = !1;
      class S {
        constructor(m) {
          this.segmentGroup = m || null;
        }
      }
      class V {
        constructor(m) {
          this.urlTree = m;
        }
      }
      function q(f) {
        return (0, fe._)(new S(f));
      }
      function De(f) {
        return (0, fe._)(new V(f));
      }
      class Wt {
        constructor(m, d, C, O, H) {
          (this.injector = m),
            (this.configLoader = d),
            (this.urlSerializer = C),
            (this.urlTree = O),
            (this.config = H),
            (this.allowRedirects = !0);
        }
        apply() {
          const m = Br(this.urlTree.root, [], [], this.config).segmentGroup,
            d = new me(m.segments, m.children);
          return this.expandSegmentGroup(this.injector, this.config, d, Be)
            .pipe(
              (0, K.U)(H =>
                this.createUrlTree(
                  Ft(H),
                  this.urlTree.queryParams,
                  this.urlTree.fragment,
                ),
              ),
            )
            .pipe(
              (0, xe.K)(H => {
                if (H instanceof V)
                  return (this.allowRedirects = !1), this.match(H.urlTree);
                throw H instanceof S ? this.noMatchError(H) : H;
              }),
            );
        }
        match(m) {
          return this.expandSegmentGroup(this.injector, this.config, m.root, Be)
            .pipe(
              (0, K.U)(O =>
                this.createUrlTree(Ft(O), m.queryParams, m.fragment),
              ),
            )
            .pipe(
              (0, xe.K)(O => {
                throw O instanceof S ? this.noMatchError(O) : O;
              }),
            );
        }
        noMatchError(m) {
          return new s.vHH(4002, p);
        }
        createUrlTree(m, d, C) {
          const O = ct(m);
          return new de(O, d, C);
        }
        expandSegmentGroup(m, d, C, O) {
          return 0 === C.segments.length && C.hasChildren()
            ? this.expandChildren(m, d, C).pipe((0, K.U)(H => new me([], H)))
            : this.expandSegment(m, C, d, C.segments, O, !0);
        }
        expandChildren(m, d, C) {
          const O = [];
          for (const H of Object.keys(C.children))
            'primary' === H ? O.unshift(H) : O.push(H);
          return (0, x.D)(O).pipe(
            (0, Ge.b)(H => {
              const Z = C.children[H],
                Ve = vi(d, H);
              return this.expandSegmentGroup(m, Ve, Z, H).pipe(
                (0, K.U)(Dt => ({ segment: Dt, outlet: H })),
              );
            }),
            (0, je.R)((H, Z) => ((H[Z.outlet] = Z.segment), H), {}),
            Re(),
          );
        }
        expandSegment(m, d, C, O, H, Z) {
          return (0, x.D)(C).pipe(
            (0, Ge.b)(Ve =>
              this.expandSegmentAgainstRoute(m, d, C, Ve, O, H, Z).pipe(
                (0, xe.K)(qt => {
                  if (qt instanceof S) return (0, N.of)(null);
                  throw qt;
                }),
              ),
            ),
            wt(Ve => !!Ve),
            (0, xe.K)((Ve, Dt) => {
              if (gr(Ve)) return h(d, O, H) ? (0, N.of)(new me([], {})) : q(d);
              throw Ve;
            }),
          );
        }
        expandSegmentAgainstRoute(m, d, C, O, H, Z, Ve) {
          return B(O, d, H, Z)
            ? void 0 === O.redirectTo
              ? this.matchSegmentAgainstRoute(m, d, O, H, Z)
              : Ve && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(m, d, C, O, H, Z)
              : q(d)
            : q(d);
        }
        expandSegmentAgainstRouteUsingRedirect(m, d, C, O, H, Z) {
          return '**' === O.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(m, C, O, Z)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                m,
                d,
                C,
                O,
                H,
                Z,
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(m, d, C, O) {
          const H = this.applyRedirectCommands([], C.redirectTo, {});
          return C.redirectTo.startsWith('/')
            ? De(H)
            : this.lineralizeSegments(C, H).pipe(
                (0, nt.z)(Z => {
                  const Ve = new me(Z, {});
                  return this.expandSegment(m, Ve, d, Z, O, !1);
                }),
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(m, d, C, O, H, Z) {
          const {
            matched: Ve,
            consumedSegments: Dt,
            remainingSegments: qt,
            positionalParamSegments: on,
          } = Xr(d, O, H);
          if (!Ve) return q(d);
          const Wn = this.applyRedirectCommands(Dt, O.redirectTo, on);
          return O.redirectTo.startsWith('/')
            ? De(Wn)
            : this.lineralizeSegments(O, Wn).pipe(
                (0, nt.z)(ji =>
                  this.expandSegment(m, d, C, ji.concat(qt), Z, !1),
                ),
              );
        }
        matchSegmentAgainstRoute(m, d, C, O, H) {
          return '**' === C.path
            ? ((m = Rr(C, m)),
              C.loadChildren
                ? (C._loadedRoutes
                    ? (0, N.of)({
                        routes: C._loadedRoutes,
                        injector: C._loadedInjector,
                      })
                    : this.configLoader.loadChildren(m, C)
                  ).pipe(
                    (0, K.U)(
                      Ve => (
                        (C._loadedRoutes = Ve.routes),
                        (C._loadedInjector = Ve.injector),
                        new me(O, {})
                      ),
                    ),
                  )
                : (0, N.of)(new me(O, {})))
            : Er(d, C, O, m).pipe(
                (0, ie.w)(
                  ({
                    matched: Z,
                    consumedSegments: Ve,
                    remainingSegments: Dt,
                  }) =>
                    Z
                      ? this.getChildConfig((m = C._injector ?? m), C, O).pipe(
                          (0, nt.z)(on => {
                            const Wn = on.injector ?? m,
                              ji = on.routes,
                              { segmentGroup: Co, slicedSegments: Sr } = Br(
                                d,
                                Ve,
                                Dt,
                                ji,
                              ),
                              zo = new me(Co.segments, Co.children);
                            if (0 === Sr.length && zo.hasChildren())
                              return this.expandChildren(Wn, ji, zo).pipe(
                                (0, K.U)(ss => new me(Ve, ss)),
                              );
                            if (0 === ji.length && 0 === Sr.length)
                              return (0, N.of)(new me(Ve, {}));
                            const dr = si(C) === H;
                            return this.expandSegment(
                              Wn,
                              zo,
                              ji,
                              Sr,
                              dr ? Be : H,
                              !0,
                            ).pipe(
                              (0, K.U)(
                                Yo =>
                                  new me(Ve.concat(Yo.segments), Yo.children),
                              ),
                            );
                          }),
                        )
                      : q(d),
                ),
              );
        }
        getChildConfig(m, d, C) {
          return d.children
            ? (0, N.of)({ routes: d.children, injector: m })
            : d.loadChildren
            ? void 0 !== d._loadedRoutes
              ? (0, N.of)({
                  routes: d._loadedRoutes,
                  injector: d._loadedInjector,
                })
              : (function Yi(f, m, d, C) {
                  const O = m.canLoad;
                  if (void 0 === O || 0 === O.length) return (0, N.of)(!0);
                  const H = O.map(Z => {
                    const Ve = Pi(Z, f);
                    return Bt(
                      (function M(f) {
                        return f && k(f.canLoad);
                      })(Ve)
                        ? Ve.canLoad(m, d)
                        : f.runInContext(() => Ve(m, d)),
                    );
                  });
                  return (0, N.of)(H).pipe(Jn(), Li());
                })(m, d, C).pipe(
                  (0, nt.z)(O =>
                    O
                      ? this.configLoader.loadChildren(m, d).pipe(
                          (0, Ye.b)(H => {
                            (d._loadedRoutes = H.routes),
                              (d._loadedInjector = H.injector);
                          }),
                        )
                      : (function qe(f) {
                          return (0, fe._)(ro(p, 3));
                        })(),
                  ),
                )
            : (0, N.of)({ routes: [], injector: m });
        }
        lineralizeSegments(m, d) {
          let C = [],
            O = d.root;
          for (;;) {
            if (((C = C.concat(O.segments)), 0 === O.numberOfChildren))
              return (0, N.of)(C);
            if (O.numberOfChildren > 1 || !O.children[Be])
              return m.redirectTo, (0, fe._)(new s.vHH(4e3, p));
            O = O.children[Be];
          }
        }
        applyRedirectCommands(m, d, C) {
          return this.applyRedirectCreateUrlTree(
            d,
            this.urlSerializer.parse(d),
            m,
            C,
          );
        }
        applyRedirectCreateUrlTree(m, d, C, O) {
          const H = this.createSegmentGroup(m, d.root, C, O);
          return new de(
            H,
            this.createQueryParams(d.queryParams, this.urlTree.queryParams),
            d.fragment,
          );
        }
        createQueryParams(m, d) {
          const C = {};
          return (
            en(m, (O, H) => {
              if ('string' == typeof O && O.startsWith(':')) {
                const Ve = O.substring(1);
                C[H] = d[Ve];
              } else C[H] = O;
            }),
            C
          );
        }
        createSegmentGroup(m, d, C, O) {
          const H = this.createSegments(m, d.segments, C, O);
          let Z = {};
          return (
            en(d.children, (Ve, Dt) => {
              Z[Dt] = this.createSegmentGroup(m, Ve, C, O);
            }),
            new me(H, Z)
          );
        }
        createSegments(m, d, C, O) {
          return d.map(H =>
            H.path.startsWith(':')
              ? this.findPosParam(m, H, O)
              : this.findOrReturn(H, C),
          );
        }
        findPosParam(m, d, C) {
          const O = C[d.path.substring(1)];
          if (!O) throw new s.vHH(4001, p);
          return O;
        }
        findOrReturn(m, d) {
          let C = 0;
          for (const O of d) {
            if (O.path === m.path) return d.splice(C), O;
            C++;
          }
          return m;
        }
      }
      class sn {}
      class jn {
        constructor(m, d, C, O, H, Z, Ve) {
          (this.injector = m),
            (this.rootComponentType = d),
            (this.config = C),
            (this.urlTree = O),
            (this.url = H),
            (this.paramsInheritanceStrategy = Z),
            (this.urlSerializer = Ve);
        }
        recognize() {
          const m = Br(
            this.urlTree.root,
            [],
            [],
            this.config.filter(d => void 0 === d.redirectTo),
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            m,
            Be,
          ).pipe(
            (0, K.U)(d => {
              if (null === d) return null;
              const C = new mr(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  Be,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {},
                ),
                O = new It(C, d),
                H = new _r(this.url, O);
              return this.inheritParamsAndData(H._root), H;
            }),
          );
        }
        inheritParamsAndData(m) {
          const d = m.value,
            C = pi(d, this.paramsInheritanceStrategy);
          (d.params = Object.freeze(C.params)),
            (d.data = Object.freeze(C.data)),
            m.children.forEach(O => this.inheritParamsAndData(O));
        }
        processSegmentGroup(m, d, C, O) {
          return 0 === C.segments.length && C.hasChildren()
            ? this.processChildren(m, d, C)
            : this.processSegment(m, d, C, C.segments, O);
        }
        processChildren(m, d, C) {
          return (0, x.D)(Object.keys(C.children)).pipe(
            (0, Ge.b)(O => {
              const H = C.children[O],
                Z = vi(d, O);
              return this.processSegmentGroup(m, Z, H, O);
            }),
            (0, je.R)((O, H) => (O && H ? (O.push(...H), O) : null)),
            (0, Le.o)(O => null !== O),
            dt(null),
            Re(),
            (0, K.U)(O => {
              if (null === O) return null;
              const H = ni(O);
              return (
                (function Qn(f) {
                  f.sort((m, d) =>
                    m.value.outlet === Be
                      ? -1
                      : d.value.outlet === Be
                      ? 1
                      : m.value.outlet.localeCompare(d.value.outlet),
                  );
                })(H),
                H
              );
            }),
          );
        }
        processSegment(m, d, C, O, H) {
          return (0, x.D)(d).pipe(
            (0, Ge.b)(Z =>
              this.processSegmentAgainstRoute(Z._injector ?? m, Z, C, O, H),
            ),
            wt(Z => !!Z),
            (0, xe.K)(Z => {
              if (gr(Z)) return h(C, O, H) ? (0, N.of)([]) : (0, N.of)(null);
              throw Z;
            }),
          );
        }
        processSegmentAgainstRoute(m, d, C, O, H) {
          if (d.redirectTo || !B(d, C, O, H)) return (0, N.of)(null);
          let Z;
          if ('**' === d.path) {
            const Ve = O.length > 0 ? wn(O).parameters : {},
              Dt = y(C) + O.length,
              qt = new mr(
                O,
                Ve,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                A(d),
                si(d),
                d.component ?? d._loadedComponent ?? null,
                d,
                Gi(C),
                Dt,
                j(d),
              );
            Z = (0, N.of)({
              snapshot: qt,
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            Z = Er(C, d, O, m).pipe(
              (0, K.U)(
                ({
                  matched: Ve,
                  consumedSegments: Dt,
                  remainingSegments: qt,
                  parameters: on,
                }) => {
                  if (!Ve) return null;
                  const Wn = y(C) + Dt.length;
                  return {
                    snapshot: new mr(
                      Dt,
                      on,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      A(d),
                      si(d),
                      d.component ?? d._loadedComponent ?? null,
                      d,
                      Gi(C),
                      Wn,
                      j(d),
                    ),
                    consumedSegments: Dt,
                    remainingSegments: qt,
                  };
                },
              ),
            );
          return Z.pipe(
            (0, ie.w)(Ve => {
              if (null === Ve) return (0, N.of)(null);
              const {
                snapshot: Dt,
                consumedSegments: qt,
                remainingSegments: on,
              } = Ve;
              m = d._injector ?? m;
              const Wn = d._loadedInjector ?? m,
                ji = (function Ai(f) {
                  return f.children
                    ? f.children
                    : f.loadChildren
                    ? f._loadedRoutes
                    : [];
                })(d),
                { segmentGroup: Co, slicedSegments: Sr } = Br(
                  C,
                  qt,
                  on,
                  ji.filter(dr => void 0 === dr.redirectTo),
                );
              if (0 === Sr.length && Co.hasChildren())
                return this.processChildren(Wn, ji, Co).pipe(
                  (0, K.U)(dr => (null === dr ? null : [new It(Dt, dr)])),
                );
              if (0 === ji.length && 0 === Sr.length)
                return (0, N.of)([new It(Dt, [])]);
              const zo = si(d) === H;
              return this.processSegment(Wn, ji, Co, Sr, zo ? Be : H).pipe(
                (0, K.U)(dr => (null === dr ? null : [new It(Dt, dr)])),
              );
            }),
          );
        }
      }
      function Ui(f) {
        const m = f.value.routeConfig;
        return m && '' === m.path && void 0 === m.redirectTo;
      }
      function ni(f) {
        const m = [],
          d = new Set();
        for (const C of f) {
          if (!Ui(C)) {
            m.push(C);
            continue;
          }
          const O = m.find(H => C.value.routeConfig === H.value.routeConfig);
          void 0 !== O ? (O.children.push(...C.children), d.add(O)) : m.push(C);
        }
        for (const C of d) {
          const O = ni(C.children);
          m.push(new It(C.value, O));
        }
        return m.filter(C => !d.has(C));
      }
      function Gi(f) {
        let m = f;
        for (; m._sourceSegment; ) m = m._sourceSegment;
        return m;
      }
      function y(f) {
        let m = f,
          d = m._segmentIndexShift ?? 0;
        for (; m._sourceSegment; )
          (m = m._sourceSegment), (d += m._segmentIndexShift ?? 0);
        return d - 1;
      }
      function A(f) {
        return f.data || {};
      }
      function j(f) {
        return f.resolve || {};
      }
      function zt(f) {
        return 'string' == typeof f.title || null === f.title;
      }
      function Ht(f) {
        return (0, ie.w)(m => {
          const d = f(m);
          return d ? (0, x.D)(d).pipe((0, K.U)(() => m)) : (0, N.of)(m);
        });
      }
      const gn = new s.OlP('ROUTES');
      let $n = (() => {
        class f {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, s.f3M)(s.Sil));
          }
          loadComponent(d) {
            if (this.componentLoaders.get(d))
              return this.componentLoaders.get(d);
            if (d._loadedComponent) return (0, N.of)(d._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(d);
            const C = Bt(d.loadComponent()).pipe(
                (0, K.U)(ii),
                (0, Ye.b)(H => {
                  this.onLoadEndListener && this.onLoadEndListener(d),
                    (d._loadedComponent = H);
                }),
                (0, ot.x)(() => {
                  this.componentLoaders.delete(d);
                }),
              ),
              O = new ft(C, () => new st.x()).pipe(Ne());
            return this.componentLoaders.set(d, O), O;
          }
          loadChildren(d, C) {
            if (this.childrenLoaders.get(C)) return this.childrenLoaders.get(C);
            if (C._loadedRoutes)
              return (0, N.of)({
                routes: C._loadedRoutes,
                injector: C._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(C);
            const H = this.loadModuleFactoryOrRoutes(C.loadChildren).pipe(
                (0, K.U)(Ve => {
                  this.onLoadEndListener && this.onLoadEndListener(C);
                  let Dt,
                    qt,
                    on = !1;
                  Array.isArray(Ve)
                    ? (qt = Ve)
                    : ((Dt = Ve.create(d).injector),
                      (qt = dn(Dt.get(gn, [], s.XFs.Self | s.XFs.Optional))));
                  return { routes: qt.map(ci), injector: Dt };
                }),
                (0, ot.x)(() => {
                  this.childrenLoaders.delete(C);
                }),
              ),
              Z = new ft(H, () => new st.x()).pipe(Ne());
            return this.childrenLoaders.set(C, Z), Z;
          }
          loadModuleFactoryOrRoutes(d) {
            return Bt(d()).pipe(
              (0, K.U)(ii),
              (0, nt.z)(C =>
                C instanceof s.YKP || Array.isArray(C)
                  ? (0, N.of)(C)
                  : (0, x.D)(this.compiler.compileModuleAsync(C)),
              ),
            );
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function ii(f) {
        return (function gi(f) {
          return f && 'object' == typeof f && 'default' in f;
        })(f)
          ? f.default
          : f;
      }
      let tr = (() => {
        class f {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new st.x()),
              (this.configLoader = (0, s.f3M)($n)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.urlSerializer = (0, s.f3M)(Dn)),
              (this.rootContexts = (0, s.f3M)(Ji)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, N.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = O =>
                this.events.next(new hr(O))),
              (this.configLoader.onLoadStartListener = O =>
                this.events.next(new Hi(O)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(d) {
            const C = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...d, id: C });
          }
          setupNavigations(d) {
            return (
              (this.transitions = new se.X({
                id: 0,
                targetPageId: 0,
                currentUrlTree: d.currentUrlTree,
                currentRawUrl: d.currentUrlTree,
                extractedUrl: d.urlHandlingStrategy.extract(d.currentUrlTree),
                urlAfterRedirects: d.urlHandlingStrategy.extract(
                  d.currentUrlTree,
                ),
                rawUrl: d.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: hi,
                restoredState: null,
                currentSnapshot: d.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: d.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, Ae.h)(C => 0 !== C.id),
                (0, K.U)(C => ({
                  ...C,
                  extractedUrl: d.urlHandlingStrategy.extract(C.rawUrl),
                })),
                (0, ie.w)(C => {
                  let O = !1,
                    H = !1;
                  return (0, N.of)(C).pipe(
                    (0, Ye.b)(Z => {
                      this.currentNavigation = {
                        id: Z.id,
                        initialUrl: Z.rawUrl,
                        extractedUrl: Z.extractedUrl,
                        trigger: Z.source,
                        extras: Z.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, ie.w)(Z => {
                      const Ve = d.browserUrlTree.toString(),
                        Dt =
                          !d.navigated ||
                          Z.extractedUrl.toString() !== Ve ||
                          Ve !== d.currentUrlTree.toString();
                      if (
                        !Dt &&
                        'reload' !==
                          (Z.extras.onSameUrlNavigation ??
                            d.onSameUrlNavigation)
                      ) {
                        const on = '';
                        return (
                          this.events.next(
                            new Ti(Z.id, d.serializeUrl(C.rawUrl), on, 0),
                          ),
                          (d.rawUrlTree = Z.rawUrl),
                          Z.resolve(null),
                          He.E
                        );
                      }
                      if (d.urlHandlingStrategy.shouldProcessUrl(Z.rawUrl))
                        return (
                          Vr(Z.source) && (d.browserUrlTree = Z.extractedUrl),
                          (0, N.of)(Z).pipe(
                            (0, ie.w)(on => {
                              const Wn = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new Ei(
                                    on.id,
                                    this.urlSerializer.serialize(
                                      on.extractedUrl,
                                    ),
                                    on.source,
                                    on.restoredState,
                                  ),
                                ),
                                Wn !== this.transitions?.getValue()
                                  ? He.E
                                  : Promise.resolve(on)
                              );
                            }),
                            (function jt(f, m, d, C) {
                              return (0, ie.w)(O =>
                                (function ht(f, m, d, C, O) {
                                  return new Wt(f, m, d, C, O).apply();
                                })(f, m, d, O.extractedUrl, C).pipe(
                                  (0, K.U)(H => ({
                                    ...O,
                                    urlAfterRedirects: H,
                                  })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              d.config,
                            ),
                            (0, Ye.b)(on => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: on.urlAfterRedirects,
                              }),
                                (C.urlAfterRedirects = on.urlAfterRedirects);
                            }),
                            (function le(f, m, d, C, O) {
                              return (0, nt.z)(H =>
                                (function bn(
                                  f,
                                  m,
                                  d,
                                  C,
                                  O,
                                  H,
                                  Z = 'emptyOnly',
                                ) {
                                  return new jn(f, m, d, C, O, Z, H)
                                    .recognize()
                                    .pipe(
                                      (0, ie.w)(Ve =>
                                        null === Ve
                                          ? (function pn(f) {
                                              return new re.y(m => m.error(f));
                                            })(new sn())
                                          : (0, N.of)(Ve),
                                      ),
                                    );
                                })(
                                  f,
                                  m,
                                  d,
                                  H.urlAfterRedirects,
                                  C.serialize(H.urlAfterRedirects),
                                  C,
                                  O,
                                ).pipe(
                                  (0, K.U)(Z => ({ ...H, targetSnapshot: Z })),
                                ),
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              d.config,
                              this.urlSerializer,
                              d.paramsInheritanceStrategy,
                            ),
                            (0, Ye.b)(on => {
                              if (
                                ((C.targetSnapshot = on.targetSnapshot),
                                'eager' === d.urlUpdateStrategy)
                              ) {
                                if (!on.extras.skipLocationChange) {
                                  const ji = d.urlHandlingStrategy.merge(
                                    on.urlAfterRedirects,
                                    on.rawUrl,
                                  );
                                  d.setBrowserUrl(ji, on);
                                }
                                d.browserUrlTree = on.urlAfterRedirects;
                              }
                              const Wn = new ur(
                                on.id,
                                this.urlSerializer.serialize(on.extractedUrl),
                                this.urlSerializer.serialize(
                                  on.urlAfterRedirects,
                                ),
                                on.targetSnapshot,
                              );
                              this.events.next(Wn);
                            }),
                          )
                        );
                      if (
                        Dt &&
                        d.urlHandlingStrategy.shouldProcessUrl(d.rawUrlTree)
                      ) {
                        const {
                            id: on,
                            extractedUrl: Wn,
                            source: ji,
                            restoredState: Co,
                            extras: Sr,
                          } = Z,
                          zo = new Ei(
                            on,
                            this.urlSerializer.serialize(Wn),
                            ji,
                            Co,
                          );
                        this.events.next(zo);
                        const dr = Fn(Wn, this.rootComponentType).snapshot;
                        return (
                          (C = {
                            ...Z,
                            targetSnapshot: dr,
                            urlAfterRedirects: Wn,
                            extras: {
                              ...Sr,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          }),
                          (0, N.of)(C)
                        );
                      }
                      {
                        const on = '';
                        return (
                          this.events.next(
                            new Ti(Z.id, d.serializeUrl(C.extractedUrl), on, 1),
                          ),
                          (d.rawUrlTree = Z.rawUrl),
                          Z.resolve(null),
                          He.E
                        );
                      }
                    }),
                    (0, Ye.b)(Z => {
                      const Ve = new Oi(
                        Z.id,
                        this.urlSerializer.serialize(Z.extractedUrl),
                        this.urlSerializer.serialize(Z.urlAfterRedirects),
                        Z.targetSnapshot,
                      );
                      this.events.next(Ve);
                    }),
                    (0, K.U)(
                      Z =>
                        (C = {
                          ...Z,
                          guards: Pr(
                            Z.targetSnapshot,
                            Z.currentSnapshot,
                            this.rootContexts,
                          ),
                        }),
                    ),
                    (function Bo(f, m) {
                      return (0, nt.z)(d => {
                        const {
                          targetSnapshot: C,
                          currentSnapshot: O,
                          guards: {
                            canActivateChecks: H,
                            canDeactivateChecks: Z,
                          },
                        } = d;
                        return 0 === Z.length && 0 === H.length
                          ? (0, N.of)({ ...d, guardsResult: !0 })
                          : (function bi(f, m, d, C) {
                              return (0, x.D)(f).pipe(
                                (0, nt.z)(O =>
                                  (function Jo(f, m, d, C, O) {
                                    const H =
                                      m && m.routeConfig
                                        ? m.routeConfig.canDeactivate
                                        : null;
                                    if (!H || 0 === H.length)
                                      return (0, N.of)(!0);
                                    const Z = H.map(Ve => {
                                      const Dt = Kr(m) ?? O,
                                        qt = Pi(Ve, Dt);
                                      return Bt(
                                        (function nn(f) {
                                          return f && k(f.canDeactivate);
                                        })(qt)
                                          ? qt.canDeactivate(f, m, d, C)
                                          : Dt.runInContext(() =>
                                              qt(f, m, d, C),
                                            ),
                                      ).pipe(wt());
                                    });
                                    return (0, N.of)(Z).pipe(Jn());
                                  })(O.component, O.route, d, m, C),
                                ),
                                wt(O => !0 !== O, !0),
                              );
                            })(Z, C, O, f).pipe(
                              (0, nt.z)(Ve =>
                                Ve &&
                                (function I(f) {
                                  return 'boolean' == typeof f;
                                })(Ve)
                                  ? (function yi(f, m, d, C) {
                                      return (0, x.D)(m).pipe(
                                        (0, Ge.b)(O =>
                                          (0, ce.z)(
                                            (function ko(f, m) {
                                              return (
                                                null !== f && m && m(new fr(f)),
                                                (0, N.of)(!0)
                                              );
                                            })(O.route.parent, C),
                                            (function _o(f, m) {
                                              return (
                                                null !== f && m && m(new Mi(f)),
                                                (0, N.of)(!0)
                                              );
                                            })(O.route, C),
                                            (function Xo(f, m, d) {
                                              const C = m[m.length - 1],
                                                H = m
                                                  .slice(0, m.length - 1)
                                                  .reverse()
                                                  .map(Z =>
                                                    (function Io(f) {
                                                      const m = f.routeConfig
                                                        ? f.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return m && 0 !== m.length
                                                        ? { node: f, guards: m }
                                                        : null;
                                                    })(Z),
                                                  )
                                                  .filter(Z => null !== Z)
                                                  .map(Z =>
                                                    (0, he.P)(() => {
                                                      const Ve = Z.guards.map(
                                                        Dt => {
                                                          const qt =
                                                              Kr(Z.node) ?? d,
                                                            on = Pi(Dt, qt);
                                                          return Bt(
                                                            (function et(f) {
                                                              return (
                                                                f &&
                                                                k(
                                                                  f.canActivateChild,
                                                                )
                                                              );
                                                            })(on)
                                                              ? on.canActivateChild(
                                                                  C,
                                                                  f,
                                                                )
                                                              : qt.runInContext(
                                                                  () =>
                                                                    on(C, f),
                                                                ),
                                                          ).pipe(wt());
                                                        },
                                                      );
                                                      return (0, N.of)(Ve).pipe(
                                                        Jn(),
                                                      );
                                                    }),
                                                  );
                                              return (0, N.of)(H).pipe(Jn());
                                            })(f, O.path, d),
                                            (function hs(f, m, d) {
                                              const C = m.routeConfig
                                                ? m.routeConfig.canActivate
                                                : null;
                                              if (!C || 0 === C.length)
                                                return (0, N.of)(!0);
                                              const O = C.map(H =>
                                                (0, he.P)(() => {
                                                  const Z = Kr(m) ?? d,
                                                    Ve = Pi(H, Z);
                                                  return Bt(
                                                    (function G(f) {
                                                      return (
                                                        f && k(f.canActivate)
                                                      );
                                                    })(Ve)
                                                      ? Ve.canActivate(m, f)
                                                      : Z.runInContext(() =>
                                                          Ve(m, f),
                                                        ),
                                                  ).pipe(wt());
                                                }),
                                              );
                                              return (0, N.of)(O).pipe(Jn());
                                            })(f, O.route, d),
                                          ),
                                        ),
                                        wt(O => !0 !== O, !0),
                                      );
                                    })(C, H, f, m)
                                  : (0, N.of)(Ve),
                              ),
                              (0, K.U)(Ve => ({ ...d, guardsResult: Ve })),
                            );
                      });
                    })(this.environmentInjector, Z => this.events.next(Z)),
                    (0, Ye.b)(Z => {
                      if (
                        ((C.guardsResult = Z.guardsResult), Cn(Z.guardsResult))
                      )
                        throw vr(0, Z.guardsResult);
                      const Ve = new oi(
                        Z.id,
                        this.urlSerializer.serialize(Z.extractedUrl),
                        this.urlSerializer.serialize(Z.urlAfterRedirects),
                        Z.targetSnapshot,
                        !!Z.guardsResult,
                      );
                      this.events.next(Ve);
                    }),
                    (0, Ae.h)(
                      Z =>
                        !!Z.guardsResult ||
                        (d.restoreHistory(Z),
                        this.cancelNavigationTransition(Z, '', 3),
                        !1),
                    ),
                    Ht(Z => {
                      if (Z.guards.canActivateChecks.length)
                        return (0, N.of)(Z).pipe(
                          (0, Ye.b)(Ve => {
                            const Dt = new Qi(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(Dt);
                          }),
                          (0, ie.w)(Ve => {
                            let Dt = !1;
                            return (0, N.of)(Ve).pipe(
                              (function tt(f, m) {
                                return (0, nt.z)(d => {
                                  const {
                                    targetSnapshot: C,
                                    guards: { canActivateChecks: O },
                                  } = d;
                                  if (!O.length) return (0, N.of)(d);
                                  let H = 0;
                                  return (0, x.D)(O).pipe(
                                    (0, Ge.b)(Z =>
                                      (function gt(f, m, d, C) {
                                        const O = f.routeConfig,
                                          H = f._resolve;
                                        return (
                                          void 0 !== O?.title &&
                                            !zt(O) &&
                                            (H[Pt] = O.title),
                                          (function rn(f, m, d, C) {
                                            const O = (function zn(f) {
                                              return [
                                                ...Object.keys(f),
                                                ...Object.getOwnPropertySymbols(
                                                  f,
                                                ),
                                              ];
                                            })(f);
                                            if (0 === O.length)
                                              return (0, N.of)({});
                                            const H = {};
                                            return (0, x.D)(O).pipe(
                                              (0, nt.z)(Z =>
                                                (function Rt(f, m, d, C) {
                                                  const O = Kr(m) ?? C,
                                                    H = Pi(f, O);
                                                  return Bt(
                                                    H.resolve
                                                      ? H.resolve(m, d)
                                                      : O.runInContext(() =>
                                                          H(m, d),
                                                        ),
                                                  );
                                                })(f[Z], m, d, C).pipe(
                                                  wt(),
                                                  (0, Ye.b)(Ve => {
                                                    H[Z] = Ve;
                                                  }),
                                                ),
                                              ),
                                              ye(1),
                                              (0, a.h)(H),
                                              (0, xe.K)(Z =>
                                                gr(Z) ? He.E : (0, fe._)(Z),
                                              ),
                                            );
                                          })(H, f, m, C).pipe(
                                            (0, K.U)(
                                              Z => (
                                                (f._resolvedData = Z),
                                                (f.data = pi(f, d).resolve),
                                                O &&
                                                  zt(O) &&
                                                  (f.data[Pt] = O.title),
                                                null
                                              ),
                                            ),
                                          )
                                        );
                                      })(Z.route, C, f, m),
                                    ),
                                    (0, Ye.b)(() => H++),
                                    ye(1),
                                    (0, nt.z)(Z =>
                                      H === O.length ? (0, N.of)(d) : He.E,
                                    ),
                                  );
                                });
                              })(
                                d.paramsInheritanceStrategy,
                                this.environmentInjector,
                              ),
                              (0, Ye.b)({
                                next: () => (Dt = !0),
                                complete: () => {
                                  Dt ||
                                    (d.restoreHistory(Ve),
                                    this.cancelNavigationTransition(Ve, '', 2));
                                },
                              }),
                            );
                          }),
                          (0, Ye.b)(Ve => {
                            const Dt = new Vi(
                              Ve.id,
                              this.urlSerializer.serialize(Ve.extractedUrl),
                              this.urlSerializer.serialize(
                                Ve.urlAfterRedirects,
                              ),
                              Ve.targetSnapshot,
                            );
                            this.events.next(Dt);
                          }),
                        );
                    }),
                    Ht(Z => {
                      const Ve = Dt => {
                        const qt = [];
                        Dt.routeConfig?.loadComponent &&
                          !Dt.routeConfig._loadedComponent &&
                          qt.push(
                            this.configLoader
                              .loadComponent(Dt.routeConfig)
                              .pipe(
                                (0, Ye.b)(on => {
                                  Dt.component = on;
                                }),
                                (0, K.U)(() => {}),
                              ),
                          );
                        for (const on of Dt.children) qt.push(...Ve(on));
                        return qt;
                      };
                      return (0, _e.a)(Ve(Z.targetSnapshot.root)).pipe(
                        dt(),
                        (0, ee.q)(1),
                      );
                    }),
                    Ht(() => this.afterPreactivation()),
                    (0, K.U)(Z => {
                      const Ve = (function po(f, m, d) {
                        const C = zr(f, m._root, d ? d._root : void 0);
                        return new vn(C, m);
                      })(
                        d.routeReuseStrategy,
                        Z.targetSnapshot,
                        Z.currentRouterState,
                      );
                      return (C = { ...Z, targetRouterState: Ve });
                    }),
                    (0, Ye.b)(Z => {
                      (d.currentUrlTree = Z.urlAfterRedirects),
                        (d.rawUrlTree = d.urlHandlingStrategy.merge(
                          Z.urlAfterRedirects,
                          Z.rawUrl,
                        )),
                        (d.routerState = Z.targetRouterState),
                        'deferred' === d.urlUpdateStrategy &&
                          (Z.extras.skipLocationChange ||
                            d.setBrowserUrl(d.rawUrlTree, Z),
                          (d.browserUrlTree = Z.urlAfterRedirects));
                    }),
                    ((f, m, d) =>
                      (0, K.U)(
                        C => (
                          new Dr(
                            m,
                            C.targetRouterState,
                            C.currentRouterState,
                            d,
                          ).activate(f),
                          C
                        ),
                      ))(this.rootContexts, d.routeReuseStrategy, Z =>
                      this.events.next(Z),
                    ),
                    (0, ee.q)(1),
                    (0, Ye.b)({
                      next: Z => {
                        (O = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (d.navigated = !0),
                          this.events.next(
                            new fi(
                              Z.id,
                              this.urlSerializer.serialize(Z.extractedUrl),
                              this.urlSerializer.serialize(d.currentUrlTree),
                            ),
                          ),
                          d.titleStrategy?.updateTitle(
                            Z.targetRouterState.snapshot,
                          ),
                          Z.resolve(!0);
                      },
                      complete: () => {
                        O = !0;
                      },
                    }),
                    (0, ot.x)(() => {
                      O || H || this.cancelNavigationTransition(C, '', 1),
                        this.currentNavigation?.id === C.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, xe.K)(Z => {
                      if (((H = !0), So(Z))) {
                        mo(Z) || ((d.navigated = !0), d.restoreHistory(C, !0));
                        const Ve = new _n(
                          C.id,
                          this.urlSerializer.serialize(C.extractedUrl),
                          Z.message,
                          Z.cancellationCode,
                        );
                        if ((this.events.next(Ve), mo(Z))) {
                          const Dt = d.urlHandlingStrategy.merge(
                              Z.url,
                              d.rawUrlTree,
                            ),
                            qt = {
                              skipLocationChange: C.extras.skipLocationChange,
                              replaceUrl:
                                'eager' === d.urlUpdateStrategy || Vr(C.source),
                            };
                          d.scheduleNavigation(Dt, hi, null, qt, {
                            resolve: C.resolve,
                            reject: C.reject,
                            promise: C.promise,
                          });
                        } else C.resolve(!1);
                      } else {
                        d.restoreHistory(C, !0);
                        const Ve = new $i(
                          C.id,
                          this.urlSerializer.serialize(C.extractedUrl),
                          Z,
                          C.targetSnapshot ?? void 0,
                        );
                        this.events.next(Ve);
                        try {
                          C.resolve(d.errorHandler(Z));
                        } catch (Dt) {
                          C.reject(Dt);
                        }
                      }
                      return He.E;
                    }),
                  );
                }),
              )
            );
          }
          cancelNavigationTransition(d, C, O) {
            const H = new _n(
              d.id,
              this.urlSerializer.serialize(d.extractedUrl),
              C,
              O,
            );
            this.events.next(H), d.resolve(!1);
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      function Vr(f) {
        return f !== hi;
      }
      let Di = (() => {
          class f {
            buildTitle(d) {
              let C,
                O = d.root;
              for (; void 0 !== O; )
                (C = this.getResolvedTitleForRoute(O) ?? C),
                  (O = O.children.find(H => H.outlet === Be));
              return C;
            }
            getResolvedTitleForRoute(d) {
              return d.data[Pt];
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(lr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        lr = (() => {
          class f extends Di {
            constructor(d) {
              super(), (this.title = d);
            }
            updateTitle(d) {
              const C = this.buildTitle(d);
              void 0 !== C && this.title.setTitle(C);
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(s.LFG(Lt.Dx));
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        nr = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(Cs);
              },
              providedIn: 'root',
            })),
            f
          );
        })();
      class bo {
        shouldDetach(m) {
          return !1;
        }
        store(m, d) {}
        shouldAttach(m) {
          return !1;
        }
        retrieve(m) {
          return null;
        }
        shouldReuseRoute(m, d) {
          return m.routeConfig === d.routeConfig;
        }
      }
      let Cs = (() => {
        class f extends bo {}
        return (
          (f.ɵfac = (function () {
            let m;
            return function (C) {
              return (m || (m = s.n5z(f)))(C || f);
            };
          })()),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const es = new s.OlP('', { providedIn: 'root', factory: () => ({}) });
      let ba = (() => {
          class f {}
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: function () {
                return (0, s.f3M)(Jr);
              },
              providedIn: 'root',
            })),
            f
          );
        })(),
        Jr = (() => {
          class f {
            shouldProcessUrl(d) {
              return !0;
            }
            extract(d) {
              return d;
            }
            merge(d, C) {
              return d;
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })();
      function fs(f) {
        throw f;
      }
      function Es(f, m, d) {
        return m.parse('/');
      }
      const Ys = {
          paths: 'exact',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'exact',
        },
        Ms = {
          paths: 'subset',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'subset',
        };
      let ir = (() => {
          class f {
            get navigationId() {
              return this.navigationTransitions.navigationId;
            }
            get browserPageId() {
              if ('computed' === this.canceledNavigationResolution)
                return this.location.getState()?.ɵrouterPageId;
            }
            get events() {
              return this.navigationTransitions.events;
            }
            constructor() {
              (this.disposed = !1),
                (this.currentPageId = 0),
                (this.console = (0, s.f3M)(s.c2e)),
                (this.isNgZoneEnabled = !1),
                (this.options = (0, s.f3M)(es, { optional: !0 }) || {}),
                (this.errorHandler = this.options.errorHandler || fs),
                (this.malformedUriErrorHandler =
                  this.options.malformedUriErrorHandler || Es),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.urlHandlingStrategy = (0, s.f3M)(ba)),
                (this.routeReuseStrategy = (0, s.f3M)(nr)),
                (this.urlCreationStrategy = (0, s.f3M)(We)),
                (this.titleStrategy = (0, s.f3M)(Di)),
                (this.onSameUrlNavigation =
                  this.options.onSameUrlNavigation || 'ignore'),
                (this.paramsInheritanceStrategy =
                  this.options.paramsInheritanceStrategy || 'emptyOnly'),
                (this.urlUpdateStrategy =
                  this.options.urlUpdateStrategy || 'deferred'),
                (this.canceledNavigationResolution =
                  this.options.canceledNavigationResolution || 'replace'),
                (this.config = dn((0, s.f3M)(gn, { optional: !0 }) ?? [])),
                (this.navigationTransitions = (0, s.f3M)(tr)),
                (this.urlSerializer = (0, s.f3M)(Dn)),
                (this.location = (0, s.f3M)(mt.Ye)),
                (this.isNgZoneEnabled =
                  (0, s.f3M)(s.R0b) instanceof s.R0b &&
                  s.R0b.isInAngularZone()),
                this.resetConfig(this.config),
                (this.currentUrlTree = new de()),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.routerState = Fn(this.currentUrlTree, null)),
                this.navigationTransitions.setupNavigations(this).subscribe(
                  d => {
                    (this.lastSuccessfulId = d.id),
                      (this.currentPageId = this.browserPageId ?? 0);
                  },
                  d => {
                    this.console.warn(`Unhandled Navigation Error: ${d}`);
                  },
                );
            }
            resetRootComponentType(d) {
              (this.routerState.root.component = d),
                (this.navigationTransitions.rootComponentType = d);
            }
            initialNavigation() {
              if (
                (this.setUpLocationChangeListener(),
                !this.navigationTransitions.hasRequestedNavigation)
              ) {
                const d = this.location.getState();
                this.navigateToSyncWithBrowser(this.location.path(!0), hi, d);
              }
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe(d => {
                  const C = 'popstate' === d.type ? 'popstate' : 'hashchange';
                  'popstate' === C &&
                    setTimeout(() => {
                      this.navigateToSyncWithBrowser(d.url, C, d.state);
                    }, 0);
                }));
            }
            navigateToSyncWithBrowser(d, C, O) {
              const H = { replaceUrl: !0 },
                Z = O?.navigationId ? O : null;
              if (O) {
                const Dt = { ...O };
                delete Dt.navigationId,
                  delete Dt.ɵrouterPageId,
                  0 !== Object.keys(Dt).length && (H.state = Dt);
              }
              const Ve = this.parseUrl(d);
              this.scheduleNavigation(Ve, C, Z, H);
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.navigationTransitions.currentNavigation;
            }
            resetConfig(d) {
              (this.config = d.map(ci)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.navigationTransitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(),
                  (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(d, C = {}) {
              const {
                  relativeTo: O,
                  queryParams: H,
                  fragment: Z,
                  queryParamsHandling: Ve,
                  preserveFragment: Dt,
                } = C,
                qt = Dt ? this.currentUrlTree.fragment : Z;
              let on = null;
              switch (Ve) {
                case 'merge':
                  on = { ...this.currentUrlTree.queryParams, ...H };
                  break;
                case 'preserve':
                  on = this.currentUrlTree.queryParams;
                  break;
                default:
                  on = H || null;
              }
              return (
                null !== on && (on = this.removeEmptyProps(on)),
                this.urlCreationStrategy.createUrlTree(
                  O,
                  this.routerState,
                  this.currentUrlTree,
                  d,
                  on,
                  qt ?? null,
                )
              );
            }
            navigateByUrl(d, C = { skipLocationChange: !1 }) {
              const O = Cn(d) ? d : this.parseUrl(d),
                H = this.urlHandlingStrategy.merge(O, this.rawUrlTree);
              return this.scheduleNavigation(H, hi, null, C);
            }
            navigate(d, C = { skipLocationChange: !1 }) {
              return (
                (function ya(f) {
                  for (let m = 0; m < f.length; m++) {
                    const d = f[m];
                    if (null == d) throw new s.vHH(4008, false);
                  }
                })(d),
                this.navigateByUrl(this.createUrlTree(d, C), C)
              );
            }
            serializeUrl(d) {
              return this.urlSerializer.serialize(d);
            }
            parseUrl(d) {
              let C;
              try {
                C = this.urlSerializer.parse(d);
              } catch (O) {
                C = this.malformedUriErrorHandler(O, this.urlSerializer, d);
              }
              return C;
            }
            isActive(d, C) {
              let O;
              if (
                ((O = !0 === C ? { ...Ys } : !1 === C ? { ...Ms } : C), Cn(d))
              )
                return ne(this.currentUrlTree, d, O);
              const H = this.parseUrl(d);
              return ne(this.currentUrlTree, H, O);
            }
            removeEmptyProps(d) {
              return Object.keys(d).reduce((C, O) => {
                const H = d[O];
                return null != H && (C[O] = H), C;
              }, {});
            }
            scheduleNavigation(d, C, O, H, Z) {
              if (this.disposed) return Promise.resolve(!1);
              let Ve, Dt, qt, on;
              return (
                Z
                  ? ((Ve = Z.resolve), (Dt = Z.reject), (qt = Z.promise))
                  : (qt = new Promise((Wn, ji) => {
                      (Ve = Wn), (Dt = ji);
                    })),
                (on =
                  'computed' === this.canceledNavigationResolution
                    ? O && O.ɵrouterPageId
                      ? O.ɵrouterPageId
                      : (this.browserPageId ?? 0) + 1
                    : 0),
                this.navigationTransitions.handleNavigationRequest({
                  targetPageId: on,
                  source: C,
                  restoredState: O,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  rawUrl: d,
                  extras: H,
                  resolve: Ve,
                  reject: Dt,
                  promise: qt,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                qt.catch(Wn => Promise.reject(Wn))
              );
            }
            setBrowserUrl(d, C) {
              const O = this.urlSerializer.serialize(d);
              if (
                this.location.isCurrentPathEqualTo(O) ||
                C.extras.replaceUrl
              ) {
                const Z = {
                  ...C.extras.state,
                  ...this.generateNgRouterState(C.id, this.browserPageId),
                };
                this.location.replaceState(O, '', Z);
              } else {
                const H = {
                  ...C.extras.state,
                  ...this.generateNgRouterState(C.id, C.targetPageId),
                };
                this.location.go(O, '', H);
              }
            }
            restoreHistory(d, C = !1) {
              if ('computed' === this.canceledNavigationResolution) {
                const H =
                  this.currentPageId -
                  (this.browserPageId ?? this.currentPageId);
                0 !== H
                  ? this.location.historyGo(H)
                  : this.currentUrlTree ===
                      this.getCurrentNavigation()?.finalUrl &&
                    0 === H &&
                    (this.resetState(d),
                    (this.browserUrlTree = d.currentUrlTree),
                    this.resetUrlToCurrentUrlTree());
              } else
                'replace' === this.canceledNavigationResolution &&
                  (C && this.resetState(d), this.resetUrlToCurrentUrlTree());
            }
            resetState(d) {
              (this.routerState = d.currentRouterState),
                (this.currentUrlTree = d.currentUrlTree),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  d.rawUrl,
                ));
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                '',
                this.generateNgRouterState(
                  this.lastSuccessfulId,
                  this.currentPageId,
                ),
              );
            }
            generateNgRouterState(d, C) {
              return 'computed' === this.canceledNavigationResolution
                ? { navigationId: d, ɵrouterPageId: C }
                : { navigationId: d };
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)();
            }),
            (f.ɵprov = s.Yz7({
              token: f,
              factory: f.ɵfac,
              providedIn: 'root',
            })),
            f
          );
        })(),
        ts = (() => {
          class f {
            constructor(d, C, O, H, Z, Ve) {
              (this.router = d),
                (this.route = C),
                (this.tabIndexAttribute = O),
                (this.renderer = H),
                (this.el = Z),
                (this.locationStrategy = Ve),
                (this._preserveFragment = !1),
                (this._skipLocationChange = !1),
                (this._replaceUrl = !1),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new st.x());
              const Dt = Z.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = 'a' === Dt || 'area' === Dt),
                this.isAnchorElement
                  ? (this.subscription = d.events.subscribe(qt => {
                      qt instanceof fi && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl('0');
            }
            set preserveFragment(d) {
              this._preserveFragment = (0, s.D6c)(d);
            }
            get preserveFragment() {
              return this._preserveFragment;
            }
            set skipLocationChange(d) {
              this._skipLocationChange = (0, s.D6c)(d);
            }
            get skipLocationChange() {
              return this._skipLocationChange;
            }
            set replaceUrl(d) {
              this._replaceUrl = (0, s.D6c)(d);
            }
            get replaceUrl() {
              return this._replaceUrl;
            }
            setTabIndexIfNotOnNativeEl(d) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue('tabindex', d);
            }
            ngOnChanges(d) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(d) {
              null != d
                ? ((this.commands = Array.isArray(d) ? d : [d]),
                  this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(d, C, O, H, Z) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== d ||
                      C ||
                      O ||
                      H ||
                      Z ||
                      ('string' == typeof this.target &&
                        '_self' != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree),
                    )
                  : null;
              const d =
                null === this.href
                  ? null
                  : (0, s.P3R)(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      'href',
                    );
              this.applyAttributeValue('href', d);
            }
            applyAttributeValue(d, C) {
              const O = this.renderer,
                H = this.el.nativeElement;
              null !== C ? O.setAttribute(H, d, C) : O.removeAttribute(H, d);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
          }
          return (
            (f.ɵfac = function (d) {
              return new (d || f)(
                s.Y36(ir),
                s.Y36(Tn),
                s.$8M('tabindex'),
                s.Y36(s.Qsj),
                s.Y36(s.SBq),
                s.Y36(mt.S$),
              );
            }),
            (f.ɵdir = s.lG2({
              type: f,
              selectors: [['', 'routerLink', '']],
              hostVars: 1,
              hostBindings: function (d, C) {
                1 & d &&
                  s.NdJ('click', function (H) {
                    return C.onClick(
                      H.button,
                      H.ctrlKey,
                      H.shiftKey,
                      H.altKey,
                      H.metaKey,
                    );
                  }),
                  2 & d && s.uIk('target', C.target);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                state: 'state',
                relativeTo: 'relativeTo',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                routerLink: 'routerLink',
              },
              standalone: !0,
              features: [s.TTD],
            })),
            f
          );
        })();
      class Gs {}
      let To = (() => {
        class f {
          constructor(d, C, O, H, Z) {
            (this.router = d),
              (this.injector = O),
              (this.preloadingStrategy = H),
              (this.loader = Z);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, Ae.h)(d => d instanceof fi),
                (0, Ge.b)(() => this.preload()),
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(d, C) {
            const O = [];
            for (const H of C) {
              H.providers &&
                !H._injector &&
                (H._injector = (0, s.MMx)(H.providers, d, `Route: ${H.path}`));
              const Z = H._injector ?? d,
                Ve = H._loadedInjector ?? Z;
              ((H.loadChildren && !H._loadedRoutes && void 0 === H.canLoad) ||
                (H.loadComponent && !H._loadedComponent)) &&
                O.push(this.preloadConfig(Z, H)),
                (H.children || H._loadedRoutes) &&
                  O.push(this.processRoutes(Ve, H.children ?? H._loadedRoutes));
            }
            return (0, x.D)(O).pipe((0, Ke.J)());
          }
          preloadConfig(d, C) {
            return this.preloadingStrategy.preload(C, () => {
              let O;
              O =
                C.loadChildren && void 0 === C.canLoad
                  ? this.loader.loadChildren(d, C)
                  : (0, N.of)(null);
              const H = O.pipe(
                (0, nt.z)(Z =>
                  null === Z
                    ? (0, N.of)(void 0)
                    : ((C._loadedRoutes = Z.routes),
                      (C._loadedInjector = Z.injector),
                      this.processRoutes(Z.injector ?? d, Z.routes)),
                ),
              );
              if (C.loadComponent && !C._loadedComponent) {
                const Z = this.loader.loadComponent(C);
                return (0, x.D)([H, Z]).pipe((0, Ke.J)());
              }
              return H;
            });
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(
              s.LFG(ir),
              s.LFG(s.Sil),
              s.LFG(s.lqb),
              s.LFG(Gs),
              s.LFG($n),
            );
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac, providedIn: 'root' })),
          f
        );
      })();
      const ws = new s.OlP('');
      let As = (() => {
        class f {
          constructor(d, C, O, H, Z = {}) {
            (this.urlSerializer = d),
              (this.transitions = C),
              (this.viewportScroller = O),
              (this.zone = H),
              (this.options = Z),
              (this.lastId = 0),
              (this.lastSource = 'imperative'),
              (this.restoredId = 0),
              (this.store = {}),
              (Z.scrollPositionRestoration =
                Z.scrollPositionRestoration || 'disabled'),
              (Z.anchorScrolling = Z.anchorScrolling || 'disabled');
          }
          init() {
            'disabled' !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration('manual'),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof Ei
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = d.navigationTrigger),
                  (this.restoredId = d.restoredState
                    ? d.restoredState.navigationId
                    : 0))
                : d instanceof fi &&
                  ((this.lastId = d.id),
                  this.scheduleScrollEvent(
                    d,
                    this.urlSerializer.parse(d.urlAfterRedirects).fragment,
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe(d => {
              d instanceof or &&
                (d.position
                  ? 'top' === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : 'enabled' === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(d.position)
                  : d.anchor && 'enabled' === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(d.anchor)
                  : 'disabled' !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(d, C) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new or(
                      d,
                      'popstate' === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      C,
                    ),
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (f.ɵfac = function (d) {
            s.$Z();
          }),
          (f.ɵprov = s.Yz7({ token: f, factory: f.ɵfac })),
          f
        );
      })();
      var cr = (() => (
        ((cr = cr || {})[(cr.COMPLETE = 0)] = 'COMPLETE'),
        (cr[(cr.FAILED = 1)] = 'FAILED'),
        (cr[(cr.REDIRECTING = 2)] = 'REDIRECTING'),
        cr
      ))();
      const Uo = !1;
      function yo(f, m) {
        return { ɵkind: f, ɵproviders: m };
      }
      const ms = new s.OlP('', { providedIn: 'root', factory: () => !1 });
      function co() {
        const f = (0, s.f3M)(s.zs3);
        return m => {
          const d = f.get(s.z2F);
          if (m !== d.components[0]) return;
          const C = f.get(ir),
            O = f.get(ks);
          1 === f.get(jo) && C.initialNavigation(),
            f.get(ei, null, s.XFs.Optional)?.setUpPreloading(),
            f.get(ws, null, s.XFs.Optional)?.init(),
            C.resetRootComponentType(d.componentTypes[0]),
            O.closed || (O.next(), O.complete(), O.unsubscribe());
        };
      }
      const ks = new s.OlP(Uo ? 'bootstrap done indicator' : '', {
          factory: () => new st.x(),
        }),
        jo = new s.OlP(Uo ? 'initial navigation' : '', {
          providedIn: 'root',
          factory: () => 1,
        });
      function Ma() {
        let f = [];
        return (
          (f = Uo
            ? [
                {
                  provide: s.Xts,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(ir);
                    return () =>
                      m.events.subscribe(d => {
                        console.group?.(`Router Event: ${d.constructor.name}`),
                          console.log(
                            (function pr(f) {
                              if (!('type' in f))
                                return `Unknown Router Event: ${f.constructor.name}`;
                              switch (f.type) {
                                case 14:
                                  return `ActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 13:
                                  return `ActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 12:
                                  return `ChildActivationEnd(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 11:
                                  return `ChildActivationStart(path: '${
                                    f.snapshot.routeConfig?.path || ''
                                  }')`;
                                case 8:
                                  return `GuardsCheckEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state}, shouldActivate: ${f.shouldActivate})`;
                                case 7:
                                  return `GuardsCheckStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 2:
                                  return `NavigationCancel(id: ${f.id}, url: '${f.url}')`;
                                case 16:
                                  return `NavigationSkipped(id: ${f.id}, url: '${f.url}')`;
                                case 1:
                                  return `NavigationEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}')`;
                                case 3:
                                  return `NavigationError(id: ${f.id}, url: '${f.url}', error: ${f.error})`;
                                case 0:
                                  return `NavigationStart(id: ${f.id}, url: '${f.url}')`;
                                case 6:
                                  return `ResolveEnd(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 5:
                                  return `ResolveStart(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 10:
                                  return `RouteConfigLoadEnd(path: ${f.route.path})`;
                                case 9:
                                  return `RouteConfigLoadStart(path: ${f.route.path})`;
                                case 4:
                                  return `RoutesRecognized(id: ${f.id}, url: '${f.url}', urlAfterRedirects: '${f.urlAfterRedirects}', state: ${f.state})`;
                                case 15:
                                  return `Scroll(anchor: '${
                                    f.anchor
                                  }', position: '${
                                    f.position
                                      ? `${f.position[0]}, ${f.position[1]}`
                                      : null
                                  }')`;
                              }
                            })(d),
                          ),
                          console.log(d),
                          console.groupEnd?.();
                      });
                  },
                },
              ]
            : []),
          yo(1, f)
        );
      }
      const ei = new s.OlP(Uo ? 'router preloader' : '');
      function Xa(f) {
        return yo(0, [
          { provide: ei, useExisting: To },
          { provide: Gs, useExisting: f },
        ]);
      }
      const gs = !1,
        wa = new s.OlP(
          gs ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD',
        ),
        rs = [
          mt.Ye,
          { provide: Dn, useClass: Te },
          ir,
          Ji,
          {
            provide: Tn,
            useFactory: function Ss(f) {
              return f.routerState.root;
            },
            deps: [ir],
          },
          $n,
          gs ? { provide: ms, useValue: !0 } : [],
        ];
      function Aa() {
        return new s.PXZ('Router', ir);
      }
      let tl = (() => {
        class f {
          constructor(d) {}
          static forRoot(d, C) {
            return {
              ngModule: f,
              providers: [
                rs,
                gs && C?.enableTracing ? Ma().ɵproviders : [],
                { provide: gn, multi: !0, useValue: d },
                {
                  provide: wa,
                  useFactory: Sa,
                  deps: [[ir, new s.FiY(), new s.tp0()]],
                },
                { provide: es, useValue: C || {} },
                C?.useHash
                  ? { provide: mt.S$, useClass: mt.Do }
                  : { provide: mt.S$, useClass: mt.b0 },
                {
                  provide: ws,
                  useFactory: () => {
                    const f = (0, s.f3M)(mt.EM),
                      m = (0, s.f3M)(s.R0b),
                      d = (0, s.f3M)(es),
                      C = (0, s.f3M)(tr),
                      O = (0, s.f3M)(Dn);
                    return (
                      d.scrollOffset && f.setOffset(d.scrollOffset),
                      new As(O, C, f, m, d)
                    );
                  },
                },
                C?.preloadingStrategy
                  ? Xa(C.preloadingStrategy).ɵproviders
                  : [],
                { provide: s.PXZ, multi: !0, useFactory: Aa },
                C?.initialNavigation ? Ar(C) : [],
                [
                  { provide: Do, useFactory: co },
                  { provide: s.tb, multi: !0, useExisting: Do },
                ],
              ],
            };
          }
          static forChild(d) {
            return {
              ngModule: f,
              providers: [{ provide: gn, multi: !0, useValue: d }],
            };
          }
        }
        return (
          (f.ɵfac = function (d) {
            return new (d || f)(s.LFG(wa, 8));
          }),
          (f.ɵmod = s.oAB({ type: f })),
          (f.ɵinj = s.cJS({ imports: [Yr] })),
          f
        );
      })();
      function Sa(f) {
        if (gs && f)
          throw new s.vHH(
            4007,
            "The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead.",
          );
        return 'guarded';
      }
      function Ar(f) {
        return [
          'disabled' === f.initialNavigation
            ? yo(3, [
                {
                  provide: s.ip1,
                  multi: !0,
                  useFactory: () => {
                    const m = (0, s.f3M)(ir);
                    return () => {
                      m.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: jo, useValue: 2 },
              ]).ɵproviders
            : [],
          'enabledBlocking' === f.initialNavigation
            ? yo(2, [
                { provide: jo, useValue: 0 },
                {
                  provide: s.ip1,
                  multi: !0,
                  deps: [s.zs3],
                  useFactory: m => {
                    const d = m.get(mt.V_, Promise.resolve());
                    return () =>
                      d.then(
                        () =>
                          new Promise(C => {
                            const O = m.get(ir),
                              H = m.get(ks);
                            (function Ho(f, m) {
                              f.events
                                .pipe(
                                  (0, Ae.h)(
                                    d =>
                                      d instanceof fi ||
                                      d instanceof _n ||
                                      d instanceof $i ||
                                      d instanceof Ti,
                                  ),
                                  (0, K.U)(d =>
                                    d instanceof fi || d instanceof Ti
                                      ? cr.COMPLETE
                                      : d instanceof _n &&
                                        (0 === d.code || 1 === d.code)
                                      ? cr.REDIRECTING
                                      : cr.FAILED,
                                  ),
                                  (0, Ae.h)(d => d !== cr.REDIRECTING),
                                  (0, ee.q)(1),
                                )
                                .subscribe(() => {
                                  m();
                                });
                            })(O, () => {
                              C(!0);
                            }),
                              (m.get(tr).afterPreactivation = () => (
                                C(!0), H.closed ? (0, N.of)(void 0) : H
                              )),
                              O.initialNavigation();
                          }),
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const Do = new s.OlP(gs ? 'Router Initializer' : '');
    },
    8776: (Tt, Pe, D) => {
      D.d(Pe, { eX: () => a, sQ: () => me, GW: () => At, l4: () => ot });
      var s = D(6451),
        x = D(9751),
        N = D(7579),
        se = D(8502),
        te = D(515),
        ue = D(9646),
        _e = D(2843),
        ce = D(576);
      class ae {
        constructor(vt, Je, Et) {
          (this.kind = vt),
            (this.value = Je),
            (this.error = Et),
            (this.hasValue = 'N' === vt);
        }
        observe(vt) {
          return fe(this, vt);
        }
        do(vt, Je, Et) {
          const { kind: ke, value: R, error: b } = this;
          return 'N' === ke ? vt?.(R) : 'E' === ke ? Je?.(b) : Et?.();
        }
        accept(vt, Je, Et) {
          var ke;
          return (0, ce.m)(
            null === (ke = vt) || void 0 === ke ? void 0 : ke.next,
          )
            ? this.observe(vt)
            : this.do(vt, Je, Et);
        }
        toObservable() {
          const { kind: vt, value: Je, error: Et } = this,
            ke =
              'N' === vt
                ? (0, ue.of)(Je)
                : 'E' === vt
                ? (0, _e._)(() => Et)
                : 'C' === vt
                ? te.E
                : 0;
          if (!ke) throw new TypeError(`Unexpected notification kind ${vt}`);
          return ke;
        }
        static createNext(vt) {
          return new ae('N', vt);
        }
        static createError(vt) {
          return new ae('E', void 0, vt);
        }
        static createComplete() {
          return ae.completeNotification;
        }
      }
      function fe(Te, vt) {
        var Je, Et, ke;
        const { kind: R, value: b, error: w } = Te;
        if ('string' != typeof R)
          throw new TypeError('Invalid notification, missing "kind"');
        'N' === R
          ? null === (Je = vt.next) || void 0 === Je || Je.call(vt, b)
          : 'E' === R
          ? null === (Et = vt.error) || void 0 === Et || Et.call(vt, w)
          : null === (ke = vt.complete) || void 0 === ke || ke.call(vt);
      }
      ae.completeNotification = new ae('C');
      var re = D(4482),
        He = D(5403),
        rt = D(4004),
        pt = D(262),
        Ne = D(9300),
        ft = D(8421);
      function st(Te, vt, Je, Et) {
        return (0, re.e)((ke, R) => {
          let b;
          vt && 'function' != typeof vt
            ? ({ duration: Je, element: b, connector: Et } = vt)
            : (b = vt);
          const w = new Map(),
            $ = Yt => {
              w.forEach(Yt), Yt(R);
            },
            z = Yt => $(tn => tn.error(Yt));
          let $e = 0,
            Mt = !1;
          const Xt = new He.Q(
            R,
            Yt => {
              try {
                const tn = Te(Yt);
                let Oe = w.get(tn);
                if (!Oe) {
                  w.set(tn, (Oe = Et ? Et() : new N.x()));
                  const Ce = (function Nt(Yt, tn) {
                    const Oe = new x.y(Ce => {
                      $e++;
                      const Q = tn.subscribe(Ce);
                      return () => {
                        Q.unsubscribe(), 0 == --$e && Mt && Xt.unsubscribe();
                      };
                    });
                    return (Oe.key = Yt), Oe;
                  })(tn, Oe);
                  if ((R.next(Ce), Je)) {
                    const Q = (0, He.x)(
                      Oe,
                      () => {
                        Oe.complete(), Q?.unsubscribe();
                      },
                      void 0,
                      void 0,
                      () => w.delete(tn),
                    );
                    Xt.add((0, ft.Xf)(Je(Ce)).subscribe(Q));
                  }
                }
                Oe.next(b ? b(Yt) : Yt);
              } catch (tn) {
                z(tn);
              }
            },
            () => $(Yt => Yt.complete()),
            z,
            () => w.clear(),
            () => ((Mt = !0), 0 === $e),
          );
          ke.subscribe(Xt);
        });
      }
      var mt = D(5577),
        K = D(6129),
        ee = D(5698),
        X = D(4650),
        Ae = D(1831);
      const nt = { dispatch: !0, functional: !1, useEffectsErrorHandler: !0 },
        dt = '__@ngrx/effects_create__';
      function At(Te, vt = {}) {
        const Je = vt.functional ? Te : Te(),
          Et = { ...nt, ...vt };
        return Object.defineProperty(Je, dt, { value: Et }), Je;
      }
      function Ge(Te) {
        return Object.getPrototypeOf(Te);
      }
      function xe(Te) {
        return 'function' == typeof Te;
      }
      function je(Te) {
        return Te.filter(xe);
      }
      function ye(Te, vt, Je) {
        const Et = Ge(Te).constructor.name,
          ke = (function wt(Te) {
            return (function _t(Te) {
              return Object.getOwnPropertyNames(Te)
                .filter(
                  Et =>
                    !(!Te[Et] || !Te[Et].hasOwnProperty(dt)) &&
                    Te[Et][dt].hasOwnProperty('dispatch'),
                )
                .map(Et => ({ propertyName: Et, ...Te[Et][dt] }));
            })(Te);
          })(Te).map(
            ({ propertyName: R, dispatch: b, useEffectsErrorHandler: w }) => {
              const $ = 'function' == typeof Te[R] ? Te[R]() : Te[R],
                z = w ? Je($, vt) : $;
              return !1 === b
                ? z.pipe((0, se.l)())
                : z
                    .pipe(
                      (function Ue() {
                        return (0, re.e)((Te, vt) => {
                          Te.subscribe(
                            (0, He.x)(
                              vt,
                              Je => {
                                vt.next(ae.createNext(Je));
                              },
                              () => {
                                vt.next(ae.createComplete()), vt.complete();
                              },
                              Je => {
                                vt.next(ae.createError(Je)), vt.complete();
                              },
                            ),
                          );
                        });
                      })(),
                    )
                    .pipe(
                      (0, rt.U)(Mt => ({
                        effect: Te[R],
                        notification: Mt,
                        propertyName: R,
                        sourceName: Et,
                        sourceInstance: Te,
                      })),
                    );
            },
          );
        return (0, s.T)(...ke);
      }
      const Re = 10;
      function Le(Te, vt, Je = Re) {
        return Te.pipe(
          (0, pt.K)(
            Et => (vt && vt.handleError(Et), Je <= 1 ? Te : Le(Te, vt, Je - 1)),
          ),
        );
      }
      let a = (() => {
        class Te extends x.y {
          constructor(Je) {
            super(), Je && (this.source = Je);
          }
          lift(Je) {
            const Et = new Te();
            return (Et.source = this), (Et.operator = Je), Et;
          }
        }
        return (
          (Te.ɵfac = function (Je) {
            return new (Je || Te)(X.LFG(Ae.Y$));
          }),
          (Te.ɵprov = X.Yz7({
            token: Te,
            factory: Te.ɵfac,
            providedIn: 'root',
          })),
          Te
        );
      })();
      function ot(...Te) {
        return (0, Ne.h)(vt =>
          Te.some(Je =>
            'string' == typeof Je ? Je === vt.type : Je.type === vt.type,
          ),
        );
      }
      const Ke = new X.OlP('@ngrx/effects Internal Root Guard'),
        Lt = new X.OlP('@ngrx/effects User Provided Effects'),
        Be = new X.OlP('@ngrx/effects Internal Root Effects'),
        Pt = new X.OlP('@ngrx/effects Internal Root Effects Instances'),
        an = new X.OlP('@ngrx/effects Internal Feature Effects'),
        ut = new X.OlP(
          '@ngrx/effects Internal Feature Effects Instance Groups',
        ),
        Zt = new X.OlP('@ngrx/effects Effects Error Handler', {
          providedIn: 'root',
          factory: () => Le,
        }),
        Ct = '@ngrx/effects/init';
      (0, Ae.PH)(Ct);
      const en = 'ngrxOnIdentifyEffects',
        W = 'ngrxOnInitEffects';
      function ne(Te) {
        return Me(Te, W);
      }
      function Me(Te, vt) {
        return Te && vt in Te && 'function' == typeof Te[vt];
      }
      let ze = (() => {
        class Te extends N.x {
          constructor(Je, Et) {
            super(), (this.errorHandler = Je), (this.effectsErrorHandler = Et);
          }
          addEffects(Je) {
            this.next(Je);
          }
          toActions() {
            return this.pipe(
              st(Je =>
                (function Ye(Te) {
                  return (
                    'Object' !== Te.constructor.name &&
                    'Function' !== Te.constructor.name
                  );
                })(Je)
                  ? Ge(Je)
                  : Je,
              ),
              (0, mt.z)(Je => Je.pipe(st(ve))),
              (0, mt.z)(Je => {
                const Et = Je.pipe(
                    (0, K.z)(R =>
                      (function be(Te, vt) {
                        return Je => {
                          const Et = ye(Je, Te, vt);
                          return (function it(Te) {
                            return Me(Te, 'ngrxOnRunEffects');
                          })(Je)
                            ? Je.ngrxOnRunEffects(Et)
                            : Et;
                        };
                      })(
                        this.errorHandler,
                        this.effectsErrorHandler,
                      )(R),
                    ),
                    (0, rt.U)(
                      R => (
                        (function Qt(Te, vt) {
                          if ('N' === Te.notification.kind) {
                            const Je = Te.notification.value;
                            !(function dn(Te) {
                              return (
                                'function' != typeof Te &&
                                Te &&
                                Te.type &&
                                'string' == typeof Te.type
                              );
                            })(Je) &&
                              vt.handleError(
                                new Error(
                                  `Effect ${(function wn({
                                    propertyName: Te,
                                    sourceInstance: vt,
                                    sourceName: Je,
                                  }) {
                                    const Et = 'function' == typeof vt[Te];
                                    return `"${Je}.${String(Te)}${
                                      Et ? '()' : ''
                                    }"`;
                                  })(
                                    Te,
                                  )} dispatched an invalid action: ${(function Zn(
                                    Te,
                                  ) {
                                    try {
                                      return JSON.stringify(Te);
                                    } catch {
                                      return Te;
                                    }
                                  })(Je)}`,
                                ),
                              );
                          }
                        })(R, this.errorHandler),
                        R.notification
                      ),
                    ),
                    (0, Ne.h)(R => 'N' === R.kind && null != R.value),
                    (function ie() {
                      return (0, re.e)((Te, vt) => {
                        Te.subscribe((0, He.x)(vt, Je => fe(Je, vt)));
                      });
                    })(),
                  ),
                  ke = Je.pipe(
                    (0, ee.q)(1),
                    (0, Ne.h)(ne),
                    (0, rt.U)(R => R.ngrxOnInitEffects()),
                  );
                return (0, s.T)(Et, ke);
              }),
            );
          }
        }
        return (
          (Te.ɵfac = function (Je) {
            return new (Je || Te)(X.LFG(X.qLn), X.LFG(Zt));
          }),
          (Te.ɵprov = X.Yz7({
            token: Te,
            factory: Te.ɵfac,
            providedIn: 'root',
          })),
          Te
        );
      })();
      function ve(Te) {
        return (function Bt(Te) {
          return Me(Te, en);
        })(Te)
          ? Te.ngrxOnIdentifyEffects()
          : '';
      }
      let U = (() => {
          class Te {
            constructor(Je, Et) {
              (this.effectSources = Je),
                (this.store = Et),
                (this.effectsSubscription = null);
            }
            get isStarted() {
              return !!this.effectsSubscription;
            }
            start() {
              this.effectsSubscription ||
                (this.effectsSubscription = this.effectSources
                  .toActions()
                  .subscribe(this.store));
            }
            ngOnDestroy() {
              this.effectsSubscription &&
                (this.effectsSubscription.unsubscribe(),
                (this.effectsSubscription = null));
            }
          }
          return (
            (Te.ɵfac = function (Je) {
              return new (Je || Te)(X.LFG(ze), X.LFG(Ae.yh));
            }),
            (Te.ɵprov = X.Yz7({
              token: Te,
              factory: Te.ɵfac,
              providedIn: 'root',
            })),
            Te
          );
        })(),
        Ie = (() => {
          class Te {
            constructor(Je, Et, ke, R, b, w, $) {
              (this.sources = Je), Et.start();
              for (const z of R) Je.addEffects(z);
              ke.dispatch({ type: Ct });
            }
            addEffects(Je) {
              this.sources.addEffects(Je);
            }
          }
          return (
            (Te.ɵfac = function (Je) {
              return new (Je || Te)(
                X.LFG(ze),
                X.LFG(U),
                X.LFG(Ae.yh),
                X.LFG(Pt),
                X.LFG(Ae.cr, 8),
                X.LFG(Ae.CK, 8),
                X.LFG(Ke, 8),
              );
            }),
            (Te.ɵmod = X.oAB({ type: Te })),
            (Te.ɵinj = X.cJS({})),
            Te
          );
        })(),
        de = (() => {
          class Te {
            constructor(Je, Et, ke, R) {
              const b = Et.flat();
              for (const w of b) Je.addEffects(w);
            }
          }
          return (
            (Te.ɵfac = function (Je) {
              return new (Je || Te)(
                X.LFG(Ie),
                X.LFG(ut),
                X.LFG(Ae.cr, 8),
                X.LFG(Ae.CK, 8),
              );
            }),
            (Te.ɵmod = X.oAB({ type: Te })),
            (Te.ɵinj = X.cJS({})),
            Te
          );
        })(),
        me = (() => {
          class Te {
            static forFeature(...Je) {
              const Et = Je.flat(),
                ke = je(Et);
              return {
                ngModule: de,
                providers: [
                  ke,
                  { provide: an, multi: !0, useValue: Et },
                  { provide: Lt, multi: !0, useValue: [] },
                  { provide: ut, multi: !0, useFactory: pe, deps: [an, Lt] },
                ],
              };
            }
            static forRoot(...Je) {
              const Et = Je.flat(),
                ke = je(Et);
              return {
                ngModule: Ie,
                providers: [
                  ke,
                  { provide: Be, useValue: [Et] },
                  { provide: Ke, useFactory: Xe },
                  { provide: Lt, multi: !0, useValue: [] },
                  { provide: Pt, useFactory: pe, deps: [Be, Lt] },
                ],
              };
            }
          }
          return (
            (Te.ɵfac = function (Je) {
              return new (Je || Te)();
            }),
            (Te.ɵmod = X.oAB({ type: Te })),
            (Te.ɵinj = X.cJS({})),
            Te
          );
        })();
      function pe(Te, vt) {
        const Je = [];
        for (const Et of Te) Je.push(...Et);
        for (const Et of vt) Je.push(...Et);
        return Je.map(Et => (xe(Et) ? (0, X.f3M)(Et) : Et));
      }
      function Xe() {
        const Te = (0, X.f3M)(U, { optional: !0, skipSelf: !0 }),
          vt = (0, X.f3M)(Be, { self: !0 });
        if ((1 !== vt.length || 0 !== vt[0].length) && Te)
          throw new TypeError(
            'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.',
          );
        return 'guarded';
      }
    },
    1831: (Tt, Pe, D) => {
      D.d(Pe, {
        Y$: () => xt,
        yh: () => Et,
        CK: () => or,
        Aw: () => pr,
        cr: () => qi,
        PH: () => Ae,
        Lq: () => Fi,
        P1: () => Ut,
        on: () => Xi,
        Ky: () => nt,
      });
      var s = D(4650),
        x = D(1135),
        N = D(9751),
        se = D(7579),
        te = D(4408),
        _e = D(640);
      const he = new (class ce extends _e.v {})(
        class ue extends te.o {
          constructor(We, Se) {
            super(We, Se), (this.scheduler = We), (this.work = Se);
          }
          schedule(We, Se = 0) {
            return Se > 0
              ? super.schedule(We, Se)
              : ((this.delay = Se),
                (this.state = We),
                this.scheduler.flush(this),
                this);
          }
          execute(We, Se) {
            return Se > 0 || this.closed
              ? super.execute(We, Se)
              : this._execute(We, Se);
          }
          requestAsyncId(We, Se, Ze = 0) {
            return (null != Ze && Ze > 0) || (null == Ze && this.delay > 0)
              ? super.requestAsyncId(We, Se, Ze)
              : (We.flush(this), 0);
          }
        },
      );
      var fe = D(5363),
        re = D(4482),
        He = D(5403),
        Ue = D(8421),
        rt = D(4671),
        pt = D(5032),
        Ne = D(3269),
        st = D(5026),
        mt = D(4004),
        ie = D(1884);
      const ee = {};
      function Ae(J, We) {
        if (((ee[J] = (ee[J] || 0) + 1), 'function' == typeof We))
          return At(J, (...Ze) => ({ ...We(...Ze), type: J }));
        switch (We ? We._as : 'empty') {
          case 'empty':
            return At(J, () => ({ type: J }));
          case 'props':
            return At(J, Ze => ({ ...Ze, type: J }));
          default:
            throw new Error('Unexpected config.');
        }
      }
      function nt() {
        return { _as: 'props', _p: void 0 };
      }
      function At(J, We) {
        return Object.defineProperty(We, 'type', { value: J, writable: !1 });
      }
      const xe = '@ngrx/store/init';
      let je = (() => {
        class J extends x.X {
          constructor() {
            super({ type: xe });
          }
          next(Se) {
            if ('function' == typeof Se)
              throw new TypeError(
                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().",
              );
            if (typeof Se > 'u') throw new TypeError('Actions must be objects');
            if (typeof Se.type > 'u')
              throw new TypeError('Actions must have a type property');
            super.next(Se);
          }
          complete() {}
          ngOnDestroy() {
            super.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)();
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const ye = [je],
        Re = new s.OlP('@ngrx/store Internal Root Guard'),
        Le = new s.OlP('@ngrx/store Internal Initial State'),
        a = new s.OlP('@ngrx/store Initial State'),
        ot = new s.OlP('@ngrx/store Reducer Factory'),
        Ke = new s.OlP('@ngrx/store Internal Reducer Factory Provider'),
        Lt = new s.OlP('@ngrx/store Initial Reducers'),
        Be = new s.OlP('@ngrx/store Internal Initial Reducers'),
        Pt = new s.OlP('@ngrx/store Store Features'),
        an = new s.OlP('@ngrx/store Internal Store Reducers'),
        ut = new s.OlP('@ngrx/store Internal Feature Reducers'),
        Zt = new s.OlP('@ngrx/store Internal Feature Configs'),
        Ct = new s.OlP('@ngrx/store Internal Store Features'),
        yt = new s.OlP('@ngrx/store Internal Feature Reducers Token'),
        Qt = new s.OlP('@ngrx/store Feature Reducers'),
        dn = new s.OlP('@ngrx/store User Provided Meta Reducers'),
        wn = new s.OlP('@ngrx/store Meta Reducers'),
        Zn = new s.OlP('@ngrx/store Internal Resolved Meta Reducers'),
        en = new s.OlP('@ngrx/store User Runtime Checks Config'),
        Bt = new s.OlP('@ngrx/store Internal User Runtime Checks Config'),
        Rn = new s.OlP('@ngrx/store Internal Runtime Checks'),
        it = new s.OlP('@ngrx/store Check if Action types are unique');
      function Me(J, We = {}) {
        const Se = Object.keys(J),
          Ze = {};
        for (let It = 0; It < Se.length; It++) {
          const un = Se[It];
          'function' == typeof J[un] && (Ze[un] = J[un]);
        }
        const St = Object.keys(Ze);
        return function (un, vn) {
          un = void 0 === un ? We : un;
          let Fn = !1;
          const qn = {};
          for (let Tn = 0; Tn < St.length; Tn++) {
            const pi = St[Tn],
              mr = un[pi],
              _r = (0, Ze[pi])(mr, vn);
            (qn[pi] = _r), (Fn = Fn || _r !== mr);
          }
          return Fn ? qn : un;
        };
      }
      function ve(...J) {
        return function (We) {
          if (0 === J.length) return We;
          const Se = J[J.length - 1];
          return J.slice(0, -1).reduceRight((St, It) => It(St), Se(We));
        };
      }
      function be(J, We) {
        return (
          Array.isArray(We) &&
            We.length > 0 &&
            (J = ve.apply(null, [...We, J])),
          (Se, Ze) => {
            const St = J(Se);
            return (It, un) => St((It = void 0 === It ? Ze : It), un);
          }
        );
      }
      new s.OlP('@ngrx/store Root Store Provider'),
        new s.OlP('@ngrx/store Feature State Provider');
      class Ie extends N.y {}
      class de extends je {}
      let pe = (() => {
        class J extends x.X {
          constructor(Se, Ze, St, It) {
            super(It(St, Ze)),
              (this.dispatcher = Se),
              (this.initialState = Ze),
              (this.reducers = St),
              (this.reducerFactory = It);
          }
          get currentReducers() {
            return this.reducers;
          }
          addFeature(Se) {
            this.addFeatures([Se]);
          }
          addFeatures(Se) {
            const Ze = Se.reduce(
              (
                St,
                {
                  reducers: It,
                  reducerFactory: un,
                  metaReducers: vn,
                  initialState: Fn,
                  key: qn,
                },
              ) => {
                const Tn =
                  'function' == typeof It
                    ? (function U(J) {
                        const We =
                          Array.isArray(J) && J.length > 0
                            ? ve(...J)
                            : Se => Se;
                        return (Se, Ze) => (
                          (Se = We(Se)),
                          (St, It) => Se((St = void 0 === St ? Ze : St), It)
                        );
                      })(vn)(It, Fn)
                    : be(un, vn)(It, Fn);
                return (St[qn] = Tn), St;
              },
              {},
            );
            this.addReducers(Ze);
          }
          removeFeature(Se) {
            this.removeFeatures([Se]);
          }
          removeFeatures(Se) {
            this.removeReducers(Se.map(Ze => Ze.key));
          }
          addReducer(Se, Ze) {
            this.addReducers({ [Se]: Ze });
          }
          addReducers(Se) {
            (this.reducers = { ...this.reducers, ...Se }),
              this.updateReducers(Object.keys(Se));
          }
          removeReducer(Se) {
            this.removeReducers([Se]);
          }
          removeReducers(Se) {
            Se.forEach(Ze => {
              this.reducers = (function ze(J, We) {
                return Object.keys(J)
                  .filter(Se => Se !== We)
                  .reduce((Se, Ze) => Object.assign(Se, { [Ze]: J[Ze] }), {});
              })(this.reducers, Ze);
            }),
              this.updateReducers(Se);
          }
          updateReducers(Se) {
            this.next(this.reducerFactory(this.reducers, this.initialState)),
              this.dispatcher.next({
                type: '@ngrx/store/update-reducers',
                features: Se,
              });
          }
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(de), s.LFG(a), s.LFG(Lt), s.LFG(ot));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Xe = [
        pe,
        { provide: Ie, useExisting: pe },
        { provide: de, useExisting: je },
      ];
      let xt = (() => {
        class J extends se.x {
          ngOnDestroy() {
            this.complete();
          }
        }
        return (
          (J.ɵfac = (function () {
            let We;
            return function (Ze) {
              return (We || (We = s.n5z(J)))(Ze || J);
            };
          })()),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const Ot = [xt];
      class Dn extends N.y {}
      let Te = (() => {
        class J extends x.X {
          constructor(Se, Ze, St, It) {
            super(It);
            const vn = Se.pipe((0, fe.Q)(he)).pipe(
                (function ft(...J) {
                  const We = (0, Ne.jO)(J);
                  return (0, re.e)((Se, Ze) => {
                    const St = J.length,
                      It = new Array(St);
                    let un = J.map(() => !1),
                      vn = !1;
                    for (let Fn = 0; Fn < St; Fn++)
                      (0, Ue.Xf)(J[Fn]).subscribe(
                        (0, He.x)(
                          Ze,
                          qn => {
                            (It[Fn] = qn),
                              !vn &&
                                !un[Fn] &&
                                ((un[Fn] = !0),
                                (vn = un.every(rt.y)) && (un = null));
                          },
                          pt.Z,
                        ),
                      );
                    Se.subscribe(
                      (0, He.x)(Ze, Fn => {
                        if (vn) {
                          const qn = [Fn, ...It];
                          Ze.next(We ? We(...qn) : qn);
                        }
                      }),
                    );
                  });
                })(Ze),
              ),
              qn = vn.pipe((0, st.R)(vt, { state: It }));
            this.stateSubscription = qn.subscribe(
              ({ state: Tn, action: pi }) => {
                this.next(Tn), St.next(pi);
              },
            );
          }
          ngOnDestroy() {
            this.stateSubscription.unsubscribe(), this.complete();
          }
        }
        return (
          (J.INIT = xe),
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(je), s.LFG(Ie), s.LFG(xt), s.LFG(a));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      function vt(J = { state: void 0 }, [We, Se]) {
        const { state: Ze } = J;
        return { state: Se(Ze, We), action: We };
      }
      const Je = [Te, { provide: Dn, useExisting: Te }];
      let Et = (() => {
        class J extends N.y {
          constructor(Se, Ze, St) {
            super(),
              (this.actionsObserver = Ze),
              (this.reducerManager = St),
              (this.source = Se);
          }
          select(Se, ...Ze) {
            return R.call(null, Se, ...Ze)(this);
          }
          lift(Se) {
            const Ze = new J(this, this.actionsObserver, this.reducerManager);
            return (Ze.operator = Se), Ze;
          }
          dispatch(Se) {
            this.actionsObserver.next(Se);
          }
          next(Se) {
            this.actionsObserver.next(Se);
          }
          error(Se) {
            this.actionsObserver.error(Se);
          }
          complete() {
            this.actionsObserver.complete();
          }
          addReducer(Se, Ze) {
            this.reducerManager.addReducer(Se, Ze);
          }
          removeReducer(Se) {
            this.reducerManager.removeReducer(Se);
          }
        }
        return (
          (J.ɵfac = function (Se) {
            return new (Se || J)(s.LFG(Dn), s.LFG(je), s.LFG(pe));
          }),
          (J.ɵprov = s.Yz7({ token: J, factory: J.ɵfac })),
          J
        );
      })();
      const ke = [Et];
      function R(J, We, ...Se) {
        return function (St) {
          let It;
          if ('string' == typeof J) {
            const un = [We, ...Se].filter(Boolean);
            It = St.pipe(
              (function K(...J) {
                const We = J.length;
                if (0 === We)
                  throw new Error('list of properties cannot be empty.');
                return (0, mt.U)(Se => {
                  let Ze = Se;
                  for (let St = 0; St < We; St++) {
                    const It = Ze?.[J[St]];
                    if (!(typeof It < 'u')) return;
                    Ze = It;
                  }
                  return Ze;
                });
              })(J, ...un),
            );
          } else {
            if ('function' != typeof J)
              throw new TypeError(
                `Unexpected type '${typeof J}' in select operator, expected 'string' or 'function'`,
              );
            It = St.pipe((0, mt.U)(un => J(un, We)));
          }
          return It.pipe((0, ie.x)());
        };
      }
      const b = 'https://ngrx.io/guide/store/configuration/runtime-checks';
      function w(J) {
        return void 0 === J;
      }
      function $(J) {
        return null === J;
      }
      function z(J) {
        return Array.isArray(J);
      }
      function Nt(J) {
        return 'object' == typeof J && null !== J;
      }
      function Oe(J) {
        return 'function' == typeof J;
      }
      function Kt(J, We) {
        return J === We;
      }
      function Bn(J, We = Kt, Se = Kt) {
        let It,
          Ze = null,
          St = null;
        return {
          memoized: function qn() {
            if (void 0 !== It) return It.result;
            if (!Ze)
              return (St = J.apply(null, arguments)), (Ze = arguments), St;
            if (
              !(function Cn(J, We, Se) {
                for (let Ze = 0; Ze < J.length; Ze++)
                  if (!Se(J[Ze], We[Ze])) return !0;
                return !1;
              })(arguments, Ze, We)
            )
              return St;
            const Tn = J.apply(null, arguments);
            return (Ze = arguments), Se(St, Tn) ? St : ((St = Tn), Tn);
          },
          reset: function un() {
            (Ze = null), (St = null);
          },
          setResult: function vn(Tn) {
            It = { result: Tn };
          },
          clearResult: function Fn() {
            It = void 0;
          },
        };
      }
      function Ut(...J) {
        return (function Ln(J, We = { stateFn: Ii }) {
          return function (...Se) {
            let Ze = Se;
            if (Array.isArray(Ze[0])) {
              const [Tn, ...pi] = Ze;
              Ze = [...Tn, ...pi];
            } else
              1 === Ze.length &&
                (function Ci(J) {
                  return (
                    !!J &&
                    'object' == typeof J &&
                    Object.values(J).every(We => 'function' == typeof We)
                  );
                })(Ze[0]) &&
                (Ze = (function ki(J) {
                  const We = Object.values(J),
                    Se = Object.keys(J);
                  return [
                    ...We,
                    (...St) =>
                      Se.reduce((It, un, vn) => ({ ...It, [un]: St[vn] }), {}),
                  ];
                })(Ze[0]));
            const St = Ze.slice(0, Ze.length - 1),
              It = Ze[Ze.length - 1],
              un = St.filter(
                Tn => Tn.release && 'function' == typeof Tn.release,
              ),
              vn = J(function (...Tn) {
                return It.apply(null, Tn);
              }),
              Fn = Bn(function (Tn, pi) {
                return We.stateFn.apply(null, [Tn, St, pi, vn]);
              });
            return Object.assign(Fn.memoized, {
              release: function qn() {
                Fn.reset(), vn.reset(), un.forEach(Tn => Tn.release());
              },
              projector: vn.memoized,
              setResult: Fn.setResult,
              clearResult: Fn.clearResult,
            });
          };
        })(Bn)(...J);
      }
      function Ii(J, We, Se, Ze) {
        if (void 0 === Se) {
          const It = We.map(un => un(J));
          return Ze.memoized.apply(null, It);
        }
        const St = We.map(It => It(J, Se));
        return Ze.memoized.apply(null, [...St, Se]);
      }
      function ai(J) {
        return J instanceof s.OlP ? (0, s.f3M)(J) : J;
      }
      function xi(J, We) {
        return We.map((Se, Ze) => {
          if (J[Ze] instanceof s.OlP) {
            const St = (0, s.f3M)(J[Ze]);
            return {
              key: Se.key,
              reducerFactory: St.reducerFactory ? St.reducerFactory : Me,
              metaReducers: St.metaReducers ? St.metaReducers : [],
              initialState: St.initialState,
            };
          }
          return Se;
        });
      }
      function Tr(J) {
        return J.map(We => (We instanceof s.OlP ? (0, s.f3M)(We) : We));
      }
      function Bi(J) {
        return 'function' == typeof J ? J() : J;
      }
      function Zi(J, We) {
        return J.concat(We);
      }
      function _i() {
        if ((0, s.f3M)(Et, { optional: !0, skipSelf: !0 }))
          throw new TypeError(
            'The root Store has been provided more than once. Feature modules should provide feature states instead.',
          );
        return 'guarded';
      }
      function fn(J) {
        Object.freeze(J);
        const We = Oe(J);
        return (
          Object.getOwnPropertyNames(J).forEach(Se => {
            if (
              !Se.startsWith('\u0275') &&
              (function Q(J, We) {
                return Object.prototype.hasOwnProperty.call(J, We);
              })(J, Se) &&
              (!We ||
                ('caller' !== Se && 'callee' !== Se && 'arguments' !== Se))
            ) {
              const Ze = J[Se];
              (Nt(Ze) || Oe(Ze)) && !Object.isFrozen(Ze) && fn(Ze);
            }
          }),
          J
        );
      }
      function di(J, We = []) {
        return (w(J) || $(J)) && 0 === We.length
          ? { path: ['root'], value: J }
          : Object.keys(J).reduce((Ze, St) => {
              if (Ze) return Ze;
              const It = J[St];
              return (function Ce(J) {
                return Oe(J) && J.hasOwnProperty('\u0275cmp');
              })(It)
                ? Ze
                : !(
                    w(It) ||
                    $(It) ||
                    (function Xt(J) {
                      return 'number' == typeof J;
                    })(It) ||
                    (function Mt(J) {
                      return 'boolean' == typeof J;
                    })(It) ||
                    (function $e(J) {
                      return 'string' == typeof J;
                    })(It) ||
                    z(It)
                  ) &&
                    ((function tn(J) {
                      if (
                        !(function Yt(J) {
                          return Nt(J) && !z(J);
                        })(J)
                      )
                        return !1;
                      const We = Object.getPrototypeOf(J);
                      return We === Object.prototype || null === We;
                    })(It)
                      ? di(It, [...We, St])
                      : { path: [...We, St], value: It });
            }, !1);
      }
      function ui(J, We) {
        if (!1 === J) return;
        const Se = J.path.join('.'),
          Ze = new Error(
            `Detected unserializable ${We} at "${Se}". ${b}#strict${We}serializability`,
          );
        throw ((Ze.value = J.value), (Ze.unserializablePath = Se), Ze);
      }
      function hi(J) {
        return (0, s.X6Q)()
          ? {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !0,
              strictActionImmutability: !0,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
              ...J,
            }
          : {
              strictStateSerializability: !1,
              strictActionSerializability: !1,
              strictStateImmutability: !1,
              strictActionImmutability: !1,
              strictActionWithinNgZone: !1,
              strictActionTypeUniqueness: !1,
            };
      }
      function An({
        strictActionSerializability: J,
        strictStateSerializability: We,
      }) {
        return Se =>
          J || We
            ? (function Vn(J, We) {
                return function (Se, Ze) {
                  We.action(Ze) && ui(di(Ze), 'action');
                  const St = J(Se, Ze);
                  return We.state() && ui(di(St), 'state'), St;
                };
              })(Se, { action: Ze => J && !fi(Ze), state: () => We })
            : Se;
      }
      function Ei({
        strictActionImmutability: J,
        strictStateImmutability: We,
      }) {
        return Se =>
          J || We
            ? (function $t(J, We) {
                return function (Se, Ze) {
                  const St = We.action(Ze) ? fn(Ze) : Ze,
                    It = J(Se, St);
                  return We.state() ? fn(It) : It;
                };
              })(Se, { action: Ze => J && !fi(Ze), state: () => We })
            : Se;
      }
      function fi(J) {
        return J.type.startsWith('@ngrx');
      }
      function _n({ strictActionWithinNgZone: J }) {
        return We =>
          J
            ? (function Un(J, We) {
                return function (Se, Ze) {
                  if (We.action(Ze) && !s.R0b.isInAngularZone())
                    throw new Error(
                      `Action '${Ze.type}' running outside NgZone. ${b}#strictactionwithinngzone`,
                    );
                  return J(Se, Ze);
                };
              })(We, { action: Se => J && !fi(Se) })
            : We;
      }
      function Ti(J) {
        return [
          { provide: Bt, useValue: J },
          { provide: en, useFactory: ur, deps: [Bt] },
          { provide: Rn, deps: [en], useFactory: hi },
          { provide: wn, multi: !0, deps: [Rn], useFactory: Ei },
          { provide: wn, multi: !0, deps: [Rn], useFactory: An },
          { provide: wn, multi: !0, deps: [Rn], useFactory: _n },
        ];
      }
      function $i() {
        return [{ provide: it, multi: !0, deps: [Rn], useFactory: Oi }];
      }
      function ur(J) {
        return J;
      }
      function Oi(J) {
        if (!J.strictActionTypeUniqueness) return;
        const We = Object.entries(ee)
          .filter(([, Se]) => Se > 1)
          .map(([Se]) => Se);
        if (We.length)
          throw new Error(
            `Action types are registered more than once, ${We.map(
              Se => `"${Se}"`,
            ).join(', ')}. ${b}#strictactiontypeuniqueness`,
          );
      }
      function Qi(J = {}, We = {}) {
        return [
          { provide: Re, useFactory: _i },
          { provide: Le, useValue: We.initialState },
          { provide: a, useFactory: Bi, deps: [Le] },
          { provide: Be, useValue: J },
          { provide: an, useExisting: J instanceof s.OlP ? J : Be },
          { provide: Lt, deps: [Be, [new s.tBr(an)]], useFactory: ai },
          { provide: dn, useValue: We.metaReducers ? We.metaReducers : [] },
          { provide: Zn, deps: [wn, dn], useFactory: Zi },
          { provide: Ke, useValue: We.reducerFactory ? We.reducerFactory : Me },
          { provide: ot, deps: [Ke, Zn], useFactory: be },
          ye,
          Xe,
          Ot,
          Je,
          ke,
          Ti(We.runtimeChecks),
          $i(),
        ];
      }
      function Mi(J, We, Se = {}) {
        return [
          { provide: Zt, multi: !0, useValue: J instanceof Object ? {} : Se },
          {
            provide: Pt,
            multi: !0,
            useValue: {
              key: J instanceof Object ? J.name : J,
              reducerFactory:
                Se instanceof s.OlP || !Se.reducerFactory
                  ? Me
                  : Se.reducerFactory,
              metaReducers:
                Se instanceof s.OlP || !Se.metaReducers ? [] : Se.metaReducers,
              initialState:
                Se instanceof s.OlP || !Se.initialState
                  ? void 0
                  : Se.initialState,
            },
          },
          { provide: Ct, deps: [Zt, Pt], useFactory: xi },
          {
            provide: ut,
            multi: !0,
            useValue: J instanceof Object ? J.reducer : We,
          },
          {
            provide: yt,
            multi: !0,
            useExisting: We instanceof s.OlP ? We : ut,
          },
          {
            provide: Qt,
            multi: !0,
            deps: [ut, [new s.tBr(yt)]],
            useFactory: Tr,
          },
          $i(),
        ];
      }
      let qi = (() => {
          class J {
            constructor(Se, Ze, St, It, un, vn) {}
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(je),
                s.LFG(Ie),
                s.LFG(xt),
                s.LFG(Et),
                s.LFG(Re, 8),
                s.LFG(it, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        or = (() => {
          class J {
            constructor(Se, Ze, St, It, un) {
              (this.features = Se),
                (this.featureReducers = Ze),
                (this.reducerManager = St);
              const vn = Se.map((Fn, qn) => {
                const pi = Ze.shift()[qn];
                return {
                  ...Fn,
                  reducers: pi,
                  initialState: Bi(Fn.initialState),
                };
              });
              St.addFeatures(vn);
            }
            ngOnDestroy() {
              this.reducerManager.removeFeatures(this.features);
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)(
                s.LFG(Ct),
                s.LFG(Qt),
                s.LFG(pe),
                s.LFG(qi),
                s.LFG(it, 8),
              );
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })(),
        pr = (() => {
          class J {
            static forRoot(Se, Ze) {
              return { ngModule: qi, providers: [...Qi(Se, Ze)] };
            }
            static forFeature(Se, Ze, St = {}) {
              return { ngModule: or, providers: [...Mi(Se, Ze, St)] };
            }
          }
          return (
            (J.ɵfac = function (Se) {
              return new (Se || J)();
            }),
            (J.ɵmod = s.oAB({ type: J })),
            (J.ɵinj = s.cJS({})),
            J
          );
        })();
      function Xi(...J) {
        return { reducer: J.pop(), types: J.map(Ze => Ze.type) };
      }
      function Fi(J, ...We) {
        const Se = new Map();
        for (const Ze of We)
          for (const St of Ze.types) {
            const It = Se.get(St);
            Se.set(
              St,
              It ? (vn, Fn) => Ze.reducer(It(vn, Fn), Fn) : Ze.reducer,
            );
          }
        return function (Ze = J, St) {
          const It = Se.get(St.type);
          return It ? It(Ze, St) : Ze;
        };
      }
    },
  },
  Tt => {
    Tt((Tt.s = 4044));
  },
]);
